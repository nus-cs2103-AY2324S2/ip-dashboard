[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ashleyclx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"ashleyclx"},"content":"    private String by;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"ashleyclx"},"content":"    public Deadline(String desc, String by) {","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"ashleyclx"},"content":"        super(desc);","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"ashleyclx"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"ashleyclx"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"ashleyclx"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"ashleyclx"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"ashleyclx"},"content":"        return \"[D][\" + this.getStatusIcon() + \"] \" + this.description + \" (by: \" + this.by + \")\";","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"ashleyclx"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"ashleyclx"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"ashleyclx":12}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ashleyclx"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ashleyclx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"ashleyclx"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"ashleyclx"},"content":"import java.util.Map;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"ashleyclx"},"content":"    private static final String LINE \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ashleyclx"},"content":"    private static final String INDENT \u003d \"    \";","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ashleyclx"},"content":"    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"ashleyclx"},"content":"    private static boolean isRunning \u003d true;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"ashleyclx"},"content":"    public enum Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"ashleyclx"},"content":"        BYE(\"bye\"),","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"ashleyclx"},"content":"        LIST(\"list\"),","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"ashleyclx"},"content":"        MARK(\"mark\"),","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"ashleyclx"},"content":"        UNMARK(\"unmark\"),","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"ashleyclx"},"content":"        DELETE(\"delete\"),","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"ashleyclx"},"content":"        TODO(\"todo\"),","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"ashleyclx"},"content":"        DEADLINE(\"deadline\"),","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"ashleyclx"},"content":"        EVENT(\"event\");","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"ashleyclx"},"content":"        private final String name;","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"ashleyclx"},"content":"        private static final Map\u003cString, Command\u003e COMMAND_MAP \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"ashleyclx"},"content":"        private Command(String name) {","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"ashleyclx"},"content":"            this.name \u003d name;","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"ashleyclx"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"ashleyclx"},"content":"        static {","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"ashleyclx"},"content":"            for (Command c: values()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"ashleyclx"},"content":"                COMMAND_MAP.put(c.name, c);","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"ashleyclx"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"ashleyclx"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"ashleyclx"},"content":"        public static Command valueOfCommandName(String name) {","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"ashleyclx"},"content":"            return COMMAND_MAP.get(name);","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"ashleyclx"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"ashleyclx"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"ashleyclx"},"content":"        Duke.hello();","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"ashleyclx"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"ashleyclx"},"content":"        while (isRunning) {","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"ashleyclx"},"content":"            // get next command and arguments","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"ashleyclx"},"content":"            String input \u003d in.nextLine().trim();","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"ashleyclx"},"content":"            String[] cmdArg \u003d input.split(\" \", 2); // [command, arguments]","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"ashleyclx"},"content":"            System.out.print(LINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"ashleyclx"},"content":"            try {","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"ashleyclx"},"content":"                parseCommand(cmdArg);","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"ashleyclx"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"ashleyclx"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"ashleyclx"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"ashleyclx"},"content":"            System.out.print(LINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"ashleyclx"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"ashleyclx"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"ashleyclx"},"content":"    public static void parseCommand(String[] cmdArg) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"ashleyclx"},"content":"        Command cmd \u003d Command.valueOfCommandName(cmdArg[0]);","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"ashleyclx"},"content":"        // invalid command","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"ashleyclx"},"content":"        if (cmd \u003d\u003d null) {","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"ashleyclx"},"content":"            throw (new DukeException(INDENT + \"What is blud yappin\u0027? Here\u0027s the legit commands:\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"ashleyclx"},"content":"                    + INDENT + \"list, todo, deadline, event, mark, unmark, delete, bye\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"ashleyclx"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"ashleyclx"},"content":"        // Commands","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"ashleyclx"},"content":"        switch (cmd) {","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"ashleyclx"},"content":"        case BYE:","lastModifiedDate":"2024-01-26"},{"lineNumber":73,"author":{"gitId":"ashleyclx"},"content":"            Duke.bye();","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"ashleyclx"},"content":"            break;","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"ashleyclx"},"content":"        case LIST:","lastModifiedDate":"2024-01-26"},{"lineNumber":76,"author":{"gitId":"ashleyclx"},"content":"            listTasks();","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"ashleyclx"},"content":"            break;","lastModifiedDate":"2024-01-26"},{"lineNumber":78,"author":{"gitId":"ashleyclx"},"content":"        case MARK:","lastModifiedDate":"2024-01-26"},{"lineNumber":79,"author":{"gitId":"ashleyclx"},"content":"            // Fallthrough","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"ashleyclx"},"content":"        case UNMARK:","lastModifiedDate":"2024-01-26"},{"lineNumber":81,"author":{"gitId":"ashleyclx"},"content":"            // Fallthrough","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"ashleyclx"},"content":"        case DELETE:","lastModifiedDate":"2024-01-26"},{"lineNumber":83,"author":{"gitId":"ashleyclx"},"content":"            if (cmdArg.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"ashleyclx"},"content":"                try {","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"ashleyclx"},"content":"                    int i \u003d Integer.parseInt(cmdArg[1]);","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"ashleyclx"},"content":"                    // incorrect index","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"ashleyclx"},"content":"                    if (i \u003e tasks.size()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"ashleyclx"},"content":"                        throw (new DukeException(INDENT + \"You ain\u0027t got that many tasks bruh!\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":90,"author":{"gitId":"ashleyclx"},"content":"                    } else if (i \u003c 1) { // incorrect index","lastModifiedDate":"2024-01-26"},{"lineNumber":91,"author":{"gitId":"ashleyclx"},"content":"                        throw (new DukeException(INDENT + \"Start from task 1 lil bro!\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":92,"author":{"gitId":"ashleyclx"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"ashleyclx"},"content":"                    // Execute MARK/UNMARK/DELETE","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"ashleyclx"},"content":"                    if (cmdArg[0].equals(\"mark\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"ashleyclx"},"content":"                        markTask(i);","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"ashleyclx"},"content":"                    } else if (cmdArg[0].equals(\"unmark\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"ashleyclx"},"content":"                        unmarkTask(i);","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"ashleyclx"},"content":"                    } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":100,"author":{"gitId":"ashleyclx"},"content":"                        deleteTask(i);","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"ashleyclx"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"ashleyclx"},"content":"                } catch (java.lang.NumberFormatException e) { // non number typed","lastModifiedDate":"2024-01-26"},{"lineNumber":103,"author":{"gitId":"ashleyclx"},"content":"                    throw (new DukeException(INDENT + \"Ain\u0027t no way! We lackin\u0027 just numbers after mark/unmark/delete.\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":104,"author":{"gitId":"ashleyclx"},"content":"                            + INDENT + \"e.g. unmark 2\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":105,"author":{"gitId":"ashleyclx"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":106,"author":{"gitId":"ashleyclx"},"content":"                    throw (e);","lastModifiedDate":"2024-01-26"},{"lineNumber":107,"author":{"gitId":"ashleyclx"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":108,"author":{"gitId":"ashleyclx"},"content":"            } else { // no arguments","lastModifiedDate":"2024-01-26"},{"lineNumber":109,"author":{"gitId":"ashleyclx"},"content":"                throw (new DukeException(INDENT + \"Ain\u0027t no way! Which task in the list we vibin\u0027 with?\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":110,"author":{"gitId":"ashleyclx"},"content":"                        + INDENT + \"e.g. mark/unmark/delete 1\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":111,"author":{"gitId":"ashleyclx"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":112,"author":{"gitId":"ashleyclx"},"content":"            break;","lastModifiedDate":"2024-01-26"},{"lineNumber":113,"author":{"gitId":"ashleyclx"},"content":"        case TODO:","lastModifiedDate":"2024-01-26"},{"lineNumber":114,"author":{"gitId":"ashleyclx"},"content":"            if (cmdArg.length !\u003d 2) { // no arguments","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"ashleyclx"},"content":"                throw (new DukeException(INDENT + \"Ain\u0027t no way! You got caught lackin\u0027 the format!\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":116,"author":{"gitId":"ashleyclx"},"content":"                        + INDENT + \"e.g. todo \u003ctask\u003e\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":117,"author":{"gitId":"ashleyclx"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":118,"author":{"gitId":"ashleyclx"},"content":"            addTask(cmdArg[1], Task.ID.TODO);","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"ashleyclx"},"content":"            break;","lastModifiedDate":"2024-01-26"},{"lineNumber":120,"author":{"gitId":"ashleyclx"},"content":"        case DEADLINE:","lastModifiedDate":"2024-01-26"},{"lineNumber":121,"author":{"gitId":"ashleyclx"},"content":"            if (cmdArg.length !\u003d 2) { // no arguments","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"ashleyclx"},"content":"                throw (new DukeException(INDENT + \"Ain\u0027t no way! You got caught lackin\u0027 the format!\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":123,"author":{"gitId":"ashleyclx"},"content":"                        + INDENT + \"e.g. deadline \u003ctask\u003e /by \u003cdate/time\u003e\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":124,"author":{"gitId":"ashleyclx"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":125,"author":{"gitId":"ashleyclx"},"content":"            addTask(cmdArg[1], Task.ID.DEADLINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"ashleyclx"},"content":"            break;","lastModifiedDate":"2024-01-26"},{"lineNumber":127,"author":{"gitId":"ashleyclx"},"content":"        case EVENT:","lastModifiedDate":"2024-01-26"},{"lineNumber":128,"author":{"gitId":"ashleyclx"},"content":"            if (cmdArg.length !\u003d 2) { // no arguments","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"ashleyclx"},"content":"                throw (new DukeException(INDENT + \"Ain\u0027t no way! You got caught lackin\u0027 the format!\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":130,"author":{"gitId":"ashleyclx"},"content":"                        + INDENT + \"e.g. event \u003ctask\u003e /from \u003cstart date/time\u003e /to \u003cstart date/time\u003e\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":131,"author":{"gitId":"ashleyclx"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":132,"author":{"gitId":"ashleyclx"},"content":"            addTask(cmdArg[1], Task.ID.EVENT);","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"ashleyclx"},"content":"            break;","lastModifiedDate":"2024-01-26"},{"lineNumber":134,"author":{"gitId":"ashleyclx"},"content":"        default: // Shouldn\u0027t reach here, invalid commands should be null","lastModifiedDate":"2024-01-26"},{"lineNumber":135,"author":{"gitId":"ashleyclx"},"content":"            throw (new DukeException(INDENT + \"What is blud yappin\u0027? Here\u0027s the legit commands:\"","lastModifiedDate":"2024-01-26"},{"lineNumber":136,"author":{"gitId":"ashleyclx"},"content":"                    + INDENT + \"list, todo, deadline, event, mark, unmark, delete, bye\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":137,"author":{"gitId":"ashleyclx"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":138,"author":{"gitId":"ashleyclx"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":139,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":140,"author":{"gitId":"ashleyclx"},"content":"    public static void hello() {","lastModifiedDate":"2024-01-24"},{"lineNumber":141,"author":{"gitId":"ashleyclx"},"content":"        String logo \u003d","lastModifiedDate":"2024-01-26"},{"lineNumber":142,"author":{"gitId":"ashleyclx"},"content":"                \"       :::   :::           :::        :::::::::       :::::::::       ::::::::::       :::::::::\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":143,"author":{"gitId":"ashleyclx"},"content":"                        \"      :+:   :+:         :+: :+:      :+:    :+:      :+:    :+:      :+:              :+:    :+:\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":144,"author":{"gitId":"ashleyclx"},"content":"                        \"      +:+ +:+         +:+   +:+     +:+    +:+      +:+    +:+      +:+              +:+    +:+\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":145,"author":{"gitId":"ashleyclx"},"content":"                        \"      +#++:         +#++:++#++:    +#++:++#+       +#++:++#+       +#++:++#         +#++:++#:\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":146,"author":{"gitId":"ashleyclx"},"content":"                        \"      +#+          +#+     +#+    +#+             +#+             +#+              +#+    +#+\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":147,"author":{"gitId":"ashleyclx"},"content":"                        \"     #+#          #+#     #+#    #+#             #+#             #+#              #+#    #+#\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":148,"author":{"gitId":"ashleyclx"},"content":"                        \"    ###          ###     ###    ###             ###             ##########       ###    ###\\n\\n\";","lastModifiedDate":"2024-01-24"},{"lineNumber":149,"author":{"gitId":"ashleyclx"},"content":"        System.out.print(LINE + \"    What\u0027s poppin\u0027 fam, it\u0027s ya boi\\n\\n\" + logo +","lastModifiedDate":"2024-01-26"},{"lineNumber":150,"author":{"gitId":"ashleyclx"},"content":"                \"    Hit me up with those deets and let\u0027s vibe together!\\n\" + LINE);","lastModifiedDate":"2024-01-26"},{"lineNumber":151,"author":{"gitId":"ashleyclx"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":152,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":153,"author":{"gitId":"ashleyclx"},"content":"    public static void bye() {","lastModifiedDate":"2024-01-24"},{"lineNumber":154,"author":{"gitId":"ashleyclx"},"content":"        System.out.print(INDENT + \"Peace out, fam! Stay lit and keep those good vibes rollin\u0027!\\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":155,"author":{"gitId":"ashleyclx"},"content":"        isRunning \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":156,"author":{"gitId":"ashleyclx"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":157,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":158,"author":{"gitId":"ashleyclx"},"content":"    public static void listTasks() {","lastModifiedDate":"2024-01-29"},{"lineNumber":159,"author":{"gitId":"ashleyclx"},"content":"        System.out.println(INDENT + \"I gotchu bruv. Here\u0027s your list:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":160,"author":{"gitId":"ashleyclx"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":161,"author":{"gitId":"ashleyclx"},"content":"            System.out.println(INDENT + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2024-01-29"},{"lineNumber":162,"author":{"gitId":"ashleyclx"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":164,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":165,"author":{"gitId":"ashleyclx"},"content":"    // add task according to what type they are","lastModifiedDate":"2024-01-26"},{"lineNumber":166,"author":{"gitId":"ashleyclx"},"content":"    // ID \u003d { 0 : Todo, 1 : Deadline, 2 : Event }","lastModifiedDate":"2024-01-26"},{"lineNumber":167,"author":{"gitId":"ashleyclx"},"content":"    public static void addTask(String arg, Task.ID id) throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":168,"author":{"gitId":"ashleyclx"},"content":"        switch (id) {","lastModifiedDate":"2024-01-26"},{"lineNumber":169,"author":{"gitId":"ashleyclx"},"content":"        case TODO:","lastModifiedDate":"2024-01-26"},{"lineNumber":170,"author":{"gitId":"ashleyclx"},"content":"            Todo todo \u003d new Todo(arg);","lastModifiedDate":"2024-01-26"},{"lineNumber":171,"author":{"gitId":"ashleyclx"},"content":"            tasks.add(todo);","lastModifiedDate":"2024-01-26"},{"lineNumber":172,"author":{"gitId":"ashleyclx"},"content":"            System.out.println(INDENT + \"Ayo new task just dropped:\\n  \" + INDENT + todo);","lastModifiedDate":"2024-01-26"},{"lineNumber":173,"author":{"gitId":"ashleyclx"},"content":"            System.out.println(INDENT + \"Yo, we\u0027re \" + tasks.size() + \" task(s) deep! Let\u0027s keep this SIGMA GRINDSET!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":174,"author":{"gitId":"ashleyclx"},"content":"            break;","lastModifiedDate":"2024-01-26"},{"lineNumber":175,"author":{"gitId":"ashleyclx"},"content":"        case DEADLINE: {","lastModifiedDate":"2024-01-26"},{"lineNumber":176,"author":{"gitId":"ashleyclx"},"content":"            String[] descTime \u003d arg.split(\" /by \"); // [description, by]","lastModifiedDate":"2024-01-26"},{"lineNumber":177,"author":{"gitId":"ashleyclx"},"content":"            if (descTime.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-26"},{"lineNumber":178,"author":{"gitId":"ashleyclx"},"content":"                Deadline deadline \u003d new Deadline(descTime[0], descTime[1]);","lastModifiedDate":"2024-01-26"},{"lineNumber":179,"author":{"gitId":"ashleyclx"},"content":"                tasks.add(deadline);","lastModifiedDate":"2024-01-26"},{"lineNumber":180,"author":{"gitId":"ashleyclx"},"content":"                System.out.println(INDENT + \"Ayo new task just dropped:\\n  \" + INDENT + deadline);","lastModifiedDate":"2024-01-26"},{"lineNumber":181,"author":{"gitId":"ashleyclx"},"content":"                System.out.println(INDENT + \"Yo, we\u0027re \" + tasks.size() + \" task(s) deep! Let\u0027s keep this SIGMA GRINDSET!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":182,"author":{"gitId":"ashleyclx"},"content":"            } else { // incorrect formatting for /by","lastModifiedDate":"2024-01-26"},{"lineNumber":183,"author":{"gitId":"ashleyclx"},"content":"                System.out.println(INDENT + \"When you wanna do this task by lil bro?\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":184,"author":{"gitId":"ashleyclx"},"content":"                        + INDENT + \"e.g. deadline \u003ctask\u003e /by \u003cdate/time\u003e\");","lastModifiedDate":"2024-01-26"},{"lineNumber":185,"author":{"gitId":"ashleyclx"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":186,"author":{"gitId":"ashleyclx"},"content":"            break;","lastModifiedDate":"2024-01-26"},{"lineNumber":187,"author":{"gitId":"ashleyclx"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":188,"author":{"gitId":"ashleyclx"},"content":"        case EVENT: {","lastModifiedDate":"2024-01-26"},{"lineNumber":189,"author":{"gitId":"ashleyclx"},"content":"            String[] descTime \u003d arg.split(\" /from \"); // [description, fromTo]","lastModifiedDate":"2024-01-26"},{"lineNumber":190,"author":{"gitId":"ashleyclx"},"content":"            if (descTime.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-26"},{"lineNumber":191,"author":{"gitId":"ashleyclx"},"content":"                String[] fromTo \u003d descTime[1].split(\" /to \"); // [from , to]","lastModifiedDate":"2024-01-26"},{"lineNumber":192,"author":{"gitId":"ashleyclx"},"content":"                if (fromTo.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-26"},{"lineNumber":193,"author":{"gitId":"ashleyclx"},"content":"                    Event event \u003d new Event(descTime[0], fromTo[0], fromTo[1]);","lastModifiedDate":"2024-01-26"},{"lineNumber":194,"author":{"gitId":"ashleyclx"},"content":"                    tasks.add(event);","lastModifiedDate":"2024-01-26"},{"lineNumber":195,"author":{"gitId":"ashleyclx"},"content":"                    System.out.println(INDENT + \"Ayo new task just dropped:\\n  \" + INDENT + event);","lastModifiedDate":"2024-01-26"},{"lineNumber":196,"author":{"gitId":"ashleyclx"},"content":"                    System.out.print(INDENT + \"Yo, we\u0027re \" + tasks.size() + \" task(s) deep! Let\u0027s keep this SIGMA GRINDSET!\\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":197,"author":{"gitId":"ashleyclx"},"content":"                } else { // incorrect formatting for /to","lastModifiedDate":"2024-01-26"},{"lineNumber":198,"author":{"gitId":"ashleyclx"},"content":"                    throw (new DukeException(INDENT + \"When does this event end lil bro?\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":199,"author":{"gitId":"ashleyclx"},"content":"                            + INDENT + \"e.g. event \u003ctask\u003e /from \u003cstart date/time\u003e /to \u003cstart date/time\u003e\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":200,"author":{"gitId":"ashleyclx"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":201,"author":{"gitId":"ashleyclx"},"content":"            } else { // incorrect formatting for /from","lastModifiedDate":"2024-01-26"},{"lineNumber":202,"author":{"gitId":"ashleyclx"},"content":"                throw (new DukeException(INDENT + \"When does this event start lil bro?\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":203,"author":{"gitId":"ashleyclx"},"content":"                        + INDENT + \"e.g. event \u003ctask\u003e /from \u003cstart date/time\u003e /to \u003cstart date/time\u003e\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":204,"author":{"gitId":"ashleyclx"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":205,"author":{"gitId":"ashleyclx"},"content":"            break;","lastModifiedDate":"2024-01-26"},{"lineNumber":206,"author":{"gitId":"ashleyclx"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":207,"author":{"gitId":"ashleyclx"},"content":"        default: // Invalid Task ID","lastModifiedDate":"2024-01-26"},{"lineNumber":208,"author":{"gitId":"ashleyclx"},"content":"            throw (new DukeException(\"Invalid Task ID, user shouldn\u0027t reach here\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":209,"author":{"gitId":"ashleyclx"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":210,"author":{"gitId":"ashleyclx"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":211,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":212,"author":{"gitId":"ashleyclx"},"content":"    public static void markTask(int i) {","lastModifiedDate":"2024-01-29"},{"lineNumber":213,"author":{"gitId":"ashleyclx"},"content":"        Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":214,"author":{"gitId":"ashleyclx"},"content":"        task.markAsDone();","lastModifiedDate":"2024-01-29"},{"lineNumber":215,"author":{"gitId":"ashleyclx"},"content":"        System.out.println(INDENT + \"Yasss King/Queen! This task is officially slayed:\\n  \" + INDENT + task);","lastModifiedDate":"2024-01-29"},{"lineNumber":216,"author":{"gitId":"ashleyclx"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":217,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":218,"author":{"gitId":"ashleyclx"},"content":"    public static void unmarkTask(int i) {","lastModifiedDate":"2024-01-29"},{"lineNumber":219,"author":{"gitId":"ashleyclx"},"content":"        Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":220,"author":{"gitId":"ashleyclx"},"content":"        task.unmark();","lastModifiedDate":"2024-01-29"},{"lineNumber":221,"author":{"gitId":"ashleyclx"},"content":"        System.out.println(INDENT + \"You forgor:\\n  \" + INDENT + task);","lastModifiedDate":"2024-01-29"},{"lineNumber":222,"author":{"gitId":"ashleyclx"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":223,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":224,"author":{"gitId":"ashleyclx"},"content":"    public static void deleteTask(int i) {","lastModifiedDate":"2024-01-29"},{"lineNumber":225,"author":{"gitId":"ashleyclx"},"content":"        Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":226,"author":{"gitId":"ashleyclx"},"content":"        tasks.remove(i - 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":227,"author":{"gitId":"ashleyclx"},"content":"        System.out.println(INDENT + \"Zamn! This task never happened:\\n  \" + INDENT + task);","lastModifiedDate":"2024-01-29"},{"lineNumber":228,"author":{"gitId":"ashleyclx"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ashleyclx":225,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ashleyclx"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"ashleyclx"},"content":"    public DukeException(String e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"ashleyclx"},"content":"        super(e);","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"ashleyclx"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"ashleyclx"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"ashleyclx":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ashleyclx"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"ashleyclx"},"content":"    private String from;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"ashleyclx"},"content":"    private String to;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"ashleyclx"},"content":"    public Event(String desc, String from, String to) {","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"ashleyclx"},"content":"        super(desc);","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"ashleyclx"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"ashleyclx"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"ashleyclx"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"ashleyclx"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"ashleyclx"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"ashleyclx"},"content":"        return \"[E][\" + this.getStatusIcon() + \"] \" + this.description","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"ashleyclx"},"content":"                + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"ashleyclx"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"ashleyclx"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"ashleyclx":15}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ashleyclx"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"ashleyclx"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"ashleyclx"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"ashleyclx"},"content":"    protected enum ID {","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"ashleyclx"},"content":"        TODO,","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"ashleyclx"},"content":"        DEADLINE,","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"ashleyclx"},"content":"        EVENT","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"ashleyclx"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"ashleyclx"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"ashleyclx"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"ashleyclx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"ashleyclx"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"ashleyclx"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"ashleyclx"},"content":"        return isDone ? \"X\" : \" \"; // mark done task with X","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"ashleyclx"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"ashleyclx"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"ashleyclx"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"ashleyclx"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"ashleyclx"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"ashleyclx"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"ashleyclx"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"ashleyclx"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"ashleyclx"},"content":"    public abstract String toString();","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"ashleyclx"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ashleyclx":29}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ashleyclx"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"ashleyclx"},"content":"    public Todo(String desc) {","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"ashleyclx"},"content":"        super(desc);","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"ashleyclx"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"ashleyclx"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"ashleyclx"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"ashleyclx"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"ashleyclx"},"content":"        return \"[T][\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"ashleyclx"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"ashleyclx"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"ashleyclx":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ashleyclx"},"content":"todo cry","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"ashleyclx"},"content":"deadline homework /by tmr morn","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"ashleyclx"},"content":"event party rock /from 6 am /to 7 pm","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"ashleyclx"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"ashleyclx"},"content":"mark 2","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"ashleyclx"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"ashleyclx"},"content":"unmark 2","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"ashleyclx"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"ashleyclx"},"content":"hello","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"ashleyclx"},"content":"bye","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"ashleyclx":10}}]
