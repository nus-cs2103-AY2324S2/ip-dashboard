[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"    mainClass \u003d \"lamball.Lamball\"","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"//    mainClass.set(\"lamball.Lamball\")","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"    archiveFileName \u003d \u0027lamball.jar\u0027","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"//    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"//    archiveClassifier \u003d null","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"//    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ongzhili":6,"-":38}},{"path":"src/main/java/lamball/Lamball.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * Main chat bot class that is tasked with initializing and relaying user inputs to the various classes.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"public class Lamball {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"    public static String indent \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"     * Constructor for Lamball chatbot.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"    public Lamball() {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    private void initialize() {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"        ui.greetingMessage();","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"        Storage.obtainSavedFile(this);","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"     * Constructor for Event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"     * @param msg Command to parse.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"     * @param isInit If the parse is during initialization phase","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"     * @throws LamballParseException if invalid command is provided.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"    public void initParse(String msg, boolean isInit) throws LamballParseException {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"        String[] comd \u003d Parser.parse(msg);","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"        tasks.runComd(comd, isInit);","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"     * Runs Lamball chatbot.","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"    public void run() {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"        boolean isActive \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"        this.initialize();","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"        while (isActive) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"            System.out.print(\"    You:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"            // Echo the user\u0027s command","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"                String[] comd \u003d Parser.parse(userInput);","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"                isActive \u003d tasks.runComd(comd, false);","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"                if (!isActive) {","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"                    ui.goodbyeMessage();","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"                } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"                    ui.displayAction(tasks.lastDoneTask);","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"ongzhili"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"ongzhili"},"content":"            } catch (LamballParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"ongzhili"},"content":"                ui.displayError(e);","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"ongzhili"},"content":"        scanner.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"ongzhili"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"ongzhili"},"content":"        new Lamball().run();","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":77}},{"path":"src/main/java/lamball/LamballParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":" * An exception that is thrown when the user inputs invalid commands.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class LamballParseException extends Exception {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"     * Constructor for Lamball parse exception.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"     * @param message Error message.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"    public LamballParseException(String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"        super(message);","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":17}},{"path":"src/main/java/lamball/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":" *  Contains methods related to parsing user\u0027s inputs.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class Parser {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"     * Parses command into String array in the form command type, arguments.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"     * @param msg Original input command.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"     * @return String array of length 2, containing command type and arguments respectively.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"     * @throws LamballParseException if invalid arguments are parsed.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"    public static String[] parse(String msg) throws LamballParseException {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"        String[] parts \u003d msg.split(\" \", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"        switch (parts[0]) {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"            case \"delete\":","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"            case \"mark\":","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"            case \"unmark\": {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"                if (parts.length \u003c 2 || !parts[1].matches(\"-?\\\\d+\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"                    throw new LamballParseException(\"Invalid number, baa.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"                return parts;","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"            case \"bye\":","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"            case \"list\":","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"                if (parts.length \u003e 1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"                    throw new LamballParseException(\"Do not type anything after \\\"\" + parts[0] + \"\\\"\" );","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"                return parts;","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"            case \"event\": {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"                if (parts.length \u003c 2 || parts[1] \u003d\u003d null || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"                    // Checks if empty string (nothing after command) or only whitespaces","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"                    throw new LamballParseException(\"Your \" + parts[0] + \" field is empty, baaaaka.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"                return parts;","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"            case \"find\": {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"                if (parts.length \u003c 2 || parts[1] \u003d\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"                    throw new LamballParseException(\"Invalid query\");","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"                return parts;","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"            default:","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Sorry, I don\u0027t understaaaaaand your commaaaaand, baa. :(\");","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":53}},{"path":"src/main/java/lamball/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":" * Contains methods that pertain to file access and modification.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"public class Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"    protected String filePath \u003d \"src/main/java/data/list.txt\";","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    protected String tempFilePath \u003d \"src/main/java/data/tempfile.txt\";","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"     * Obtains and initializes list from saved text file locally.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"     * @param lamb Initialized Lamball chatbot instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"    public static void obtainSavedFile(Lamball lamb) {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"        File folder \u003d new File(\"src/main/java/data\");","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"            System.out.println(\"Folder does not exist. Creating folder...\");","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"            folder.mkdirs();","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"        File savedList \u003d new File(\"src/main/java/data/list.txt\");","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"            // Try to create file","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"            if (savedList.createNewFile()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"                System.out.println(\"List created successfully at: \" + savedList.getAbsolutePath());","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"                System.out.println(\"Seems like I haave helped you before, so no new list is needed!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"            initializeListFromText(savedList, lamb);","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"            System.err.println(\"An error occurred while creating the file: \" + e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"    private static void initializeListFromText(File savedList, Lamball lamb) throws FileNotFoundException {","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"        File tempFile \u003d new File(\"src/main/java/data/tempfile.txt\");","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"            // Delete and creates a new tempfile","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"            tempFile.delete();","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"            tempFile.createNewFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"        Scanner scanner \u003d new Scanner(savedList);","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"        System.out.println(\"Initializing saved file...\");","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"ongzhili"},"content":"        while(scanner.hasNext()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"ongzhili"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"ongzhili"},"content":"                // Parses every line of the saved file - if error, deletes line in the file and ignores command","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"ongzhili"},"content":"                String currLine \u003d scanner.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"ongzhili"},"content":"                String[] parts \u003d currLine.split(\" \\\\| \", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"ongzhili"},"content":"                // Means that it is not formatted correctly in the \u003c0 or 1\u003e | \u003ccommand\u003e format","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"ongzhili"},"content":"                if (parts.length !\u003d 2 || !(Integer.valueOf(parts[0]) \u003d\u003d 1 || Integer.valueOf(parts[0]) \u003d\u003d 0)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"ongzhili"},"content":"                    throw new LamballParseException(\"Corrupt format, ignoring...\");","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"ongzhili"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"ongzhili"},"content":"                lamb.initParse(parts[1], true);","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"ongzhili"},"content":"                count++;","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"ongzhili"},"content":"                // Marks task if first character is 1. Else does not.","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"ongzhili"},"content":"                if (Integer.valueOf(parts[0]) \u003d\u003d 1) {","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"ongzhili"},"content":"                    lamb.initParse(\"mark \" + count, true);","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"ongzhili"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"ongzhili"},"content":"                // If code reaches here, means that the line is valid - write to temp file","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"ongzhili"},"content":"                Storage.writeToFile(\"src/main/java/data/tempfile.txt\", currLine);","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"ongzhili"},"content":"            } catch (LamballParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"ongzhili"},"content":"                // Ignores line","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"ongzhili"},"content":"                System.out.println(\"Corrupt format, ignoring...\");","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"ongzhili"},"content":"        scanner.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"ongzhili"},"content":"        System.out.println(\"Done!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"ongzhili"},"content":"        savedList.delete();","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"ongzhili"},"content":"        tempFile.renameTo(savedList);","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"ongzhili"},"content":"     * Replaces specified line in text file.","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"ongzhili"},"content":"     * @param toWrite Replacement line.","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"ongzhili"},"content":"     * @param index Index of line to replace.","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"ongzhili"},"content":"    public static void replaceLine(String toWrite, int index) {","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"ongzhili"},"content":"        String filePath \u003d \"src/main/java/data/list.txt\";","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"ongzhili"},"content":"            // Read all lines from the file","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"ongzhili"},"content":"            Path path \u003d Paths.get(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"ongzhili"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"ongzhili"},"content":"            // Check if the index is valid","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"ongzhili"},"content":"            if (index \u003e\u003d 0 \u0026\u0026 index \u003c lines.size()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"ongzhili"},"content":"                // Replace the line at the specified index","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"ongzhili"},"content":"                lines.set(index, toWrite);","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"ongzhili"},"content":"                // Write the modified content back to the file","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"ongzhili"},"content":"                Files.write(path, lines);","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"ongzhili"},"content":"                // System.out.println(\"Line \" + index + \" replaced successfully.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"ongzhili"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"ongzhili"},"content":"                // System.err.println(\"aaaaaaa\");","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"ongzhili"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"ongzhili"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"ongzhili"},"content":"     * Deletes specified line in text file.","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"ongzhili"},"content":"     * @param index Index of line to delete.","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"ongzhili"},"content":"    public static void deleteLine(int index) {","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"ongzhili"},"content":"        String filePath \u003d \"src/main/java/data/list.txt\";","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"ongzhili"},"content":"            // Read all lines from the file","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"ongzhili"},"content":"            Path path \u003d Paths.get(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"ongzhili"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"ongzhili"},"content":"            // Check if the index is valid","lastModifiedDate":"2024-01-29"},{"lineNumber":136,"author":{"gitId":"ongzhili"},"content":"            if (index \u003e\u003d 0 \u0026\u0026 index \u003c lines.size()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"ongzhili"},"content":"                // Remove the line at the specified index","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"ongzhili"},"content":"                lines.remove(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":140,"author":{"gitId":"ongzhili"},"content":"                // Write the modified content back to the file","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"ongzhili"},"content":"                Files.write(path, lines);","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"ongzhili"},"content":"                // System.out.println(\"Line \" + index + \" deleted successfully.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"ongzhili"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":145,"author":{"gitId":"ongzhili"},"content":"                System.err.println(\"Invalid line number.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":146,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":147,"author":{"gitId":"ongzhili"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":148,"author":{"gitId":"ongzhili"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":149,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":150,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":151,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"ongzhili"},"content":"     * Replaces specified line in text file.","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"ongzhili"},"content":"     * @param filePath File path of the text file.","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"ongzhili"},"content":"     * @param toAdd Line to be appended to the text file.","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"ongzhili"},"content":"    public static void writeToFile(String filePath, String toAdd) {","lastModifiedDate":"2024-01-29"},{"lineNumber":159,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":160,"author":{"gitId":"ongzhili"},"content":"            FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2024-01-29"},{"lineNumber":161,"author":{"gitId":"ongzhili"},"content":"            fw.write(toAdd + System.lineSeparator());","lastModifiedDate":"2024-01-29"},{"lineNumber":162,"author":{"gitId":"ongzhili"},"content":"            fw.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":163,"author":{"gitId":"ongzhili"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":164,"author":{"gitId":"ongzhili"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":165,"author":{"gitId":"ongzhili"},"content":"            System.out.println(\"Save Failed: \" + e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":166,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":167,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":168,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":169,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":170,"author":{"gitId":"ongzhili"},"content":"     * Replaces specified line in text file. Default hardcoded path provided.","lastModifiedDate":"2024-01-31"},{"lineNumber":171,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":172,"author":{"gitId":"ongzhili"},"content":"     * @param toAdd Line to be appended to the text file.","lastModifiedDate":"2024-01-31"},{"lineNumber":173,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":174,"author":{"gitId":"ongzhili"},"content":"    public static void writeToFile(String toAdd) {","lastModifiedDate":"2024-01-29"},{"lineNumber":175,"author":{"gitId":"ongzhili"},"content":"        String filePath \u003d \"src/main/java/data/list.txt\";","lastModifiedDate":"2024-01-29"},{"lineNumber":176,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":177,"author":{"gitId":"ongzhili"},"content":"            FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2024-01-29"},{"lineNumber":178,"author":{"gitId":"ongzhili"},"content":"            fw.write(toAdd + System.lineSeparator());","lastModifiedDate":"2024-01-29"},{"lineNumber":179,"author":{"gitId":"ongzhili"},"content":"            fw.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":180,"author":{"gitId":"ongzhili"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":181,"author":{"gitId":"ongzhili"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":182,"author":{"gitId":"ongzhili"},"content":"            System.out.println(\"Save Failed: \" + e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":183,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":184,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":185,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":186,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":186}},{"path":"src/main/java/lamball/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import lamball.task.Deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"import lamball.task.Event;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import lamball.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"import lamball.task.ToDo;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":" * A class that handles the to-do list operations.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"public class TaskList {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"    private final String INDENT \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    String lastDoneTask;","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"     * Constructor for TaskList","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"        this.lastDoneTask \u003d \"\";","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"    private void printList(ArrayList\u003cTask\u003e lst) {","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"        String listStr \u003d \"    Here aaaaare the taaaasks in your list:\";","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"        for(int i \u003d 0; i \u003c lst.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"            listStr +\u003d \"\\n    \" + (i + 1) + \". \" + lst.get(i).toString() + \"\";","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"        lastDoneTask \u003d listStr;","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"    private boolean mark(String[] parts, boolean isInit) throws LamballParseException {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"        // Checks if index is within range of list","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"        int idx \u003d Integer.valueOf(parts[1]) - 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"        if (idx \u003e\u003d tasks.size() || idx \u003c 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"            throw new LamballParseException(\"Taaask index out of range, baa.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"        Task temp \u003d tasks.get(idx);","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"        temp.mark();","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"        lastDoneTask \u003d \"I have maaarked the task as done:\\n\" + \"    \" + temp.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"        if (!isInit) {","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"            Storage.replaceLine(\"1 | \" + temp.command(), idx);","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"    private boolean unMark(String[] parts) throws LamballParseException {","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"        // Checks if index is within range of list","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"        int idx \u003d Integer.valueOf(parts[1]) - 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"        if (idx \u003e\u003d tasks.size() || idx \u003c 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"            throw new LamballParseException(\"Taaask index out of range, baa.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"        Task temp \u003d tasks.get(idx);","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"ongzhili"},"content":"        temp.unMark();","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"ongzhili"},"content":"        lastDoneTask \u003d \"I have maaarked the task as undone:\\n\" + \"    \" + temp.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"ongzhili"},"content":"        Storage.replaceLine(\"0 | \" + temp.command(), idx);","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"ongzhili"},"content":"    private boolean toDo(String[] parts, boolean isInit) throws LamballParseException {","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"ongzhili"},"content":"        Task temp \u003d new ToDo(parts[1]);","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"ongzhili"},"content":"        tasks.add(temp);","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"ongzhili"},"content":"        lastDoneTask \u003d \"Added ToDo:\\n        \" + temp.toString() + \"\\n    Now you have \" + tasks.size()","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"ongzhili"},"content":"                + \" tasks in the list.\";","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"ongzhili"},"content":"        if (!isInit) {","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"ongzhili"},"content":"            Storage.writeToFile(\"0 | \" + temp.command());","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"ongzhili"},"content":"    private boolean deadline(String[] parts, boolean isInit) throws LamballParseException {","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"ongzhili"},"content":"        String[] furtherSplit \u003d parts[1].split(\" /\", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"ongzhili"},"content":"        if (furtherSplit.length \u003c 2 || !furtherSplit[1].substring(0,3).equals(\"by \")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"ongzhili"},"content":"            throw new LamballParseException(\"Deadline is in the wrong formaaaaaaat, baa. :(\\n    Correct fo\" + \"rmaaat \" +","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"ongzhili"},"content":"                    \"is: deadline \u003cname\u003e /by \u003ctime\u003e, baa.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"ongzhili"},"content":"            Task temp \u003d new Deadline(furtherSplit[0], furtherSplit[1].replaceFirst(\"by \", \"\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"ongzhili"},"content":"            tasks.add(temp);","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"ongzhili"},"content":"            lastDoneTask \u003d \"Added Deadline:\\n        \" + temp.toString() + \"\\n    Now you have \" +","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"ongzhili"},"content":"                    tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"ongzhili"},"content":"            if (!isInit) {","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"ongzhili"},"content":"                Storage.writeToFile(\"0 | \" + temp.command());","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"ongzhili"},"content":"            return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"ongzhili"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"ongzhili"},"content":"            throw new LamballParseException(\"Date is in the wrong formaaaaaaat, baa. :(\\n    Correct fo\" + \"rmaaat is: \" +","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"ongzhili"},"content":"                    \"yyyy-mm-dd (e.g 2001-01-20)\");","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"ongzhili"},"content":"    private boolean event(String[] parts, boolean isInit) throws LamballParseException {","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"ongzhili"},"content":"        String[] furtherSplit \u003d parts[1].split(\" /\", 3);","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"ongzhili"},"content":"        if (furtherSplit.length \u003c 3 || !furtherSplit[1].substring(0,5).equals(\"from \") ||","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"ongzhili"},"content":"                !furtherSplit[2].substring(0,3).equals(\"to \")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"ongzhili"},"content":"            throw new LamballParseException(\"Event is in the wrong formaaaaaaat, baa. :(\\n    Correct \" +","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"ongzhili"},"content":"                    \"formaaat is: event \u003cname\u003e /from \u003ctime\u003e /to \u003ctime\u003e, baa.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"ongzhili"},"content":"            Task temp \u003d new Event(furtherSplit[0], furtherSplit[1].replaceFirst(\"from \", \"\"),","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"ongzhili"},"content":"                    furtherSplit[2].replaceFirst(\"to \", \"\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"ongzhili"},"content":"            tasks.add(temp);","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"ongzhili"},"content":"            lastDoneTask \u003d \"Added Event:\\n        \" + temp.toString() + \"\\n    Now you have \"","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"ongzhili"},"content":"                    + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"ongzhili"},"content":"            if (!isInit) {","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"ongzhili"},"content":"                Storage.writeToFile(\"0 | \" + temp.command());","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"ongzhili"},"content":"            return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"ongzhili"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"ongzhili"},"content":"            throw new LamballParseException(\"Dates are in the wrong formaaaaaaat, baa. :(\\n    Correct fo\" +","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"ongzhili"},"content":"                    \"rmaaat is: yyyy-mm-dd (e.g 2001-01-20)\");","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"ongzhili"},"content":"    private boolean deleteFromList(String[] parts) throws LamballParseException {","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"ongzhili"},"content":"        // Checks if index is within range of list","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"ongzhili"},"content":"        int idx \u003d Integer.valueOf(parts[1]) - 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"ongzhili"},"content":"        if (idx \u003e\u003d tasks.size() || idx \u003c 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"ongzhili"},"content":"            throw new LamballParseException(\"Taaask index out of range, baa.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"ongzhili"},"content":"        Task temp \u003d tasks.remove(idx);","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"ongzhili"},"content":"        Storage.deleteLine(idx);","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"ongzhili"},"content":"        lastDoneTask \u003d \"I have removed this taaask:\\n\" + \"        \" + temp.toString() + \"\\n    Now you have \"","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"ongzhili"},"content":"                + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":135,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":137,"author":{"gitId":"ongzhili"},"content":"    private boolean find(String[] parts) throws LamballParseException {","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"ongzhili"},"content":"        ArrayList\u003cTask\u003e positives \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"ongzhili"},"content":"        for (Task temp : tasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"ongzhili"},"content":"            if (temp.containing(parts[1])) {","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"ongzhili"},"content":"                positives.add(temp);","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"ongzhili"},"content":"        printList(positives);","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"ongzhili"},"content":"     * Runs the command when provided with the parsed format.","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"ongzhili"},"content":"     * @param command 2 Element string array in the format command type, arguments","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"ongzhili"},"content":"     * @param isInit Whether this marking was during the initialization process.","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"ongzhili"},"content":"     * @return Boolean indicating whether to keep the chatbot active after the command.","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"ongzhili"},"content":"     * @throws LamballParseException if invalid arguments provided.","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"ongzhili"},"content":"    public boolean runComd(String[] command, boolean isInit) throws LamballParseException {","lastModifiedDate":"2024-01-30"},{"lineNumber":157,"author":{"gitId":"ongzhili"},"content":"        switch(command[0]) {","lastModifiedDate":"2024-01-30"},{"lineNumber":158,"author":{"gitId":"ongzhili"},"content":"            case \"mark\": {","lastModifiedDate":"2024-01-30"},{"lineNumber":159,"author":{"gitId":"ongzhili"},"content":"                mark(command, isInit);","lastModifiedDate":"2024-01-30"},{"lineNumber":160,"author":{"gitId":"ongzhili"},"content":"                return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":161,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":162,"author":{"gitId":"ongzhili"},"content":"            case \"unmark\": {","lastModifiedDate":"2024-01-30"},{"lineNumber":163,"author":{"gitId":"ongzhili"},"content":"                unMark(command);","lastModifiedDate":"2024-01-30"},{"lineNumber":164,"author":{"gitId":"ongzhili"},"content":"                return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":165,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":166,"author":{"gitId":"ongzhili"},"content":"            case \"bye\": {","lastModifiedDate":"2024-01-30"},{"lineNumber":167,"author":{"gitId":"ongzhili"},"content":"                return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":168,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":169,"author":{"gitId":"ongzhili"},"content":"            case \"list\": {","lastModifiedDate":"2024-01-30"},{"lineNumber":170,"author":{"gitId":"ongzhili"},"content":"                printList(this.tasks);","lastModifiedDate":"2024-02-02"},{"lineNumber":171,"author":{"gitId":"ongzhili"},"content":"                return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":172,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":173,"author":{"gitId":"ongzhili"},"content":"            case \"todo\": {","lastModifiedDate":"2024-01-30"},{"lineNumber":174,"author":{"gitId":"ongzhili"},"content":"                toDo(command, isInit);","lastModifiedDate":"2024-01-30"},{"lineNumber":175,"author":{"gitId":"ongzhili"},"content":"                return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":176,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":177,"author":{"gitId":"ongzhili"},"content":"            case \"deadline\": {","lastModifiedDate":"2024-01-30"},{"lineNumber":178,"author":{"gitId":"ongzhili"},"content":"                deadline(command, isInit);","lastModifiedDate":"2024-01-30"},{"lineNumber":179,"author":{"gitId":"ongzhili"},"content":"                return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":180,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":181,"author":{"gitId":"ongzhili"},"content":"            case \"event\": {","lastModifiedDate":"2024-01-30"},{"lineNumber":182,"author":{"gitId":"ongzhili"},"content":"                event(command, isInit);","lastModifiedDate":"2024-01-30"},{"lineNumber":183,"author":{"gitId":"ongzhili"},"content":"                return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":184,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":185,"author":{"gitId":"ongzhili"},"content":"            case \"delete\": {","lastModifiedDate":"2024-01-30"},{"lineNumber":186,"author":{"gitId":"ongzhili"},"content":"                deleteFromList(command);","lastModifiedDate":"2024-01-30"},{"lineNumber":187,"author":{"gitId":"ongzhili"},"content":"                return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":188,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":189,"author":{"gitId":"ongzhili"},"content":"            case \"find\": {","lastModifiedDate":"2024-01-31"},{"lineNumber":190,"author":{"gitId":"ongzhili"},"content":"                find(command);","lastModifiedDate":"2024-01-31"},{"lineNumber":191,"author":{"gitId":"ongzhili"},"content":"                return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":192,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":193,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":194,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":195,"author":{"gitId":"ongzhili"},"content":"        // Should not reach here.","lastModifiedDate":"2024-01-30"},{"lineNumber":196,"author":{"gitId":"ongzhili"},"content":"        return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":197,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":198,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":198}},{"path":"src/main/java/lamball/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":" * A class that primarily responsible for chatbot responses.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"public class Ui {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    private static final String WELCOME_MESSAGE \u003d \"    lamball\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"            \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"            \"     Hello! I\u0027m Lamball, your helpful sheep!\\n\" +","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"            \"     Whaaat can I do for you?\\n\" +","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"            \"    ____________________________________________________________\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"            \"     See you again!\\n\" +","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"            \"    ____________________________________________________________\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"    private static final String INDENT \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"     * Constructor for Ui class.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"    public Ui() {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"     * Prints a greeting message.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"    public void greetingMessage() {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"        System.out.println(WELCOME_MESSAGE);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"     * Prints a goodbye message.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"    public void goodbyeMessage() {","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"        System.out.println(GOODBYE_MESSAGE);","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"     * Formats the error message, then prints it.","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"     * @param e Exception that was given.","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"    public void displayError(Exception e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"        System.out.println(INDENT + \"    \" + e.getMessage() + \"\\n\" + INDENT);","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"     * Formats the action done, then prints it.","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"     * @param msg Action that was performed.","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"    public void displayAction(String msg) {","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"        System.out.println(INDENT + \"    \" + msg + \"\\n\" + INDENT);","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":62}},{"path":"src/main/java/lamball/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":" * Deadline class, an extension of the Task class that contains a due date.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"     * Constructor for Deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"     * @param description Name of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"     * @param by due date of deadline","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"     * @throws DateTimeParseException if invalid date is provided.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    public Deadline(String description, String by) throws DateTimeParseException {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"    public String command() {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"        return \"deadline \" + description + \" /by \" + by;","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"        String formattedDate \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":38}},{"path":"src/main/java/lamball/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":" * Event class, an extension of the Task class that has a duration, represented by","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":" * from and to.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"     * Constructor for Event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"     * @param description Name of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"     * @param from Start date of event.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"     * @param to End date of event.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"     * @throws DateTimeParseException if invalid date is provided.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"    public Event(String description, String from, String to) throws DateTimeParseException {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"    public String command() {","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"        return \"event \" + description + \" /from \" + from + \" /to \" + to;","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"        String formattedFrom \u003d from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"        String formattedTo \u003d to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formattedFrom + \" to: \" + formattedTo + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":42}},{"path":"src/main/java/lamball/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":" * Task class, the base unit of the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    protected String description;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"     * Constructor for Task.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"     * @param description Name of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"    public void mark() {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"    public void unMark() {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"     * Returns task in command format for chatbot use.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"     * @return Task represented in command form.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"    public String command() {","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"        return \"How did you get here?\";","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"    ","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"     * Returns string representation of task for list printing","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"     * @return String task represented in printing format","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"     * Checks if the task description contains the given string.","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"     * @param compare String used for comparison.","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"     * @return Whether the given string is a sub-sequence of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"    public boolean containing(String compare) {","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"        return description.contains(compare);","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":63}},{"path":"src/main/java/lamball/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":" * ToDo class, an extension of the Task class.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"     * Constructor for ToDo task.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"     * @param description Name of todo task.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"    public String command() {","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"        return \"todo \" + description;","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":27}},{"path":"src/test/java/lamball/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"    public void byeAndListParseTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"            assertEquals(Parser.parse(\"bye\")[0], \"bye\");","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"        } catch (LamballParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"            fail();","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"    public void byeAndListParseFailTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"        LamballParseException thrown \u003d Assertions.assertThrows(LamballParseException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"            Parser.parse(\"bye 123456\");","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"        assertEquals(\"Do not type anything after \\\"bye\\\"\", thrown.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"    public void markAndUnMarkAndDeleteParseTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"            String[] parsed \u003d Parser.parse(\"mark 1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"            assertEquals(\"mark\", parsed[0]);","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"            assertEquals(\"1\", parsed[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"        } catch (LamballParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"            fail();","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"    public void markAndUnMarkAndDeleteParseFailTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"        LamballParseException thrown \u003d Assertions.assertThrows(LamballParseException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"            Parser.parse(\"mark 1 1 1 1 1 1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"        assertEquals(\"Invalid number, baa.\", thrown.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"    public void taskParseTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"            assertEquals(Parser.parse(\"todo TEST\")[0], \"todo\");","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"            assertEquals(Parser.parse(\"todo TEST\")[1], \"TEST\");","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"        } catch (LamballParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"            fail();","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"    public void taskParseFailTesT() {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"        LamballParseException thrown \u003d Assertions.assertThrows(LamballParseException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"            Parser.parse(\"todo                            \");","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"        assertEquals(\"Your todo field is empty, baaaaka.\", thrown.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"ongzhili"},"content":"    public void invalidCommandParseTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"ongzhili"},"content":"        LamballParseException thrown \u003d Assertions.assertThrows(LamballParseException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"ongzhili"},"content":"            Parser.parse(\"the quick brown fox jumps over the lazy dog\");","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"ongzhili"},"content":"        assertEquals(\"Sorry, I don\u0027t understaaaaaand your commaaaaand, baa. :(\",thrown.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ongzhili":71}},{"path":"src/test/java/lamball/SanityTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"public class SanityTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"    public void sanityTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"ongzhili":11}},{"path":"src/test/java/lamball/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"    public void deadlineTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"        // Command Test","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"        assertEquals(new Deadline(\"TEST\", \"2000-01-01\").command(), \"deadline TEST /by 2000-01-01\");","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"        // String Test","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"        assertEquals(new Deadline(\"TEST\", \"2000-01-01\").toString(), \"[D][ ] TEST (by: Jan 1 2000)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"        // Mark test","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"        Deadline test \u003d new Deadline(\"TEST\", \"2000-01-01\");","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"        test.mark();","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"        assertEquals(test.toString(), \"[D][X] TEST (by: Jan 1 2000)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"        // Unmark test","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"        test.unMark();","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"        assertEquals(test.toString(), \"[D][ ] TEST (by: Jan 1 2000)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"        // DateTimeParseException test","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"        DateTimeParseException thrown \u003d Assertions.assertThrows(DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"            Deadline test2 \u003d new Deadline(\"TEST\", \"abcdefg\");","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"        // Error Message test","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"        assertEquals(\"Text \u0027abcdefg\u0027 could not be parsed at index 0\", thrown.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ongzhili":36}},{"path":"src/test/java/lamball/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"public class EventTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"    public void eventTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"        // Command Test","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"        assertEquals(new Event(\"TEST\", \"2000-01-01\", \"2000-01-01\").command(), \"event TEST \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"                \"/from 2000-01-01 /to 2000-01-01\");","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"        // String Test","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"        assertEquals(new Event(\"TEST\", \"2000-01-01\", \"2000-01-01\").toString(),","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"                \"[E][ ] TEST (from: Jan 1 2000 to: Jan 1 2000)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"        // Mark test","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"        Event test \u003d new Event(\"TEST\", \"2000-01-01\", \"2000-01-01\");","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"        test.mark();","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"        assertEquals(test.toString(), \"[E][X] TEST (from: Jan 1 2000 to: Jan 1 2000)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"        // Unmark test","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"        test.unMark();","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"        assertEquals(test.toString(), \"[E][ ] TEST (from: Jan 1 2000 to: Jan 1 2000)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"        // DateTimeParseException test","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"        DateTimeParseException thrown \u003d Assertions.assertThrows(DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"            Event test2 \u003d new Event(\"TEST\", \"abcdefg\", \"2000-01-01\");","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"        // Error Message test","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"        assertEquals(\"Text \u0027abcdefg\u0027 could not be parsed at index 0\", thrown.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ongzhili":38}},{"path":"src/test/java/lamball/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"public class TaskTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"    public void taskTest() {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"        // Command test","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"        assertEquals(new Task(\"TEST\").command(), \"How did you get here?\");","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"        // toString test","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"        assertEquals(new Task(\"TEST\").toString(), \"[ ] TEST\");","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"ongzhili":17}},{"path":"src/test/java/lamball/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"public class ToDoTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    public void todoTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"        // Command test","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"        assertEquals(new ToDo(\"TEST\").command(), \"todo TEST\");","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"        // toString test","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"        assertEquals(new ToDo(\"TEST\").toString(), \"[T][ ] TEST\");","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ongzhili":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"todo","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"todo","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"deadline a /by 3","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"deadline a/by 3","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"deadline","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"event","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"event a /from b","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"event a/from b /to c","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"event a /from b /to c","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"mark -1","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"mark 0","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"mark 4","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"mark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"unmark -1","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"unmark 0","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"unmark 4","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"unmark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"delete -1","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"delete 4","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"delete 4","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ongzhili":23}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ongzhili":1,"-":20}}]
