[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"mainClassName \u003d \u0027youdon.Launcher\u0027","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"youdonnnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"youdonnnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"youdonnnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"youdonnnn"},"content":"    mainClass.set(\"youdon.Youdon\")","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"youdonnnn"},"content":"    archiveBaseName \u003d \"youdon\"","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"youdonnnn"},"content":"    archiveFileName \u003d \u0027youdon.jar\u0027","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"youdonnnn"},"content":"checkstyle {","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"youdonnnn"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"youdonnnn":25,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"# YoudonBot User Guide","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"Introducing YoudonBot, a brand-new revolutionary task manager that can help you manage ToDos, Deadlines and Events!","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"![Screenshot of YoudonBot\u0027s GUI](Ui.png)","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"## Table of Contents","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"- [Todo](#Todo)","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"- [Deadline](#Deadline)","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"- [Event](#Event)","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"- [Mark](#Mark)","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"- [Unmark](#Unmark)","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"- [List](#List)","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"- [Delete](#Delete)","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"- [Find](#Find)","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"- [Snooze](#Snooze)","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"- [Bye](#Bye)","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"## Features","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"### Todo","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"Adds a To-Do task to your current Tasklist.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"Format: `todo \u003cdescription\u003e`","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"Example: `todo borrow book`","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"Expected Response from YoudonBot:","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"Alright! Task added:","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"     [T][ ] borrow book","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"youdonnnn"},"content":"You now have 1 task(s) in the list.","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"youdonnnn"},"content":"Tasklist saved!","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"youdonnnn"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"youdonnnn"},"content":"### Deadline","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"youdonnnn"},"content":"Adds a Deadline task to your current Tasklist.","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"youdonnnn"},"content":"Format: `deadline \u003cdescription\u003e /by \u003cdate\u003e \u003ctime\u003e`","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"youdonnnn"},"content":"Example: `deadline return book /by 2/12/2019 1800`","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":38,"author":{"gitId":"youdonnnn"},"content":"Expected Response from YoudonBot:","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"youdonnnn"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"youdonnnn"},"content":"Alright! Task added:","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"youdonnnn"},"content":"     [D][ ] return book (by: Dec 02 2019 18:00)","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"youdonnnn"},"content":"You now have 2 task(s) in the list.","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":44,"author":{"gitId":"youdonnnn"},"content":"Tasklist saved!","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"youdonnnn"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"youdonnnn"},"content":"### Event","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"youdonnnn"},"content":"Adds a Event task to your current Tasklist.","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"youdonnnn"},"content":"Format: `event \u003cdescription\u003e /from \u003cdate\u003e \u003ctime\u003e /to \u003cdate\u003e \u003ctime\u003e`","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"youdonnnn"},"content":"Example: `event project meeting /from 5/6/2020 1900 /to 7/7/2021 1900`","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":51,"author":{"gitId":"youdonnnn"},"content":"Expected Response from YoudonBot:","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"youdonnnn"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"youdonnnn"},"content":"Alright! Task added:","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"youdonnnn"},"content":"     [E][ ] project meeting (from: Jun 05 2020 19:00 to: Jul 07 2021 19:00)","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"youdonnnn"},"content":"You now have 3 task(s) in the list.","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"youdonnnn"},"content":"Tasklist saved!","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"youdonnnn"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"youdonnnn"},"content":"### Mark","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"youdonnnn"},"content":"Marks the task in your Tasklist as done.","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"youdonnnn"},"content":"Format: `mark \u003ctaskNumber\u003e`","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"youdonnnn"},"content":"Example: `mark 1`","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"youdonnnn"},"content":"Expected Response from YoudonBot:","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"youdonnnn"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"youdonnnn"},"content":"Nicely done! The task has been marked as done:","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"youdonnnn"},"content":"     [T][X] borrow book","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"youdonnnn"},"content":"Tasklist saved!","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"youdonnnn"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"youdonnnn"},"content":"### Unmark","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"youdonnnn"},"content":"Marks the task in your Tasklist as undone.","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"youdonnnn"},"content":"Format: `unmark \u003ctaskNumber\u003e`","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"youdonnnn"},"content":"Example: `unmark 1`","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"youdonnnn"},"content":"Expected Response from YoudonBot:","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"youdonnnn"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"youdonnnn"},"content":"Okies! The task has been marked as undone:","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"youdonnnn"},"content":"     [T][ ] borrow book","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"youdonnnn"},"content":"Tasklist saved!","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"youdonnnn"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"youdonnnn"},"content":"### List","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"youdonnnn"},"content":"Lists our all tasks in your Tasklist.","lastModifiedDate":"2024-02-24"},{"lineNumber":85,"author":{"gitId":"youdonnnn"},"content":"Format: `list`","lastModifiedDate":"2024-02-24"},{"lineNumber":86,"author":{"gitId":"youdonnnn"},"content":"Example: `list`","lastModifiedDate":"2024-02-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"youdonnnn"},"content":"Expected Response from YoudonBot:","lastModifiedDate":"2024-02-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":90,"author":{"gitId":"youdonnnn"},"content":"Here are your tasks:","lastModifiedDate":"2024-02-24"},{"lineNumber":91,"author":{"gitId":"youdonnnn"},"content":"     1. [T][ ] borrow book","lastModifiedDate":"2024-02-24"},{"lineNumber":92,"author":{"gitId":"youdonnnn"},"content":"     2. [D][ ] return book (by: Dec 02 2019 18:00)","lastModifiedDate":"2024-02-24"},{"lineNumber":93,"author":{"gitId":"youdonnnn"},"content":"     3. [E][ ] project meeting (from: Jun 05 2020 19:00 to: Jul 07 2021 19:00)","lastModifiedDate":"2024-02-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":95,"author":{"gitId":"youdonnnn"},"content":"### Delete","lastModifiedDate":"2024-02-24"},{"lineNumber":96,"author":{"gitId":"youdonnnn"},"content":"Deletes the task from your Tasklist.","lastModifiedDate":"2024-02-24"},{"lineNumber":97,"author":{"gitId":"youdonnnn"},"content":"Format: `delete \u003ctaskNumber\u003e`","lastModifiedDate":"2024-02-24"},{"lineNumber":98,"author":{"gitId":"youdonnnn"},"content":"Example: `delete 1`","lastModifiedDate":"2024-02-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"youdonnnn"},"content":"Expected Response from YoudonBot:","lastModifiedDate":"2024-02-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":102,"author":{"gitId":"youdonnnn"},"content":"Alright! The task has been deleted:","lastModifiedDate":"2024-02-24"},{"lineNumber":103,"author":{"gitId":"youdonnnn"},"content":"     [T][ ] borrow book","lastModifiedDate":"2024-02-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":105,"author":{"gitId":"youdonnnn"},"content":"Tasklist saved!","lastModifiedDate":"2024-02-24"},{"lineNumber":106,"author":{"gitId":"youdonnnn"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":107,"author":{"gitId":"youdonnnn"},"content":"### Find","lastModifiedDate":"2024-02-24"},{"lineNumber":108,"author":{"gitId":"youdonnnn"},"content":"Finds all tasks in your Tasklist with the input keyword(s).","lastModifiedDate":"2024-02-24"},{"lineNumber":109,"author":{"gitId":"youdonnnn"},"content":"Format: `find \u003ckeyword(s)\u003e`","lastModifiedDate":"2024-02-24"},{"lineNumber":110,"author":{"gitId":"youdonnnn"},"content":"Example: `find return`","lastModifiedDate":"2024-02-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":112,"author":{"gitId":"youdonnnn"},"content":"Expected Response from YoudonBot:","lastModifiedDate":"2024-02-24"},{"lineNumber":113,"author":{"gitId":"youdonnnn"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":114,"author":{"gitId":"youdonnnn"},"content":"Here are your tasks:","lastModifiedDate":"2024-02-24"},{"lineNumber":115,"author":{"gitId":"youdonnnn"},"content":"     1. [D][ ] return book (by: Dec 02 2019 18:00)","lastModifiedDate":"2024-02-24"},{"lineNumber":116,"author":{"gitId":"youdonnnn"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":117,"author":{"gitId":"youdonnnn"},"content":"### Snooze","lastModifiedDate":"2024-02-24"},{"lineNumber":118,"author":{"gitId":"youdonnnn"},"content":"Snoozes the Deadline task for 1 day.","lastModifiedDate":"2024-02-24"},{"lineNumber":119,"author":{"gitId":"youdonnnn"},"content":"Format: `snooze \u003ctaskNumber\u003e`","lastModifiedDate":"2024-02-24"},{"lineNumber":120,"author":{"gitId":"youdonnnn"},"content":"Example: `snooze 1`","lastModifiedDate":"2024-02-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":122,"author":{"gitId":"youdonnnn"},"content":"Expected Response from YoudonBot:","lastModifiedDate":"2024-02-24"},{"lineNumber":123,"author":{"gitId":"youdonnnn"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":124,"author":{"gitId":"youdonnnn"},"content":"Okies! The task has been snoozed by 1 day:","lastModifiedDate":"2024-02-24"},{"lineNumber":125,"author":{"gitId":"youdonnnn"},"content":"     [D][ ] return book (by: Dec 03 2019 18:00)","lastModifiedDate":"2024-02-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":127,"author":{"gitId":"youdonnnn"},"content":"Tasklist saved!","lastModifiedDate":"2024-02-24"},{"lineNumber":128,"author":{"gitId":"youdonnnn"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":129,"author":{"gitId":"youdonnnn"},"content":"### Bye","lastModifiedDate":"2024-02-24"},{"lineNumber":130,"author":{"gitId":"youdonnnn"},"content":"Ends the conversation with YoudonBot.","lastModifiedDate":"2024-02-24"},{"lineNumber":131,"author":{"gitId":"youdonnnn"},"content":"Format: `bye`","lastModifiedDate":"2024-02-24"},{"lineNumber":132,"author":{"gitId":"youdonnnn"},"content":"Example: `bye`","lastModifiedDate":"2024-02-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":134,"author":{"gitId":"youdonnnn"},"content":"Expected Response from YoudonBot:","lastModifiedDate":"2024-02-24"},{"lineNumber":135,"author":{"gitId":"youdonnnn"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":136,"author":{"gitId":"youdonnnn"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2024-02-24"},{"lineNumber":137,"author":{"gitId":"youdonnnn"},"content":"```","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"youdonnnn":115,"-":22}},{"path":"src/main/java/youdon/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"     * Constructs a Deadline object with the specified description and deadline.","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"     * @param deadline    The deadline of the task.","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"        super(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"    public void snoozeDeadline() {","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"        this.deadline \u003d this.deadline.plusDays(1);","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"     * Returns the type icon for the deadline task.","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"youdonnnn"},"content":"     * @return The type icon for the deadline task.","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"youdonnnn"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"youdonnnn"},"content":"        return \"D\";","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"youdonnnn"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"youdonnnn"},"content":"     * @return A string representation of the deadline task.","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"youdonnnn"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"youdonnnn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"youdonnnn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"youdonnnn"},"content":"        String formattedDateTime \u003d this.deadline.format(formatter);","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"youdonnnn"},"content":"        return \"[\" + this.getTypeIcon() + \"][\" + this.getStatusIcon() + \"] \" + this.description.trim()","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"youdonnnn"},"content":"                + \" (by: \" + formattedDateTime + \")\";","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"youdonnnn":48}},{"path":"src/main/java/youdon/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"    @FXML","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"    @FXML","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"youdonnnn"},"content":"     * Constructs a DialogBox with the specified text and image.","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"youdonnnn"},"content":"     * @param text The text content of the dialog box.","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"youdonnnn"},"content":"     * @param img The image to display in the dialog box.","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"youdonnnn"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"youdonnnn"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"youdonnnn"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"youdonnnn"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"youdonnnn"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"youdonnnn"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"youdonnnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"youdonnnn"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"youdonnnn"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"youdonnnn"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"youdonnnn"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"youdonnnn"},"content":"    private void flip() {","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"youdonnnn"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"youdonnnn"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"youdonnnn"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"youdonnnn"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"youdonnnn"},"content":"     * Gets a welcome dialog box with the specified image.","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"youdonnnn"},"content":"     * @param img The image to display in the dialog box.","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"youdonnnn"},"content":"     * @return A DialogBox object representing a welcome message.","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"youdonnnn"},"content":"    public static DialogBox getWelcomeDialog(Image img) {","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"youdonnnn"},"content":"        var db \u003d new DialogBox(\"Hello! I\u0027m Youdon!\\nWhat can I do for you?\\n\", img);","lastModifiedDate":"2024-02-16"},{"lineNumber":66,"author":{"gitId":"youdonnnn"},"content":"        db.flip();","lastModifiedDate":"2024-02-16"},{"lineNumber":67,"author":{"gitId":"youdonnnn"},"content":"        return db;","lastModifiedDate":"2024-02-16"},{"lineNumber":68,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"youdonnnn"},"content":"     * Gets a dialog box representing a message from the user.","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"youdonnnn"},"content":"     * @param text The text content of the dialog box.","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"youdonnnn"},"content":"     * @param img The image to display in the dialog box.","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"youdonnnn"},"content":"     * @return A DialogBox object representing a user message.","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"youdonnnn"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-16"},{"lineNumber":78,"author":{"gitId":"youdonnnn"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":81,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"youdonnnn"},"content":"     * Gets a dialog box representing a message from YoudonBot.","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"youdonnnn"},"content":"     * @param text The text content of the dialog box.","lastModifiedDate":"2024-02-24"},{"lineNumber":85,"author":{"gitId":"youdonnnn"},"content":"     * @param img The image to display in the dialog box.","lastModifiedDate":"2024-02-24"},{"lineNumber":86,"author":{"gitId":"youdonnnn"},"content":"     * @return A DialogBox object representing a message from Youdon.","lastModifiedDate":"2024-02-24"},{"lineNumber":87,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":88,"author":{"gitId":"youdonnnn"},"content":"    public static DialogBox getYoudonDialog(String text, Image img) {","lastModifiedDate":"2024-02-16"},{"lineNumber":89,"author":{"gitId":"youdonnnn"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-16"},{"lineNumber":90,"author":{"gitId":"youdonnnn"},"content":"        db.flip();","lastModifiedDate":"2024-02-16"},{"lineNumber":91,"author":{"gitId":"youdonnnn"},"content":"        return db;","lastModifiedDate":"2024-02-16"},{"lineNumber":92,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":93,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"youdonnnn":93}},{"path":"src/main/java/youdon/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":" * Represents an event task with a start and end.","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":" * This class extends the Task class and includes methods to represent event tasks,","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":" * such as obtaining the type icon and converting the task to a string format.","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"     * Constructs a new instance of the Event class with the specified description, start time, and end time.","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"     * @param start       The start time of the event task.","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"     * @param end         The end time of the event task.","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"        super(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"youdonnnn"},"content":"     * Gets the type icon for the event task.","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"youdonnnn"},"content":"     * @return The type icon for the event task.","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"youdonnnn"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"youdonnnn"},"content":"        return \"E\";","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"youdonnnn"},"content":"     * Converts the event task to a string format.","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"youdonnnn"},"content":"     * @return The string representation of the event task.","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"youdonnnn"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"youdonnnn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"youdonnnn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"youdonnnn"},"content":"        String formattedDateTimeStart \u003d this.start.format(formatter);","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"youdonnnn"},"content":"        String formattedDateTimeEnd \u003d this.end.format(formatter);","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"youdonnnn"},"content":"        return \"[\" + this.getTypeIcon() + \"][\" + this.getStatusIcon() + \"] \" + this.description.trim()","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"youdonnnn"},"content":"                + \" (from: \" + formattedDateTimeStart + \" to: \" + formattedDateTimeEnd + \")\";","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"youdonnnn":50}},{"path":"src/main/java/youdon/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":" * The Launcher class responsible for starting the JavaFX application.","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"public class Launcher {","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"     * The main method to launch the JavaFX application.","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"     * @param args The command-line arguments.","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"youdonnnn":18}},{"path":"src/main/java/youdon/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":" * The main class responsible for launching the YoudonBot GUI application.","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"    private final Youdon youdon \u003d new Youdon();","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"     * Start method called when launching the application.","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"     * @param stage The primary stage for the application.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"    @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"youdonnnn"},"content":"            stage.setTitle(\"YoudonBot\");","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"youdonnnn"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"youdonnnn"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setYoudon(youdon);","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"youdonnnn"},"content":"            stage.show();","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"youdonnnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"youdonnnn"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"youdonnnn":37}},{"path":"src/main/java/youdon/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":" * Controller class for the main window of the YoudonBot application. Provides the layout and functionality","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":" * for interacting with the bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"    @FXML","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"    @FXML","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"    @FXML","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"    @FXML","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"    private Youdon youdon;","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.jpg\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"    private final Image youdonBot \u003d new Image(this.getClass().getResourceAsStream(\"/images/YoudonBot.jpg\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"youdonnnn"},"content":"     * Initializes the main window layout and binds the scroll pane to the dialog container.","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"youdonnnn"},"content":"    @FXML","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"youdonnnn"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"youdonnnn"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"youdonnnn"},"content":"        dialogContainer.getChildren().add(DialogBox.getWelcomeDialog(youdonBot));","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"youdonnnn"},"content":"     * Sets the Youdon instance for the main window.","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"youdonnnn"},"content":"     * @param youdon The Youdon instance to be set.","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"youdonnnn"},"content":"    public void setYoudon(Youdon youdon) {","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"youdonnnn"},"content":"        this.youdon \u003d youdon;","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"youdonnnn"},"content":"     * Handles user input by processing it and displaying the appropriate response from the bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"youdonnnn"},"content":"     * Appends dialog boxes representing user input and bot response to the dialog container.","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"youdonnnn"},"content":"     * Clears the user input after processing.","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"youdonnnn"},"content":"    @FXML","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"youdonnnn"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"youdonnnn"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"youdonnnn"},"content":"        assert !input.isEmpty();","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"youdonnnn"},"content":"        String response \u003d youdon.getResponse(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"youdonnnn"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"youdonnnn"},"content":"                DialogBox.getUserDialog(input, user),","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"youdonnnn"},"content":"                DialogBox.getYoudonDialog(response, youdonBot)","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"youdonnnn"},"content":"        );","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"youdonnnn"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"youdonnnn":64}},{"path":"src/main/java/youdon/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":" * Parses user input and performs corresponding actions.","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":" * This class handles parsing user input commands and executing actions accordingly,","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":" * such as adding tasks, marking tasks as done, and deleting tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"public class Parser {","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"    private final Ui ui;","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"     * Constructs a new instance of the Parser class with the specified UI, task list, and storage.","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"     * @param tasks   The list of tasks to perform actions on.","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"     * @param storage The storage handler for saving and loading tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"    public Parser(Ui ui, TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"youdonnnn"},"content":"     * Splits the input command and task number and returns the specified part.","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"youdonnnn"},"content":"     * @param input      The input string to split.","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"youdonnnn"},"content":"     * @param partNumber The part number to retrieve (1 or 2).","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"youdonnnn"},"content":"     * @return The specified part of the input.","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"youdonnnn"},"content":"    private String splitCommandAndTaskNumber(String input, int partNumber) {","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"youdonnnn"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"youdonnnn"},"content":"        return parts[partNumber - 1];","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"youdonnnn"},"content":"     * Splits the task description and deadline and returns the specified part.","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"youdonnnn"},"content":"     * @param input      The input string to split.","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"youdonnnn"},"content":"     * @param partNumber The part number to retrieve (1 or 2).","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"youdonnnn"},"content":"     * @return The specified part of the input.","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"youdonnnn"},"content":"    private String splitTaskDescAndDeadline(String input, int partNumber) {","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"youdonnnn"},"content":"        String[] parts \u003d input.split(\"/by \");","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"youdonnnn"},"content":"        return parts[partNumber - 1];","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"youdonnnn"},"content":"     * Splits the task description, start, and end times and returns the specified part.","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"youdonnnn"},"content":"     * @param input      The input string to split.","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"youdonnnn"},"content":"     * @param partNumber The part number to retrieve (1, 2, or 3).","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"youdonnnn"},"content":"     * @return The specified part of the input.","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"youdonnnn"},"content":"    private String splitTaskDescAndStartAndEnd(String input, int partNumber) {","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"youdonnnn"},"content":"        String[] parts \u003d input.split(\"/from | /to \");","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"youdonnnn"},"content":"        return parts[partNumber - 1];","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"youdonnnn"},"content":"     * Processes the \u0027find\u0027 command to search for tasks containing a specific keyword.","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"youdonnnn"},"content":"     * @param task The keyword to search for.","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"youdonnnn"},"content":"     * @return A message containing the list of tasks found.","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"youdonnnn"},"content":"    private String processFindCommand(String task) {","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"youdonnnn"},"content":"        TaskList foundList \u003d new TaskList();","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"youdonnnn"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"youdonnnn"},"content":"            Task currTask \u003d tasks.get(i);","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"youdonnnn"},"content":"            if (currTask.toString().contains(task)) {","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"youdonnnn"},"content":"                foundList.add(currTask);","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"youdonnnn"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"youdonnnn"},"content":"        return ui.getTaskList(foundList);","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":85,"author":{"gitId":"youdonnnn"},"content":"     * Processes the \u0027mark\u0027 command to mark a task as done.","lastModifiedDate":"2024-02-24"},{"lineNumber":86,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":87,"author":{"gitId":"youdonnnn"},"content":"     * @param task The task number to mark as done.","lastModifiedDate":"2024-02-24"},{"lineNumber":88,"author":{"gitId":"youdonnnn"},"content":"     * @return A message confirming the task marked as done.","lastModifiedDate":"2024-02-24"},{"lineNumber":89,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":90,"author":{"gitId":"youdonnnn"},"content":"    private String processMarkCommand(String task) {","lastModifiedDate":"2024-02-24"},{"lineNumber":91,"author":{"gitId":"youdonnnn"},"content":"        // mark task as done in array","lastModifiedDate":"2024-02-24"},{"lineNumber":92,"author":{"gitId":"youdonnnn"},"content":"        int taskNumber \u003d Integer.parseInt(task);","lastModifiedDate":"2024-02-24"},{"lineNumber":93,"author":{"gitId":"youdonnnn"},"content":"        tasks.get(taskNumber - 1).isDone \u003d true;","lastModifiedDate":"2024-02-24"},{"lineNumber":94,"author":{"gitId":"youdonnnn"},"content":"        // save in save file","lastModifiedDate":"2024-02-24"},{"lineNumber":95,"author":{"gitId":"youdonnnn"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":96,"author":{"gitId":"youdonnnn"},"content":"            this.storage.saveData(tasks);","lastModifiedDate":"2024-02-24"},{"lineNumber":97,"author":{"gitId":"youdonnnn"},"content":"            return ui.getMarkMsg(tasks, taskNumber) + \"\\n Tasklist saved!\";","lastModifiedDate":"2024-02-24"},{"lineNumber":98,"author":{"gitId":"youdonnnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":99,"author":{"gitId":"youdonnnn"},"content":"            return \"Error!\" + e.getMessage();","lastModifiedDate":"2024-02-24"},{"lineNumber":100,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":101,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":102,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":103,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":104,"author":{"gitId":"youdonnnn"},"content":"     * Processes the \u0027unmark\u0027 command to mark a task as undone.","lastModifiedDate":"2024-02-24"},{"lineNumber":105,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":106,"author":{"gitId":"youdonnnn"},"content":"     * @param task The task number to mark as undone.","lastModifiedDate":"2024-02-24"},{"lineNumber":107,"author":{"gitId":"youdonnnn"},"content":"     * @return A message confirming the task marked as undone.","lastModifiedDate":"2024-02-24"},{"lineNumber":108,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":109,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":110,"author":{"gitId":"youdonnnn"},"content":"    private String processUnmarkCommand(String task) {","lastModifiedDate":"2024-02-24"},{"lineNumber":111,"author":{"gitId":"youdonnnn"},"content":"        // mark task as undone in array","lastModifiedDate":"2024-02-24"},{"lineNumber":112,"author":{"gitId":"youdonnnn"},"content":"        int taskNumber \u003d Integer.parseInt(task);","lastModifiedDate":"2024-02-24"},{"lineNumber":113,"author":{"gitId":"youdonnnn"},"content":"        tasks.get(taskNumber - 1).isDone \u003d false;","lastModifiedDate":"2024-02-24"},{"lineNumber":114,"author":{"gitId":"youdonnnn"},"content":"        // save in save file","lastModifiedDate":"2024-02-24"},{"lineNumber":115,"author":{"gitId":"youdonnnn"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":116,"author":{"gitId":"youdonnnn"},"content":"            this.storage.saveData(tasks);","lastModifiedDate":"2024-02-24"},{"lineNumber":117,"author":{"gitId":"youdonnnn"},"content":"            return ui.getUnmarkMsg(tasks, taskNumber) + \"\\n Tasklist saved!\";","lastModifiedDate":"2024-02-24"},{"lineNumber":118,"author":{"gitId":"youdonnnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":119,"author":{"gitId":"youdonnnn"},"content":"            return \"Error!\" + e.getMessage();","lastModifiedDate":"2024-02-24"},{"lineNumber":120,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":121,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":122,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":123,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":124,"author":{"gitId":"youdonnnn"},"content":"     * Processes the \u0027snooze\u0027 command to snooze a deadline task by one day.","lastModifiedDate":"2024-02-24"},{"lineNumber":125,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":126,"author":{"gitId":"youdonnnn"},"content":"     * @param task The task number of the deadline task to snooze.","lastModifiedDate":"2024-02-24"},{"lineNumber":127,"author":{"gitId":"youdonnnn"},"content":"     * @return A message confirming the task snoozed.","lastModifiedDate":"2024-02-24"},{"lineNumber":128,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":129,"author":{"gitId":"youdonnnn"},"content":"    private String processSnoozeCommand(String task) {","lastModifiedDate":"2024-02-24"},{"lineNumber":130,"author":{"gitId":"youdonnnn"},"content":"        int taskNumber \u003d Integer.parseInt(task);","lastModifiedDate":"2024-02-24"},{"lineNumber":131,"author":{"gitId":"youdonnnn"},"content":"        Task taskToSnooze \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2024-02-24"},{"lineNumber":132,"author":{"gitId":"youdonnnn"},"content":"        if (taskToSnooze instanceof Deadline) {","lastModifiedDate":"2024-02-24"},{"lineNumber":133,"author":{"gitId":"youdonnnn"},"content":"            ((Deadline) taskToSnooze).snoozeDeadline();","lastModifiedDate":"2024-02-24"},{"lineNumber":134,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":135,"author":{"gitId":"youdonnnn"},"content":"        // save in save file","lastModifiedDate":"2024-02-24"},{"lineNumber":136,"author":{"gitId":"youdonnnn"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":137,"author":{"gitId":"youdonnnn"},"content":"            this.storage.saveData(tasks);","lastModifiedDate":"2024-02-24"},{"lineNumber":138,"author":{"gitId":"youdonnnn"},"content":"            return ui.getSnoozeMsg(tasks, taskNumber) + \"\\n Tasklist saved!\";","lastModifiedDate":"2024-02-24"},{"lineNumber":139,"author":{"gitId":"youdonnnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":140,"author":{"gitId":"youdonnnn"},"content":"            return \"Error!\" + e.getMessage();","lastModifiedDate":"2024-02-24"},{"lineNumber":141,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":142,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":143,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":144,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":145,"author":{"gitId":"youdonnnn"},"content":"     * Processes the \u0027delete\u0027 command to delete a task from the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":146,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":147,"author":{"gitId":"youdonnnn"},"content":"     * @param task The task number to delete.","lastModifiedDate":"2024-02-24"},{"lineNumber":148,"author":{"gitId":"youdonnnn"},"content":"     * @return A message confirming the task deletion.","lastModifiedDate":"2024-02-24"},{"lineNumber":149,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":150,"author":{"gitId":"youdonnnn"},"content":"    private String processDeleteCommand(String task) {","lastModifiedDate":"2024-02-24"},{"lineNumber":151,"author":{"gitId":"youdonnnn"},"content":"        int taskNumber \u003d Integer.parseInt(task);","lastModifiedDate":"2024-02-24"},{"lineNumber":152,"author":{"gitId":"youdonnnn"},"content":"        Task taskToDelete \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2024-02-24"},{"lineNumber":153,"author":{"gitId":"youdonnnn"},"content":"        tasks.remove(taskNumber - 1);","lastModifiedDate":"2024-02-24"},{"lineNumber":154,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":155,"author":{"gitId":"youdonnnn"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":156,"author":{"gitId":"youdonnnn"},"content":"            storage.saveData(tasks);","lastModifiedDate":"2024-02-24"},{"lineNumber":157,"author":{"gitId":"youdonnnn"},"content":"            return ui.getDeleteMsg(taskToDelete) + \"\\n Tasklist saved!\";","lastModifiedDate":"2024-02-24"},{"lineNumber":158,"author":{"gitId":"youdonnnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":159,"author":{"gitId":"youdonnnn"},"content":"            return \"Error!\" + e.getMessage();","lastModifiedDate":"2024-02-24"},{"lineNumber":160,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":161,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":162,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":163,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":164,"author":{"gitId":"youdonnnn"},"content":"     * Processes the \u0027todo\u0027 command to add a todo task to the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":165,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":166,"author":{"gitId":"youdonnnn"},"content":"     * @param task The description of the todo task.","lastModifiedDate":"2024-02-24"},{"lineNumber":167,"author":{"gitId":"youdonnnn"},"content":"     * @return A message confirming the todo task added.","lastModifiedDate":"2024-02-24"},{"lineNumber":168,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":169,"author":{"gitId":"youdonnnn"},"content":"    private String processTodoCommand(String task) {","lastModifiedDate":"2024-02-24"},{"lineNumber":170,"author":{"gitId":"youdonnnn"},"content":"        tasks.add(new Todo(task));","lastModifiedDate":"2024-02-24"},{"lineNumber":171,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":172,"author":{"gitId":"youdonnnn"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":173,"author":{"gitId":"youdonnnn"},"content":"            storage.saveData(tasks);","lastModifiedDate":"2024-02-24"},{"lineNumber":174,"author":{"gitId":"youdonnnn"},"content":"            return ui.getTaskAddedMsg(tasks) + \"\\n Tasklist saved!\";","lastModifiedDate":"2024-02-24"},{"lineNumber":175,"author":{"gitId":"youdonnnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":176,"author":{"gitId":"youdonnnn"},"content":"            return \"Error!\" + e.getMessage();","lastModifiedDate":"2024-02-24"},{"lineNumber":177,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":178,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":179,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":180,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":181,"author":{"gitId":"youdonnnn"},"content":"     * Processes the \u0027deadline\u0027 command to add a deadline task to the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":182,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":183,"author":{"gitId":"youdonnnn"},"content":"     * @param taskDesc The description of the deadline task.","lastModifiedDate":"2024-02-24"},{"lineNumber":184,"author":{"gitId":"youdonnnn"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2024-02-24"},{"lineNumber":185,"author":{"gitId":"youdonnnn"},"content":"     * @return A message confirming the deadline task added.","lastModifiedDate":"2024-02-24"},{"lineNumber":186,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":187,"author":{"gitId":"youdonnnn"},"content":"    private String processDeadlineCommand(String taskDesc, String deadline) {","lastModifiedDate":"2024-02-24"},{"lineNumber":188,"author":{"gitId":"youdonnnn"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":189,"author":{"gitId":"youdonnnn"},"content":"            // attempt to parse the string into a LocalDateTime object","lastModifiedDate":"2024-02-24"},{"lineNumber":190,"author":{"gitId":"youdonnnn"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-24"},{"lineNumber":191,"author":{"gitId":"youdonnnn"},"content":"            LocalDateTime dateTimeDeadline \u003d LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2024-02-24"},{"lineNumber":192,"author":{"gitId":"youdonnnn"},"content":"            tasks.add(new Deadline(taskDesc, dateTimeDeadline));","lastModifiedDate":"2024-02-24"},{"lineNumber":193,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":194,"author":{"gitId":"youdonnnn"},"content":"            try {","lastModifiedDate":"2024-02-24"},{"lineNumber":195,"author":{"gitId":"youdonnnn"},"content":"                storage.saveData(tasks);","lastModifiedDate":"2024-02-24"},{"lineNumber":196,"author":{"gitId":"youdonnnn"},"content":"                return ui.getTaskAddedMsg(tasks) + \"\\n Tasklist saved!\";","lastModifiedDate":"2024-02-24"},{"lineNumber":197,"author":{"gitId":"youdonnnn"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":198,"author":{"gitId":"youdonnnn"},"content":"                return \"Error!\" + e.getMessage();","lastModifiedDate":"2024-02-24"},{"lineNumber":199,"author":{"gitId":"youdonnnn"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":200,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":201,"author":{"gitId":"youdonnnn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":202,"author":{"gitId":"youdonnnn"},"content":"            // handle the exception if the date or time is not the correct format","lastModifiedDate":"2024-02-24"},{"lineNumber":203,"author":{"gitId":"youdonnnn"},"content":"            return \"Oh no! That\u0027s not a correct date or time format!\";","lastModifiedDate":"2024-02-24"},{"lineNumber":204,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":205,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":206,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":207,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":208,"author":{"gitId":"youdonnnn"},"content":"     * Processes the \u0027event\u0027 command to add an event task to the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":209,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":210,"author":{"gitId":"youdonnnn"},"content":"     * @param taskDesc The description of the event task.","lastModifiedDate":"2024-02-24"},{"lineNumber":211,"author":{"gitId":"youdonnnn"},"content":"     * @param start    The start time of the event.","lastModifiedDate":"2024-02-24"},{"lineNumber":212,"author":{"gitId":"youdonnnn"},"content":"     * @param end      The end time of the event.","lastModifiedDate":"2024-02-24"},{"lineNumber":213,"author":{"gitId":"youdonnnn"},"content":"     * @return A message confirming the event task added.","lastModifiedDate":"2024-02-24"},{"lineNumber":214,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":215,"author":{"gitId":"youdonnnn"},"content":"    private String processEventCommand(String taskDesc, String start, String end) {","lastModifiedDate":"2024-02-24"},{"lineNumber":216,"author":{"gitId":"youdonnnn"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":217,"author":{"gitId":"youdonnnn"},"content":"            // attempt to parse the strings into a LocalDateTime object","lastModifiedDate":"2024-02-24"},{"lineNumber":218,"author":{"gitId":"youdonnnn"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-24"},{"lineNumber":219,"author":{"gitId":"youdonnnn"},"content":"            LocalDateTime dateTimeStart \u003d LocalDateTime.parse(start, formatter);","lastModifiedDate":"2024-02-24"},{"lineNumber":220,"author":{"gitId":"youdonnnn"},"content":"            LocalDateTime dateTimeEnd \u003d LocalDateTime.parse(end, formatter);","lastModifiedDate":"2024-02-24"},{"lineNumber":221,"author":{"gitId":"youdonnnn"},"content":"            tasks.add(new Event(taskDesc, dateTimeStart, dateTimeEnd));","lastModifiedDate":"2024-02-24"},{"lineNumber":222,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":223,"author":{"gitId":"youdonnnn"},"content":"            try {","lastModifiedDate":"2024-02-24"},{"lineNumber":224,"author":{"gitId":"youdonnnn"},"content":"                storage.saveData(tasks);","lastModifiedDate":"2024-02-24"},{"lineNumber":225,"author":{"gitId":"youdonnnn"},"content":"                return ui.getTaskAddedMsg(tasks) + \"\\n Tasklist saved!\";","lastModifiedDate":"2024-02-24"},{"lineNumber":226,"author":{"gitId":"youdonnnn"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":227,"author":{"gitId":"youdonnnn"},"content":"                return \"Error!\" + e.getMessage();","lastModifiedDate":"2024-02-24"},{"lineNumber":228,"author":{"gitId":"youdonnnn"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":229,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":230,"author":{"gitId":"youdonnnn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":231,"author":{"gitId":"youdonnnn"},"content":"            // handle the exception if the date or time is not the correct format","lastModifiedDate":"2024-02-24"},{"lineNumber":232,"author":{"gitId":"youdonnnn"},"content":"            return \"Oh no! That\u0027s not a correct date or time format!\";","lastModifiedDate":"2024-02-24"},{"lineNumber":233,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":234,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":235,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":236,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":237,"author":{"gitId":"youdonnnn"},"content":"     * Parses user input and executes corresponding actions until an empty input is provided.","lastModifiedDate":"2024-02-24"},{"lineNumber":238,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":239,"author":{"gitId":"youdonnnn"},"content":"     * @param input The user input to parse.","lastModifiedDate":"2024-02-24"},{"lineNumber":240,"author":{"gitId":"youdonnnn"},"content":"     * @return The response message based on the input command.","lastModifiedDate":"2024-02-24"},{"lineNumber":241,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":242,"author":{"gitId":"youdonnnn"},"content":"    public String parse(String input) {","lastModifiedDate":"2024-02-24"},{"lineNumber":243,"author":{"gitId":"youdonnnn"},"content":"        assert !input.isEmpty();","lastModifiedDate":"2024-02-24"},{"lineNumber":244,"author":{"gitId":"youdonnnn"},"content":"        // try-catch block for exceptions","lastModifiedDate":"2024-02-24"},{"lineNumber":245,"author":{"gitId":"youdonnnn"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":246,"author":{"gitId":"youdonnnn"},"content":"            YoudonException.detectMissingDesc(input);","lastModifiedDate":"2024-02-24"},{"lineNumber":247,"author":{"gitId":"youdonnnn"},"content":"            YoudonException.detectInvalidCommand(input);","lastModifiedDate":"2024-02-24"},{"lineNumber":248,"author":{"gitId":"youdonnnn"},"content":"        } catch (YoudonException.EmptyDescException | YoudonException.InvalidCommandException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":249,"author":{"gitId":"youdonnnn"},"content":"            // print out error message","lastModifiedDate":"2024-02-24"},{"lineNumber":250,"author":{"gitId":"youdonnnn"},"content":"            return ui.getYoudonErrorMsg(e.getMessage());","lastModifiedDate":"2024-02-24"},{"lineNumber":251,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":252,"author":{"gitId":"youdonnnn"},"content":"        String command \u003d input;","lastModifiedDate":"2024-02-24"},{"lineNumber":253,"author":{"gitId":"youdonnnn"},"content":"        String task \u003d \"\";","lastModifiedDate":"2024-02-24"},{"lineNumber":254,"author":{"gitId":"youdonnnn"},"content":"        if (input.contains(\" \")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":255,"author":{"gitId":"youdonnnn"},"content":"            // if input data has 2 parts, split into command \u0026 task number","lastModifiedDate":"2024-02-24"},{"lineNumber":256,"author":{"gitId":"youdonnnn"},"content":"            command \u003d splitCommandAndTaskNumber(input, 1);","lastModifiedDate":"2024-02-24"},{"lineNumber":257,"author":{"gitId":"youdonnnn"},"content":"            task \u003d splitCommandAndTaskNumber(input, 2);","lastModifiedDate":"2024-02-24"},{"lineNumber":258,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":259,"author":{"gitId":"youdonnnn"},"content":"        switch (command) {","lastModifiedDate":"2024-02-24"},{"lineNumber":260,"author":{"gitId":"youdonnnn"},"content":"            case \"bye\":","lastModifiedDate":"2024-02-24"},{"lineNumber":261,"author":{"gitId":"youdonnnn"},"content":"                return ui.getByeMsg();","lastModifiedDate":"2024-02-24"},{"lineNumber":262,"author":{"gitId":"youdonnnn"},"content":"            case \"list\":","lastModifiedDate":"2024-02-24"},{"lineNumber":263,"author":{"gitId":"youdonnnn"},"content":"                return ui.getTaskList(tasks);","lastModifiedDate":"2024-02-24"},{"lineNumber":264,"author":{"gitId":"youdonnnn"},"content":"            case \"find\":","lastModifiedDate":"2024-02-24"},{"lineNumber":265,"author":{"gitId":"youdonnnn"},"content":"                return processFindCommand(task);","lastModifiedDate":"2024-02-24"},{"lineNumber":266,"author":{"gitId":"youdonnnn"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-24"},{"lineNumber":267,"author":{"gitId":"youdonnnn"},"content":"                return processMarkCommand(task);","lastModifiedDate":"2024-02-24"},{"lineNumber":268,"author":{"gitId":"youdonnnn"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-24"},{"lineNumber":269,"author":{"gitId":"youdonnnn"},"content":"                return processUnmarkCommand(task);","lastModifiedDate":"2024-02-24"},{"lineNumber":270,"author":{"gitId":"youdonnnn"},"content":"            case \"snooze\":","lastModifiedDate":"2024-02-24"},{"lineNumber":271,"author":{"gitId":"youdonnnn"},"content":"                return processSnoozeCommand(task);","lastModifiedDate":"2024-02-24"},{"lineNumber":272,"author":{"gitId":"youdonnnn"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-24"},{"lineNumber":273,"author":{"gitId":"youdonnnn"},"content":"                return processDeleteCommand(task);","lastModifiedDate":"2024-02-24"},{"lineNumber":274,"author":{"gitId":"youdonnnn"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-24"},{"lineNumber":275,"author":{"gitId":"youdonnnn"},"content":"                return processTodoCommand(task);","lastModifiedDate":"2024-02-24"},{"lineNumber":276,"author":{"gitId":"youdonnnn"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-24"},{"lineNumber":277,"author":{"gitId":"youdonnnn"},"content":"                if (task.contains(\"/by \")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":278,"author":{"gitId":"youdonnnn"},"content":"                    String taskDescDeadline \u003d splitTaskDescAndDeadline(task, 1);","lastModifiedDate":"2024-02-24"},{"lineNumber":279,"author":{"gitId":"youdonnnn"},"content":"                    String deadline \u003d splitTaskDescAndDeadline(task, 2);","lastModifiedDate":"2024-02-24"},{"lineNumber":280,"author":{"gitId":"youdonnnn"},"content":"                    return processDeadlineCommand(taskDescDeadline, deadline);","lastModifiedDate":"2024-02-24"},{"lineNumber":281,"author":{"gitId":"youdonnnn"},"content":"                }","lastModifiedDate":"2024-02-24"},{"lineNumber":282,"author":{"gitId":"youdonnnn"},"content":"            case \"event\":","lastModifiedDate":"2024-02-24"},{"lineNumber":283,"author":{"gitId":"youdonnnn"},"content":"                if (task.contains(\"/from \")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":284,"author":{"gitId":"youdonnnn"},"content":"                    String taskDescEvent \u003d splitTaskDescAndStartAndEnd(task, 1);","lastModifiedDate":"2024-02-24"},{"lineNumber":285,"author":{"gitId":"youdonnnn"},"content":"                    String start \u003d splitTaskDescAndStartAndEnd(task, 2);","lastModifiedDate":"2024-02-24"},{"lineNumber":286,"author":{"gitId":"youdonnnn"},"content":"                    String end \u003d splitTaskDescAndStartAndEnd(task, 3);","lastModifiedDate":"2024-02-24"},{"lineNumber":287,"author":{"gitId":"youdonnnn"},"content":"                    return processEventCommand(taskDescEvent, start, end);","lastModifiedDate":"2024-02-24"},{"lineNumber":288,"author":{"gitId":"youdonnnn"},"content":"                }","lastModifiedDate":"2024-02-24"},{"lineNumber":289,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":290,"author":{"gitId":"youdonnnn"},"content":"        return \"Unknown Error :(\";","lastModifiedDate":"2024-02-24"},{"lineNumber":291,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":292,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"youdonnnn":292}},{"path":"src/main/java/youdon/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"import java.io.File;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":" * Represents a storage handler for saving and loading tasks to and from a file.","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":" * This class provides methods to save and load tasks from a file.","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"public class Storage {","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"    private final String filepath;","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"    private final File saveFile;","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"     * Constructs a new instance of the Storage class with the specified file path.","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"     * Creates a new save file if it doesn\u0027t exist.","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"     * @param filepath The file path of the save file.","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"        this.saveFile \u003d new File(filepath);","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"youdonnnn"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"youdonnnn"},"content":"            if (!saveFile.exists()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"youdonnnn"},"content":"                saveFile.getParentFile().mkdir();","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"youdonnnn"},"content":"                saveFile.createNewFile();","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"youdonnnn"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"youdonnnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"youdonnnn"},"content":"            System.out.println(\"Error!\" + e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"youdonnnn"},"content":"     * Saves the tasks from the task list to the save file.","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"youdonnnn"},"content":"     * @param tasks The list of tasks to save.","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"youdonnnn"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"youdonnnn"},"content":"    public void saveData(TaskList tasks) throws IOException {","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"youdonnnn"},"content":"        try (FileWriter writer \u003d new FileWriter(this.filepath)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"youdonnnn"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"youdonnnn"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"youdonnnn"},"content":"                writer.write(task.toString() + \"\\n\");","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"youdonnnn"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"youdonnnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"youdonnnn"},"content":"            System.err.println(\"Error! \" + e.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"youdonnnn"},"content":"     * Loads a todo task from the provided data string and adds it to the given list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"youdonnnn"},"content":"     * @param data  The string containing data about the todo task.","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"youdonnnn"},"content":"     * @param tasks The list of tasks to which the loaded task will be added.","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"youdonnnn"},"content":"    private void loadTodoTask(String data, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"youdonnnn"},"content":"        // identify task description","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"youdonnnn"},"content":"        int startIndex \u003d data.indexOf(\"[\") + 7;","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"youdonnnn"},"content":"        String description \u003d data.substring(startIndex);","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"youdonnnn"},"content":"        tasks.add(new Todo(description));","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"youdonnnn"},"content":"     * Loads a deadline task from the provided data string and adds it to the given list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"youdonnnn"},"content":"     * @param data  The string containing data about the deadline task.","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"youdonnnn"},"content":"     * @param tasks The list of tasks to which the loaded task will be added.","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"youdonnnn"},"content":"    private void loadDeadlineTask(String data, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"youdonnnn"},"content":"        // identify task description","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"youdonnnn"},"content":"        int startIndex \u003d data.indexOf(\"[\") + 7;","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"youdonnnn"},"content":"        int endIndex \u003d data.indexOf(\" (by:\");","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"youdonnnn"},"content":"        String description \u003d data.substring(startIndex, endIndex).trim();","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"youdonnnn"},"content":"        // identify task deadline","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"youdonnnn"},"content":"        startIndex \u003d data.indexOf(\"(by: \") + 5;","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"youdonnnn"},"content":"        endIndex \u003d data.indexOf(\")\", startIndex);","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"youdonnnn"},"content":"        String deadline \u003d data.substring(startIndex, endIndex);","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"youdonnnn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"youdonnnn"},"content":"        LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"youdonnnn"},"content":"        tasks.add(new Deadline(description, deadlineDateTime));","lastModifiedDate":"2024-02-09"},{"lineNumber":87,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":90,"author":{"gitId":"youdonnnn"},"content":"     * Loads an event task from the provided data string and adds it to the given list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":91,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":92,"author":{"gitId":"youdonnnn"},"content":"     * @param data  The string containing data about the event task.","lastModifiedDate":"2024-02-24"},{"lineNumber":93,"author":{"gitId":"youdonnnn"},"content":"     * @param tasks The list of tasks to which the loaded task will be added.","lastModifiedDate":"2024-02-24"},{"lineNumber":94,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":95,"author":{"gitId":"youdonnnn"},"content":"    private void loadEventTask(String data, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-24"},{"lineNumber":96,"author":{"gitId":"youdonnnn"},"content":"        // identify task description","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"youdonnnn"},"content":"        int startIndex \u003d data.indexOf(\"[\") + 7;","lastModifiedDate":"2024-02-08"},{"lineNumber":98,"author":{"gitId":"youdonnnn"},"content":"        int endIndex \u003d data.indexOf(\" (from:\");","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"youdonnnn"},"content":"        String description \u003d data.substring(startIndex, endIndex);","lastModifiedDate":"2024-02-08"},{"lineNumber":100,"author":{"gitId":"youdonnnn"},"content":"        // identify task start time","lastModifiedDate":"2024-02-08"},{"lineNumber":101,"author":{"gitId":"youdonnnn"},"content":"        startIndex \u003d data.indexOf(\"from: \") + 6;","lastModifiedDate":"2024-02-08"},{"lineNumber":102,"author":{"gitId":"youdonnnn"},"content":"        endIndex \u003d data.indexOf(\" to:\", startIndex);","lastModifiedDate":"2024-02-08"},{"lineNumber":103,"author":{"gitId":"youdonnnn"},"content":"        String start \u003d data.substring(startIndex, endIndex);","lastModifiedDate":"2024-02-08"},{"lineNumber":104,"author":{"gitId":"youdonnnn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-08"},{"lineNumber":105,"author":{"gitId":"youdonnnn"},"content":"        LocalDateTime startDateTime \u003d LocalDateTime.parse(start, formatter);","lastModifiedDate":"2024-02-08"},{"lineNumber":106,"author":{"gitId":"youdonnnn"},"content":"        // identify task end time","lastModifiedDate":"2024-02-08"},{"lineNumber":107,"author":{"gitId":"youdonnnn"},"content":"        startIndex \u003d data.indexOf(\" to:\") + 5;","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"youdonnnn"},"content":"        endIndex \u003d data.indexOf(\")\", startIndex);","lastModifiedDate":"2024-02-08"},{"lineNumber":109,"author":{"gitId":"youdonnnn"},"content":"        String end \u003d data.substring(startIndex, endIndex);","lastModifiedDate":"2024-02-08"},{"lineNumber":110,"author":{"gitId":"youdonnnn"},"content":"        LocalDateTime endDateTime \u003d LocalDateTime.parse(end, formatter);","lastModifiedDate":"2024-02-08"},{"lineNumber":111,"author":{"gitId":"youdonnnn"},"content":"        tasks.add(new Event(description, startDateTime, endDateTime));","lastModifiedDate":"2024-02-09"},{"lineNumber":112,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":113,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":114,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":115,"author":{"gitId":"youdonnnn"},"content":"     * Scans the data from the provided Scanner object and populates the given ArrayList with tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":116,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":117,"author":{"gitId":"youdonnnn"},"content":"     * @param scanner The Scanner object used to read the data.","lastModifiedDate":"2024-02-24"},{"lineNumber":118,"author":{"gitId":"youdonnnn"},"content":"     * @param tasks   The ArrayList to populate with tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":119,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":120,"author":{"gitId":"youdonnnn"},"content":"    private void scanData(Scanner scanner, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-24"},{"lineNumber":121,"author":{"gitId":"youdonnnn"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":122,"author":{"gitId":"youdonnnn"},"content":"            String data \u003d scanner.nextLine();","lastModifiedDate":"2024-02-24"},{"lineNumber":123,"author":{"gitId":"youdonnnn"},"content":"            // identify task type","lastModifiedDate":"2024-02-24"},{"lineNumber":124,"author":{"gitId":"youdonnnn"},"content":"            String taskType \u003d data.substring(1, 2);","lastModifiedDate":"2024-02-24"},{"lineNumber":125,"author":{"gitId":"youdonnnn"},"content":"            switch (taskType) {","lastModifiedDate":"2024-02-24"},{"lineNumber":126,"author":{"gitId":"youdonnnn"},"content":"                case \"T\":","lastModifiedDate":"2024-02-24"},{"lineNumber":127,"author":{"gitId":"youdonnnn"},"content":"                    loadTodoTask(data, tasks);","lastModifiedDate":"2024-02-24"},{"lineNumber":128,"author":{"gitId":"youdonnnn"},"content":"                    break;","lastModifiedDate":"2024-02-24"},{"lineNumber":129,"author":{"gitId":"youdonnnn"},"content":"                case \"D\":","lastModifiedDate":"2024-02-24"},{"lineNumber":130,"author":{"gitId":"youdonnnn"},"content":"                    loadDeadlineTask(data, tasks);","lastModifiedDate":"2024-02-24"},{"lineNumber":131,"author":{"gitId":"youdonnnn"},"content":"                    break;","lastModifiedDate":"2024-02-24"},{"lineNumber":132,"author":{"gitId":"youdonnnn"},"content":"                case \"E\":","lastModifiedDate":"2024-02-24"},{"lineNumber":133,"author":{"gitId":"youdonnnn"},"content":"                    loadEventTask(data, tasks);","lastModifiedDate":"2024-02-24"},{"lineNumber":134,"author":{"gitId":"youdonnnn"},"content":"                    break;","lastModifiedDate":"2024-02-24"},{"lineNumber":135,"author":{"gitId":"youdonnnn"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":136,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":137,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":138,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":139,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":140,"author":{"gitId":"youdonnnn"},"content":"     * Loads tasks from the save file and returns them as an ArrayList.","lastModifiedDate":"2024-02-24"},{"lineNumber":141,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":142,"author":{"gitId":"youdonnnn"},"content":"     * @return The list of tasks loaded from the save file.","lastModifiedDate":"2024-02-24"},{"lineNumber":143,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":144,"author":{"gitId":"youdonnnn"},"content":"    public ArrayList\u003cTask\u003e loadData() {","lastModifiedDate":"2024-02-24"},{"lineNumber":145,"author":{"gitId":"youdonnnn"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-24"},{"lineNumber":146,"author":{"gitId":"youdonnnn"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":147,"author":{"gitId":"youdonnnn"},"content":"            if (saveFile.length() \u003e 0) {","lastModifiedDate":"2024-02-24"},{"lineNumber":148,"author":{"gitId":"youdonnnn"},"content":"                Scanner scanner \u003d new Scanner(saveFile);","lastModifiedDate":"2024-02-24"},{"lineNumber":149,"author":{"gitId":"youdonnnn"},"content":"                scanData(scanner, tasks);","lastModifiedDate":"2024-02-24"},{"lineNumber":150,"author":{"gitId":"youdonnnn"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":151,"author":{"gitId":"youdonnnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":152,"author":{"gitId":"youdonnnn"},"content":"            System.out.println(\"Error!\" + e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":153,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":154,"author":{"gitId":"youdonnnn"},"content":"        return tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":155,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":156,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"youdonnnn":156}},{"path":"src/main/java/youdon/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":" * Represents a task in the Youdon task management system.","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":" * This class provides methods for managing tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"     * Constructs a new instance of the Task class with the specified description.","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"     * Returns a string representing the status icon of the task.","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"     * The status icon is \u0027X\u0027 if the task is done, and \u0027 \u0027 (space) otherwise.","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"youdonnnn"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"youdonnnn"},"content":"     * The string includes the status icon and the description of the task.","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"youdonnnn"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"youdonnnn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"youdonnnn"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"youdonnnn":40}},{"path":"src/main/java/youdon/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":" * Represents a list of tasks in the Youdon task management system.","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":" * This class provides methods for managing tasks in the list.","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"public class TaskList {","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"     * Constructs a new instance of the TaskList class with the specified list of tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"     * @param tasks The initial list of tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"youdonnnn"},"content":"    public int size() {","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"youdonnnn"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"youdonnnn"},"content":"     * Returns the task at the specified index in the list.","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"youdonnnn"},"content":"     * @param i The index of the task to retrieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"youdonnnn"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"youdonnnn"},"content":"    public Task get(int i) {","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"youdonnnn"},"content":"        return tasks.get(i);","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"youdonnnn"},"content":"     * Removes the task at the specified index from the list.","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"youdonnnn"},"content":"     * @param i The index of the task to remove.","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"youdonnnn"},"content":"    public void remove(int i) {","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"youdonnnn"},"content":"        tasks.remove(i);","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"youdonnnn"},"content":"     * Adds a new task to the end of the list.","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"youdonnnn"},"content":"     * @param task The task to add to the list.","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"youdonnnn"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"youdonnnn"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"youdonnnn":61}},{"path":"src/main/java/youdon/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":" * Represents a to-do task in the Youdon task management system.","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":" * Inherits from the Task class.","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"     * Constructs a new instance of the Todo class with the specified description.","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"        super(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"     * Returns the type icon for the to-do task.","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"     * @return The type icon for the to-do task (in this case, \"T\").","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"        return \"T\";","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"     * Returns a string representation of the to-do task.","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"youdonnnn"},"content":"     * @return A string representation of the to-do task, including its type icon, status icon, and description.","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"youdonnnn"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"youdonnnn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"youdonnnn"},"content":"        return \"[\" + this.getTypeIcon() + \"][\" + this.getStatusIcon() + \"] \" + this.description.trim();","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"youdonnnn":36}},{"path":"src/main/java/youdon/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":" * Represents the user interface (UI) of the Youdon chatbot.","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":" * Provides methods to interact with the user through the console.","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"public class Ui {","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"     * Constructs a new instance of the Ui class.","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"    public Ui() {","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"     * Returns the farewell message when the user exits the chatbot.","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"     * @return The farewell message.","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"    public String getByeMsg() {","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"        return \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"     * Returns an error message to be displayed by the chatbot.","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"youdonnnn"},"content":"     * @return The formatted error message.","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"youdonnnn"},"content":"    public String getYoudonErrorMsg(String message) {","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"youdonnnn"},"content":"        return message;","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"youdonnnn"},"content":"     * Returns a formatted string representation of the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"youdonnnn"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"youdonnnn"},"content":"     * @return The formatted task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"youdonnnn"},"content":"    public String getTaskList(TaskList tasks) {","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"youdonnnn"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"youdonnnn"},"content":"        sb.append(\"Here are your tasks:\").append(\"\\n\");","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"youdonnnn"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"youdonnnn"},"content":"            sb.append((i + 1)).append(\". \").append(tasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"youdonnnn"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"youdonnnn"},"content":"     * Returns a message confirming the successful marking of a task as done.","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"youdonnnn"},"content":"     * @param tasks      The list of tasks containing the marked task.","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"youdonnnn"},"content":"     * @param taskNumber The number of the marked task.","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"youdonnnn"},"content":"     * @return The confirmation message.","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"youdonnnn"},"content":"    public String getMarkMsg(TaskList tasks, int taskNumber) {","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"youdonnnn"},"content":"        return \"Nicely done! The task has been marked as done:\" + \"\\n\" +","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"youdonnnn"},"content":"                \"  \" + tasks.get(taskNumber - 1).toString() + \"\\n\";","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"youdonnnn"},"content":"     * Returns a message confirming the successful marking of a task as undone.","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"youdonnnn"},"content":"     * @param tasks      The list of tasks containing the marked task.","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"youdonnnn"},"content":"     * @param taskNumber The number of the marked task.","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"youdonnnn"},"content":"     * @return The confirmation message.","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"youdonnnn"},"content":"    public String getUnmarkMsg(TaskList tasks, int taskNumber) {","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"youdonnnn"},"content":"        return \"Okies! The task has been marked as undone:\" + \"\\n\" +","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"youdonnnn"},"content":"                \"  \" + tasks.get(taskNumber - 1).toString() + \"\\n\";","lastModifiedDate":"2024-02-21"},{"lineNumber":72,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"youdonnnn"},"content":"     * Returns a message confirming the successful deletion of a task.","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"youdonnnn"},"content":"     * @param task The task that has been deleted.","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"youdonnnn"},"content":"     * @return The confirmation message.","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"youdonnnn"},"content":"    public String getDeleteMsg(Task task) {","lastModifiedDate":"2024-02-21"},{"lineNumber":81,"author":{"gitId":"youdonnnn"},"content":"        return \"Alright! The task has been deleted:\" + \"\\n\" +","lastModifiedDate":"2024-02-21"},{"lineNumber":82,"author":{"gitId":"youdonnnn"},"content":"                \"  \" + task.toString() + \"\\n\";","lastModifiedDate":"2024-02-21"},{"lineNumber":83,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":84,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":85,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":86,"author":{"gitId":"youdonnnn"},"content":"     * Returns a message confirming the successful addition of a task to the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":87,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":88,"author":{"gitId":"youdonnnn"},"content":"     * @param tasks The updated list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":89,"author":{"gitId":"youdonnnn"},"content":"     * @return The confirmation message.","lastModifiedDate":"2024-02-24"},{"lineNumber":90,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":91,"author":{"gitId":"youdonnnn"},"content":"    public String getTaskAddedMsg(TaskList tasks) {","lastModifiedDate":"2024-02-16"},{"lineNumber":92,"author":{"gitId":"youdonnnn"},"content":"        int index \u003d tasks.size() - 1;","lastModifiedDate":"2024-02-16"},{"lineNumber":93,"author":{"gitId":"youdonnnn"},"content":"        return \"Alright! Task added:\\n  \" + tasks.get(index).toString() + \"\\n\" +","lastModifiedDate":"2024-02-21"},{"lineNumber":94,"author":{"gitId":"youdonnnn"},"content":"                \"You now have \" + tasks.size() + \" task(s) in the list.\" + \"\\n\";","lastModifiedDate":"2024-02-21"},{"lineNumber":95,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":96,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":98,"author":{"gitId":"youdonnnn"},"content":"     * Returns a message confirming the successful snoozing of a task by 1 day.","lastModifiedDate":"2024-02-24"},{"lineNumber":99,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":100,"author":{"gitId":"youdonnnn"},"content":"     * @param tasks      The list of tasks containing the snoozed task.","lastModifiedDate":"2024-02-24"},{"lineNumber":101,"author":{"gitId":"youdonnnn"},"content":"     * @param taskNumber The number of the snoozed task.","lastModifiedDate":"2024-02-24"},{"lineNumber":102,"author":{"gitId":"youdonnnn"},"content":"     * @return The confirmation message.","lastModifiedDate":"2024-02-24"},{"lineNumber":103,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":104,"author":{"gitId":"youdonnnn"},"content":"    public String getSnoozeMsg(TaskList tasks, int taskNumber) {","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"youdonnnn"},"content":"        return \"Okies! The task has been snoozed by 1 day:\" + \"\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"youdonnnn"},"content":"                \"  \" + tasks.get(taskNumber - 1).toString() + \"\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"youdonnnn":108}},{"path":"src/main/java/youdon/ValidCommands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":" * Enum representing valid commands recognized by YoudonBot.","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"public enum ValidCommands {","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"    LIST(\"list\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"    FIND(\"find\"),","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"    SNOOZE(\"snooze\");","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"    private final String command;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"     * Constructs a validCommands enum with the specified command string.","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"     * @param command The command string associated with the enum.","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"    ValidCommands(String command) {","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"youdonnnn"},"content":"     * Retrieves the command string associated with this enum.","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"youdonnnn"},"content":"     * @return The command string.","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"youdonnnn"},"content":"    public String getCommand() {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"youdonnnn"},"content":"        return this.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"youdonnnn":39}},{"path":"src/main/java/youdon/Youdon.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":" * The main class for YoudonBot.","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"public class Youdon {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"    private final Parser parser;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"     * Constructs a new instance of the Youdon class.","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"     * Initializes the user interface, storage, task list, and parser.","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"    public Youdon() {","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"        // initialise ui, storage (filepath \u003d \"./data/save.txt\") and tasklist","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"        Storage storage \u003d new Storage(\"./data/save.txt\");","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"        TaskList tasks \u003d new TaskList(storage.loadData());","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"        this.parser \u003d new Parser(ui, tasks, storage);","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"     * The main method of the application.","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"     * This method is empty as YoudonBot has switched from CLI to GUI.","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"     * @param args The command-line arguments passed to the application.","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"youdonnnn"},"content":"     * Get YoudonBot\u0027s response based on the input.","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"youdonnnn"},"content":"     * @param input The user input to process.","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"youdonnnn"},"content":"     * @return The response generated by the chatbot.","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"youdonnnn"},"content":"    protected String getResponse(String input) {","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"youdonnnn"},"content":"        return parser.parse(input);","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"youdonnnn":42}},{"path":"src/main/java/youdon/YoudonException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":" * Represents custom exceptions for the Youdon chatbot application.","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"public class YoudonException extends Throwable {","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"     * Detects if the input contains a missing task description and throws an EmptyDescException if found.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"     * @param input The input string to check for missing task description.","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"     * @throws EmptyDescException if the task description is empty.","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"    public static void detectMissingDesc(String input) throws EmptyDescException {","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"        if ((input.equals(\"todo\")) || (input.equals(\"deadline\")) || (input.equals(\"event\"))) {","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"            throw new YoudonException.EmptyDescException(\"Hey! The task description is empty!\");","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"     * Detects if the input contains an invalid command and throws an InvalidCommandException if found.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"     * @param input The input string to check for invalid command.","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"     * @throws InvalidCommandException if the command is invalid.","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"    public static void detectInvalidCommand(String input) throws InvalidCommandException {","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"        for (ValidCommands command: ValidCommands.values()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"            if (input.contains(command.getCommand())) {","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"youdonnnn"},"content":"                return;","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"youdonnnn"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"youdonnnn"},"content":"        throw new YoudonException.InvalidCommandException(\"Sorry, I do not recognise that command.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"youdonnnn"},"content":"     * Represents an exception thrown when the task description is empty.","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"youdonnnn"},"content":"    public static class EmptyDescException extends Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"youdonnnn"},"content":"        /**","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"youdonnnn"},"content":"         * Constructs an EmptyDescException with the specified error message.","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"youdonnnn"},"content":"         *","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"youdonnnn"},"content":"         * @param errorMessage The error message explaining the empty description.","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"youdonnnn"},"content":"         */","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"youdonnnn"},"content":"        public EmptyDescException(String errorMessage) {","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"youdonnnn"},"content":"            super(errorMessage);","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"youdonnnn"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"youdonnnn"},"content":"     * Represents an exception thrown when an invalid command is detected.","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"youdonnnn"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"youdonnnn"},"content":"    public static class InvalidCommandException extends Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"youdonnnn"},"content":"        /**","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"youdonnnn"},"content":"         * Constructs an InvalidCommandException with the specified error message.","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"youdonnnn"},"content":"         *","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"youdonnnn"},"content":"         * @param errorMessage The error message explaining the invalid command.","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"youdonnnn"},"content":"         */","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"youdonnnn"},"content":"        public InvalidCommandException(String errorMessage) {","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"youdonnnn"},"content":"            super(errorMessage);","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"youdonnnn":64}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"youdonnnn":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"youdon.MainWindow\"\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"youdonnnn":19}},{"path":"src/test/java/youdon/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"import java.io.File;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"    // no save file, add first task","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"    public void testValidDeadline() {","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"        // delete save file","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"        File fileToDelete \u003d new File(\"./data/save.txt\");","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"        fileToDelete.delete();","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"        // set input in input stream","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"                \"deadline return book /by 2/12/2019 1800\".getBytes());","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"        System.setIn(inputStream);","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"        // capture output in output stream","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"youdonnnn"},"content":"        // run main()","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"youdonnnn"},"content":"        Youdon.main(null);","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"youdonnnn"},"content":"        // retrieve output and replace all system line separators with \\n","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"youdonnnn"},"content":"        String actualOutput \u003d outputStream.toString().replaceAll(System.lineSeparator(), \"\\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"youdonnnn"},"content":"        // reset input and output back to System","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"youdonnnn"},"content":"        System.setIn(System.in);","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"youdonnnn"},"content":"        System.setOut(System.out);","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"youdonnnn"},"content":"        // expected output","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"youdonnnn"},"content":"        String expectedOutput \u003d \"Save File created successfully!\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"youdonnnn"},"content":"                + \"Save File is empty :(\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"youdonnnn"},"content":"                + \"----------------------------------------------------------------\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"youdonnnn"},"content":"                + \"Hello! I\u0027m Youdon!\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"youdonnnn"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"youdonnnn"},"content":"                + \"\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"youdonnnn"},"content":"                + \"----------------------------------------------------------------\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"youdonnnn"},"content":"                + \"----------------------------------------------------------------\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"youdonnnn"},"content":"                + \"Alright! Task added:\\n  \"","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"youdonnnn"},"content":"                + \"[D][ ] return book (by: Dec 02 2019 18:00)\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"youdonnnn"},"content":"                + \"You now have 1 task(s) in the list.\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"youdonnnn"},"content":"                + \"----------------------------------------------------------------\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"youdonnnn"},"content":"                + \"Tasklist saved!\";","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"youdonnnn"},"content":"        // assert actual and expected output","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"youdonnnn"},"content":"        assertEquals(expectedOutput.trim(), actualOutput.trim());","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"youdonnnn":57}},{"path":"src/test/java/youdon/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"import java.io.File;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"public class EventTest {","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"    // no save file, add first task","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"    public void testValidEvent() {","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"        // delete save file","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"        File fileToDelete \u003d new File(\"./data/save.txt\");","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"        fileToDelete.delete();","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"        // set input in input stream","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"                \"event project meeting /from 5/6/2020 1900 /to 7/7/2021 1900\".getBytes());","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"        System.setIn(inputStream);","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"        // capture output in output stream","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"youdonnnn"},"content":"        // run main()","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"youdonnnn"},"content":"        Youdon.main(null);","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"youdonnnn"},"content":"        // retrieve output and replace all system line separators with \\n","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"youdonnnn"},"content":"        String actualOutput \u003d outputStream.toString().replaceAll(System.lineSeparator(), \"\\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"youdonnnn"},"content":"        // reset input and output back to System","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"youdonnnn"},"content":"        System.setIn(System.in);","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"youdonnnn"},"content":"        System.setOut(System.out);","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"youdonnnn"},"content":"        // expected output","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"youdonnnn"},"content":"        String expectedOutput \u003d \"Save File created successfully!\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"youdonnnn"},"content":"                + \"Save File is empty :(\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"youdonnnn"},"content":"                + \"----------------------------------------------------------------\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"youdonnnn"},"content":"                + \"Hello! I\u0027m Youdon!\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"youdonnnn"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"youdonnnn"},"content":"                + \"\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"youdonnnn"},"content":"                + \"----------------------------------------------------------------\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"youdonnnn"},"content":"                + \"----------------------------------------------------------------\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"youdonnnn"},"content":"                + \"Alright! Task added:\\n  \"","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"youdonnnn"},"content":"                + \"[E][ ] project meeting (from: Jun 05 2020 19:00 to: Jul 07 2021 19:00)\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"youdonnnn"},"content":"                + \"You now have 1 task(s) in the list.\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"youdonnnn"},"content":"                + \"----------------------------------------------------------------\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"youdonnnn"},"content":"                + \"Tasklist saved!\";","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"youdonnnn"},"content":"        // assert actual and expected output","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"youdonnnn"},"content":"        assertEquals(expectedOutput.trim(), actualOutput.trim());","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"youdonnnn":57}},{"path":"src/test/java/youdon/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"import java.io.File;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"    // no save file, add first task","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"    public void testValidTodo() {","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"        // delete save file","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"        File fileToDelete \u003d new File(\"./data/save.txt\");","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"        fileToDelete.delete();","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"        // set input in input stream","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(\"todo read book\".getBytes());","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"        System.setIn(inputStream);","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"        // capture output in output stream","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"        // run main()","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"youdonnnn"},"content":"        Youdon.main(null);","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"youdonnnn"},"content":"        // retrieve output and replace all system line separators with \\n","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"youdonnnn"},"content":"        String actualOutput \u003d outputStream.toString().replaceAll(System.lineSeparator(), \"\\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"youdonnnn"},"content":"        // reset input and output back to System","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"youdonnnn"},"content":"        System.setIn(System.in);","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"youdonnnn"},"content":"        System.setOut(System.out);","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"youdonnnn"},"content":"        // expected output","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"youdonnnn"},"content":"        String expectedOutput \u003d \"Save File created successfully!\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"youdonnnn"},"content":"                + \"Save File is empty :(\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"youdonnnn"},"content":"                + \"----------------------------------------------------------------\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"youdonnnn"},"content":"                + \"Hello! I\u0027m Youdon!\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"youdonnnn"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"youdonnnn"},"content":"                + \"\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"youdonnnn"},"content":"                + \"----------------------------------------------------------------\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"youdonnnn"},"content":"                + \"----------------------------------------------------------------\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"youdonnnn"},"content":"                + \"Alright! Task added:\\n  \"","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"youdonnnn"},"content":"                + \"[T][ ] read book\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"youdonnnn"},"content":"                + \"You now have 1 task(s) in the list.\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"youdonnnn"},"content":"                + \"----------------------------------------------------------------\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"youdonnnn"},"content":"                + \"Tasklist saved!\";","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"youdonnnn"},"content":"        // assert actual and expected output","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"youdonnnn"},"content":"        assertEquals(expectedOutput.trim(), actualOutput.trim());","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"youdonnnn":56}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"todo borrow book","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"mark 2","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"list","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"delete 2","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"deadline return book /by 2/12/2019 1800","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"event project meeting /from 5/6/2020 1900 /to 7/7/2021 1900","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"bye","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"youdonnnn":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"java -classpath ..\\bin Youdon \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"youdonnnn":1,"-":20}}]
