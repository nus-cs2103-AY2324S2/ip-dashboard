[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"# Lai project template","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"This is a project template for a greenfield Java project. It\u0027s was originally named after the Java mascot _Duke_. But has now been given the name Lai. Given below are instructions on how to use it.","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"3. After that, locate the `src/main/java/Lai.java` file, right-click it, and choose `Run Lai.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"casaarlai":3,"-":21}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"casaarlai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"casaarlai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"casaarlai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"casaarlai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"casaarlai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"casaarlai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"casaarlai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"casaarlai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"casaarlai"},"content":"    mainClass.set(\"Lai\")","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"casaarlai"},"content":"    archiveBaseName \u003d \"lai\"","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"casaarlai":17,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"# Lai User Guide","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"![Screenshot of the user interface for Lai](https://casaarlai.github.io/ip/Ui.png)","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"_A rather **cynical** personality that helps you keep track of your life._","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"\u003e Write it down. Written goals have a way of transforming wishes into wants; cant\u0027s into cans; dreams into plans; and plans into reality. Don\u0027t just think it - ink it! – Michael Korda [(source)](https://www.azquotes.com/quote/856710)","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":"Lai is currently able to keep track of","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"- [x] Events (with support for start and end dates)","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"- [x] Deadlines (with support for due dates)","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"- [x] To-do items","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"- [ ] Emotional ramblings (hopefully Lai never has to!)","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"## Adding a ToDo: ```todo```","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"Adds a to-do task to the list.  ","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":"Format: ```todo DESCRIPTION```","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":"Examples: ","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"casaarlai"},"content":"+ ```todo read book```","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"casaarlai"},"content":"+ ```todo recommend book```","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"casaarlai"},"content":"Expected output:","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"casaarlai"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"Added: [T][] read book","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"casaarlai"},"content":"Total number of tasks: 1","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"casaarlai"},"content":"## Adding a Deadline: ```deadline```","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"casaarlai"},"content":"Adds a task with a specific deadline to the list.","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"casaarlai"},"content":"Format: ```deadline DESCRIPTION /by YYYY-MM-DD```","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"casaarlai"},"content":"Examples:","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"casaarlai"},"content":"+ ```deadline return book /by 2024-01-01```","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"casaarlai"},"content":"+ ```deadline finish assignment /by 2024-12-13```","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"casaarlai"},"content":"Expected output:","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"casaarlai"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"casaarlai"},"content":"Added: [D][] return book (by: 01 Jan 2024)","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"casaarlai"},"content":"Total number of tasks: 2","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"casaarlai"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"casaarlai"},"content":"## Adding an Event: ```event```","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"casaarlai"},"content":"Adds an event with a start date and an end date to the list.","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"casaarlai"},"content":"Format: ```event DESCRIPTION /from YYYY-MM-DD /to YYYY-MM-DD```","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"casaarlai"},"content":"Examples:","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"casaarlai"},"content":"+ ```event library book sharing /from 2024-01-02 /to 2024-01-04```","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"casaarlai"},"content":"+ ```event band concert /from 2024-04-20 /to 2024-04-21```","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"casaarlai"},"content":"Expected output:","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"casaarlai"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"casaarlai"},"content":"Added: [E][] library book sharing (from: 02 Jan 2024 to: 04 Jan 2024)","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"casaarlai"},"content":"Total number of tasks: 3","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"casaarlai"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"casaarlai"},"content":"## Marking a task: ```mark```","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"casaarlai"},"content":"Mark a task as done.","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"casaarlai"},"content":"Format: ```mark INDEX```","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"casaarlai"},"content":"Examples:","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"casaarlai"},"content":"+ ```mark 2```","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"casaarlai"},"content":"Expected output:","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"casaarlai"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"casaarlai"},"content":"You actually did something? Marked done:","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"casaarlai"},"content":"[D][X] return book (by: 01 Jan 2024)","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"casaarlai"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":72,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":73,"author":{"gitId":"casaarlai"},"content":"## Unmarking a task: ```unmark```","lastModifiedDate":"2024-02-21"},{"lineNumber":74,"author":{"gitId":"casaarlai"},"content":"Mark a task as not done.","lastModifiedDate":"2024-02-21"},{"lineNumber":75,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":76,"author":{"gitId":"casaarlai"},"content":"Format: ```unmark INDEX```","lastModifiedDate":"2024-02-21"},{"lineNumber":77,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":78,"author":{"gitId":"casaarlai"},"content":"Examples:","lastModifiedDate":"2024-02-21"},{"lineNumber":79,"author":{"gitId":"casaarlai"},"content":"+ ```unmark 2```","lastModifiedDate":"2024-02-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"casaarlai"},"content":"Expected output:","lastModifiedDate":"2024-02-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":83,"author":{"gitId":"casaarlai"},"content":"Come on now, don\u0027t be useless. Marked not done:","lastModifiedDate":"2024-02-21"},{"lineNumber":84,"author":{"gitId":"casaarlai"},"content":"[D][] return book (by: 01 Jan 2024)","lastModifiedDate":"2024-02-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"casaarlai"},"content":"## Listing all tasks: ```list```","lastModifiedDate":"2024-02-21"},{"lineNumber":88,"author":{"gitId":"casaarlai"},"content":"Shows a list of all the existing tasks in the list.","lastModifiedDate":"2024-02-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":90,"author":{"gitId":"casaarlai"},"content":"Format: ```list```","lastModifiedDate":"2024-02-21"},{"lineNumber":91,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":92,"author":{"gitId":"casaarlai"},"content":"Examples:","lastModifiedDate":"2024-02-21"},{"lineNumber":93,"author":{"gitId":"casaarlai"},"content":"+ ```list```","lastModifiedDate":"2024-02-21"},{"lineNumber":94,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":95,"author":{"gitId":"casaarlai"},"content":"Expected output:","lastModifiedDate":"2024-02-21"},{"lineNumber":96,"author":{"gitId":"casaarlai"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":97,"author":{"gitId":"casaarlai"},"content":"1. [T][] read book","lastModifiedDate":"2024-02-21"},{"lineNumber":98,"author":{"gitId":"casaarlai"},"content":"2. [D][] return book (by: 01 Jan 2024)","lastModifiedDate":"2024-02-21"},{"lineNumber":99,"author":{"gitId":"casaarlai"},"content":"3. [E][] library book sharing (from: 02 Jan 2024 to: 04 Jan 2024)","lastModifiedDate":"2024-02-21"},{"lineNumber":100,"author":{"gitId":"casaarlai"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":102,"author":{"gitId":"casaarlai"},"content":"## Deleting a task: ```delete```","lastModifiedDate":"2024-02-21"},{"lineNumber":103,"author":{"gitId":"casaarlai"},"content":"Deletes an existing tasks in the list.","lastModifiedDate":"2024-02-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":105,"author":{"gitId":"casaarlai"},"content":"Format: ```delete INDEX```","lastModifiedDate":"2024-02-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":107,"author":{"gitId":"casaarlai"},"content":"Examples:","lastModifiedDate":"2024-02-21"},{"lineNumber":108,"author":{"gitId":"casaarlai"},"content":"+ ```delete 1```","lastModifiedDate":"2024-02-21"},{"lineNumber":109,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":110,"author":{"gitId":"casaarlai"},"content":"Expected output:","lastModifiedDate":"2024-02-21"},{"lineNumber":111,"author":{"gitId":"casaarlai"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":112,"author":{"gitId":"casaarlai"},"content":"I have deleted: [T][] read book","lastModifiedDate":"2024-02-21"},{"lineNumber":113,"author":{"gitId":"casaarlai"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":114,"author":{"gitId":"casaarlai"},"content":"## Finding tasks by their description: ```find```","lastModifiedDate":"2024-02-21"},{"lineNumber":115,"author":{"gitId":"casaarlai"},"content":"Finds all tasks with descriptions that contain the given keyword(s)","lastModifiedDate":"2024-02-21"},{"lineNumber":116,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":117,"author":{"gitId":"casaarlai"},"content":"Format: ```find KEYWORD(S)```","lastModifiedDate":"2024-02-21"},{"lineNumber":118,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":119,"author":{"gitId":"casaarlai"},"content":"Examples:","lastModifiedDate":"2024-02-21"},{"lineNumber":120,"author":{"gitId":"casaarlai"},"content":"+ ```find sharing```","lastModifiedDate":"2024-02-21"},{"lineNumber":121,"author":{"gitId":"casaarlai"},"content":"+ ```find book```","lastModifiedDate":"2024-02-21"},{"lineNumber":122,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":123,"author":{"gitId":"casaarlai"},"content":"Expected output:","lastModifiedDate":"2024-02-21"},{"lineNumber":124,"author":{"gitId":"casaarlai"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":125,"author":{"gitId":"casaarlai"},"content":"1. [E][] library book sharing (from: 02 Jan 2024 to: 04 Jan 2024)","lastModifiedDate":"2024-02-21"},{"lineNumber":126,"author":{"gitId":"casaarlai"},"content":"```","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"casaarlai":110,"-":16}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"casaarlai"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"casaarlai"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"casaarlai"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"casaarlai"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"casaarlai"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"casaarlai"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"casaarlai"},"content":"    @FXML","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"casaarlai"},"content":"    @FXML","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"casaarlai"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"casaarlai"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"casaarlai"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"casaarlai"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"casaarlai"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"casaarlai"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"casaarlai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"casaarlai"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"casaarlai"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"casaarlai"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"casaarlai"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"casaarlai"},"content":"    private void flip() {","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"casaarlai"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"casaarlai"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"casaarlai"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"casaarlai"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"casaarlai"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"casaarlai"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"casaarlai"},"content":"    public static DialogBox getLaiDialog(String text, Image img) {","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"casaarlai"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"casaarlai"},"content":"        db.setBackground(new Background(new BackgroundFill(Color.LIGHTGRAY, CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"casaarlai"},"content":"        db.flip();","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"casaarlai"},"content":"        return db;","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"casaarlai":65}},{"path":"src/main/java/Lai.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"import lai.task.Deadline;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"import lai.task.Event;","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"import lai.task.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"import lai.task.ToDo;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"import lai.util.*;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"import java.util.List;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"public class Lai {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"    private Storage storage \u003d new Storage();","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"     * Constructs a Lai object.","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"casaarlai"},"content":"    public Lai() {","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":"        tasks \u003d new TaskList(storage.readTasksFile());","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"casaarlai"},"content":"        assert tasks.size() \u003e\u003d 0 : \"TaskList initialization failed, tasks has a size of less than 0\";","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"     * Marks a task as done.","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"casaarlai"},"content":"     * @return A string message indicating the task has been successfully marked.","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"casaarlai"},"content":"     * @throws LaiException If the description is invalid or the operation fails.","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"    public String markTask(String index) throws LaiException {","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"casaarlai"},"content":"        Parser.checkDescription(index);","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"casaarlai"},"content":"        int i \u003d Integer.parseInt(index);","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"casaarlai"},"content":"        Task t \u003d tasks.get(i - 1);","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"casaarlai"},"content":"        t.setDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"casaarlai"},"content":"        storage.updateTasksFile(tasks);","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"casaarlai"},"content":"        return Ui.printTaskMarked(t);","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"casaarlai"},"content":"     * Marks a task as not done.","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"casaarlai"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"casaarlai"},"content":"     * @return A string message indicating the task has been successfully marked.","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"casaarlai"},"content":"     * @throws LaiException If the description is invalid or the operation fails.","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"casaarlai"},"content":"    public String unmarkTask(String index) throws LaiException {","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"casaarlai"},"content":"        Parser.checkDescription(index);","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"casaarlai"},"content":"        int i \u003d Integer.parseInt(index);","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"casaarlai"},"content":"        Task t \u003d tasks.get(i - 1);","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"casaarlai"},"content":"        t.setNotDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"casaarlai"},"content":"        storage.updateTasksFile(tasks);","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"casaarlai"},"content":"        return Ui.printTaskUnmarked(t);","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"casaarlai"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"casaarlai"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"casaarlai"},"content":"     * @return A string message indicating the task has been successfully deleted.","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"casaarlai"},"content":"     * @throws IndexOutOfBoundsException If the provided index is out of bounds.","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"casaarlai"},"content":"    public String deleteTask(String index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"casaarlai"},"content":"        int i \u003d Integer.parseInt(index);","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"casaarlai"},"content":"        Task t \u003d tasks.get(i - 1);","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"casaarlai"},"content":"        tasks.remove(t);","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"casaarlai"},"content":"        storage.updateTasksFile(tasks);","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"casaarlai"},"content":"        return Ui.printTaskDeleted(t);","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"casaarlai"},"content":"     * Adds a new deadline task.","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"casaarlai"},"content":"     * @param desc The description of the deadline, including the task description and the deadline date/time.","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"casaarlai"},"content":"     * @return A string message indicating the deadline task has been successfully added.","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"casaarlai"},"content":"     * @throws LaiException If the description is invalid or the operation fails.","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":83,"author":{"gitId":"casaarlai"},"content":"    public String addDeadline(String desc) throws LaiException {","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"casaarlai"},"content":"        Parser.checkDescription(desc);","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"casaarlai"},"content":"        // Assert that the description is not empty after checking","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"casaarlai"},"content":"        assert !desc.isEmpty() : \"Deadline creation failed, \" +","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"casaarlai"},"content":"                \"description for new Deadline is empty\";","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"casaarlai"},"content":"        // Separating the deadline from description","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"casaarlai"},"content":"        String[] descBy \u003d desc.split(\" /by \", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"casaarlai"},"content":"        desc \u003d descBy[0];","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"casaarlai"},"content":"        String by \u003d \"\";","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"casaarlai"},"content":"        if (descBy.length \u003e 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"casaarlai"},"content":"            by \u003d descBy[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"casaarlai"},"content":"        Deadline newTask \u003d new Deadline(desc, by);","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":100,"author":{"gitId":"casaarlai"},"content":"        return Ui.printTaskAdded(newTask, tasks.add(newTask, storage));","lastModifiedDate":"2024-02-20"},{"lineNumber":101,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":102,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":103,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":104,"author":{"gitId":"casaarlai"},"content":"     * Adds a new to-do task.","lastModifiedDate":"2024-02-20"},{"lineNumber":105,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":106,"author":{"gitId":"casaarlai"},"content":"     * @param desc The description of the to-do task.","lastModifiedDate":"2024-02-20"},{"lineNumber":107,"author":{"gitId":"casaarlai"},"content":"     * @return A string message indicating the to-do task has been successfully added.","lastModifiedDate":"2024-02-20"},{"lineNumber":108,"author":{"gitId":"casaarlai"},"content":"     * @throws LaiException If the description is invalid or the operation fails.","lastModifiedDate":"2024-02-20"},{"lineNumber":109,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":110,"author":{"gitId":"casaarlai"},"content":"    public String addToDo(String desc) throws LaiException {","lastModifiedDate":"2024-02-20"},{"lineNumber":111,"author":{"gitId":"casaarlai"},"content":"        Parser.checkDescription(desc);","lastModifiedDate":"2024-02-08"},{"lineNumber":112,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":113,"author":{"gitId":"casaarlai"},"content":"        // Assert that the description is not empty after checking","lastModifiedDate":"2024-02-20"},{"lineNumber":114,"author":{"gitId":"casaarlai"},"content":"        assert !desc.isEmpty() : \"ToDo creation failed, \" +","lastModifiedDate":"2024-02-20"},{"lineNumber":115,"author":{"gitId":"casaarlai"},"content":"                \"description for new ToDo is empty\";","lastModifiedDate":"2024-02-20"},{"lineNumber":116,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":117,"author":{"gitId":"casaarlai"},"content":"        ToDo newTask \u003d new ToDo(desc);","lastModifiedDate":"2024-02-20"},{"lineNumber":118,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":119,"author":{"gitId":"casaarlai"},"content":"        return Ui.printTaskAdded(newTask, tasks.add(newTask, storage));","lastModifiedDate":"2024-02-20"},{"lineNumber":120,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":121,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":122,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":123,"author":{"gitId":"casaarlai"},"content":"     * Adds a new event task.","lastModifiedDate":"2024-02-20"},{"lineNumber":124,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":125,"author":{"gitId":"casaarlai"},"content":"     * @param desc The description of the event, including the event description, start time, and end time.","lastModifiedDate":"2024-02-20"},{"lineNumber":126,"author":{"gitId":"casaarlai"},"content":"     * @return A string message indicating the event task has been successfully added.","lastModifiedDate":"2024-02-20"},{"lineNumber":127,"author":{"gitId":"casaarlai"},"content":"     * @throws LaiException If the description is invalid or the operation fails.","lastModifiedDate":"2024-02-20"},{"lineNumber":128,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":129,"author":{"gitId":"casaarlai"},"content":"    public String addEvent(String desc) throws LaiException {","lastModifiedDate":"2024-02-20"},{"lineNumber":130,"author":{"gitId":"casaarlai"},"content":"        Parser.checkDescription(desc);","lastModifiedDate":"2024-02-08"},{"lineNumber":131,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":132,"author":{"gitId":"casaarlai"},"content":"        // Assert that the description is not empty after checking","lastModifiedDate":"2024-02-20"},{"lineNumber":133,"author":{"gitId":"casaarlai"},"content":"        assert !desc.isEmpty() : \"Event creation failed, \" +","lastModifiedDate":"2024-02-20"},{"lineNumber":134,"author":{"gitId":"casaarlai"},"content":"                \"description for new Event is empty\";","lastModifiedDate":"2024-02-20"},{"lineNumber":135,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":136,"author":{"gitId":"casaarlai"},"content":"        // Separating the start from description","lastModifiedDate":"2024-01-25"},{"lineNumber":137,"author":{"gitId":"casaarlai"},"content":"        String[] descFrom \u003d desc.split(\" /from \", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":138,"author":{"gitId":"casaarlai"},"content":"        desc \u003d descFrom[0];","lastModifiedDate":"2024-01-25"},{"lineNumber":139,"author":{"gitId":"casaarlai"},"content":"        String from \u003d \"\";","lastModifiedDate":"2024-01-25"},{"lineNumber":140,"author":{"gitId":"casaarlai"},"content":"        if (descFrom.length \u003e 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":141,"author":{"gitId":"casaarlai"},"content":"            from \u003d descFrom[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":142,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":143,"author":{"gitId":"casaarlai"},"content":"        // Separating the end out","lastModifiedDate":"2024-01-25"},{"lineNumber":144,"author":{"gitId":"casaarlai"},"content":"        String[] fromTo \u003d from.split(\" /to \", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":145,"author":{"gitId":"casaarlai"},"content":"        from \u003d fromTo[0];","lastModifiedDate":"2024-01-25"},{"lineNumber":146,"author":{"gitId":"casaarlai"},"content":"        String to \u003d \"\";","lastModifiedDate":"2024-01-25"},{"lineNumber":147,"author":{"gitId":"casaarlai"},"content":"        if (fromTo.length \u003e 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":148,"author":{"gitId":"casaarlai"},"content":"            to \u003d fromTo[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":149,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":150,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":151,"author":{"gitId":"casaarlai"},"content":"        Event newTask \u003d new Event(desc, from, to);","lastModifiedDate":"2024-01-25"},{"lineNumber":152,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":153,"author":{"gitId":"casaarlai"},"content":"        return Ui.printTaskAdded(newTask, tasks.add(newTask, storage));","lastModifiedDate":"2024-02-20"},{"lineNumber":154,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":155,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":156,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":157,"author":{"gitId":"casaarlai"},"content":"     * Finds and lists all tasks that contain the given keyword in their description.","lastModifiedDate":"2024-02-20"},{"lineNumber":158,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":159,"author":{"gitId":"casaarlai"},"content":"     * @param desc The keyword to search for in the task descriptions.","lastModifiedDate":"2024-02-20"},{"lineNumber":160,"author":{"gitId":"casaarlai"},"content":"     * @return A string listing all tasks that match the search keyword.","lastModifiedDate":"2024-02-20"},{"lineNumber":161,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":162,"author":{"gitId":"casaarlai"},"content":"    public String findTask(String desc) {","lastModifiedDate":"2024-02-20"},{"lineNumber":163,"author":{"gitId":"casaarlai"},"content":"        List\u003cTask\u003e result \u003d tasks.find(desc);","lastModifiedDate":"2024-02-09"},{"lineNumber":164,"author":{"gitId":"casaarlai"},"content":"        return Ui.listTasks(new TaskList(result));","lastModifiedDate":"2024-02-20"},{"lineNumber":165,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":166,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":167,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":168,"author":{"gitId":"casaarlai"},"content":"     * Processes the input and executes. This method parses the input to extract the command and its description, then","lastModifiedDate":"2024-02-20"},{"lineNumber":169,"author":{"gitId":"casaarlai"},"content":"     * executes the relevant task operation. If the command is not recognized or if any error occurs during the","lastModifiedDate":"2024-02-20"},{"lineNumber":170,"author":{"gitId":"casaarlai"},"content":"     * execution of the command, appropriate error messages are returned.","lastModifiedDate":"2024-02-20"},{"lineNumber":171,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":172,"author":{"gitId":"casaarlai"},"content":"     * @param input The full input from the user, which includes the command word","lastModifiedDate":"2024-02-20"},{"lineNumber":173,"author":{"gitId":"casaarlai"},"content":"     *              and possibly a description or additional information required.","lastModifiedDate":"2024-02-20"},{"lineNumber":174,"author":{"gitId":"casaarlai"},"content":"     * @return A string message indicating the result of the command execution.","lastModifiedDate":"2024-02-20"},{"lineNumber":175,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":176,"author":{"gitId":"casaarlai"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-20"},{"lineNumber":177,"author":{"gitId":"casaarlai"},"content":"        String[] parsedInput \u003d Parser.parse(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":178,"author":{"gitId":"casaarlai"},"content":"        String command \u003d parsedInput[0];","lastModifiedDate":"2024-02-20"},{"lineNumber":179,"author":{"gitId":"casaarlai"},"content":"        String desc \u003d parsedInput[1];","lastModifiedDate":"2024-02-20"},{"lineNumber":180,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":181,"author":{"gitId":"casaarlai"},"content":"        // Assert that only the command and description are being parsed","lastModifiedDate":"2024-02-20"},{"lineNumber":182,"author":{"gitId":"casaarlai"},"content":"        assert parsedInput.length \u003c\u003d 2 : \"parsedInput contains more than 2 elements\";","lastModifiedDate":"2024-02-20"},{"lineNumber":183,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":184,"author":{"gitId":"casaarlai"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":185,"author":{"gitId":"casaarlai"},"content":"            switch (command) {","lastModifiedDate":"2024-02-20"},{"lineNumber":186,"author":{"gitId":"casaarlai"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-20"},{"lineNumber":187,"author":{"gitId":"casaarlai"},"content":"                return markTask(desc);","lastModifiedDate":"2024-02-20"},{"lineNumber":188,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":189,"author":{"gitId":"casaarlai"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-20"},{"lineNumber":190,"author":{"gitId":"casaarlai"},"content":"                return unmarkTask(desc);","lastModifiedDate":"2024-02-20"},{"lineNumber":191,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":192,"author":{"gitId":"casaarlai"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-20"},{"lineNumber":193,"author":{"gitId":"casaarlai"},"content":"                return deleteTask(desc);","lastModifiedDate":"2024-02-20"},{"lineNumber":194,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":195,"author":{"gitId":"casaarlai"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-20"},{"lineNumber":196,"author":{"gitId":"casaarlai"},"content":"                return addDeadline(desc);","lastModifiedDate":"2024-02-20"},{"lineNumber":197,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":198,"author":{"gitId":"casaarlai"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-20"},{"lineNumber":199,"author":{"gitId":"casaarlai"},"content":"                return addToDo(desc);","lastModifiedDate":"2024-02-20"},{"lineNumber":200,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":201,"author":{"gitId":"casaarlai"},"content":"            case \"event\":","lastModifiedDate":"2024-02-20"},{"lineNumber":202,"author":{"gitId":"casaarlai"},"content":"                return addEvent(desc);","lastModifiedDate":"2024-02-20"},{"lineNumber":203,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":204,"author":{"gitId":"casaarlai"},"content":"            case \"list\":","lastModifiedDate":"2024-02-20"},{"lineNumber":205,"author":{"gitId":"casaarlai"},"content":"                return Ui.listTasks(tasks);","lastModifiedDate":"2024-02-20"},{"lineNumber":206,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":207,"author":{"gitId":"casaarlai"},"content":"            case \"find\":","lastModifiedDate":"2024-02-20"},{"lineNumber":208,"author":{"gitId":"casaarlai"},"content":"                return findTask(desc);","lastModifiedDate":"2024-02-20"},{"lineNumber":209,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":210,"author":{"gitId":"casaarlai"},"content":"            default:","lastModifiedDate":"2024-02-20"},{"lineNumber":211,"author":{"gitId":"casaarlai"},"content":"                throw new LaiException(\"I don\u0027t recognise this command at all. You likely made an extremely \" +","lastModifiedDate":"2024-01-27"},{"lineNumber":212,"author":{"gitId":"casaarlai"},"content":"                        \"disappointing mistake, or I did. I can\u0027t tell for sure.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":213,"author":{"gitId":"casaarlai"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":214,"author":{"gitId":"casaarlai"},"content":"        } catch (LaiException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":215,"author":{"gitId":"casaarlai"},"content":"            return Ui.printLaiException(e);","lastModifiedDate":"2024-02-20"},{"lineNumber":216,"author":{"gitId":"casaarlai"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":217,"author":{"gitId":"casaarlai"},"content":"            return Ui.printNumberFormatException(e);","lastModifiedDate":"2024-02-20"},{"lineNumber":218,"author":{"gitId":"casaarlai"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":219,"author":{"gitId":"casaarlai"},"content":"            return Ui.printIndexOutOfBoundsException(e);","lastModifiedDate":"2024-02-20"},{"lineNumber":220,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":221,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":222,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"casaarlai":222}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"public class Launcher {","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"casaarlai":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"    private Lai lai \u003d new Lai();","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":"            assert Main.class.getResource(\"/view/MainWindow.fxml\") !\u003d null : \"FXML for MainWindow not found\";","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"casaarlai"},"content":"            assert ap instanceof AnchorPane : \"FXMLLoader failed to load the AnchorPane\";","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"casaarlai"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"casaarlai"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"casaarlai"},"content":"            stage.setTitle(\"Lai\");","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"            assert stage.getScene() !\u003d null : \"Stage failed to set the scene\";","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setLai(lai);","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"casaarlai"},"content":"            stage.show();","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"casaarlai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"casaarlai"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"casaarlai":33}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"    @FXML","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"    @FXML","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"    @FXML","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"    @FXML","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":"    private Lai lai \u003d new Lai();","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"casaarlai"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"casaarlai"},"content":"    private Image laiImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/lai.png\"));","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"casaarlai"},"content":"    @FXML","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"casaarlai"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"casaarlai"},"content":"    public void setLai(Lai l) {","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"casaarlai"},"content":"        lai \u003d l;","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"casaarlai"},"content":"    @FXML","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"casaarlai"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"casaarlai"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"casaarlai"},"content":"        String response \u003d lai.getResponse(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"casaarlai"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"casaarlai"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"casaarlai"},"content":"                DialogBox.getLaiDialog(response, laiImage)","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"casaarlai"},"content":"        );","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"casaarlai"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"casaarlai":43}},{"path":"src/main/java/lai/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"package lai.task;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":" * Represents a deadline, which is a task with an additional due date.","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"     * The due date of the task.","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":"     * Constructs a new Deadline with the specified description and due date.","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"casaarlai"},"content":"     * The due date is parsed from a string and the task is initially marked as not done.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"casaarlai"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"casaarlai"},"content":"     * @param by The due date of the deadline in ISO-8601 format (e.g., 2023-12-31).","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"casaarlai"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"casaarlai"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"casaarlai"},"content":"     * Constructs a new Deadline with the specified description, initial completion status, and due date.","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"casaarlai"},"content":"     * If the due date string cannot be parsed in ISO-8601 format, an attempt is made to parse it in \"dd MMM yyyy\"","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"     * format.","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"casaarlai"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"casaarlai"},"content":"     * @param isDone The initial completion status of the deadline. True if the task is initially done, false otherwise.","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"casaarlai"},"content":"     * @param by The due date of the deadline. Expected to be in ISO-8601 format, but \"dd MMM yyyy\" format is attempted","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"casaarlai"},"content":"     *           if parsing fails.","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"casaarlai"},"content":"     * @throws DateTimeParseException If the due date string cannot be parsed in either ISO-8601 or \"dd MMM yyyy\"","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"casaarlai"},"content":"     * format.","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"casaarlai"},"content":"    public Deadline(String description, boolean isDone, String by) {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"casaarlai"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"casaarlai"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"casaarlai"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"casaarlai"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"casaarlai"},"content":"            this.by \u003d LocalDate.parse(by, DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"casaarlai"},"content":"     * Returns a string representation of the deadline, including its type, completion status, description, and due","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"casaarlai"},"content":"     * date.","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"casaarlai"},"content":"     * @return A string in the format \"[D][completion_status] description (by: due_date)\", where completion_status is","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"casaarlai"},"content":"     * \"X\" if the task is done, or a space character otherwise, and due_date is formatted as \"dd MMM yyyy\".","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"casaarlai"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"casaarlai"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"casaarlai"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"casaarlai":60}},{"path":"src/main/java/lai/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"package lai.task;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":" * Represents an event, which is a task with a start and end date.","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"     * The start date of the event.","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":"     * The end date of the event.","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"casaarlai"},"content":"     * Constructs a new Event with the specified description, start date, and end date.","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"casaarlai"},"content":"     * The start and end dates are parsed from strings. If parsing fails using ISO-8601 format, an attempt is made using","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"casaarlai"},"content":"     * \"dd MMM yyyy\" format.","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"casaarlai"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"     * @param from The start date of the event in ISO-8601 format or \"dd MMM yyyy\" format.","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"casaarlai"},"content":"     * @param to The end date of the event in ISO-8601 format or \"dd MMM yyyy\" format.","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"casaarlai"},"content":"     * @throws DateTimeParseException If the start or end date strings cannot be parsed.","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"casaarlai"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"casaarlai"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"casaarlai"},"content":"            this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"casaarlai"},"content":"            this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"casaarlai"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"casaarlai"},"content":"            this.from \u003d LocalDate.parse(from, DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"casaarlai"},"content":"            this.to \u003d LocalDate.parse(to, DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"casaarlai"},"content":"     * Constructs a new Event with the specified description, initial completion status, start date, and end date.","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"casaarlai"},"content":"     * The start and end dates are parsed from strings. If parsing fails using ISO-8601 format, an attempt is made using","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"casaarlai"},"content":"     * \"dd MMM yyyy\" format.","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"casaarlai"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"casaarlai"},"content":"     * @param isDone The initial completion status of the event. True if the event is initially marked as done, false otherwise.","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"casaarlai"},"content":"     * @param from The start date of the event in ISO-8601 format or \"dd MMM yyyy\" format.","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"casaarlai"},"content":"     * @param to The end date of the event in ISO-8601 format or \"dd MMM yyyy\" format.","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"casaarlai"},"content":"     * @throws DateTimeParseException If the start or end date strings cannot be parsed.","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"casaarlai"},"content":"    public Event(String description, boolean isDone, String from, String to) {","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"casaarlai"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"casaarlai"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"casaarlai"},"content":"            this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"casaarlai"},"content":"            this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"casaarlai"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"casaarlai"},"content":"            this.from \u003d LocalDate.parse(from, DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"casaarlai"},"content":"            this.to \u003d LocalDate.parse(to, DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"casaarlai"},"content":"     * Returns a string representation of the event, including its type, completion status, description, start date, and","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"casaarlai"},"content":"     * end date.","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"casaarlai"},"content":"     * The start and end dates are formatted as \"dd MMM yyyy\".","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"casaarlai"},"content":"     * @return A string in the format \"[E][completion_status] description (from: start_date to: end_date)\", where","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"casaarlai"},"content":"     * completion_status is \"X\" if the event is done, or a space character otherwise.","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"casaarlai"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"casaarlai"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"casaarlai"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"casaarlai"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(dateFormat) + \" to: \" + to.format(dateFormat) + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"casaarlai":77}},{"path":"src/main/java/lai/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"package lai.task;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":" * Represents a task with a description and a completion status.","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":" * A task can be marked as done or not done.","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"     * The description of the task.","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"     * The completion status of the task. True if the task is done, false otherwise.","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":"     * Constructs a new Task with the specified description.","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"casaarlai"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"casaarlai"},"content":"     * @param description The description of the new task.","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"casaarlai"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"casaarlai"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"casaarlai"},"content":"     * Constructs a new Task with the specified description and completion status.","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"casaarlai"},"content":"     * @param description The description of the new task.","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"casaarlai"},"content":"     * @param isDone The initial completion status of the task. True if the task is initially done, false otherwise.","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"casaarlai"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"casaarlai"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"casaarlai"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"casaarlai"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"casaarlai"},"content":"     * @return The description of the task as a {@code String}.","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"casaarlai"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"casaarlai"},"content":"        return this.description;","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"casaarlai"},"content":"     * Returns a string representation of the task\u0027s completion status.","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"casaarlai"},"content":"     * Returns \"X\" if the task is done, or a space character otherwise.","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"casaarlai"},"content":"     * @return A string indicating the completion status of the task.","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"casaarlai"},"content":"    public String getDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"casaarlai"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"casaarlai"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"casaarlai"},"content":"    public void setDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"casaarlai"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"casaarlai"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"casaarlai"},"content":"    public void setNotDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"casaarlai"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"casaarlai"},"content":"     * Returns a string representation of the task, including its completion status and description.","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"casaarlai"},"content":"     * @return A string in the format \"[completion_status] description\", where completion_status is \"X\" if the task is","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"casaarlai"},"content":"     * done, or a space character otherwise.","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"casaarlai"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"casaarlai"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"casaarlai"},"content":"        return String.format(\"[%s] %s\", getDone(), this.description);","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"casaarlai":83}},{"path":"src/main/java/lai/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"package lai.task;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":" * Represents a to-do item, which is a basic form of task.","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":"     * Constructs a new to-do item with the specified description.","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"     * The to-do item is initially marked as not done.","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"     * @param description The description of the to-do item.","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"casaarlai"},"content":"     * Constructs a new to-do item with the specified description and initial completion status.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"casaarlai"},"content":"     * @param description The description of the to-do item.","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"casaarlai"},"content":"     * @param isDone The initial completion status of the to-do item. True if the to-do item is initially marked as done, false otherwise.","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"casaarlai"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"casaarlai"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"casaarlai"},"content":"     * Returns a string representation of the to-do item, including its type and description.","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"casaarlai"},"content":"     * The completion status is represented by \"X\" if the to-do item is done, or a space character otherwise.","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"     * @return A string in the format \"[T][completion_status] description\", where completion_status is \"X\" if the to-do","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"casaarlai"},"content":"     * item is done, or a space character otherwise.","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"casaarlai"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"casaarlai"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"casaarlai"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"casaarlai":38}},{"path":"src/main/java/lai/util/LaiException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"package lai.util;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":" * Represents a custom exception type for the Lai application.","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":" * This exception is used to handle application-specific errors and provide meaningful error messages to the user.","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"public class LaiException extends Exception {","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"     * Constructs a new LaiException with the specified message.","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"     * @param message The message for the exception thrown.","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"    public LaiException (String message) {","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"        super(message);","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"casaarlai"},"content":"     * Returns a string representation of the LaiException, including the message that was provided at the time of","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":"     * creation.","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"casaarlai"},"content":"     * The format of the return string is \"Error occurred: \" followed by the message.","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"casaarlai"},"content":"     * @return A string representation of the LaiException, containing the message.","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"casaarlai"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"    public String toString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"casaarlai"},"content":"        return String.format(\"Error occurred: \" + getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"casaarlai":28}},{"path":"src/main/java/lai/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"package lai.util;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":" * Provides parsing functionality for user input in the Lai application.","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":" * This class is responsible for interpreting user commands and their associated details.","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"public class Parser {","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"     * Parses a line of input from the user into a command and its associated description.","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"     * The input is expected to be in the format \"command description\", where \"command\" is the action to be performed,","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"     * and \"description\" is the additional detail of the command. If no description is provided, an empty string is used","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"     * as the description.","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"     * @param scanner A Scanner object used to read the user\u0027s input.","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":"     * @return An array of two Strings, where the first element is the command and the second element is the","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"casaarlai"},"content":"     * description.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"casaarlai"},"content":"    public static String[] parse (Scanner scanner) {","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"casaarlai"},"content":"        // Separating the command and description from user input","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"casaarlai"},"content":"        String[] commandDesc \u003d scanner.nextLine().split(\"\\\\s+\", 2);","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"casaarlai"},"content":"        String command \u003d commandDesc[0];","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"casaarlai"},"content":"        String desc \u003d \"\";","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"casaarlai"},"content":"        if (commandDesc.length \u003e 1) {","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"            desc \u003d commandDesc[1];","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"casaarlai"},"content":"        return new String[]{ command, desc };","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"casaarlai"},"content":"    public static String[] parse (String input) {","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"casaarlai"},"content":"        // Separating the command and description from user input","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"casaarlai"},"content":"        String[] commandDesc \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"casaarlai"},"content":"        String command \u003d commandDesc[0];","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"casaarlai"},"content":"        String desc \u003d \"\";","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"casaarlai"},"content":"        if (commandDesc.length \u003e 1) {","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"casaarlai"},"content":"            desc \u003d commandDesc[1];","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"casaarlai"},"content":"        return new String[]{ command, desc };","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"casaarlai"},"content":"     * Checks if the provided task description is empty and throws an exception if it is.","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"casaarlai"},"content":"     * This method is used to ensure that tasks have descriptions when needed.","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"casaarlai"},"content":"     * @param desc The task description to be checked.","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"casaarlai"},"content":"     * @throws LaiException If the task description is empty.","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"casaarlai"},"content":"    public static void checkDescription(String desc) throws LaiException {","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"casaarlai"},"content":"        if (desc.equals(\"\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"casaarlai"},"content":"            throw new LaiException(\"Dude. What am I supposed to do with an empty description?\");","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"casaarlai":59}},{"path":"src/main/java/lai/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"package lai.util;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"import lai.task.Deadline;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"import lai.task.Event;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"import lai.task.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"import lai.task.ToDo;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":"import java.io.File;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"import java.util.List;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":" * Manages storage operations for tasks in the Lai application.","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"casaarlai"},"content":" * This includes reading from and writing tasks to a specified file.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"casaarlai"},"content":"public class Storage {","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"casaarlai"},"content":"    // Default file path","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"casaarlai"},"content":"    protected String filePath \u003d \"data/tasks.txt\";","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"     * Constructs a Storage object with a default file path.","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"    public Storage() {","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"casaarlai"},"content":"     * Constructs a Storage object with a specified file path.","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"casaarlai"},"content":"     * @param filePath The file path used for storing tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"casaarlai"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"casaarlai"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"casaarlai"},"content":"     * Updates the task file with the current list of tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"casaarlai"},"content":"     * If the file or directories do not exist, they will be created.","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"casaarlai"},"content":"     * @param tasks The list of tasks to be written to the file.","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"casaarlai"},"content":"    public void updateTasksFile(TaskList tasks) {","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"casaarlai"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"casaarlai"},"content":"        File parentDir \u003d file.getParentFile();","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"casaarlai"},"content":"        if (!parentDir.exists() \u0026\u0026 !parentDir.mkdirs()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"casaarlai"},"content":"            System.out.println(\"Error occurred: Failed to create directory \" + parentDir.getPath());","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"casaarlai"},"content":"            return;","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"casaarlai"},"content":"        try (FileWriter fw \u003d new FileWriter(file)) {","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"casaarlai"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"casaarlai"},"content":"                fw.write(task.toString() + System.lineSeparator());","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"casaarlai"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"casaarlai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"casaarlai"},"content":"            System.out.println(\"Error occurred: \" + e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"casaarlai"},"content":"     * Reads tasks from the storage file and returns them as a list of Task objects.","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"casaarlai"},"content":"     * If the file format is incorrect, a LaiException is thrown.","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"casaarlai"},"content":"     * @return A list of tasks read from the file.","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"casaarlai"},"content":"    public List\u003cTask\u003e readTasksFile() {","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"casaarlai"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"casaarlai"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"casaarlai"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"casaarlai"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":76,"author":{"gitId":"casaarlai"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"casaarlai"},"content":"                boolean isDone \u003d line.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"casaarlai"},"content":"                String description \u003d line.substring(7);","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"casaarlai"},"content":"                if (line.startsWith(\"[T]\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"casaarlai"},"content":"                    tasks.add(new ToDo(description, isDone));","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"casaarlai"},"content":"                } else if (line.startsWith(\"[D]\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"casaarlai"},"content":"                    int byIndex \u003d description.indexOf(\" (by: \");","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"casaarlai"},"content":"                    String byString \u003d description.substring(byIndex + 6, description.length() - 1);","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"casaarlai"},"content":"                    tasks.add(new Deadline(description.substring(0, byIndex), isDone, byString));","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"casaarlai"},"content":"                } else if (line.startsWith(\"[E]\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"casaarlai"},"content":"                    int fromIndex \u003d description.indexOf(\" (from: \");","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"casaarlai"},"content":"                    int toIndex \u003d description.indexOf(\" to: \");","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"casaarlai"},"content":"                    String fromString \u003d description.substring(fromIndex + 8, toIndex);","lastModifiedDate":"2024-02-08"},{"lineNumber":92,"author":{"gitId":"casaarlai"},"content":"                    String byString \u003d description.substring(toIndex + 5, description.length() - 1);","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":94,"author":{"gitId":"casaarlai"},"content":"                    tasks.add(new Event(description.substring(0, fromIndex), isDone, fromString, byString));","lastModifiedDate":"2024-02-08"},{"lineNumber":95,"author":{"gitId":"casaarlai"},"content":"                } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":96,"author":{"gitId":"casaarlai"},"content":"                    throw new LaiException(\"Your file does not seem to be in the correct format.\");","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"casaarlai"},"content":"                }","lastModifiedDate":"2024-02-08"},{"lineNumber":98,"author":{"gitId":"casaarlai"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"casaarlai"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":100,"author":{"gitId":"casaarlai"},"content":"            System.out.println(\"File not found: \" + e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":101,"author":{"gitId":"casaarlai"},"content":"        } catch (LaiException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":102,"author":{"gitId":"casaarlai"},"content":"            System.out.println(e);","lastModifiedDate":"2024-02-08"},{"lineNumber":103,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":104,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":105,"author":{"gitId":"casaarlai"},"content":"        return tasks;","lastModifiedDate":"2024-02-08"},{"lineNumber":106,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":107,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-02-08"},{"lineNumber":108,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":109,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"casaarlai":109}},{"path":"src/main/java/lai/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"package lai.util;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"import lai.task.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"import java.util.List;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":" * Represents a list of tasks in the Lai application.","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":" * This class provides functionality to add, remove, and access tasks,","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":" * as well as to iterate over all tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"    protected List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"casaarlai"},"content":"     * Constructs a TaskList with a specified list of tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"casaarlai"},"content":"     * @param tasks The initial list of tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"casaarlai"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"casaarlai"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"     * Adds a new task to the list and updates the storage file.","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"casaarlai"},"content":"     * Also prints a message indicating the task has been added.","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"casaarlai"},"content":"     * @param newTask The task to be added.","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"     * @param storage The storage utility to update the tasks file.","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"casaarlai"},"content":"     * @return The updated list of tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"casaarlai"},"content":"     * @throws LaiException If the new task is a duplicate of an existing task","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"casaarlai"},"content":"    public TaskList add(Task newTask, Storage storage) throws LaiException {","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"casaarlai"},"content":"        if (checkDuplicate(newTask)) {","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"casaarlai"},"content":"            throw new LaiException(\"Task already exists! If you would still like to add it, name it differently so \" +","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"casaarlai"},"content":"                    \"you won\u0027t be confused.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"casaarlai"},"content":"        this.tasks.add(newTask);","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"casaarlai"},"content":"        storage.updateTasksFile(this);","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"casaarlai"},"content":"        return this;","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"casaarlai"},"content":"     * Checks if the specified task already exists in the list based on its description.","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"casaarlai"},"content":"     * This method iterates through all tasks in the list and compares their descriptions","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"casaarlai"},"content":"     * with the description of the given task. As long as a task with the same description is found,","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"casaarlai"},"content":"     * it is considered a duplicate.","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"casaarlai"},"content":"     * @param newTask The task to be checked for duplication.","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"casaarlai"},"content":"     * @return {@code true} if a duplicate task is found in the list; {@code false} otherwise.","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"casaarlai"},"content":"    public boolean checkDuplicate(Task newTask) {","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"casaarlai"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"casaarlai"},"content":"            if (task.getDescription().equals(newTask.getDescription())) {","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"casaarlai"},"content":"                // Duplicate task found","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"casaarlai"},"content":"                return true;","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"casaarlai"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"casaarlai"},"content":"        return false;","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"casaarlai"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"casaarlai"},"content":"     * @return The size of the task list.","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"casaarlai"},"content":"    public int size() {","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"casaarlai"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":76,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"casaarlai"},"content":"     * Retrieves a task by its position in the list.","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"casaarlai"},"content":"     * @param index The index of the task in the list.","lastModifiedDate":"2024-02-09"},{"lineNumber":80,"author":{"gitId":"casaarlai"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"casaarlai"},"content":"    public Task get(int index) {","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"casaarlai"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":87,"author":{"gitId":"casaarlai"},"content":"     * Removes a specified task from the list.","lastModifiedDate":"2024-02-09"},{"lineNumber":88,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":89,"author":{"gitId":"casaarlai"},"content":"     * @param t The task to be removed.","lastModifiedDate":"2024-02-09"},{"lineNumber":90,"author":{"gitId":"casaarlai"},"content":"     * @return {@code true} if the task was successfully removed; {@code false} otherwise.","lastModifiedDate":"2024-02-09"},{"lineNumber":91,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":92,"author":{"gitId":"casaarlai"},"content":"    public boolean remove(Task t) {","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"casaarlai"},"content":"        return this.tasks.remove(t);","lastModifiedDate":"2024-02-08"},{"lineNumber":94,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":95,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":96,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"casaarlai"},"content":"     * Searches for tasks that contain the specified query in their description.","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"casaarlai"},"content":"     * This method iterates over all tasks in the list and checks if the task\u0027s description contains the query string.","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"casaarlai"},"content":"     * If a match is found, the task is added to the result list.","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"casaarlai"},"content":"     * @param query The string to search for within task descriptions.","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"casaarlai"},"content":"     * @return A list of {@code Task} objects whose descriptions contain the specified query.","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"casaarlai"},"content":"    public List\u003cTask\u003e find(String query) {","lastModifiedDate":"2024-02-10"},{"lineNumber":105,"author":{"gitId":"casaarlai"},"content":"        List\u003cTask\u003e result  \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"casaarlai"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"casaarlai"},"content":"            int index \u003d task.getDescription().indexOf(query);","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"casaarlai"},"content":"            if (index !\u003d -1) {","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"casaarlai"},"content":"                result.add(task);","lastModifiedDate":"2024-02-09"},{"lineNumber":110,"author":{"gitId":"casaarlai"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":111,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":112,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":113,"author":{"gitId":"casaarlai"},"content":"        return result;","lastModifiedDate":"2024-02-09"},{"lineNumber":114,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":115,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":116,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":117,"author":{"gitId":"casaarlai"},"content":"     * Returns an iterator over the tasks in the list.","lastModifiedDate":"2024-02-09"},{"lineNumber":118,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":119,"author":{"gitId":"casaarlai"},"content":"     * @return An Iterator of tasks in the list.","lastModifiedDate":"2024-02-09"},{"lineNumber":120,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":121,"author":{"gitId":"casaarlai"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":122,"author":{"gitId":"casaarlai"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2024-02-08"},{"lineNumber":123,"author":{"gitId":"casaarlai"},"content":"        return this.tasks.iterator();","lastModifiedDate":"2024-02-08"},{"lineNumber":124,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":125,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"casaarlai":125}},{"path":"src/main/java/lai/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"package lai.util;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"import lai.task.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":" * Handles the user interface for the Lai application.","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":" * This class is responsible for printing messages to the user interface","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"public class Ui {","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"     * Prints a message indicating a task has been marked as done.","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"     * @param t The task that was marked as done.","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"     * @return Success message containing the marked task.","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"casaarlai"},"content":"    public static String printTaskMarked(Task t) {","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":"        return \"You actually did something? Marked done:\\n\" + t;","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"casaarlai"},"content":"     * Prints a message indicating a task has been marked as not done.","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"     * @param t The task that was marked as not done.","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"casaarlai"},"content":"     * @return Success message containing the unmarked task.","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"casaarlai"},"content":"    public static String printTaskUnmarked(Task t) {","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"casaarlai"},"content":"        return \"Come on now, don\u0027t be useless. Marked not done:\\n\" + t;","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"casaarlai"},"content":"     * Prints a message indicating a new task has been added.","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"casaarlai"},"content":"     * @param newTask The task that was added.","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"casaarlai"},"content":"     * @param tasks   The current list of tasks, for displaying the total count.","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"casaarlai"},"content":"     * @return Success message containing the added task and the total number of tasks.","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"casaarlai"},"content":"    public static String printTaskAdded(Task newTask, TaskList tasks) {","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"casaarlai"},"content":"        return String.format(\"Added: %s\\nTotal number of tasks: %s\", newTask, tasks.size());","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"casaarlai"},"content":"     * Prints a message indicating a task has been deleted.","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"casaarlai"},"content":"     * @param t The task that was deleted.","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"casaarlai"},"content":"     * @return Success message containing the deleted task.","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"casaarlai"},"content":"    public static String printTaskDeleted(Task t) {","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"casaarlai"},"content":"        return String.format(\"I have deleted: %s\", t);","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"casaarlai"},"content":"     * Lists all tasks currently in the task list.","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"casaarlai"},"content":"     * @param tasks The task list to be displayed.","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"casaarlai"},"content":"     * @return String containing all the tasks listed down.","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"casaarlai"},"content":"    public static String listTasks(TaskList tasks) {","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"casaarlai"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"casaarlai"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"casaarlai"},"content":"            sb.append(String.format(\"%s. %s%n\", i + 1, tasks.get(i)));","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"casaarlai"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"casaarlai"},"content":"     * Prints an exception message specific to the Lai application.","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"casaarlai"},"content":"     * @param e The LaiException to be printed.","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"casaarlai"},"content":"     * @return The exception message.","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"casaarlai"},"content":"    public static String printLaiException(LaiException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"casaarlai"},"content":"        return e.toString();","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"casaarlai"},"content":"     * Prints a user-friendly message when a NumberFormatException occurs.","lastModifiedDate":"2024-02-09"},{"lineNumber":80,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"casaarlai"},"content":"     * @param e The NumberFormatException that was caught.","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"casaarlai"},"content":"     * @return Message prompting the user to enter numbers only.","lastModifiedDate":"2024-02-20"},{"lineNumber":83,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"casaarlai"},"content":"    public static String printNumberFormatException(NumberFormatException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"casaarlai"},"content":"        return \"Error occurred: Numbers only, please.\";","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"casaarlai"},"content":"     * Prints a user-friendly message when a IndexOutOfBoundsException occurs.","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"casaarlai"},"content":"     * @param e The IndexOutOfBoundsException that was caught.","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"casaarlai"},"content":"     * @return Message informing the user that the index is invalid","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"casaarlai"},"content":"    public static String printIndexOutOfBoundsException(IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"casaarlai"},"content":"        return \"Error occurred: The index you provided was invalid, use `list` to view which tasks exist again.\";","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"casaarlai":97}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"         minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" spacing\u003d\"15.0\" type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"  xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"                \u003cInsets top\u003d\"8\" /\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"70.0\" fitWidth\u003d\"70.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"casaarlai"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"casaarlai"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"casaarlai"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"casaarlai"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"casaarlai":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"casaarlai"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"casaarlai"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"casaarlai"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"casaarlai"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"casaarlai"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"casaarlai":23}},{"path":"src/test/java/lai/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"package lai.util;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"import static lai.util.Parser.parse;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"    public void parse_validInput_success() {","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"        String[] parsed \u003d parse(new Scanner(\"todo read book\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"        assertEquals(parsed[0], \"todo\");","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"        assertEquals(parsed[1], \"read book\");","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"casaarlai":15}},{"path":"src/test/java/lai/util/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"package lai.util;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"import lai.task.Event;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"import lai.task.Task;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"import lai.task.ToDo;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"import java.io.File;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"import java.util.List;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"    public void readTasksFile_validFile_success() throws IOException {","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"        File file \u003d File.createTempFile( \"test-tasks\", \".txt\");","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":"        file.deleteOnExit();","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":"        Task task \u003d new Event(\"testing\", \"2024-01-01\", \"2024-02-02\");","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"casaarlai"},"content":"        Task task2 \u003d new ToDo(\"testing again\");","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"casaarlai"},"content":"        try (FileWriter fw \u003d new FileWriter(file)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"casaarlai"},"content":"            fw.write(task + System.lineSeparator());","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"casaarlai"},"content":"            fw.write(task2 + System.lineSeparator());","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"casaarlai"},"content":"            System.out.println(\"Error occurred: \" + e.getMessage());","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"casaarlai"},"content":"        Storage storage \u003d new Storage(file.getPath());","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"casaarlai"},"content":"        List\u003cTask\u003e tasks \u003d storage.readTasksFile();","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"        assertEquals(tasks.get(0).toString(), task.toString());","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"casaarlai"},"content":"        assertEquals(tasks.get(1).toString(), task2.toString());","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"casaarlai":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"casaarlai":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"casaarlai"},"content":"java -classpath ..\\bin Lai \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"casaarlai":1,"-":20}}]
