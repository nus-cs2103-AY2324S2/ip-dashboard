{"authorDailyContributionsMap":{"NeoHW":[{"date":"2024-01-20","commitResults":[{"hash":"2b106f035b13fcee0608754f41858e0d75da0398","isMergeCommit":false,"messageTitle":"Level 0. Rename, Greet, Exit (a) Give your chatbot a new name, to differentiate it from the placeholder name Duke. (ByteBuddy) (b) Implement an initial skeletal version of the it that simply greets the user and exits.","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":6}}}]},{"date":"2024-01-21","commitResults":[{"hash":"e2083395382e29f4c009b9eb00eccfef259b3600","isMergeCommit":false,"messageTitle":"Level 1. Echo Improve the skeletal version of Duke so that it echos commands entered by the user, and exits when the user types the command bye.","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":6}}},{"hash":"ae5f2ce8215d73222029925edb638ecb32b36c59","isMergeCommit":false,"messageTitle":"Level 2. Add, List Add the ability to store whatever text entered by the user and display them back to the user when requested.","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":3}}},{"hash":"8490a375665762481bc176b485610dccb3d7c03e","isMergeCommit":false,"messageTitle":"Level 3. Mark as Done Add the ability to mark tasks as done. Optionally, add the ability to change the status back to not done.","messageBody":"1. Changed if-else to switch case\n2. markAsDone() \u0026 unmarkAsDone() returns a string that can be piped into printWithSolidLineBreak()\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":14}}}]},{"date":"2024-01-22","commitResults":[{"hash":"f974246acc31fe6d9f496bba52ece0eff8c1f204","isMergeCommit":false,"messageTitle":"Level 4. ToDos, Events, Deadlines Add support for tracking three types of tasks:","messageBody":"Level 4. ToDos, Events, Deadlines\nAdd support for tracking three types of tasks:\n\tToDos: tasks without any date/time attached to it e.g., visit new theme park\n\tDeadlines: tasks that need to be done before a specific date/time e.g., submit report by 11/10/2019 5pm\n\tEvents: tasks that start at a specific date/time and ends at a specific date/time e.g., (a) team project meeting 2/10/2019 2-4pm (b) orientation week 4/10/2019 to 11/10/2019\n","fileTypesAndContributionMap":{"java":{"insertions":80,"deletions":8}}},{"hash":"46781652528b4d9a21afbeeaa8340924d1fe3e4d","isMergeCommit":false,"messageTitle":"abstracted method splitStringWithTrim that takes in the string information, and a string separator for future ease of reuse","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":7}}},{"hash":"912008a5858ccadca9eaa71cb6b22f0c07702b84","isMergeCommit":false,"messageTitle":"Command to do testing : ./runtest.sh to run this script in text-ui-test directory ( if error try using sudo, should not need to) A-TextUiTesting: Automated Text UI Testing","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":0},"java":{"insertions":0,"deletions":1},"sh":{"insertions":4,"deletions":6}}},{"hash":"d5cc486626024c2b23efd8b92c85e55d1d36ae83","isMergeCommit":false,"messageTitle":"Added DukeException class, handled marking and unmarking index errors, empty todo event deadline errors wrong command errors","messageBody":"future improvements:\nmake sure deadline and event formatting / number of tokens input are correct\n","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":66,"deletions":36}}},{"hash":"8276f44441d75c4ba69cd2402ea29c18de9bbbe8","isMergeCommit":false,"messageTitle":"1. Caught NumberFormatException e (e.g. mark abc instead of mark 1) , where user inputs string instead of int 2. Changed task status icon : done is âœ“ and not done is x","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":1}}}]},{"date":"2024-01-23","commitResults":[{"hash":"f19217d98a08709fa0690207ccccb472e956a255","isMergeCommit":false,"messageTitle":"Level 6. Delete Add support for deleting tasks from the list.","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":0}}},{"hash":"c589eeee651a897c8ac94b64283487aaed9a6375","isMergeCommit":false,"messageTitle":"Duke.java : Abstracted commands logic out in main and into methods\tAvoid cluttering main by abstracting logic out into function and method calls","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":39}}}]},{"date":"2024-01-25","commitResults":[{"hash":"51d0ee7529cafd0dc54b62944ceda0e738ff02b5","isMergeCommit":false,"messageTitle":"changed global class variables to private static final","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":7}}},{"hash":"6a68fbde0bc50de815d9f91bd9d601d6fb64faf8","isMergeCommit":false,"messageTitle":"Abstracted out main functionality into runByteBuddy method to reduce main clutter","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":4}}},{"hash":"e6437f02f3eac54be10bca9817c6b2416c9d74e9","isMergeCommit":false,"messageTitle":"fix switch case indentation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":25}}}]},{"date":"2024-01-26","commitResults":[{"hash":"6cee7a7a65c91ff4ea13f48d13c4e929b0dff433","isMergeCommit":false,"messageTitle":"minor changes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"36137f9b93b3954ebc5fdbe770c40d011371a864","isMergeCommit":false,"messageTitle":"Error messages variables handle all errors possible (i hope)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":32}}},{"hash":"5070146c3aa25e1e90dc9f1d456a0459c309281a","isMergeCommit":false,"messageTitle":"cleanup: removed unused thrown exceptions","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"b6cd87c4bb32ef79d0d531736b54bb45b40856af","isMergeCommit":false,"messageTitle":"cleanup: remove unused thrown exception from main","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}}]},{"date":"2024-01-27","commitResults":[{"hash":"64d9764151f57180b88b0beabb296066a6f609c8","isMergeCommit":false,"messageTitle":"minor fix","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"e70c4ed6b38534167ab94124ba9ee3ebb72e98f7","isMergeCommit":false,"messageTitle":"Add method to create data dir and output.txt file This would handle the case where data file or dir does not exist at the start","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":0},"java":{"insertions":43,"deletions":9}}},{"hash":"830ab24935e45a217dbc7d0aebe04634e93cbb1f","isMergeCommit":false,"messageTitle":"add functionality to save tasks in data/output.txt file","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":69,"deletions":12}}},{"hash":"c5a82cb958b446d8afb9c24050e63ee3ecbdc453","isMergeCommit":false,"messageTitle":"Add functionality: Load data in TaskList from info in output.txt","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":1}}},{"hash":"1cade574b4081c91f96084ee8b5e2189725e4731","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"e8e30f2dc2305266e7b7165f622b25ec0d1cf348","isMergeCommit":false,"messageTitle":"Change split delimiters to use \"/by\" \u0026 \"/from|/to\" instead of just \"/\" This fixes the issue when string info contains  \"/\" such as \"2/12/2019 1800\"","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":6,"deletions":7}}},{"hash":"ebc0eb300c27ff234a93b039f2b84a4d65d989b8","isMergeCommit":false,"messageTitle":"Add support for LocalDate and LocalDateTime for Deadline class Example: 2/12/2019 1800 \u003d 2nd of December 2019, 6pm 2019-10-15 \u003d Oct 15 2019","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"java":{"insertions":44,"deletions":2}}},{"hash":"d28a488c88896da3fa0f5eea2621ab814418ed11","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"d1169256d13dc18b36c7a7eac1cafaa179ccdc10","isMergeCommit":false,"messageTitle":"Add Date and DateTime support for Event class","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":66,"deletions":5}}},{"hash":"d9dc49c9ab392e09a4225fd3fdde9e65ce240e5f","isMergeCommit":false,"messageTitle":"Refactor and divide classes into packages Add TaskList class, Storage class","messageBody":"TODO: Add Ui and Parser class\n","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":359,"deletions":195}}}]},{"date":"2024-01-28","commitResults":[{"hash":"a947215d4019111bf59868f706138213b5e32d87","isMergeCommit":false,"messageTitle":"Add Ui class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":71,"deletions":91}}},{"hash":"0f1c237da4416b810edb019fa11696f490675812","isMergeCommit":false,"messageTitle":"Bugfix: Fix \"by from to\" in deadline \u0026 event class","messageBody":"Bug: non date or datetime would not be captured\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"c6b91baa69d6659f5955d5ec31d6580217e477cb","isMergeCommit":false,"messageTitle":"Minor refactoring changes","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":3},"java":{"insertions":9,"deletions":23}}},{"hash":"d674c40e1dce92f1a8e97fa857876bc0b06ca553","isMergeCommit":false,"messageTitle":"Add Parser class, Add command interface and specific command classes Rename Duke to Bytebuddy","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1},"java":{"insertions":272,"deletions":87},"bat":{"insertions":1,"deletions":1},"md":{"insertions":2,"deletions":2}}},{"hash":"dd3000123de1dcdb221e6e3773184441bf4fdb87","isMergeCommit":true,"messageTitle":"Merge branch \u0027A-MoreOOP\u0027","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"c1a56b6b571d9416fdb42a1fb0772f7ff2c5d282","isMergeCommit":false,"messageTitle":"Update README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":7,"deletions":7}}},{"hash":"ef0b49401a2a605a867ae13895cb8abc940f51f2","isMergeCommit":false,"messageTitle":"Update README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":2}}},{"hash":"bf69b6e98e37dd4ce134ab19790b6ae73f0a4618","isMergeCommit":false,"messageTitle":"ByteBuddy!","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":2}}},{"hash":"5f3db258073d9058f97c10046b9bc49a01d244c7","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027 of https://github.com/NeoHW/ip","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"1a95c677dcd6317109bf632f6428e276df99861a","isMergeCommit":false,"messageTitle":"Change application MainClassName in build.gradle to Bytebuddy Previous value of seedu.duke.Duke leads to Error: Could not find or load main class seedu.duke.Duke","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":6,"deletions":1}}},{"hash":"ba73397c7b6bccff5f63670caece3a9032aa2e5f","isMergeCommit":false,"messageTitle":"Minor formatting changes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":10}}},{"hash":"4bab6d295b1794e8156cd707eab5d1763e668b42","isMergeCommit":false,"messageTitle":"Package files into src/main/java/bytebuddy package","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":91,"deletions":91}}},{"hash":"9d595171293f7b88fd557ccef2e9e41c4981c822","isMergeCommit":false,"messageTitle":"Gradle support","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0}}},{"hash":"aaa6e1cf3edffec7f3147a3495d45ebe639a9552","isMergeCommit":false,"messageTitle":"Add TaskTest and TodoTest that tests Task and Todo","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":83,"deletions":0}}},{"hash":"d638ebe9f90bb1db85ffc678d22a469293a2dd31","isMergeCommit":false,"messageTitle":"Add TaskListTest file","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":10,"deletions":1},"txt":{"insertions":1,"deletions":4},"java":{"insertions":189,"deletions":1}}},{"hash":"07d17239dd661e37ef52f50e6166a61f05b46f24","isMergeCommit":false,"messageTitle":"Bugfix: Remove mockito as it seems to interfere with gradle build and run","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":0,"deletions":8},"txt":{"insertions":3,"deletions":1},"java":{"insertions":10,"deletions":10}}},{"hash":"470fdf3a11466ec056d79e55e37f78fd482f730a","isMergeCommit":false,"messageTitle":"Bugfix: `./gradlew clean build` runs tests and write testcases into output.txt Changes to `build.gradle` to separate test sources from main sources","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":6,"deletions":0},"txt":{"insertions":0,"deletions":2}}},{"hash":"f0e0b8bfc301398c69e29384e23319650949a3af","isMergeCommit":false,"messageTitle":"Minor changes","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1},"java":{"insertions":1,"deletions":1}}},{"hash":"b31a4d39627b6865dbe96a4b91bd5fdcf1dd6b19","isMergeCommit":false,"messageTitle":"Add support for packaging app as a JAR file","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":1}}},{"hash":"4cbeaa2ef96e8b50542fc3b1319532e33cb2ce3e","isMergeCommit":false,"messageTitle":"Add comment on where to find output JAR file Info: JAR output is under build/libs archiveBaseName \u003d `duke`: This sets the base name of the generated JAR file to \"duke\". The resulting JAR file will be named something like \"duke.jar\". archiveFileName \u003d `bytebuddy.jar`: With this configuration, the generated JAR file will be named \"bytebuddy.jar\" instead of the default name based on archiveBaseName and archiveClassifier. This is useful when you want more control over the naming of your artifacts. If you don\u0027t specify `archiveFileName`, the Shadow Plugin will generate a name based on `archiveBaseName`, `archiveAppendix`, `archiveVersion`, and `archiveClassifier`.","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0}}},{"hash":"387a1afb35caa4a1498989d1e207bcfcc7617f9d","isMergeCommit":false,"messageTitle":"Add ByteBuddy.java JavaDoc","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"157aecf5b61dad4bb08f7dafa0c3006add441e89","isMergeCommit":false,"messageTitle":"Add JavaDoc for commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":190,"deletions":2}}},{"hash":"bc3b4ed7918224ee068f929845162f7f6c5cca7c","isMergeCommit":false,"messageTitle":"Add JavaDoc for ByteBuddyException Refactor DukeException -\u003e ByteBuddyException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":110,"deletions":95}}}]},{"date":"2024-01-29","commitResults":[{"hash":"a326038251e6d9222386b0184c138d57ea571d21","isMergeCommit":false,"messageTitle":"Add JavaDoc for Parser, Storage and Ui","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":72,"deletions":6}}},{"hash":"55de8b4fc87b271d885ab8d4bb3f8757ba8d8ba1","isMergeCommit":false,"messageTitle":"Add JavaDocs for tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":267,"deletions":1}}},{"hash":"6bd36f20ad2d947624afb39373d0d96fa108826e","isMergeCommit":false,"messageTitle":"Coding standard fix: Names representing methods must be verbs","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":13}}},{"hash":"c8a8147f8c254c0eaa5986731c4cd30d287f33df","isMergeCommit":false,"messageTitle":"Implement FindCommand This allows users to find a task by searching for a keyword","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":97,"deletions":0}}},{"hash":"c864ad29828fa85e0ec26ad09a18271737aff8dc","isMergeCommit":true,"messageTitle":"Merge tag \u0027A-CodingStandard\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"2230cb26b55519db0665c83404fa99c8650d5dfc","isMergeCommit":true,"messageTitle":"Merge tag \u0027Level-9\u0027","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{}},{"hash":"34985d6c49ac936886fb033f37599e3f7a13523d","isMergeCommit":true,"messageTitle":"Merge tag \u0027A-JavaDoc\u0027","messageBody":"# Conflicts:\n#\tsrc/main/java/bytebuddy/tasks/Task.java\n#\tsrc/main/java/bytebuddy/tasks/TaskList.java\n","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{}},{"hash":"93441de7cfb65df82d41cc5b7242fa9e9e10dc60","isMergeCommit":false,"messageTitle":"Tasklist: Change from System.out.println() to using Ui write methods Change solidLineBreak to \"-\".repeat(60)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":23}}},{"hash":"cda1de1d8f5f5bf8e04ea3582548d7ec61065a1e","isMergeCommit":false,"messageTitle":"Add CheckStyle config files","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0}}},{"hash":"7567036d36fdee39640456ebcc741455b68b501f","isMergeCommit":false,"messageTitle":"Fix coding standards for main files using checkstyleMain","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":99,"deletions":60}}},{"hash":"2fd1516f04755da6497c32bce4b08d76e2218d26","isMergeCommit":false,"messageTitle":"Fix coding standards for test files using checkstyleTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":19}}},{"hash":"77a7e59f87d0e4fde1a84fcdda137aa03cc413fb","isMergeCommit":true,"messageTitle":"Merge branch \u0027A-CheckStyle\u0027","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{}},{"hash":"1fa6e2597e6b832fd38a1d520ce4b6fc047b4c6f","isMergeCommit":false,"messageTitle":"Add feature: Find command allows for multiple keywords, separated by \",\"","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":29}}},{"hash":"9d7314c954107f432e8a6afdddef7acd531ebfd6","isMergeCommit":false,"messageTitle":"Bugfix: \u003ccommand\u003e \u003cspace\u003e leads to CommandInfo being \"\" instead of emptyList","messageBody":"This leads to bugs such as `todo ` adding a todo task that has no description\nAdd LIST_FORMAT message to let users know how to use list command\n","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":2}}},{"hash":"cc55892ce0fcff0d8955d183ad876e38489facb7","isMergeCommit":true,"messageTitle":"Merge branch \u0027A-Varargs\u0027","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2024-02-02","commitResults":[{"hash":"0b2c96f2b13b3af584db86093a9be4cb5bf60261","isMergeCommit":false,"messageTitle":"Update README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":22,"deletions":4}}},{"hash":"daace3ecb2e32602e34d3616dec0e84d21aabd26","isMergeCommit":false,"messageTitle":"Build.gradle: Add gradle dependencies","messageBody":"Create resources/images file,\nadded bytebuddy and user image\n","fileTypesAndContributionMap":{"gradle":{"insertions":17,"deletions":0}}},{"hash":"25dda79430950dfba703fe06cf5c935ef008b5cc","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/NeoHW/ip into Level-10","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2024-02-03","commitResults":[{"hash":"3f6bd63327d9d275a59f97be0f6eb207e382164d","isMergeCommit":false,"messageTitle":"Add javaFX GUI for ByteBuddy chatbot","messageBody":"* Implement a graphical user interface (GUI) for the chatbot using\njavaFX technology.\n* Enhance user interaction by providing a visual interface\nfor input and output.\n* This commit focuses on creating a more user-friendly experience,\npromoting engagement.\n* The use of JavaFX ensures a modern and responsive design\nfor the chatbot interface.\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"fxml":{"insertions":35,"deletions":0},"java":{"insertions":325,"deletions":67}}},{"hash":"3b65fcb6784b78c79c830ca61a49a98222193a29","isMergeCommit":true,"messageTitle":"Merge branch \u0027Level-10\u0027","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{}},{"hash":"a6b22def44a6d7b321aab401008e5b4934988a68","isMergeCommit":false,"messageTitle":"Refactor: Enhance code readability and adhere to Checkstyle standards","messageBody":"This commit refactors the code in accordance with Checkstyle standards\nto improve overall code readability and maintainability.\n\nKey changes include:\n- Proper indentation and spacing adjustments for consistency\n- Ensured adherence to coding conventions outlined by Checkstyle rules\n- Correct import classification and ordering\n\nThese changes contribute to a cleaner and more consistent codebase,\npromoting better collaboration and long-term maintainability.\n","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":23}}}]},{"date":"2024-02-06","commitResults":[{"hash":"ab219af187ee7f4be91f9924b6f637999b606fc6","isMergeCommit":false,"messageTitle":"Add assert statements to document important assumptions","messageBody":"The current situation lacks documentation of important assumptions in the code.\nIt is crucial to explicitly state these assumptions to improve code readability and maintainability.\n\nAssert statements have been added at various points in the code to\ndocument important assumptions that should hold true during runtime.\n\nThese assertions help clarify the expected behaviour and provide\nimmediate feedback if any assumptions are violated.\n\nThis approach is adopted to enhance code clarity and ensure that\nfuture modifications or updates adhere to the documented assumptions.\n\nAdditionally, it aids in debugging by pinpointing potential issues early in the development process.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0},"txt":{"insertions":1,"deletions":1},"java":{"insertions":8,"deletions":0}}},{"hash":"75185322ba7946ddc51c4f3a3ffb9ec7855a2407","isMergeCommit":false,"messageTitle":"Code quality refactoring","messageBody":"Some code contains deep nesting and lacks clear logical structure,\nmaking it difficult to follow the flow of logic.\n\nDeeply nested code and lack of logical structure decrease readability\nand maintainability of the codebase.\n\nThe code is being restructured to improve readability.\nDeep nesting is being avoided, and related segments of code are being\ngrouped logically using methods, indentation, and line spacing.\n\nThis follows best practices for code quality and readability.\n","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":16}}},{"hash":"ed2933882fadcd047013c4537a45616723b9aecc","isMergeCommit":true,"messageTitle":"Merge pull request #1 from NeoHW/A-Assertions","messageBody":"Add assert statements to document important assumptions","fileTypesAndContributionMap":{}},{"hash":"7fecbddacb3a5236654c959dcd07b7361eecec43","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into A-CodeQuality","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"dcc6005563800b5b0aef874c31e447d530d1e63b","isMergeCommit":true,"messageTitle":"Merge pull request #2 from NeoHW/A-CodeQuality","messageBody":"Code quality refactoring","fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"NeoHW":{"java":2132,"md":28,"fxml":35,"sh":3,"bat":1,"gradle":39,"txt":14}},"authorContributionVariance":{"NeoHW":165284.45},"authorDisplayNameMap":{"NeoHW":"CS2103-F09-2 NEO ..OWEI"}}
