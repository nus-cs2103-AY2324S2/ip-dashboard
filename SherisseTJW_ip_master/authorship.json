[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"# oak.oak project template","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"3. After that, locate the `src/main/java/oak.oak.java` file, right-click it, and choose `Run oak.oak.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"    ______     ______     __  __","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"   /\\  __ \\   /\\  __ \\   /\\ \\/ /  ","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"   \\ \\ \\/\\ \\  \\ \\  __ \\  \\ \\  _-. ","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"    \\ \\_____\\  \\ \\_\\ \\_\\  \\ \\_\\ \\_\\ ","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"     \\/_____/   \\/_/\\/_/   \\/_/\\/_/","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"SherisseTJW":7,"-":16}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"    testImplementation \u0027org.mockito:mockito-inline:5.1.0\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"    testImplementation \"org.mockito:mockito-junit-jupiter:5.10.0\"","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"SherisseTJW"},"content":"//    The base path is already set to src.main.java","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"SherisseTJW"},"content":"    mainClass.set(\"oak.Launcher\")","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"SherisseTJW"},"content":"    archiveBaseName \u003d \"oak\"","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"SherisseTJW"},"content":"checkstyle {","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"SherisseTJW"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"SherisseTJW":25,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"# OAK-Dex User Guide","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"![Ui.png](Ui.png)","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"Welcome to OAK-Dex!","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"Have you ever forgotten tasks that you had to do? Missed the submission deadline for your assignment? Misremembered the date of an Event you were looking forward to and missed it?","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"Well, fret no longer! Oak-Dex is your all-in-one solution to all your problems! (Well, not *all* of them, but you get the point)","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"Oak-Dex allows you to efficiently organise your schedule, and stay on top of all your important deadlines and events. Oak-Dex takes over the mental burden of remembering everything that you wished you remembered, but never did!","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"# Working with Oak-Dex","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"This section introduces how **you** can work with Oak-Dex! ","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"Note that \u0027Tasks\u0027 refer to Todos, Events and Deadlines.","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"## Adding Tasks","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"### Todos","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"Adds a new Todo item to Oak-Dex","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"Syntax: `todo \u003cname\u003e`","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"**Example**","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"Input: `todo CS2103 Week 6 Quiz`","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"Added new Todo: CS2103 Week 6 Quiz","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"### Events","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"Adds a new Event item to Oak-Dex","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"Syntax: `event \u003cname\u003e /from \u003cfrom-date\u003e @ \u003cfrom-time\u003e /to \u003cto-date\u003e @ \u003cto-time\u003e`","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"Note that the formats for Date and Time are:","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"- `YYYY-MM-DD`: `from-date` and `to-date`","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"- `HH:mm`: `from-time` and `to-time`","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"Example: `event lecture /from 2024-12-01 @ 10:00 /to 2024-12-01 @ 12:00`","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"SherisseTJW"},"content":"Adds a new Event Item, called \u0027Lecture\u0027 which occurs from 10am (`10:00`) to 12pm (`12:00`) on 1st December 2024 (`2024-12-01`).","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"SherisseTJW"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"SherisseTJW"},"content":"Added new Event: lecture occuring from 2024-12-01 @ 10:00 to 2024-12-01 @ 12:00","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"SherisseTJW"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"SherisseTJW"},"content":"### Deadlines","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"SherisseTJW"},"content":"Adds a new Deadline item to Oak-Dex","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"SherisseTJW"},"content":"Syntax: `deadline \u003cname\u003e /by \u003cby-date\u003e @ \u003cby-time\u003e`","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"SherisseTJW"},"content":"Note that the formats for Date and Time are:","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"SherisseTJW"},"content":"- `YYYY-MM-DD`: `by-date`","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"SherisseTJW"},"content":"- `HH:mm`: `by-time`","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"SherisseTJW"},"content":"Example: `deadline CS2103 Assignment /by 2024-02-23 @ 23:59`","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"SherisseTJW"},"content":"Adds a new Deadline Item, called \u0027CS2103 Assignment\u0027, which is due by 23rd February 2024 (`2024-03-23`), 2359 (`23:59`)","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"SherisseTJW"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"SherisseTJW"},"content":"Added new Deadline: CS2103 Assignment with Due Date: 2024-02-23 @ 23:59","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"SherisseTJW"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"SherisseTJW"},"content":"## Listing Tasks","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"SherisseTJW"},"content":"Lists all tasks currently stored in Oak-Dex, regardless of if they are marked as completed.","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"SherisseTJW"},"content":"Syntax: `list`","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"SherisseTJW"},"content":"Example Output:","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"SherisseTJW"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"SherisseTJW"},"content":"1. [T][ ] CS2103 Week 6 Quiz","lastModifiedDate":"2024-02-21"},{"lineNumber":80,"author":{"gitId":"SherisseTJW"},"content":"2. [E][ ] lecture (from: 01 12 2024 @ 1000 to: 01 12 2024 @ 1200)","lastModifiedDate":"2024-02-21"},{"lineNumber":81,"author":{"gitId":"SherisseTJW"},"content":"3. [D][ ] CS2103 Assignment (by: 23 02 2024 @ 2359)","lastModifiedDate":"2024-02-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"SherisseTJW"},"content":"## Deleting Tasks","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":86,"author":{"gitId":"SherisseTJW"},"content":"Deletes a Task (Event, Todo or Deadline) from Oak-Dex using the `taskId` as an identifier.","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"SherisseTJW"},"content":"To find the appropriate `taskId` for the task you wish to delete, use the `list` command.","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"SherisseTJW"},"content":"See [here](#listing-tasks-) for more information on the `list` command.","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":90,"author":{"gitId":"SherisseTJW"},"content":"Syntax: `delete \u003ctaskId\u003e`","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":92,"author":{"gitId":"SherisseTJW"},"content":"Example: `delete 1`","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"SherisseTJW"},"content":"Deletes the Task with the `taskId` 1. ","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":96,"author":{"gitId":"SherisseTJW"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"SherisseTJW"},"content":"Are you giving up? Or is this task no longer needed?","lastModifiedDate":"2024-02-21"},{"lineNumber":98,"author":{"gitId":"SherisseTJW"},"content":"Hmmmm.. I\u0027ve deleted Task 1 for now.","lastModifiedDate":"2024-02-21"},{"lineNumber":99,"author":{"gitId":"SherisseTJW"},"content":"But, I\u0027ll be watching you.","lastModifiedDate":"2024-02-21"},{"lineNumber":100,"author":{"gitId":"SherisseTJW"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":101,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"SherisseTJW"},"content":"## Marking Tasks","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"SherisseTJW"},"content":"Marks a Task (Event, Todo or Deadline) from Oak-Dex as completed, using the `taskId` as an identifier.","lastModifiedDate":"2024-02-20"},{"lineNumber":105,"author":{"gitId":"SherisseTJW"},"content":"To find the appropriate `taskId` for the task you wish to mark, use the `list` command.","lastModifiedDate":"2024-02-20"},{"lineNumber":106,"author":{"gitId":"SherisseTJW"},"content":"See [here](#listing-tasks-) for more information on the `list` command.","lastModifiedDate":"2024-02-20"},{"lineNumber":107,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":108,"author":{"gitId":"SherisseTJW"},"content":"Syntax: `mark \u003ctaskId\u003e`","lastModifiedDate":"2024-02-20"},{"lineNumber":109,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":110,"author":{"gitId":"SherisseTJW"},"content":"Example: `mark 1`","lastModifiedDate":"2024-02-20"},{"lineNumber":111,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":112,"author":{"gitId":"SherisseTJW"},"content":"Marks the Task with the `taskId` 1 as completed","lastModifiedDate":"2024-02-20"},{"lineNumber":113,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":115,"author":{"gitId":"SherisseTJW"},"content":"Ok! I\u0027ve marked Task 1 as completed!","lastModifiedDate":"2024-02-21"},{"lineNumber":116,"author":{"gitId":"SherisseTJW"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":117,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":118,"author":{"gitId":"SherisseTJW"},"content":"## Unmarking Tasks","lastModifiedDate":"2024-02-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":120,"author":{"gitId":"SherisseTJW"},"content":"Unmarks a Task (Event, Todo or Deadline) from Oak-Dex as not completed, using the `taskId` as an identifier.","lastModifiedDate":"2024-02-20"},{"lineNumber":121,"author":{"gitId":"SherisseTJW"},"content":"To find the appropriate `taskId` for the task you wish to unmark, use the `list` command.","lastModifiedDate":"2024-02-20"},{"lineNumber":122,"author":{"gitId":"SherisseTJW"},"content":"See [here](#listing-tasks-) for more information on the `list` command.","lastModifiedDate":"2024-02-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":124,"author":{"gitId":"SherisseTJW"},"content":"Syntax: `unmark \u003ctaskId\u003e`","lastModifiedDate":"2024-02-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":126,"author":{"gitId":"SherisseTJW"},"content":"Example: `unmark 1`","lastModifiedDate":"2024-02-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":128,"author":{"gitId":"SherisseTJW"},"content":"Unmarks the Task with the `taskId` 1 as completed, that is, removing the completed mark from the Task","lastModifiedDate":"2024-02-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":130,"author":{"gitId":"SherisseTJW"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":131,"author":{"gitId":"SherisseTJW"},"content":"Hmmm, were you teasing me?","lastModifiedDate":"2024-02-21"},{"lineNumber":132,"author":{"gitId":"SherisseTJW"},"content":"Well, I\u0027ve marked Task 1 as uncompleted,","lastModifiedDate":"2024-02-21"},{"lineNumber":133,"author":{"gitId":"SherisseTJW"},"content":"But don\u0027t do this again, you hear me?","lastModifiedDate":"2024-02-21"},{"lineNumber":134,"author":{"gitId":"SherisseTJW"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":135,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":136,"author":{"gitId":"SherisseTJW"},"content":"## Reminders","lastModifiedDate":"2024-02-19"},{"lineNumber":137,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":138,"author":{"gitId":"SherisseTJW"},"content":"Lists all Events / Deadline Tasks for which the `to-datetime` and the `by-datetime` respectively is after the current System datetime.","lastModifiedDate":"2024-02-20"},{"lineNumber":139,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":140,"author":{"gitId":"SherisseTJW"},"content":"Syntax: `reminder`","lastModifiedDate":"2024-02-20"},{"lineNumber":141,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":142,"author":{"gitId":"SherisseTJW"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":143,"author":{"gitId":"SherisseTJW"},"content":"[E][ ] lecture (from: 01 12 2024 @ 1000 to: 01 12 2024 @ 1200)","lastModifiedDate":"2024-02-21"},{"lineNumber":144,"author":{"gitId":"SherisseTJW"},"content":"[D][ ] CS2103 Assignment (by: 23 02 2024 @ 2359)","lastModifiedDate":"2024-02-21"},{"lineNumber":145,"author":{"gitId":"SherisseTJW"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":146,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":147,"author":{"gitId":"SherisseTJW"},"content":"## Finding Tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":148,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":149,"author":{"gitId":"SherisseTJW"},"content":"Finds all Tasks matching the string passed in by the user, that is, the string passed in is a substring of the Task Name.","lastModifiedDate":"2024-02-23"},{"lineNumber":150,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":151,"author":{"gitId":"SherisseTJW"},"content":"Syntax: `find \u003cmatching_string_value\u003e`","lastModifiedDate":"2024-02-23"},{"lineNumber":152,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":153,"author":{"gitId":"SherisseTJW"},"content":"Example: `find CS2103`","lastModifiedDate":"2024-02-23"},{"lineNumber":154,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":155,"author":{"gitId":"SherisseTJW"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":156,"author":{"gitId":"SherisseTJW"},"content":"1. [T][ ] CS2103 Week 6 Quiz","lastModifiedDate":"2024-02-23"},{"lineNumber":157,"author":{"gitId":"SherisseTJW"},"content":"3. [D][ ] CS2103 Assignment (by: 23 02 2024 @ 2359)","lastModifiedDate":"2024-02-23"},{"lineNumber":158,"author":{"gitId":"SherisseTJW"},"content":"```","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"SherisseTJW":129,"-":29}},{"path":"src/main/java/oak/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package oak;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"import oak.javafx.Main;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":" * Entrypoint and Launcher for the entire Oak-Dex","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"public class Launcher {","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"SherisseTJW":13}},{"path":"src/main/java/oak/controller/OakController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package oak.controller;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import oak.exceptions.InvalidInputException;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"import oak.exceptions.OakException;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"import oak.feedback.FeedbackService;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":" * The type Oak Controller.","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"public class OakController {","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"    /** FeedbackService instance to be used */","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"    private FeedbackService feedbackService \u003d new FeedbackService();","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"     * Gets the appropriate response for the user\u0027s input and returns it","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"     * @param input","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"     * @return the formatted String response","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"            return feedbackService.run(input);","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"        } catch (InvalidInputException | OakException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"SherisseTJW":29}},{"path":"src/main/java/oak/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package oak.exceptions;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import oak.feedback.enums.CommandEnum;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":" * The type Invalid input exception.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"        super(message);","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"     * Custom Exception for Invalid Command provided by user","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"    public static class InvalidCommandException extends InvalidInputException {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"        /**","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"         * Instantiates a new Invalid command exception.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"         *","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"         * @param invalidCommand the invalid command","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"         */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"        public InvalidCommandException(String invalidCommand) {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"            super(\"Invalid Command: \"","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"                    + invalidCommand","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"                    + \" received.\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"                    + \"Only the following commands are accepted:\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"                    + Arrays.toString(CommandEnum.values()));","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"     * Custom Exception for Invalid Format for a specific command provided by user","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"    public static class InvalidFormatException extends InvalidInputException {","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"        /**","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"         * Instantiates a new Invalid format exception.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"         *","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"         * @param message the error message","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"         * @param command the command the user inputted","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"         */","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"        public InvalidFormatException(String message, String command) {","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"            super(\"Invalid format for command \" + command + \" provided: \" + message);","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"SherisseTJW":47}},{"path":"src/main/java/oak/exceptions/OakException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package oak.exceptions;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":" * A general Exception Class","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"public class OakException extends Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"    public OakException(String message) {","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"        super(message);","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"SherisseTJW":10}},{"path":"src/main/java/oak/feedback/FeedbackService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package oak.feedback;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"import oak.exceptions.InvalidInputException;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"import oak.exceptions.OakException;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"import oak.feedback.enums.CommandEnum;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"import oak.task.ReminderService;","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"import oak.task.TaskService;","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":" * The type Feedback service.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"public class FeedbackService {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"    /** TaskService instance to be used */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"    private TaskService taskService \u003d new TaskService();","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"    /** ReminderService instance to be used */","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"    private ReminderService reminderService \u003d new ReminderService();","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"     * Runs the feedback service on the user input","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"     * Parses the user input and calls the appropriate method in the Task Service","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"     * @param userInput the user input","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"     * @return the output string to the user in the terminal","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"     * @throws InvalidInputException the invalid input exception","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"     * @throws IOException           the io exception","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"    public String run(String userInput) throws InvalidInputException, OakException {","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"        String[] cur \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"        CommandEnum curCommand \u003d CommandEnum.getCommandEnum(cur[0]);","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"        String feedback;","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"        int taskId \u003d -1;","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"        if (curCommand \u003d\u003d null) {","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"            throw new InvalidInputException.InvalidCommandException(cur[0]);","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"            switch (curCommand) {","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"            case REMINDER:","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"                feedback \u003d handleReminderCommand();","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"SherisseTJW"},"content":"                break;","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"SherisseTJW"},"content":"            case BYE:","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"SherisseTJW"},"content":"                feedback \u003d handleByeCommand();","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"SherisseTJW"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"SherisseTJW"},"content":"            case LIST:","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"SherisseTJW"},"content":"                feedback \u003d handleListCommand();","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"SherisseTJW"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"SherisseTJW"},"content":"            case FIND:","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"SherisseTJW"},"content":"                feedback \u003d handleFindCommand(cur);","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"SherisseTJW"},"content":"                break;","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"SherisseTJW"},"content":"            case MARK:","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"SherisseTJW"},"content":"                feedback \u003d handleMarkCommand(cur);","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"SherisseTJW"},"content":"                break;","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"SherisseTJW"},"content":"            case UNMARK:","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"SherisseTJW"},"content":"                feedback \u003d handleUnmarkCommand(cur);","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"SherisseTJW"},"content":"                break;","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"SherisseTJW"},"content":"            case TODO:","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"SherisseTJW"},"content":"                feedback \u003d handleTodoCommand(cur);","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"SherisseTJW"},"content":"                break;","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"SherisseTJW"},"content":"            case DEADLINE:","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"SherisseTJW"},"content":"                feedback \u003d handleDeadlineCommand(cur);","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"SherisseTJW"},"content":"                break;","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"SherisseTJW"},"content":"            case EVENT:","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"SherisseTJW"},"content":"                feedback \u003d handleEventCommand(cur);","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"SherisseTJW"},"content":"                break;","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"SherisseTJW"},"content":"            case DELETE:","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"SherisseTJW"},"content":"                feedback \u003d handleDeleteCommand(cur);","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"SherisseTJW"},"content":"                break;","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"SherisseTJW"},"content":"            default:","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"SherisseTJW"},"content":"                throw new InvalidInputException.InvalidCommandException(cur[0]);","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"SherisseTJW"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"SherisseTJW"},"content":"        } catch (Exception e) { // Catch all exceptions","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"SherisseTJW"},"content":"            throw new OakException(\"Oops, seems like there was an issue executing the \" + curCommand + \" command.\\n\");","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"SherisseTJW"},"content":"        return feedback;","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"SherisseTJW"},"content":"     * Handles the reminder command, calling the appropriate method in Reminder Service to get all reminders","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"SherisseTJW"},"content":"     * @return the formatted String containing all reminders","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"SherisseTJW"},"content":"    private String handleReminderCommand() {","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"SherisseTJW"},"content":"        return reminderService.getReminders();","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"SherisseTJW"},"content":"     * Handles the bye command, returning the exit message","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"SherisseTJW"},"content":"     * @return the formatted String of the exit message","lastModifiedDate":"2024-02-22"},{"lineNumber":97,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":98,"author":{"gitId":"SherisseTJW"},"content":"    private String handleByeCommand() {","lastModifiedDate":"2024-02-22"},{"lineNumber":99,"author":{"gitId":"SherisseTJW"},"content":"        return \"Goodbye! Hope to see you again!\";","lastModifiedDate":"2024-02-22"},{"lineNumber":100,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":101,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":102,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":103,"author":{"gitId":"SherisseTJW"},"content":"     * Handles the list command, returning all marked and unmarked tasks stored in Oak-Dex","lastModifiedDate":"2024-02-22"},{"lineNumber":104,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":105,"author":{"gitId":"SherisseTJW"},"content":"     * @return the formatted String of all the tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":106,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"SherisseTJW"},"content":"    private String handleListCommand() {","lastModifiedDate":"2024-02-22"},{"lineNumber":108,"author":{"gitId":"SherisseTJW"},"content":"        return this.taskService.getAllTasks();","lastModifiedDate":"2024-02-22"},{"lineNumber":109,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":110,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":111,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"SherisseTJW"},"content":"     * Handles the find command, returning all tasks for which the input is a substring","lastModifiedDate":"2024-02-22"},{"lineNumber":113,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":114,"author":{"gitId":"SherisseTJW"},"content":"     * @return the formatted String of all the matching tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":115,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":116,"author":{"gitId":"SherisseTJW"},"content":"    private String handleFindCommand(String[] input) {","lastModifiedDate":"2024-02-22"},{"lineNumber":117,"author":{"gitId":"SherisseTJW"},"content":"        String matchingValue \u003d (this.parseFindInput(input));","lastModifiedDate":"2024-02-22"},{"lineNumber":118,"author":{"gitId":"SherisseTJW"},"content":"        return this.taskService.findTasks(matchingValue);","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":120,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":121,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":122,"author":{"gitId":"SherisseTJW"},"content":"     * Handles the mark command, marking the task as completed","lastModifiedDate":"2024-02-22"},{"lineNumber":123,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":124,"author":{"gitId":"SherisseTJW"},"content":"     * @param input","lastModifiedDate":"2024-02-22"},{"lineNumber":125,"author":{"gitId":"SherisseTJW"},"content":"     * @return the formatted String of the status of marking the task","lastModifiedDate":"2024-02-22"},{"lineNumber":126,"author":{"gitId":"SherisseTJW"},"content":"     * @throws InvalidInputException","lastModifiedDate":"2024-02-22"},{"lineNumber":127,"author":{"gitId":"SherisseTJW"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-22"},{"lineNumber":128,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":129,"author":{"gitId":"SherisseTJW"},"content":"    private String handleMarkCommand(String[] input) throws InvalidInputException, IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":130,"author":{"gitId":"SherisseTJW"},"content":"        if (input.length \u003c\u003d 1) {","lastModifiedDate":"2024-02-22"},{"lineNumber":131,"author":{"gitId":"SherisseTJW"},"content":"            throw new InvalidInputException.InvalidFormatException(","lastModifiedDate":"2024-02-13"},{"lineNumber":132,"author":{"gitId":"SherisseTJW"},"content":"                    \"No TaskId detected, please provide a TaskId\", input[0]);","lastModifiedDate":"2024-02-22"},{"lineNumber":133,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":134,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":135,"author":{"gitId":"SherisseTJW"},"content":"        int taskId;","lastModifiedDate":"2024-02-22"},{"lineNumber":136,"author":{"gitId":"SherisseTJW"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":137,"author":{"gitId":"SherisseTJW"},"content":"            taskId \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2024-02-22"},{"lineNumber":138,"author":{"gitId":"SherisseTJW"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":139,"author":{"gitId":"SherisseTJW"},"content":"            throw new InvalidInputException.InvalidFormatException(","lastModifiedDate":"2024-02-13"},{"lineNumber":140,"author":{"gitId":"SherisseTJW"},"content":"                    \"Invalid TaskId detected, please provide the TaskId Number as seen in \u0027list\u0027 command\", input[0]);","lastModifiedDate":"2024-02-22"},{"lineNumber":141,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":142,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":143,"author":{"gitId":"SherisseTJW"},"content":"        return this.taskService.markTaskCompleted(taskId);","lastModifiedDate":"2024-02-22"},{"lineNumber":144,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":145,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":146,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":147,"author":{"gitId":"SherisseTJW"},"content":"     * Handles the unmark command, marking the task as not completed","lastModifiedDate":"2024-02-22"},{"lineNumber":148,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":149,"author":{"gitId":"SherisseTJW"},"content":"     * @param input","lastModifiedDate":"2024-02-22"},{"lineNumber":150,"author":{"gitId":"SherisseTJW"},"content":"     * @return the formatted String of the status of unmarking the task","lastModifiedDate":"2024-02-22"},{"lineNumber":151,"author":{"gitId":"SherisseTJW"},"content":"     * @throws InvalidInputException","lastModifiedDate":"2024-02-22"},{"lineNumber":152,"author":{"gitId":"SherisseTJW"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-22"},{"lineNumber":153,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":154,"author":{"gitId":"SherisseTJW"},"content":"    private String handleUnmarkCommand(String[] input) throws InvalidInputException, IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":155,"author":{"gitId":"SherisseTJW"},"content":"        if (input.length \u003c\u003d 1) {","lastModifiedDate":"2024-02-22"},{"lineNumber":156,"author":{"gitId":"SherisseTJW"},"content":"            throw new InvalidInputException.InvalidFormatException(","lastModifiedDate":"2024-02-13"},{"lineNumber":157,"author":{"gitId":"SherisseTJW"},"content":"                    \"No TaskId detected, please provide a TaskId\", input[0]);","lastModifiedDate":"2024-02-22"},{"lineNumber":158,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":159,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":160,"author":{"gitId":"SherisseTJW"},"content":"        int taskId;","lastModifiedDate":"2024-02-22"},{"lineNumber":161,"author":{"gitId":"SherisseTJW"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":162,"author":{"gitId":"SherisseTJW"},"content":"            taskId \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2024-02-22"},{"lineNumber":163,"author":{"gitId":"SherisseTJW"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":164,"author":{"gitId":"SherisseTJW"},"content":"            throw new InvalidInputException.InvalidFormatException(","lastModifiedDate":"2024-02-13"},{"lineNumber":165,"author":{"gitId":"SherisseTJW"},"content":"                    \"Invalid TaskId detected, please provide the TaskId Number as seen in \u0027list\u0027 command\", input[0]);","lastModifiedDate":"2024-02-22"},{"lineNumber":166,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":167,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":168,"author":{"gitId":"SherisseTJW"},"content":"        return this.taskService.markTaskUncompleted(taskId);","lastModifiedDate":"2024-02-22"},{"lineNumber":169,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":170,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":171,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":172,"author":{"gitId":"SherisseTJW"},"content":"     * Handles the todo command, adding the todo item to tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":173,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":174,"author":{"gitId":"SherisseTJW"},"content":"     * @param input","lastModifiedDate":"2024-02-22"},{"lineNumber":175,"author":{"gitId":"SherisseTJW"},"content":"     * @return the formatted String of the status of adding the todo","lastModifiedDate":"2024-02-22"},{"lineNumber":176,"author":{"gitId":"SherisseTJW"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-22"},{"lineNumber":177,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":178,"author":{"gitId":"SherisseTJW"},"content":"    private String handleTodoCommand(String[] input) throws IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":179,"author":{"gitId":"SherisseTJW"},"content":"        String taskName \u003d this.parseTodoInput(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":180,"author":{"gitId":"SherisseTJW"},"content":"        return this.taskService.addTodo(taskName);","lastModifiedDate":"2024-02-22"},{"lineNumber":181,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":182,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":183,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":184,"author":{"gitId":"SherisseTJW"},"content":"     * Handles the Deadline command, adding the deadline item to tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":185,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":186,"author":{"gitId":"SherisseTJW"},"content":"     * @param input","lastModifiedDate":"2024-02-22"},{"lineNumber":187,"author":{"gitId":"SherisseTJW"},"content":"     * @return the formatted String of the status of adding the Deadline","lastModifiedDate":"2024-02-22"},{"lineNumber":188,"author":{"gitId":"SherisseTJW"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-22"},{"lineNumber":189,"author":{"gitId":"SherisseTJW"},"content":"     * @throws InvalidInputException","lastModifiedDate":"2024-02-22"},{"lineNumber":190,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":191,"author":{"gitId":"SherisseTJW"},"content":"    private String handleDeadlineCommand(String[] input) throws IOException, InvalidInputException {","lastModifiedDate":"2024-02-22"},{"lineNumber":192,"author":{"gitId":"SherisseTJW"},"content":"        String[] deadLineValues \u003d this.parseDeadlineInput(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":193,"author":{"gitId":"SherisseTJW"},"content":"        return this.taskService.addDeadline(deadLineValues[0], deadLineValues[1]);","lastModifiedDate":"2024-02-22"},{"lineNumber":194,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":195,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":196,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":197,"author":{"gitId":"SherisseTJW"},"content":"     * Handles the Event command, adding the event item to tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":198,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":199,"author":{"gitId":"SherisseTJW"},"content":"     * @param input","lastModifiedDate":"2024-02-22"},{"lineNumber":200,"author":{"gitId":"SherisseTJW"},"content":"     * @return the formatted String of the status of adding the Event","lastModifiedDate":"2024-02-22"},{"lineNumber":201,"author":{"gitId":"SherisseTJW"},"content":"     * @throws InvalidInputException","lastModifiedDate":"2024-02-22"},{"lineNumber":202,"author":{"gitId":"SherisseTJW"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-22"},{"lineNumber":203,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":204,"author":{"gitId":"SherisseTJW"},"content":"    private String handleEventCommand(String[] input) throws InvalidInputException, IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":205,"author":{"gitId":"SherisseTJW"},"content":"        String[] eventValues \u003d this.parseEventInput(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":206,"author":{"gitId":"SherisseTJW"},"content":"        return this.taskService.addEvent(eventValues[0], eventValues[1], eventValues[2]);","lastModifiedDate":"2024-02-22"},{"lineNumber":207,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":208,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":209,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":210,"author":{"gitId":"SherisseTJW"},"content":"     * Handles the Delete Command, removing the task from tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":211,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":212,"author":{"gitId":"SherisseTJW"},"content":"     * @param input","lastModifiedDate":"2024-02-22"},{"lineNumber":213,"author":{"gitId":"SherisseTJW"},"content":"     * @return the formatted String of the status of deleting the task","lastModifiedDate":"2024-02-22"},{"lineNumber":214,"author":{"gitId":"SherisseTJW"},"content":"     * @throws InvalidInputException","lastModifiedDate":"2024-02-22"},{"lineNumber":215,"author":{"gitId":"SherisseTJW"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-22"},{"lineNumber":216,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":217,"author":{"gitId":"SherisseTJW"},"content":"    private String handleDeleteCommand(String[] input) throws InvalidInputException, IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":218,"author":{"gitId":"SherisseTJW"},"content":"        if (input.length \u003c\u003d 1) {","lastModifiedDate":"2024-02-22"},{"lineNumber":219,"author":{"gitId":"SherisseTJW"},"content":"            throw new InvalidInputException.InvalidFormatException(","lastModifiedDate":"2024-02-22"},{"lineNumber":220,"author":{"gitId":"SherisseTJW"},"content":"                    \"No TaskId detected, please provide a TaskId\", input[0]);","lastModifiedDate":"2024-02-22"},{"lineNumber":221,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":222,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":223,"author":{"gitId":"SherisseTJW"},"content":"        int taskId;","lastModifiedDate":"2024-02-22"},{"lineNumber":224,"author":{"gitId":"SherisseTJW"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":225,"author":{"gitId":"SherisseTJW"},"content":"            taskId \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2024-02-22"},{"lineNumber":226,"author":{"gitId":"SherisseTJW"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":227,"author":{"gitId":"SherisseTJW"},"content":"            throw new InvalidInputException.InvalidFormatException(","lastModifiedDate":"2024-02-22"},{"lineNumber":228,"author":{"gitId":"SherisseTJW"},"content":"                    \"Invalid TaskId detected, please provide the TaskId Number as seen in \u0027list\u0027 command\", input[0]);","lastModifiedDate":"2024-02-22"},{"lineNumber":229,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":230,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":231,"author":{"gitId":"SherisseTJW"},"content":"        return this.taskService.deleteTask(taskId);","lastModifiedDate":"2024-02-22"},{"lineNumber":232,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":233,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":234,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":235,"author":{"gitId":"SherisseTJW"},"content":"     * Parses the input provided by the user for the \u0027Todo\u0027 command","lastModifiedDate":"2024-02-02"},{"lineNumber":236,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":237,"author":{"gitId":"SherisseTJW"},"content":"     * @param input","lastModifiedDate":"2024-02-02"},{"lineNumber":238,"author":{"gitId":"SherisseTJW"},"content":"     * @return the name of the Todo item","lastModifiedDate":"2024-02-02"},{"lineNumber":239,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":240,"author":{"gitId":"SherisseTJW"},"content":"    private String parseTodoInput(String[] input) {","lastModifiedDate":"2024-02-02"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        // @@author SherisseTJW-reused","lastModifiedDate":"2024-01-25"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        // Reused from https://stackoverflow.com/a/34440330","lastModifiedDate":"2024-01-25"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2024-01-25"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        return Arrays.stream(input).skip(1).map(String::trim).collect(Collectors.joining(\" \"));","lastModifiedDate":"2024-01-25"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     * Parses the input provided by the user for the \u0027Deadline\u0027 command","lastModifiedDate":"2024-02-02"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":250,"author":{"gitId":"-"},"content":"     * @param input","lastModifiedDate":"2024-02-02"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     * @return A string array of the name of the task item, and the deadline provided by the user","lastModifiedDate":"2024-02-02"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     * @throws InvalidInputException","lastModifiedDate":"2024-02-02"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    private String[] parseDeadlineInput(String[] input) throws InvalidInputException {","lastModifiedDate":"2024-01-25"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        // @@author SherisseTJW-reused","lastModifiedDate":"2024-01-25"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        // Reused from https://stackoverflow.com/a/34440330","lastModifiedDate":"2024-01-25"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        String fullInput \u003d Arrays.stream(input).skip(1).collect(Collectors.joining(\" \"));","lastModifiedDate":"2024-01-25"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        String[] temp \u003d fullInput.split(\"/by\");","lastModifiedDate":"2024-01-25"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        if (temp.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            throw new InvalidInputException(","lastModifiedDate":"2024-02-13"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                    \"No Due Date for Deadline detected. Please provide a Due Date by using \u0027/by\u0027\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"                            + \"in the format: YYYY-MM-dd @ HH:mm\");","lastModifiedDate":"2024-02-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        return new String[] { temp[0].strip(), temp[1].strip() };","lastModifiedDate":"2024-01-25"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":271,"author":{"gitId":"-"},"content":"     * Parses the input provided by the user for the \u0027Event\u0027 command","lastModifiedDate":"2024-02-02"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":273,"author":{"gitId":"-"},"content":"     * @param input","lastModifiedDate":"2024-02-02"},{"lineNumber":274,"author":{"gitId":"-"},"content":"     * @return A String Array of the name of the Task, the from datetime and the to datetime","lastModifiedDate":"2024-02-02"},{"lineNumber":275,"author":{"gitId":"-"},"content":"     * @throws InvalidInputException","lastModifiedDate":"2024-02-02"},{"lineNumber":276,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    private String[] parseEventInput(String[] input) throws InvalidInputException {","lastModifiedDate":"2024-01-25"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        // Sample Event Input: event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        // @@author SherisseTJW-reused","lastModifiedDate":"2024-01-25"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        // Reused from https://stackoverflow.com/a/34440330","lastModifiedDate":"2024-01-25"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        String fullInput \u003d Arrays.stream(input).skip(1).collect(Collectors.joining(\" \"));","lastModifiedDate":"2024-01-25"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        String[] temp \u003d fullInput.split(\"/from\");","lastModifiedDate":"2024-01-25"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        if (temp.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            throw new InvalidInputException(","lastModifiedDate":"2024-02-13"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                    \"No From Datetime for Event detected. Please provide a From Datetime by using \u0027/from\u0027\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                            + \"in the format: YYYY-MM-dd @ HH:mm\");","lastModifiedDate":"2024-02-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        String[] datetimes \u003d temp[1].split(\"/to\");","lastModifiedDate":"2024-01-25"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        if (datetimes.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            throw new InvalidInputException(","lastModifiedDate":"2024-02-13"},{"lineNumber":294,"author":{"gitId":"-"},"content":"                    \"No To Datetime for Event detected. Please provide a To Datetime by using \u0027/to\u0027\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"                            + \"in the format: YYYY-MM-dd @ HH:mm\");","lastModifiedDate":"2024-02-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        return new String[] { temp[0].strip(), datetimes[0].strip(), datetimes[1].strip() };","lastModifiedDate":"2024-01-25"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"     * Parses the input provided by the user for the \u0027Find\u0027 command","lastModifiedDate":"2024-02-05"},{"lineNumber":303,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":304,"author":{"gitId":"-"},"content":"     * @param input","lastModifiedDate":"2024-02-05"},{"lineNumber":305,"author":{"gitId":"-"},"content":"     * @return the matching value substring to compare tasks against","lastModifiedDate":"2024-02-05"},{"lineNumber":306,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    private String parseFindInput(String[] input) {","lastModifiedDate":"2024-02-05"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        // @@author SherisseTJW-reused","lastModifiedDate":"2024-02-05"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        // Reused from https://stackoverflow.com/a/34440330","lastModifiedDate":"2024-02-05"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2024-02-05"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        return Arrays.stream(input).skip(1).map(String::trim).collect(Collectors.joining(\" \"));","lastModifiedDate":"2024-02-05"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"     * Returns the welcome message for Oak-Dex","lastModifiedDate":"2024-02-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"     * @return the formatted String of the welcome message","lastModifiedDate":"2024-02-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    public static String getWelcomeMessage() {","lastModifiedDate":"2024-02-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        return \"Welcome to Oak-Dex!\\n How may I help you?\";","lastModifiedDate":"2024-03-19"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"SherisseTJW":240,"-":82}},{"path":"src/main/java/oak/feedback/enums/CommandEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package oak.feedback.enums;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":" * Enums for all the possible commands provided by user","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"public enum CommandEnum {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"    /** The Bye Command */","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"    /** The Find Command */","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"    FIND(\"find\"),","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"    /** The List Command */","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"    LIST(\"list\"),","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"    /** The Mark Command */","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"    /** The Unmark Command */","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"    /** The Delete Command */","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"    /** The Todo Command */","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"    /** The Deadline Command */","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"    /** The Event Command */","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"    /** The Reminder Command */","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"    REMINDER(\"reminder\");","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"    public final String commandValue;","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"    CommandEnum(String commandValue) {","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"        this.commandValue \u003d commandValue;","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"    public String getCommandValue() {","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"        return this.commandValue;","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"     * Searches for the corresponding CommandEnum with the commandValue \u003d\u003d the value passed in as argument,","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"     * and returns it","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"     * @param value","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"     * @return the Command Enum, or null if no such enum with matching commandValue exists","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"    public static CommandEnum getCommandEnum(String value) {","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // @@author SherisseTJW-reused","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Reused from https://www.baeldung.com/java-search-enum-values, Section 3. Searching an Enum by Value","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        for (CommandEnum commandEnum : values()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            if (commandEnum.getCommandValue().equalsIgnoreCase(value)) {","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                return commandEnum;","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"SherisseTJW":44,"-":12}},{"path":"src/main/java/oak/javafx/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package oak.javafx;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"// @@author SherisseTJW-reused","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"// The contents of this file is mainly reused, with minor modifications from the JavaFX Tutorial as provided here","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"// https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private void flip() {","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Gets the user input and shows it on the DialogContainer","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param text","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param img","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @return the DialogBox","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        db.flip();","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return db;","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Gets Oak\u0027s response to the user input and shows it on the DialogContainer","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param text","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @param img","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @return the DialogBox","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static DialogBox getOakDialog(String text, Image img) {","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        db.flip();","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return db;","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"SherisseTJW":16,"-":64}},{"path":"src/main/java/oak/javafx/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package oak.javafx;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"import oak.controller.OakController;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"// @@author SherisseTJW-reused","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// The contents of this file is mainly reused, with minor modifications from the JavaFX Tutorial as provided here","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"// https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The Main Application which starts the JavaFX stage","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** Instance of OakController to be used */","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private OakController oak \u003d new OakController();","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Starts the JavaFX Stage and initialises OakController for usage","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param stage","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            VBox ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setOak(oak);","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            stage.show();","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"SherisseTJW":11,"-":30}},{"path":"src/main/java/oak/javafx/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package oak.javafx;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"import oak.controller.OakController;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"import oak.feedback.FeedbackService;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"import oak.feedback.enums.CommandEnum;","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"// @@author SherisseTJW-reused","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"// The contents of this file is mainly reused, with minor modifications from the JavaFX Tutorial as provided here","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"// https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class MainWindow extends VBox {","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private OakController oak;","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/oak_dex.png\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Image oakImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Oak.png\"));","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Initialises the main window and the dialog boxes, as well as gets and shows the welcome message","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().add(DialogBox.getOakDialog(FeedbackService.getWelcomeMessage(), oakImage));","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setOak(OakController d) {","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        oak \u003d d;","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Oak\u0027s reply and then appends them to","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // @@author SherisseTJW-reused","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Reused from https://stackoverflow.com/a/13602324","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (input.equals(CommandEnum.BYE.getCommandValue())) {","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            Stage stage \u003d (Stage) userInput.getScene().getWindow();","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            stage.close();","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String response \u003d this.oak.getResponse(input);","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                DialogBox.getOakDialog(response, oakImage)","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"SherisseTJW":13,"-":60}},{"path":"src/main/java/oak/task/ReminderService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package oak.task;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"import oak.task.model.Deadline;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"import oak.task.model.Event;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"import oak.task.model.Task;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":" * Reminder Service to determine what tasks should be reminded to the user about","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"public class ReminderService {","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"     * Checks all tasks currently in the system and formats a return String of all tasks","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"     * for which the user should be reminded","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"     * @return A Formatted String about the tasks to remind the user of","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"    public String getReminders() {","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"        result.add(\"Here are your reminders! \\n\");","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d TaskService.TASKS;","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"        for (Task task : allTasks) {","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"            // Note: No need to check Todo since we do not have set deadlines for them","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"                if (toRemind(((Event) task).getToDateTime())) {","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"                    result.add(task + \"\\n\");","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"                }","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"                if (toRemind(((Deadline) task).getByDateTime())) {","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"                    result.add(task + \"\\n\");","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"                }","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"        if (result.size() \u003c\u003d 1) {","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"            result.set(0, \"Congratulations! You have no reminders for any tasks!\");","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"        return String.join(\"\", result);","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"SherisseTJW"},"content":"     * Checks if the user needs to be reminded of a specific task based on the following criteria:","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"SherisseTJW"},"content":"     * 1) The task has not expired, that is, the toDateTime or the byDateTime has not passed the current datetime","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"SherisseTJW"},"content":"     * @param toDateTime","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"SherisseTJW"},"content":"     * @return Either true or false, indicating whether the user should be reminded about the event","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"SherisseTJW"},"content":"    private Boolean toRemind(LocalDateTime toDateTime) {","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"SherisseTJW"},"content":"        LocalDateTime cur \u003d LocalDateTime.now();","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"SherisseTJW"},"content":"        return cur.isBefore(toDateTime);","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"SherisseTJW":57}},{"path":"src/main/java/oak/task/TaskService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package oak.task;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"import oak.task.model.Deadline;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"import oak.task.model.Event;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"import oak.task.model.Task;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"import oak.task.model.Todo;","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"import oak.utility.FileUtility;","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":" * The TaskService Class to handle all backend-related items to do with tasks","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"public class TaskService {","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"    /** An Array of all the tasks in the system */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"    public static final ArrayList\u003cTask\u003e TASKS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"    /** The relative file path to the tasklist.txt where all the tasks are stored  */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"    private final String tasklistFilePath \u003d System.getProperty(\"user.dir\") + \"/tasklist.txt\";","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"    /** The separator for the tasklist.txt */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"    private final String taskListSep \u003d \"\\\\|\";","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"    /** An instance of the file utility class to load, save and delete tasks */","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"    private FileUtility fileUtility \u003d new FileUtility();","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"    public TaskService() {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"        this.loadTasks();","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"     * Load tasks from the tasklist.txt (located at this.taskListFilePath),","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"     * and calls a helper method, `parseTaskList` to parse each line to save it into this.tasks","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"    public void loadTasks() {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"        ArrayList\u003cString\u003e fileData \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"            fileData \u003d this.fileUtility.loadFile(this.tasklistFilePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"        } catch (IOException e) { // IOException / FileNotFoundException","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"            System.out.println(\"Error reading file.. Unable to load tasks from \"","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"                    + this.tasklistFilePath);","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"        for (String line : fileData) {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"SherisseTJW"},"content":"            this.parseTaskList(line);","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"SherisseTJW"},"content":"     * Saves the Task item in tasklist.txt (located at this.taskListFilePath)","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"SherisseTJW"},"content":"     * @param task to be saved","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"SherisseTJW"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"SherisseTJW"},"content":"    private void saveTask(Task task) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"SherisseTJW"},"content":"        this.fileUtility.writeToFile(this.tasklistFilePath, task.toTaskListStringFormat());","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"SherisseTJW"},"content":"     * Deletes the Task item from tasklist.txt (located at this.taskListFilePath)","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"SherisseTJW"},"content":"     * @param task to be deleted","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"SherisseTJW"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"SherisseTJW"},"content":"    private void removeTask(Task task) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"SherisseTJW"},"content":"        this.fileUtility.removeLineFromFile(this.tasklistFilePath, task.toTaskListStringFormat());","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"SherisseTJW"},"content":"     * Parses a line of the tasklist and adds the task to this.tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"SherisseTJW"},"content":"     * @param line of the tasklist","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"SherisseTJW"},"content":"    private void parseTaskList(String line) {","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"SherisseTJW"},"content":"        String[] task \u003d line.split(this.taskListSep);","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"SherisseTJW"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"SherisseTJW"},"content":"        if (task.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"SherisseTJW"},"content":"            return;","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"SherisseTJW"},"content":"        Boolean isCompleted \u003d task[1].equals(\"1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"SherisseTJW"},"content":"        if (task[0].equals(Todo.ICON_TODO)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"SherisseTJW"},"content":"            newTask \u003d new Todo(task[2], isCompleted);","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"SherisseTJW"},"content":"        } else if (task[0].equals(Deadline.ICON_DEADLINE)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"SherisseTJW"},"content":"            newTask \u003d new Deadline(task[2], isCompleted, task[3]);","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"SherisseTJW"},"content":"        } else if (task[0].equals(Event.ICON_EVENT)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"SherisseTJW"},"content":"            newTask \u003d new Event(task[2], isCompleted, task[3], task[4]);","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"SherisseTJW"},"content":"        } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":92,"author":{"gitId":"SherisseTJW"},"content":"            System.err.println(\"Error processing tasklist.txt, skipping this line: \"","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"SherisseTJW"},"content":"                    + line);","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":96,"author":{"gitId":"SherisseTJW"},"content":"        this.TASKS.add(newTask);","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"SherisseTJW"},"content":"     * Add todo task to this.tasks, saves it and returns a string updating the status of the operation","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"SherisseTJW"},"content":"     * @param taskName the task name","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"SherisseTJW"},"content":"     * @return the string updating the status of the operation","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"SherisseTJW"},"content":"     * @throws IOException the io exception","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"SherisseTJW"},"content":"    public String addTodo(String taskName) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"SherisseTJW"},"content":"        Todo newTodo \u003d new Todo(taskName);","lastModifiedDate":"2024-01-25"},{"lineNumber":109,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"SherisseTJW"},"content":"        int expectedLength \u003d this.TASKS.size() + 1;","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":112,"author":{"gitId":"SherisseTJW"},"content":"        this.TASKS.add(newTodo);","lastModifiedDate":"2024-02-23"},{"lineNumber":113,"author":{"gitId":"SherisseTJW"},"content":"        this.saveTask(newTodo);","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":115,"author":{"gitId":"SherisseTJW"},"content":"        assert expectedLength \u003d\u003d this.TASKS.size();","lastModifiedDate":"2024-02-23"},{"lineNumber":116,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":117,"author":{"gitId":"SherisseTJW"},"content":"        return String.format(\"Added new Todo: %s\", taskName);","lastModifiedDate":"2024-01-25"},{"lineNumber":118,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":119,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":120,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"SherisseTJW"},"content":"     * Add deadline task to this.tasks, saves it and returns a string updating the status of the operation","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"SherisseTJW"},"content":"     * @param taskName   the task name","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"SherisseTJW"},"content":"     * @param byDateTime the by date time","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"SherisseTJW"},"content":"     * @return the string updating the status of the operation","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"SherisseTJW"},"content":"     * @throws IOException the io exception","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"SherisseTJW"},"content":"    public String addDeadline(String taskName, String byDateTime) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"SherisseTJW"},"content":"        Deadline newDeadline \u003d new Deadline(taskName, byDateTime);","lastModifiedDate":"2024-01-25"},{"lineNumber":130,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"SherisseTJW"},"content":"        int expectedLength \u003d this.TASKS.size() + 1;","lastModifiedDate":"2024-02-23"},{"lineNumber":132,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":133,"author":{"gitId":"SherisseTJW"},"content":"        this.TASKS.add(newDeadline);","lastModifiedDate":"2024-02-23"},{"lineNumber":134,"author":{"gitId":"SherisseTJW"},"content":"        this.saveTask(newDeadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":136,"author":{"gitId":"SherisseTJW"},"content":"        assert expectedLength \u003d\u003d this.TASKS.size();","lastModifiedDate":"2024-02-23"},{"lineNumber":137,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":138,"author":{"gitId":"SherisseTJW"},"content":"        return String.format(\"Added new Deadline: %s with Due Date: %s\", taskName, byDateTime);","lastModifiedDate":"2024-01-25"},{"lineNumber":139,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":140,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":141,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"SherisseTJW"},"content":"     * Add event task to this.tasks, saves it and returns a string updating the status of the operation","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"SherisseTJW"},"content":"     * @param taskName     the task name","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"SherisseTJW"},"content":"     * @param fromDateTime the from date time","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"SherisseTJW"},"content":"     * @param toDateTime   the to date time","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"SherisseTJW"},"content":"     * @return the string updating the status of the operation","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"SherisseTJW"},"content":"     * @throws IOException the io exception","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"SherisseTJW"},"content":"    public String addEvent(String taskName, String fromDateTime, String toDateTime) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"SherisseTJW"},"content":"        Event newEvent \u003d new Event(taskName, fromDateTime, toDateTime);","lastModifiedDate":"2024-01-25"},{"lineNumber":152,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"SherisseTJW"},"content":"        int expectedLength \u003d this.TASKS.size() + 1;","lastModifiedDate":"2024-02-23"},{"lineNumber":154,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":155,"author":{"gitId":"SherisseTJW"},"content":"        this.TASKS.add(newEvent);","lastModifiedDate":"2024-02-23"},{"lineNumber":156,"author":{"gitId":"SherisseTJW"},"content":"        this.saveTask(newEvent);","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":158,"author":{"gitId":"SherisseTJW"},"content":"        assert expectedLength \u003d\u003d this.TASKS.size();","lastModifiedDate":"2024-02-23"},{"lineNumber":159,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":160,"author":{"gitId":"SherisseTJW"},"content":"        return String.format(\"Added new Event: %s occurring from %s to %s\", taskName, fromDateTime, toDateTime);","lastModifiedDate":"2024-01-25"},{"lineNumber":161,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":162,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":163,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":164,"author":{"gitId":"SherisseTJW"},"content":"     * Delete task from this.tasks and tasklist.txt (located at this.taskListFilePath)","lastModifiedDate":"2024-02-02"},{"lineNumber":165,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":166,"author":{"gitId":"SherisseTJW"},"content":"     * @param taskId the task id","lastModifiedDate":"2024-02-02"},{"lineNumber":167,"author":{"gitId":"SherisseTJW"},"content":"     * @return the string updating the status of the operation","lastModifiedDate":"2024-02-02"},{"lineNumber":168,"author":{"gitId":"SherisseTJW"},"content":"     * @throws IOException the io exception","lastModifiedDate":"2024-02-02"},{"lineNumber":169,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":170,"author":{"gitId":"SherisseTJW"},"content":"    public String deleteTask(int taskId) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":171,"author":{"gitId":"SherisseTJW"},"content":"        int expectedLength \u003d this.TASKS.size() - 1;","lastModifiedDate":"2024-02-23"},{"lineNumber":172,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":173,"author":{"gitId":"SherisseTJW"},"content":"        Task removedTask \u003d this.TASKS.remove(taskId);","lastModifiedDate":"2024-02-23"},{"lineNumber":174,"author":{"gitId":"SherisseTJW"},"content":"        this.removeTask(removedTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":175,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":176,"author":{"gitId":"SherisseTJW"},"content":"        assert expectedLength \u003d\u003d this.TASKS.size();","lastModifiedDate":"2024-02-23"},{"lineNumber":177,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":178,"author":{"gitId":"SherisseTJW"},"content":"        return String.format(\"Are you giving up? Or is this task no longer needed?\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":179,"author":{"gitId":"SherisseTJW"},"content":"                        + \"Hmmm.. I\u0027ve deleted Task %s for you for now.\\nBut, I\u0027ll be watching you.\",","lastModifiedDate":"2024-02-23"},{"lineNumber":180,"author":{"gitId":"SherisseTJW"},"content":"                taskId + 1);","lastModifiedDate":"2024-02-23"},{"lineNumber":181,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":182,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":183,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":184,"author":{"gitId":"SherisseTJW"},"content":"     * Mark task completed","lastModifiedDate":"2024-02-02"},{"lineNumber":185,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":186,"author":{"gitId":"SherisseTJW"},"content":"     * @param taskId the task id","lastModifiedDate":"2024-02-02"},{"lineNumber":187,"author":{"gitId":"SherisseTJW"},"content":"     * @return the string","lastModifiedDate":"2024-02-02"},{"lineNumber":188,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":189,"author":{"gitId":"SherisseTJW"},"content":"    public String markTaskCompleted(int taskId) throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":190,"author":{"gitId":"SherisseTJW"},"content":"        String originalTaskString \u003d this.TASKS.get(taskId).toTaskListStringFormat();","lastModifiedDate":"2024-02-23"},{"lineNumber":191,"author":{"gitId":"SherisseTJW"},"content":"        this.TASKS.get(taskId).markTaskCompleted();","lastModifiedDate":"2024-02-23"},{"lineNumber":192,"author":{"gitId":"SherisseTJW"},"content":"        this.fileUtility.updateFile(this.tasklistFilePath, originalTaskString,","lastModifiedDate":"2024-02-13"},{"lineNumber":193,"author":{"gitId":"SherisseTJW"},"content":"                this.TASKS.get(taskId).toTaskListStringFormat());","lastModifiedDate":"2024-02-23"},{"lineNumber":194,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":195,"author":{"gitId":"SherisseTJW"},"content":"        return \"Ok! I\u0027ve marked Task \"","lastModifiedDate":"2024-02-23"},{"lineNumber":196,"author":{"gitId":"SherisseTJW"},"content":"                + (taskId + 1)","lastModifiedDate":"2024-02-23"},{"lineNumber":197,"author":{"gitId":"SherisseTJW"},"content":"                + \" as completed!\";","lastModifiedDate":"2024-02-23"},{"lineNumber":198,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":199,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":200,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":201,"author":{"gitId":"SherisseTJW"},"content":"     * Mark task uncompleted","lastModifiedDate":"2024-02-02"},{"lineNumber":202,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":203,"author":{"gitId":"SherisseTJW"},"content":"     * @param taskId the task id","lastModifiedDate":"2024-02-02"},{"lineNumber":204,"author":{"gitId":"SherisseTJW"},"content":"     * @return the string","lastModifiedDate":"2024-02-02"},{"lineNumber":205,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":206,"author":{"gitId":"SherisseTJW"},"content":"    public String markTaskUncompleted(int taskId) throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":207,"author":{"gitId":"SherisseTJW"},"content":"        String originalTaskString \u003d this.TASKS.get(taskId).toTaskListStringFormat();","lastModifiedDate":"2024-02-23"},{"lineNumber":208,"author":{"gitId":"SherisseTJW"},"content":"        this.TASKS.get(taskId).markTaskNotCompleted();","lastModifiedDate":"2024-02-23"},{"lineNumber":209,"author":{"gitId":"SherisseTJW"},"content":"        this.fileUtility.updateFile(this.tasklistFilePath, originalTaskString,","lastModifiedDate":"2024-02-13"},{"lineNumber":210,"author":{"gitId":"SherisseTJW"},"content":"                this.TASKS.get(taskId).toTaskListStringFormat());","lastModifiedDate":"2024-02-23"},{"lineNumber":211,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":212,"author":{"gitId":"SherisseTJW"},"content":"        return \"Hmmm, were you teasing me?\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":213,"author":{"gitId":"SherisseTJW"},"content":"                + \"Well, I\u0027ve marked Task \"","lastModifiedDate":"2024-02-23"},{"lineNumber":214,"author":{"gitId":"SherisseTJW"},"content":"                + (taskId + 1)","lastModifiedDate":"2024-02-23"},{"lineNumber":215,"author":{"gitId":"SherisseTJW"},"content":"                + \" as uncompleted,\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":216,"author":{"gitId":"SherisseTJW"},"content":"                + \"But don\u0027t do this again, you hear me?\";","lastModifiedDate":"2024-02-23"},{"lineNumber":217,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":218,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":219,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":220,"author":{"gitId":"SherisseTJW"},"content":"     * Gets all tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":221,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":222,"author":{"gitId":"SherisseTJW"},"content":"     * @return All the tasks, formatted in a string and seperated by \u0027\\n\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":223,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":224,"author":{"gitId":"SherisseTJW"},"content":"    public String getAllTasks() {","lastModifiedDate":"2024-01-24"},{"lineNumber":225,"author":{"gitId":"SherisseTJW"},"content":"        StringBuilder returnVal \u003d new StringBuilder();","lastModifiedDate":"2024-01-24"},{"lineNumber":226,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":227,"author":{"gitId":"SherisseTJW"},"content":"        for (int i \u003d 0; i \u003c this.TASKS.size(); i++) {","lastModifiedDate":"2024-02-23"},{"lineNumber":228,"author":{"gitId":"SherisseTJW"},"content":"            returnVal.append(String.format(\"%d. %s\", i + 1, this.TASKS.get(i)));","lastModifiedDate":"2024-02-23"},{"lineNumber":229,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":230,"author":{"gitId":"SherisseTJW"},"content":"            // Only add new line if its not the last task","lastModifiedDate":"2024-01-25"},{"lineNumber":231,"author":{"gitId":"SherisseTJW"},"content":"            if (i \u003c this.TASKS.size() - 1) {","lastModifiedDate":"2024-02-23"},{"lineNumber":232,"author":{"gitId":"SherisseTJW"},"content":"                returnVal.append(\"\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":233,"author":{"gitId":"SherisseTJW"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":234,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":235,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":236,"author":{"gitId":"SherisseTJW"},"content":"        return returnVal.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":237,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":238,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":239,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":240,"author":{"gitId":"SherisseTJW"},"content":"     * Find all tasks with names that match the `matchingValue`","lastModifiedDate":"2024-02-05"},{"lineNumber":241,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":242,"author":{"gitId":"SherisseTJW"},"content":"     * @param matchingValue","lastModifiedDate":"2024-02-05"},{"lineNumber":243,"author":{"gitId":"SherisseTJW"},"content":"     * @return All the tasks matching the value passed in (`matchingValue`), formatted in a string and separated by \u0027\\n\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":244,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":245,"author":{"gitId":"SherisseTJW"},"content":"    public String findTasks(String matchingValue) {","lastModifiedDate":"2024-02-05"},{"lineNumber":246,"author":{"gitId":"SherisseTJW"},"content":"        StringBuilder returnVal \u003d new StringBuilder();","lastModifiedDate":"2024-02-05"},{"lineNumber":247,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":248,"author":{"gitId":"SherisseTJW"},"content":"        for (int i \u003d 0; i \u003c this.TASKS.size(); i++) {","lastModifiedDate":"2024-02-23"},{"lineNumber":249,"author":{"gitId":"SherisseTJW"},"content":"            if (this.TASKS.get(i).getName().contains(matchingValue)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":250,"author":{"gitId":"SherisseTJW"},"content":"                returnVal.append(String.format(\"%d. %s\", i + 1, this.TASKS.get(i)));","lastModifiedDate":"2024-02-23"},{"lineNumber":251,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":252,"author":{"gitId":"SherisseTJW"},"content":"                // Only add new line if its not the last task","lastModifiedDate":"2024-02-05"},{"lineNumber":253,"author":{"gitId":"SherisseTJW"},"content":"                if (i \u003c this.TASKS.size() - 1) {","lastModifiedDate":"2024-02-23"},{"lineNumber":254,"author":{"gitId":"SherisseTJW"},"content":"                    returnVal.append(\"\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":255,"author":{"gitId":"SherisseTJW"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":256,"author":{"gitId":"SherisseTJW"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":257,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":258,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":259,"author":{"gitId":"SherisseTJW"},"content":"        return returnVal.toString();","lastModifiedDate":"2024-02-05"},{"lineNumber":260,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":261,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"SherisseTJW":261}},{"path":"src/main/java/oak/task/model/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package oak.task.model;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import oak.utility.DateTimeUtility;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":" * The Deadline Class to handle all Deadline-type Tasks","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"    /** The icon this task is represented by */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"    public static final String ICON_DEADLINE \u003d \"D\";","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"    /** The datetime the task has to be completed by */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"    private LocalDateTime byDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"     * Constructor method for Deadline from user input (without the isCompleted)","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"     * @param name","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"     * @param byDateTime","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"    public Deadline(String name, String byDateTime) {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"        super(name, ICON_DEADLINE);","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"        this.byDateTime \u003d DateTimeUtility.parseStringToLocalDateTime(byDateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"     * Constructor method for Deadline from tasklist.txt","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"     * @param name","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"     * @param isCompleted","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"     * @param byDateTime","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"    public Deadline(String name, Boolean isCompleted, String byDateTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"        super(name, ICON_DEADLINE);","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"        if (isCompleted) {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"            super.markTaskCompleted();","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"        this.byDateTime \u003d DateTimeUtility.parseStringToLocalDateTime(byDateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"    public LocalDateTime getByDateTime() {","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"SherisseTJW"},"content":"        return this.byDateTime;","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"SherisseTJW"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"SherisseTJW"},"content":"    public String toTaskListStringFormat() {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"SherisseTJW"},"content":"        return String.format(\"%s|%s|%s\",","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"SherisseTJW"},"content":"                ICON_DEADLINE, super.toTaskListStringFormat(), this.byDateTime.toString());","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"SherisseTJW"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"SherisseTJW"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"SherisseTJW"},"content":"        return String.format(\"%s (by: %s)\",","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"SherisseTJW"},"content":"                super.toString(), DateTimeUtility.parseLocalDateTimeToString(this.byDateTime));","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"SherisseTJW":60}},{"path":"src/main/java/oak/task/model/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package oak.task.model;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import oak.utility.DateTimeUtility;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":" * The Event Class to handle all Event-type Tasks","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"    /** The icon this task is represented by */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"    public static final String ICON_EVENT \u003d \"E\";","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"    private LocalDateTime fromDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"    private LocalDateTime toDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"     * Constructor for Event, for user input","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"     * @param name","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"     * @param fromDateTime","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"     * @param toDateTime","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"    public Event(String name, String fromDateTime, String toDateTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"        super(name, ICON_EVENT);","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"        this.fromDateTime \u003d DateTimeUtility.parseStringToLocalDateTime(fromDateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"        this.toDateTime \u003d DateTimeUtility.parseStringToLocalDateTime(toDateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"     * Constructor for Event, for loading from tasklist.txt","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"     * @param name","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"     * @param isCompleted","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"     * @param fromDateTime","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"     * @param toDateTime","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"    public Event(String name, Boolean isCompleted, String fromDateTime, String toDateTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"        super(name, ICON_EVENT);","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"        if (isCompleted) {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"            super.markTaskCompleted();","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"        this.fromDateTime \u003d DateTimeUtility.parseStringToLocalDateTime(fromDateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"SherisseTJW"},"content":"        this.toDateTime \u003d DateTimeUtility.parseStringToLocalDateTime(toDateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"SherisseTJW"},"content":"    public LocalDateTime getToDateTime() {","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"SherisseTJW"},"content":"        return this.toDateTime;","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"SherisseTJW"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"SherisseTJW"},"content":"    public String toTaskListStringFormat() {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"SherisseTJW"},"content":"        return String.format(\"%s|%s|%s|%s\",","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"SherisseTJW"},"content":"                ICON_EVENT, super.toTaskListStringFormat(),","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"SherisseTJW"},"content":"                this.fromDateTime.toString(), this.toDateTime.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"SherisseTJW"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"SherisseTJW"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"SherisseTJW"},"content":"        return ICON_EVENT;","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"SherisseTJW"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"SherisseTJW"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"SherisseTJW"},"content":"        return String.format(\"%s (from: %s to: %s)\",","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"SherisseTJW"},"content":"                super.toString(),","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"SherisseTJW"},"content":"                DateTimeUtility.parseLocalDateTimeToString(this.fromDateTime),","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"SherisseTJW"},"content":"                DateTimeUtility.parseLocalDateTimeToString(this.toDateTime));","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"SherisseTJW":72}},{"path":"src/main/java/oak/task/model/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package oak.task.model;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":" * The parent Task Class to be inherited from for all Task-types","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"public class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"    /** Whether the task has been completed, Default value \u003d false */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"    private Boolean isCompleted \u003d false;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"    /** The name of the task */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"    private String name;","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"    /** The type icon of the task */","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"    private String typeIcon;","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"     * Constructor method for Task","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"     * @param name","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"     * @param typeIcon","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"    public Task(String name, String typeIcon) {","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"        this.typeIcon \u003d typeIcon;","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"     * Mark task completed.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"    public void markTaskCompleted() {","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"     * Mark task not completed.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"    public void markTaskNotCompleted() {","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"    public String getName() {","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"        return this.name;","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    // @@author SherisseTJW-reused","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    // Reused from https://nus-cs2103-ay2324s2.github.io/website/schedule/week2/project.html,","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Level-3 Extension A-Classes Partial Solution","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    // with only function name modification","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private String getCompletedIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return (isCompleted ? \"X\" : \" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return this.typeIcon;","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    };","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Converts the current task to a string format to be saved in the task list","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the formatted string","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String toTaskListStringFormat() {","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String completedValue \u003d this.isCompleted ? \"1\" : \"0\";","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return String.format(\"%s|%s\", completedValue, this.name);","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return \"[\" + this.getTypeIcon() + \"][\" + this.getCompletedIcon() + \"] \" + this.name;","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"SherisseTJW":42,"-":28}},{"path":"src/main/java/oak/task/model/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package oak.task.model;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":" * The Todo Class to handle all Todo-type Tasks","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"    /** The icon this task is represented by */","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"    public static final String ICON_TODO \u003d \"T\";","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"     * Constructor method for Todo from user input (without the isCompleted)","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"     * @param name","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"    public Todo(String name) {","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"        super(name, ICON_TODO);","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"     * Constructor method for Todo from tasklist.txt","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"     * @param name","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"     * @param isCompleted","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"    public Todo(String name, Boolean isCompleted) {","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"        super(name, ICON_TODO);","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"        if (isCompleted) {","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"            super.markTaskCompleted();","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"    public String toTaskListStringFormat() {","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"        return String.format(\"%s|%s\",","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"                ICON_TODO, super.toTaskListStringFormat());","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"        return ICON_TODO;","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"SherisseTJW":43}},{"path":"src/main/java/oak/utility/DateTimeUtility.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package oak.utility;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":" * The type Date time utility.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"public class DateTimeUtility {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"     * Parse string to local datetime local date time.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"     * @param rawDateTime the raw datetime","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"     * @return the local datetime","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"    public static LocalDateTime parseStringToLocalDateTime(String rawDateTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"        if (rawDateTime.contains(\"@\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"            // NOTE: We expect the user-input format to be: \"\u003cdate\u003e @ \u003ctime\u003e\"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"            String[] rawDateTimeArr \u003d rawDateTime.split(\"@\");","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"            LocalDate date \u003d LocalDate.parse(rawDateTimeArr[0].strip());;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"            LocalTime time \u003d rawDateTimeArr.length \u003e 1","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"                    ? LocalTime.parse(rawDateTimeArr[1].strip())","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"                    : LocalTime.MIDNIGHT;","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"            return LocalDateTime.of(date, time);","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"        return LocalDateTime.parse(rawDateTime);","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"     * Parse local datetime to string","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"     * @param dateTime the datetime","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"     * @return the parsed local datetime string","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"    public static String parseLocalDateTimeToString(LocalDateTime dateTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MM yyyy @ HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"SherisseTJW":44}},{"path":"src/main/java/oak/utility/FileUtility.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package oak.utility;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":" * The type File utility.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"public class FileUtility {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"     * Load file array list.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"     * @param filePath the filePath","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"     * @return the array list","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"     * @throws FileNotFoundException the file not found exception","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"    public ArrayList\u003cString\u003e loadFile(String filePath) throws IOException {","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"        ArrayList\u003cString\u003e fileData \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"            file.createNewFile();","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"            return fileData;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"            fileData.add(scanner.nextLine());","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"        scanner.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"        return fileData;","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"     * Write to file.","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"     * @param filePath the filePath","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"     * @param data     the data","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"     * @throws IOException the io exception","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"SherisseTJW"},"content":"    public void writeToFile(String filePath, String data) throws IOException {","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"SherisseTJW"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"SherisseTJW"},"content":"        file.createNewFile();","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"SherisseTJW"},"content":"        FileWriter fw \u003d new FileWriter(file, true);","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"SherisseTJW"},"content":"        data \u003d \"\\n\" + data;","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"SherisseTJW"},"content":"        fw.write(data);","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"SherisseTJW"},"content":"        fw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"SherisseTJW"},"content":"     * Updates the file contents by replacing the line matching `originalData` with `newData`","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"SherisseTJW"},"content":"     * @param filePath","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"SherisseTJW"},"content":"     * @param originalData","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"SherisseTJW"},"content":"     * @param newData","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"SherisseTJW"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"SherisseTJW"},"content":"    public void updateFile(String filePath, String originalData, String newData) throws IOException {","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"SherisseTJW"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"SherisseTJW"},"content":"        File tempFile \u003d new File(\"temp\");","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"SherisseTJW"},"content":"        FileWriter fw \u003d new FileWriter(tempFile, true);","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"SherisseTJW"},"content":"        ArrayList\u003cString\u003e originalFileData \u003d this.loadFile(filePath);","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"SherisseTJW"},"content":"        for (String line : originalFileData) {","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"SherisseTJW"},"content":"            if (line.equals(originalData)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"SherisseTJW"},"content":"                fw.write(\"\\n\" + newData);","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"SherisseTJW"},"content":"            } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"SherisseTJW"},"content":"                fw.write(\"\\n\" + line);","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"SherisseTJW"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"SherisseTJW"},"content":"        fw.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"SherisseTJW"},"content":"        file.delete();","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"SherisseTJW"},"content":"        tempFile.renameTo(new File(filePath));","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"SherisseTJW"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"SherisseTJW"},"content":"     * Remove line from file.","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"SherisseTJW"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"SherisseTJW"},"content":"     * @param filePath the filePath","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"SherisseTJW"},"content":"     * @param data     the data","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"SherisseTJW"},"content":"     * @throws IOException the io exception","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"SherisseTJW"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"SherisseTJW"},"content":"    public void removeLineFromFile(String filePath, String data) throws IOException {","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"SherisseTJW"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"SherisseTJW"},"content":"        File tempFile \u003d new File(\"temp\");","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"SherisseTJW"},"content":"        FileWriter fw \u003d new FileWriter(tempFile, true);","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"SherisseTJW"},"content":"        ArrayList\u003cString\u003e originalFileData \u003d this.loadFile(filePath);","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"SherisseTJW"},"content":"        for (String line : originalFileData) {","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"SherisseTJW"},"content":"            if (line.equals(data)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"SherisseTJW"},"content":"                continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"SherisseTJW"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"SherisseTJW"},"content":"            line \u003d \"\\n\" + line;","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"SherisseTJW"},"content":"            fw.write(line);","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"SherisseTJW"},"content":"        fw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"SherisseTJW"},"content":"        file.delete();","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"SherisseTJW"},"content":"        tempFile.renameTo(new File(filePath));","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"SherisseTJW":108}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"100\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"SherisseTJW":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"\u003cVBox maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"oak.javafx.MainWindow\" VBox.vgrow\u003d\"ALWAYS\" \u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"            \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"            \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"SherisseTJW":22}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"public class DukeTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"    public void dummyTest() {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"    public void anotherDummyTest() {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"SherisseTJW":15}},{"path":"src/test/java/oak/utility/DateTimeUtilityTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package oak.utility;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"public class DateTimeUtilityTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"    public void parseValidUserInputStringToLocalDateTimeTest() {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"        String validDateTimeString \u003d \"2019-12-12 @ 10:20\";","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"        assertEquals(","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"                LocalDateTime.parse(\"2019-12-12T10:20\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"                DateTimeUtility.parseStringToLocalDateTime(validDateTimeString)","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"        );","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"    public void parseValidTaskListStringToLocalDateTimeTest() {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"        String validDateTimeString \u003d \"2019-12-12T10:20\";","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"        assertEquals(","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"                LocalDateTime.parse(validDateTimeString),","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"                DateTimeUtility.parseStringToLocalDateTime(validDateTimeString)","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"        );","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"    public void parseLocalDateTimeToStringTest() {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"        LocalDateTime validDateTime \u003d LocalDateTime.parse(\"2019-12-12T10:20\");","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"        String expectedString \u003d \"12 12 2019 @ 1020\";","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"        assertEquals(","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"                expectedString,","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"                DateTimeUtility.parseLocalDateTimeToString(validDateTime)","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"        );","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"SherisseTJW":40}},{"path":"src/test/java/oak/utility/FileUtilityTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherisseTJW"},"content":"package oak.utility;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"import java.io.File;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"SherisseTJW"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"SherisseTJW"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"SherisseTJW"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"SherisseTJW"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"SherisseTJW"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"SherisseTJW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"SherisseTJW"},"content":"public class FileUtilityTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"SherisseTJW"},"content":"    private static final String DIRPATH \u003d \"/src/test/java\";","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"    private static final String FILENAME \u003d \"testFile.txt\";","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"SherisseTJW"},"content":"    private static final String FILE_CONTENT \u003d \"Test Content\";","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"SherisseTJW"},"content":"    private FileUtility fileUtility \u003d new FileUtility();","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"SherisseTJW"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"SherisseTJW"},"content":"    public void before() throws IOException {","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"SherisseTJW"},"content":"        File file \u003d new File(System.getProperty(\"user.dir\") + DIRPATH + \"/\" + FILENAME);","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"SherisseTJW"},"content":"        // Create if not exists","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"SherisseTJW"},"content":"        file.createNewFile();","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"        FileWriter fw \u003d new FileWriter(file, false); // Overwrite values","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"SherisseTJW"},"content":"        fw.write(FILE_CONTENT);","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"        fw.close();","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"SherisseTJW"},"content":"    @AfterAll","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"    public static void tearDown() {","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"        File file \u003d new File(System.getProperty(\"user.dir\") + DIRPATH + \"/\" + FILENAME);","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"SherisseTJW"},"content":"        file.delete();","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"    public void loadFileLoadsTheCorrectContentTest() throws IOException {","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"SherisseTJW"},"content":"        ArrayList\u003cString\u003e fileContents \u003d this.fileUtility.loadFile(DIRPATH + \"/\" + FILENAME);","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"        assertEquals(fileContents.size(), 1);","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"SherisseTJW"},"content":"        assertEquals(fileContents.get(0), FILE_CONTENT);","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"SherisseTJW"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"SherisseTJW"},"content":"    public void writeToFileTest() throws IOException {","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"SherisseTJW"},"content":"        String testData \u003d \"Something\";","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"SherisseTJW"},"content":"        fileUtility.writeToFile(DIRPATH + \"/\" + FILENAME, testData);","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"SherisseTJW"},"content":"        File file \u003d new File(System.getProperty(\"user.dir\") + DIRPATH + \"/\" + FILENAME);","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"SherisseTJW"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"SherisseTJW"},"content":"        Boolean contentExists \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"SherisseTJW"},"content":"        int numLines \u003d 0;","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"SherisseTJW"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"SherisseTJW"},"content":"            numLines++;","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"SherisseTJW"},"content":"            if (scanner.nextLine().strip().equals(testData)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"SherisseTJW"},"content":"                contentExists \u003d true;","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"SherisseTJW"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"SherisseTJW"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"SherisseTJW"},"content":"        assertEquals(contentExists, true);","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"SherisseTJW"},"content":"        assertEquals(numLines, 2);","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"SherisseTJW"},"content":"        scanner.close();","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"SherisseTJW"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"SherisseTJW"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"SherisseTJW":72}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"SherisseTJW"},"content":"java -classpath ..\\bin oak.oak \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SherisseTJW":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"SherisseTJW"},"content":"INPUT_FOLDER\u003d\"./Input\"","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"SherisseTJW"},"content":"EXPECTED_FOLDER\u003d\"./Expected\"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"SherisseTJW"},"content":"for input_file in \"$INPUT_FOLDER\"/*; do","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"SherisseTJW"},"content":"  expected_file\u003d\"$EXPECTED_FOLDER/$(basename \"$input_file\")\"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  # delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  fi","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  # compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  # run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"SherisseTJW"},"content":"  java -classpath ../bin Duke \u003c \"$input_file\" \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  # convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"SherisseTJW"},"content":"  cp \"$expected_file\" EXPECTED-UNIX.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"SherisseTJW"},"content":"#  dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  # compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"SherisseTJW"},"content":"  # -w flag: Ignore whitespaces","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"SherisseTJW"},"content":"  diff -w ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  then","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"SherisseTJW"},"content":"      echo \"Test result for $(basename \"$input_file\"): PASSED\"","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"SherisseTJW"},"content":"      echo \"Test result for $(basename \"$input_file\"): FAILED\"","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  fi","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"SherisseTJW"},"content":"done","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"SherisseTJW"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"SherisseTJW"},"content":"exit 0","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"SherisseTJW":15,"-":31}}]
