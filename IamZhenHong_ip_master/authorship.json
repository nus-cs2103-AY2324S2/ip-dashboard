[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"Hello! I\u0027m CharmBot \");","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"IamZhenHong"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"IamZhenHong"},"content":"        Task[] tasks \u003d new Task[100];","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"IamZhenHong"},"content":"        int taskCount \u003d 0;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"IamZhenHong"},"content":"        String command \u003d scanner.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"IamZhenHong"},"content":"        while (!command.equals(\"bye\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"IamZhenHong"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"IamZhenHong"},"content":"            try {","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"IamZhenHong"},"content":"                handleCommand(command, tasks, taskCount);","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"IamZhenHong"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"IamZhenHong"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"IamZhenHong"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"IamZhenHong"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"IamZhenHong"},"content":"            command \u003d scanner.nextLine();","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"IamZhenHong"},"content":"    private static void handleCommand(String command, Task[] tasks, int taskCount) throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"IamZhenHong"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"IamZhenHong"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"IamZhenHong"},"content":"            for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"IamZhenHong"},"content":"                System.out.println((i + 1) + \".\" + tasks[i]);","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"IamZhenHong"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"IamZhenHong"},"content":"        } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"IamZhenHong"},"content":"            int taskIndex \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"IamZhenHong"},"content":"            if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskCount) {","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"IamZhenHong"},"content":"                tasks[taskIndex].markAsDone();","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"IamZhenHong"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"IamZhenHong"},"content":"                System.out.println(tasks[taskIndex]);","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"IamZhenHong"},"content":"            } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"IamZhenHong"},"content":"                throw new DukeException(\"Invalid task index.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"IamZhenHong"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"IamZhenHong"},"content":"        } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"IamZhenHong"},"content":"            int taskIndex \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"IamZhenHong"},"content":"            if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskCount) {","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"IamZhenHong"},"content":"                tasks[taskIndex].markAsNotDone();","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"IamZhenHong"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"IamZhenHong"},"content":"                System.out.println(tasks[taskIndex]);","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"IamZhenHong"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"IamZhenHong"},"content":"                throw new DukeException(\"Invalid task index.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"IamZhenHong"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"IamZhenHong"},"content":"        } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"IamZhenHong"},"content":"            if (command.startsWith(\"todo\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"IamZhenHong"},"content":"                handleTodoCommand(command, tasks, taskCount);","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"IamZhenHong"},"content":"            } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"IamZhenHong"},"content":"                handleDeadlineCommand(command, tasks, taskCount);","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"IamZhenHong"},"content":"            } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"IamZhenHong"},"content":"                handleEventCommand(command, tasks, taskCount);","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"IamZhenHong"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"IamZhenHong"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"IamZhenHong"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"IamZhenHong"},"content":"    private static void handleTodoCommand(String command, Task[] tasks, int taskCount) throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"IamZhenHong"},"content":"        // Check if the command has enough characters","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"IamZhenHong"},"content":"        if (command.length() \u003c\u003d 5) {","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"IamZhenHong"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"IamZhenHong"},"content":"    ","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"IamZhenHong"},"content":"        String description \u003d command.substring(5).trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"IamZhenHong"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"IamZhenHong"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"IamZhenHong"},"content":"        } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"IamZhenHong"},"content":"            tasks[taskCount] \u003d new ToDoTask(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":87,"author":{"gitId":"IamZhenHong"},"content":"            taskCount++;","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"IamZhenHong"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-05"},{"lineNumber":89,"author":{"gitId":"IamZhenHong"},"content":"            System.out.println(tasks[taskCount - 1]);","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"IamZhenHong"},"content":"            System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":91,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":92,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":93,"author":{"gitId":"IamZhenHong"},"content":"    ","lastModifiedDate":"2024-02-05"},{"lineNumber":94,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":95,"author":{"gitId":"IamZhenHong"},"content":"    private static void handleDeadlineCommand(String command, Task[] tasks, int taskCount) throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":96,"author":{"gitId":"IamZhenHong"},"content":"        String[] parts \u003d command.substring(9).split(\"/by\");","lastModifiedDate":"2024-02-05"},{"lineNumber":97,"author":{"gitId":"IamZhenHong"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-02-05"},{"lineNumber":98,"author":{"gitId":"IamZhenHong"},"content":"            throw new DukeException(\"OOPS!!! The deadline command must include \u0027/by\u0027 followed by the deadline.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":99,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":100,"author":{"gitId":"IamZhenHong"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":101,"author":{"gitId":"IamZhenHong"},"content":"        String by \u003d parts[1].trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":102,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":103,"author":{"gitId":"IamZhenHong"},"content":"        tasks[taskCount] \u003d new DeadlineTask(description, by);","lastModifiedDate":"2024-02-05"},{"lineNumber":104,"author":{"gitId":"IamZhenHong"},"content":"        taskCount++;","lastModifiedDate":"2024-02-05"},{"lineNumber":105,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-05"},{"lineNumber":106,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(tasks[taskCount - 1]);","lastModifiedDate":"2024-02-05"},{"lineNumber":107,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":108,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":109,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":110,"author":{"gitId":"IamZhenHong"},"content":"    private static void handleEventCommand(String command, Task[] tasks, int taskCount) throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":111,"author":{"gitId":"IamZhenHong"},"content":"        String[] parts \u003d command.substring(6).split(\"/from\");","lastModifiedDate":"2024-02-05"},{"lineNumber":112,"author":{"gitId":"IamZhenHong"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-02-05"},{"lineNumber":113,"author":{"gitId":"IamZhenHong"},"content":"            throw new DukeException(\"OOPS!!! The event command must include \u0027/from\u0027 followed by the start time and \u0027/to\u0027 followed by the end time.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":114,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":115,"author":{"gitId":"IamZhenHong"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":116,"author":{"gitId":"IamZhenHong"},"content":"        String[] eventParts \u003d parts[1].split(\"/to\");","lastModifiedDate":"2024-02-05"},{"lineNumber":117,"author":{"gitId":"IamZhenHong"},"content":"        if (eventParts.length \u003c 2) {","lastModifiedDate":"2024-02-05"},{"lineNumber":118,"author":{"gitId":"IamZhenHong"},"content":"            throw new DukeException(\"OOPS!!! The event command must include \u0027/to\u0027 followed by the end time.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":119,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":120,"author":{"gitId":"IamZhenHong"},"content":"        String from \u003d eventParts[0].trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":121,"author":{"gitId":"IamZhenHong"},"content":"        String to \u003d eventParts[1].trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":122,"author":{"gitId":"IamZhenHong"},"content":"        tasks[taskCount] \u003d new EventTask(description, from, to);","lastModifiedDate":"2024-02-05"},{"lineNumber":123,"author":{"gitId":"IamZhenHong"},"content":"        taskCount++;","lastModifiedDate":"2024-02-05"},{"lineNumber":124,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-05"},{"lineNumber":125,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(tasks[taskCount - 1]);","lastModifiedDate":"2024-02-05"},{"lineNumber":126,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":129,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":130,"author":{"gitId":"IamZhenHong"},"content":"class Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":131,"author":{"gitId":"IamZhenHong"},"content":"    protected String description;","lastModifiedDate":"2024-02-05"},{"lineNumber":132,"author":{"gitId":"IamZhenHong"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-05"},{"lineNumber":133,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":134,"author":{"gitId":"IamZhenHong"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-05"},{"lineNumber":135,"author":{"gitId":"IamZhenHong"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-05"},{"lineNumber":136,"author":{"gitId":"IamZhenHong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":137,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":138,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":139,"author":{"gitId":"IamZhenHong"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-05"},{"lineNumber":140,"author":{"gitId":"IamZhenHong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-05"},{"lineNumber":141,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":142,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":143,"author":{"gitId":"IamZhenHong"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-02-05"},{"lineNumber":144,"author":{"gitId":"IamZhenHong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":145,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":146,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":147,"author":{"gitId":"IamZhenHong"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":148,"author":{"gitId":"IamZhenHong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":149,"author":{"gitId":"IamZhenHong"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2024-02-05"},{"lineNumber":150,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":151,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":152,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":153,"author":{"gitId":"IamZhenHong"},"content":"class ToDoTask extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":154,"author":{"gitId":"IamZhenHong"},"content":"    public ToDoTask(String description) {","lastModifiedDate":"2024-02-05"},{"lineNumber":155,"author":{"gitId":"IamZhenHong"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":156,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":157,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":158,"author":{"gitId":"IamZhenHong"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":159,"author":{"gitId":"IamZhenHong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":160,"author":{"gitId":"IamZhenHong"},"content":"        return \"[T][\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2024-02-05"},{"lineNumber":161,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":162,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":163,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":164,"author":{"gitId":"IamZhenHong"},"content":"class DeadlineTask extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":165,"author":{"gitId":"IamZhenHong"},"content":"    private String by;","lastModifiedDate":"2024-02-05"},{"lineNumber":166,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":167,"author":{"gitId":"IamZhenHong"},"content":"    public DeadlineTask(String description, String by) {","lastModifiedDate":"2024-02-05"},{"lineNumber":168,"author":{"gitId":"IamZhenHong"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":169,"author":{"gitId":"IamZhenHong"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-05"},{"lineNumber":170,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":171,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":172,"author":{"gitId":"IamZhenHong"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":173,"author":{"gitId":"IamZhenHong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":174,"author":{"gitId":"IamZhenHong"},"content":"        return \"[D][\" + (isDone ? \"X\" : \" \") + \"] \" + description + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-05"},{"lineNumber":175,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":176,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":177,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":178,"author":{"gitId":"IamZhenHong"},"content":"class EventTask extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":179,"author":{"gitId":"IamZhenHong"},"content":"    private String from;","lastModifiedDate":"2024-02-05"},{"lineNumber":180,"author":{"gitId":"IamZhenHong"},"content":"    private String to;","lastModifiedDate":"2024-02-05"},{"lineNumber":181,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":182,"author":{"gitId":"IamZhenHong"},"content":"    public EventTask(String description, String from, String to) {","lastModifiedDate":"2024-02-05"},{"lineNumber":183,"author":{"gitId":"IamZhenHong"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":184,"author":{"gitId":"IamZhenHong"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-05"},{"lineNumber":185,"author":{"gitId":"IamZhenHong"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-05"},{"lineNumber":186,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":187,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":188,"author":{"gitId":"IamZhenHong"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":189,"author":{"gitId":"IamZhenHong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":190,"author":{"gitId":"IamZhenHong"},"content":"        return \"[E][\" + (isDone ? \"X\" : \" \") + \"] \" + description + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-02-05"},{"lineNumber":191,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":192,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":193,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":194,"author":{"gitId":"IamZhenHong"},"content":"class DukeException extends Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":195,"author":{"gitId":"IamZhenHong"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-02-05"},{"lineNumber":196,"author":{"gitId":"IamZhenHong"},"content":"        super(message);","lastModifiedDate":"2024-02-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"IamZhenHong":186,"-":12}}]
