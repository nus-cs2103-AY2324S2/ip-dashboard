[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027 ","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"vannykin"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"vannykin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"vannykin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"vannykin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"vannykin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"vannykin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"vannykin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"vannykin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"vannykin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"vannykin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"vannykin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"vannykin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"vannykin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"vannykin"},"content":"    mainClass.set(\"lumiere.lumiere.Lumiere\")","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"vannykin"},"content":"    archiveBaseName \u003d \"lumiere\"","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"vannykin":16,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"vannykin"},"content":"# Lumiere User Guide","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"vannykin"},"content":"![Screenshot of Lumiere in action.](/Ui.png.png)","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"vannykin"},"content":"Lumiere is a bot that keeps track of your task list. There are 3 types of tasks - todo, deadline, and event.","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"vannykin"},"content":"You can check out your current list of tasks by typing the command \u0027list\u0027.","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"vannykin"},"content":"You can also close Lumiere by typing the command \u0027bye\u0027.","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"vannykin"},"content":"\u0027todo buy eggs\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"vannykin"},"content":"A todo called \u0027buy eggs\u0027 is created and added to your list of tasks.","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"vannykin"},"content":"\u0027deadline iP tasks /by 2024-02-26\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"vannykin"},"content":"A deadline called \u0027iP tasks\u0027 is created and added to your list of tasks.","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"vannykin"},"content":"This deadline has a date of 26 Feb 2024.","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"vannykin"},"content":"Deadline inputs must follow the format of YYYY-MM-DD, and must be marked by \" /by \".","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"vannykin"},"content":"\u0027event mixer dinner /from 6.30pm /to 10pm\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"vannykin"},"content":"An event called \u0027mixer dinner\u0027 is created and added to your list of tasks.","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"vannykin"},"content":"This event is from 6.30pm to 10pm.","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"vannykin"},"content":"Event inputs do not have any restrictions, but must be marked with \u0027 /from \u0027 and \u0027 /to \u0027.","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"vannykin"},"content":"## Marking-As-Done and Tagging-As-Fun Features","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"vannykin"},"content":"\u0027unmark 1\u0027 marks the first item on your task list as not done / incomplete.","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"vannykin"},"content":"\u0027mark 1\u0027 marks the first item on your task list as done.","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"vannykin"},"content":"\u0027tagAsFun 2\u0027 tags the second item on your task list as fun.","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"vannykin"},"content":"\u0027untagAsFun 2\u0027 tags the second item on your task list as not fun.","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":31,"author":{"gitId":"vannykin"},"content":"## Delete Feature","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":33,"author":{"gitId":"vannykin"},"content":"\u0027delete 3\u0027 deletes the third item from your task list.","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"vannykin":22,"-":11}},{"path":"lumiere.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"vannykin"},"content":"T | false | 2109s | true","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"vannykin"},"content":"T | true | 2103t | false","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"vannykin":2}},{"path":"src/main/java/lumiere/lumiere.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"vannykin"},"content":"T | false | 2109s ps3","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"vannykin":1}},{"path":"src/main/java/lumiere/lumiere/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vannykin"},"content":"package lumiere.lumiere;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"vannykin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"vannykin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"vannykin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"vannykin"},"content":"    private LocalDate byWhen;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"vannykin"},"content":"    private String byWhen_String;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"vannykin"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"vannykin"},"content":"     * Constructor for Deadline object","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"vannykin"},"content":"     * ","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"vannykin"},"content":"     * @param item          The item that describes what the deadline is of, i.e.","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"vannykin"},"content":"     *                      what","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"vannykin"},"content":"     *                      needs to be done.","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"vannykin"},"content":"     * @param marked        A boolean that indicates whether this deadline is marked","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"vannykin"},"content":"     *                      as over or not.","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"vannykin"},"content":"     * @param fun           A boolean that indicates whether this deadline is marked","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"vannykin"},"content":"     *                      as fun or not.","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"vannykin"},"content":"     * @param byWhen        A LocalDate object that indicates when the deadline is.","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"vannykin"},"content":"     * @param byWhen_String A string that indicates when the deadline is.","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"vannykin"},"content":"     * @return Nothing, it is a constructor.","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"vannykin"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"vannykin"},"content":"    public Deadline(String item, boolean marked, boolean fun, LocalDate byWhen, String byWhen_String) {","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"vannykin"},"content":"        super(item, marked, fun);","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"vannykin"},"content":"        this.byWhen \u003d byWhen;","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"vannykin"},"content":"        this.byWhen_String \u003d byWhen_String;","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"vannykin"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"vannykin"},"content":"     * An instance method that returns when the time of the deadline is.","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"vannykin"},"content":"     * ","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"vannykin"},"content":"     * @return A string that represents when the deadline is.","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"vannykin"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"vannykin"},"content":"    public String getbyWhen() {","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"vannykin"},"content":"        return this.byWhen_String;","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"vannykin"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"vannykin"},"content":"    public String stringify() {","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"vannykin"},"content":"        String m \u003d \"\";","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"vannykin"},"content":"        if (super.isMarked())","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"vannykin"},"content":"            m \u003d \"[X]\";","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"vannykin"},"content":"        else","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"vannykin"},"content":"            m \u003d \"[ ]\";","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"vannykin"},"content":"        if (super.isFun())","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"vannykin"},"content":"            return \"[D]\" + m + \" \" + super.stringify() + \" (by: \"","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"vannykin"},"content":"                    + this.byWhen.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \") #fun\";","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"vannykin"},"content":"        else","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"vannykin"},"content":"            return \"[D]\" + m + \" \" + super.stringify() + \" (by: \"","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"vannykin"},"content":"                    + this.byWhen.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"vannykin"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"vannykin":54}},{"path":"src/main/java/lumiere/lumiere/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vannykin"},"content":"package lumiere.lumiere;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"vannykin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"vannykin"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"vannykin"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"vannykin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"vannykin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"vannykin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"vannykin"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"vannykin"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"vannykin"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"vannykin"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"vannykin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"vannykin"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"vannykin"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"vannykin"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"vannykin"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"vannykin"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"vannykin"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"vannykin"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"vannykin"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"vannykin"},"content":" * This control represents a dialog box consisting of an ImageView to represent","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"vannykin"},"content":" * the speaker\u0027s face and a label","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"vannykin"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"vannykin"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"vannykin"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"vannykin"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"vannykin"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"vannykin"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"vannykin"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"vannykin"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"vannykin"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"vannykin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"vannykin"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"vannykin"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"vannykin"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"vannykin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"vannykin"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"vannykin"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"vannykin"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"vannykin"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"vannykin"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"vannykin"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"vannykin"},"content":"     * right.","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"vannykin"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"vannykin"},"content":"    private void flip() {","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"vannykin"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"vannykin"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"vannykin"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"vannykin"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"vannykin"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"vannykin"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"vannykin"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"vannykin"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"vannykin"},"content":"        db.setBackground(new Background(new BackgroundFill(Color.LIGHTGREY, CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"vannykin"},"content":"        db.flip();","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"vannykin"},"content":"        return db;","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"vannykin"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"vannykin":69}},{"path":"src/main/java/lumiere/lumiere/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vannykin"},"content":"package lumiere.lumiere;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"vannykin"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"vannykin"},"content":"    private String start;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"vannykin"},"content":"    private String end;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"vannykin"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"vannykin"},"content":"     * Constructor for Event object","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"vannykin"},"content":"     * ","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"vannykin"},"content":"     * @param item   The item that describes what the event is about, i.e. name of","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"vannykin"},"content":"     *               event.","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"vannykin"},"content":"     * @param marked A boolean that indicates whether this event is marked as","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"vannykin"},"content":"     *               attended or not.","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"vannykin"},"content":"     * @param fun    A boolean that indicates whether this event is marked as fun or","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"vannykin"},"content":"     *               not.","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"vannykin"},"content":"     * @param start  A string that indicates when the event starts.","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"vannykin"},"content":"     * @param end    A string that indicates when the event ends.","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"vannykin"},"content":"     * @return Nothing, it is a constructor.","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"vannykin"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"vannykin"},"content":"    public Event(String item, boolean marked, boolean fun, String start, String end) {","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"vannykin"},"content":"        super(item, marked, fun);","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"vannykin"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"vannykin"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"vannykin"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"vannykin"},"content":"     * An instance method that returns when the start of the event is.","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"vannykin"},"content":"     * ","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"vannykin"},"content":"     * @return A string that represents the start of the event.","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"vannykin"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"vannykin"},"content":"    public String getStart() {","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"vannykin"},"content":"        return this.start;","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"vannykin"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"vannykin"},"content":"     * An instance method that returns when the end of the event is.","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"vannykin"},"content":"     * ","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"vannykin"},"content":"     * @return A string that represents the end of the event.","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"vannykin"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"vannykin"},"content":"    public String getEnd() {","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"vannykin"},"content":"        return this.end;","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"vannykin"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"vannykin"},"content":"    public String stringify() {","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"vannykin"},"content":"        String m \u003d \"\";","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"vannykin"},"content":"        if (super.isMarked())","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"vannykin"},"content":"            m \u003d \"[X]\";","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"vannykin"},"content":"        else","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"vannykin"},"content":"            m \u003d \"[ ]\";","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"vannykin"},"content":"        if (super.isFun())","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"vannykin"},"content":"            return \"[E]\" + m + \" \" + super.stringify() + \" (from: \" + this.start + \" to: \" + this.end + \") #fun\";","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"vannykin"},"content":"        else","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"vannykin"},"content":"            return \"[E]\" + m + \" \" + super.stringify() + \" (from: \" + this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"vannykin"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"vannykin":57}},{"path":"src/main/java/lumiere/lumiere/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vannykin"},"content":"package lumiere.lumiere;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"vannykin"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"vannykin"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"vannykin"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"vannykin"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"vannykin"},"content":"public class Launcher {","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"vannykin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"vannykin"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"vannykin"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"vannykin":12}},{"path":"src/main/java/lumiere/lumiere/Lumiere.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vannykin"},"content":"package lumiere.lumiere;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"vannykin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"vannykin"},"content":"public class Lumiere {","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"vannykin"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"vannykin"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"vannykin"},"content":"    @SuppressWarnings(\"unused\")","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"vannykin"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"vannykin"},"content":"    public static String TASK_LIST_PATH \u003d \"./lumiere.txt\";","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"vannykin"},"content":"    public Lumiere() throws IOException {","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"vannykin"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"vannykin"},"content":"        storage \u003d new Storage(TASK_LIST_PATH);","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"vannykin"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"vannykin"},"content":"        storage.loadTasksFromFile(tasks);","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"vannykin"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"vannykin"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"vannykin"},"content":"            String response \u003d \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"vannykin"},"content":"            if (input.startsWith(\"list\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"vannykin"},"content":"                response +\u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"vannykin"},"content":"                response +\u003d tasks.printList();","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"vannykin"},"content":"            } else if (input.startsWith(\"bye\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"vannykin"},"content":"                response +\u003d Ui.exit();","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"vannykin"},"content":"            } else {","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"vannykin"},"content":"                response +\u003d tasks.addTask(input, storage);","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"vannykin"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"vannykin"},"content":"            return response;","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"vannykin"},"content":"        } catch (IOException err) {","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"vannykin"},"content":"            return \"Sorry! This is an invalid command.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"vannykin"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"vannykin"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"vannykin":36}},{"path":"src/main/java/lumiere/lumiere/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vannykin"},"content":"package lumiere.lumiere;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"vannykin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"vannykin"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"vannykin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"vannykin"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"vannykin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"vannykin"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"vannykin"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"vannykin"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"vannykin"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"vannykin"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"vannykin"},"content":"    private Lumiere lumiere \u003d new Lumiere();","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"vannykin"},"content":"    public Main() throws IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"vannykin"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"vannykin"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"vannykin"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"vannykin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"vannykin"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"vannykin"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"vannykin"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"vannykin"},"content":"            stage.setTitle(\"Lumiere Task Bot\");","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"vannykin"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(lumiere);","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"vannykin"},"content":"            stage.show();","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"vannykin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"vannykin"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"vannykin"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"vannykin"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"vannykin":35}},{"path":"src/main/java/lumiere/lumiere/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vannykin"},"content":"package lumiere.lumiere;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"vannykin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"vannykin"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"vannykin"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"vannykin"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"vannykin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"vannykin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"vannykin"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"vannykin"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"vannykin"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"vannykin"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"vannykin"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"vannykin"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"vannykin"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"vannykin"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"vannykin"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"vannykin"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"vannykin"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"vannykin"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"vannykin"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"vannykin"},"content":"    private Lumiere lumiere;","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"vannykin"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"vannykin"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"vannykin"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"vannykin"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"vannykin"},"content":"        String response \u003d Ui.greet();","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"vannykin"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"vannykin"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"vannykin"},"content":"                DialogBox.getDukeDialog(response, dukeImage));","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"vannykin"},"content":"    public void setDuke(Lumiere l) {","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"vannykin"},"content":"        lumiere \u003d l;","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"vannykin"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"vannykin"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"vannykin"},"content":"     * Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"vannykin"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"vannykin"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"vannykin"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"vannykin"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"vannykin"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"vannykin"},"content":"        String response \u003d lumiere.getResponse(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"vannykin"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"vannykin"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"vannykin"},"content":"                DialogBox.getDukeDialog(response, dukeImage));","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"vannykin"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"vannykin"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"vannykin":55}},{"path":"src/main/java/lumiere/lumiere/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vannykin"},"content":"package lumiere.lumiere;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"vannykin"},"content":"import java.io.File;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"vannykin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"vannykin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"vannykin"},"content":"import java.util.List;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"vannykin"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"vannykin"},"content":"public class Storage {","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"vannykin"},"content":"    private final String path;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"vannykin"},"content":"    private final File file;","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"vannykin"},"content":"    public Storage(String path) {","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"vannykin"},"content":"        this.path \u003d path;","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"vannykin"},"content":"        this.file \u003d new File(path);","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"vannykin"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"vannykin"},"content":"     * A void method that load tasks from data file into tasklist whenever lumiere","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"vannykin"},"content":"     * is opened and ran","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"vannykin"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"vannykin"},"content":"     * @param list TaskList that tasks will load into.","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"vannykin"},"content":"     * @throws IOException If file cannot be found, created, or loaded.","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"vannykin"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"vannykin"},"content":"    public void loadTasksFromFile(TaskList list) throws IOException {","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"vannykin"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"vannykin"},"content":"            boolean listCreated \u003d this.file.createNewFile();","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"vannykin"},"content":"            if (!listCreated) {","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"vannykin"},"content":"                Scanner s \u003d new Scanner(this.file);","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"vannykin"},"content":"                while (s.hasNextLine()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"vannykin"},"content":"                    String next \u003d s.nextLine();","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"vannykin"},"content":"                    list.loadTask(Task.parseTask(next)); // load task INTO tasklist","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"vannykin"},"content":"                }","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"vannykin"},"content":"                s.close();","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"vannykin"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"vannykin"},"content":"        } catch (IOException err) {","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"vannykin"},"content":"            System.out.println(\"ERROR LOADING FILE\");","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"vannykin"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"vannykin"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"vannykin"},"content":"     * A void method that saves a given task to data file whenever a new task is","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"vannykin"},"content":"     * created.","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"vannykin"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"vannykin"},"content":"     * @param task New task to be added to data file.","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"vannykin"},"content":"     * @throws IOException If the named file exists but is a directory rather than a","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"vannykin"},"content":"     *                     regular file, does not exist but cannot be created, or","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"vannykin"},"content":"     *                     cannot be opened for any other reason.","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"vannykin"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"vannykin"},"content":"    public void saveTaskToFile(String task) throws IOException {","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"vannykin"},"content":"        FileWriter writer \u003d new FileWriter(this.path, true);","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"vannykin"},"content":"        writer.write(task + System.lineSeparator());","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"vannykin"},"content":"        writer.close();","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"vannykin"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"vannykin"},"content":"     * A void method that clears the data file so that it can be updated.","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"vannykin"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"vannykin"},"content":"     * @throws IOException If the named file exists but is a directory rather than a","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"vannykin"},"content":"     *                     regular file, does not exist but cannot be created, or","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"vannykin"},"content":"     *                     cannot be opened for any other reason.","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"vannykin"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"vannykin"},"content":"    public void clearFile() throws IOException {","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"vannykin"},"content":"        new FileWriter(this.path, false).close();","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"vannykin"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"vannykin"},"content":"     * A void method that saves tasks in given list of tasks to data file.","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"vannykin"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"vannykin"},"content":"     * @param list Java List of Task objects that will be saved one by one into the","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"vannykin"},"content":"     *             data file.","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"vannykin"},"content":"     * @throws IOException If the named file exists but is a directory rather than a","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"vannykin"},"content":"     *                     regular file, does not exist but cannot be created, or","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"vannykin"},"content":"     *                     cannot be opened for any other reason.","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"vannykin"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"vannykin"},"content":"    public void saveTasksToFile(List\u003cTask\u003e list) throws IOException {","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"vannykin"},"content":"        // clear file first","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"vannykin"},"content":"        clearFile();","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"vannykin"},"content":"        for (Task task : list) {","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"vannykin"},"content":"            // change task to string","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"vannykin"},"content":"            String line \u003d \"\";","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"vannykin"},"content":"            if (task instanceof Todo) {","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"vannykin"},"content":"                line \u003d \"T | \" + task.isMarked() + \" | \" + task.getItem() + \" | \" + task.isFun();","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"vannykin"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2024-02-11"},{"lineNumber":85,"author":{"gitId":"vannykin"},"content":"                Deadline t \u003d (Deadline) task;","lastModifiedDate":"2024-02-11"},{"lineNumber":86,"author":{"gitId":"vannykin"},"content":"                line \u003d \"D | \" + t.isMarked() + \" | \" + t.getItem() + \" | \" + t.getbyWhen() + \" | \" + task.isFun();","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"vannykin"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2024-02-11"},{"lineNumber":88,"author":{"gitId":"vannykin"},"content":"                Event t \u003d (Event) task;","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"vannykin"},"content":"                line \u003d \"E | \" + t.isMarked() + \" | \" + t.getItem() + \" | \" + t.getStart() + \" | \" + t.getEnd() + \" | \"","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"vannykin"},"content":"                        + task.isFun();","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"vannykin"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":92,"author":{"gitId":"vannykin"},"content":"            saveTaskToFile(line);","lastModifiedDate":"2024-02-11"},{"lineNumber":93,"author":{"gitId":"vannykin"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":94,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":95,"author":{"gitId":"vannykin"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"vannykin":95}},{"path":"src/main/java/lumiere/lumiere/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vannykin"},"content":"package lumiere.lumiere;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"vannykin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"vannykin"},"content":"public class Task {","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"vannykin"},"content":"    private boolean isMarked;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"vannykin"},"content":"    private String item;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"vannykin"},"content":"    private boolean isFun;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"vannykin"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"vannykin"},"content":"     * Constructor for Task object","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"vannykin"},"content":"     * ","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"vannykin"},"content":"     * @param item     The item that describes what the task is about, i.e. what","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"vannykin"},"content":"     *                 needs","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"vannykin"},"content":"     *                 to be done","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"vannykin"},"content":"     * @param isMarked A boolean that indicates whether this task is marked as done","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"vannykin"},"content":"     *                 or","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"vannykin"},"content":"     *                 not.","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"vannykin"},"content":"     * @param isFun    A boolean that indicates whether this task is tagged as #fun","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"vannykin"},"content":"     *                 or not.","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"vannykin"},"content":"     * @return Nothing, it is a constructor.","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"vannykin"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"vannykin"},"content":"    public Task(String item, boolean isMarked, boolean isFun) {","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"vannykin"},"content":"        this.item \u003d item;","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"vannykin"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"vannykin"},"content":"        this.isFun \u003d isFun;","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"vannykin"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"vannykin"},"content":"     * An instance method that marks the task object as done.","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"vannykin"},"content":"     * ","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"vannykin"},"content":"     * @return Nothing, it is a void method.","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"vannykin"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"vannykin"},"content":"    public void mark() {","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"vannykin"},"content":"        this.isMarked \u003d true;","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"vannykin"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"vannykin"},"content":"     * An instance method that marks the task object as not done.","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"vannykin"},"content":"     * ","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"vannykin"},"content":"     * @return Nothing, it is a void method.","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"vannykin"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"vannykin"},"content":"    public void unmark() {","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"vannykin"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"vannykin"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"vannykin"},"content":"     * An instance method that marks the task object as fun.","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"vannykin"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"vannykin"},"content":"     * @return Nothing, it is a void method.","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"vannykin"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"vannykin"},"content":"    public void markAsFun() {","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"vannykin"},"content":"        this.isFun \u003d true;","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"vannykin"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"vannykin"},"content":"     * An instance method that marks the task object as not fun.","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"vannykin"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"vannykin"},"content":"     * @return Nothing, it is a void method.","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"vannykin"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"vannykin"},"content":"    public void unmarkAsFun() {","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"vannykin"},"content":"        this.isFun \u003d false;","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"vannykin"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"vannykin"},"content":"     * An instance method that returns whether the task object is done.","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"vannykin"},"content":"     * ","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"vannykin"},"content":"     * @return A boolean, true if task is marked done, false otherwise.","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"vannykin"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"vannykin"},"content":"    public boolean isMarked() {","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"vannykin"},"content":"        return this.isMarked;","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"vannykin"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"vannykin"},"content":"     * An instance method that returns whether the task object is fun.","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"vannykin"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"vannykin"},"content":"     * @return A boolean, true if task is marked fun, false otherwise.","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"vannykin"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"vannykin"},"content":"    public boolean isFun() {","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"vannykin"},"content":"        return this.isFun;","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"vannykin"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":84,"author":{"gitId":"vannykin"},"content":"     * An instance method that returns the item of the task, i.e. its description.","lastModifiedDate":"2024-02-21"},{"lineNumber":85,"author":{"gitId":"vannykin"},"content":"     * ","lastModifiedDate":"2024-02-21"},{"lineNumber":86,"author":{"gitId":"vannykin"},"content":"     * @return A string, which is the item of the task.","lastModifiedDate":"2024-02-21"},{"lineNumber":87,"author":{"gitId":"vannykin"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":88,"author":{"gitId":"vannykin"},"content":"    public String getItem() {","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"vannykin"},"content":"        return this.item;","lastModifiedDate":"2024-02-11"},{"lineNumber":90,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":92,"author":{"gitId":"vannykin"},"content":"    public String stringify() {","lastModifiedDate":"2024-02-11"},{"lineNumber":93,"author":{"gitId":"vannykin"},"content":"        return this.item;","lastModifiedDate":"2024-02-11"},{"lineNumber":94,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":95,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":96,"author":{"gitId":"vannykin"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":97,"author":{"gitId":"vannykin"},"content":"     * A static method that returns a Task object created using a given task","lastModifiedDate":"2024-02-21"},{"lineNumber":98,"author":{"gitId":"vannykin"},"content":"     * description.","lastModifiedDate":"2024-02-21"},{"lineNumber":99,"author":{"gitId":"vannykin"},"content":"     * ","lastModifiedDate":"2024-02-21"},{"lineNumber":100,"author":{"gitId":"vannykin"},"content":"     * @param taskDescription A string that provides information about the task.","lastModifiedDate":"2024-02-21"},{"lineNumber":101,"author":{"gitId":"vannykin"},"content":"     * @return A task object, either a todo, a deadline, or an event object, with","lastModifiedDate":"2024-02-21"},{"lineNumber":102,"author":{"gitId":"vannykin"},"content":"     *         all its properties set as per the description given.","lastModifiedDate":"2024-02-21"},{"lineNumber":103,"author":{"gitId":"vannykin"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":104,"author":{"gitId":"vannykin"},"content":"    public static Task parseTask(String taskDescription) {","lastModifiedDate":"2024-02-11"},{"lineNumber":105,"author":{"gitId":"vannykin"},"content":"        String[] info \u003d taskDescription.split(\" | \");","lastModifiedDate":"2024-02-11"},{"lineNumber":106,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":107,"author":{"gitId":"vannykin"},"content":"        if (taskDescription.startsWith(\"T\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":108,"author":{"gitId":"vannykin"},"content":"            return createTodo(info);","lastModifiedDate":"2024-02-21"},{"lineNumber":109,"author":{"gitId":"vannykin"},"content":"        } else if (taskDescription.startsWith(\"D\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":110,"author":{"gitId":"vannykin"},"content":"            return createDeadline(info);","lastModifiedDate":"2024-02-21"},{"lineNumber":111,"author":{"gitId":"vannykin"},"content":"        } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":112,"author":{"gitId":"vannykin"},"content":"            return createEvent(info);","lastModifiedDate":"2024-02-21"},{"lineNumber":113,"author":{"gitId":"vannykin"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":114,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":115,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":116,"author":{"gitId":"vannykin"},"content":"    private static Todo createTodo(String[] info) {","lastModifiedDate":"2024-02-22"},{"lineNumber":117,"author":{"gitId":"vannykin"},"content":"        boolean isMarked;","lastModifiedDate":"2024-02-22"},{"lineNumber":118,"author":{"gitId":"vannykin"},"content":"        boolean isFun;","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"vannykin"},"content":"        if (info[2].equals(\"true\"))","lastModifiedDate":"2024-02-11"},{"lineNumber":120,"author":{"gitId":"vannykin"},"content":"            isMarked \u003d true;","lastModifiedDate":"2024-02-22"},{"lineNumber":121,"author":{"gitId":"vannykin"},"content":"        else","lastModifiedDate":"2024-02-22"},{"lineNumber":122,"author":{"gitId":"vannykin"},"content":"            isMarked \u003d false;","lastModifiedDate":"2024-02-22"},{"lineNumber":123,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":124,"author":{"gitId":"vannykin"},"content":"        if (info[6].equals(\"true\"))","lastModifiedDate":"2024-02-22"},{"lineNumber":125,"author":{"gitId":"vannykin"},"content":"            isFun \u003d true;","lastModifiedDate":"2024-02-22"},{"lineNumber":126,"author":{"gitId":"vannykin"},"content":"        else","lastModifiedDate":"2024-02-11"},{"lineNumber":127,"author":{"gitId":"vannykin"},"content":"            isFun \u003d false;","lastModifiedDate":"2024-02-22"},{"lineNumber":128,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":129,"author":{"gitId":"vannykin"},"content":"        Todo task \u003d new Todo(info[4], isMarked, isFun);","lastModifiedDate":"2024-02-22"},{"lineNumber":130,"author":{"gitId":"vannykin"},"content":"        return task;","lastModifiedDate":"2024-02-11"},{"lineNumber":131,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":132,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":133,"author":{"gitId":"vannykin"},"content":"    private static Deadline createDeadline(String[] info) {","lastModifiedDate":"2024-02-22"},{"lineNumber":134,"author":{"gitId":"vannykin"},"content":"        boolean isMarked;","lastModifiedDate":"2024-02-22"},{"lineNumber":135,"author":{"gitId":"vannykin"},"content":"        boolean isFun;","lastModifiedDate":"2024-02-22"},{"lineNumber":136,"author":{"gitId":"vannykin"},"content":"        if (info[2].equals(\"true\"))","lastModifiedDate":"2024-02-11"},{"lineNumber":137,"author":{"gitId":"vannykin"},"content":"            isMarked \u003d true;","lastModifiedDate":"2024-02-22"},{"lineNumber":138,"author":{"gitId":"vannykin"},"content":"        else","lastModifiedDate":"2024-02-22"},{"lineNumber":139,"author":{"gitId":"vannykin"},"content":"            isMarked \u003d false;","lastModifiedDate":"2024-02-22"},{"lineNumber":140,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":141,"author":{"gitId":"vannykin"},"content":"        if (info[8].equals(\"true\"))","lastModifiedDate":"2024-02-22"},{"lineNumber":142,"author":{"gitId":"vannykin"},"content":"            isFun \u003d true;","lastModifiedDate":"2024-02-22"},{"lineNumber":143,"author":{"gitId":"vannykin"},"content":"        else","lastModifiedDate":"2024-02-11"},{"lineNumber":144,"author":{"gitId":"vannykin"},"content":"            isFun \u003d false;","lastModifiedDate":"2024-02-22"},{"lineNumber":145,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":146,"author":{"gitId":"vannykin"},"content":"        Deadline task \u003d new Deadline(info[4], isMarked, isFun, LocalDate.parse(info[6]), info[6]);","lastModifiedDate":"2024-02-22"},{"lineNumber":147,"author":{"gitId":"vannykin"},"content":"        return task;","lastModifiedDate":"2024-02-11"},{"lineNumber":148,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":149,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":150,"author":{"gitId":"vannykin"},"content":"    private static Event createEvent(String[] info) {","lastModifiedDate":"2024-02-22"},{"lineNumber":151,"author":{"gitId":"vannykin"},"content":"        boolean isMarked;","lastModifiedDate":"2024-02-22"},{"lineNumber":152,"author":{"gitId":"vannykin"},"content":"        boolean isFun;","lastModifiedDate":"2024-02-22"},{"lineNumber":153,"author":{"gitId":"vannykin"},"content":"        if (info[2].equals(\"true\"))","lastModifiedDate":"2024-02-11"},{"lineNumber":154,"author":{"gitId":"vannykin"},"content":"            isMarked \u003d true;","lastModifiedDate":"2024-02-22"},{"lineNumber":155,"author":{"gitId":"vannykin"},"content":"        else","lastModifiedDate":"2024-02-22"},{"lineNumber":156,"author":{"gitId":"vannykin"},"content":"            isMarked \u003d false;","lastModifiedDate":"2024-02-22"},{"lineNumber":157,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":158,"author":{"gitId":"vannykin"},"content":"        if (info[10].equals(\"true\"))","lastModifiedDate":"2024-02-22"},{"lineNumber":159,"author":{"gitId":"vannykin"},"content":"            isFun \u003d true;","lastModifiedDate":"2024-02-22"},{"lineNumber":160,"author":{"gitId":"vannykin"},"content":"        else","lastModifiedDate":"2024-02-11"},{"lineNumber":161,"author":{"gitId":"vannykin"},"content":"            isFun \u003d false;","lastModifiedDate":"2024-02-22"},{"lineNumber":162,"author":{"gitId":"vannykin"},"content":"        Event task \u003d new Event(info[4], isMarked, isFun, info[6], info[8]);","lastModifiedDate":"2024-02-22"},{"lineNumber":163,"author":{"gitId":"vannykin"},"content":"        return task;","lastModifiedDate":"2024-02-11"},{"lineNumber":164,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":165,"author":{"gitId":"vannykin"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"vannykin":165}},{"path":"src/main/java/lumiere/lumiere/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vannykin"},"content":"package lumiere.lumiere;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"vannykin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"vannykin"},"content":"import java.util.List;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"vannykin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"vannykin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"vannykin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"vannykin"},"content":"public class TaskList {","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"vannykin"},"content":"    List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"vannykin"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"vannykin"},"content":"     * An instance method that adds the given task to the TaskList.","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"vannykin"},"content":"     * ","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"vannykin"},"content":"     * @param task The task to be added to TaskList.","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"vannykin"},"content":"     * @return Nothing, this is a void method.","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"vannykin"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"vannykin"},"content":"    public void loadTask(Task task) {","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"vannykin"},"content":"        this.list.add(task);","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"vannykin"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"vannykin"},"content":"     * An instance method that prints the TaskList, task by task.","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"vannykin"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"vannykin"},"content":"     * @return Nothing, this is a void method.","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"vannykin"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"vannykin"},"content":"    public String printList() {","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"vannykin"},"content":"        String result \u003d \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"vannykin"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"vannykin"},"content":"            result +\u003d Integer.toString(i + 1) + \".\" + list.get(i).stringify() + \"\\n\";","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"vannykin"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"vannykin"},"content":"        return result;","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"vannykin"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"vannykin"},"content":"     * An instance method that executes a command input by user.","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"vannykin"},"content":"     * ","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"vannykin"},"content":"     * @param command The string that user input into the program.","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"vannykin"},"content":"     * @param storage A storage object that represents local storage of the tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"vannykin"},"content":"     * @return Nothing, this is a void method.","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"vannykin"},"content":"     * @throws IOException If saveTasksToFile method throws an exception.","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"vannykin"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"vannykin"},"content":"    public String addTask(String command, Storage storage) throws IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"vannykin"},"content":"        if (command.contains(\"unmark\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"vannykin"},"content":"            return unmarkTask(command, storage);","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"vannykin"},"content":"        } else if (command.contains(\"mark\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"vannykin"},"content":"            return markTask(command, storage);","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"vannykin"},"content":"        } else if (command.contains(\"untagAsFun\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"vannykin"},"content":"            return unmarkFun(command, storage);","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"vannykin"},"content":"        } else if (command.contains(\"tagAsFun\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"vannykin"},"content":"            return markFun(command, storage);","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"vannykin"},"content":"        } else if (command.contains(\"delete\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"vannykin"},"content":"            return deleteTask(command, storage);","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"vannykin"},"content":"        } else if (command.contains(\"find\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"vannykin"},"content":"            return findByKeyword(command, storage);","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"vannykin"},"content":"        } else if (command.contains(\"todo\") || command.contains(\"deadline\") || command.contains(\"event\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"vannykin"},"content":"            // create Task object with command","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"vannykin"},"content":"            if (command.equals(\"todo\") || command.equals(\"deadline\") || command.equals(\"event\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"vannykin"},"content":"                return \"OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"vannykin"},"content":"            } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"vannykin"},"content":"                int space \u003d command.indexOf(\" \");","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"vannykin"},"content":"                String type \u003d command.substring(0, space);","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"vannykin"},"content":"                if (type.equals(\"todo\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"vannykin"},"content":"                    return addAndSaveTodo(space, command, storage);","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"vannykin"},"content":"                } else if (type.equals(\"deadline\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"vannykin"},"content":"                    return addAndSaveDeadline(space, command, storage);","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"vannykin"},"content":"                } else {","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"vannykin"},"content":"                    return addAndSaveEvent(space, command, storage);","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"vannykin"},"content":"                }","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"vannykin"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":72,"author":{"gitId":"vannykin"},"content":"        } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":73,"author":{"gitId":"vannykin"},"content":"            return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"vannykin"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":75,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":76,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":77,"author":{"gitId":"vannykin"},"content":"    private String unmarkTask(String command, Storage storage) throws IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"vannykin"},"content":"        int space \u003d command.indexOf(\" \");","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"vannykin"},"content":"        int num \u003d Integer.parseInt(command.substring(space + 1)); // unmark X","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"vannykin"},"content":"        Task curr \u003d list.get(num - 1);","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"vannykin"},"content":"        curr.unmark();","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"vannykin"},"content":"        list.set(num - 1, curr);","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"vannykin"},"content":"        storage.saveTasksToFile(list);","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"vannykin"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + list.get(num - 1).stringify();","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":86,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":87,"author":{"gitId":"vannykin"},"content":"    private String markTask(String command, Storage storage) throws IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"vannykin"},"content":"        int space \u003d command.indexOf(\" \");","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"vannykin"},"content":"        int num \u003d Integer.parseInt(command.substring(space + 1)); // mark X","lastModifiedDate":"2024-02-11"},{"lineNumber":90,"author":{"gitId":"vannykin"},"content":"        Task curr \u003d list.get(num - 1);","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"vannykin"},"content":"        curr.mark();","lastModifiedDate":"2024-02-11"},{"lineNumber":92,"author":{"gitId":"vannykin"},"content":"        list.set(num - 1, curr);","lastModifiedDate":"2024-02-11"},{"lineNumber":93,"author":{"gitId":"vannykin"},"content":"        storage.saveTasksToFile(list);","lastModifiedDate":"2024-02-11"},{"lineNumber":94,"author":{"gitId":"vannykin"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + list.get(num - 1).stringify();","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":96,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":97,"author":{"gitId":"vannykin"},"content":"    private String unmarkFun(String command, Storage storage) throws IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":98,"author":{"gitId":"vannykin"},"content":"        int space \u003d command.indexOf(\" \");","lastModifiedDate":"2024-02-22"},{"lineNumber":99,"author":{"gitId":"vannykin"},"content":"        int num \u003d Integer.parseInt(command.substring(space + 1));","lastModifiedDate":"2024-02-22"},{"lineNumber":100,"author":{"gitId":"vannykin"},"content":"        Task curr \u003d list.get(num - 1);","lastModifiedDate":"2024-02-22"},{"lineNumber":101,"author":{"gitId":"vannykin"},"content":"        curr.unmarkAsFun();","lastModifiedDate":"2024-02-22"},{"lineNumber":102,"author":{"gitId":"vannykin"},"content":"        list.set(num - 1, curr);","lastModifiedDate":"2024-02-22"},{"lineNumber":103,"author":{"gitId":"vannykin"},"content":"        storage.saveTasksToFile(list);","lastModifiedDate":"2024-02-22"},{"lineNumber":104,"author":{"gitId":"vannykin"},"content":"        return \"Ok, I\u0027ve marked this task as not fun:\\n\" + list.get(num - 1).stringify();","lastModifiedDate":"2024-02-22"},{"lineNumber":105,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":106,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"vannykin"},"content":"    private String markFun(String command, Storage storage) throws IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":108,"author":{"gitId":"vannykin"},"content":"        int space \u003d command.indexOf(\" \");","lastModifiedDate":"2024-02-22"},{"lineNumber":109,"author":{"gitId":"vannykin"},"content":"        int num \u003d Integer.parseInt(command.substring(space + 1));","lastModifiedDate":"2024-02-22"},{"lineNumber":110,"author":{"gitId":"vannykin"},"content":"        Task curr \u003d list.get(num - 1);","lastModifiedDate":"2024-02-22"},{"lineNumber":111,"author":{"gitId":"vannykin"},"content":"        curr.markAsFun();","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"vannykin"},"content":"        list.set(num - 1, curr);","lastModifiedDate":"2024-02-22"},{"lineNumber":113,"author":{"gitId":"vannykin"},"content":"        storage.saveTasksToFile(list);","lastModifiedDate":"2024-02-22"},{"lineNumber":114,"author":{"gitId":"vannykin"},"content":"        return \"Nice! I\u0027ve marked this task as fun:\\n\" + list.get(num - 1).stringify();","lastModifiedDate":"2024-02-22"},{"lineNumber":115,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":116,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":117,"author":{"gitId":"vannykin"},"content":"    private String deleteTask(String command, Storage storage) throws IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":118,"author":{"gitId":"vannykin"},"content":"        int space \u003d command.indexOf(\" \");","lastModifiedDate":"2024-02-11"},{"lineNumber":119,"author":{"gitId":"vannykin"},"content":"        int num \u003d Integer.parseInt(command.substring(space + 1)); // delete X","lastModifiedDate":"2024-02-11"},{"lineNumber":120,"author":{"gitId":"vannykin"},"content":"        String temp \u003d list.get(num - 1).stringify();","lastModifiedDate":"2024-02-22"},{"lineNumber":121,"author":{"gitId":"vannykin"},"content":"        list.remove(num - 1);","lastModifiedDate":"2024-02-11"},{"lineNumber":122,"author":{"gitId":"vannykin"},"content":"        storage.saveTasksToFile(list);","lastModifiedDate":"2024-02-11"},{"lineNumber":123,"author":{"gitId":"vannykin"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + temp + \"\\nNow you have \" + list.size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":124,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":125,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":126,"author":{"gitId":"vannykin"},"content":"    private String findByKeyword(String command, Storage storage) throws IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":127,"author":{"gitId":"vannykin"},"content":"        int space \u003d command.indexOf(\" \");","lastModifiedDate":"2024-02-15"},{"lineNumber":128,"author":{"gitId":"vannykin"},"content":"        String search_phrase \u003d command.substring(space + 1);","lastModifiedDate":"2024-02-15"},{"lineNumber":129,"author":{"gitId":"vannykin"},"content":"        String result \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2024-02-22"},{"lineNumber":130,"author":{"gitId":"vannykin"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-02-15"},{"lineNumber":131,"author":{"gitId":"vannykin"},"content":"            if (list.get(i).getItem().contains(search_phrase))","lastModifiedDate":"2024-02-15"},{"lineNumber":132,"author":{"gitId":"vannykin"},"content":"                result +\u003d i + 1 + \".\" + list.get(i).stringify() + \"\\n\";","lastModifiedDate":"2024-02-22"},{"lineNumber":133,"author":{"gitId":"vannykin"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":134,"author":{"gitId":"vannykin"},"content":"        return result;","lastModifiedDate":"2024-02-22"},{"lineNumber":135,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":136,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":137,"author":{"gitId":"vannykin"},"content":"    private String addAndSaveTodo(int space, String command, Storage storage) throws IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":138,"author":{"gitId":"vannykin"},"content":"        String rest \u003d command.substring(space + 1);","lastModifiedDate":"2024-02-11"},{"lineNumber":139,"author":{"gitId":"vannykin"},"content":"        Todo task \u003d new Todo(rest, false, false);","lastModifiedDate":"2024-02-22"},{"lineNumber":140,"author":{"gitId":"vannykin"},"content":"        list.add(task);","lastModifiedDate":"2024-02-11"},{"lineNumber":141,"author":{"gitId":"vannykin"},"content":"        storage.saveTasksToFile(list);","lastModifiedDate":"2024-02-15"},{"lineNumber":142,"author":{"gitId":"vannykin"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task.stringify() + \"\\n\" +","lastModifiedDate":"2024-02-22"},{"lineNumber":143,"author":{"gitId":"vannykin"},"content":"                \"Now you have \" + Integer.toString(list.size()) + \" tasks in the list.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":144,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":145,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":146,"author":{"gitId":"vannykin"},"content":"    private String addAndSaveDeadline(int space, String command, Storage storage) throws IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":147,"author":{"gitId":"vannykin"},"content":"        String rest \u003d command.substring(space + 1);","lastModifiedDate":"2024-02-11"},{"lineNumber":148,"author":{"gitId":"vannykin"},"content":"        String[] description \u003d rest.split(\" /by \");","lastModifiedDate":"2024-02-11"},{"lineNumber":149,"author":{"gitId":"vannykin"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":150,"author":{"gitId":"vannykin"},"content":"            LocalDate time \u003d LocalDate.parse(description[1]);","lastModifiedDate":"2024-02-15"},{"lineNumber":151,"author":{"gitId":"vannykin"},"content":"            Deadline task \u003d new Deadline(description[0], false, false, time, description[1]);","lastModifiedDate":"2024-02-22"},{"lineNumber":152,"author":{"gitId":"vannykin"},"content":"            list.add(task);","lastModifiedDate":"2024-02-11"},{"lineNumber":153,"author":{"gitId":"vannykin"},"content":"            storage.saveTasksToFile(list);","lastModifiedDate":"2024-02-15"},{"lineNumber":154,"author":{"gitId":"vannykin"},"content":"            return \"Got it. I\u0027ve added this task:\\n\" + task.stringify() + \"\\n\" +","lastModifiedDate":"2024-02-22"},{"lineNumber":155,"author":{"gitId":"vannykin"},"content":"                    \"Now you have \" + Integer.toString(list.size()) + \" tasks in the list.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":156,"author":{"gitId":"vannykin"},"content":"        } catch (DateTimeParseException err) {","lastModifiedDate":"2024-02-15"},{"lineNumber":157,"author":{"gitId":"vannykin"},"content":"            return \"Sorry! Your deadline is in the wrong format. Correct format is YYYY-MM-DD\";","lastModifiedDate":"2024-02-22"},{"lineNumber":158,"author":{"gitId":"vannykin"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":159,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":160,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":161,"author":{"gitId":"vannykin"},"content":"    private String addAndSaveEvent(int space, String command, Storage storage) throws IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":162,"author":{"gitId":"vannykin"},"content":"        String rest \u003d command.substring(space + 1);","lastModifiedDate":"2024-02-11"},{"lineNumber":163,"author":{"gitId":"vannykin"},"content":"        String[] description \u003d rest.split(\" /from \");","lastModifiedDate":"2024-02-11"},{"lineNumber":164,"author":{"gitId":"vannykin"},"content":"        String[] time \u003d description[1].split(\" /to \");","lastModifiedDate":"2024-02-11"},{"lineNumber":165,"author":{"gitId":"vannykin"},"content":"        Event task \u003d new Event(description[0], false, false, time[0], time[1]);","lastModifiedDate":"2024-02-22"},{"lineNumber":166,"author":{"gitId":"vannykin"},"content":"        list.add(task);","lastModifiedDate":"2024-02-11"},{"lineNumber":167,"author":{"gitId":"vannykin"},"content":"        storage.saveTasksToFile(list);","lastModifiedDate":"2024-02-11"},{"lineNumber":168,"author":{"gitId":"vannykin"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task.stringify() + \"\\n\" +","lastModifiedDate":"2024-02-22"},{"lineNumber":169,"author":{"gitId":"vannykin"},"content":"                \"Now you have \" + Integer.toString(list.size()) + \" tasks in the list.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":170,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":171,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":172,"author":{"gitId":"vannykin"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"vannykin":172}},{"path":"src/main/java/lumiere/lumiere/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vannykin"},"content":"package lumiere.lumiere;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"vannykin"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"vannykin"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"vannykin"},"content":"     * Constructor for Todo object","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"vannykin"},"content":"     * ","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"vannykin"},"content":"     * @param item   The item that describes what the todo is about, i.e. what needs","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"vannykin"},"content":"     *               to be done","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"vannykin"},"content":"     * @param marked A boolean that indicates whether this todo is marked as done or","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"vannykin"},"content":"     *               not.","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"vannykin"},"content":"     * @param fun    A boolean that indicates whether this todo is marked as fun or","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"vannykin"},"content":"     *               not.","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"vannykin"},"content":"     * @return Nothing, it is a constructor.","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"vannykin"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"vannykin"},"content":"    public Todo(String item, boolean marked, boolean fun) {","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"vannykin"},"content":"        super(item, marked, fun);","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"vannykin"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"vannykin"},"content":"    public String stringify() {","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"vannykin"},"content":"        String m \u003d \"\";","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"vannykin"},"content":"        if (super.isMarked())","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"vannykin"},"content":"            m \u003d \"[X]\";","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"vannykin"},"content":"        else","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"vannykin"},"content":"            m \u003d \"[ ]\";","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"vannykin"},"content":"        if (super.isFun())","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"vannykin"},"content":"            return \"[T]\" + m + \" \" + super.stringify() + \" #fun\";","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"vannykin"},"content":"        else","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"vannykin"},"content":"            return \"[T]\" + m + \" \" + super.stringify();","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"vannykin"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"vannykin":33}},{"path":"src/main/java/lumiere/lumiere/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vannykin"},"content":"package lumiere.lumiere;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"vannykin"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"vannykin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"vannykin"},"content":"public class Ui {","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"vannykin"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"vannykin"},"content":"     * An instance method that gets the program started.","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"vannykin"},"content":"     * ","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"vannykin"},"content":"     * @param tasks   The list of tasks (TaskList object) that might be used to","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"vannykin"},"content":"     *                execute certain user commands.","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"vannykin"},"content":"     * @param storage The storage object that might be used to execute certain user","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"vannykin"},"content":"     *                commands.","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"vannykin"},"content":"     * @throws IOException If addTask throws an exception.","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"vannykin"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"vannykin"},"content":"    public void run(TaskList tasks, Storage storage) throws IOException {","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"vannykin"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"vannykin"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"vannykin"},"content":"            String nextTask \u003d scanner.nextLine();","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"vannykin"},"content":"            if (nextTask.startsWith(\"list\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"vannykin"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"vannykin"},"content":"                tasks.printList();","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"vannykin"},"content":"            } else if (nextTask.startsWith(\"bye\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"vannykin"},"content":"                exit();","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"vannykin"},"content":"                break;","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"vannykin"},"content":"            } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"vannykin"},"content":"                tasks.addTask(nextTask, storage);","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"vannykin"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"vannykin"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"vannykin"},"content":"        scanner.close();","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"vannykin"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"vannykin"},"content":"     * A static method that prints a welcome greeting.","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"vannykin"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"vannykin"},"content":"    public static String greet() {","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"vannykin"},"content":"        return \"Hello! I\u0027m Lumiere\\n\" + \"Tell me what I can do for you, be my guest!\\n\";","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"vannykin"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"vannykin"},"content":"     * A static method that prints an exit greeting.","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"vannykin"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"vannykin"},"content":"    public static String exit() {","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"vannykin"},"content":"        return \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"vannykin"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"vannykin":47}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"vannykin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"vannykin"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"vannykin"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"vannykin"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"vannykin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"vannykin"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"vannykin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"vannykin"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" style\u003d\"-fx-background-radius: 13; -fx-background-color: #0073ff;\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"vannykin"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"vannykin"},"content":"                \u003cInsets bottom\u003d\"7.0\" left\u003d\"7.0\" right\u003d\"7.0\" top\u003d\"7.0\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"vannykin"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"vannykin"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"vannykin"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"45.0\" fitWidth\u003d\"45.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"vannykin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"vannykin"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"vannykin"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"vannykin"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"vannykin"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"vannykin":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"vannykin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"vannykin"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"vannykin"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"vannykin"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"vannykin"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"vannykin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"vannykin"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"lumiere.lumiere.MainWindow\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"vannykin"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"vannykin"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"vannykin"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"vannykin"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"vannykin"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"vannykin"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"vannykin"},"content":"      \u003c/content\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"vannykin"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"vannykin"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"vannykin"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"vannykin":19}},{"path":"src/test/java/lumiere/lumiere/LumiereTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vannykin"},"content":"package lumiere.lumiere; //same package as the class being tested","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"vannykin"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"vannykin"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"vannykin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"vannykin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"vannykin"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"vannykin"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"vannykin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"vannykin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"vannykin"},"content":"public class LumiereTest {","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"vannykin"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"vannykin"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"vannykin"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"vannykin"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"vannykin"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"vannykin"},"content":"    @AfterEach","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"vannykin"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"vannykin"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"vannykin"},"content":"    @Test","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"vannykin"},"content":"    public void dummyTest() {","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"vannykin"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"vannykin"},"content":"            new TaskList().addTask(\"deadline testing /by NEVER!\", new Storage(\"./lumiere.txt\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"vannykin"},"content":"        } catch (IOException err) {","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"vannykin"},"content":"            System.out.println(\"SOMETHING IS WRONG\");","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"vannykin"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"vannykin"},"content":"        assertEquals(\"Sorry! Your deadline is in the wrong format. Correct format is YYYY-MM-DD\",","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"vannykin"},"content":"                outContent.toString().trim());","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"vannykin"},"content":"    @Test","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"vannykin"},"content":"    public void anotherDummyTest() {","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"vannykin"},"content":"        String time \u003d \"2024-01-12\"; // represents 12 Jan 2024, NOT 1 Dec 2024!!","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"vannykin"},"content":"        Deadline test \u003d new Deadline(\"Visit National Museum\", true, true, LocalDate.parse(time), time);","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"vannykin"},"content":"        assertEquals(\"[D][X] Visit National Museum (by: Jan 12 2024) #fun\",","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"vannykin"},"content":"                test.stringify());","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"vannykin"},"content":"    public void dummyJavaTest() {","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"vannykin"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"vannykin"},"content":"            new TaskList().addTask(\"deadline testing /by NEVER!\", new Storage(\"./lumiere.txt\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"vannykin"},"content":"        } catch (IOException err) {","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"vannykin"},"content":"            System.out.println(\"SOMETHING IS WRONG\");","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"vannykin"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"vannykin"},"content":"        assert \"Sorry! Your deadline is in the wrong format. Correct format is YYYY-MM-DD\" \u003d\u003d outContent.toString()","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"vannykin"},"content":"                .trim();","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"vannykin"},"content":"    public void anotherDummyJavaTest() {","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"vannykin"},"content":"        String time \u003d \"2024-01-12\"; // represents 12 Jan 2024, NOT 1 Dec 2024!!","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"vannykin"},"content":"        Deadline test \u003d new Deadline(\"Visit National Museum\", true, true, LocalDate.parse(time), time);","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"vannykin"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"vannykin"},"content":"        assert \"[D][X] Visit National Museum (by: Jan 12 2024) #fun\" \u003d\u003d test.stringify();","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"vannykin"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"vannykin"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"vannykin":68}}]
