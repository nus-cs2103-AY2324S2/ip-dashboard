[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"HusseinSafwan02"},"content":"# chillchief.ChillChief project template","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"HusseinSafwan02"},"content":"3. After that, locate the `src/main/java/chillchief.ChillChief.java` file, right-click it, and choose `Run chillchief.ChillChief.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"HusseinSafwan02":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"HusseinSafwan02"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"HusseinSafwan02"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"HusseinSafwan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"HusseinSafwan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"HusseinSafwan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"HusseinSafwan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"HusseinSafwan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"HusseinSafwan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"HusseinSafwan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"HusseinSafwan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"HusseinSafwan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"HusseinSafwan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"HusseinSafwan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"HusseinSafwan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"HusseinSafwan02"},"content":"    mainClass.set(\"chillchief.ChillChief\")","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"HusseinSafwan02"},"content":"    archiveBaseName \u003d \"chillchief\"","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"HusseinSafwan02":18,"-":40}},{"path":"data/chillchief.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HusseinSafwan02"},"content":"T|0|sleep","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"HusseinSafwan02"},"content":"D| 1|return book|2024-02-19 18:00","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"HusseinSafwan02"},"content":"E|0|meeting|2024-02-19 18:00 to 2024-02-19 19:00","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"HusseinSafwan02"},"content":"T|1|eat","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"HusseinSafwan02":4}},{"path":"src/main/java/chillchief/ChillChief.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HusseinSafwan02"},"content":"package chillchief;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"HusseinSafwan02"},"content":"import util.Parser;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"HusseinSafwan02"},"content":"import util.Storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"HusseinSafwan02"},"content":"import util.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"HusseinSafwan02"},"content":"import util.TextUi;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"HusseinSafwan02"},"content":"import exceptions.ChillChiefException;","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"HusseinSafwan02"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"HusseinSafwan02"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"HusseinSafwan02"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"HusseinSafwan02"},"content":" * ChillChief is a task management application.","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"HusseinSafwan02"},"content":" * Users can add, mark, unmark, delete, find, various tasks such as todos, deadlines and events.","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"HusseinSafwan02"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"HusseinSafwan02"},"content":"public class ChillChief {","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"HusseinSafwan02"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"HusseinSafwan02"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"HusseinSafwan02"},"content":"    private TextUi ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"HusseinSafwan02"},"content":"     * Constructs an instance of the ChillChief application.","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"HusseinSafwan02"},"content":"     * Initializes the TextUi, Storage and TaskList components.","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"HusseinSafwan02"},"content":"     * Displays an error is initialization of components fails.","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param filePath The file path where tasks are saved and loaded from.","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"HusseinSafwan02"},"content":"     * @throws IOException If an error occurs in initialization of components.","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"HusseinSafwan02"},"content":"    public ChillChief(String filePath) throws IOException {","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"HusseinSafwan02"},"content":"        ui \u003d new TextUi();","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"HusseinSafwan02"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"HusseinSafwan02"},"content":"        taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"HusseinSafwan02"},"content":"     * Runs the ChillChief application.","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"HusseinSafwan02"},"content":"    public void run() {","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"HusseinSafwan02"},"content":"        System.out.println(this.ui.showIntroMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"HusseinSafwan02"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"HusseinSafwan02"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"HusseinSafwan02"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"HusseinSafwan02"},"content":"            try {","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"HusseinSafwan02"},"content":"                String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"HusseinSafwan02"},"content":"                String response \u003d Parser.parseInput(userInput, taskList, ui, storage);","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"HusseinSafwan02"},"content":"                System.out.println(response);","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"HusseinSafwan02"},"content":"                isExit \u003d userInput.trim().equalsIgnoreCase(\"bye\");","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"HusseinSafwan02"},"content":"                storage.save(taskList.getAllTasks());","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"HusseinSafwan02"},"content":"            } catch (ChillChiefException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"HusseinSafwan02"},"content":"                System.out.println(ui.showErrorMessage(\"Error!\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"HusseinSafwan02"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"HusseinSafwan02"},"content":"                System.out.println(\"An unexpected error occurred.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"HusseinSafwan02"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"HusseinSafwan02"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"HusseinSafwan02"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"HusseinSafwan02"},"content":"        new ChillChief(\"./data/chillchief.txt\").run();","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"HusseinSafwan02":59,"-":2}},{"path":"src/main/java/exceptions/ChillChiefException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HusseinSafwan02"},"content":"package exceptions;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"HusseinSafwan02"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"HusseinSafwan02"},"content":" * Custom exception class for ChillChief application.","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"HusseinSafwan02"},"content":" * Represents exceptions specific to ChillChief application.","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"HusseinSafwan02"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"HusseinSafwan02"},"content":"public class ChillChiefException extends Exception {","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"HusseinSafwan02"},"content":"     * Constructs a ChillChiefException with a custom error message.","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param errorMessage The error message describing the exception.","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"HusseinSafwan02"},"content":"    public ChillChiefException(String errorMessage) {","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"HusseinSafwan02"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"HusseinSafwan02"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"HusseinSafwan02":16}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HusseinSafwan02"},"content":"package tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"HusseinSafwan02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"HusseinSafwan02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"HusseinSafwan02"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"HusseinSafwan02"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"HusseinSafwan02"},"content":" * Extends the Task class.","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"HusseinSafwan02"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"HusseinSafwan02"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"HusseinSafwan02"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"HusseinSafwan02"},"content":"     * Constructs a new Deadline instance.","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param taskDescription The description of the deadline task.","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param isDone          Indicates whether the deadline task has been completed.","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param by              When the task should be done by.","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"HusseinSafwan02"},"content":"    public Deadline(String taskDescription, Boolean isDone, LocalDateTime by) {","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"HusseinSafwan02"},"content":"        super(taskDescription, isDone);","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"HusseinSafwan02"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"HusseinSafwan02"},"content":"     * Returns a string representation of the Deadline object.","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"HusseinSafwan02"},"content":"     * @return A string containing task type, description and by when it should be done.","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"HusseinSafwan02"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"HusseinSafwan02"},"content":"    public String toString() {","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"HusseinSafwan02"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy | HHmm\");","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"HusseinSafwan02"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"HusseinSafwan02"},"content":"     * Returns a string representation of the Deadline object to save to file.","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"HusseinSafwan02"},"content":"     * @return A string containing task type, description, when to finish by formatted for file saving.","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"HusseinSafwan02"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"HusseinSafwan02"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"HusseinSafwan02"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"HusseinSafwan02"},"content":"        return \"D| \" + super.toFileString() + \"|\" + this.by.format(formatter);","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"HusseinSafwan02"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"HusseinSafwan02":46}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HusseinSafwan02"},"content":"package tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"HusseinSafwan02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"HusseinSafwan02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"HusseinSafwan02"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"HusseinSafwan02"},"content":" * Represents a task with specific start and end times.","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"HusseinSafwan02"},"content":" * Extends the Task class.","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"HusseinSafwan02"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"HusseinSafwan02"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"HusseinSafwan02"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"HusseinSafwan02"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"HusseinSafwan02"},"content":"    private static final String PATTERN \u003d \"dd MMM yyyy hh:mm a\";","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"HusseinSafwan02"},"content":"     * Instantiates a new Event.","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param isDone      Indicates whether the event task has been completed.","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param startTime   The start time of the event.","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param endTime     The end time of the event.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"HusseinSafwan02"},"content":"    public Event(String description, boolean isDone, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"HusseinSafwan02"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"HusseinSafwan02"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"HusseinSafwan02"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"HusseinSafwan02"},"content":"     * Returns a string representation of the Event object.","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"HusseinSafwan02"},"content":"     * @return A string containing the task type, description, start time and end time.","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"HusseinSafwan02"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"HusseinSafwan02"},"content":"    public String toString() {","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"HusseinSafwan02"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"HusseinSafwan02"},"content":"                + \" (start time: \" + this.startTime.format(DateTimeFormatter.ofPattern(PATTERN))","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"HusseinSafwan02"},"content":"                + \")\"","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"HusseinSafwan02"},"content":"                + \" (end time: \" + this.endTime.format(DateTimeFormatter.ofPattern(PATTERN))","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"HusseinSafwan02"},"content":"                + \")\";","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"HusseinSafwan02"},"content":"     * Returns a string representation of the Event object to save to file.","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"HusseinSafwan02"},"content":"     * @return A string containing the task type, description, start time and end time formatted for saving to file.","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"HusseinSafwan02"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"HusseinSafwan02"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"HusseinSafwan02"},"content":"        DateTimeFormatter fileFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"HusseinSafwan02"},"content":"        return \"E|\"","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"HusseinSafwan02"},"content":"                + super.toFileString()","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"HusseinSafwan02"},"content":"                + \"|\"","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"HusseinSafwan02"},"content":"                + this.startTime.format(fileFormatter)","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"HusseinSafwan02"},"content":"                + \" to \"","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"HusseinSafwan02"},"content":"                + this.endTime.format(fileFormatter);","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"HusseinSafwan02"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"HusseinSafwan02":58}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HusseinSafwan02"},"content":"package tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"HusseinSafwan02"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"HusseinSafwan02"},"content":" * Represents a task.","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"HusseinSafwan02"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"HusseinSafwan02"},"content":"public class Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"HusseinSafwan02"},"content":"    private String description;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"HusseinSafwan02"},"content":"    private Boolean isDone;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"HusseinSafwan02"},"content":"     * Constructs a new Task instance.","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param isDone      Indicates whether the task has been completed.","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"HusseinSafwan02"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"HusseinSafwan02"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"HusseinSafwan02"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"HusseinSafwan02"},"content":"     * Checks whether task has been completed","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"HusseinSafwan02"},"content":"     * @return The boolean status of the task.","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"HusseinSafwan02"},"content":"    public Boolean getDone() {","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"HusseinSafwan02"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"HusseinSafwan02"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"HusseinSafwan02"},"content":"    public void markDone() {","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"HusseinSafwan02"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"HusseinSafwan02"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"HusseinSafwan02"},"content":"    public void markNotDone() {","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"HusseinSafwan02"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"HusseinSafwan02"},"content":"     * Gets the description of the task.","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"HusseinSafwan02"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"HusseinSafwan02"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"HusseinSafwan02"},"content":"        return this.description;","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"HusseinSafwan02"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"HusseinSafwan02"},"content":"     * @return A string with the marked or unmarked done status and description of the task.","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"HusseinSafwan02"},"content":"    @Override public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"HusseinSafwan02"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"HusseinSafwan02"},"content":"            return \"[X] \" + this.description;","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"HusseinSafwan02"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"HusseinSafwan02"},"content":"        return \"[ ] \" + this.description;","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"HusseinSafwan02"},"content":"     * Returns a string representation of the task to save to file.","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"HusseinSafwan02"},"content":"     * @return A string representing the task for file storage.","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"HusseinSafwan02"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"HusseinSafwan02"},"content":"        return (this.isDone ? \"1\" : \"0\") + \"|\" + this.description;","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"HusseinSafwan02"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"HusseinSafwan02":73}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HusseinSafwan02"},"content":"package tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"HusseinSafwan02"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"HusseinSafwan02"},"content":" * Represents a task without any deadline or start and end time.","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"HusseinSafwan02"},"content":" * Extends the Task class.","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"HusseinSafwan02"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"HusseinSafwan02"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"HusseinSafwan02"},"content":"     * Constructs a new instance of a Todo object.","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param isDone Indicates whether the todo task has been completed.","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"HusseinSafwan02"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"HusseinSafwan02"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"HusseinSafwan02"},"content":"     * Returns a string representation of the todo task.","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"HusseinSafwan02"},"content":"     * @return A string representation of the todo task.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"HusseinSafwan02"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"HusseinSafwan02"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"HusseinSafwan02"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"HusseinSafwan02"},"content":"     * Returns a string representation of a todo task for saving to file.","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"HusseinSafwan02"},"content":"     * @return A string representing a todo task for saving to file.","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"HusseinSafwan02"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"HusseinSafwan02"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"HusseinSafwan02"},"content":"        return \"T|\" + super.toFileString();","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"HusseinSafwan02"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"HusseinSafwan02":38}},{"path":"src/main/java/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HusseinSafwan02"},"content":"package util;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"HusseinSafwan02"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"HusseinSafwan02"},"content":"import tasks.Event;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"HusseinSafwan02"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"HusseinSafwan02"},"content":"import tasks.Todo;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"HusseinSafwan02"},"content":"import exceptions.ChillChiefException;","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"HusseinSafwan02"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"HusseinSafwan02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"HusseinSafwan02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"HusseinSafwan02"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"HusseinSafwan02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"HusseinSafwan02"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"HusseinSafwan02"},"content":" * A parser class to parse user input and executing corresponding actions.","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"HusseinSafwan02"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"HusseinSafwan02"},"content":"public class Parser {","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"HusseinSafwan02"},"content":"     * Parses the user input and performs corresponding actions.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param userInput The text input by the user.","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param tasks     The TaskList containing tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param textUi    The TextUi for user interface interactions.","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param storage   The Storage for saving and loading tasks to and from file.","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"HusseinSafwan02"},"content":"     * @return The string message based on the user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"HusseinSafwan02"},"content":"     * @throws ChillChiefException If user input is invalid.","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"HusseinSafwan02"},"content":"     * @throws IOException         if user input is invalid.","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"HusseinSafwan02"},"content":"    public static String parseInput(String userInput, TaskList tasks, TextUi textUi, Storage storage) throws ChillChiefException, IOException {","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"HusseinSafwan02"},"content":"        String[] tokens \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"HusseinSafwan02"},"content":"        assert !tokens[0].isEmpty() : \"userInput cannot have empty command keyword.\";","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"HusseinSafwan02"},"content":"        String command \u003d tokens[0].toLowerCase();","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"HusseinSafwan02"},"content":"        switch (command) {","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"HusseinSafwan02"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"HusseinSafwan02"},"content":"            storage.save(tasks.getAllTasks());","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"HusseinSafwan02"},"content":"            return textUi.showOutroMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"HusseinSafwan02"},"content":"        case \"help\":","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"HusseinSafwan02"},"content":"            return textUi.showCommands();","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"HusseinSafwan02"},"content":"        case \"list\":","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"HusseinSafwan02"},"content":"            return textUi.showTaskList(tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"HusseinSafwan02"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"HusseinSafwan02"},"content":"            return handleTodo(tokens, tasks, textUi);","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"HusseinSafwan02"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"HusseinSafwan02"},"content":"            return handleDeadline(tokens, tasks, textUi);","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"HusseinSafwan02"},"content":"        case \"event\":","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"HusseinSafwan02"},"content":"            return handleEvent(tokens, tasks, textUi);","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"HusseinSafwan02"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"HusseinSafwan02"},"content":"            return handleUnmark(tokens, tasks, textUi);","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"HusseinSafwan02"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"HusseinSafwan02"},"content":"            return handleMark(tokens, tasks, textUi);","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"HusseinSafwan02"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"HusseinSafwan02"},"content":"            return handleDelete(tokens, tasks, textUi);","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"HusseinSafwan02"},"content":"        case \"find\":","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"HusseinSafwan02"},"content":"            return handleFind(tokens, tasks, textUi);","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"HusseinSafwan02"},"content":"        default:","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"HusseinSafwan02"},"content":"            try {","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"HusseinSafwan02"},"content":"                throw new ChillChiefException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"HusseinSafwan02"},"content":"            } catch (ChillChiefException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"HusseinSafwan02"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"HusseinSafwan02"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"HusseinSafwan02"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"HusseinSafwan02"},"content":"    private static String handleFind(String[] tokens, TaskList taskList, TextUi textUi) {","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"HusseinSafwan02"},"content":"        assert tokens !\u003d null : \"Tokens cannot be null\";","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"HusseinSafwan02"},"content":"        int count \u003d 1;","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"HusseinSafwan02"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"HusseinSafwan02"},"content":"        // extract the keyword to match with existing tasks\u0027 descriptions.","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"HusseinSafwan02"},"content":"        String keyword \u003d tokens[1].trim();","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"HusseinSafwan02"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getAllTasks();","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"HusseinSafwan02"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"HusseinSafwan02"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"HusseinSafwan02"},"content":"                result.append(\"  \").append(count).append(\".\").append(task).append(\"\\n\");","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"HusseinSafwan02"},"content":"                count++;","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"HusseinSafwan02"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"HusseinSafwan02"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"HusseinSafwan02"},"content":"        return textUi.showFindMessage(String.valueOf(result));","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":85,"author":{"gitId":"HusseinSafwan02"},"content":"    private static LocalDateTime parseDate(String dateString) throws ChillChiefException {","lastModifiedDate":"2024-02-24"},{"lineNumber":86,"author":{"gitId":"HusseinSafwan02"},"content":"        assert dateString !\u003d null \u0026\u0026 !dateString.isEmpty() : \"dateString should not be null or empty\";","lastModifiedDate":"2024-02-26"},{"lineNumber":87,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":88,"author":{"gitId":"HusseinSafwan02"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"HusseinSafwan02"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-19"},{"lineNumber":90,"author":{"gitId":"HusseinSafwan02"},"content":"            return LocalDateTime.parse(dateString, formatter);","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"HusseinSafwan02"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"HusseinSafwan02"},"content":"            throw new ChillChiefException(\"Error Parsing!\");","lastModifiedDate":"2024-02-24"},{"lineNumber":93,"author":{"gitId":"HusseinSafwan02"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"HusseinSafwan02"},"content":"    private static String handleTodo(String[] tokens, TaskList tasks, TextUi textUi) {","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"HusseinSafwan02"},"content":"        assert tokens !\u003d null : \"Tokens cannot be null\";","lastModifiedDate":"2024-02-26"},{"lineNumber":99,"author":{"gitId":"HusseinSafwan02"},"content":"        String description \u003d tokens[1].trim();","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"HusseinSafwan02"},"content":"        Todo todoTask \u003d new Todo(description, false);","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"HusseinSafwan02"},"content":"        tasks.addToTaskList(todoTask);","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"HusseinSafwan02"},"content":"        return textUi.showTaskAdded(todoTask, tasks.getTaskListLength());","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"HusseinSafwan02"},"content":"    private static String handleDeadline(String[] tokens, TaskList tasks, TextUi textUi) throws ChillChiefException {","lastModifiedDate":"2024-02-25"},{"lineNumber":106,"author":{"gitId":"HusseinSafwan02"},"content":"        assert tokens !\u003d null : \"Tokens cannot be null\";","lastModifiedDate":"2024-02-26"},{"lineNumber":107,"author":{"gitId":"HusseinSafwan02"},"content":"        String descriptionAndBy \u003d tokens[1].trim();","lastModifiedDate":"2024-02-19"},{"lineNumber":108,"author":{"gitId":"HusseinSafwan02"},"content":"        String deadlineDescription \u003d descriptionAndBy.split(\" /by \")[0].trim();","lastModifiedDate":"2024-02-19"},{"lineNumber":109,"author":{"gitId":"HusseinSafwan02"},"content":"        String when \u003d descriptionAndBy.split(\" /by \")[1].trim();","lastModifiedDate":"2024-02-19"},{"lineNumber":110,"author":{"gitId":"HusseinSafwan02"},"content":"        LocalDateTime by \u003d parseDate(when);","lastModifiedDate":"2024-02-19"},{"lineNumber":111,"author":{"gitId":"HusseinSafwan02"},"content":"        Deadline deadlineTask \u003d new Deadline(deadlineDescription, false, by);","lastModifiedDate":"2024-02-19"},{"lineNumber":112,"author":{"gitId":"HusseinSafwan02"},"content":"        tasks.addToTaskList(deadlineTask);","lastModifiedDate":"2024-02-19"},{"lineNumber":113,"author":{"gitId":"HusseinSafwan02"},"content":"        return textUi.showTaskAdded(deadlineTask, tasks.getTaskListLength());","lastModifiedDate":"2024-02-19"},{"lineNumber":114,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":115,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":116,"author":{"gitId":"HusseinSafwan02"},"content":"    private static String handleEvent(String[] tokens, TaskList tasks, TextUi textUi) throws ChillChiefException {","lastModifiedDate":"2024-02-25"},{"lineNumber":117,"author":{"gitId":"HusseinSafwan02"},"content":"        assert tokens !\u003d null : \"Tokens cannot be null\";","lastModifiedDate":"2024-02-26"},{"lineNumber":118,"author":{"gitId":"HusseinSafwan02"},"content":"        String descriptionAndStartAndEnd \u003d tokens[1].trim();","lastModifiedDate":"2024-02-19"},{"lineNumber":119,"author":{"gitId":"HusseinSafwan02"},"content":"        String[] parts \u003d descriptionAndStartAndEnd.split(\" /from | /to \");","lastModifiedDate":"2024-02-19"},{"lineNumber":120,"author":{"gitId":"HusseinSafwan02"},"content":"        String eventDescription \u003d parts[0].trim();","lastModifiedDate":"2024-02-19"},{"lineNumber":121,"author":{"gitId":"HusseinSafwan02"},"content":"        LocalDateTime start \u003d parseDate(parts[1].trim());","lastModifiedDate":"2024-02-19"},{"lineNumber":122,"author":{"gitId":"HusseinSafwan02"},"content":"        LocalDateTime end \u003d parseDate(parts[2].trim());","lastModifiedDate":"2024-02-19"},{"lineNumber":123,"author":{"gitId":"HusseinSafwan02"},"content":"        Event eventTask \u003d new Event(eventDescription, false, start, end);","lastModifiedDate":"2024-02-19"},{"lineNumber":124,"author":{"gitId":"HusseinSafwan02"},"content":"        tasks.addToTaskList(eventTask);","lastModifiedDate":"2024-02-19"},{"lineNumber":125,"author":{"gitId":"HusseinSafwan02"},"content":"        return textUi.showTaskAdded(eventTask, tasks.getTaskListLength());","lastModifiedDate":"2024-02-19"},{"lineNumber":126,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":127,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":128,"author":{"gitId":"HusseinSafwan02"},"content":"    private static String handleUnmark(String[] tokens, TaskList tasks, TextUi textUi) throws ChillChiefException {","lastModifiedDate":"2024-02-25"},{"lineNumber":129,"author":{"gitId":"HusseinSafwan02"},"content":"        assert tokens !\u003d null \u0026\u0026 tokens.length \u003e 2 : \"Invalid command format for unmark\";","lastModifiedDate":"2024-02-26"},{"lineNumber":130,"author":{"gitId":"HusseinSafwan02"},"content":"        int index \u003d Integer.parseInt(tokens[1]) - 1;","lastModifiedDate":"2024-02-19"},{"lineNumber":131,"author":{"gitId":"HusseinSafwan02"},"content":"        Task taskToUnMark \u003d tasks.getTask(index);","lastModifiedDate":"2024-02-19"},{"lineNumber":132,"author":{"gitId":"HusseinSafwan02"},"content":"        tasks.getTask(index).markNotDone();","lastModifiedDate":"2024-02-19"},{"lineNumber":133,"author":{"gitId":"HusseinSafwan02"},"content":"        return textUi.showMarkedOrUnmarkMessage(taskToUnMark);","lastModifiedDate":"2024-02-19"},{"lineNumber":134,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":135,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":136,"author":{"gitId":"HusseinSafwan02"},"content":"    private static String handleMark(String[] tokens, TaskList tasks, TextUi textUi) throws ChillChiefException {","lastModifiedDate":"2024-02-25"},{"lineNumber":137,"author":{"gitId":"HusseinSafwan02"},"content":"        assert tokens !\u003d null \u0026\u0026 tokens.length \u003e 2 : \"Invalid command format for mark\";","lastModifiedDate":"2024-02-26"},{"lineNumber":138,"author":{"gitId":"HusseinSafwan02"},"content":"        int index \u003d Integer.parseInt(tokens[1]) - 1;","lastModifiedDate":"2024-02-19"},{"lineNumber":139,"author":{"gitId":"HusseinSafwan02"},"content":"        Task taskToMark \u003d tasks.getTask(index);","lastModifiedDate":"2024-02-19"},{"lineNumber":140,"author":{"gitId":"HusseinSafwan02"},"content":"        taskToMark.markDone();","lastModifiedDate":"2024-02-19"},{"lineNumber":141,"author":{"gitId":"HusseinSafwan02"},"content":"        return textUi.showMarkedOrUnmarkMessage(taskToMark);","lastModifiedDate":"2024-02-19"},{"lineNumber":142,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":143,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":144,"author":{"gitId":"HusseinSafwan02"},"content":"    private static String handleDelete(String[] tokens, TaskList tasks, TextUi textUi) throws ChillChiefException {","lastModifiedDate":"2024-02-25"},{"lineNumber":145,"author":{"gitId":"HusseinSafwan02"},"content":"        assert tokens !\u003d null : \"Tokens cannot be null\";","lastModifiedDate":"2024-02-26"},{"lineNumber":146,"author":{"gitId":"HusseinSafwan02"},"content":"        int index \u003d Integer.parseInt(tokens[1]) - 1;","lastModifiedDate":"2024-02-19"},{"lineNumber":147,"author":{"gitId":"HusseinSafwan02"},"content":"        assert index \u003c tasks.getTaskListLength() : \"Index for task to delete is out of bounds\";","lastModifiedDate":"2024-02-26"},{"lineNumber":148,"author":{"gitId":"HusseinSafwan02"},"content":"        Task taskToDelete \u003d tasks.getTask(index);","lastModifiedDate":"2024-02-19"},{"lineNumber":149,"author":{"gitId":"HusseinSafwan02"},"content":"        tasks.deleteTask(index);","lastModifiedDate":"2024-02-19"},{"lineNumber":150,"author":{"gitId":"HusseinSafwan02"},"content":"        return textUi.showDeletedTask(taskToDelete, tasks.getTaskListLength());","lastModifiedDate":"2024-02-19"},{"lineNumber":151,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":152,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":153,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":154,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":155,"author":{"gitId":"HusseinSafwan02"},"content":"     * Parses line from a file with tasks saved in file format, line by line.","lastModifiedDate":"2024-02-24"},{"lineNumber":156,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":157,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param fileString The string representation of a task read from the file.","lastModifiedDate":"2024-02-24"},{"lineNumber":158,"author":{"gitId":"HusseinSafwan02"},"content":"     * @return The corresponding Task object from the input string.","lastModifiedDate":"2024-02-24"},{"lineNumber":159,"author":{"gitId":"HusseinSafwan02"},"content":"     * @throws ChillChiefException If tasks are formatted incorrectly in the file.","lastModifiedDate":"2024-02-24"},{"lineNumber":160,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":161,"author":{"gitId":"HusseinSafwan02"},"content":"    public static Task parseFileFormattedTask(String fileString) throws ChillChiefException {","lastModifiedDate":"2024-02-24"},{"lineNumber":162,"author":{"gitId":"HusseinSafwan02"},"content":"        String[] splitFileString \u003d fileString.split(\"\\\\|\");","lastModifiedDate":"2024-02-19"},{"lineNumber":163,"author":{"gitId":"HusseinSafwan02"},"content":"        // T|1|description","lastModifiedDate":"2024-02-19"},{"lineNumber":164,"author":{"gitId":"HusseinSafwan02"},"content":"        // D|1|description|yyyy-MM-dd_HH:mm","lastModifiedDate":"2024-02-19"},{"lineNumber":165,"author":{"gitId":"HusseinSafwan02"},"content":"        // E|1|description|yyyy-MM-dd_HH:mm_to_yyyy-MM-dd_HH:mm","lastModifiedDate":"2024-02-19"},{"lineNumber":166,"author":{"gitId":"HusseinSafwan02"},"content":"        String taskType \u003d splitFileString[0].trim(); // T D OR E","lastModifiedDate":"2024-02-19"},{"lineNumber":167,"author":{"gitId":"HusseinSafwan02"},"content":"        String taskDescription \u003d splitFileString[2].trim(); // description","lastModifiedDate":"2024-02-19"},{"lineNumber":168,"author":{"gitId":"HusseinSafwan02"},"content":"        String when \u003d null;","lastModifiedDate":"2024-02-19"},{"lineNumber":169,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":170,"author":{"gitId":"HusseinSafwan02"},"content":"        if (splitFileString.length \u003e 3) {","lastModifiedDate":"2024-02-19"},{"lineNumber":171,"author":{"gitId":"HusseinSafwan02"},"content":"            when \u003d splitFileString[3]; // yyyy-MM-dd_HH:mm or yyyy-MM-dd_HH:mm_to_yyyy-MM-dd_HH:mm","lastModifiedDate":"2024-02-19"},{"lineNumber":172,"author":{"gitId":"HusseinSafwan02"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":173,"author":{"gitId":"HusseinSafwan02"},"content":"        boolean isDone \u003d splitFileString[1].trim().equals(\"1\");","lastModifiedDate":"2024-02-19"},{"lineNumber":174,"author":{"gitId":"HusseinSafwan02"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-19"},{"lineNumber":175,"author":{"gitId":"HusseinSafwan02"},"content":"        switch(taskType) {","lastModifiedDate":"2024-02-19"},{"lineNumber":176,"author":{"gitId":"HusseinSafwan02"},"content":"        case \"T\":","lastModifiedDate":"2024-02-19"},{"lineNumber":177,"author":{"gitId":"HusseinSafwan02"},"content":"            return new Todo(taskDescription, isDone);","lastModifiedDate":"2024-02-19"},{"lineNumber":178,"author":{"gitId":"HusseinSafwan02"},"content":"        case \"D\":","lastModifiedDate":"2024-02-19"},{"lineNumber":179,"author":{"gitId":"HusseinSafwan02"},"content":"            assert when !\u003d null;","lastModifiedDate":"2024-02-19"},{"lineNumber":180,"author":{"gitId":"HusseinSafwan02"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(when, formatter);","lastModifiedDate":"2024-02-19"},{"lineNumber":181,"author":{"gitId":"HusseinSafwan02"},"content":"            return new Deadline(taskDescription, isDone, by);","lastModifiedDate":"2024-02-19"},{"lineNumber":182,"author":{"gitId":"HusseinSafwan02"},"content":"        case \"E\":","lastModifiedDate":"2024-02-19"},{"lineNumber":183,"author":{"gitId":"HusseinSafwan02"},"content":"            assert when !\u003d null;","lastModifiedDate":"2024-02-19"},{"lineNumber":184,"author":{"gitId":"HusseinSafwan02"},"content":"            String[] sections \u003d when.split(\"to\");","lastModifiedDate":"2024-02-19"},{"lineNumber":185,"author":{"gitId":"HusseinSafwan02"},"content":"            String start \u003d sections[0].trim(); // yyyy-MM-dd_HH:mm","lastModifiedDate":"2024-02-19"},{"lineNumber":186,"author":{"gitId":"HusseinSafwan02"},"content":"            String end \u003d sections[1].trim(); //yyyy-MM-dd_HH:mm","lastModifiedDate":"2024-02-19"},{"lineNumber":187,"author":{"gitId":"HusseinSafwan02"},"content":"            LocalDateTime startTime \u003d LocalDateTime.parse(start, formatter);","lastModifiedDate":"2024-02-19"},{"lineNumber":188,"author":{"gitId":"HusseinSafwan02"},"content":"            LocalDateTime endTime \u003d LocalDateTime.parse(end, formatter);","lastModifiedDate":"2024-02-19"},{"lineNumber":189,"author":{"gitId":"HusseinSafwan02"},"content":"            return new Event(taskDescription, isDone, startTime, endTime);","lastModifiedDate":"2024-02-19"},{"lineNumber":190,"author":{"gitId":"HusseinSafwan02"},"content":"        default:","lastModifiedDate":"2024-02-19"},{"lineNumber":191,"author":{"gitId":"HusseinSafwan02"},"content":"            throw new ChillChiefException(\"Error parsing saved tasks!!\");","lastModifiedDate":"2024-02-24"},{"lineNumber":192,"author":{"gitId":"HusseinSafwan02"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":193,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":194,"author":{"gitId":"HusseinSafwan02"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"HusseinSafwan02":194}},{"path":"src/main/java/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HusseinSafwan02"},"content":"package util;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"HusseinSafwan02"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"HusseinSafwan02"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"HusseinSafwan02"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"HusseinSafwan02"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"HusseinSafwan02"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"HusseinSafwan02"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"HusseinSafwan02"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"HusseinSafwan02"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"HusseinSafwan02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"HusseinSafwan02"},"content":"import exceptions.ChillChiefException;","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"HusseinSafwan02"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"HusseinSafwan02"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"HusseinSafwan02"},"content":" * Responsible for saving and loading tasks to and from a file.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"HusseinSafwan02"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"HusseinSafwan02"},"content":"public class Storage {","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"HusseinSafwan02"},"content":"    private String filePath;","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"HusseinSafwan02"},"content":"     * Constructs a new Storage object.","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param filepath The file path to the file where the loading and saving is done.","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"HusseinSafwan02"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"HusseinSafwan02"},"content":"        this.filePath \u003d filepath;","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"HusseinSafwan02"},"content":"     * Loads the tasks from the file.","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"HusseinSafwan02"},"content":"     * @return An Arraylist of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"HusseinSafwan02"},"content":"     * @throws IOException If parsing file contents results in an error.","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"HusseinSafwan02"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"HusseinSafwan02"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"HusseinSafwan02"},"content":"        if (Files.exists(Paths.get(filePath))) {","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"HusseinSafwan02"},"content":"            try (BufferedReader reader \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"HusseinSafwan02"},"content":"                String line;","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"HusseinSafwan02"},"content":"                while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"HusseinSafwan02"},"content":"                    try {","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"HusseinSafwan02"},"content":"                        Task task \u003d Parser.parseFileFormattedTask(line);","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"HusseinSafwan02"},"content":"                        tasks.add(task);","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"HusseinSafwan02"},"content":"                    } catch (ChillChiefException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"HusseinSafwan02"},"content":"                        // Handle parse exceptions, e.g., log them or throw a custom exception","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"HusseinSafwan02"},"content":"                        System.err.println(\"Error parsing task from file: \" + e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"HusseinSafwan02"},"content":"                    }","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"HusseinSafwan02"},"content":"                }","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"HusseinSafwan02"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"HusseinSafwan02"},"content":"        } else {","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"HusseinSafwan02"},"content":"            System.out.println(\"No saved tasks found.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"HusseinSafwan02"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"HusseinSafwan02"},"content":"        return tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"HusseinSafwan02"},"content":"     * Saves the tasks to the file.","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param tasks The tasks that are to be saved.","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"HusseinSafwan02"},"content":"     * @throws ChillChiefException If there is an error saving tasks to the file.","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"HusseinSafwan02"},"content":"     * @throws IOException If there is an error saving tasks to the file.","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"HusseinSafwan02"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws ChillChiefException, IOException {","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"HusseinSafwan02"},"content":"        Path path \u003d Paths.get(this.filePath);","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"HusseinSafwan02"},"content":"        // Ensure the parent directories exist","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"HusseinSafwan02"},"content":"        if (path.getParent() !\u003d null) {","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"HusseinSafwan02"},"content":"            Files.createDirectories(path.getParent());","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"HusseinSafwan02"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"HusseinSafwan02"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.filePath, false))) {","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"HusseinSafwan02"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"HusseinSafwan02"},"content":"                writer.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"HusseinSafwan02"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"HusseinSafwan02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"HusseinSafwan02"},"content":"            throw new ChillChiefException(\"Error saving tasks to file!: \" + e.getMessage());","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"HusseinSafwan02"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":83,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":84,"author":{"gitId":"HusseinSafwan02"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"HusseinSafwan02":84}},{"path":"src/main/java/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HusseinSafwan02"},"content":"package util;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"HusseinSafwan02"},"content":"import exceptions.ChillChiefException;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"HusseinSafwan02"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"HusseinSafwan02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"HusseinSafwan02"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"HusseinSafwan02"},"content":" * Represents a list of tasks in the ChillChief application.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"HusseinSafwan02"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"HusseinSafwan02"},"content":"public class TaskList {","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"HusseinSafwan02"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"HusseinSafwan02"},"content":"     * Constructs an empty TaskList object.","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"HusseinSafwan02"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"HusseinSafwan02"},"content":"        tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"HusseinSafwan02"},"content":"     * Constructs a TaskList object with specified tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param taskList The list of tasks to add to initialize the TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"HusseinSafwan02"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"HusseinSafwan02"},"content":"        this.tasks \u003d taskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"HusseinSafwan02"},"content":"     * Adds a specific task to the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param task The task to add to the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"HusseinSafwan02"},"content":"    public void addToTaskList(Task task) {","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"HusseinSafwan02"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"HusseinSafwan02"},"content":"     * Deletes a specific task from the task list given its index.","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param index The index of the task to remove.","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"HusseinSafwan02"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"HusseinSafwan02"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"HusseinSafwan02"},"content":"     * Gets a particular task from the task list given its index.","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param index The index of the task to get.","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"HusseinSafwan02"},"content":"     * @return The particular task at the given index.","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"HusseinSafwan02"},"content":"     * @throws ChillChiefException If the given index is out fo bounds.","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"HusseinSafwan02"},"content":"    public Task getTask(int index) throws ChillChiefException {","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"HusseinSafwan02"},"content":"        if (index \u003e this.tasks.size() - 1) {","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"HusseinSafwan02"},"content":"            throw new ChillChiefException(\"Your index is out of bounds!\");","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"HusseinSafwan02"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"HusseinSafwan02"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"HusseinSafwan02"},"content":"     * Gets all the tasks in the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"HusseinSafwan02"},"content":"     * @return The list of tasks in the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"HusseinSafwan02"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"HusseinSafwan02"},"content":"        return this.tasks;","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"HusseinSafwan02"},"content":"     * Gets the current number of tasks in the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"HusseinSafwan02"},"content":"     * @return The number of tasks currently in the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"HusseinSafwan02"},"content":"    public int getTaskListLength() {","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"HusseinSafwan02"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"HusseinSafwan02"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"HusseinSafwan02":79}},{"path":"src/main/java/util/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HusseinSafwan02"},"content":"package util;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"HusseinSafwan02"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"HusseinSafwan02"},"content":"import exceptions.ChillChiefException;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"HusseinSafwan02"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"HusseinSafwan02"},"content":" * A TextUi class to represent the user interface for the ChillChief application.","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"HusseinSafwan02"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"HusseinSafwan02"},"content":"public class TextUi {","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"HusseinSafwan02"},"content":"    private static final String DIVIDER_DOUBLE \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\r\\n\";","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"HusseinSafwan02"},"content":"    private static final String DIVIDER_SINGLE \u003d \"____________________________________________________________\\r\\n\";","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"HusseinSafwan02"},"content":"    private static final String CHILLCHIEF \u003d \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"HusseinSafwan02"},"content":"    private static final String GREETING \u003d \"    G\u0027day mate! ChillChief here\\n\" + \"    What can I do for ya?\\n\";","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"HusseinSafwan02"},"content":"    private static final String BYE \u003d \" Aye mate, hit me up if u need anything more yea\\n\";","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"HusseinSafwan02"},"content":"    private static final String ERROR_MESSAGE \u003d \"OOOPS! Something went WRONGG!\";","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"HusseinSafwan02"},"content":"    private static final String HELP_MESSAGE \u003d \"If confused, type \u0027help\u0027 for a list of commands you can use!\\n\";","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"HusseinSafwan02"},"content":"    private static final String FIND_MESSAGE \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"HusseinSafwan02"},"content":"    private static final String COMMANDS \u003d \"Here is a list of commands you can use:\\n\"","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"HusseinSafwan02"},"content":"            + \"\\n\"","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"HusseinSafwan02"},"content":"            + \" \u0027list\u0027 to list all the tasks you have.\\n\"","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"HusseinSafwan02"},"content":"            + \" \u0027mark/unmark\u0027 [task number] to mark or unmark a particular task,\\n\"","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"HusseinSafwan02"},"content":"            + \" \u0027delete\u0027 [task number] to delete a particular task.\\n\"","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"HusseinSafwan02"},"content":"            + \" \u0027todo\u0027 [task name] to create a todo task.\\n\"","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"HusseinSafwan02"},"content":"            + \" \u0027deadline\u0027 [task name] /by yyyy-mm-dd HHmm to create a deadline task.\\n\"","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"HusseinSafwan02"},"content":"            + \" \u0027event\u0027 [task name] /from yyyy-mm-dd HHmm /to yyyy-mm-dd HHmm to create a deadline task.\\n\"","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"HusseinSafwan02"},"content":"            + \" \u0027bye\u0027 to exit.\\n\";","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"HusseinSafwan02"},"content":"     * Generates a find message for the user.","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param tasksFound The tasks found with matching descriptions.","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"HusseinSafwan02"},"content":"     * @return The find message with tasks with matching descriptions.","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"HusseinSafwan02"},"content":"    public String showFindMessage(String tasksFound) {","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"HusseinSafwan02"},"content":"        return DIVIDER_SINGLE + FIND_MESSAGE + tasksFound + DIVIDER_SINGLE;","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"HusseinSafwan02"},"content":"     * Generates an error message for the user.","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param message The specific error to display.","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"HusseinSafwan02"},"content":"     * @return The error message with the specific error.","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"HusseinSafwan02"},"content":"    public String showErrorMessage(String message) {","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"HusseinSafwan02"},"content":"        return ERROR_MESSAGE + message;","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"HusseinSafwan02"},"content":"     * Generates a message indicating successful addition of a task.","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param task The task being added to the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param n    Number of tasks in the list.","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"HusseinSafwan02"},"content":"     * @return The message indicating successful addition of a task.","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"HusseinSafwan02"},"content":"    public String showTaskAdded(Task task, int n) {","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"HusseinSafwan02"},"content":"        if (n \u003d\u003d 1) {","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"HusseinSafwan02"},"content":"            return DIVIDER_DOUBLE +","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"HusseinSafwan02"},"content":"                    \" Got it, I have added this task:\\n\"","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"HusseinSafwan02"},"content":"                    + \"    \"","lastModifiedDate":"2024-02-25"},{"lineNumber":61,"author":{"gitId":"HusseinSafwan02"},"content":"                    + task","lastModifiedDate":"2024-02-25"},{"lineNumber":62,"author":{"gitId":"HusseinSafwan02"},"content":"                    + \"\\n\"","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"HusseinSafwan02"},"content":"                    + \" Now you have \" + n","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"HusseinSafwan02"},"content":"                    + \" task in the list.\\n\"","lastModifiedDate":"2024-02-25"},{"lineNumber":65,"author":{"gitId":"HusseinSafwan02"},"content":"                    + DIVIDER_DOUBLE;","lastModifiedDate":"2024-02-25"},{"lineNumber":66,"author":{"gitId":"HusseinSafwan02"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"HusseinSafwan02"},"content":"        return DIVIDER_DOUBLE +","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"HusseinSafwan02"},"content":"                \" Got it, I have added this task:\\n\"","lastModifiedDate":"2024-02-25"},{"lineNumber":69,"author":{"gitId":"HusseinSafwan02"},"content":"                + \"    \"","lastModifiedDate":"2024-02-25"},{"lineNumber":70,"author":{"gitId":"HusseinSafwan02"},"content":"                + task","lastModifiedDate":"2024-02-25"},{"lineNumber":71,"author":{"gitId":"HusseinSafwan02"},"content":"                + \"\\n\"","lastModifiedDate":"2024-02-25"},{"lineNumber":72,"author":{"gitId":"HusseinSafwan02"},"content":"                + \" Now you have \"","lastModifiedDate":"2024-02-25"},{"lineNumber":73,"author":{"gitId":"HusseinSafwan02"},"content":"                + n","lastModifiedDate":"2024-02-25"},{"lineNumber":74,"author":{"gitId":"HusseinSafwan02"},"content":"                + \" tasks in the list.\\n\"","lastModifiedDate":"2024-02-25"},{"lineNumber":75,"author":{"gitId":"HusseinSafwan02"},"content":"                + DIVIDER_DOUBLE;","lastModifiedDate":"2024-02-25"},{"lineNumber":76,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"HusseinSafwan02"},"content":"     * Generates a message to show the current tasks in the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param taskList The task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"HusseinSafwan02"},"content":"     * @return The message showing current tasks in the list.","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"HusseinSafwan02"},"content":"     * @throws ChillChiefException If tasks could not be retrieved.","lastModifiedDate":"2024-02-24"},{"lineNumber":85,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":86,"author":{"gitId":"HusseinSafwan02"},"content":"    public String showTaskList(TaskList taskList) throws ChillChiefException {","lastModifiedDate":"2024-02-24"},{"lineNumber":87,"author":{"gitId":"HusseinSafwan02"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":88,"author":{"gitId":"HusseinSafwan02"},"content":"            String taskMessage \u003d \" Here are the tasks in your list:\\n\";","lastModifiedDate":"2024-02-15"},{"lineNumber":89,"author":{"gitId":"HusseinSafwan02"},"content":"            String message \u003d DIVIDER_DOUBLE + taskMessage;","lastModifiedDate":"2024-02-15"},{"lineNumber":90,"author":{"gitId":"HusseinSafwan02"},"content":"            String result \u003d \"\";","lastModifiedDate":"2024-02-17"},{"lineNumber":91,"author":{"gitId":"HusseinSafwan02"},"content":"            for (int i \u003d 0; i \u003c taskList.getTaskListLength(); i++ ) {","lastModifiedDate":"2024-02-17"},{"lineNumber":92,"author":{"gitId":"HusseinSafwan02"},"content":"                int number \u003d i + 1;","lastModifiedDate":"2024-02-15"},{"lineNumber":93,"author":{"gitId":"HusseinSafwan02"},"content":"                result +\u003d \"   \" + number + \". \" + taskList.getTask(i) + \"\\n\";","lastModifiedDate":"2024-02-17"},{"lineNumber":94,"author":{"gitId":"HusseinSafwan02"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":95,"author":{"gitId":"HusseinSafwan02"},"content":"            return message + result + DIVIDER_DOUBLE;","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"HusseinSafwan02"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":97,"author":{"gitId":"HusseinSafwan02"},"content":"            throw new ChillChiefException(\"Tasks could not be retrieved!\");","lastModifiedDate":"2024-02-24"},{"lineNumber":98,"author":{"gitId":"HusseinSafwan02"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":99,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":100,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":101,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":102,"author":{"gitId":"HusseinSafwan02"},"content":"     * Generates a message to show a task has been marked/unmarked.","lastModifiedDate":"2024-02-24"},{"lineNumber":103,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":104,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param task the particular task being marked/unmarked.","lastModifiedDate":"2024-02-24"},{"lineNumber":105,"author":{"gitId":"HusseinSafwan02"},"content":"     * @return A message to show a task has been marked/unmarked.","lastModifiedDate":"2024-02-24"},{"lineNumber":106,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":107,"author":{"gitId":"HusseinSafwan02"},"content":"    public String showMarkedOrUnmarkMessage(Task task) {","lastModifiedDate":"2024-02-17"},{"lineNumber":108,"author":{"gitId":"HusseinSafwan02"},"content":"        String message;","lastModifiedDate":"2024-02-15"},{"lineNumber":109,"author":{"gitId":"HusseinSafwan02"},"content":"        if (task.getDone()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":110,"author":{"gitId":"HusseinSafwan02"},"content":"            message \u003d DIVIDER_SINGLE","lastModifiedDate":"2024-02-15"},{"lineNumber":111,"author":{"gitId":"HusseinSafwan02"},"content":"                    + \" Nice! I have marked this task as done:\\n\" + \"   \" + task + \"\\n\"","lastModifiedDate":"2024-02-15"},{"lineNumber":112,"author":{"gitId":"HusseinSafwan02"},"content":"                    + DIVIDER_SINGLE;","lastModifiedDate":"2024-02-15"},{"lineNumber":113,"author":{"gitId":"HusseinSafwan02"},"content":"        } else {","lastModifiedDate":"2024-02-15"},{"lineNumber":114,"author":{"gitId":"HusseinSafwan02"},"content":"            message \u003d DIVIDER_SINGLE","lastModifiedDate":"2024-02-15"},{"lineNumber":115,"author":{"gitId":"HusseinSafwan02"},"content":"                    + \" OK, I have marked this task as not done yet:\\n\" + \"   \" + task + \"\\n\"","lastModifiedDate":"2024-02-15"},{"lineNumber":116,"author":{"gitId":"HusseinSafwan02"},"content":"                    + DIVIDER_SINGLE;","lastModifiedDate":"2024-02-15"},{"lineNumber":117,"author":{"gitId":"HusseinSafwan02"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":118,"author":{"gitId":"HusseinSafwan02"},"content":"        return message;","lastModifiedDate":"2024-02-15"},{"lineNumber":119,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":120,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":121,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":122,"author":{"gitId":"HusseinSafwan02"},"content":"     * Generates a welcome message for the user.","lastModifiedDate":"2024-02-24"},{"lineNumber":123,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":124,"author":{"gitId":"HusseinSafwan02"},"content":"     * @return A welcome message for the user.","lastModifiedDate":"2024-02-24"},{"lineNumber":125,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":126,"author":{"gitId":"HusseinSafwan02"},"content":"    public String showIntroMessage() {","lastModifiedDate":"2024-02-17"},{"lineNumber":127,"author":{"gitId":"HusseinSafwan02"},"content":"        return DIVIDER_DOUBLE + CHILLCHIEF + GREETING + HELP_MESSAGE + DIVIDER_DOUBLE;","lastModifiedDate":"2024-02-21"},{"lineNumber":128,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":129,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":130,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":131,"author":{"gitId":"HusseinSafwan02"},"content":"     * Generates a message with a list of commands with their syntax\u0027s for the user.","lastModifiedDate":"2024-02-24"},{"lineNumber":132,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":133,"author":{"gitId":"HusseinSafwan02"},"content":"     * @return A message with a list of commands with their syntax\u0027s for the user.","lastModifiedDate":"2024-02-24"},{"lineNumber":134,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":135,"author":{"gitId":"HusseinSafwan02"},"content":"    public String showCommands() {","lastModifiedDate":"2024-02-21"},{"lineNumber":136,"author":{"gitId":"HusseinSafwan02"},"content":"        return COMMANDS;","lastModifiedDate":"2024-02-21"},{"lineNumber":137,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":138,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":139,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":140,"author":{"gitId":"HusseinSafwan02"},"content":"     * Generates a farewell message for the user.","lastModifiedDate":"2024-02-24"},{"lineNumber":141,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":142,"author":{"gitId":"HusseinSafwan02"},"content":"     * @return A farewell message for the user.","lastModifiedDate":"2024-02-24"},{"lineNumber":143,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":144,"author":{"gitId":"HusseinSafwan02"},"content":"    public String showOutroMessage() {","lastModifiedDate":"2024-02-17"},{"lineNumber":145,"author":{"gitId":"HusseinSafwan02"},"content":"        return DIVIDER_DOUBLE + BYE + DIVIDER_DOUBLE;","lastModifiedDate":"2024-02-15"},{"lineNumber":146,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":147,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":148,"author":{"gitId":"HusseinSafwan02"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":149,"author":{"gitId":"HusseinSafwan02"},"content":"     * Generates a message to show that a task has been removed from the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":150,"author":{"gitId":"HusseinSafwan02"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":151,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param task The particular task that has been deleted.","lastModifiedDate":"2024-02-24"},{"lineNumber":152,"author":{"gitId":"HusseinSafwan02"},"content":"     * @param count The number of tasks remaining in the list.","lastModifiedDate":"2024-02-24"},{"lineNumber":153,"author":{"gitId":"HusseinSafwan02"},"content":"     * @return A message to show that a task has been removed from the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":154,"author":{"gitId":"HusseinSafwan02"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":155,"author":{"gitId":"HusseinSafwan02"},"content":"    public String showDeletedTask(Task task, int count) {","lastModifiedDate":"2024-02-17"},{"lineNumber":156,"author":{"gitId":"HusseinSafwan02"},"content":"        return DIVIDER_DOUBLE +","lastModifiedDate":"2024-02-24"},{"lineNumber":157,"author":{"gitId":"HusseinSafwan02"},"content":"                \" Noted. I have removed this task:\\n\" + \"   \" + task + \"\\n\" + \"Now you have \" +","lastModifiedDate":"2024-02-15"},{"lineNumber":158,"author":{"gitId":"HusseinSafwan02"},"content":"                count + \" tasks in the list.\\n\" +","lastModifiedDate":"2024-02-15"},{"lineNumber":159,"author":{"gitId":"HusseinSafwan02"},"content":"                DIVIDER_DOUBLE;","lastModifiedDate":"2024-02-15"},{"lineNumber":160,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":161,"author":{"gitId":"HusseinSafwan02"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"HusseinSafwan02":161}},{"path":"src/test/java/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HusseinSafwan02"},"content":"package tasks;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"HusseinSafwan02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"HusseinSafwan02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"HusseinSafwan02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"HusseinSafwan02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"HusseinSafwan02"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"HusseinSafwan02"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"HusseinSafwan02"},"content":"    public void testToStringConversion() {","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"HusseinSafwan02"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"HusseinSafwan02"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(\"2024-02-19 1800\", formatter);","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"HusseinSafwan02"},"content":"        assertEquals(\"[D][ ] eat (by: Feb 19 2024 | 1800)\", new Deadline(\"eat\", false, by).toString());","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"HusseinSafwan02"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"HusseinSafwan02"},"content":"    public void testToFileStringConversion() {","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"HusseinSafwan02"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"HusseinSafwan02"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(\"2024-02-19 1800\", formatter);","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"HusseinSafwan02"},"content":"        assertEquals(\"D| 0|eat|2024-02-19 18:00\", new Deadline(\"eat\", false, by).toFileString());","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"HusseinSafwan02"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"HusseinSafwan02":23}},{"path":"src/test/java/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HusseinSafwan02"},"content":"package tasks;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"HusseinSafwan02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"HusseinSafwan02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"HusseinSafwan02"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"HusseinSafwan02"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"HusseinSafwan02"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"HusseinSafwan02"},"content":"    public void testToStringConversion() {","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"HusseinSafwan02"},"content":"        assertEquals(\"[T][ ] eat\", new Todo(\"eat\", false).toString());","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"HusseinSafwan02"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"HusseinSafwan02"},"content":"    public void testToFileStringConversion() {","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"HusseinSafwan02"},"content":"        assertEquals(\"T|0|eat\", new Todo(\"eat\", false).toFileString());","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"HusseinSafwan02"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"HusseinSafwan02":18}},{"path":"src/test/java/util/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HusseinSafwan02"},"content":"package util;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"HusseinSafwan02"},"content":"import exceptions.ChillChiefException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"HusseinSafwan02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"HusseinSafwan02"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"HusseinSafwan02"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"HusseinSafwan02"},"content":"import tasks.Todo;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"HusseinSafwan02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"HusseinSafwan02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"HusseinSafwan02"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"HusseinSafwan02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"HusseinSafwan02"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"HusseinSafwan02"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"HusseinSafwan02"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"HusseinSafwan02"},"content":"    public void getAllTasks_arrayListOfTasks() {","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"HusseinSafwan02"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"HusseinSafwan02"},"content":"        Todo todoTask \u003d new Todo(\"eat\", false);","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"HusseinSafwan02"},"content":"        LocalDateTime by \u003d LocalDateTime.of(2024, 6, 1, 16, 30);","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"HusseinSafwan02"},"content":"        Deadline deadlineTask \u003d new Deadline(\"test\", false, by);","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"HusseinSafwan02"},"content":"        Collections.addAll(tasks,todoTask, deadlineTask);","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"HusseinSafwan02"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"HusseinSafwan02"},"content":"        assertEquals(tasks, taskList.getAllTasks());","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"HusseinSafwan02"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"HusseinSafwan02"},"content":"    public void getTask_taskObject_success() throws ChillChiefException {","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"HusseinSafwan02"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"HusseinSafwan02"},"content":"        Todo todoTask \u003d new Todo(\"eat\", false);","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"HusseinSafwan02"},"content":"        LocalDateTime by \u003d LocalDateTime.of(2024, 6, 1, 16, 30);","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"HusseinSafwan02"},"content":"        Deadline deadlineTask \u003d new Deadline(\"test\", false, by);","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"HusseinSafwan02"},"content":"        Collections.addAll(tasks,todoTask, deadlineTask);","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"HusseinSafwan02"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"HusseinSafwan02"},"content":"        assertEquals(todoTask, taskList.getTask(0));","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"HusseinSafwan02"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"HusseinSafwan02"},"content":"    public void getTask_taskObject_exceptionThrown() {","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"HusseinSafwan02"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"HusseinSafwan02"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"HusseinSafwan02"},"content":"            Todo todoTask \u003d new Todo(\"eat\", false);","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"HusseinSafwan02"},"content":"            LocalDateTime by \u003d LocalDateTime.of(2024, 6, 1, 16, 30);","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"HusseinSafwan02"},"content":"            Deadline deadlineTask \u003d new Deadline(\"test\", false, by);","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"HusseinSafwan02"},"content":"            Collections.addAll(tasks,todoTask, deadlineTask);","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"HusseinSafwan02"},"content":"            TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"HusseinSafwan02"},"content":"            assertEquals(todoTask, taskList.getTask(3));","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"HusseinSafwan02"},"content":"            fail();","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"HusseinSafwan02"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"HusseinSafwan02"},"content":"            assertEquals(\"Your index is out of bounds!\", e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"HusseinSafwan02"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"HusseinSafwan02"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"HusseinSafwan02"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"HusseinSafwan02":54}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HusseinSafwan02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"HusseinSafwan02"},"content":"todo borrow book","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"HusseinSafwan02"},"content":"list","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"HusseinSafwan02"},"content":"deadline return book /by 2024-02-19 1800","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"HusseinSafwan02"},"content":"event meeting /from 2024-02-19 1800 /to 2024-02-19 1900","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"HusseinSafwan02"},"content":"mark 1","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"HusseinSafwan02"},"content":"unmark 1","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"HusseinSafwan02"},"content":"list","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"HusseinSafwan02"},"content":"bye","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"HusseinSafwan02":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"HusseinSafwan02"},"content":"java -classpath ..\\bin chillchief.ChillChief \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"HusseinSafwan02":1,"-":20}}]
