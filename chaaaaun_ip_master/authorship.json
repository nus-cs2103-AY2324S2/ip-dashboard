[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"checkstyle {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"properties {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"    mainClassName \u003d \u0027chatbot.Launcher\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"    // JavaFX","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"    // JUnit","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"    mainClass.set(\"chatbot.Launcher\")","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"    archiveBaseName \u003d \"plana\"","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chaaaaun":28,"-":40}},{"path":"src/main/java/chatbot/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package chatbot;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import chatbot.exceptions.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import chatbot.exceptions.InvalidArgumentException;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":" * Represents an enum of the valid user commands.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"public enum Command {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"    EXIT(\"bye\"),","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"    LIST(\"list\"),","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"    FIND(\"find\");","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"    private final String rep;","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"    private String args \u003d \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"    private final boolean isBreaking;","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"     * Constructor that initialises a user command.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"     * @param cmd The string input representing the command.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"    Command(String cmd) {","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"        this.rep \u003d cmd.toLowerCase();","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"        this.isBreaking \u003d this.rep.equals(\"bye\");","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"     * Populates the command with arguments provided.","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"     * @param args The arguments.","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"    public void withArgs(String args) {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"        this.args \u003d args;","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"        return this.rep + this.args;","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"     * Executes the command for the provided task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"     * @param tl The task list object to operate on.","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"     * @return The messages to display.","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"    public Response execute(TaskList tl) {","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"        Response r \u003d null;","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"            switch (this) {","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"            case EXIT:","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"                r \u003d Response.displayParting();","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"                break;","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"            case LIST:","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"                r \u003d Response.displayList(tl);","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"chaaaaun"},"content":"            case TODO:","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"            case DEADLINE:","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"chaaaaun"},"content":"            case EVENT:","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"chaaaaun"},"content":"                r \u003d executeAdd(tl);","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"chaaaaun"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"            case MARK:","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"chaaaaun"},"content":"            case UNMARK:","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"            case DELETE:","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"chaaaaun"},"content":"                r \u003d executeIndexing(tl);","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"chaaaaun"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"chaaaaun"},"content":"            case FIND:","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"chaaaaun"},"content":"                r \u003d executeFind(tl);","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"chaaaaun"},"content":"                break;","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"chaaaaun"},"content":"            default:","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"chaaaaun"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"chaaaaun"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"chaaaaun"},"content":"            r \u003d Response.displayError(e);","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"chaaaaun"},"content":"        return r;","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"chaaaaun"},"content":"     * Executes a command with arguments for the provided task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"chaaaaun"},"content":"     * @param tl The task list object to operate on.","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"chaaaaun"},"content":"     * @throws DukeException If an error occurs with the execution.","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"chaaaaun"},"content":"    private Response executeAdd(TaskList tl) throws DukeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":96,"author":{"gitId":"chaaaaun"},"content":"        Task t \u003d null;","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"chaaaaun"},"content":"        Pattern pattern;","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"chaaaaun"},"content":"        Matcher matcher;","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"chaaaaun"},"content":"        switch (this) {","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"chaaaaun"},"content":"        case TODO:","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"chaaaaun"},"content":"            t \u003d new TodoTask(args.strip());","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"chaaaaun"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"chaaaaun"},"content":"        case DEADLINE:","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"chaaaaun"},"content":"            pattern \u003d Pattern.compile(\"(.+?)\\\\s+/by\\\\s+(.+)\");","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"chaaaaun"},"content":"            matcher \u003d pattern.matcher(args);","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"chaaaaun"},"content":"            if (!matcher.find()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"chaaaaun"},"content":"                throw new InvalidArgumentException();","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"chaaaaun"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":110,"author":{"gitId":"chaaaaun"},"content":"            t \u003d new DeadlineTask(matcher.group(1).strip(), matcher.group(2).strip());","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"chaaaaun"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"chaaaaun"},"content":"        case EVENT:","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"chaaaaun"},"content":"            pattern \u003d Pattern.compile(\"(.+?)\\\\s+/from\\\\s+(.+?)\\\\s+/to\\\\s+(.+)\");","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"chaaaaun"},"content":"            matcher \u003d pattern.matcher(args);","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"chaaaaun"},"content":"            if (!matcher.find()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"chaaaaun"},"content":"                throw new InvalidArgumentException();","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"chaaaaun"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"chaaaaun"},"content":"            t \u003d new EventTask(matcher.group(1).strip(), matcher.group(2).strip(), matcher.group(3).strip());","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"chaaaaun"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"chaaaaun"},"content":"        default:","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"chaaaaun"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"chaaaaun"},"content":"        tl.addTask(t);","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"chaaaaun"},"content":"        return Response.displayAdd(tl, t);","lastModifiedDate":"2024-02-10"},{"lineNumber":126,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"chaaaaun"},"content":"     * Executes a command with only index for the provided task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"chaaaaun"},"content":"     * @param tl The task list object to operate on.","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"chaaaaun"},"content":"     * @throws DukeException If an error occurs with the execution.","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"chaaaaun"},"content":"    private Response executeIndexing(TaskList tl) throws DukeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":135,"author":{"gitId":"chaaaaun"},"content":"        int i;","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"chaaaaun"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":137,"author":{"gitId":"chaaaaun"},"content":"            i \u003d Integer.parseInt(args);","lastModifiedDate":"2024-01-30"},{"lineNumber":138,"author":{"gitId":"chaaaaun"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"chaaaaun"},"content":"            throw new InvalidArgumentException();","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":142,"author":{"gitId":"chaaaaun"},"content":"        if (i \u003c 1 || i \u003e tl.getSize()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":143,"author":{"gitId":"chaaaaun"},"content":"            throw new InvalidArgumentException();","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":146,"author":{"gitId":"chaaaaun"},"content":"        Response r \u003d Response.displayError(new InvalidArgumentException());","lastModifiedDate":"2024-02-10"},{"lineNumber":147,"author":{"gitId":"chaaaaun"},"content":"        switch (this) {","lastModifiedDate":"2024-01-30"},{"lineNumber":148,"author":{"gitId":"chaaaaun"},"content":"        case MARK:","lastModifiedDate":"2024-01-30"},{"lineNumber":149,"author":{"gitId":"chaaaaun"},"content":"            tl.markTask(i - 1);","lastModifiedDate":"2024-01-30"},{"lineNumber":150,"author":{"gitId":"chaaaaun"},"content":"            r \u003d Response.displayMark(i);","lastModifiedDate":"2024-02-10"},{"lineNumber":151,"author":{"gitId":"chaaaaun"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":152,"author":{"gitId":"chaaaaun"},"content":"        case UNMARK:","lastModifiedDate":"2024-01-30"},{"lineNumber":153,"author":{"gitId":"chaaaaun"},"content":"            tl.unmarkTask(i - 1);","lastModifiedDate":"2024-01-30"},{"lineNumber":154,"author":{"gitId":"chaaaaun"},"content":"            r \u003d Response.displayUnmark(i);","lastModifiedDate":"2024-02-10"},{"lineNumber":155,"author":{"gitId":"chaaaaun"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":156,"author":{"gitId":"chaaaaun"},"content":"        case DELETE:","lastModifiedDate":"2024-01-30"},{"lineNumber":157,"author":{"gitId":"chaaaaun"},"content":"            Task removed \u003d tl.removeTask(i - 1);","lastModifiedDate":"2024-01-30"},{"lineNumber":158,"author":{"gitId":"chaaaaun"},"content":"            r \u003d Response.displayDelete(tl, removed);","lastModifiedDate":"2024-02-10"},{"lineNumber":159,"author":{"gitId":"chaaaaun"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":160,"author":{"gitId":"chaaaaun"},"content":"        default:","lastModifiedDate":"2024-02-03"},{"lineNumber":161,"author":{"gitId":"chaaaaun"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":162,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":163,"author":{"gitId":"chaaaaun"},"content":"        return r;","lastModifiedDate":"2024-02-10"},{"lineNumber":164,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":165,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":166,"author":{"gitId":"chaaaaun"},"content":"    private Response executeFind(TaskList tl) {","lastModifiedDate":"2024-02-10"},{"lineNumber":167,"author":{"gitId":"chaaaaun"},"content":"        ArrayList\u003cTask\u003e res \u003d tl.filterByString(args.strip());","lastModifiedDate":"2024-02-03"},{"lineNumber":168,"author":{"gitId":"chaaaaun"},"content":"        return Response.displayFind(res);","lastModifiedDate":"2024-02-10"},{"lineNumber":169,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":170,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"chaaaaun":170}},{"path":"src/main/java/chatbot/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package chatbot;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import chatbot.exceptions.InvalidArgumentException;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"class DeadlineTask extends Task implements Serializable {","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"    private static final long serialVersionUID \u003d 1L;","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"    private final LocalDateTime deadlineTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"    public DeadlineTask(String desc, String deadlineTime) throws InvalidArgumentException {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"        super(desc);","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"            this.deadlineTime \u003d Parser.parseDate(deadlineTime);","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"            throw new InvalidArgumentException();","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"                deadlineTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")));","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"chaaaaun":28}},{"path":"src/main/java/chatbot/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package chatbot;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import chatbot.exceptions.InvalidArgumentException;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":" * Represents a task that has a start and end time.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"public class EventTask extends Task implements Serializable {","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"    private static final long serialVersionUID \u003d 1L;","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"     * Constructor for the task that initialises the time data.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"     * @param desc Description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"     * @param startTime Start time of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"     * @param endTime End time of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"     * @throws InvalidArgumentException If the arguments given are invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"    public EventTask(String desc, String startTime, String endTime) throws InvalidArgumentException {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"        super(desc);","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"            this.startTime \u003d Parser.parseDate(startTime);","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"            this.endTime \u003d Parser.parseDate(endTime);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"            throw new InvalidArgumentException();","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"                startTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"                endTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"chaaaaun":42}},{"path":"src/main/java/chatbot/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package chatbot;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"public class Launcher {","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"chaaaaun":9}},{"path":"src/main/java/chatbot/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package chatbot;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import chatbot.controllers.MainWindow;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import javafx.scene.layout.ColumnConstraints;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import javafx.scene.layout.RowConstraints;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"    private Plana plana;","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"    public Main() {","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"            this.plana \u003d new Plana();","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"            System.out.println(\"Invalid save file:\\n\" + e.getMessage());","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"            System.out.println(\"Storage failed with error:\\n\" + e.getMessage());","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/views/MainWindow.fxml\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"            GridPane root \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"            RowConstraints rcDialog \u003d new RowConstraints();","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"            rcDialog.setPercentHeight(95.0);","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"            rcDialog.setVgrow(Priority.SOMETIMES);","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"            RowConstraints rcInput \u003d new RowConstraints();","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"            rcInput.setPercentHeight(5.0);","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"            rcInput.setVgrow(Priority.SOMETIMES);","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"            root.getRowConstraints().addAll(rcDialog, rcInput);","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"            ColumnConstraints ccInput \u003d new ColumnConstraints();","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"            ccInput.setPercentWidth(80.0);","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"            ccInput.setHgrow(Priority.SOMETIMES);","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"            ColumnConstraints ccButton \u003d new ColumnConstraints();","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"            ccButton.setPercentWidth(20.0);","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"            ccButton.setHgrow(Priority.SOMETIMES);","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"            root.getColumnConstraints().addAll(ccInput, ccButton);","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"            Scene scene \u003d new Scene(root);","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setPlana(this.plana);","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"            stage.show();","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"chaaaaun":58}},{"path":"src/main/java/chatbot/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package chatbot;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import java.util.Map;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import chatbot.exceptions.InvalidCommandException;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":" * Represents a utility class to parse string inputs from the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"public class Parser {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"    private static final Map\u003cString, Command\u003e cmdStrMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"    static {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"        for (Command cmd : Command.values()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"            cmdStrMap.put(cmd.toString(), cmd);","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"     * Parses a string to extract the relevant command.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"     * @param rep The input string.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"     * @return The command.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"     * @throws InvalidCommandException If the string does not represent a valid command.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"    public static Command toCommand(String rep) throws InvalidCommandException {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"        String[] split \u003d rep.split(\"\\\\s+\", 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"        Command cmd \u003d cmdStrMap.get(split[0]);","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"        if (split.length \u003e 1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"            cmd.withArgs(split[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"        if (cmd \u003d\u003d null) {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"        return cmd;","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"     * Parses a string to extract the date.","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"     * @param date The date string.","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"     * @return The date as LocalDateTime.","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"    public static LocalDateTime parseDate(String date) {","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"        DateTimeFormatter formatter \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"                .append(DateTimeFormatter.ofPattern(","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"                        \"[yyyy-MM-dd HH:mm]\"","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"                        + \"[yyyy-MM-dd]\"","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"                        + \"[yyyy-MM]\"","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"                ))","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"                .parseDefaulting(ChronoField.MONTH_OF_YEAR, 1)","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"                .parseDefaulting(ChronoField.DAY_OF_MONTH, 1)","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"                .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"                .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"                .toFormatter();","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"        return LocalDateTime.parse(date, formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"chaaaaun":64}},{"path":"src/main/java/chatbot/Plana.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package chatbot;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import chatbot.exceptions.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":" * Represents the main class responsible for running the chatbot \u0027Plana\u0027. Critical components like UI, file IO are","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":" * initialised here.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"public class Plana {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"    private final Storage store;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"    private boolean shouldExit;","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"     * Constructor that initalises UI, Storage and TaskList components.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"     * @throws IOException If reading from hard disk fails.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"     * @throws ClassNotFoundException If data from hard disk is of the wrong format/outdated.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"    public Plana() throws IOException, ClassNotFoundException {","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"        this.shouldExit \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"        this.store \u003d new Storage();","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"        this.taskList \u003d new TaskList(this.store);","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"     * Initiates the user input loop.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"    public Response getResponse(String input) {","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"            Command cmd \u003d Parser.toCommand(input);","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"            return cmd.execute(taskList);","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"            return Response.displayError(e);","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"    public void persistData() throws IOException {","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"        this.taskList.saveToStore(this.store);","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"chaaaaun":43}},{"path":"src/main/java/chatbot/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package chatbot;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import java.util.List;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":" * Represents the UI controller.","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"public class Response {","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"    private static final Response GREETING \u003d new Response(new ArrayList\u003c\u003e(List.of(","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"            \"Hello! My name is\\n\"","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"            + \"    ____  __                 \\n\"","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"            + \"   / __ \\\\/ /___ _____  ____ _\\n\"","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"            + \"  / /_/ / / __ `/ __ \\\\/ __ `/\\n\"","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"            + \" / ____/ / /_/ / / / / /_/ / \\n\"","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"            + \"/_/   /_/\\\\__,_/_/ /_/\\\\__,_/  \\n\",","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"            \"What can I do for you?\"","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"    )), 0, null);","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"    private static final Response PARTING \u003d new Response(Collections.singletonList(","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"        \"See you next time!\"","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"    ), 2, null);","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"    private final List\u003cString\u003e messages;","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"    private final String errorMessage;","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"     * 0 for normal, 1 for error, 2 for breaking","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"    private final int messageType;","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"    private Response(List\u003cString\u003e message, int messageType, String er) {","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"        this.messages \u003d message;","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"        this.messageType \u003d messageType;","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"        this.errorMessage \u003d er;","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"    public static Response displayGreeting() {","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"        return Response.GREETING;","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"    public static Response displayParting() {","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"        return Response.PARTING;","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"     * Displays a formatted task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"     * @param tl The task list to display.","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"    public static Response displayList(TaskList tl) {","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"        String message \u003d tl.toString().isEmpty()","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"                ? \"You have no tasks right now, add some!\"","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"                : \"You\u0027ve added the following tasks so far:\\n\" + tl;","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"        return new Response(Collections.singletonList(message), 0, null);","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"     * Display a notification after user adds a task.","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"     * @param tl The task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"     * @param t  The added task.","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"    public static Response displayAdd(TaskList tl, Task t) {","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"                + \"\u003e\u003e \" + t + \"\\n\"","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"chaaaaun"},"content":"                + \"You now have \" + tl.getSize() + \" tasks in the list.\";","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"        return new Response(Collections.singletonList(message), 0, null);","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"     * Displays a notification after user marks a task.","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"     * @param i The index of the marked task.","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"chaaaaun"},"content":"    public static Response displayMark(int i) {","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"chaaaaun"},"content":"        return new Response(Collections.singletonList(\"Task \" + i + \" marked as done\"), 0, null);","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"chaaaaun"},"content":"     * Displays a notification after user unmarks a task.","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"chaaaaun"},"content":"     * @param i The index of the unmarked task.","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"chaaaaun"},"content":"    public static Response displayUnmark(int i) {","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"chaaaaun"},"content":"        return new Response(Collections.singletonList(\"Task \" + i + \" marked as undone\"), 0, null);","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"chaaaaun"},"content":"     * Displays a notification after user deletes a task.","lastModifiedDate":"2024-02-10"},{"lineNumber":91,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":92,"author":{"gitId":"chaaaaun"},"content":"     * @param tl The task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":93,"author":{"gitId":"chaaaaun"},"content":"     * @param t  The deleted task.","lastModifiedDate":"2024-02-10"},{"lineNumber":94,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"chaaaaun"},"content":"    public static Response displayDelete(TaskList tl, Task t) {","lastModifiedDate":"2024-02-10"},{"lineNumber":96,"author":{"gitId":"chaaaaun"},"content":"        String message \u003d \"Got it. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"chaaaaun"},"content":"                + \"\u003e\u003e \" + t + \"\\n\"","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"chaaaaun"},"content":"                + \"You now have \" + tl.getSize() + \" tasks in the list.\\n\";","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"chaaaaun"},"content":"        return new Response(Collections.singletonList(message), 0, null);","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"chaaaaun"},"content":"     * Displays the results after user searches for tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":105,"author":{"gitId":"chaaaaun"},"content":"     * @param tl The results list.","lastModifiedDate":"2024-02-10"},{"lineNumber":106,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":107,"author":{"gitId":"chaaaaun"},"content":"    public static Response displayFind(ArrayList\u003cTask\u003e tl) {","lastModifiedDate":"2024-02-10"},{"lineNumber":108,"author":{"gitId":"chaaaaun"},"content":"        if (tl.isEmpty()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":109,"author":{"gitId":"chaaaaun"},"content":"            return new Response(Collections.singletonList(\"No tasks found.\"), 0, null);","lastModifiedDate":"2024-02-10"},{"lineNumber":110,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":111,"author":{"gitId":"chaaaaun"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":112,"author":{"gitId":"chaaaaun"},"content":"        for (int i \u003d 0; i \u003c tl.size(); i++) {","lastModifiedDate":"2024-02-10"},{"lineNumber":113,"author":{"gitId":"chaaaaun"},"content":"            sb.append(i + 1).append(\". \").append(tl.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":114,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":115,"author":{"gitId":"chaaaaun"},"content":"        return new Response(Collections.singletonList(sb.toString()), 0, null);","lastModifiedDate":"2024-02-10"},{"lineNumber":116,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":117,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":118,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":119,"author":{"gitId":"chaaaaun"},"content":"     * Displays an error notification.","lastModifiedDate":"2024-02-10"},{"lineNumber":120,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":121,"author":{"gitId":"chaaaaun"},"content":"     * @param e The error.","lastModifiedDate":"2024-02-10"},{"lineNumber":122,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":123,"author":{"gitId":"chaaaaun"},"content":"    public static Response displayError(Exception e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":124,"author":{"gitId":"chaaaaun"},"content":"        return new Response(null, 1, e.getMessage());","lastModifiedDate":"2024-02-10"},{"lineNumber":125,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":126,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":127,"author":{"gitId":"chaaaaun"},"content":"    public boolean isError() {","lastModifiedDate":"2024-02-10"},{"lineNumber":128,"author":{"gitId":"chaaaaun"},"content":"        return this.messageType \u003d\u003d 1;","lastModifiedDate":"2024-02-10"},{"lineNumber":129,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":130,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":131,"author":{"gitId":"chaaaaun"},"content":"    public boolean isBreaking() {","lastModifiedDate":"2024-02-10"},{"lineNumber":132,"author":{"gitId":"chaaaaun"},"content":"        return this.messageType \u003d\u003d 2;","lastModifiedDate":"2024-02-10"},{"lineNumber":133,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":134,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":135,"author":{"gitId":"chaaaaun"},"content":"    public List\u003cString\u003e getMessages() {","lastModifiedDate":"2024-02-10"},{"lineNumber":136,"author":{"gitId":"chaaaaun"},"content":"        return this.messages;","lastModifiedDate":"2024-02-10"},{"lineNumber":137,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":138,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":139,"author":{"gitId":"chaaaaun"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2024-02-10"},{"lineNumber":140,"author":{"gitId":"chaaaaun"},"content":"        return this.errorMessage;","lastModifiedDate":"2024-02-10"},{"lineNumber":141,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":142,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"chaaaaun":142}},{"path":"src/main/java/chatbot/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package chatbot;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import java.io.File;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":" * Represents class responsible for interacting with the file system, to persist tasks users have made.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"public class Storage {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"     * Constructor that checks whether a storage file already exists, otherwise creates one.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"     * @throws IOException If writing the new file to disk fails.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"    public Storage() throws IOException {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"        File file \u003d new File(\"store.ser\");","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"            FileOutputStream fileOut \u003d new FileOutputStream(\"store.ser\");","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"            ObjectOutputStream out \u003d new ObjectOutputStream(fileOut);","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"            out.writeObject(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"            out.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"            fileOut.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"     * Reads the persisted data from the file system, deserialising it into Java classes for operation.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"     * @return The deserialised Java ArrayList class.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"     * @throws IOException If there is an issue reading from file.","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"     * @throws ClassNotFoundException If there is an issue deserialising the data.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"    public ArrayList\u003cTask\u003e readFromStore() throws IOException, ClassNotFoundException {","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"        FileInputStream fileIn \u003d new FileInputStream(\"store.ser\");","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"        ObjectInputStream in \u003d new ObjectInputStream(fileIn);","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"        ArrayList\u003cTask\u003e taskList \u003d (ArrayList\u003cTask\u003e) in.readObject();","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"        in.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"        fileIn.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"        return taskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"     * Writes the updated in-memory data to file.","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"     * @param taskList The updated Java class object to persist.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"     * @throws IOException If there is an issue writing to file.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"    public void saveToStore(ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"        FileOutputStream fileOut \u003d new FileOutputStream(\"store.ser\");","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"        ObjectOutputStream out \u003d new ObjectOutputStream(fileOut);","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"        out.writeObject(taskList);","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"        out.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"        fileOut.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"chaaaaun":62}},{"path":"src/main/java/chatbot/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package chatbot;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import chatbot.exceptions.AlreadyMarkedException;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import chatbot.exceptions.AlreadyUnmarkedException;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":" * Represents a Task created by the user, as part of a list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"public class Task implements Serializable {","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"    private static final long serialVersionUID \u003d 1L;","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"    private final String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"    private boolean done;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"     * Constructor for the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"     * @param desc Description for the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"    public Task(String desc) {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"        this.description \u003d desc;","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"        this.done \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"        return (done ? \"[X] \" : \"[ ] \") + description;","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"    public boolean contains(String s) {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"        return this.description.contains(s);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"     * Marks the Task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"     * @throws AlreadyMarkedException If the task is already marked as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"    public void mark() throws AlreadyMarkedException {","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"        if (this.done) {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"            throw new AlreadyMarkedException();","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"        this.done \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"     * Unmarks the Task.","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"     * @throws AlreadyUnmarkedException If the task is not marked as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"    public void unmark() throws AlreadyUnmarkedException {","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"        if (!this.done) {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"            throw new AlreadyUnmarkedException();","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"        this.done \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"chaaaaun":59}},{"path":"src/main/java/chatbot/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package chatbot;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import chatbot.exceptions.AlreadyMarkedException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import chatbot.exceptions.AlreadyUnmarkedException;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":" * Represents a list of Tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"public class TaskList {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"     * Constructor that retrieves the list of tasks from the file system.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"     * @param store The instance of Storage responsible for doing file IO.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"     * @throws IOException If there is an issue with file IO.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"     * @throws ClassNotFoundException If there is an issue with deserialising.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"    public TaskList(Storage store) throws IOException, ClassNotFoundException {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"        this.tasks \u003d store.readFromStore();","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"     * Getter for the number of tasks in the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"    public int getSize() {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"            sb.append(String.format(\"%d. %s\\n\", i + 1, tasks.get(i)));","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"        return sb.toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"     * Adds a Task to the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"     * @param t The task to add.","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"        this.tasks.add(t);","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"     * Marks a given task in the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"     * @param i The index of the task to mark.","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"     * @throws AlreadyMarkedException If the task is already marked.","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"    public void markTask(int i) throws AlreadyMarkedException {","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"        this.tasks.get(i).mark();","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"     * Unmarks a given task in the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"     * @param i The index of the task to unmark.","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"chaaaaun"},"content":"     * @throws AlreadyUnmarkedException If the task is not marked.","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"chaaaaun"},"content":"    public void unmarkTask(int i) throws AlreadyUnmarkedException {","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"chaaaaun"},"content":"        this.tasks.get(i).unmark();","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"     * Removes a task from the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"chaaaaun"},"content":"     * @param i The index of the task to remove.","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"chaaaaun"},"content":"     * @return The task that was removed.","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"chaaaaun"},"content":"    public Task removeTask(int i) {","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"chaaaaun"},"content":"        return this.tasks.remove(i);","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"chaaaaun"},"content":"     * Filters tasks by string.","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"chaaaaun"},"content":"     * @param s The search string.","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"chaaaaun"},"content":"     * @return The tasks with description containing that string.","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"chaaaaun"},"content":"    public ArrayList\u003cTask\u003e filterByString(String s) {","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"chaaaaun"},"content":"        ArrayList\u003cTask\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"chaaaaun"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"chaaaaun"},"content":"            if (task.contains(s)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"chaaaaun"},"content":"                res.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"chaaaaun"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"chaaaaun"},"content":"        return res;","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"chaaaaun"},"content":"     * Saves the instance\u0027s current state into the file system using the provided Storage object.","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"chaaaaun"},"content":"     * @param store The Storage object to use.","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"chaaaaun"},"content":"     * @throws IOException If there was an issue with saving to hard disk.","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"chaaaaun"},"content":"    public void saveToStore(Storage store) throws IOException {","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"chaaaaun"},"content":"        store.saveToStore(this.tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"chaaaaun":109}},{"path":"src/main/java/chatbot/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package chatbot;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":" * Represents the simplest type of task, with only a description.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"public class TodoTask extends Task implements Serializable {","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"    private static final long serialVersionUID \u003d 1L;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"    public TodoTask(String desc) {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"        super(desc);","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"chaaaaun":18}},{"path":"src/main/java/chatbot/controllers/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package chatbot.controllers;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import chatbot.Main;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"    private HBox message;","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"    private HBox messageBg;","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"    private Label messageText;","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"    private Rectangle displayPicture;","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/views/DialogBox.fxml\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"        messageText.setText(text);","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"        displayPicture.setFill(new ImagePattern(img));","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"        HBox.setHgrow(messageBg, Priority.ALWAYS);","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"    public static DialogBox getBotDialog(String text, Image img) {","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"        db.flip();","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"        return db;","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"    private void flip() {","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(message.getChildren());","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"chaaaaun"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"        message.getChildren().setAll(tmp);","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"chaaaaun"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"chaaaaun"},"content":"        messageBg.setBackground(Background.fill(Color.web(\"#F8EDFF\")));","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"chaaaaun":72}},{"path":"src/main/java/chatbot/controllers/ErrorBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package chatbot.controllers;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"public class ErrorBox extends HBox {","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"    private ErrorBox(String text) {","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/views/ErrorBox.fxml\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"    public static ErrorBox getErrorDialog(String text) {","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"        return new ErrorBox(text);","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"chaaaaun":35}},{"path":"src/main/java/chatbot/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package chatbot.controllers;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import java.util.List;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import chatbot.Plana;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import chatbot.Response;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/media/sensei.png\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"    private final Image planaImage \u003d new Image(this.getClass().getResourceAsStream(\"/media/plana.png\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"    private Plana plana;","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"        // Display welcome greeting","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"        List\u003cString\u003e greeting \u003d Response.displayGreeting().getMessages();","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getBotDialog(greeting.get(0), planaImage));","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getBotDialog(greeting.get(1), planaImage));","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"        // Set expand for button","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"        GridPane.setHgrow(sendButton, Priority.ALWAYS);","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"    public void setPlana(Plana p) {","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"        this.plana \u003d p;","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Plana\u0027s reply and then appends them to","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"    private void handleUserInput() throws IOException {","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"        Response response \u003d this.plana.getResponse(input);","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"        ObservableList\u003cNode\u003e ol \u003d dialogContainer.getChildren();","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"        ol.add(DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"        if (response.isError()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"            ol.add(ErrorBox.getErrorDialog(response.getErrorMessage()));","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"chaaaaun"},"content":"            return;","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"chaaaaun"},"content":"        for (String s : response.getMessages()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"chaaaaun"},"content":"            ol.add(DialogBox.getBotDialog(s, planaImage));","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"chaaaaun"},"content":"        if (response.isBreaking()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"            this.plana.persistData();","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"chaaaaun"},"content":"            try {","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"chaaaaun"},"content":"                TimeUnit.SECONDS.sleep(1);","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"chaaaaun"},"content":"            } catch (InterruptedException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"chaaaaun"},"content":"                e.printStackTrace();","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"chaaaaun"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"chaaaaun"},"content":"            Platform.exit();","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"chaaaaun":83}},{"path":"src/main/java/chatbot/exceptions/AlreadyMarkedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package chatbot.exceptions;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"public class AlreadyMarkedException extends DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"    public static final String ERRSTR \u003d \"This task has already been marked as done!\";","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"    public AlreadyMarkedException() {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"        super(ERRSTR);","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"chaaaaun":8}},{"path":"src/main/java/chatbot/exceptions/AlreadyUnmarkedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package chatbot.exceptions;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"public class AlreadyUnmarkedException extends DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"    public static final String ERRSTR \u003d \"This task is already unmarked!\";","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"    public AlreadyUnmarkedException() {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"        super(ERRSTR);","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"chaaaaun":8}},{"path":"src/main/java/chatbot/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package chatbot.exceptions;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"        super(msg);","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"chaaaaun":8}},{"path":"src/main/java/chatbot/exceptions/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package chatbot.exceptions;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"public class InvalidArgumentException extends DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"    public static final String ERRSTR \u003d \"Invalid input for this command!\";","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"    public InvalidArgumentException() {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"        super(ERRSTR);","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"chaaaaun":8}},{"path":"src/main/java/chatbot/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package chatbot.exceptions;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import chatbot.Command;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"    private static final String ERRSTR;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"    static {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"        result.append(\"Invalid command! Only the following commands are allowed:\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"        for (Command c : Command.values()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"            result.append(c.toString()).append(\"\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"        ERRSTR \u003d result.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"        super(ERRSTR);","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"chaaaaun":19}},{"path":"src/main/resources/views/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"\u003c?import javafx.scene.shape.Rectangle?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"\u003cfx:root alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"         maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"        \u003cURL value\u003d\"@style.css\"/\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"    \u003cHBox fx:id\u003d\"message\" alignment\u003d\"CENTER\" spacing\u003d\"10.0\" fillHeight\u003d\"false\"\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"        \u003cHBox fx:id\u003d\"messageBg\" fillHeight\u003d\"false\"\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"            \u003cLabel fx:id\u003d\"messageText\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"        \u003cRectangle fx:id\u003d\"displayPicture\" height\u003d\"80.0\" width\u003d\"80.0\" pickOnBounds\u003d\"true\" arcHeight\u003d\"80\" arcWidth\u003d\"80\"/\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"chaaaaun":26}},{"path":"src/main/resources/views/ErrorBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"\u003cfx:root styleClass\u003d\"error-box\" alignment\u003d\"CENTER\"","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"        \u003cURL value\u003d\"@style.css\"/\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"    \u003cLabel styleClass\u003d\"error-label\" fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"chaaaaun":16}},{"path":"src/main/resources/views/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"\u003cGridPane styleClass\u003d\"root-panel\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"          prefHeight\u003d\"640.0\" prefWidth\u003d\"440.0\"","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"          xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"          fx:controller\u003d\"chatbot.controllers.MainWindow\" hgap\u003d\"4\"\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" vbarPolicy\u003d\"ALWAYS\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" vvalue\u003d\"1.0\" fitToWidth\u003d\"true\"","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"                GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"0\" GridPane.columnSpan\u003d\"2\"\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" spacing\u003d\"10.0\"\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\"/\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"    \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" maxHeight\u003d\"Infinity\" GridPane.rowIndex\u003d\"1\"","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"               GridPane.columnIndex\u003d\"0\"/\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"    \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" maxHeight\u003d\"Infinity\"","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"            maxWidth\u003d\"Infinity\" text\u003d\"Send\" GridPane.rowIndex\u003d\"1\" GridPane.columnIndex\u003d\"1\"/\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"chaaaaun":25}},{"path":"src/test/java/chatbot/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package chatbot;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"    public void parseDate_validDate_success() {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(Parser.parseDate(\"2019-04-01 19:00\"), LocalDateTime.of(2019, 4, 1, 19, 0));","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"    public void parseDate_invalidDate_exceptionThrown() {","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"            assertEquals(Parser.parseDate(\"2019/04/01 19:00\"), LocalDateTime.of(2019, 4, 1, 19, 0));","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"            fail();","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"            assertEquals(\"Text \u00272019/04/01 19:00\u0027 could not be parsed, unparsed text found at index 0\", e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"chaaaaun":25}},{"path":"src/test/java/chatbot/TodoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package chatbot;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import chatbot.exceptions.AlreadyMarkedException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"public class TodoTaskTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"    public void toString_newTask_success() {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(new TodoTask(\"test\").toString(), \"[T][ ] test\");","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"    public void mark_existingTask_success() throws AlreadyMarkedException {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"        TodoTask t \u003d new TodoTask(\"test\");","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"        t.mark();","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(t.toString(), \"[T][X] test\");","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"chaaaaun":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"abc","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"todo task 1","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"deadline task 2 /by b","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"deadline task e","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"event task 3 /from a /to b","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"event task e","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"mark e","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"unmark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"unmark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"unmark e","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"delete 2","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"delete e","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"chaaaaun":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"java -classpath ..\\bin chatbot.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chaaaaun":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"## create bin directory if it doesn\u0027t exist","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"#if [ ! -d \"../bin\" ]","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"#then","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"#    mkdir ../bin","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"#fi","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"#","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"## delete output from previous run","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"#if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"#then","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"#    rm ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"#fi","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"#","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"## compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"#if ! javac -cp ../src/main/java/chatbot/* -Xlint:none -d ../bin ../src/main/java/chatbot/*.java","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"#then","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"#    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"#    exit 1","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"#fi","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"~/Documents/jdk-11.0.17.jdk/Contents/Home/bin/java -classpath ../out/production/ip chatbot.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chaaaaun":19,"-":19}}]
