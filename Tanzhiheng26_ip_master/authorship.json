[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"# Ezra","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"Ezra is a desktop app for managing your tasks, optimized for use via a Command Line Interface (CLI) while having a chatbot-like Graphical User Interface (GUI). If you can type fast, Ezra can get help you record and update your tasks more efficiently than traditional GUI apps.","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"Please refer to the [product website](https://tanzhiheng26.github.io/ip/) for more details.","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"Tanzhiheng26":3,"-":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"checkstyle {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"Tanzhiheng26"},"content":"    mainClass.set(\"gui.Launcher\")","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"Tanzhiheng26"},"content":"    archiveFileName \u003d \u0027ezra.jar\u0027","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"Tanzhiheng26"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Tanzhiheng26":23,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"# Ezra User Guide","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"![Ezra screenshot](Ui.png)","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"Ezra is a desktop app for managing your tasks, optimized for use via a Command Line Interface (CLI) while having a chatbot-like Graphical User Interface (GUI). If you can type fast, Ezra can get help you record and update your tasks more efficiently than traditional GUI apps.","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"- [Quick Start](https://tanzhiheng26.github.io/ip/#quick-start)","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"- [Features](https://tanzhiheng26.github.io/ip/#features)","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"  - [Adding a **ToDo** task: `todo`](https://tanzhiheng26.github.io/ip/#adding-a-todo-task-todo)","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"  - [Adding a **Deadline** task: `deadline`](https://tanzhiheng26.github.io/ip/#adding-a-deadline-task-deadline)","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"  - [Adding an **Event** task: `event`](https://tanzhiheng26.github.io/ip/#adding-an-event-task-event)","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"  - [Listing all tasks: `list`](https://tanzhiheng26.github.io/ip/#listing-all-tasks-list)","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"  - [Marking tasks as done: `mark`](https://tanzhiheng26.github.io/ip/#marking-tasks-as-done-mark)","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"  - [Marking tasks as not done: `unmark`](https://tanzhiheng26.github.io/ip/#marking-tasks-as-not-done-unmark)","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"  - [Deleting tasks: `delete`](https://tanzhiheng26.github.io/ip/#deleting-tasks-delete)","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"  - [Finding tasks by keyword: `find`](https://tanzhiheng26.github.io/ip/#finding-tasks-by-keyword-find)","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"  - [Undoing a command: `undo`](https://tanzhiheng26.github.io/ip/#undoing-a-command-undo)","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"## Quick Start","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"2. Download the latest ezra.jar from [here](https://github.com/Tanzhiheng26/ip/releases)","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for Ezra.","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"4. Double-click on the jar file to launch the application. A GUI similar to the screenshot above should appear in a few seconds","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"## Features","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"### Adding a **ToDo** task: `todo`","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"Adds a ToDo to the list of tasks.","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"Format: `todo \u003cdescription\u003e`","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"Examples:","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"- `todo return books`","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"- `todo buy milk`","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"Tanzhiheng26"},"content":"### Adding a **Deadline** task: `deadline`","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"Tanzhiheng26"},"content":"Adds a Deadline to the list of tasks.","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"Tanzhiheng26"},"content":"Format: `deadline \u003cdescription\u003e /by \u003cdate time\u003e`","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"Tanzhiheng26"},"content":"Examples:","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"Tanzhiheng26"},"content":"- `deadline return books /by 29/01/2024 1800`","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"Tanzhiheng26"},"content":"- `deadline submit assignment /by 16/02/2024 1200`","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"Tanzhiheng26"},"content":"### Adding an **Event** task: `event`","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"Tanzhiheng26"},"content":"Adds an Event to the list of tasks.","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"Tanzhiheng26"},"content":"Format: `event \u003cdescription\u003e /from \u003cdate time\u003e /to \u003cdate time\u003e`","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"Tanzhiheng26"},"content":"Examples:","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"Tanzhiheng26"},"content":"- `event CS2103T briefing /from 16/02/2024 1600 /to 16/02/2024 1700`","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"Tanzhiheng26"},"content":"- `event project meeting /from 18/02/2024 2100 /to 18/02/2024 2200`","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"Tanzhiheng26"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"Tanzhiheng26"},"content":"Shows a list of all the tasks.","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"Tanzhiheng26"},"content":"Format: `list`","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"Tanzhiheng26"},"content":"### Marking tasks as done: `mark`","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"Tanzhiheng26"},"content":"Marks ones or more existing tasks as done.","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"Tanzhiheng26"},"content":"Format: `mark \u003cexisting task numbers\u003e`","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"Tanzhiheng26"},"content":"Examples:","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"Tanzhiheng26"},"content":"- `mark 1`","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"Tanzhiheng26"},"content":"- `mark 2 4 6`","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"Tanzhiheng26"},"content":"- `mark 3 2 1`","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"Tanzhiheng26"},"content":"### Marking tasks as not done: `unmark`","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"Tanzhiheng26"},"content":"Marks ones or more existing tasks as not done.","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":73,"author":{"gitId":"Tanzhiheng26"},"content":"Format: `unmark \u003cexisting task numbers\u003e`","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":75,"author":{"gitId":"Tanzhiheng26"},"content":"Examples:","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"Tanzhiheng26"},"content":"- `unmark 1`","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"Tanzhiheng26"},"content":"- `unmark 2 4 6`","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"Tanzhiheng26"},"content":"- `unmark 3 2 1`","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"Tanzhiheng26"},"content":"### Deleting tasks: `delete`","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"Tanzhiheng26"},"content":"Deletes ones or more existing tasks from the list of tasks.","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"Tanzhiheng26"},"content":"Format: `delete \u003cexisting task numbers\u003e`","lastModifiedDate":"2024-02-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":85,"author":{"gitId":"Tanzhiheng26"},"content":"Examples:","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"Tanzhiheng26"},"content":"- `delete 1`","lastModifiedDate":"2024-02-17"},{"lineNumber":87,"author":{"gitId":"Tanzhiheng26"},"content":"- `delete 2 4 6`","lastModifiedDate":"2024-02-17"},{"lineNumber":88,"author":{"gitId":"Tanzhiheng26"},"content":"- `delete 3 2 1`","lastModifiedDate":"2024-02-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":90,"author":{"gitId":"Tanzhiheng26"},"content":"### Finding tasks by keyword: `find`","lastModifiedDate":"2024-02-17"},{"lineNumber":91,"author":{"gitId":"Tanzhiheng26"},"content":"Finds existing tasks that contains the keyword.","lastModifiedDate":"2024-02-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":93,"author":{"gitId":"Tanzhiheng26"},"content":"Format: `find \u003ckeyword\u003e`","lastModifiedDate":"2024-02-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"Tanzhiheng26"},"content":"Examples:","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"Tanzhiheng26"},"content":"- `find book`","lastModifiedDate":"2024-02-17"},{"lineNumber":97,"author":{"gitId":"Tanzhiheng26"},"content":"- `find CS2103T`","lastModifiedDate":"2024-02-17"},{"lineNumber":98,"author":{"gitId":"Tanzhiheng26"},"content":"- `find project meeting`","lastModifiedDate":"2024-02-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"Tanzhiheng26"},"content":"### Undoing a command: `undo`","lastModifiedDate":"2024-02-17"},{"lineNumber":101,"author":{"gitId":"Tanzhiheng26"},"content":"Undoes the previous command that is not `list` / `find` / `undo`.","lastModifiedDate":"2024-02-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":103,"author":{"gitId":"Tanzhiheng26"},"content":"Format: `undo`","lastModifiedDate":"2024-02-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":105,"author":{"gitId":"Tanzhiheng26"},"content":"Example: Executing `delete 1` -\u003e `list` -\u003e `undo` restores the task that was deleted.","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"Tanzhiheng26":80,"-":25}},{"path":"src/main/java/ezra/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package ezra;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"    protected LocalDateTime byDateTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"    protected String byString;","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"     * Constructs a Deadline object with the specified description and deadline.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param by The deadline of the task in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws DateTimeParseException If the deadline format is invalid.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"    public Deadline(String description, String by) throws DateTimeParseException {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"        super(description);","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"        this.byDateTime \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"        this.byString \u003d by;","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"     * Returns a formatted string representation of the Deadline object to display to the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A formatted string including task type, status, description, and deadline.","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"        String byString \u003d this.byDateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"Tanzhiheng26"},"content":"        return String.format(\"[D][%s] %s (by: %s)\", this.getStatusIcon(), this.description, byString);","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":38,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Tanzhiheng26"},"content":"     * Returns a formatted string representation of the Deadline object for storage purposes.","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A formatted string suitable for storage, including task type, status, description, and deadline.","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Tanzhiheng26"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"Tanzhiheng26"},"content":"    public String toStorageString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Tanzhiheng26"},"content":"        return String.format(\"D | %d | %s | %s\", this.isDone ? 1 : 0, this.description, this.byString);","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Tanzhiheng26"},"content":"     * Checks if this Deadline object is equal to another object.","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param o The object to compare to.","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Tanzhiheng26"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"Tanzhiheng26"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"Tanzhiheng26"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"Tanzhiheng26"},"content":"            return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"Tanzhiheng26"},"content":"        if (!(o instanceof Deadline)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Tanzhiheng26"},"content":"            return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"Tanzhiheng26"},"content":"        Deadline d \u003d (Deadline) o;","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"Tanzhiheng26"},"content":"        return this.description.equals(d.description) \u0026\u0026 this.byString.equals(d.byString);","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"Tanzhiheng26"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"Tanzhiheng26"},"content":"    public Deadline copy() {","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"Tanzhiheng26"},"content":"        Deadline copy \u003d new Deadline(this.description, this.byString);","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"Tanzhiheng26"},"content":"        copy.isDone \u003d this.isDone;","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"Tanzhiheng26"},"content":"        return copy;","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"Tanzhiheng26":73}},{"path":"src/main/java/ezra/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package ezra;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":" * Represents a task with a specific start and end time.","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"    protected LocalDateTime startDateTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"    protected LocalDateTime endDateTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"    protected String startString;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"    protected String endString;","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"     * Constructs an Event object with the specified description, start time, and end time.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param start       The start time of the event in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param end         The end time of the event in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws DateTimeParseException If the start or end time format is invalid.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"    public Event(String description, String start, String end) throws DateTimeParseException {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"        super(description);","lastModifiedDate":"2024-01-21"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"        this.startDateTime \u003d LocalDateTime.parse(start, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"        this.endDateTime \u003d LocalDateTime.parse(end, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"        this.startString \u003d start;","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"        this.endString \u003d end;","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"     * Returns a formatted string representation of the Event object to display to the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A formatted string including task type, status, description, start time, and end time.","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Tanzhiheng26"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":39,"author":{"gitId":"Tanzhiheng26"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":40,"author":{"gitId":"Tanzhiheng26"},"content":"        String startString \u003d this.startDateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"Tanzhiheng26"},"content":"        String endString \u003d this.endDateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"Tanzhiheng26"},"content":"        return String.format(","lastModifiedDate":"2024-01-21"},{"lineNumber":43,"author":{"gitId":"Tanzhiheng26"},"content":"                \"[E][%s] %s (from: %s to: %s)\",","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Tanzhiheng26"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2024-01-21"},{"lineNumber":45,"author":{"gitId":"Tanzhiheng26"},"content":"                this.description,","lastModifiedDate":"2024-01-21"},{"lineNumber":46,"author":{"gitId":"Tanzhiheng26"},"content":"                startString,","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"Tanzhiheng26"},"content":"                endString);","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":49,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Tanzhiheng26"},"content":"     * Returns a formatted string representation of the Event object for storage purposes.","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A formatted string suitable for storage, including task type, status, description, start and end time.","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Tanzhiheng26"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"Tanzhiheng26"},"content":"    public String toStorageString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Tanzhiheng26"},"content":"        return String.format(\"E | %d | %s | %s | %s\",","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"Tanzhiheng26"},"content":"                this.isDone ? 1 : 0,","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"Tanzhiheng26"},"content":"                this.description,","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"Tanzhiheng26"},"content":"                this.startString,","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"Tanzhiheng26"},"content":"                this.endString);","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"Tanzhiheng26"},"content":"     * Checks if this Event object is equal to another object.","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param o The object to compare to.","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"Tanzhiheng26"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"Tanzhiheng26"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"Tanzhiheng26"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"Tanzhiheng26"},"content":"            return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"Tanzhiheng26"},"content":"        if (!(o instanceof Event)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"Tanzhiheng26"},"content":"            return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"Tanzhiheng26"},"content":"        Event e \u003d (Event) o;","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"Tanzhiheng26"},"content":"        return this.description.equals(e.description)","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"Tanzhiheng26"},"content":"                \u0026\u0026 this.startString.equals(e.startString)","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"Tanzhiheng26"},"content":"                \u0026\u0026 this.endString.equals(e.endString);","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"Tanzhiheng26"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"Tanzhiheng26"},"content":"    public Event copy() {","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"Tanzhiheng26"},"content":"        Event copy \u003d new Event(this.description, this.startString, this.endString);","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"Tanzhiheng26"},"content":"        copy.isDone \u003d this.isDone;","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"Tanzhiheng26"},"content":"        return copy;","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"Tanzhiheng26":90}},{"path":"src/main/java/ezra/Ezra.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package ezra;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":" * Main class for the Ezra chatbot.","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"public class Ezra {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"     * Constructs an Ezra object with the specified file path to load saved tasks from.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param filepath The file path for storing tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"    public Ezra(String filepath) {","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"        this.storage \u003d new Storage(filepath);","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"        } catch (FileNotFoundException | WrongFormatException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"     * Generates a response based on the given input using the Parser class.","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param input The input given the user.","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return The response message to the user\u0027s input.","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"        return Parser.generateReply(input, storage, tasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Tanzhiheng26":35,"-":1}},{"path":"src/main/java/ezra/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package ezra;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":" * Parses user input commands and performs corresponding actions.","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"public class Parser {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"     * Reads the user input, processes the command, updates the task list, and generates a reply.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param input   The user input command.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param storage Storage object for writing tasks to a file.","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param tasks   TaskList object for managing tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A message to be displayed to the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"    public static String generateReply(String input, Storage storage, TaskList tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"                return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"                return tasks.listTasks();","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"            } else if (input.equals(\"undo\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"                return tasks.undo(storage);","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"                return tasks.mark(storage, Parser.parseMark(input));","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"                return tasks.unmark(storage, Parser.parseUnmark(input));","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"                return tasks.delete(storage, Parser.parseDelete(input));","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"                return tasks.updateTasks(storage, Parser.parseToDo(input));","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"            } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"Tanzhiheng26"},"content":"                return tasks.updateTasks(storage, Parser.parseDeadline(input));","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"Tanzhiheng26"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"Tanzhiheng26"},"content":"                return tasks.updateTasks(storage, Parser.parseEvent(input));","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"Tanzhiheng26"},"content":"            } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Tanzhiheng26"},"content":"                return tasks.find(Parser.parseFind(input));","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"Tanzhiheng26"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"Tanzhiheng26"},"content":"                return \"Invalid command\";","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"Tanzhiheng26"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"Tanzhiheng26"},"content":"        } catch (WrongFormatException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"Tanzhiheng26"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"Tanzhiheng26"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"Tanzhiheng26"},"content":"            return \"Date time must be in this format:\\n28/01/2023 1800\";","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Tanzhiheng26"},"content":"     * Parses a \u0027todo\u0027 command from the user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A ToDo object representing the task to be added.","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws WrongFormatException If the command format is invalid.","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"Tanzhiheng26"},"content":"    public static ToDo parseToDo(String input) throws WrongFormatException {","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"Tanzhiheng26"},"content":"        boolean isValidToDoCommand \u003d Pattern.matches(\"todo\\\\s\\\\S.*\", input);","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"Tanzhiheng26"},"content":"        if (!isValidToDoCommand) {","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"Tanzhiheng26"},"content":"            throw new WrongFormatException(\"Invalid \u0027todo\u0027 command format. Usage: todo \u003cdescription\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"Tanzhiheng26"},"content":"        return new ToDo(extractToDoDescription(input));","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"Tanzhiheng26"},"content":"     * Extracts the description from a \u0027todo\u0027 command.","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return The description of the \u0027todo\u0027 task.","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"Tanzhiheng26"},"content":"    public static String extractToDoDescription(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"Tanzhiheng26"},"content":"        return input.split(\"\\\\s\", 2)[1];","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"Tanzhiheng26"},"content":"     * Parses a \u0027deadline\u0027 command from the user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A Deadline object representing the task to be added.","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws WrongFormatException If the command format is invalid.","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"Tanzhiheng26"},"content":"    public static Deadline parseDeadline(String input) throws WrongFormatException {","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"Tanzhiheng26"},"content":"        boolean isValidDeadlineCommand \u003d Pattern.matches(\"deadline\\\\s\\\\S.*\\\\s/by\\\\s\\\\S.*\", input);","lastModifiedDate":"2024-02-09"},{"lineNumber":85,"author":{"gitId":"Tanzhiheng26"},"content":"        if (!isValidDeadlineCommand) {","lastModifiedDate":"2024-02-09"},{"lineNumber":86,"author":{"gitId":"Tanzhiheng26"},"content":"            throw new WrongFormatException(","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"Tanzhiheng26"},"content":"                    \"Invalid \u0027deadline\u0027 command format. Usage: deadline \u003cdescription\u003e /by \u003cdate time\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"Tanzhiheng26"},"content":"        return new Deadline(extractDeadlineDescription(input), extractDeadlineBy(input));","lastModifiedDate":"2024-02-09"},{"lineNumber":90,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":91,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":92,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":93,"author":{"gitId":"Tanzhiheng26"},"content":"     * Extracts the description from a \u0027deadline\u0027 command.","lastModifiedDate":"2024-02-10"},{"lineNumber":94,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-02-10"},{"lineNumber":96,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return The description of the \u0027deadline\u0027 task.","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"Tanzhiheng26"},"content":"    public static String extractDeadlineDescription(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"Tanzhiheng26"},"content":"        String deadlineSpaceDescription \u003d input.split(\"\\\\s/by\\\\s\")[0];","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"Tanzhiheng26"},"content":"        return deadlineSpaceDescription.split(\"\\\\s\", 2)[1];","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"Tanzhiheng26"},"content":"     * Extracts the deadline from a \u0027deadline\u0027 command.","lastModifiedDate":"2024-02-10"},{"lineNumber":105,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":106,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-02-10"},{"lineNumber":107,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return The deadline of the \u0027deadline\u0027 task.","lastModifiedDate":"2024-02-10"},{"lineNumber":108,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":109,"author":{"gitId":"Tanzhiheng26"},"content":"    public static String extractDeadlineBy(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":110,"author":{"gitId":"Tanzhiheng26"},"content":"        return input.split(\"\\\\s/by\\\\s\")[1];","lastModifiedDate":"2024-02-09"},{"lineNumber":111,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"Tanzhiheng26"},"content":"     * Parses an \u0027event\u0027 command from the user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return An Event object representing the task to be added.","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws WrongFormatException If the command format is invalid.","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"Tanzhiheng26"},"content":"    public static Event parseEvent(String input) throws WrongFormatException {","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"Tanzhiheng26"},"content":"        boolean isValidEventCommand \u003d Pattern.matches(\"event\\\\s\\\\S.*\\\\s/from\\\\s\\\\S.*\\\\s/to\\\\s\\\\S.*\", input);","lastModifiedDate":"2024-02-09"},{"lineNumber":122,"author":{"gitId":"Tanzhiheng26"},"content":"        if (!isValidEventCommand) {","lastModifiedDate":"2024-02-09"},{"lineNumber":123,"author":{"gitId":"Tanzhiheng26"},"content":"            throw new WrongFormatException(","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"Tanzhiheng26"},"content":"                    \"Invalid \u0027event\u0027 command format. Usage: event \u003cdescription\u003e /from \u003cdate time\u003e /to \u003cdate time\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":127,"author":{"gitId":"Tanzhiheng26"},"content":"        return new Event(extractEventDescription(input), extractEventFrom(input), extractEventTo(input));","lastModifiedDate":"2024-02-09"},{"lineNumber":128,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":129,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":130,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":131,"author":{"gitId":"Tanzhiheng26"},"content":"     * Extracts the description from an \u0027event\u0027 command.","lastModifiedDate":"2024-02-10"},{"lineNumber":132,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":133,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-02-10"},{"lineNumber":134,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return The description of the \u0027event\u0027 task.","lastModifiedDate":"2024-02-10"},{"lineNumber":135,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":136,"author":{"gitId":"Tanzhiheng26"},"content":"    public static String extractEventDescription(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":137,"author":{"gitId":"Tanzhiheng26"},"content":"        String eventSpaceDescription \u003d input.split(\"\\\\s/from\\\\s\")[0];","lastModifiedDate":"2024-02-09"},{"lineNumber":138,"author":{"gitId":"Tanzhiheng26"},"content":"        return eventSpaceDescription.split(\"\\\\s\", 2)[1];","lastModifiedDate":"2024-02-09"},{"lineNumber":139,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":140,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":141,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":142,"author":{"gitId":"Tanzhiheng26"},"content":"     * Extracts the start datetime from an \u0027event\u0027 command.","lastModifiedDate":"2024-02-10"},{"lineNumber":143,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":144,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-02-10"},{"lineNumber":145,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return The start datetime of the \u0027event\u0027 task.","lastModifiedDate":"2024-02-10"},{"lineNumber":146,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":147,"author":{"gitId":"Tanzhiheng26"},"content":"    public static String extractEventFrom(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":148,"author":{"gitId":"Tanzhiheng26"},"content":"        String inputWithoutTo \u003d input.split(\"\\\\s/to\\\\s\")[0];","lastModifiedDate":"2024-02-09"},{"lineNumber":149,"author":{"gitId":"Tanzhiheng26"},"content":"        return inputWithoutTo.split(\"\\\\s/from\\\\s\")[1];","lastModifiedDate":"2024-02-09"},{"lineNumber":150,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":151,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":152,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":153,"author":{"gitId":"Tanzhiheng26"},"content":"     * Extracts the end datetime from an \u0027event\u0027 command.","lastModifiedDate":"2024-02-10"},{"lineNumber":154,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":155,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-02-10"},{"lineNumber":156,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return The end datetime of the \u0027event\u0027 task.","lastModifiedDate":"2024-02-10"},{"lineNumber":157,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":158,"author":{"gitId":"Tanzhiheng26"},"content":"    public static String extractEventTo(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":159,"author":{"gitId":"Tanzhiheng26"},"content":"        return input.split(\"\\\\s/to\\\\s\")[1];","lastModifiedDate":"2024-02-09"},{"lineNumber":160,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":161,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":162,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":163,"author":{"gitId":"Tanzhiheng26"},"content":"     * Parses a \u0027delete\u0027 command from the user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":164,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":165,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-01-30"},{"lineNumber":166,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return The indices of the tasks to be deleted. Invalid index is handled by delete in TaskList.","lastModifiedDate":"2024-02-05"},{"lineNumber":167,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws WrongFormatException If the command format is invalid.","lastModifiedDate":"2024-01-30"},{"lineNumber":168,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":169,"author":{"gitId":"Tanzhiheng26"},"content":"    public static int[] parseDelete(String input) throws WrongFormatException {","lastModifiedDate":"2024-02-10"},{"lineNumber":170,"author":{"gitId":"Tanzhiheng26"},"content":"        boolean isValidDeleteCommand \u003d Pattern.matches(\"delete(\\\\s\\\\d+)+\", input);","lastModifiedDate":"2024-02-09"},{"lineNumber":171,"author":{"gitId":"Tanzhiheng26"},"content":"        if (!isValidDeleteCommand) {","lastModifiedDate":"2024-02-09"},{"lineNumber":172,"author":{"gitId":"Tanzhiheng26"},"content":"            throw new WrongFormatException(\"Invalid \u0027delete\u0027 command format. Usage: delete \u003cexisting task numbers\u003e\");","lastModifiedDate":"2024-02-05"},{"lineNumber":173,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":174,"author":{"gitId":"Tanzhiheng26"},"content":"        return extractTaskIndices(input);","lastModifiedDate":"2024-02-10"},{"lineNumber":175,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":176,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":177,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":178,"author":{"gitId":"Tanzhiheng26"},"content":"     * Parses a \u0027mark\u0027 command from the user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":179,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":180,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-01-30"},{"lineNumber":181,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return The indices of the tasks to be marked as done. Invalid index is handled by mark in TaskList.","lastModifiedDate":"2024-02-05"},{"lineNumber":182,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws WrongFormatException If the command format is invalid.","lastModifiedDate":"2024-01-30"},{"lineNumber":183,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":184,"author":{"gitId":"Tanzhiheng26"},"content":"    public static int[] parseMark(String input) throws WrongFormatException {","lastModifiedDate":"2024-02-10"},{"lineNumber":185,"author":{"gitId":"Tanzhiheng26"},"content":"        boolean isValidMarkCommand \u003d Pattern.matches(\"mark(\\\\s\\\\d+)+\", input);","lastModifiedDate":"2024-02-09"},{"lineNumber":186,"author":{"gitId":"Tanzhiheng26"},"content":"        if (!isValidMarkCommand) {","lastModifiedDate":"2024-02-09"},{"lineNumber":187,"author":{"gitId":"Tanzhiheng26"},"content":"            throw new WrongFormatException(\"Invalid \u0027mark\u0027 command format. Usage: mark \u003cexisting task numbers\u003e\");","lastModifiedDate":"2024-02-05"},{"lineNumber":188,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":189,"author":{"gitId":"Tanzhiheng26"},"content":"        return extractTaskIndices(input);","lastModifiedDate":"2024-02-10"},{"lineNumber":190,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":191,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":192,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":193,"author":{"gitId":"Tanzhiheng26"},"content":"     * Parses an \u0027unmark\u0027 command from the user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":194,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":195,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-01-30"},{"lineNumber":196,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return The indices of the tasks to be marked as not done. Invalid index is handled by unmark in TaskList.","lastModifiedDate":"2024-02-05"},{"lineNumber":197,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws WrongFormatException If the command format is invalid.","lastModifiedDate":"2024-01-30"},{"lineNumber":198,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":199,"author":{"gitId":"Tanzhiheng26"},"content":"    public static int[] parseUnmark(String input) throws WrongFormatException {","lastModifiedDate":"2024-02-10"},{"lineNumber":200,"author":{"gitId":"Tanzhiheng26"},"content":"        boolean isValidUnmarkCommand \u003d Pattern.matches(\"unmark(\\\\s\\\\d+)+\", input);","lastModifiedDate":"2024-02-09"},{"lineNumber":201,"author":{"gitId":"Tanzhiheng26"},"content":"        if (!isValidUnmarkCommand) {","lastModifiedDate":"2024-02-09"},{"lineNumber":202,"author":{"gitId":"Tanzhiheng26"},"content":"            throw new WrongFormatException(\"Invalid \u0027unmark\u0027 command format. Usage: unmark \u003cexisting task numbers\u003e\");","lastModifiedDate":"2024-02-05"},{"lineNumber":203,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":204,"author":{"gitId":"Tanzhiheng26"},"content":"        return extractTaskIndices(input);","lastModifiedDate":"2024-02-10"},{"lineNumber":205,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":206,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":207,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":208,"author":{"gitId":"Tanzhiheng26"},"content":"     * Extracts task indices from a \u0027delete\u0027, \u0027mark\u0027, or \u0027unmark\u0027 command.","lastModifiedDate":"2024-02-16"},{"lineNumber":209,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":210,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-02-16"},{"lineNumber":211,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return The indices of the tasks to be deleted.","lastModifiedDate":"2024-02-16"},{"lineNumber":212,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":213,"author":{"gitId":"Tanzhiheng26"},"content":"    public static int[] extractTaskIndices(String input) {","lastModifiedDate":"2024-02-16"},{"lineNumber":214,"author":{"gitId":"Tanzhiheng26"},"content":"        String[] splitArray \u003d input.split(\"\\\\s\");","lastModifiedDate":"2024-02-16"},{"lineNumber":215,"author":{"gitId":"Tanzhiheng26"},"content":"        // First element in splitArray is the name of the command","lastModifiedDate":"2024-02-16"},{"lineNumber":216,"author":{"gitId":"Tanzhiheng26"},"content":"        String[] taskNumbers \u003d Arrays.copyOfRange(splitArray, 1, splitArray.length);","lastModifiedDate":"2024-02-16"},{"lineNumber":217,"author":{"gitId":"Tanzhiheng26"},"content":"        return Arrays.stream(taskNumbers).mapToInt(x -\u003e Integer.parseInt(x) - 1).toArray();","lastModifiedDate":"2024-02-16"},{"lineNumber":218,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":219,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":220,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":221,"author":{"gitId":"Tanzhiheng26"},"content":"     * Parses a \u0027find\u0027 command from the user input and extracts the keyword to search for.","lastModifiedDate":"2024-01-30"},{"lineNumber":222,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":223,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-01-30"},{"lineNumber":224,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return The keyword to search for in task descriptions.","lastModifiedDate":"2024-01-30"},{"lineNumber":225,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws WrongFormatException If the command format is invalid.","lastModifiedDate":"2024-01-30"},{"lineNumber":226,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":227,"author":{"gitId":"Tanzhiheng26"},"content":"    public static String parseFind(String input) throws WrongFormatException {","lastModifiedDate":"2024-01-30"},{"lineNumber":228,"author":{"gitId":"Tanzhiheng26"},"content":"        boolean isValidFindCommand \u003d Pattern.matches(\"find\\\\s\\\\S.*\", input);","lastModifiedDate":"2024-02-09"},{"lineNumber":229,"author":{"gitId":"Tanzhiheng26"},"content":"        if (!isValidFindCommand) {","lastModifiedDate":"2024-02-09"},{"lineNumber":230,"author":{"gitId":"Tanzhiheng26"},"content":"            throw new WrongFormatException(\"Invalid \u0027find\u0027 command format. Usage: find \u003ckeyword\u003e\");","lastModifiedDate":"2024-02-09"},{"lineNumber":231,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":232,"author":{"gitId":"Tanzhiheng26"},"content":"        return extractKeyword(input);","lastModifiedDate":"2024-02-09"},{"lineNumber":233,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":234,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":235,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":236,"author":{"gitId":"Tanzhiheng26"},"content":"     * Extracts the keyword from a \u0027find\u0027 command.","lastModifiedDate":"2024-02-10"},{"lineNumber":237,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":238,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-02-10"},{"lineNumber":239,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return The keyword to search for in task descriptions.","lastModifiedDate":"2024-02-10"},{"lineNumber":240,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":241,"author":{"gitId":"Tanzhiheng26"},"content":"    public static String extractKeyword(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":242,"author":{"gitId":"Tanzhiheng26"},"content":"        return input.split(\"\\\\s\", 2)[1];","lastModifiedDate":"2024-02-09"},{"lineNumber":243,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":244,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Tanzhiheng26":244}},{"path":"src/main/java/ezra/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package ezra;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":" * Handles the storage of tasks in a file.","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"public class Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"    protected String filepath;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param filepath The file path for storing tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"     * Writes the tasks from a TaskList to the storage file.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param taskList The TaskList containing tasks to be written to the file.","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"    public void writeToFile(TaskList taskList) throws IOException {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"        // Create data directory if it does not exist","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"        File directory \u003d new File(\"data\");","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"        directory.mkdir();","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"        // Create ezra.txt in data directory if it does not exist","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"        File f \u003d new File(\"data/ezra.txt\");","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Tanzhiheng26"},"content":"        f.createNewFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Tanzhiheng26"},"content":"        // Write tasks to ezra.txt","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Tanzhiheng26"},"content":"        FileWriter fw \u003d new FileWriter(f);","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Tanzhiheng26"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"Tanzhiheng26"},"content":"        for (Task t : taskList.tasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Tanzhiheng26"},"content":"            builder.append(t.toStorageString()).append(\"\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"Tanzhiheng26"},"content":"        fw.write(builder.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"Tanzhiheng26"},"content":"        fw.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Tanzhiheng26"},"content":"     * Loads the storage file.","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return The File object representing the storage file.","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Tanzhiheng26"},"content":"    public File load() {","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"Tanzhiheng26"},"content":"        return new File(filepath);","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Tanzhiheng26":56}},{"path":"src/main/java/ezra/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package ezra;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":" * Represents a generic task with a description and completion status.","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"    protected String description;","lastModifiedDate":"2024-01-20"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-20"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"     * Constructs a Task object with the specified description.","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-20"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-20"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-20"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"     * Gets the status icon for the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return \"X\" if the task is done, \" \" (space) otherwise.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-20"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-20"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"     * Returns a formatted string representation of the Task object for storage purposes.","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A formatted string suitable for storage, including the completion status and description.","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"    public abstract String toStorageString();","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"Tanzhiheng26"},"content":"    public abstract Task copy();","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"Tanzhiheng26":38}},{"path":"src/main/java/ezra/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package ezra;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"import java.io.File;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":" * Represents a collection of tasks and provides methods for managing them.","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"public class TaskList {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"    protected static final String LIST_MESSAGE_START \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"    protected static final String DELETE_MESSAGE_START \u003d \"I\u0027ve removed the following task(s):\";","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"    protected static final String MARK_MESSAGE_START \u003d \"I\u0027ve marked the following task(s) as done:\";","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"    protected static final String UNMARK_MESSAGE_START \u003d \"I\u0027ve marked the following task(s) as not done:\";","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"    protected static final String FIND_MESSAGE_START \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"    protected ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"    protected ArrayList\u003cTask\u003e prevTasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"     * Constructs a TaskList by reading tasks from a file.","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param f The file containing tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws FileNotFoundException If the specified file is not found.","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Tanzhiheng26"},"content":"    public TaskList(File f) throws FileNotFoundException, WrongFormatException {","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"Tanzhiheng26"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"Tanzhiheng26"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Tanzhiheng26"},"content":"            // Extract command, isDone and description from input","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Tanzhiheng26"},"content":"            String task \u003d s.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"Tanzhiheng26"},"content":"            String[] arr \u003d task.split(\" \\\\| \");","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"Tanzhiheng26"},"content":"            String command \u003d arr[0];","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"Tanzhiheng26"},"content":"            boolean isDone \u003d arr[1].equals(\"1\");","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"Tanzhiheng26"},"content":"            String description \u003d arr[2];","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Tanzhiheng26"},"content":"            switch (command) {","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"Tanzhiheng26"},"content":"            case \"T\":","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"Tanzhiheng26"},"content":"                ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"Tanzhiheng26"},"content":"                todo.isDone \u003d isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"Tanzhiheng26"},"content":"                this.tasks.add(todo);","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Tanzhiheng26"},"content":"                break;","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"Tanzhiheng26"},"content":"            case \"D\":","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"Tanzhiheng26"},"content":"                String by \u003d arr[3];","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"Tanzhiheng26"},"content":"                Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"Tanzhiheng26"},"content":"                deadline.isDone \u003d isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"Tanzhiheng26"},"content":"                this.tasks.add(deadline);","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"Tanzhiheng26"},"content":"                break;","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"Tanzhiheng26"},"content":"            case \"E\":","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"Tanzhiheng26"},"content":"                String from \u003d arr[3];","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"Tanzhiheng26"},"content":"                String to \u003d arr[4];","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"Tanzhiheng26"},"content":"                Event event \u003d new Event(description, from, to);","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"Tanzhiheng26"},"content":"                event.isDone \u003d isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"Tanzhiheng26"},"content":"                this.tasks.add(event);","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"Tanzhiheng26"},"content":"                break;","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"Tanzhiheng26"},"content":"            default:","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"Tanzhiheng26"},"content":"                throw new WrongFormatException(\"Cannot load task from file\");","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"Tanzhiheng26"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"Tanzhiheng26"},"content":"        this.prevTasks \u003d this.tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"Tanzhiheng26"},"content":"     * Lists all tasks in the TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A string representing the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"Tanzhiheng26"},"content":"    public String listTasks() {","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"Tanzhiheng26"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"Tanzhiheng26"},"content":"            return \"There are no tasks in your list.\";","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"Tanzhiheng26"},"content":"        StringBuilder message \u003d new StringBuilder(LIST_MESSAGE_START);","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"Tanzhiheng26"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"Tanzhiheng26"},"content":"            message.append(String.format(\"\\n%d. %s\", i + 1, this.tasks.get(i)));","lastModifiedDate":"2024-02-16"},{"lineNumber":86,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"Tanzhiheng26"},"content":"        return message.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"Tanzhiheng26"},"content":"     * Deletes the tasks corresponding to the give task numbers.","lastModifiedDate":"2024-02-06"},{"lineNumber":92,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param storage The storage object that updates the saved tasks.","lastModifiedDate":"2024-02-13"},{"lineNumber":94,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param taskIndices The array of task indices to be deleted.","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A message to be displayed after the delete operation.","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"Tanzhiheng26"},"content":"    public String delete(Storage storage, int... taskIndices) {","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"Tanzhiheng26"},"content":"        String invalidTaskNumbers \u003d getInvalidTaskNumbers(taskIndices);","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"Tanzhiheng26"},"content":"        this.prevTasks \u003d new ArrayList\u003c\u003e(this.tasks); // Save state before the tasks are deleted","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"Tanzhiheng26"},"content":"        String deletedTasks \u003d getDeletedTasks(taskIndices);","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"Tanzhiheng26"},"content":"        boolean hasDeletedTasks \u003d !deletedTasks.equals(DELETE_MESSAGE_START);","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":103,"author":{"gitId":"Tanzhiheng26"},"content":"        if (!hasDeletedTasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"Tanzhiheng26"},"content":"            return invalidTaskNumbers;","lastModifiedDate":"2024-02-10"},{"lineNumber":105,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":106,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"Tanzhiheng26"},"content":"        // Update tasks in storage","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"Tanzhiheng26"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"Tanzhiheng26"},"content":"            storage.writeToFile(this);","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"Tanzhiheng26"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"Tanzhiheng26"},"content":"            return String.format(\"Something went wrong: %s\", e.getMessage());","lastModifiedDate":"2024-02-16"},{"lineNumber":112,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"Tanzhiheng26"},"content":"        return invalidTaskNumbers + deletedTasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":114,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":115,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":116,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":117,"author":{"gitId":"Tanzhiheng26"},"content":"     * Returns a string representing the invalid task numbers.","lastModifiedDate":"2024-02-10"},{"lineNumber":118,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":119,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param taskIndices The array of task indices.","lastModifiedDate":"2024-02-10"},{"lineNumber":120,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A string containing information about invalid task numbers.","lastModifiedDate":"2024-02-10"},{"lineNumber":121,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":122,"author":{"gitId":"Tanzhiheng26"},"content":"    public String getInvalidTaskNumbers(int... taskIndices) {","lastModifiedDate":"2024-02-10"},{"lineNumber":123,"author":{"gitId":"Tanzhiheng26"},"content":"        StringBuilder invalidTaskNumbers \u003d new StringBuilder();","lastModifiedDate":"2024-02-10"},{"lineNumber":124,"author":{"gitId":"Tanzhiheng26"},"content":"        for (int taskIndex : taskIndices) {","lastModifiedDate":"2024-02-10"},{"lineNumber":125,"author":{"gitId":"Tanzhiheng26"},"content":"            // Check for invalid taskIndex","lastModifiedDate":"2024-02-10"},{"lineNumber":126,"author":{"gitId":"Tanzhiheng26"},"content":"            if (taskIndex \u003c 0 || taskIndex \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":127,"author":{"gitId":"Tanzhiheng26"},"content":"                invalidTaskNumbers.append(String.format(\"\\n%d is an invalid task number.\", taskIndex + 1));","lastModifiedDate":"2024-02-16"},{"lineNumber":128,"author":{"gitId":"Tanzhiheng26"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":129,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":130,"author":{"gitId":"Tanzhiheng26"},"content":"        return invalidTaskNumbers.toString();","lastModifiedDate":"2024-02-05"},{"lineNumber":131,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":134,"author":{"gitId":"Tanzhiheng26"},"content":"     * Returns a string representing the deleted tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":135,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":136,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param taskIndices The array of task indices.","lastModifiedDate":"2024-02-10"},{"lineNumber":137,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A string containing information about deleted tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":138,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":139,"author":{"gitId":"Tanzhiheng26"},"content":"    public String getDeletedTasks(int... taskIndices) {","lastModifiedDate":"2024-02-10"},{"lineNumber":140,"author":{"gitId":"Tanzhiheng26"},"content":"        StringBuilder deletedTasks \u003d new StringBuilder(DELETE_MESSAGE_START);","lastModifiedDate":"2024-02-10"},{"lineNumber":141,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":142,"author":{"gitId":"Tanzhiheng26"},"content":"        // Delete task numbers from largest to smallest so that there are no changes in task number after each deletion","lastModifiedDate":"2024-02-10"},{"lineNumber":143,"author":{"gitId":"Tanzhiheng26"},"content":"        Arrays.sort(taskIndices);","lastModifiedDate":"2024-02-10"},{"lineNumber":144,"author":{"gitId":"Tanzhiheng26"},"content":"        for (int i \u003d taskIndices.length - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2024-02-10"},{"lineNumber":145,"author":{"gitId":"Tanzhiheng26"},"content":"            int taskIndex \u003d taskIndices[i];","lastModifiedDate":"2024-02-10"},{"lineNumber":146,"author":{"gitId":"Tanzhiheng26"},"content":"            assert taskIndex \u003e\u003d -1 : \"taskNumber \u003e\u003d 0 so taskIndex \u003e\u003d -1\";","lastModifiedDate":"2024-02-10"},{"lineNumber":147,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":148,"author":{"gitId":"Tanzhiheng26"},"content":"            // Check for invalid taskIndex","lastModifiedDate":"2024-02-10"},{"lineNumber":149,"author":{"gitId":"Tanzhiheng26"},"content":"            if (taskIndex \u003c 0 || taskIndex \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":150,"author":{"gitId":"Tanzhiheng26"},"content":"                continue;","lastModifiedDate":"2024-02-10"},{"lineNumber":151,"author":{"gitId":"Tanzhiheng26"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":152,"author":{"gitId":"Tanzhiheng26"},"content":"            deletedTasks.append(\"\\n\").append(this.tasks.get(taskIndex));","lastModifiedDate":"2024-02-16"},{"lineNumber":153,"author":{"gitId":"Tanzhiheng26"},"content":"            this.tasks.remove(taskIndex);","lastModifiedDate":"2024-02-10"},{"lineNumber":154,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":155,"author":{"gitId":"Tanzhiheng26"},"content":"        return deletedTasks.toString();","lastModifiedDate":"2024-02-10"},{"lineNumber":156,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":157,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":158,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":159,"author":{"gitId":"Tanzhiheng26"},"content":"     * Updates the TaskList by adding a new task.","lastModifiedDate":"2024-01-30"},{"lineNumber":160,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":161,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param storage The storage object that updates the saved tasks.","lastModifiedDate":"2024-02-13"},{"lineNumber":162,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-06"},{"lineNumber":163,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A message to be displayed after adding the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":164,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":165,"author":{"gitId":"Tanzhiheng26"},"content":"    public String updateTasks(Storage storage, Task task) {","lastModifiedDate":"2024-02-06"},{"lineNumber":166,"author":{"gitId":"Tanzhiheng26"},"content":"        this.prevTasks \u003d new ArrayList\u003c\u003e(this.tasks); // Save state before the task is added","lastModifiedDate":"2024-02-10"},{"lineNumber":167,"author":{"gitId":"Tanzhiheng26"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-01-30"},{"lineNumber":168,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":169,"author":{"gitId":"Tanzhiheng26"},"content":"        // Update tasks in storage","lastModifiedDate":"2024-01-30"},{"lineNumber":170,"author":{"gitId":"Tanzhiheng26"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":171,"author":{"gitId":"Tanzhiheng26"},"content":"            storage.writeToFile(this);","lastModifiedDate":"2024-01-29"},{"lineNumber":172,"author":{"gitId":"Tanzhiheng26"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":173,"author":{"gitId":"Tanzhiheng26"},"content":"            return String.format(\"Something went wrong: %s\", e.getMessage());","lastModifiedDate":"2024-02-16"},{"lineNumber":174,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":175,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":176,"author":{"gitId":"Tanzhiheng26"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2024-02-16"},{"lineNumber":177,"author":{"gitId":"Tanzhiheng26"},"content":"                task, this.tasks.size());","lastModifiedDate":"2024-02-10"},{"lineNumber":178,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":179,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":180,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":181,"author":{"gitId":"Tanzhiheng26"},"content":"     * Marks the tasks corresponding to the give task numbers as done.","lastModifiedDate":"2024-02-06"},{"lineNumber":182,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":183,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param storage The storage object that updates the saved tasks.","lastModifiedDate":"2024-02-13"},{"lineNumber":184,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param taskIndices The array of task indices to be marked as done.","lastModifiedDate":"2024-02-10"},{"lineNumber":185,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A message to be displayed after marking the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":186,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":187,"author":{"gitId":"Tanzhiheng26"},"content":"    public String mark(Storage storage, int... taskIndices) {","lastModifiedDate":"2024-02-10"},{"lineNumber":188,"author":{"gitId":"Tanzhiheng26"},"content":"        String invalidTaskNumbers \u003d getInvalidTaskNumbers(taskIndices);","lastModifiedDate":"2024-02-10"},{"lineNumber":189,"author":{"gitId":"Tanzhiheng26"},"content":"        // Save state before the tasks are marked","lastModifiedDate":"2024-02-10"},{"lineNumber":190,"author":{"gitId":"Tanzhiheng26"},"content":"        this.prevTasks \u003d this.tasks.stream().map(Task::copy).collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2024-02-10"},{"lineNumber":191,"author":{"gitId":"Tanzhiheng26"},"content":"        String markedTasks \u003d getMarkedTasks(taskIndices);","lastModifiedDate":"2024-02-10"},{"lineNumber":192,"author":{"gitId":"Tanzhiheng26"},"content":"        boolean hasMarkedTasks \u003d !markedTasks.equals(MARK_MESSAGE_START);","lastModifiedDate":"2024-02-10"},{"lineNumber":193,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":194,"author":{"gitId":"Tanzhiheng26"},"content":"        if (!hasMarkedTasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":195,"author":{"gitId":"Tanzhiheng26"},"content":"            return invalidTaskNumbers;","lastModifiedDate":"2024-02-10"},{"lineNumber":196,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":197,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":198,"author":{"gitId":"Tanzhiheng26"},"content":"        // Update tasks in storage","lastModifiedDate":"2024-01-30"},{"lineNumber":199,"author":{"gitId":"Tanzhiheng26"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":200,"author":{"gitId":"Tanzhiheng26"},"content":"            storage.writeToFile(this);","lastModifiedDate":"2024-01-29"},{"lineNumber":201,"author":{"gitId":"Tanzhiheng26"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":202,"author":{"gitId":"Tanzhiheng26"},"content":"            return String.format(\"Something went wrong: %s\", e.getMessage());","lastModifiedDate":"2024-02-16"},{"lineNumber":203,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":204,"author":{"gitId":"Tanzhiheng26"},"content":"        return invalidTaskNumbers + markedTasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":205,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":206,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":207,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":208,"author":{"gitId":"Tanzhiheng26"},"content":"     * Returns a string representing the marked tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":209,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":210,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param taskIndices The array of task indices.","lastModifiedDate":"2024-02-10"},{"lineNumber":211,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A string containing information about marked tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":212,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":213,"author":{"gitId":"Tanzhiheng26"},"content":"    public String getMarkedTasks(int... taskIndices) {","lastModifiedDate":"2024-02-10"},{"lineNumber":214,"author":{"gitId":"Tanzhiheng26"},"content":"        StringBuilder markedTasks \u003d new StringBuilder(MARK_MESSAGE_START);","lastModifiedDate":"2024-02-10"},{"lineNumber":215,"author":{"gitId":"Tanzhiheng26"},"content":"        for (int taskIndex : taskIndices) {","lastModifiedDate":"2024-02-10"},{"lineNumber":216,"author":{"gitId":"Tanzhiheng26"},"content":"            assert taskIndex \u003e\u003d -1 : \"taskNumber \u003e\u003d 0 so taskIndex \u003e\u003d -1\";","lastModifiedDate":"2024-02-10"},{"lineNumber":217,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":218,"author":{"gitId":"Tanzhiheng26"},"content":"            // Check for invalid taskIndex","lastModifiedDate":"2024-02-10"},{"lineNumber":219,"author":{"gitId":"Tanzhiheng26"},"content":"            if (taskIndex \u003c 0 || taskIndex \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":220,"author":{"gitId":"Tanzhiheng26"},"content":"                continue;","lastModifiedDate":"2024-02-10"},{"lineNumber":221,"author":{"gitId":"Tanzhiheng26"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":222,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":223,"author":{"gitId":"Tanzhiheng26"},"content":"            this.tasks.get(taskIndex).isDone \u003d true;","lastModifiedDate":"2024-02-10"},{"lineNumber":224,"author":{"gitId":"Tanzhiheng26"},"content":"            markedTasks.append(\"\\n\").append(this.tasks.get(taskIndex));","lastModifiedDate":"2024-02-16"},{"lineNumber":225,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":226,"author":{"gitId":"Tanzhiheng26"},"content":"        return markedTasks.toString();","lastModifiedDate":"2024-02-10"},{"lineNumber":227,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":228,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":229,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":230,"author":{"gitId":"Tanzhiheng26"},"content":"     * Marks the tasks corresponding to the give task numbers as not done.","lastModifiedDate":"2024-02-06"},{"lineNumber":231,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":232,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param taskIndices The array of task indices to be marked as not done.","lastModifiedDate":"2024-02-10"},{"lineNumber":233,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param storage The storage object that updates the saved tasks.","lastModifiedDate":"2024-02-13"},{"lineNumber":234,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A message to be displayed after unmarking the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":235,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":236,"author":{"gitId":"Tanzhiheng26"},"content":"    public String unmark(Storage storage, int... taskIndices) {","lastModifiedDate":"2024-02-10"},{"lineNumber":237,"author":{"gitId":"Tanzhiheng26"},"content":"        String invalidTaskNumbers \u003d getInvalidTaskNumbers(taskIndices);","lastModifiedDate":"2024-02-10"},{"lineNumber":238,"author":{"gitId":"Tanzhiheng26"},"content":"        // Save state before the tasks are unmarked","lastModifiedDate":"2024-02-10"},{"lineNumber":239,"author":{"gitId":"Tanzhiheng26"},"content":"        this.prevTasks \u003d this.tasks.stream().map(Task::copy).collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2024-02-10"},{"lineNumber":240,"author":{"gitId":"Tanzhiheng26"},"content":"        String unmarkedTasks \u003d getUnmarkedTasks(taskIndices);","lastModifiedDate":"2024-02-10"},{"lineNumber":241,"author":{"gitId":"Tanzhiheng26"},"content":"        boolean hasUnmarkedTasks \u003d !unmarkedTasks.equals(UNMARK_MESSAGE_START);","lastModifiedDate":"2024-02-10"},{"lineNumber":242,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":243,"author":{"gitId":"Tanzhiheng26"},"content":"        if (!hasUnmarkedTasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":244,"author":{"gitId":"Tanzhiheng26"},"content":"            return invalidTaskNumbers;","lastModifiedDate":"2024-02-10"},{"lineNumber":245,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":246,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":247,"author":{"gitId":"Tanzhiheng26"},"content":"        // Update tasks in storage","lastModifiedDate":"2024-01-30"},{"lineNumber":248,"author":{"gitId":"Tanzhiheng26"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":249,"author":{"gitId":"Tanzhiheng26"},"content":"            storage.writeToFile(this);","lastModifiedDate":"2024-01-29"},{"lineNumber":250,"author":{"gitId":"Tanzhiheng26"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":251,"author":{"gitId":"Tanzhiheng26"},"content":"            return String.format(\"Something went wrong: %s\", e.getMessage());","lastModifiedDate":"2024-02-16"},{"lineNumber":252,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":253,"author":{"gitId":"Tanzhiheng26"},"content":"        return invalidTaskNumbers + unmarkedTasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":254,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":255,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":256,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":257,"author":{"gitId":"Tanzhiheng26"},"content":"     * Returns a string representing the unmarked tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":258,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":259,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param taskIndices The array of task indices.","lastModifiedDate":"2024-02-10"},{"lineNumber":260,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A string containing information about unmarked tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":261,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":262,"author":{"gitId":"Tanzhiheng26"},"content":"    public String getUnmarkedTasks(int... taskIndices) {","lastModifiedDate":"2024-02-10"},{"lineNumber":263,"author":{"gitId":"Tanzhiheng26"},"content":"        StringBuilder unmarkedTasks \u003d new StringBuilder(UNMARK_MESSAGE_START);","lastModifiedDate":"2024-02-10"},{"lineNumber":264,"author":{"gitId":"Tanzhiheng26"},"content":"        for (int taskIndex : taskIndices) {","lastModifiedDate":"2024-02-10"},{"lineNumber":265,"author":{"gitId":"Tanzhiheng26"},"content":"            assert taskIndex \u003e\u003d -1 : \"taskNumber \u003e\u003d 0 so taskIndex \u003e\u003d -1\";","lastModifiedDate":"2024-02-10"},{"lineNumber":266,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":267,"author":{"gitId":"Tanzhiheng26"},"content":"            // Check for invalid taskIndex","lastModifiedDate":"2024-02-10"},{"lineNumber":268,"author":{"gitId":"Tanzhiheng26"},"content":"            if (taskIndex \u003c 0 || taskIndex \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":269,"author":{"gitId":"Tanzhiheng26"},"content":"                continue;","lastModifiedDate":"2024-02-10"},{"lineNumber":270,"author":{"gitId":"Tanzhiheng26"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":271,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":272,"author":{"gitId":"Tanzhiheng26"},"content":"            this.tasks.get(taskIndex).isDone \u003d false;","lastModifiedDate":"2024-02-10"},{"lineNumber":273,"author":{"gitId":"Tanzhiheng26"},"content":"            unmarkedTasks.append(\"\\n\").append(this.tasks.get(taskIndex));","lastModifiedDate":"2024-02-16"},{"lineNumber":274,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":275,"author":{"gitId":"Tanzhiheng26"},"content":"        return unmarkedTasks.toString();","lastModifiedDate":"2024-02-10"},{"lineNumber":276,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":277,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":278,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":279,"author":{"gitId":"Tanzhiheng26"},"content":"     * Finds tasks in the TaskList that contain the specified keyword in their descriptions.","lastModifiedDate":"2024-01-30"},{"lineNumber":280,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":281,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2024-01-30"},{"lineNumber":282,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A string representing the matching tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":283,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":284,"author":{"gitId":"Tanzhiheng26"},"content":"    public String find(String keyword) {","lastModifiedDate":"2024-02-03"},{"lineNumber":285,"author":{"gitId":"Tanzhiheng26"},"content":"        ArrayList\u003cInteger\u003e matchingTaskIndices \u003d getMatchingTaskIndices(keyword);","lastModifiedDate":"2024-02-10"},{"lineNumber":286,"author":{"gitId":"Tanzhiheng26"},"content":"        return getMatchingTasks(matchingTaskIndices);","lastModifiedDate":"2024-02-10"},{"lineNumber":287,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":288,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":289,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":290,"author":{"gitId":"Tanzhiheng26"},"content":"     * Returns a list of task indices matching the given keyword.","lastModifiedDate":"2024-02-10"},{"lineNumber":291,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":292,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2024-02-10"},{"lineNumber":293,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return An ArrayList of Integer containing matching task indices.","lastModifiedDate":"2024-02-10"},{"lineNumber":294,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":295,"author":{"gitId":"Tanzhiheng26"},"content":"    public ArrayList\u003cInteger\u003e getMatchingTaskIndices(String keyword) {","lastModifiedDate":"2024-02-10"},{"lineNumber":296,"author":{"gitId":"Tanzhiheng26"},"content":"        ArrayList\u003cInteger\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-10"},{"lineNumber":297,"author":{"gitId":"Tanzhiheng26"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":298,"author":{"gitId":"Tanzhiheng26"},"content":"            if (this.tasks.get(i).description.contains(keyword)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":299,"author":{"gitId":"Tanzhiheng26"},"content":"                matchingTasks.add(i);","lastModifiedDate":"2024-01-30"},{"lineNumber":300,"author":{"gitId":"Tanzhiheng26"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":301,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":302,"author":{"gitId":"Tanzhiheng26"},"content":"        return matchingTasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":303,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":304,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":305,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":306,"author":{"gitId":"Tanzhiheng26"},"content":"     * Returns a string representing the matching tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":307,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":308,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param matchingTaskIndices The list of task indices that match the keyword.","lastModifiedDate":"2024-02-10"},{"lineNumber":309,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A string containing information about matching tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":310,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":311,"author":{"gitId":"Tanzhiheng26"},"content":"    public String getMatchingTasks(ArrayList\u003cInteger\u003e matchingTaskIndices) {","lastModifiedDate":"2024-02-10"},{"lineNumber":312,"author":{"gitId":"Tanzhiheng26"},"content":"        if (matchingTaskIndices.isEmpty()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":313,"author":{"gitId":"Tanzhiheng26"},"content":"            return \"There are no matching tasks in your list.\";","lastModifiedDate":"2024-02-10"},{"lineNumber":314,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":315,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":316,"author":{"gitId":"Tanzhiheng26"},"content":"        StringBuilder message \u003d new StringBuilder(FIND_MESSAGE_START);","lastModifiedDate":"2024-02-10"},{"lineNumber":317,"author":{"gitId":"Tanzhiheng26"},"content":"        for (Integer i : matchingTaskIndices) {","lastModifiedDate":"2024-02-10"},{"lineNumber":318,"author":{"gitId":"Tanzhiheng26"},"content":"            message.append(String.format(\"\\n%d. %s\", i + 1, this.tasks.get(i)));","lastModifiedDate":"2024-02-16"},{"lineNumber":319,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":320,"author":{"gitId":"Tanzhiheng26"},"content":"        return message.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":321,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":322,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":323,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":324,"author":{"gitId":"Tanzhiheng26"},"content":"     * Undoes the previous command by restoring the tasks to their previous state.","lastModifiedDate":"2024-02-13"},{"lineNumber":325,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":326,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param storage The storage object that updates the saved tasks.","lastModifiedDate":"2024-02-13"},{"lineNumber":327,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A message indicating the result of the undo operation.","lastModifiedDate":"2024-02-13"},{"lineNumber":328,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":329,"author":{"gitId":"Tanzhiheng26"},"content":"    public String undo(Storage storage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":330,"author":{"gitId":"Tanzhiheng26"},"content":"        this.tasks \u003d this.prevTasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":331,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":332,"author":{"gitId":"Tanzhiheng26"},"content":"        // Update tasks in storage","lastModifiedDate":"2024-02-10"},{"lineNumber":333,"author":{"gitId":"Tanzhiheng26"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":334,"author":{"gitId":"Tanzhiheng26"},"content":"            storage.writeToFile(this);","lastModifiedDate":"2024-02-10"},{"lineNumber":335,"author":{"gitId":"Tanzhiheng26"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":336,"author":{"gitId":"Tanzhiheng26"},"content":"            return String.format(\"Something went wrong: %s\", e.getMessage());","lastModifiedDate":"2024-02-16"},{"lineNumber":337,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":338,"author":{"gitId":"Tanzhiheng26"},"content":"        return \"Your previous command has been undone.\";","lastModifiedDate":"2024-02-10"},{"lineNumber":339,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":340,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":341,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Tanzhiheng26":341}},{"path":"src/main/java/ezra/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package ezra;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":" * Represents a simple to-do task without a specific deadline or start/end time.","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"     * Constructs a ToDo object with the specified description.","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-20"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"        super(description);","lastModifiedDate":"2024-01-20"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"     * Returns a formatted string representation of the ToDo object to display to the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A formatted string including task type, status, and description.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"        return String.format(\"[T][%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2024-01-20"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"     * Returns a formatted string representation of the ToDo object for storage purposes.","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A formatted string suitable for storage, including task type, status, and description.","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"    public String toStorageString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"        return String.format(\"T | %d | %s\", this.isDone ? 1 : 0, this.description);","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Tanzhiheng26"},"content":"     * Checks if this ToDo object is equal to another object.","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param o The object to compare to.","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Tanzhiheng26"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"Tanzhiheng26"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"Tanzhiheng26"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Tanzhiheng26"},"content":"            return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"Tanzhiheng26"},"content":"        if (!(o instanceof ToDo)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Tanzhiheng26"},"content":"            return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"Tanzhiheng26"},"content":"        ToDo t \u003d (ToDo) o;","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Tanzhiheng26"},"content":"        return this.description.equals(t.description);","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"Tanzhiheng26"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"Tanzhiheng26"},"content":"    public ToDo copy() {","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"Tanzhiheng26"},"content":"        ToDo copy \u003d new ToDo(this.description);","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"Tanzhiheng26"},"content":"        copy.isDone \u003d this.isDone;","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"Tanzhiheng26"},"content":"        return copy;","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"Tanzhiheng26":61}},{"path":"src/main/java/ezra/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package ezra;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":" * Represents the user interface for the Ezra task management application.","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"public class Ui {","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"     * Prints a horizontal line to the console.","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"    public static void horizontalLine() {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"     * Displays a greeting message to the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"    public static void greet() {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"        Ui.horizontalLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"        System.out.println(\"Hello! I\u0027m Ezra.\\nWhat can I do for you?\");","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"        Ui.horizontalLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Tanzhiheng26":23}},{"path":"src/main/java/ezra/WrongFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package ezra;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":" * Exception thrown when there is an incorrect format in user input commands.","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"public class WrongFormatException extends Exception {","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"     * Constructs a WrongFormatException with the specified error message.","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param message The error message describing the incorrect format.","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"    public WrongFormatException(String message) {","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"        super(message);","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"Tanzhiheng26":16}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package gui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.paint.Paint;","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.text.TextFlow;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":" * A custom JavaFX control representing a dialog box with an ImageView for the speaker\u0027s face and a label for text.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"    private TextFlow dialogTextFlow;","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"    private Text dialogText;","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"     * Constructs a DialogBox with the specified text and image.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param text The text content of the dialog box.","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param img  The image to be displayed in the dialog box.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Tanzhiheng26"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Tanzhiheng26"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Tanzhiheng26"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Tanzhiheng26"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Tanzhiheng26"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Tanzhiheng26"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Tanzhiheng26"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Tanzhiheng26"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Tanzhiheng26"},"content":"        dialogText.setText(text);","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Tanzhiheng26"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Tanzhiheng26"},"content":"        // Set a circular clip for the displayPicture","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Tanzhiheng26"},"content":"        Circle clipCircle \u003d new Circle();","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Tanzhiheng26"},"content":"        // fitHeight and fitWidth are ImageView properties set in DialogBox.fxml","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Tanzhiheng26"},"content":"        clipCircle.setRadius(displayPicture.getFitWidth() / 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Tanzhiheng26"},"content":"        clipCircle.setCenterX(displayPicture.getFitWidth() / 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Tanzhiheng26"},"content":"        clipCircle.setCenterY(displayPicture.getFitHeight() / 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Tanzhiheng26"},"content":"        displayPicture.setClip(clipCircle);","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Tanzhiheng26"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Tanzhiheng26"},"content":"    private void flip() {","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"Tanzhiheng26"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"Tanzhiheng26"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"Tanzhiheng26"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"Tanzhiheng26"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"Tanzhiheng26"},"content":"     * Creates a DialogBox for user messages.","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param text The text content of the user\u0027s message.","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param img  The image representing the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A DialogBox instance for user messages.","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"Tanzhiheng26"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"Tanzhiheng26"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"Tanzhiheng26"},"content":"        db.setStyle(\"-fx-background-color: #E8DAEF;\");","lastModifiedDate":"2024-02-16"},{"lineNumber":81,"author":{"gitId":"Tanzhiheng26"},"content":"        return db;","lastModifiedDate":"2024-02-16"},{"lineNumber":82,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"Tanzhiheng26"},"content":"     * Creates a DialogBox for Ezra\u0027s messages, flipping it to display the image on the left.","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param text The text content of Ezra\u0027s message.","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param img  The image representing Ezra.","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A DialogBox instance for Ezra\u0027s messages.","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"Tanzhiheng26"},"content":"    public static DialogBox getEzraDialog(String text, Image img) {","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"Tanzhiheng26"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"Tanzhiheng26"},"content":"        db.flip();","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"Tanzhiheng26"},"content":"        db.setStyle(\"-fx-background-color: #D6EAF8;\");","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"Tanzhiheng26"},"content":"        if (text.startsWith(\"Invalid\") || text.startsWith(\"Date time must be in this format:\")) {","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"Tanzhiheng26"},"content":"            db.dialogText.setFill(Paint.valueOf(\"red\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":97,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":98,"author":{"gitId":"Tanzhiheng26"},"content":"        return db;","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Tanzhiheng26":100}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package gui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"public class Launcher {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"     * The main method to launch the JavaFX application.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param args Command-line arguments.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Tanzhiheng26":18}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package gui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"import ezra.Ezra;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":" * The main class for the GUI application of Ezra using FXML.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"    private Ezra ezra \u003d new Ezra(\"data/ezra.txt\");","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"     * The main entry point for the application.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param stage The primary stage for the application.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setEzra(ezra);","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"            stage.setResizable(false);","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"            stage.setTitle(\"Ezra\");","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"            stage.show();","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Tanzhiheng26"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Tanzhiheng26":39}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package gui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"import ezra.Ezra;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":" * Controller for MainWindow, providing the layout for the other controls.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"    private Ezra ezra;","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"    private Image ezraImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Ezra.png\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"     * Displays greeting message and scrolls down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"Tanzhiheng26"},"content":"                DialogBox.getEzraDialog(\"Hello! I\u0027m Ezra.\\nWhat can I do for you?\", ezraImage)","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"Tanzhiheng26"},"content":"        );","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Tanzhiheng26"},"content":"     * Sets the Ezra instance for the controller.","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param e The Ezra instance to set.","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Tanzhiheng26"},"content":"    public void setEzra(Ezra e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Tanzhiheng26"},"content":"        ezra \u003d e;","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Tanzhiheng26"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Tanzhiheng26"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Tanzhiheng26"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Tanzhiheng26"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Tanzhiheng26"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Tanzhiheng26"},"content":"        String response \u003d ezra.getResponse(input);","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Tanzhiheng26"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Tanzhiheng26"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Tanzhiheng26"},"content":"                DialogBox.getEzraDialog(response, ezraImage)","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"Tanzhiheng26"},"content":"        );","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Tanzhiheng26"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Tanzhiheng26":64}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"        \u003cTextFlow fx:id\u003d\"dialogTextFlow\" prefWidth\u003d\"300.0\" style\u003d\"-fx-border-radius: 10.0; -fx-background-radius: 10.0; -fx-background-color: #F2F3F4;\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"            \u003cText fx:id\u003d\"dialogText\" style\u003d\"-fx-font-family: \u0027Arial\u0027; -fx-font-size: 14.0;\"\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"            \u003c/Text\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"                \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"        \u003c/TextFlow\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"80.0\" fitWidth\u003d\"80.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"             \u003cHBox.margin\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"                \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"             \u003c/HBox.margin\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Tanzhiheng26":30}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"            fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Tanzhiheng26":24}},{"path":"src/test/java/ezra/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package ezra;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":" * Tests for the {@link Deadline} class.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link Deadline#toString()} method.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"    public void testToString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"        Deadline deadline1 \u003d new Deadline(\"Return book\", \"29/01/2024 1800\");","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"        String expectedString1 \u003d \"[D][ ] Return book (by: 29 Jan 2024 06:00 PM)\";","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(expectedString1, deadline1.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"        Deadline deadline2 \u003d new Deadline(\"Finish assignment\", \"01/02/2024 0000\");","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"        String expectedString2 \u003d \"[D][ ] Finish assignment (by: 01 Feb 2024 12:00 AM)\";","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(expectedString2, deadline2.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link Deadline#toStorageString()} method.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"    public void testToStorageString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"        Deadline deadline1 \u003d new Deadline(\"Return book\", \"29/01/2024 1800\");","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"        String expectedString1 \u003d \"D | 0 | Return book | 29/01/2024 1800\";","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(expectedString1, deadline1.toStorageString());","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"Tanzhiheng26"},"content":"        Deadline deadline2 \u003d new Deadline(\"Finish assignment\", \"01/02/2024 0000\");","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Tanzhiheng26"},"content":"        String expectedString2 \u003d \"D | 0 | Finish assignment | 01/02/2024 0000\";","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(expectedString2, deadline2.toStorageString());","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link Deadline#equals(Object)} method.","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"Tanzhiheng26"},"content":"    public void testEquals() {","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"Tanzhiheng26"},"content":"        Deadline deadline \u003d new Deadline(\"Return book\", \"29/01/2024 1800\");","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"Tanzhiheng26"},"content":"        Deadline sameDescriptionAndBy \u003d new Deadline(\"Return book\", \"29/01/2024 1800\");","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"Tanzhiheng26"},"content":"        Deadline differentBy \u003d new Deadline(\"Return book\", \"30/01/2024 1800\");","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"Tanzhiheng26"},"content":"        Deadline differentDescription \u003d new Deadline(\"Return books\", \"29/01/2024 1800\");","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(deadline, sameDescriptionAndBy);","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"Tanzhiheng26"},"content":"        assertNotEquals(deadline, differentBy);","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"Tanzhiheng26"},"content":"        assertNotEquals(deadline, differentDescription);","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"Tanzhiheng26"},"content":"        assertNotEquals(differentBy, differentDescription);","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Tanzhiheng26":56}},{"path":"src/test/java/ezra/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package ezra;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":" * Tests for the {@link Event} class.","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"public class EventTest {","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link Event#toString()} method.","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"    public void testToString() {","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"        Event event1 \u003d new Event(\"CS2103T briefing\", \"16/02/2024 1600\", \"16/02/2024 1700\");","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"        String expectedString1 \u003d \"[E][ ] CS2103T briefing (from: 16 Feb 2024 04:00 PM to: 16 Feb 2024 05:00 PM)\";","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(expectedString1, event1.toString());","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"        Event event2 \u003d new Event(\"project meeting\", \"18/02/2024 2100\", \"18/02/2024 2200\");","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"        String expectedString2 \u003d \"[E][ ] project meeting (from: 18 Feb 2024 09:00 PM to: 18 Feb 2024 10:00 PM)\";","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(expectedString2, event2.toString());","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link Event#toStorageString()} method.","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"    public void testToStorageString() {","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"        Event event1 \u003d new Event(\"CS2103T briefing\", \"16/02/2024 1600\", \"16/02/2024 1700\");","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"        String expectedString1 \u003d \"E | 0 | CS2103T briefing | 16/02/2024 1600 | 16/02/2024 1700\";","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(expectedString1, event1.toStorageString());","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"Tanzhiheng26"},"content":"        Event event2 \u003d new Event(\"project meeting\", \"18/02/2024 2100\", \"18/02/2024 2200\");","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"Tanzhiheng26"},"content":"        String expectedString2 \u003d \"E | 0 | project meeting | 18/02/2024 2100 | 18/02/2024 2200\";","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(expectedString2, event2.toStorageString());","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link Event#equals(Object)} method.","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"Tanzhiheng26"},"content":"    public void testEquals() {","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"Tanzhiheng26"},"content":"        Event event \u003d new Event(\"CS2103T briefing\", \"16/02/2024 1600\", \"16/02/2024 1700\");","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"Tanzhiheng26"},"content":"        Event sameFields \u003d new Event(\"CS2103T briefing\", \"16/02/2024 1600\", \"16/02/2024 1700\");","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"Tanzhiheng26"},"content":"        Event differentFrom \u003d new Event(\"CS2103T briefing\", \"16/02/2024 1500\", \"16/02/2024 1700\");","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"Tanzhiheng26"},"content":"        Event differentTo \u003d new Event(\"CS2103T briefing\", \"16/02/2024 1600\", \"17/02/2024 1700\");","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"Tanzhiheng26"},"content":"        Event differentDescription \u003d new Event(","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"Tanzhiheng26"},"content":"                \"CS2103T lecture\", \"16/02/2024 1600\", \"16/02/2024 1700\");","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(event, sameFields);","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"Tanzhiheng26"},"content":"        assertNotEquals(event, differentFrom);","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"Tanzhiheng26"},"content":"        assertNotEquals(event, differentTo);","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"Tanzhiheng26"},"content":"        assertNotEquals(event, differentDescription);","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"Tanzhiheng26":59}},{"path":"src/test/java/ezra/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package ezra;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":" * Tests for the {@link Parser} class.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link Parser#parseToDo(String)} method.","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws WrongFormatException if the input has an unexpected format","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"    public void testParseToDo() throws WrongFormatException {","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(new ToDo(\"return books\"), Parser.parseToDo(\"todo return books\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"        // Missing description","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e Parser.parseToDo(\"todo\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e Parser.parseToDo(\"todo \"));","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link Parser#extractToDoDescription(String)} method.","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"    public void testExtractToDoDescription() {","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(\"return books\", Parser.extractToDoDescription(\"todo return books\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(\"buy groceries\", Parser.extractToDoDescription(\"todo buy groceries\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(\"submit CS2103T ip\", Parser.extractToDoDescription(\"todo submit CS2103T ip\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link Parser#parseDeadline(String)} method.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws WrongFormatException if the input has an unexpected format","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"Tanzhiheng26"},"content":"    public void testParseDeadline() throws WrongFormatException {","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(new Deadline(\"return books\", \"29/01/2024 1800\"),","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.parseDeadline(\"deadline return books /by 29/01/2024 1800\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"Tanzhiheng26"},"content":"        // Missing description","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e Parser.parseDeadline(\"deadline /by 29/01/24 1800\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"Tanzhiheng26"},"content":"        // Missing deadline","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e Parser.parseDeadline(\"deadline return books\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e Parser.parseDeadline(\"deadline return books /by\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"Tanzhiheng26"},"content":"        // No \"/\" before by","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.parseDeadline(\"deadline return books by 29/01/24 1800\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link Parser#extractDeadlineDescription(String)} method.","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"Tanzhiheng26"},"content":"    public void testExtractDeadlineDescription() {","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(\"return books\",","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.extractDeadlineDescription(\"deadline return books /by 29/01/2024 1800\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(\"submit assignment\",","lastModifiedDate":"2024-02-16"},{"lineNumber":66,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.extractDeadlineDescription(\"deadline submit assignment /by 16/02/2024 1200\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":67,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":68,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link Parser#extractDeadlineBy(String)} method.","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"Tanzhiheng26"},"content":"    public void testExtractDeadlineBy() {","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(\"29/01/2024 1800\",","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.extractDeadlineBy(\"deadline return books /by 29/01/2024 1800\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":76,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(\"16/02/2024 1200\",","lastModifiedDate":"2024-02-16"},{"lineNumber":77,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.extractDeadlineBy(\"deadline submit assignment /by 16/02/2024 1200\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":78,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":81,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link Parser#parseEvent(String)} method","lastModifiedDate":"2024-02-16"},{"lineNumber":82,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws WrongFormatException if the input has an unexpected format","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"Tanzhiheng26"},"content":"    public void testParseEvent() throws WrongFormatException {","lastModifiedDate":"2024-02-16"},{"lineNumber":87,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(new Event(\"CS2103T briefing\", \"16/02/2024 1600\", \"16/02/2024 1700\"),","lastModifiedDate":"2024-02-16"},{"lineNumber":88,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.parseEvent(\"event CS2103T briefing /from 16/02/2024 1600 /to 16/02/2024 1700\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":89,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":90,"author":{"gitId":"Tanzhiheng26"},"content":"        // Missing description","lastModifiedDate":"2024-02-16"},{"lineNumber":91,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.parseEvent(\"event /from 16/02/2024 1600 /to 16/02/2024 1700\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":93,"author":{"gitId":"Tanzhiheng26"},"content":"        // Missing to","lastModifiedDate":"2024-02-16"},{"lineNumber":94,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.parseEvent(\"event CS2103T briefing /from 16/02/2024 1600 /to\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":96,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.parseEvent(\"event CS2103T briefing /from 16/02/2024 1600\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":98,"author":{"gitId":"Tanzhiheng26"},"content":"        // Missing from","lastModifiedDate":"2024-02-16"},{"lineNumber":99,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.parseEvent(\"event CS2103T briefing /to 16/02/2024 1700\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":101,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":102,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":103,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":104,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link Parser#extractEventDescription(String)} method","lastModifiedDate":"2024-02-16"},{"lineNumber":105,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":106,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":107,"author":{"gitId":"Tanzhiheng26"},"content":"    public void testExtractEventDescription() {","lastModifiedDate":"2024-02-16"},{"lineNumber":108,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(\"CS2103T briefing\",","lastModifiedDate":"2024-02-16"},{"lineNumber":109,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.extractEventDescription(","lastModifiedDate":"2024-02-16"},{"lineNumber":110,"author":{"gitId":"Tanzhiheng26"},"content":"                        \"event CS2103T briefing /from 16/02/2024 1600 /to 16/02/2024 1700\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":111,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(\"project meeting\",","lastModifiedDate":"2024-02-16"},{"lineNumber":112,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.extractEventDescription(","lastModifiedDate":"2024-02-16"},{"lineNumber":113,"author":{"gitId":"Tanzhiheng26"},"content":"                        \"event project meeting /from 18/02/2024 2100 /to 18/02/2024 2200\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":114,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":115,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":116,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":117,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link Parser#extractEventFrom(String)} method","lastModifiedDate":"2024-02-16"},{"lineNumber":118,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":119,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":120,"author":{"gitId":"Tanzhiheng26"},"content":"    public void testExtractEventFrom() {","lastModifiedDate":"2024-02-16"},{"lineNumber":121,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(\"16/02/2024 1600\",","lastModifiedDate":"2024-02-16"},{"lineNumber":122,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.extractEventFrom(\"event CS2103T briefing /from 16/02/2024 1600 /to 16/02/2024 1700\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":123,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(\"18/02/2024 2100\",","lastModifiedDate":"2024-02-16"},{"lineNumber":124,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.extractEventFrom(\"event project meeting /from 18/02/2024 2100 /to 18/02/2024 2200\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":125,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":126,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":127,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":128,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link Parser#extractEventTo(String)} method","lastModifiedDate":"2024-02-16"},{"lineNumber":129,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":130,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":131,"author":{"gitId":"Tanzhiheng26"},"content":"    public void testExtractEventTo() {","lastModifiedDate":"2024-02-16"},{"lineNumber":132,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(\"16/02/2024 1700\",","lastModifiedDate":"2024-02-16"},{"lineNumber":133,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.extractEventTo(\"event CS2103T briefing /from 16/02/2024 1600 /to 16/02/2024 1700\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":134,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(\"18/02/2024 2200\",","lastModifiedDate":"2024-02-16"},{"lineNumber":135,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.extractEventTo(\"event project meeting /from 18/02/2024 2100 /to 18/02/2024 2200\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":136,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":137,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":138,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":139,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link Parser#parseDelete(String)} method.","lastModifiedDate":"2024-02-16"},{"lineNumber":140,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":141,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws WrongFormatException if the input has an unexpected format","lastModifiedDate":"2024-02-16"},{"lineNumber":142,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":143,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":144,"author":{"gitId":"Tanzhiheng26"},"content":"    public void testParseDelete() throws WrongFormatException {","lastModifiedDate":"2024-02-16"},{"lineNumber":145,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e Parser.parseDelete(\"delete -1\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":146,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e Parser.parseDelete(\"delete 1 2 3 -1\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":147,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e Parser.parseDelete(\"delete abc\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":148,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e Parser.parseDelete(\"delete 12a\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":149,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e Parser.parseDelete(\"delete\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":150,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e Parser.parseDelete(\"delete \"));","lastModifiedDate":"2024-02-16"},{"lineNumber":151,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":152,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":153,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":154,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link Parser#parseMark(String)} method.","lastModifiedDate":"2024-02-16"},{"lineNumber":155,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":156,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws WrongFormatException if the input has an unexpected format","lastModifiedDate":"2024-02-16"},{"lineNumber":157,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":158,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":159,"author":{"gitId":"Tanzhiheng26"},"content":"    public void testParseMark() throws WrongFormatException {","lastModifiedDate":"2024-02-16"},{"lineNumber":160,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e Parser.parseMark(\"mark -1\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":161,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e Parser.parseMark(\"mark 1 2 3 -1\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":162,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e Parser.parseMark(\"mark abc\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":163,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e Parser.parseMark(\"mark 12a\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":164,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e Parser.parseMark(\"mark\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":165,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e Parser.parseMark(\"mark \"));","lastModifiedDate":"2024-02-16"},{"lineNumber":166,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":167,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":168,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":169,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link Parser#parseUnmark(String)} method.","lastModifiedDate":"2024-02-16"},{"lineNumber":170,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":171,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws WrongFormatException if the input has an unexpected format","lastModifiedDate":"2024-02-16"},{"lineNumber":172,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":173,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":174,"author":{"gitId":"Tanzhiheng26"},"content":"    public void testParseUnmark() throws WrongFormatException {","lastModifiedDate":"2024-02-16"},{"lineNumber":175,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e Parser.parseUnmark(\"unmark -1\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":176,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e Parser.parseUnmark(\"unmark 1 2 3 -1\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":177,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e Parser.parseUnmark(\"unmark abc\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":178,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e Parser.parseUnmark(\"unmark 12a\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":179,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e Parser.parseUnmark(\"unmark\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":180,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e Parser.parseUnmark(\"unmark \"));","lastModifiedDate":"2024-02-16"},{"lineNumber":181,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":182,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":183,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":184,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link Parser#extractTaskIndices(String)} method.","lastModifiedDate":"2024-02-16"},{"lineNumber":185,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":186,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":187,"author":{"gitId":"Tanzhiheng26"},"content":"    public void testExtractTaskIndices() {","lastModifiedDate":"2024-02-16"},{"lineNumber":188,"author":{"gitId":"Tanzhiheng26"},"content":"        assertArrayEquals(new int[]{0}, Parser.extractTaskIndices(\"delete 1\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":189,"author":{"gitId":"Tanzhiheng26"},"content":"        assertArrayEquals(new int[]{9}, Parser.extractTaskIndices(\"delete 10\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":190,"author":{"gitId":"Tanzhiheng26"},"content":"        assertArrayEquals(new int[]{0, 1, 2}, Parser.extractTaskIndices(\"delete 1 2 3\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":191,"author":{"gitId":"Tanzhiheng26"},"content":"        assertArrayEquals(new int[]{9, 10, 11, 12}, Parser.extractTaskIndices(\"delete 10 11 12 13\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":192,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":193,"author":{"gitId":"Tanzhiheng26"},"content":"        assertArrayEquals(new int[]{0}, Parser.extractTaskIndices(\"mark 1\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":194,"author":{"gitId":"Tanzhiheng26"},"content":"        assertArrayEquals(new int[]{9}, Parser.extractTaskIndices(\"mark 10\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":195,"author":{"gitId":"Tanzhiheng26"},"content":"        assertArrayEquals(new int[]{0, 1, 2}, Parser.extractTaskIndices(\"mark 1 2 3\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":196,"author":{"gitId":"Tanzhiheng26"},"content":"        assertArrayEquals(new int[]{9, 10, 11, 12}, Parser.extractTaskIndices(\"mark 10 11 12 13\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":197,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":198,"author":{"gitId":"Tanzhiheng26"},"content":"        assertArrayEquals(new int[]{0}, Parser.extractTaskIndices(\"unmark 1\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":199,"author":{"gitId":"Tanzhiheng26"},"content":"        assertArrayEquals(new int[]{9}, Parser.extractTaskIndices(\"unmark 10\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":200,"author":{"gitId":"Tanzhiheng26"},"content":"        assertArrayEquals(new int[]{0, 1, 2}, Parser.extractTaskIndices(\"unmark 1 2 3\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":201,"author":{"gitId":"Tanzhiheng26"},"content":"        assertArrayEquals(new int[]{9, 10, 11, 12}, Parser.extractTaskIndices(\"unmark 10 11 12 13\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":202,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":203,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":204,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":205,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link Parser#parseFind(String)} method.","lastModifiedDate":"2024-02-16"},{"lineNumber":206,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":207,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":208,"author":{"gitId":"Tanzhiheng26"},"content":"    public void testParseFind() throws WrongFormatException {","lastModifiedDate":"2024-02-16"},{"lineNumber":209,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e Parser.parseFind(\"find \"));","lastModifiedDate":"2024-02-16"},{"lineNumber":210,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e Parser.parseFind(\"find\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":211,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":212,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":213,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":214,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link Parser#extractKeyword(String)} method.","lastModifiedDate":"2024-02-16"},{"lineNumber":215,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":216,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":217,"author":{"gitId":"Tanzhiheng26"},"content":"    public void extractKeyword() {","lastModifiedDate":"2024-02-16"},{"lineNumber":218,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(\"cs2103t\", Parser.extractKeyword(\"find cs2103t\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":219,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(\"return books\", Parser.extractKeyword(\"find return books\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":220,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":221,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Tanzhiheng26":221}},{"path":"src/test/java/ezra/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package ezra;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":" * Tests for the {@link ToDo} class.","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"public class ToDoTest {","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link ToDo#toString()} method.","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"    public void testToString() {","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"        ToDo todo1 \u003d new ToDo(\"Return book\");","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"        String expectedString1 \u003d \"[T][ ] Return book\";","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(expectedString1, todo1.toString());","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"        ToDo todo2 \u003d new ToDo(\"Finish assignment\");","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"        String expectedString2 \u003d \"[T][ ] Finish assignment\";","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(expectedString2, todo2.toString());","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link ToDo#toStorageString()} method.","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"    public void testToStorageString() {","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"        ToDo todo1 \u003d new ToDo(\"Return book\");","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"        String expectedString1 \u003d \"T | 0 | Return book\";","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(expectedString1, todo1.toStorageString());","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"        ToDo todo2 \u003d new ToDo(\"Finish assignment\");","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"Tanzhiheng26"},"content":"        String expectedString2 \u003d \"T | 0 | Finish assignment\";","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(expectedString2, todo2.toStorageString());","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link ToDo#equals(Object)} method.","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"Tanzhiheng26"},"content":"    public void testEquals() {","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"Tanzhiheng26"},"content":"        ToDo todo1 \u003d new ToDo(\"Return book\");","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"Tanzhiheng26"},"content":"        ToDo todo2 \u003d new ToDo(\"Return book\");","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(todo1, todo2);","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"Tanzhiheng26":49}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"todo borrow book","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"mark 1","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"unmark 1","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"delete 1","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"bye","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"Tanzhiheng26":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\ezra\\*.java","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"java -classpath ..\\bin ezra.Ezra \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Tanzhiheng26":2,"-":19}}]
