[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"    protected String by;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"        return \"[D]\" +  super.toString() + \" (by:\" + by + \")\";","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ys112":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import java.util.List;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"        List\u003cTask\u003e tasksList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"        System.out.println(\"DevGPT:\\n\\tHello! I\u0027m DevGPT\\nWhat can I do for you?\");","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"        while (!isExit) {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"            try {","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"                while (true) {","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"                    System.out.println(\"User:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"                    String input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"                    if (input.contains(\"bye\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"                        isExit \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"                    }","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"                    String command \u003d input.split(\" \")[0];","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"                    if (command.equals(\"todo\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"                        if (input.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"                            throw new DukeException(\"The description of a todo cannot be empty. \\n\\t\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"                                \"Please use the following format: todo \u003cdescription\u003e\");","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"                        }","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"                        String details \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"                        Task task \u003d new Todo(details);","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"                        tasksList.add(task);","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"DevGPT:\\n\\t\" + \" Got it. I\u0027ve added this task: \\n\\t\\t\" + task.toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"DevGPT:\\n\\t Now you have \" + tasksList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"                    } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"                        if (input.split(\" \").length \u003c\u003d 3) {","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"                            throw new DukeException(\"The deadline and date for a task cannot be empty. \\n\\t\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"                                \"Please use the following format: deadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"                        } else if (!input.contains(\"/by\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"                            throw new DukeException(\"Invalid command for deadline. \\n\\t\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"                                \"Please use the following format: deadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"                        }","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"                        String details \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"                        String description \u003d details.split(\"/by \")[0].trim();","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"                        String by \u003d details.split(\"/by \")[1];","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"                        Task task \u003d new Deadline(description, by);","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"                        tasksList.add(task);","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"DevGPT:\\n\\t\" + \" Got it. I\u0027ve added this task: \\n\\t\\t\" + task.toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"DevGPT:\\n\\t Now you have \" + tasksList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"                    } else if (command.equals(\"event\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"                        if (input.split(\" \").length \u003c\u003d 3) {","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"                            throw new DukeException(\"The date for an event cannot be empty. \\n\\t\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"                                \"Please use the following format: event \u003cdescription\u003e /from \u003cdate\u003e /to \u003cdate\u003e\");","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"                        } else if (!input.contains(\"/from\") || !input.contains(\"/to\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"                            throw new DukeException(\"Invalid command for event. \\n\\t\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"                                \"Please use the following format: event \u003cdescription\u003e /from \u003cdate\u003e /to \u003cdate\u003e\");","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"                        }","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"                        String details \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"                        String description \u003d details.split(\"/from\")[0].trim();","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"                        String from \u003d details.split(\"/from\")[1].split(\"/to\")[0];","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"                        String to \u003d details.split(\"/to\")[1];","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"                        Task task \u003d new Event(description, from, to);","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"                        tasksList.add(task);","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"DevGPT:\\n\\t\" + \" Got it. I\u0027ve added this task: \\n\\t\\t\" + task.toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"DevGPT:\\n\\t Now you have \" + tasksList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"                    } else if (command.equals(\"list\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"DevGPT:\\n\\t Here are the tasks in your list:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":69,"author":{"gitId":"ys112"},"content":"                        for (int i \u003d 0; i \u003c tasksList.size(); i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":70,"author":{"gitId":"ys112"},"content":"                            Task task \u003d tasksList.get(i);","lastModifiedDate":"2024-01-22"},{"lineNumber":71,"author":{"gitId":"ys112"},"content":"                            System.out.println(\"\\t\\t\" + (i + 1) + \". \" + task.toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"ys112"},"content":"                        }","lastModifiedDate":"2024-01-22"},{"lineNumber":73,"author":{"gitId":"ys112"},"content":"                    } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":74,"author":{"gitId":"ys112"},"content":"                        String[] split \u003d input.split(\" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":75,"author":{"gitId":"ys112"},"content":"                        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":76,"author":{"gitId":"ys112"},"content":"                            throw new DukeException(\"The index of a task cannot be empty. \\n\\t\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":77,"author":{"gitId":"ys112"},"content":"                                \"Please use the following format: unmark \u003cindex\u003e\");","lastModifiedDate":"2024-01-23"},{"lineNumber":78,"author":{"gitId":"ys112"},"content":"                        } else if (parseInt(split[1]) \u003e tasksList.size() || parseInt(split[1]) \u003c 1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":79,"author":{"gitId":"ys112"},"content":"                            throw new DukeException(\"No such task exists.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"ys112"},"content":"                        }","lastModifiedDate":"2024-01-23"},{"lineNumber":81,"author":{"gitId":"ys112"},"content":"                        int index \u003d parseInt(split[1]);","lastModifiedDate":"2024-01-23"},{"lineNumber":82,"author":{"gitId":"ys112"},"content":"                        Task task \u003d tasksList.get(index - 1);","lastModifiedDate":"2024-01-22"},{"lineNumber":83,"author":{"gitId":"ys112"},"content":"                        task.markAsUndone();","lastModifiedDate":"2024-01-22"},{"lineNumber":84,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"DevGPT:\\n\\t Got it! I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":85,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"\\t\" + task.toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":86,"author":{"gitId":"ys112"},"content":"                    } else if (command.equals(\"mark\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":87,"author":{"gitId":"ys112"},"content":"                        String[] split \u003d input.split(\" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":88,"author":{"gitId":"ys112"},"content":"                        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":89,"author":{"gitId":"ys112"},"content":"                            throw new DukeException(\"The index of a task cannot be empty. \\n\\t\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":90,"author":{"gitId":"ys112"},"content":"                                \"Please use the following format: mark \u003cindex\u003e\");","lastModifiedDate":"2024-01-23"},{"lineNumber":91,"author":{"gitId":"ys112"},"content":"                        } else if (parseInt(split[1]) \u003e tasksList.size() || parseInt(split[1]) \u003c 1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":92,"author":{"gitId":"ys112"},"content":"                            throw new DukeException(\"No such task exists.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":93,"author":{"gitId":"ys112"},"content":"                        }","lastModifiedDate":"2024-01-23"},{"lineNumber":94,"author":{"gitId":"ys112"},"content":"                        int index \u003d Integer.parseInt(split[1]);","lastModifiedDate":"2024-01-22"},{"lineNumber":95,"author":{"gitId":"ys112"},"content":"                        Task task \u003d tasksList.get(index - 1);","lastModifiedDate":"2024-01-22"},{"lineNumber":96,"author":{"gitId":"ys112"},"content":"                        task.markAsDone();","lastModifiedDate":"2024-01-22"},{"lineNumber":97,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"DevGPT:\\n\\t Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":98,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"\\t\" + task.toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":99,"author":{"gitId":"ys112"},"content":"                    } else if (command.equals(\"delete\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":100,"author":{"gitId":"ys112"},"content":"                        String[] split \u003d input.split(\" \");","lastModifiedDate":"2024-01-23"},{"lineNumber":101,"author":{"gitId":"ys112"},"content":"                        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":102,"author":{"gitId":"ys112"},"content":"                            throw new DukeException(\"The index of a task cannot be empty. \\n\\t\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":103,"author":{"gitId":"ys112"},"content":"                                \"Please use the following format: delete \u003cindex\u003e\");","lastModifiedDate":"2024-01-23"},{"lineNumber":104,"author":{"gitId":"ys112"},"content":"                        } else if (parseInt(split[1]) \u003e tasksList.size() || parseInt(split[1]) \u003c 1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":105,"author":{"gitId":"ys112"},"content":"                            throw new DukeException(\"No such task exists.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":106,"author":{"gitId":"ys112"},"content":"                        }","lastModifiedDate":"2024-01-23"},{"lineNumber":107,"author":{"gitId":"ys112"},"content":"                        int index \u003d Integer.parseInt(split[1]);","lastModifiedDate":"2024-01-23"},{"lineNumber":108,"author":{"gitId":"ys112"},"content":"                        Task task \u003d tasksList.remove(index - 1);","lastModifiedDate":"2024-01-23"},{"lineNumber":109,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"DevGPT:\\n\\t Poof! I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":110,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"\\t\" + task.toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":111,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"DevGPT:\\n\\t Now you have \" + tasksList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":112,"author":{"gitId":"ys112"},"content":"                    } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":113,"author":{"gitId":"ys112"},"content":"                        throw new DukeException(","lastModifiedDate":"2024-01-23"},{"lineNumber":114,"author":{"gitId":"ys112"},"content":"                            \"Your message is not understood. Please use the following:\\n\\t1. todo \u003cdescription\u003e\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":115,"author":{"gitId":"ys112"},"content":"                                \"\\n\\t2. deadline \u003cdescription\u003e /by \u003cdate\u003e\\n\\t3. event \u003cdescription\u003e /from \u003cdate\u003e /to \u003cdate\u003e\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":116,"author":{"gitId":"ys112"},"content":"                                \"\\n\\t4. list\\n\\t5. mark \u003cindex\u003e\\n\\t6. unmark \u003cindex\u003e\\n\\t7. delete \u003cindex\u003e\\n\\t8. bye\");","lastModifiedDate":"2024-01-23"},{"lineNumber":117,"author":{"gitId":"ys112"},"content":"                    }","lastModifiedDate":"2024-01-22"},{"lineNumber":118,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":119,"author":{"gitId":"ys112"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":120,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":121,"author":{"gitId":"ys112"},"content":"                scanner.close();","lastModifiedDate":"2024-01-22"},{"lineNumber":122,"author":{"gitId":"ys112"},"content":"                System.out.println(\"DevGPT:\\n\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-22"},{"lineNumber":123,"author":{"gitId":"ys112"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":124,"author":{"gitId":"ys112"},"content":"                System.out.println(\"DevGPT:\\n\\t\" + \"Input error: Please enter a valid number to modify task\");","lastModifiedDate":"2024-01-23"},{"lineNumber":125,"author":{"gitId":"ys112"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":126,"author":{"gitId":"ys112"},"content":"            catch (DukeException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":127,"author":{"gitId":"ys112"},"content":"                System.out.println(\"DevGPT:\\n\\t\" + e.getMessage());","lastModifiedDate":"2024-01-23"},{"lineNumber":128,"author":{"gitId":"ys112"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":129,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ys112":128,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"        super(\"DevGPT error: \" + message);","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ys112":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"    protected String start;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"    protected String end;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"        return \"[E]\" +  super.toString() + \" (from:\" + start + \"to:\" + end + \")\";","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ys112":15}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"        protected String description;","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"        protected boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"        public Task(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"            this.description \u003d description;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"        public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"            return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"        public void markAsDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"        public void markAsUndone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"        @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"        public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"            return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"ys112":27}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ys112":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"delete 3","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"todo","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"deadline","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"event","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"deadline return book Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"event LSRFM comeback /from 19 Feb 2023","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"mark dfuhyasf","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"mark 8","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"delete dhuiasdhuasd","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"delete 8","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"LSRFM","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ys112":18}}]
