[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"Anant1902"},"content":"    mainClass.set(\"drake.Drake\")","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"Anant1902"},"content":"    archiveBaseName \u003d \"drake\"","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Anant1902"},"content":"checkstyle {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Anant1902"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"-":40,"Anant1902":7}},{"path":"src/main/java/drake/Drake.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"import drake.task.Deadline;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":"import drake.task.Event;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"import drake.task.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"import drake.task.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"import drake.task.Todo;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"enum Command {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"    BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, INVALID, FIND;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"    ","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"    // Method to get the appropriate enum value from a string input","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":"    public static Command fromString(String commandString) {","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":"        switch (commandString.toLowerCase()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Anant1902"},"content":"        case \"bye\":","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"Anant1902"},"content":"            return BYE;","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"Anant1902"},"content":"        case \"list\":","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"            return LIST;","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"Anant1902"},"content":"        case \"mark\":","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"Anant1902"},"content":"            return MARK;","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"Anant1902"},"content":"        case \"unmark\":","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"Anant1902"},"content":"            return UNMARK;","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"Anant1902"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"Anant1902"},"content":"            return TODO;","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"Anant1902"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"Anant1902"},"content":"            return DEADLINE;","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"Anant1902"},"content":"        case \"event\":","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"Anant1902"},"content":"            return EVENT;","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"Anant1902"},"content":"        case \"delete\":","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"Anant1902"},"content":"            return DELETE;","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"Anant1902"},"content":"        case \"find\":","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Anant1902"},"content":"            return FIND;","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Anant1902"},"content":"        default:","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"Anant1902"},"content":"            return INVALID;","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"Anant1902"},"content":"public class Drake {","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"Anant1902"},"content":"    private final Ui UI;","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Anant1902"},"content":"    private final Storage STORAGE;","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Anant1902"},"content":"    private final TaskList TASKS;","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Anant1902"},"content":"    private boolean isRunning;","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"Anant1902"},"content":"    public Drake(String FILE_PATH) {","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"Anant1902"},"content":"        UI \u003d new Ui();","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Anant1902"},"content":"        STORAGE \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Anant1902"},"content":"        TASKS \u003d new TaskList(STORAGE.loadTasks());","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Anant1902"},"content":"        isRunning \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"Anant1902"},"content":"    public void run() throws Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"Anant1902"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"Anant1902"},"content":"        UI.showWelcome();","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Anant1902"},"content":"    ","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"Anant1902"},"content":"        while (isRunning) {","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"Anant1902"},"content":"            String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"Anant1902"},"content":"            String[] words \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"Anant1902"},"content":"            String commandWord \u003d words[0];","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"Anant1902"},"content":"            Command command \u003d Command.fromString(commandWord);","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"Anant1902"},"content":"            try {","lastModifiedDate":"2024-01-24"},{"lineNumber":68,"author":{"gitId":"Anant1902"},"content":"                switch (command) {","lastModifiedDate":"2024-01-24"},{"lineNumber":69,"author":{"gitId":"Anant1902"},"content":"                case BYE:","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"Anant1902"},"content":"                    isRunning \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"Anant1902"},"content":"                    STORAGE.saveTasks(TASKS.getTasks());","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"Anant1902"},"content":"                    UI.showGoodbye();","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"Anant1902"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"Anant1902"},"content":"                case LIST:","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"Anant1902"},"content":"                    UI.showTaskList(TASKS);","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"Anant1902"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"Anant1902"},"content":"                case MARK:","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"Anant1902"},"content":"                    int markIndex \u003d Parser.parseTaskIndex(input);","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"Anant1902"},"content":"                    TASKS.markTask(markIndex);","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"Anant1902"},"content":"                    UI.showMarkTask(TASKS.getTask(markIndex));","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"Anant1902"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":82,"author":{"gitId":"Anant1902"},"content":"                case UNMARK:","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"Anant1902"},"content":"                    int unmarkIndex \u003d Parser.parseTaskIndex(input);","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"Anant1902"},"content":"                    TASKS.unmarkTask(unmarkIndex);","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"Anant1902"},"content":"                    UI.showUnmarkTask(TASKS.getTask(unmarkIndex));","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"Anant1902"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"Anant1902"},"content":"                case TODO:","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"Anant1902"},"content":"                    String todoDescription \u003d Parser.parseDescription(input);","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"Anant1902"},"content":"                    Todo newTodo \u003d new Todo(todoDescription);","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"Anant1902"},"content":"                    TASKS.addTask(newTodo);","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"Anant1902"},"content":"                    UI.showAddTask(newTodo, TASKS.size());","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"Anant1902"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":93,"author":{"gitId":"Anant1902"},"content":"                case DEADLINE:","lastModifiedDate":"2024-01-24"},{"lineNumber":94,"author":{"gitId":"Anant1902"},"content":"                    try {","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"Anant1902"},"content":"                        Object[] deadlineDetails \u003d Parser.parseDeadline (input);","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"Anant1902"},"content":"                        Deadline newDeadline \u003d new Deadline((String) deadlineDetails[0],","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"Anant1902"},"content":"                                (LocalDateTime) deadlineDetails[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"Anant1902"},"content":"                        TASKS.addTask(newDeadline);","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"Anant1902"},"content":"                        UI.showAddTask(newDeadline, TASKS.size());","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"Anant1902"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"Anant1902"},"content":"                        UI.showError(\"Oops, format error! Type in a date in the form yy-mm-dd and try again!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"Anant1902"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"Anant1902"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":104,"author":{"gitId":"Anant1902"},"content":"                case EVENT:","lastModifiedDate":"2024-01-24"},{"lineNumber":105,"author":{"gitId":"Anant1902"},"content":"                    String[] eventDetails \u003d Parser.parseEvent(input);","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"Anant1902"},"content":"                    Event newEvent \u003d new Event(eventDetails[0], eventDetails[1], eventDetails[2]);","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"Anant1902"},"content":"                    TASKS.addTask(newEvent);","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"Anant1902"},"content":"                    UI.showAddTask(newEvent, TASKS.size());","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"Anant1902"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":110,"author":{"gitId":"Anant1902"},"content":"                case DELETE:","lastModifiedDate":"2024-01-24"},{"lineNumber":111,"author":{"gitId":"Anant1902"},"content":"                    int deleteIndex \u003d Parser.parseTaskIndex(input);","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"Anant1902"},"content":"                    Task deletedTask \u003d TASKS.deleteTask(deleteIndex);","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"Anant1902"},"content":"                    UI.showDeleteTask(deletedTask, TASKS.size());","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"Anant1902"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":115,"author":{"gitId":"Anant1902"},"content":"                    case FIND:","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"Anant1902"},"content":"                        String keyword \u003d Parser.parseKeyword(input);","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"Anant1902"},"content":"                        ArrayList\u003cTask\u003e matchingTasks \u003d TASKS.findTasksByKeyword(keyword);","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"Anant1902"},"content":"                        UI.showMatchingTasks(matchingTasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"Anant1902"},"content":"                        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"Anant1902"},"content":"                case INVALID:","lastModifiedDate":"2024-01-24"},{"lineNumber":121,"author":{"gitId":"Anant1902"},"content":"                    throw new NotValidCommand(\"That\u0027s not a valid command!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"Anant1902"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":123,"author":{"gitId":"Anant1902"},"content":"            } catch (NotValidCommand | TodoLeftBlank e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"Anant1902"},"content":"                UI.showError(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"Anant1902"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":126,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":127,"author":{"gitId":"Anant1902"},"content":"        scanner.close();","lastModifiedDate":"2024-01-24"},{"lineNumber":128,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":129,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":130,"author":{"gitId":"Anant1902"},"content":"    public static void main(String[] args) throws Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"Anant1902"},"content":"        new Drake(\"./list.dat\").run();","lastModifiedDate":"2024-01-28"},{"lineNumber":132,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":133,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Anant1902":133}},{"path":"src/main/java/drake/NotValidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"public class NotValidCommand extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"    public NotValidCommand(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Anant1902":6}},{"path":"src/main/java/drake/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":" * Handles parsing of user input into various components such as commands, task indices, descriptions, and deadlines.","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"public class Parser {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"    public static int parseTaskIndex(String input) throws NumberFormatException {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"        String[] words \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"        if (words.length \u003c 2) {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"            throw new IllegalArgumentException(\"No task index provided.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":"        return Integer.parseInt(words[1]) - 1; // Subtract 1 to convert to zero-based index","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Anant1902"},"content":"     * Parses the task description from the user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Anant1902"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Anant1902"},"content":"     * @return The task description.","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Anant1902"},"content":"     * @throws TodoLeftBlank if the description part of the input is empty.","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Anant1902"},"content":"    public static String parseDescription(String input) {","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"Anant1902"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"Anant1902"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"Anant1902"},"content":"            throw new TodoLeftBlank(\"Looks like you left the description of the todo empty. This isn\u0027t allowed!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"Anant1902"},"content":"        return parts[1].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Anant1902"},"content":"     * Parses the deadline task from the user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Anant1902"},"content":"     * ","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Anant1902"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Anant1902"},"content":"     * @return An Object array where the first element is the task description and the second element is the deadline as a LocalDateTime.","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Anant1902"},"content":"     * @throws Exception if the deadline format is incorrect or if the \u0027deadline\u0027 keyword is misspelled.","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Anant1902"},"content":"    public static Object[] parseDeadline(String input) throws Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Anant1902"},"content":"        String[] parts \u003d input.split(\" /by \");","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"Anant1902"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"Anant1902"},"content":"            throw new IllegalArgumentException(\"Deadline time not provided.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"Anant1902"},"content":"        if (!parts[0].split(\" \")[0].equals(\"deadline\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Anant1902"},"content":"            throw new Exception(\"Looks like you spelt deadline wrong. Please try again!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Anant1902"},"content":"        String description \u003d parts[0].substring(parts[0].indexOf(\u0027 \u0027) + 1).trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"Anant1902"},"content":"        LocalDate date;","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Anant1902"},"content":"        LocalDateTime by;","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Anant1902"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Anant1902"},"content":"            date \u003d LocalDate.parse(parts[1], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"Anant1902"},"content":"            by \u003d date.atStartOfDay();","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"Anant1902"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"Anant1902"},"content":"            throw new Exception(\"Date is of the wrong format!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"Anant1902"},"content":"        } ","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Anant1902"},"content":"        ","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Anant1902"},"content":"        return new Object[]{description, by};","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"Anant1902"},"content":"     * Parses an event task from the user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Anant1902"},"content":"     * ","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"Anant1902"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"Anant1902"},"content":"     * @return A String array where the first element is the event title, the second element is the start time, and the third element is the end time.","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"Anant1902"},"content":"    public static String[] parseEvent(String input) {","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"Anant1902"},"content":"        String[] parts \u003d input.substring(6).split(\"/\");","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"Anant1902"},"content":"        String title \u003d parts[0];","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"Anant1902"},"content":"        String from \u003d \"\";","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"Anant1902"},"content":"        String to \u003d \"\";","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"Anant1902"},"content":"    ","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"Anant1902"},"content":"        for (int i \u003d 1; i \u003c parts.length; i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"Anant1902"},"content":"            if (parts[i].split(\" \")[0].equals(\"from\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"Anant1902"},"content":"                from \u003d parts[i].substring(5);","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"Anant1902"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"Anant1902"},"content":"            if (parts[i].split(\" \")[0].equals(\"to\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"Anant1902"},"content":"                to \u003d parts[i].substring(3);","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"Anant1902"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"Anant1902"},"content":"        return new String[]{title, from, to};","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"Anant1902"},"content":"    public static String parseKeyword(String input) {","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"Anant1902"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"Anant1902"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"Anant1902"},"content":"            throw new IllegalArgumentException(\"Keyword for search is missing.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"Anant1902"},"content":"        return parts[1].trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"Anant1902":95}},{"path":"src/main/java/drake/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"import java.io.*;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"import drake.task.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":" * Handles storage operations for tasks, such as saving to and loading from a file.","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"public class Storage {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"    private final String FILE_PATH;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"     * Constructs a new Storage object.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"     * @param filePath The file path where tasks will be saved and loaded from.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":"    public Storage(String FILE_PATH) {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":"        this.FILE_PATH \u003d FILE_PATH;","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"     * Saves the list of tasks to the file.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Anant1902"},"content":"     * ","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Anant1902"},"content":"     * @param tasks The ArrayList of Task objects to be saved.","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Anant1902"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"Anant1902"},"content":"        try (ObjectOutputStream oos \u003d new ObjectOutputStream(new FileOutputStream(FILE_PATH))) {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Anant1902"},"content":"            oos.writeObject(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"Anant1902"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"Anant1902"},"content":"            System.out.println(\"Error saving list!: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Anant1902"},"content":"     * Loads and returns the list of tasks from the file.","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Anant1902"},"content":"     * If the file does not exist, returns an empty list.","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Anant1902"},"content":"     * If the file exists but an error occurs during reading, also returns an empty list.","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Anant1902"},"content":"     * ","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Anant1902"},"content":"     * @return The ArrayList of Task objects loaded from the file.","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Anant1902"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"Anant1902"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"Anant1902"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Anant1902"},"content":"        if (file.exists()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"Anant1902"},"content":"            try (ObjectInputStream ois \u003d new ObjectInputStream(new FileInputStream(file))) {","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"Anant1902"},"content":"                return (ArrayList\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"Anant1902"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"Anant1902"},"content":"                return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"Anant1902"},"content":"            } catch (ClassNotFoundException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"Anant1902"},"content":"                System.out.println(\"Class not found!: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"Anant1902"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"Anant1902"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"Anant1902":56}},{"path":"src/main/java/drake/TodoLeftBlank.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"public class TodoLeftBlank extends StringIndexOutOfBoundsException {","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"    public TodoLeftBlank(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Anant1902":6}},{"path":"src/main/java/drake/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"import drake.task.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"import drake.task.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":" * Handles UI operations for the chatbot.","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"public class Ui {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\" What\u0027s up everyone. I\u0027m Drake.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\" How can I help?\");","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Anant1902"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Anant1902"},"content":"    public void showGoodbye() {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\" See you later, alligator! \");","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Anant1902"},"content":"     * Displays an error message.","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Anant1902"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Anant1902"},"content":"    public void showError(String message) {","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"Anant1902"},"content":"        System.out.println(message);","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Anant1902"},"content":"     * Displays a task along with a custom message and the total number of tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Anant1902"},"content":"     * @param message The custom message to display before the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Anant1902"},"content":"     * @param task    The task to be displayed.","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Anant1902"},"content":"     * @param size    The total number of tasks in the list.","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Anant1902"},"content":"    public void showTask(String message, Task task, int size) {","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"Anant1902"},"content":"        System.out.println(message);","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"Anant1902"},"content":"        System.out.println(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"Anant1902"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Anant1902"},"content":"     * @param tasks The TaskList containing the tasks to display.","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"Anant1902"},"content":"    public void showTaskList(TaskList tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"You asked for the tasks in your list? Here:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"Anant1902"},"content":"        ArrayList\u003cTask\u003e taskList \u003d tasks.getTasks();","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"Anant1902"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"Anant1902"},"content":"            System.out.println((i + 1) + \". \" + taskList.get(i));","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"Anant1902"},"content":"     * Displays a message confirming the addition of a task, the task itself, and the new total number of tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"Anant1902"},"content":"     * @param task The task that has been added.","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"Anant1902"},"content":"     * @param size The new total number of tasks in the list.","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"Anant1902"},"content":"    public void showAddTask(Task task, int size) {","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"Anant1902"},"content":"        System.out.println(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"Anant1902"},"content":"     * Displays a message confirming that a task has been marked as done.","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"Anant1902"},"content":"     * @param task The task that has been marked.","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"Anant1902"},"content":"    public void showMarkTask(Task task) {","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"Cool. I now declare this task marked as, done:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"Anant1902"},"content":"        System.out.println(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"Anant1902"},"content":"     * Displays a message confirming that a task has been marked as not done.","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"Anant1902"},"content":"     * @param task The task that has been unmarked.","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"Anant1902"},"content":"    public void showUnmarkTask(Task task) {","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"Anant1902"},"content":"        System.out.println(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"Anant1902"},"content":"     * Displays a message confirming the deletion of a task, the task itself, and the new total number of tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"Anant1902"},"content":"     * @param task The task that has been deleted.","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"Anant1902"},"content":"     * @param size The new total number of tasks in the list.","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"Anant1902"},"content":"    public void showDeleteTask(Task task, int size) {","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":119,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":120,"author":{"gitId":"Anant1902"},"content":"        System.out.println(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":125,"author":{"gitId":"Anant1902"},"content":"    public void showMatchingTasks(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"Anant1902"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"Anant1902"},"content":"            System.out.println((i + 1) + \". \" + matchingTasks.get(i));","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"Anant1902"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":134,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"Anant1902":134}},{"path":"src/main/java/drake/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"    ","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Anant1902":19}},{"path":"src/main/java/drake/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"    protected String from;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"    protected String to;","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + from + \"to: \" + to + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"    ","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Anant1902":17}},{"path":"src/main/java/drake/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"public class Task implements Serializable { // adapted skeleton from cs2103t course website","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"    protected String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"        return (isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Anant1902"},"content":"        return getStatusIcon() + description;","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Anant1902":22}},{"path":"src/main/java/drake/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":" * Represents a list of tasks and provides methods to manipulate this list.","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"public class TaskList {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":"     * Constructs a TaskList with a predefined list of tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Anant1902"},"content":"     * @param tasks The ArrayList of Task objects to initialize the TaskList with.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Anant1902"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Anant1902"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Anant1902"},"content":"     * @param task The Task object to be added.","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Anant1902"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"Anant1902"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Anant1902"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Anant1902"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Anant1902"},"content":"     * @return The deleted Task object.","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Anant1902"},"content":"     * @throws IndexOutOfBoundsException If the index is out of the range of the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Anant1902"},"content":"    public Task deleteTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"Anant1902"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"Anant1902"},"content":"            throw new IndexOutOfBoundsException(\"Task index is out of bounds.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"Anant1902"},"content":"        return tasks.remove(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Anant1902"},"content":"     * Retrieves a task from the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Anant1902"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Anant1902"},"content":"     * @return The Task object at the specified index.","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Anant1902"},"content":"     * @throws IndexOutOfBoundsException If the index is out of the range of the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"Anant1902"},"content":"    public Task getTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"Anant1902"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"Anant1902"},"content":"            throw new IndexOutOfBoundsException(\"Task index is out of bounds.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"Anant1902"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"Anant1902"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"Anant1902"},"content":"     * @return The size of the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"Anant1902"},"content":"    public int size() {","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"Anant1902"},"content":"        return tasks.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"Anant1902"},"content":"     * Provides access to the list of tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"Anant1902"},"content":"     * @return The ArrayList of Task objects.","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"Anant1902"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"Anant1902"},"content":"        return tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"Anant1902"},"content":"     * Marks a task in the task list as done.","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"Anant1902"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"Anant1902"},"content":"     * @throws IndexOutOfBoundsException If the index is out of the range of the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"Anant1902"},"content":"    public void markTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"Anant1902"},"content":"        getTask(index).isDone \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"Anant1902"},"content":"     * Unmarks a task in the task list, indicating it is not done.","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"Anant1902"},"content":"     * @param index The index of the task to be unmarked.","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"Anant1902"},"content":"     * @throws IndexOutOfBoundsException If the index is out of the range of the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"Anant1902"},"content":"    public void unmarkTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"Anant1902"},"content":"        getTask(index).isDone \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"Anant1902"},"content":"    public ArrayList\u003cTask\u003e findTasksByKeyword(String keyword) {","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"Anant1902"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"Anant1902"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"Anant1902"},"content":"            if (task.description.contains(keyword)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"Anant1902"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"Anant1902"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"Anant1902"},"content":"        return matchingTasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"Anant1902":111}},{"path":"src/main/java/drake/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Anant1902":13}},{"path":"src/test/java/drake/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"import drake.Parser;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Anant1902"},"content":"    public void parseDeadlineSucessTest() throws Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Anant1902"},"content":"        String testInput \u003d \"deadline eat dinner /by 2024-12-01\";","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Anant1902"},"content":"        Object[] actualOutput \u003d Parser.parseDeadline(testInput);","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"        Object[] expectedOutput \u003d {\"eat dinner\", LocalDate.parse(\"2024-12-01\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")).atStartOfDay()};","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Anant1902"},"content":"        assertEquals(actualOutput, actualOutput);","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Anant1902"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Anant1902"},"content":"    public void parseDeadlineWrongDateFormatTest() throws Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Anant1902"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Anant1902"},"content":"            String testInput \u003d \"deadline eat dinner /by 2024-14-01\";","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Anant1902"},"content":"            Object[] actualOutput \u003d Parser.parseDeadline(testInput);","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Anant1902"},"content":"            Object[] expectedWrongOutput \u003d {\"eat dinner\", LocalDate.parse(\"2024-14-01\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")).atStartOfDay()};","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Anant1902"},"content":"        ","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Anant1902"},"content":"            assertEquals(actualOutput, expectedWrongOutput);","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Anant1902"},"content":"            fail(); //This block should not be run.","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Anant1902"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Anant1902"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Anant1902"},"content":"            assertEquals(\"Date is of the wrong format!\", e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Anant1902"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Anant1902"},"content":"    public void parseDeadlineWrongSpellingFormatTest() throws Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Anant1902"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Anant1902"},"content":"            String testInput \u003d \"dedline eat dinner /by 2024-12-01\";","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Anant1902"},"content":"            Object[] actualOutput \u003d Parser.parseDeadline(testInput);","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Anant1902"},"content":"            Object[] expectedWrongOutput \u003d {\"eat dinner\", LocalDate.parse(\"2024-12-01\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")).atStartOfDay()};","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Anant1902"},"content":"            fail(); //This block should not be run.","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Anant1902"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Anant1902"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Anant1902"},"content":"            assertEquals(\"Looks like you spelt deadline wrong. Please try again!\", e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Anant1902":55}},{"path":"src/test/java/drake/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"import drake.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"import drake.task.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"import drake.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"import drake.task.Todo;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"public class TaskListTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"    public void getTaskSucessTest() throws Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"        TaskList input \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"        Task task1 \u003d new Todo(\"sleep\");","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":"        input.addTask(task1);","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":"        input.addTask(new Todo(\"eat\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Anant1902"},"content":"        Task actualOutput \u003d input.getTask(0);","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Anant1902"},"content":"        ","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"        assertEquals(task1, actualOutput);","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Anant1902"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Anant1902"},"content":"    public void getTaskOutofBoundsTest() throws Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Anant1902"},"content":"        TaskList input \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Anant1902"},"content":"        Task task1 \u003d new Todo(\"sleep\");","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Anant1902"},"content":"        input.addTask(task1);","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Anant1902"},"content":"        input.addTask(new Todo(\"eat\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Anant1902"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Anant1902"},"content":"            Task actualOutput \u003d input.getTask(3);","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Anant1902"},"content":"            assertEquals(task1, actualOutput);","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Anant1902"},"content":"            fail();","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Anant1902"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Anant1902"},"content":"            assertEquals(\"Task index is out of bounds.\", e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Anant1902":41}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"todo","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"invalidddd command","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"todo eat dinner","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"deadline finish 2103 assignment /by 2024-10-06","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"event hackathon /from Wed 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"mark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":"deadline finish 2103 assignment /by Wednesday","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"unmark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Anant1902":16}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/drake/*.java","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"java -classpath ../bin drake.Drake \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"Anant1902":2}}]
