[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"checkstyle {","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"java {","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"    toolchain {","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"        languageVersion \u003d JavaLanguageVersion.of(11) //added this","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"    //mainClass.set(\"seedu.duke.ui.Launcher\") //mainClassName","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"    mainClassName \u003d \"seedu.duke.ui.Launcher\"","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"    archiveBaseName \u003d \"duke.ui.Launcher\"","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"    archiveFileName \u003d \u0027duke.ui.Launcher.jar\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Teee728":30,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import duke.command.Parser;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":" * The Duke class represents the main class for the Duke application.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"public class Duke {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"     * Constructs a Duke object.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"     * @param filePath The file path for storing tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"    public Duke() {","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"            tasks \u003d new TaskList(storage.load(), ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"     * Runs the Duke application.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"    public void run() {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"        Parser parser \u003d new Parser(tasks, storage, scanner, true);","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"        while (parser.getRunningStatus()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"            String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"            parser.setCommand(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"                parser.processCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"        scanner.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"        Platform.exit(); // Close the application","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"     * The main method to start the Duke application.","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"Teee728"},"content":"     * @param args Command-line arguments.","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Teee728"},"content":"        new Duke().run(); //\"./data/tasks.txt\"","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"Teee728"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"Teee728"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"Teee728"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"Teee728"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"Teee728"},"content":"            // Initialize a new Parser","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"Teee728"},"content":"            Parser parser \u003d new Parser(tasks, storage, new Scanner(System.in), true);","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"Teee728"},"content":"            // Set the command to be processed by the parser","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"Teee728"},"content":"            parser.setCommand(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"Teee728"},"content":"            // Process the command","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"Teee728"},"content":"            parser.processCommand();","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"Teee728"},"content":"            // Return the response generated by the parser","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"Teee728"},"content":"            return parser.getResponse();","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"Teee728"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"Teee728"},"content":"            return \"Error processing command: \" + e.getMessage();","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Teee728":91}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"            stage.show();","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Teee728":34}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"import duke.task.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":" * The Parser class handles the parsing of user commands and executes corresponding actions.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":" * It interacts with the TaskList, Storage, and Ui classes to perform operations like adding tasks,","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":" * marking tasks as done, deleting tasks, and displaying the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"public class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"    private String command;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"    private boolean hasChanged \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"    protected Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"    protected Scanner scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"    protected boolean isRunning;","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"    private String response;","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"     * Constructs a Parser instance with the specified TaskList, Storage, Scanner, and running status.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"     * @param tasks     The TaskList to be managed by the parser.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"     * @param storage   The Storage object to handle data storage and retrieval.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"     * @param scanner   The Scanner object to read user input.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"     * @param isRunning The initial running status of the parser.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"    public Parser(TaskList tasks, Storage storage, Scanner scanner, boolean isRunning) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"        this.scanner \u003d scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"        this.isRunning \u003d isRunning;","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"     * Gets the running status of the parser.","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"     * @return True if the parser is running, false otherwise.","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"    public boolean getRunningStatus() {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"        return this.isRunning;","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"     * Sets the command to be processed by the parser.","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"     * @param command The user command to be processed.","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"    public void setCommand(String command) {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"     * Processes the user command by executing the corresponding action.","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"Teee728"},"content":"     * It handles commands like \"bye,\" \"list,\" \"mark,\" \"unmark,\" \"delete,\" \"todo,\" \"deadline,\" and \"event.\"","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"     * @throws DukeException If there is an issue processing the command.","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"Teee728"},"content":"    public void processCommand() throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Teee728"},"content":"        String[] words \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Teee728"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Teee728"},"content":"            ui.printDashes();","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Teee728"},"content":"            switch (words[0].toLowerCase()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Teee728"},"content":"                case \"bye\":","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Teee728"},"content":"                    this.response \u003d ui.showGoodbyeMessage();","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"Teee728"},"content":"                    this.isRunning \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Teee728"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Teee728"},"content":"                case \"list\":","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Teee728"},"content":"                    this.response \u003d Ui.showTaskList(tasks) + \"\\n\" + TaskList.getList(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"Teee728"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Teee728"},"content":"                case \"mark\":","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Teee728"},"content":"                    if (words.length \u003e 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Teee728"},"content":"                        int index \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Teee728"},"content":"                        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"Teee728"},"content":"                            Task task \u003d tasks.getTask(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Teee728"},"content":"                            this.response \u003d tasks.markStatus(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"Teee728"},"content":"                            storage.saveTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Teee728"},"content":"                            hasChanged \u003d true; //flag, no need to change","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Teee728"},"content":"                        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"Teee728"},"content":"                            String reply \u003d \"You have not created a task \" + words[1] + \" yet!\";","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"Teee728"},"content":"                            Ui.showError(reply);","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"Teee728"},"content":"                            this.response \u003d reply;","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"Teee728"},"content":"                        }","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"Teee728"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Teee728"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"Teee728"},"content":"                case \"unmark\":","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Teee728"},"content":"                    if (words.length \u003e 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Teee728"},"content":"                        int index \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"Teee728"},"content":"                        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"Teee728"},"content":"                            Task task \u003d tasks.getTask(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Teee728"},"content":"                            this.response \u003d tasks.unmarkStatus(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"Teee728"},"content":"                            storage.saveTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"Teee728"},"content":"                            hasChanged \u003d true; //flag, no need to change","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"Teee728"},"content":"                        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"Teee728"},"content":"                            String reply \u003d \"You have not created a task \" + words[1] + \" yet!\";","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"Teee728"},"content":"                            Ui.showError(reply);","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"Teee728"},"content":"                            this.response \u003d reply;                        }","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"Teee728"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"Teee728"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"Teee728"},"content":"                case \"delete\":","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"Teee728"},"content":"                    if (words.length \u003e 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"Teee728"},"content":"                        this.response \u003d tasks.deleteTask(Integer.parseInt(words[1]) - 1)","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"Teee728"},"content":"                    + \"\\n\" + Ui.printNumberOfTasks(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"Teee728"},"content":"                        storage.saveTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"Teee728"},"content":"                        hasChanged \u003d true; //flag, no need to change","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"Teee728"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"Teee728"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"Teee728"},"content":"                case \"todo\":","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"Teee728"},"content":"                    if (command.length() \u003c\u003d 5) {","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"Teee728"},"content":"                        String reply \u003d \"You gotta enter some task TO DO!\";","lastModifiedDate":"2024-02-07"},{"lineNumber":120,"author":{"gitId":"Teee728"},"content":"                        ui.showError(reply);","lastModifiedDate":"2024-02-07"},{"lineNumber":121,"author":{"gitId":"Teee728"},"content":"                        this.response \u003d reply;","lastModifiedDate":"2024-02-07"},{"lineNumber":122,"author":{"gitId":"Teee728"},"content":"                    } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"Teee728"},"content":"                        ToDo work \u003d new ToDo(command.substring(5).trim(), ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":124,"author":{"gitId":"Teee728"},"content":"                        tasks.addToDoTask(work);","lastModifiedDate":"2024-02-07"},{"lineNumber":125,"author":{"gitId":"Teee728"},"content":"                        storage.saveTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"Teee728"},"content":"                        this.response \u003d work.getMessage() + \"\\n\" + ui.printNumberOfTasks(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":127,"author":{"gitId":"Teee728"},"content":"                        hasChanged \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"Teee728"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"Teee728"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"Teee728"},"content":"                case \"deadline\":","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"Teee728"},"content":"                    Matcher byMatcher \u003d Pattern.compile(\"/by\\\\s+(\\\\S.+)\").matcher(command);","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"Teee728"},"content":"                    String deadlineDescription \u003d \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"Teee728"},"content":"                    Matcher deadlineDescMatcher \u003d Pattern.compile(\"deadline\\\\s+(.+?)\\\\s*/by\").matcher(command);","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"Teee728"},"content":"                    if (words.length \u003e 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"Teee728"},"content":"                        if (deadlineDescMatcher.find()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"Teee728"},"content":"                            deadlineDescription \u003d deadlineDescMatcher.group(1).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"Teee728"},"content":"                        }","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"Teee728"},"content":"                    } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"Teee728"},"content":"                        String reply \u003d \"Please include both task description and deadline correctly!\";","lastModifiedDate":"2024-02-07"},{"lineNumber":140,"author":{"gitId":"Teee728"},"content":"                        ui.showError(reply);","lastModifiedDate":"2024-02-07"},{"lineNumber":141,"author":{"gitId":"Teee728"},"content":"                        this.response \u003d reply;","lastModifiedDate":"2024-02-07"},{"lineNumber":142,"author":{"gitId":"Teee728"},"content":"                        break;","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"Teee728"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"Teee728"},"content":"                    String by \u003d byMatcher.find() ? byMatcher.group(1).trim() : \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"Teee728"},"content":"                    Deadline work \u003d new Deadline(deadlineDescription, by, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":146,"author":{"gitId":"Teee728"},"content":"                    tasks.addDeadlineTask(work);","lastModifiedDate":"2024-02-07"},{"lineNumber":147,"author":{"gitId":"Teee728"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"Teee728"},"content":"                    this.response \u003d work.getMessage() + \"\\n\" + Ui.printNumberOfTasks(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":149,"author":{"gitId":"Teee728"},"content":"                    hasChanged \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"Teee728"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"Teee728"},"content":"                case \"event\":","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"Teee728"},"content":"                    Matcher fromMatcher \u003d Pattern.compile(\"/from\\\\s+(\\\\S+[^/]+)\").matcher(command);","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"Teee728"},"content":"                    Matcher toMatcher \u003d Pattern.compile(\"/to\\\\s+(\\\\S.+)\").matcher(command);","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"Teee728"},"content":"                    String eventDescription \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"Teee728"},"content":"                    Matcher descriptionMatcher \u003d Pattern.compile(\"event\\\\s+(.+?)\\\\s*/from\").matcher(command);","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"Teee728"},"content":"                    if (words.length \u003e 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"Teee728"},"content":"                        if (descriptionMatcher.find()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"Teee728"},"content":"                            eventDescription \u003d descriptionMatcher.group(1).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":159,"author":{"gitId":"Teee728"},"content":"                        }","lastModifiedDate":"2024-01-31"},{"lineNumber":160,"author":{"gitId":"Teee728"},"content":"                    } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":161,"author":{"gitId":"Teee728"},"content":"                        String reply \u003d \"You didn\u0027t enter the details or duration!\";","lastModifiedDate":"2024-02-07"},{"lineNumber":162,"author":{"gitId":"Teee728"},"content":"                        Ui.showError(reply);","lastModifiedDate":"2024-02-07"},{"lineNumber":163,"author":{"gitId":"Teee728"},"content":"                        this.response \u003d reply;","lastModifiedDate":"2024-02-07"},{"lineNumber":164,"author":{"gitId":"Teee728"},"content":"                        break;","lastModifiedDate":"2024-01-31"},{"lineNumber":165,"author":{"gitId":"Teee728"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":166,"author":{"gitId":"Teee728"},"content":"                    String from \u003d fromMatcher.find() ? fromMatcher.group(1).trim() : \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":167,"author":{"gitId":"Teee728"},"content":"                    String to \u003d toMatcher.find() ? toMatcher.group(1).trim() : \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":168,"author":{"gitId":"Teee728"},"content":"                    Event job \u003d new Event(eventDescription, from, to, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":169,"author":{"gitId":"Teee728"},"content":"                    tasks.addEventTask(job);","lastModifiedDate":"2024-02-07"},{"lineNumber":170,"author":{"gitId":"Teee728"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":171,"author":{"gitId":"Teee728"},"content":"                    this.response \u003d job.getMessage() + \"\\n\" + Ui.printNumberOfTasks(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":172,"author":{"gitId":"Teee728"},"content":"                    hasChanged \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":173,"author":{"gitId":"Teee728"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":174,"author":{"gitId":"Teee728"},"content":"                case \"find\":","lastModifiedDate":"2024-02-01"},{"lineNumber":175,"author":{"gitId":"Teee728"},"content":"                    String taskToFind \u003d command.substring(5).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":176,"author":{"gitId":"Teee728"},"content":"                    TaskList foundTasks \u003d tasks.findTask(taskToFind);","lastModifiedDate":"2024-02-01"},{"lineNumber":177,"author":{"gitId":"Teee728"},"content":"                    if (foundTasks.size() \u003e 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":178,"author":{"gitId":"Teee728"},"content":"                        this.response \u003d ui.showFoundTasks(taskToFind) + \"\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":179,"author":{"gitId":"Teee728"},"content":"                        tasks.getList(foundTasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":180,"author":{"gitId":"Teee728"},"content":"                    } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":181,"author":{"gitId":"Teee728"},"content":"                        this.response \u003d ui.showNoTasksFound(taskToFind);","lastModifiedDate":"2024-02-07"},{"lineNumber":182,"author":{"gitId":"Teee728"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":183,"author":{"gitId":"Teee728"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":184,"author":{"gitId":"Teee728"},"content":"                default:","lastModifiedDate":"2024-01-31"},{"lineNumber":185,"author":{"gitId":"Teee728"},"content":"                    String reply \u003d \"I don\u0027t know what you are saying :(\";","lastModifiedDate":"2024-02-07"},{"lineNumber":186,"author":{"gitId":"Teee728"},"content":"                    ui.showError(reply);","lastModifiedDate":"2024-02-07"},{"lineNumber":187,"author":{"gitId":"Teee728"},"content":"                    this.response \u003d reply;","lastModifiedDate":"2024-02-07"},{"lineNumber":188,"author":{"gitId":"Teee728"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":189,"author":{"gitId":"Teee728"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":190,"author":{"gitId":"Teee728"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":191,"author":{"gitId":"Teee728"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":192,"author":{"gitId":"Teee728"},"content":"            this.response \u003d e.getMessage();","lastModifiedDate":"2024-02-07"},{"lineNumber":193,"author":{"gitId":"Teee728"},"content":"        } finally {","lastModifiedDate":"2024-01-31"},{"lineNumber":194,"author":{"gitId":"Teee728"},"content":"            ui.printDashes();","lastModifiedDate":"2024-01-31"},{"lineNumber":195,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":196,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":197,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":198,"author":{"gitId":"Teee728"},"content":"    public String getResponse() {","lastModifiedDate":"2024-02-07"},{"lineNumber":199,"author":{"gitId":"Teee728"},"content":"        return this.response;","lastModifiedDate":"2024-02-07"},{"lineNumber":200,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":201,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Teee728":201}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package duke.exception;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":" * DukeException is a custom exception class for handling exceptions specific to the Duke application.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":" * It extends the standard Exception class and provides a customized toString method.","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"     * Constructs a DukeException with the specified error message.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"        super(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"     * Returns a string representation of the DukeException, providing additional context.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"     * @return A string representation of the exception.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"        return \"Ummm, \" + getMessage();","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Teee728":27}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package duke.storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"import duke.task.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":" * The Storage class handles the saving and loading of tasks to and from a data file.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":" * It uses a specific file format to store task details in a text file.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"    /** The file path for saving and loading tasks. */","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"    static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"    /** The TaskList used to store tasks during the program\u0027s execution. */","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"    private TaskList taskList \u003d new TaskList(new ArrayList \u003c Task \u003e (), this.ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"     * Saves the tasks from the given TaskList to the data file specified by FILE_PATH.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"     * @param tasks The TaskList containing tasks to be saved.","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"    public void saveTasks(TaskList tasks) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"        File parentFolder \u003d file.getParentFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"        if (!parentFolder.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"            if (!parentFolder.mkdirs()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"                throw new IOException(\"Failed to create the data folder.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(file, false)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"                Task task \u003d tasks.getTask(i);","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"                String text \u003d task.getType() + \" | \" + (task.getStatusIcon().equals(\"X\") ? \"1\" : \"0\") + \" | \" + task.getDescription();","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"                    if (deadline.getBy() !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"                        LocalDateTime byTime \u003d deadline.getByTime();","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"                        if (byTime !\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"                            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"                                String formattedDateTime \u003d byTime.format(DateTimeFormatter.ofPattern(\"MMM dd YYYY HH:mm\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"                                text +\u003d \" | \" + formattedDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"                            } catch (DateTimeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"                                text +\u003d \" | \" + deadline.getByString();","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"                            }","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Teee728"},"content":"                        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Teee728"},"content":"                            text +\u003d \" | \" + deadline.getByString();","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"                        }","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Teee728"},"content":"                    } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"Teee728"},"content":"                        text +\u003d \" | \" + deadline.getByString();","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"Teee728"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"Teee728"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Teee728"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Teee728"},"content":"                    String fromString \u003d (event.getFromTime() !\u003d null) ?","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Teee728"},"content":"                            event.getFromTime().format(DateTimeFormatter.ofPattern(\"MMM dd YYYY HH:mm\")) :","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Teee728"},"content":"                            (event.getFromString() !\u003d null ? event.getFromString() : \"\");","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Teee728"},"content":"                    String toString \u003d (event.getToTime() !\u003d null) ?","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Teee728"},"content":"                            event.getToTime().format(DateTimeFormatter.ofPattern(\"MMM dd YYYY HH:mm\")) :","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Teee728"},"content":"                            (event.getToString() !\u003d null ? event.getToString() : \"\");","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Teee728"},"content":"                    text +\u003d \" | \" + fromString + \" - \" + toString;","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Teee728"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Teee728"},"content":"                fileWriter.write(text);","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Teee728"},"content":"                fileWriter.append(\"\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Teee728"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"Teee728"},"content":"     * Loads tasks from the data file specified by FILE_PATH and returns them as an ArrayList.","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"Teee728"},"content":"     * @return An ArrayList containing tasks loaded from the data file.","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"Teee728"},"content":"     * @throws DukeException If there is an issue loading tasks from the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"Teee728"},"content":"    public ArrayList \u003c Task \u003e load() throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"Teee728"},"content":"        ArrayList \u003c Task \u003e loadedTasks \u003d new ArrayList \u003c \u003e ();","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Teee728"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"Teee728"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"Teee728"},"content":"            System.out.println(\"\\nData file does not currently exist. However, as you add a task, it will save it to\\nthe \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Teee728"},"content":"                    \"path specified. You can view your task list after exiting the chatbot.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"Teee728"},"content":"            return loadedTasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"Teee728"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"Teee728"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"Teee728"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"Teee728"},"content":"                String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"Teee728"},"content":"                TaskType taskType \u003d TaskType.valueOf(parts[0].trim());","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"Teee728"},"content":"                boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"Teee728"},"content":"                String description \u003d parts[2].trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"Teee728"},"content":"                String additionalInfo \u003d (parts.length \u003e 3) ? parts[3].trim() : null;","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"Teee728"},"content":"                Task task \u003d new Task(null, null);","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"Teee728"},"content":"                if (taskType \u003d\u003d TaskType.T) {","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"Teee728"},"content":"                    task \u003d new ToDo(description, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":117,"author":{"gitId":"Teee728"},"content":"                } else if (taskType \u003d\u003d TaskType.D) {","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"Teee728"},"content":"                    task \u003d new Deadline(description, additionalInfo, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":119,"author":{"gitId":"Teee728"},"content":"                } else if (taskType \u003d\u003d TaskType.E) {","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"Teee728"},"content":"                    String[] p \u003d additionalInfo.split(\"-\");","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"Teee728"},"content":"                    task \u003d new Event(description, p[0].trim(), p[1].trim(), ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":122,"author":{"gitId":"Teee728"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"Teee728"},"content":"                loadedTasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"Teee728"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"Teee728"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"Teee728"},"content":"            System.out.println(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"Teee728"},"content":"        return loadedTasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Teee728":131}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":" * The Deadline class represents a task with a specific deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":" * It is a subclass of the Task class and includes information about the deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"    /** The LocalDateTime representing the deadline. */","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"    /** The string representation of the deadline (used when parsing or if LocalDateTime parsing fails). */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"    protected String byString;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"     * Constructs a Deadline object with the specified description and deadline string.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"     * @param byString    The string representation of the deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"     * @throws DukeException If there are issues with the provided description or deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"    public Deadline(String description, String byString, Ui ui) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"        super(TaskType.D, description);","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"        this.byString \u003d byString.trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"            if (!this.byString.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"                DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"                this.by \u003d LocalDateTime.parse(byString, dateTimeFormatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"            this.by \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"        if (this.by \u003d\u003d null \u0026\u0026 this.byString.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"            throw new DukeException(\"By when? You forgot to enter \\\"/by\\\"\");","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"        } else if (description.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"            throw new DukeException(\"You forgot to enter the task for which you have to complete it by\");","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"     * Gets the representation of the deadline (either LocalDateTime or the original string).","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"     * @return The deadline as an Object (either LocalDateTime or String).","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"    public Object getBy() {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"        return (this.by !\u003d null) ? this.by : this.byString;","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"     * Gets the LocalDateTime representation of the deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"     * @return The deadline as a LocalDateTime object.","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"Teee728"},"content":"    public LocalDateTime getByTime() {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Teee728"},"content":"        return this.by;","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"Teee728"},"content":"     * Gets the string representation of the deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"Teee728"},"content":"     * @return The deadline as a string.","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"Teee728"},"content":"    public String getByString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Teee728"},"content":"        return this.byString;","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"Teee728"},"content":"     * Overrides the toString method to provide a formatted string representation of the Deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"Teee728"},"content":"     * @return Formatted string representation of the Deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"Teee728"},"content":"    public String getMessage() {","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"Teee728"},"content":"        String byStringFormatted \u003d (by !\u003d null) ?","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Teee728"},"content":"                \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\" :","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Teee728"},"content":"                (this.byString !\u003d null ? \" (by: \" + this.byString + \")\" : \"\");","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Teee728"},"content":"        return ui.printMessage(\"Got it. I\u0027ve added this task:\\n [D][\" + getStatusIcon() + \"] \" + getDescription() + byStringFormatted); // + by.getClass();","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Teee728":87}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":" * The Event class represents a task that spans a specific duration.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":" * It is a subclass of the Task class and includes information about the start and end times.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"    /** The LocalDateTime representing the start time of the event. */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"    /** The string representation of the start time (used when parsing or if LocalDateTime parsing fails). */","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"    protected String fromString;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"    /** The LocalDateTime representing the end time of the event. */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"    /** The string representation of the end time (used when parsing or if LocalDateTime parsing fails). */","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"    protected String toString;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"     * Constructs an Event object with the specified description, start time string, and end time string.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"     * @param fromString   The string representation of the start time.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"     * @param toString     The string representation of the end time.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"     * @throws DukeException If there are issues with the provided description or duration.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"    public Event(String description, String fromString, String toString, Ui ui) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"        super(TaskType.E, description);","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"        this.fromString \u003d fromString.trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"        this.toString \u003d toString.trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"            this.from \u003d LocalDateTime.parse(fromString, dateTimeFormatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"            this.to \u003d LocalDateTime.parse(toString, dateTimeFormatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"            this.from \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"            this.to \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"        validateInputs();","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"     * Gets the representation of the start time (either LocalDateTime or the original string).","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"     * @return The start time as an Object (either LocalDateTime or String).","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"    public Object getFrom() {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"        return (this.from !\u003d null) ? this.from : this.fromString;","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"     * Gets the representation of the end time (either LocalDateTime or the original string).","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"Teee728"},"content":"     * @return The end time as an Object (either LocalDateTime or String).","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"Teee728"},"content":"    public Object getTo() {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Teee728"},"content":"        return (this.to !\u003d null) ? this.to : this.toString;","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"Teee728"},"content":"     * Validates the inputs to ensure that required information is provided.","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"Teee728"},"content":"     * @throws DukeException If validation fails.","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"Teee728"},"content":"    private void validateInputs() throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Teee728"},"content":"        if ((from \u003d\u003d null \u0026\u0026 to \u003d\u003d null) \u0026\u0026 (fromString.isEmpty() \u0026\u0026 toString.isEmpty())) {","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Teee728"},"content":"            throw new DukeException(\"You did not mention the duration! Please re-enter correctly!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Teee728"},"content":"        } else if (from \u003d\u003d null \u0026\u0026 fromString.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Teee728"},"content":"            throw new DukeException(\"You did not mention from when! Please re-enter correctly!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Teee728"},"content":"        } else if (to \u003d\u003d null \u0026\u0026 toString.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Teee728"},"content":"            throw new DukeException(\"You did not mention till when! Please re-enter correctly!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Teee728"},"content":"        } else if (description.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Teee728"},"content":"            throw new DukeException(\"You didn\u0027t specify the event!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"Teee728"},"content":"     * Gets the LocalDateTime representation of the start time.","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"Teee728"},"content":"     * @return The start time as a LocalDateTime object.","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"Teee728"},"content":"    public LocalDateTime getFromTime() {","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Teee728"},"content":"        return this.from;","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"Teee728"},"content":"     * Gets the LocalDateTime representation of the end time.","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"Teee728"},"content":"     * @return The end time as a LocalDateTime object.","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"Teee728"},"content":"    public LocalDateTime getToTime() {","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"Teee728"},"content":"        return this.to;","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"Teee728"},"content":"     * Gets the string representation of the start time.","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"Teee728"},"content":"     * @return The start time as a string.","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"Teee728"},"content":"    public String getFromString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"Teee728"},"content":"        return this.fromString;","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"Teee728"},"content":"     * Gets the string representation of the end time.","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"Teee728"},"content":"     * @return The end time as a string.","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"Teee728"},"content":"    public String getToString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"Teee728"},"content":"        return this.toString;","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"Teee728"},"content":"     * Overrides the toString method to provide a formatted string representation of the Event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"Teee728"},"content":"     * @return Formatted string representation of the Event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"Teee728"},"content":"    public String getMessage() {","lastModifiedDate":"2024-02-07"},{"lineNumber":130,"author":{"gitId":"Teee728"},"content":"        String fromStringFormatted \u003d (from !\u003d null) ?","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"Teee728"},"content":"                \" from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) :","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"Teee728"},"content":"                (this.fromString !\u003d null ? \" from: \" + this.fromString : \"\");","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"Teee728"},"content":"        String toStringFormatted \u003d (to !\u003d null) ?","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"Teee728"},"content":"                \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) :","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"Teee728"},"content":"                (this.toString !\u003d null ? \" to: \" + this.toString : \"\");","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"Teee728"},"content":"        return ui.printMessage(\"Got it. I\u0027ve added this task:\\n [E][\" + getStatusIcon() + \"] \" + getDescription() +","lastModifiedDate":"2024-02-07"},{"lineNumber":139,"author":{"gitId":"Teee728"},"content":"                fromStringFormatted + toStringFormatted); //+ from.getClass() + to.getClass();","lastModifiedDate":"2024-02-07"},{"lineNumber":140,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Teee728":141}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":" * The Task class represents a generic task with a description and completion status.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":" * It serves as the base class for more specific task types.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"public class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"    /** The description of the task. */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"    protected String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"    /** The type of the task (e.g., ToDo, Deadline, Event). */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"    protected TaskType type;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"    /** The completion status of the task. */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"    /** The status icon indicating whether the task is done or not. */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"    protected String statusIcon;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"     * Constructs a Task object with the specified type and description.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"     * @param type        The type of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"    public Task(TaskType type, String description) {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"        updateStatusIcon();","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"     * Constructs a Task object with the specified description.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"     * Checks and returns the completion status of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"     * @return True if the task is marked as done, false otherwise.","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"    public boolean checkStatus() {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"        return this.isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"     * Gets the type of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"     * @return The type of the task (e.g., ToDo, Deadline, Event).","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"    public TaskType getType() {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"        return this.type;","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"     * Updates the status icon based on the completion status.","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"    private void updateStatusIcon() {","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"        this.statusIcon \u003d (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"     * Gets the status icon indicating whether the task is done or not.","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"Teee728"},"content":"     * @return The status icon (\"X\" if done, \" \" if not done).","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"Teee728"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Teee728"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"Teee728"},"content":"     * Gets the description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"Teee728"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"Teee728"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Teee728"},"content":"        return this.description;","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Teee728":82}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":" * The TaskList class represents a list of tasks in the Duke application.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":" * It provides methods to add, delete, mark, unmark, and display tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"    /** The list of tasks. */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"    private ArrayList \u003c Task \u003e tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"    /** The user interface for displaying messages related to task operations. */","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"     * Constructs a TaskList with the specified list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"    public TaskList(ArrayList \u003c Task \u003e tasks, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"        this.tasks \u003d new ArrayList \u003c \u003e ();","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"     * Adds a generic task to the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"     * Adds a ToDo task to the task list and prints its details.","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"     * @param task The ToDo task to be added.","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"    public void addToDoTask(ToDo task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"     * Adds a Deadline task to the task list and prints its details.","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"     * @param task The Deadline task to be added.","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"    public void addDeadlineTask(Deadline task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"Teee728"},"content":"     * Adds an Event task to the task list and prints its details.","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"Teee728"},"content":"     * @param task The Event task to be added.","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"Teee728"},"content":"    public void addEventTask(Event task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Teee728"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Teee728"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"Teee728"},"content":"     * Retrieves a task from the task list based on the specified index.","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"Teee728"},"content":"     * @param index The index of the task in the list.","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"Teee728"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"Teee728"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Teee728"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"Teee728"},"content":"     * Gets the number of tasks in the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"Teee728"},"content":"     * @return The number of tasks in the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"Teee728"},"content":"    public int size() {","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"Teee728"},"content":"        return tasks.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"Teee728"},"content":"     * Deletes a task from the task list based on the specified index.","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"Teee728"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"Teee728"},"content":"     * @throws DukeException If the index is out of bounds.","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"Teee728"},"content":"    public String deleteTask(int index) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"Teee728"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"Teee728"},"content":"            Ui.showError(\"You have not created task \" + (index + 1) + \" for me to delete!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"Teee728"},"content":"        Task removedTask \u003d tasks.remove(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"Teee728"},"content":"        return this.ui.printDeletedTaskMessage(removedTask);","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"Teee728"},"content":"     * Marks a task as done and prints a message.","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"Teee728"},"content":"     * @param job The task to be marked as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"Teee728"},"content":"     * @throws DukeException If the task is already marked as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"Teee728"},"content":"    public String markStatus(Task job) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"Teee728"},"content":"        if (job.isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"Teee728"},"content":"            return Ui.showError(\"This task is already marked as done.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":116,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"Teee728"},"content":"        job.isDone \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"Teee728"},"content":"        return this.ui.markTask(job);","lastModifiedDate":"2024-02-07"},{"lineNumber":119,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"Teee728"},"content":"     * Unmarks a task as done and prints a message.","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"Teee728"},"content":"     * @param job The task to be unmarked.","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"Teee728"},"content":"     * @throws DukeException If the task is already marked as not done.","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"Teee728"},"content":"    public String unmarkStatus(Task job) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":128,"author":{"gitId":"Teee728"},"content":"        if (!job.isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"Teee728"},"content":"            return Ui.showError(\"This task is already marked as not done.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":130,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"Teee728"},"content":"        job.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"Teee728"},"content":"        return this.ui.unmarkTask(job);","lastModifiedDate":"2024-02-07"},{"lineNumber":133,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"Teee728"},"content":"     * Displays the list of tasks along with their details.","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"Teee728"},"content":"     * @param taskList The TaskList to be displayed.","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"Teee728"},"content":"     * @throws DukeException If there is an issue displaying the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"Teee728"},"content":"    public static String getList(TaskList taskList) throws DukeException { //need to put in UI class?","lastModifiedDate":"2024-02-07"},{"lineNumber":142,"author":{"gitId":"Teee728"},"content":"        String taskDetails \u003d \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":143,"author":{"gitId":"Teee728"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"Teee728"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"Teee728"},"content":"             taskDetails +\u003d (i + 1) + \".[\" + task.type + \"][\" + (task !\u003d null ? task.getStatusIcon() : \"\") + \"] \" + task.description;","lastModifiedDate":"2024-02-07"},{"lineNumber":146,"author":{"gitId":"Teee728"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"Teee728"},"content":"                Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"Teee728"},"content":"                taskDetails +\u003d \" (by: \" + (deadlineTask.by \u003d\u003d null ? deadlineTask.byString : deadlineTask.by) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"Teee728"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"Teee728"},"content":"                Event eventTask \u003d (Event) task;","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"Teee728"},"content":"                taskDetails +\u003d \" (from: \" + (eventTask.from \u003d\u003d null ? eventTask.fromString : eventTask.from) + \" to: \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"Teee728"},"content":"                        (eventTask.to \u003d\u003d null ? eventTask.toString : eventTask.to) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"Teee728"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"Teee728"},"content":"            taskDetails +\u003d \"\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":155,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"Teee728"},"content":"        return Ui.printMessage(taskDetails);","lastModifiedDate":"2024-02-07"},{"lineNumber":157,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":160,"author":{"gitId":"Teee728"},"content":"     * Searches for tasks within a given list that contain a specified search string in their descriptions.","lastModifiedDate":"2024-02-01"},{"lineNumber":161,"author":{"gitId":"Teee728"},"content":"     * Creates and returns a new TaskList containing the found tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":162,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":163,"author":{"gitId":"Teee728"},"content":"     * @param searchString The string to search for in the task descriptions.","lastModifiedDate":"2024-02-01"},{"lineNumber":164,"author":{"gitId":"Teee728"},"content":"     * @return A new TaskList containing tasks with descriptions that match the search string.","lastModifiedDate":"2024-02-01"},{"lineNumber":165,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":166,"author":{"gitId":"Teee728"},"content":"    public TaskList findTask(String searchString) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":167,"author":{"gitId":"Teee728"},"content":"        TaskList foundTasks \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":168,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":169,"author":{"gitId":"Teee728"},"content":"        for (Task job: tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":170,"author":{"gitId":"Teee728"},"content":"            if (job.getDescription().contains(searchString)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":171,"author":{"gitId":"Teee728"},"content":"                foundTasks.addTask(job);","lastModifiedDate":"2024-02-01"},{"lineNumber":172,"author":{"gitId":"Teee728"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":173,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":174,"author":{"gitId":"Teee728"},"content":"        return foundTasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":175,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":176,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":177,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Teee728":177}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":" * The TaskType enum represents the types of tasks in the Duke application.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":" * It includes ToDo (T), Deadline (D), and Event (E) task types.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"public enum TaskType {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"        /**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"         * Represents a ToDo task type.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"         */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"        T,","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"        /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"         * Represents a Deadline task type.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"         */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"        D,","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"        /**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"         * Represents an Event task type.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"         */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"        E","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Teee728":23}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":" * The ToDo class represents a task of type ToDo in the Duke application.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":" * It is a subclass of the Task class.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"     * Constructs a ToDo task with the specified description.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"     * @throws DukeException If there is an issue with the task creation.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"    public ToDo(String description, Ui ui) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"        super(TaskType.T, description);","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"     * @return A string representation of the ToDo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"    public String getMessage() {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"         return ui.printMessage(\"Got it. I\u0027ve added this task: \\n [T][\" + getStatusIcon() + \"] \" + getDescription());","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Teee728":31}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package duke.ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"    private void flip() {","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"        db.flip();","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"        return db;","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Teee728":61}},{"path":"src/main/java/duke/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package duke.ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"import duke.Main;","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"public class Launcher {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Teee728":13}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package duke.ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"                DialogBox.getDukeDialog(Ui.showWelcomeMessage(), dukeImage));","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"//    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"//    private void handleUserInput() {","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"//        String input \u003d userInput.getText().strip();","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"//        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"//        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"//                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"//                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"//        );","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"//        userInput.clear();","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"//    }","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"        String input \u003d userInput.getText().trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"        if (!input.isEmpty()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"            String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"Teee728"},"content":"            );","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"Teee728"},"content":"            userInput.clear();","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Teee728":67}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package duke.ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"import duke.task.*;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":" * The Ui class handles user interface-related operations in the Duke application.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"    ArrayList \u003c Task \u003e arr;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"     * Displays an error message indicating a problem with loading tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"    public static String showLoadingError() {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"       return \"Error loading tasks. Initializing with an empty task list.\"; //fix?","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"     * Displays a welcome message when the Duke application is launched.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"    public static String showWelcomeMessage() {","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"        return \"Hello! I\u0027m Tango. \\nWhat can I do for you today?\";","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"//        System.out.println(\"-------------------------------\");","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"//        System.out.println(\"Hello! I\u0027m Tango. \\nWhat can I do for you today?\");","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"//        System.out.println(\"-------------------------------\");","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"     * Prints the number of tasks in the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"     * @param tasks The task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"    public static String printNumberOfTasks(TaskList tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"        return (tasks.size() \u003d\u003d 1 ? \" Now you have 1 task in the list.\" :","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"                \"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"     * Prints a message about the deleted task.","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"     * @param task The deleted task.","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"    public static String printDeletedTaskMessage(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"        String taskDetails \u003d \"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"                \"[\" + task.getType() + \"][\" + task.getStatusIcon() + \"] \" + task.getDescription();","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"            Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"            taskDetails +\u003d \" (by: \" + deadlineTask.getBy() + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"            Event eventTask \u003d (Event) task;","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"            taskDetails +\u003d \" (from: \" + eventTask.getFrom() + \" to: \" + eventTask.getTo() + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"        return taskDetails;","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"Teee728"},"content":"     * Displays a goodbye message when the user exits the Duke application.","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"    public static String showGoodbyeMessage() {","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"Teee728"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"Teee728"},"content":"     * Displays an error message.","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"Teee728"},"content":"     * @param errorMessage The error message to be displayed.","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"Teee728"},"content":"     * @throws DukeException DukeException is thrown to indicate an error.","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"Teee728"},"content":"    public static String showError(String errorMessage) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"Teee728"},"content":"        return errorMessage;","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"Teee728"},"content":"     * Displays the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"Teee728"},"content":"     * @param tasks The task list to be displayed.","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"Teee728"},"content":"    public static String showTaskList(TaskList tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"Teee728"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Teee728"},"content":"            return \"You have no tasks in your list!\";","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"Teee728"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Teee728"},"content":"            return (tasks.size() \u003d\u003d 1 ? \"Here is the task in your list:\" : \"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"Teee728"},"content":"     * Displays a message indicating that a task has been marked as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"Teee728"},"content":"     * @param task The task marked as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"Teee728"},"content":"    public static String markTask(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"Teee728"},"content":"        return \"Nice! I\u0027ve marked this as done: \\n \" + \"[\" + task.getType() + \"][\" + task.getStatusIcon() + \"] \" + task.getDescription();","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"Teee728"},"content":"     * Displays a separator line.","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"Teee728"},"content":"    public static String printDashes() {","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"Teee728"},"content":"        return \"-------------------------------\";","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"Teee728"},"content":"     * Displays a message indicating that a task has been marked as not done.","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"Teee728"},"content":"     * @param task The task marked as not done.","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"Teee728"},"content":"    public static String unmarkTask(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"Teee728"},"content":"        return \"OK, I\u0027ve marked this task as not done yet: \\n \" + \"[\" + task.getType() + \"][\" + task.getStatusIcon() + \"] \" + task.getDescription();","lastModifiedDate":"2024-02-07"},{"lineNumber":115,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"Teee728"},"content":"     * Displays a message indicating tasks that match a specified search string.","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"Teee728"},"content":"     * @param task The search string to match tasks against.","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"Teee728"},"content":"    public static String showFoundTasks(String task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":123,"author":{"gitId":"Teee728"},"content":"        return \"Here are the tasks matching with \\\"\" + task + \"\\\" in your list: \";","lastModifiedDate":"2024-02-07"},{"lineNumber":124,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"Teee728"},"content":"     * Displays a message indicating no tasks match a specified search string.","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"Teee728"},"content":"     * @param task The search string to match tasks against.","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"Teee728"},"content":"    public static String showNoTasksFound(String task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":132,"author":{"gitId":"Teee728"},"content":"        return \"Sorry, you have no items in your tasklist matching with \\\"\" + task + \"\\\"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":133,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":134,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":135,"author":{"gitId":"Teee728"},"content":"    public static String printMessage(String text) {","lastModifiedDate":"2024-02-07"},{"lineNumber":136,"author":{"gitId":"Teee728"},"content":"        return text;","lastModifiedDate":"2024-02-07"},{"lineNumber":137,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Teee728":138}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"\u003c!--\u003e maxHeight\u003d\"-Infinity\" \u003c/!--\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"-Infinity\" prefHeight\u003d\"100.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #042654; -fx-background-radius: 15;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"            \u003cfont\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"                \u003cFont name\u003d\"Arial Bold\" size\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"            \u003c/font\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"                \u003cInsets right\u003d\"20.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Teee728":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #042654;\" text\u003d\"Send\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"            \u003cfont\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"                \u003cFont name\u003d\"Arial Bold\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"            \u003c/font\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"        \u003c/Button\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #eaf8ff; -fx-spacing: 30;\"\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"                        \u003cInsets bottom\u003d\"100.0\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Teee728":29}},{"path":"src/test/java/duke/command/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":" * JUnit tests for the {@link Parser} class.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"     * Tests the behavior of the {@code processCommand} method","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"     * when the \"bye\" command is processed.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"     * It should set the running status to false.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"     * @throws DukeException If an error occurs during command processing.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"    void processCommandByeCommand_shouldSetRunningStatusToFalse() throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"        Parser parser \u003d new Parser(taskList, storage, scanner, true);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"        parser.setCommand(\"bye\");","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"        parser.processCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"        assertFalse(parser.getRunningStatus());","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"     * Tests the behavior of the {@code processCommand} method","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"     * when the \"list\" command is processed.","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"     * It should print the task list to the standard output.","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"     * @throws DukeException If an error occurs during command processing.","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"    void processCommandListCommand_shouldPrintTaskList() throws DukeException { //only line separators is an issue, but produces correct output","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"        taskList.addToDoTask(new ToDo(\"Test Task\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"        Parser parser \u003d new Parser(taskList, storage, scanner, true);","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"        parser.setCommand(\"list\");","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"        parser.processCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Teee728"},"content":"        assertEquals(\"-------------------------------\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Teee728"},"content":"                \"Here is the task in your list:\\n1.[T][ ] Test Task\\n-------------------------------\", outputStream.toString().trim());","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Teee728"},"content":"        System.setOut(System.out);","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Teee728":69}},{"path":"src/test/java/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package duke.storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":" * JUnit tests for the {@link Storage} class.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"public class StorageTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"     * Set up tasks and storage before each test.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"    @BeforeEach","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"    void setUp() {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"        taskList \u003d new TaskList(new ArrayList \u003c \u003e ());","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"     * Tests the {@code saveTasks} method, ensuring that tasks are saved to a file","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"     * and then loaded correctly.","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"     * @throws IOException    If an I/O error occurs during saving tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"     * @throws DukeException If an error occurs during loading tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"    void saveTasks_shouldSaveTasksToFile() throws IOException, DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"        taskList.addToDoTask(new ToDo(\"Finish this project\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"        taskList.addDeadlineTask(new Deadline(\"Test project\", \"Monday\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"        taskList.addDeadlineTask(new Deadline(\"Test project\", \"12/12/2023 1200\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"        taskList.addEventTask(new Event(\"Test Event\", \"2022-12-31\", \"2023-01-01\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"        ArrayList \u003c Task \u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"        assertEquals(taskList.size(), loadedTasks.size());","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"            assertEquals(taskList.getTask(i).getDescription(), loadedTasks.get(i).getDescription());","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"            assertEquals(taskList.getTask(i).getType(), loadedTasks.get(i).getType());","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"            assertEquals(taskList.getTask(i).checkStatus(), loadedTasks.get(i).checkStatus());","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Teee728"},"content":"        deleteTestFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"Teee728"},"content":"     * Tests the {@code load} method when the file is empty.","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"Teee728"},"content":"     * It should return an empty task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"Teee728"},"content":"     * @throws DukeException If an error occurs during loading tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"Teee728"},"content":"     * @throws IOException    If an I/O error occurs during saving tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"Teee728"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Teee728"},"content":"    void load_emptyFile_shouldReturnEmptyTaskList() throws DukeException, IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Teee728"},"content":"        storage.saveTasks(new TaskList());","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Teee728"},"content":"        ArrayList \u003c Task \u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Teee728"},"content":"        assertTrue(loadedTasks.isEmpty());","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Teee728"},"content":"        deleteTestFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"Teee728"},"content":"     * Deletes the test file created during testing.","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"Teee728"},"content":"    private void deleteTestFile() {","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Teee728"},"content":"        File file \u003d new File(Storage.FILE_PATH);","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Teee728"},"content":"        if (file.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Teee728"},"content":"            file.delete();","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Teee728":91}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":" * JUnit tests for the {@link TaskList} class.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"public class TaskListTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"     * Set up the task list before each test.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"    @BeforeEach","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"    void setUp() {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"        taskList \u003d new TaskList(new ArrayList \u003c \u003e ());","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"     * Tests the {@code addTask} method with a valid task.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"     * Verifies that the task is added to the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"    void addTask_validTask_taskAdded() {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"        Task task \u003d new Task(TaskType.T, \"Test Task\");","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"        assertEquals(task, taskList.getTask(0));","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"     * Tests the {@code addToDoTask} method with a valid ToDo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"     * Verifies that the ToDo task is added to the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"     * @throws DukeException If an error occurs while creating the ToDo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"    void addToDoTask_validToDoTask_toDoTaskAdded() {","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"        ToDo toDoTask \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"            toDoTask \u003d new ToDo(\"Test ToDo Task\");","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"        taskList.addToDoTask(toDoTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"        assertEquals(toDoTask, taskList.getTask(0));","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"     * Tests the {@code deleteTask} method with a valid index.","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"     * Verifies that the task at the specified index is deleted from the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"Teee728"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Teee728"},"content":"    void deleteTask_validIndex_taskDeleted() {","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Teee728"},"content":"        Task task \u003d new Task(TaskType.T, \"Test Task\");","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Teee728"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Teee728"},"content":"        assertDoesNotThrow(() -\u003e taskList.deleteTask(0));","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Teee728"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Teee728":73}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"public class TaskTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Teee728":5}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":" * JUnit tests for the {@link ToDo} class.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"public class ToDoTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"     * Tests the constructor for creating a ToDo task with a description.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"     * Verifies that the ToDo task is created successfully with the given description.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"    public void constructor_todoWithDescription_success() {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"            ToDo todo \u003d new ToDo(\"Test ToDo\");","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"            assertEquals(\"Test ToDo\", todo.getDescription());","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"            assertFalse(todo.checkStatus());","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"            fail(\"Exception not expected: \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"     * Tests the {@code toString} method for the string representation of a ToDo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"     * Verifies that the string representation matches the expected format.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"    public void toString_todoCheckStringRepresentation_success() {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"            ToDo todo \u003d new ToDo(\"Test ToDo\");","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"            assertEquals(\"Got it. I\u0027ve added this task: \\n [T][\" + todo.getStatusIcon() + \"] \" + todo.getDescription(),","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"                    todo.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"            fail(\"Exception not expected: \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Teee728":44}},{"path":"src/test/java/duke/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package duke.ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"public class UiTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Teee728":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"java -classpath ..\\bin Duke \u003c in.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Teee728":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"java -classpath ../bin Duke \u003c in.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Teee728":1,"-":37}}]
