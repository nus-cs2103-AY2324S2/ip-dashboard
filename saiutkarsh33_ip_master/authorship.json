[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"saiutkarsh33"},"content":"    implementation group: \u0027org.xerial\u0027, name: \u0027sqlite-jdbc\u0027, version: \u00273.45.0.0\u0027","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"saiutkarsh33"},"content":"    implementation \u0027ch.qos.logback:logback-classic:1.4.12\u0027","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"saiutkarsh33"},"content":"    implementation group: \u0027io.github.cdimascio\u0027, name: \u0027dotenv-java\u0027, version: \u00273.0.0\u0027","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"saiutkarsh33"},"content":"    mainClass.set(\"chatbot.Duke\")","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"saiutkarsh33"},"content":"run {","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"saiutkarsh33"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"saiutkarsh33":10,"-":41}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"[T][ ] j","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"saiutkarsh33":1}},{"path":"src/main/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"[D][X] return book (by: Oct 15 2019)","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"saiutkarsh33":1}},{"path":"src/main/gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"@rem","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"saiutkarsh33"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"saiutkarsh33"},"content":"@rem","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"saiutkarsh33"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"saiutkarsh33"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"saiutkarsh33"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"saiutkarsh33"},"content":"@rem","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"saiutkarsh33"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"saiutkarsh33"},"content":"@rem","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"saiutkarsh33"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"saiutkarsh33"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"saiutkarsh33"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"saiutkarsh33"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"saiutkarsh33"},"content":"@rem limitations under the License.","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"saiutkarsh33"},"content":"@rem","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"saiutkarsh33"},"content":"@if \"%DEBUG%\"\u003d\u003d\"\" @echo off","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"saiutkarsh33"},"content":"@rem ##########################################################################","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"saiutkarsh33"},"content":"@rem","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"saiutkarsh33"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"saiutkarsh33"},"content":"@rem","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"saiutkarsh33"},"content":"@rem ##########################################################################","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"saiutkarsh33"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"saiutkarsh33"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"saiutkarsh33"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"saiutkarsh33"},"content":"if \"%DIRNAME%\"\u003d\u003d\"\" set DIRNAME\u003d.","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"saiutkarsh33"},"content":"@rem This is normally unused","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"saiutkarsh33"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"saiutkarsh33"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"saiutkarsh33"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"saiutkarsh33"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"saiutkarsh33"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"saiutkarsh33"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"saiutkarsh33"},"content":"@rem Find java.exe","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"saiutkarsh33"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"saiutkarsh33"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"saiutkarsh33"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"saiutkarsh33"},"content":"if %ERRORLEVEL% equ 0 goto execute","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"saiutkarsh33"},"content":"echo.","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"saiutkarsh33"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"saiutkarsh33"},"content":"echo.","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"saiutkarsh33"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"saiutkarsh33"},"content":"echo location of your Java installation.","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"saiutkarsh33"},"content":"goto fail","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"saiutkarsh33"},"content":":findJavaFromJavaHome","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"saiutkarsh33"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"saiutkarsh33"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"saiutkarsh33"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"saiutkarsh33"},"content":"echo.","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"saiutkarsh33"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"saiutkarsh33"},"content":"echo.","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"saiutkarsh33"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"saiutkarsh33"},"content":"echo location of your Java installation.","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"saiutkarsh33"},"content":"goto fail","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"saiutkarsh33"},"content":":execute","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"saiutkarsh33"},"content":"@rem Setup the command line","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"saiutkarsh33"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"saiutkarsh33"},"content":"@rem Execute Gradle","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"saiutkarsh33"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"saiutkarsh33"},"content":":end","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"saiutkarsh33"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"saiutkarsh33"},"content":"if %ERRORLEVEL% equ 0 goto mainEnd","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"saiutkarsh33"},"content":":fail","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"saiutkarsh33"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"saiutkarsh33"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"saiutkarsh33"},"content":"set EXIT_CODE\u003d%ERRORLEVEL%","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"saiutkarsh33"},"content":"if %EXIT_CODE% equ 0 set EXIT_CODE\u003d1","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"saiutkarsh33"},"content":"if not \"\"\u003d\u003d\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"saiutkarsh33"},"content":"exit /b %EXIT_CODE%","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"saiutkarsh33"},"content":":mainEnd","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"saiutkarsh33"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"saiutkarsh33"},"content":":omega","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"saiutkarsh33":92}},{"path":"src/main/java/chatbot/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"package chatbot;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.File;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"saiutkarsh33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"saiutkarsh33"},"content":" * Thrown to indicate that the description for a Todo task cannot be empty.","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"saiutkarsh33"},"content":"class EmptyTodoException extends Exception {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"saiutkarsh33"},"content":"  public EmptyTodoException() {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"saiutkarsh33"},"content":"    super(\"Todo cannot have empty description .\");","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"saiutkarsh33"},"content":" * Thrown to indicate that the description for a Deadline task cannot be empty.","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"saiutkarsh33"},"content":"class EmptyDeadlineException extends Exception {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"saiutkarsh33"},"content":"  public EmptyDeadlineException() {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"saiutkarsh33"},"content":"    super(\"Deadline cannot have empty description.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"saiutkarsh33"},"content":" * Thrown to indicate that the description for an Event task cannot be empty.","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"saiutkarsh33"},"content":"class EmptyEventException extends Exception {","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"saiutkarsh33"},"content":"  public EmptyEventException() {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"saiutkarsh33"},"content":"    super(\"Event cannot have empty description.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"saiutkarsh33"},"content":" * Thrown to indicate that the user input is invalid.","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"saiutkarsh33"},"content":"class InvalidException extends Exception {","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"saiutkarsh33"},"content":"  public InvalidException() {","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"saiutkarsh33"},"content":"    super(\"Sorry, invalid input.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"saiutkarsh33"},"content":" * Represents a generic task with a description and a completion status.","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"saiutkarsh33"},"content":"class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"saiutkarsh33"},"content":"  private String description;","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"saiutkarsh33"},"content":"  private boolean isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"saiutkarsh33"},"content":"  public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"saiutkarsh33"},"content":"    this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"saiutkarsh33"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"saiutkarsh33"},"content":"  public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"saiutkarsh33"},"content":"    return (isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"saiutkarsh33"},"content":"  public void markAsDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":68,"author":{"gitId":"saiutkarsh33"},"content":"    this.isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":69,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"saiutkarsh33"},"content":"  public void markAsUndone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":72,"author":{"gitId":"saiutkarsh33"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"saiutkarsh33"},"content":"  @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"saiutkarsh33"},"content":"  public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"saiutkarsh33"},"content":"    return (this.getStatusIcon() + this.description);","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"saiutkarsh33"},"content":"  public String getDescription() {","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"saiutkarsh33"},"content":"    return description;","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":84,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":85,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"saiutkarsh33"},"content":" * Represents a Todo task.","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"saiutkarsh33"},"content":"class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":89,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":90,"author":{"gitId":"saiutkarsh33"},"content":"  public Todo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":91,"author":{"gitId":"saiutkarsh33"},"content":"    super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-24"},{"lineNumber":93,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"saiutkarsh33"},"content":"  @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":95,"author":{"gitId":"saiutkarsh33"},"content":"  public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":96,"author":{"gitId":"saiutkarsh33"},"content":"    return (\"[T]\" + super.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":97,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-24"},{"lineNumber":98,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":99,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":100,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"saiutkarsh33"},"content":" * Represents a Deadline task with a due date.","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"saiutkarsh33"},"content":"class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":104,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":105,"author":{"gitId":"saiutkarsh33"},"content":"  protected String by;","lastModifiedDate":"2024-01-24"},{"lineNumber":106,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":107,"author":{"gitId":"saiutkarsh33"},"content":"  public Deadline(String description, String dateString) {","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"saiutkarsh33"},"content":"    super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":109,"author":{"gitId":"saiutkarsh33"},"content":"    LocalDate date \u003d LocalDate.parse(dateString);","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"saiutkarsh33"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-01-27"},{"lineNumber":111,"author":{"gitId":"saiutkarsh33"},"content":"    this.by \u003d date.format(formatter);","lastModifiedDate":"2024-01-27"},{"lineNumber":112,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-24"},{"lineNumber":113,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":114,"author":{"gitId":"saiutkarsh33"},"content":"  @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":115,"author":{"gitId":"saiutkarsh33"},"content":"  public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":116,"author":{"gitId":"saiutkarsh33"},"content":"    return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":117,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-24"},{"lineNumber":118,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":119,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":120,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"saiutkarsh33"},"content":" * Represents an Event task with a start and end time.","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"saiutkarsh33"},"content":"class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":124,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":125,"author":{"gitId":"saiutkarsh33"},"content":"  protected String from;","lastModifiedDate":"2024-01-24"},{"lineNumber":126,"author":{"gitId":"saiutkarsh33"},"content":"  protected String to;","lastModifiedDate":"2024-01-24"},{"lineNumber":127,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":128,"author":{"gitId":"saiutkarsh33"},"content":"  public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-24"},{"lineNumber":129,"author":{"gitId":"saiutkarsh33"},"content":"    super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":130,"author":{"gitId":"saiutkarsh33"},"content":"    this.from \u003d from;","lastModifiedDate":"2024-01-24"},{"lineNumber":131,"author":{"gitId":"saiutkarsh33"},"content":"    this.to \u003d to;","lastModifiedDate":"2024-01-24"},{"lineNumber":132,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-24"},{"lineNumber":133,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":134,"author":{"gitId":"saiutkarsh33"},"content":"  @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":135,"author":{"gitId":"saiutkarsh33"},"content":"  public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":136,"author":{"gitId":"saiutkarsh33"},"content":"    return (","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"saiutkarsh33"},"content":"      \"[E]\" + super.toString() + \" (from: \" + from + \") \" + \"to: \" + to + \")\"","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"saiutkarsh33"},"content":"    );","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-24"},{"lineNumber":140,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":141,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":142,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":143,"author":{"gitId":"saiutkarsh33"},"content":" * The main class for the chatbot application. It initializes and runs the chatbot,","lastModifiedDate":"2024-01-28"},{"lineNumber":144,"author":{"gitId":"saiutkarsh33"},"content":" * handling the primary control flow of the application.","lastModifiedDate":"2024-01-28"},{"lineNumber":145,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":146,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":147,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":148,"author":{"gitId":"saiutkarsh33"},"content":"  private TaskList myList;","lastModifiedDate":"2024-01-28"},{"lineNumber":149,"author":{"gitId":"saiutkarsh33"},"content":"  private Storage st;","lastModifiedDate":"2024-01-28"},{"lineNumber":150,"author":{"gitId":"saiutkarsh33"},"content":"  private Ui ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":151,"author":{"gitId":"saiutkarsh33"},"content":"  private Parser p;","lastModifiedDate":"2024-01-28"},{"lineNumber":152,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":153,"author":{"gitId":"saiutkarsh33"},"content":"  public Duke(String filePath) {","lastModifiedDate":"2024-01-28"},{"lineNumber":154,"author":{"gitId":"saiutkarsh33"},"content":"    this.st \u003d new Storage(filePath);","lastModifiedDate":"2024-01-28"},{"lineNumber":155,"author":{"gitId":"saiutkarsh33"},"content":"    this.myList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2024-01-28"},{"lineNumber":156,"author":{"gitId":"saiutkarsh33"},"content":"    this.p \u003d new Parser();","lastModifiedDate":"2024-01-28"},{"lineNumber":157,"author":{"gitId":"saiutkarsh33"},"content":"    this.ui \u003d new Ui(this.myList);","lastModifiedDate":"2024-01-28"},{"lineNumber":158,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-24"},{"lineNumber":159,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":160,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":161,"author":{"gitId":"saiutkarsh33"},"content":"   * Starts and runs the chatbot. This method keeps the chatbot running","lastModifiedDate":"2024-01-28"},{"lineNumber":162,"author":{"gitId":"saiutkarsh33"},"content":"   * until the user decides to exit.","lastModifiedDate":"2024-01-28"},{"lineNumber":163,"author":{"gitId":"saiutkarsh33"},"content":"   * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-01-28"},{"lineNumber":164,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":165,"author":{"gitId":"saiutkarsh33"},"content":"  public void run() throws IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":166,"author":{"gitId":"saiutkarsh33"},"content":"    ui.start();","lastModifiedDate":"2024-01-28"},{"lineNumber":167,"author":{"gitId":"saiutkarsh33"},"content":"    boolean continueChat \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":168,"author":{"gitId":"saiutkarsh33"},"content":"    while (continueChat) {","lastModifiedDate":"2024-01-28"},{"lineNumber":169,"author":{"gitId":"saiutkarsh33"},"content":"      continueChat \u003d ui.reply(this.st);","lastModifiedDate":"2024-01-29"},{"lineNumber":170,"author":{"gitId":"saiutkarsh33"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":171,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-24"},{"lineNumber":172,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":173,"author":{"gitId":"saiutkarsh33"},"content":"  public static void main(String[] args) throws IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":174,"author":{"gitId":"saiutkarsh33"},"content":"    new Duke(\"./data/tasks.txt\").run();","lastModifiedDate":"2024-01-28"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2019-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"saiutkarsh33":173,"-":3}},{"path":"src/main/java/chatbot/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"package chatbot;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"saiutkarsh33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"saiutkarsh33"},"content":" * The Parser class handles user interactions and processes input commands.","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"saiutkarsh33"},"content":" * It contains logic to interpret user commands and to determine the appropriate response","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"saiutkarsh33"},"content":" * or error message, based on the current state and data of the application.","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"saiutkarsh33"},"content":"public class Parser {","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"saiutkarsh33"},"content":"  public Parser() {}","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"saiutkarsh33"},"content":"   * Checks if the user wants to end the chat.","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"saiutkarsh33"},"content":"   * @param words Array of strings representing the user\u0027s input, split into words.","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"saiutkarsh33"},"content":"   * @return true if the first word is \"bye\", indicating a request to end the chat; false otherwise.","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"saiutkarsh33"},"content":"  public boolean isItDone(String[] words) {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"saiutkarsh33"},"content":"    return words[0].equals(\"bye\");","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"saiutkarsh33"},"content":"   * Processes the user input and performs actions based on the given commands.","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"saiutkarsh33"},"content":"   * This method can add, delete, or modify tasks in the task list, mark tasks as done or not done,","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"saiutkarsh33"},"content":"   * and handle other user commands. It returns a string response that should be shown to the user.","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"saiutkarsh33"},"content":"   * In case of invalid or incomplete commands, it throws specific exceptions.","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"saiutkarsh33"},"content":"   * @param io The input string provided by the user.","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"saiutkarsh33"},"content":"   * @param words Array of strings representing the user\u0027s input, split into words.","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"saiutkarsh33"},"content":"   * @param detail The detail part of the user\u0027s input, excluding the command word.","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"saiutkarsh33"},"content":"   * @param myList The current list of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"saiutkarsh33"},"content":"   * @param st The storage handler for reading from and writing to the data file.","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"saiutkarsh33"},"content":"   * @return A string response based on the user\u0027s input and the action performed.","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"saiutkarsh33"},"content":"   * @throws EmptyTodoException If a \"todo\" command is given without a description.","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"saiutkarsh33"},"content":"   * @throws EmptyDeadlineException If a \"deadline\" command is given without a description or deadline.","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"saiutkarsh33"},"content":"   * @throws EmptyEventException If an \"event\" command is given without a description or event time.","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"saiutkarsh33"},"content":"   * @throws InvalidException If an invalid command is given.","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"saiutkarsh33"},"content":"  public String parseThrough(","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"saiutkarsh33"},"content":"    String io,","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"saiutkarsh33"},"content":"    String[] words,","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"saiutkarsh33"},"content":"    String detail,","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"saiutkarsh33"},"content":"    TaskList myList,","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"saiutkarsh33"},"content":"    Storage st","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"saiutkarsh33"},"content":"  ) {","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"saiutkarsh33"},"content":"    try {","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"saiutkarsh33"},"content":"      if (words[0].equals(\"todo\") \u0026\u0026 detail.equals(\"\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"saiutkarsh33"},"content":"        throw new EmptyTodoException();","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"saiutkarsh33"},"content":"      } else if (words[0].equals(\"deadline\") \u0026\u0026 detail.equals(\"\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"saiutkarsh33"},"content":"        throw new EmptyDeadlineException();","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"saiutkarsh33"},"content":"      } else if (words[0].equals(\"event\") \u0026\u0026 detail.equals(\"\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"saiutkarsh33"},"content":"        throw new EmptyEventException();","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"saiutkarsh33"},"content":"      } else if (words[0].equals(\"bye\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"saiutkarsh33"},"content":"        return (\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"saiutkarsh33"},"content":"      } else if (words[0].equals(\"list\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"saiutkarsh33"},"content":"        StringBuilder listString \u003d new StringBuilder();","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"saiutkarsh33"},"content":"        for (int i \u003d 0; i \u003c myList.len(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"saiutkarsh33"},"content":"          int show \u003d i + 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"saiutkarsh33"},"content":"          listString","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"saiutkarsh33"},"content":"            .append(show)","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"saiutkarsh33"},"content":"            .append(\".\")","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"saiutkarsh33"},"content":"            .append(myList.get(i))","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"saiutkarsh33"},"content":"            .append(\"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"saiutkarsh33"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"saiutkarsh33"},"content":"        return listString.toString();","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"saiutkarsh33"},"content":"      } else if (words[0].equals(\"mark\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"saiutkarsh33"},"content":"        int c \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"saiutkarsh33"},"content":"        myList.asDone(c);","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"saiutkarsh33"},"content":"        st.rewriteFile(myList.mine());","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"saiutkarsh33"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"saiutkarsh33"},"content":"        response.append(\"Nice! I\u0027ve marked this task as done:\\n\"); // Append the first part of the message","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"saiutkarsh33"},"content":"        response.append(myList.get(c - 1)); // Append the task that was marked as done","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"saiutkarsh33"},"content":"        return response.toString(); // Convert StringBuilder to String and return it","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"saiutkarsh33"},"content":"      } else if (words[0].equals(\"unmark\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"saiutkarsh33"},"content":"        int c \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"saiutkarsh33"},"content":"        myList.asNotDone(c);","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"saiutkarsh33"},"content":"        st.rewriteFile(myList.mine());","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"saiutkarsh33"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"saiutkarsh33"},"content":"        response.append(\"Nice! I\u0027ve marked this task as not done yet:\\n\"); // Append the first part of the message","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"saiutkarsh33"},"content":"        response.append(myList.get(c - 1)); // Append the task that was marked as done","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"saiutkarsh33"},"content":"        return response.toString();","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"saiutkarsh33"},"content":"      } else if (words[0].equals(\"todo\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"saiutkarsh33"},"content":"        Todo t \u003d new Todo(detail);","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"saiutkarsh33"},"content":"        myList.add(t);","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"saiutkarsh33"},"content":"        st.rewriteFile(myList.mine());","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"saiutkarsh33"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"saiutkarsh33"},"content":"        message.append(\"Got it. I\u0027ve added this task:\\n\"); // Append the first line","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"saiutkarsh33"},"content":"        message.append(t.toString()).append(\"\\n\"); // Append the toString representation of t and a newline","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"saiutkarsh33"},"content":"        message","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"saiutkarsh33"},"content":"          .append(\"Now you have \")","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"saiutkarsh33"},"content":"          .append(myList.len())","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"saiutkarsh33"},"content":"          .append(\" tasks in the list.\"); // Append the third line","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"saiutkarsh33"},"content":"        String finalMessage \u003d message.toString();","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"saiutkarsh33"},"content":"        return finalMessage;","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"saiutkarsh33"},"content":"      } else if (words[0].equals(\"deadline\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"saiutkarsh33"},"content":"        String[] parts \u003d detail.split(\"\\\\s*/by\\\\s*\", 2);","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"saiutkarsh33"},"content":"        Deadline t \u003d new Deadline(parts[0], parts[1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"saiutkarsh33"},"content":"        myList.add(t);","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"saiutkarsh33"},"content":"        st.rewriteFile(myList.mine());","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"saiutkarsh33"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"saiutkarsh33"},"content":"        message.append(\"Got it. I\u0027ve added this task:\\n\"); // Append the first line","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"saiutkarsh33"},"content":"        message.append(t.toString()).append(\"\\n\"); // Append the toString representation of t and a newline","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"saiutkarsh33"},"content":"        message","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"saiutkarsh33"},"content":"          .append(\"Now you have \")","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"saiutkarsh33"},"content":"          .append(myList.len())","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"saiutkarsh33"},"content":"          .append(\" tasks in the list.\"); // Append the third line","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":119,"author":{"gitId":"saiutkarsh33"},"content":"        String finalMessage \u003d message.toString();","lastModifiedDate":"2024-01-28"},{"lineNumber":120,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"saiutkarsh33"},"content":"        return finalMessage;","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"saiutkarsh33"},"content":"      } else if (words[0].equals(\"event\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"saiutkarsh33"},"content":"        String[] firstSplit \u003d detail.split(\"\\\\s*/from\\\\s*\", 2);","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"saiutkarsh33"},"content":"        String[] secondSplit \u003d firstSplit[1].split(\"\\\\s*/to\\\\s*\", 2);","lastModifiedDate":"2024-01-28"},{"lineNumber":125,"author":{"gitId":"saiutkarsh33"},"content":"        Event t \u003d new Event(firstSplit[0], secondSplit[0], secondSplit[1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":126,"author":{"gitId":"saiutkarsh33"},"content":"        myList.add(t);","lastModifiedDate":"2024-01-28"},{"lineNumber":127,"author":{"gitId":"saiutkarsh33"},"content":"        st.rewriteFile(myList.mine());","lastModifiedDate":"2024-01-28"},{"lineNumber":128,"author":{"gitId":"saiutkarsh33"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2024-01-28"},{"lineNumber":129,"author":{"gitId":"saiutkarsh33"},"content":"        message.append(\"Got it. I\u0027ve added this task:\\n\"); // Append the first line","lastModifiedDate":"2024-01-28"},{"lineNumber":130,"author":{"gitId":"saiutkarsh33"},"content":"        message.append(t.toString()).append(\"\\n\"); // Append the toString representation of t and a newline","lastModifiedDate":"2024-01-28"},{"lineNumber":131,"author":{"gitId":"saiutkarsh33"},"content":"        message","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"saiutkarsh33"},"content":"          .append(\"Now you have \")","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"saiutkarsh33"},"content":"          .append(myList.len())","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"saiutkarsh33"},"content":"          .append(\" tasks in the list.\"); // Append the third line","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":136,"author":{"gitId":"saiutkarsh33"},"content":"        String finalMessage \u003d message.toString();","lastModifiedDate":"2024-01-28"},{"lineNumber":137,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":138,"author":{"gitId":"saiutkarsh33"},"content":"        return finalMessage;","lastModifiedDate":"2024-01-28"},{"lineNumber":139,"author":{"gitId":"saiutkarsh33"},"content":"      } else if (words[0].equals(\"delete\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":140,"author":{"gitId":"saiutkarsh33"},"content":"        int c \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":141,"author":{"gitId":"saiutkarsh33"},"content":"        Task t \u003d myList.get(c - 1);","lastModifiedDate":"2024-01-28"},{"lineNumber":142,"author":{"gitId":"saiutkarsh33"},"content":"        myList.remove(c - 1);","lastModifiedDate":"2024-01-28"},{"lineNumber":143,"author":{"gitId":"saiutkarsh33"},"content":"        st.rewriteFile(myList.mine());","lastModifiedDate":"2024-01-28"},{"lineNumber":144,"author":{"gitId":"saiutkarsh33"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2024-01-28"},{"lineNumber":145,"author":{"gitId":"saiutkarsh33"},"content":"        message.append(\"Noted. I\u0027ve removed this task:\\n\"); // Append the first line","lastModifiedDate":"2024-01-28"},{"lineNumber":146,"author":{"gitId":"saiutkarsh33"},"content":"        message.append(t.toString()).append(\"\\n\"); // Append the toString representation of t and a newline","lastModifiedDate":"2024-01-28"},{"lineNumber":147,"author":{"gitId":"saiutkarsh33"},"content":"        message","lastModifiedDate":"2024-01-29"},{"lineNumber":148,"author":{"gitId":"saiutkarsh33"},"content":"          .append(\"Now you have \")","lastModifiedDate":"2024-01-29"},{"lineNumber":149,"author":{"gitId":"saiutkarsh33"},"content":"          .append(myList.len())","lastModifiedDate":"2024-01-29"},{"lineNumber":150,"author":{"gitId":"saiutkarsh33"},"content":"          .append(\" tasks in the list.\"); // Append the third line","lastModifiedDate":"2024-01-29"},{"lineNumber":151,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":152,"author":{"gitId":"saiutkarsh33"},"content":"        String finalMessage \u003d message.toString(); // Convert StringBuilder to String","lastModifiedDate":"2024-01-28"},{"lineNumber":153,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":154,"author":{"gitId":"saiutkarsh33"},"content":"        return finalMessage;","lastModifiedDate":"2024-01-28"},{"lineNumber":155,"author":{"gitId":"saiutkarsh33"},"content":"      } else if (words[0].equals(\"find\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":156,"author":{"gitId":"saiutkarsh33"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":157,"author":{"gitId":"saiutkarsh33"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-01-28"},{"lineNumber":158,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":159,"author":{"gitId":"saiutkarsh33"},"content":"        for (Task task : myList.mine()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":160,"author":{"gitId":"saiutkarsh33"},"content":"          if (task.getDescription().contains(detail)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":161,"author":{"gitId":"saiutkarsh33"},"content":"            count++;","lastModifiedDate":"2024-01-28"},{"lineNumber":162,"author":{"gitId":"saiutkarsh33"},"content":"            if (count \u003d\u003d 1) {","lastModifiedDate":"2024-01-28"},{"lineNumber":163,"author":{"gitId":"saiutkarsh33"},"content":"              result.append(","lastModifiedDate":"2024-01-29"},{"lineNumber":164,"author":{"gitId":"saiutkarsh33"},"content":"                \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":165,"author":{"gitId":"saiutkarsh33"},"content":"              );","lastModifiedDate":"2024-01-29"},{"lineNumber":166,"author":{"gitId":"saiutkarsh33"},"content":"              result.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":167,"author":{"gitId":"saiutkarsh33"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":168,"author":{"gitId":"saiutkarsh33"},"content":"            result.append(count).append(\".\").append(task).append(\"\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":169,"author":{"gitId":"saiutkarsh33"},"content":"          }","lastModifiedDate":"2024-01-28"},{"lineNumber":170,"author":{"gitId":"saiutkarsh33"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":171,"author":{"gitId":"saiutkarsh33"},"content":"        if (count \u003e 0) {","lastModifiedDate":"2024-01-28"},{"lineNumber":172,"author":{"gitId":"saiutkarsh33"},"content":"          result.append(","lastModifiedDate":"2024-01-29"},{"lineNumber":173,"author":{"gitId":"saiutkarsh33"},"content":"            \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":174,"author":{"gitId":"saiutkarsh33"},"content":"          );","lastModifiedDate":"2024-01-29"},{"lineNumber":175,"author":{"gitId":"saiutkarsh33"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":176,"author":{"gitId":"saiutkarsh33"},"content":"          result.append(\"No tasks found with the detail: \").append(detail);","lastModifiedDate":"2024-01-28"},{"lineNumber":177,"author":{"gitId":"saiutkarsh33"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":178,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":179,"author":{"gitId":"saiutkarsh33"},"content":"        return result.toString();","lastModifiedDate":"2024-01-28"},{"lineNumber":180,"author":{"gitId":"saiutkarsh33"},"content":"      } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":181,"author":{"gitId":"saiutkarsh33"},"content":"        throw new InvalidException();","lastModifiedDate":"2024-01-28"},{"lineNumber":182,"author":{"gitId":"saiutkarsh33"},"content":"      }","lastModifiedDate":"2024-01-28"},{"lineNumber":183,"author":{"gitId":"saiutkarsh33"},"content":"    } catch (EmptyTodoException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":184,"author":{"gitId":"saiutkarsh33"},"content":"      return (","lastModifiedDate":"2024-01-29"},{"lineNumber":185,"author":{"gitId":"saiutkarsh33"},"content":"        e.getMessage() +","lastModifiedDate":"2024-01-29"},{"lineNumber":186,"author":{"gitId":"saiutkarsh33"},"content":"        \"\\n____________________________________________________________\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":187,"author":{"gitId":"saiutkarsh33"},"content":"      );","lastModifiedDate":"2024-01-29"},{"lineNumber":188,"author":{"gitId":"saiutkarsh33"},"content":"    } catch (EmptyDeadlineException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":189,"author":{"gitId":"saiutkarsh33"},"content":"      return (","lastModifiedDate":"2024-01-29"},{"lineNumber":190,"author":{"gitId":"saiutkarsh33"},"content":"        e.getMessage() +","lastModifiedDate":"2024-01-29"},{"lineNumber":191,"author":{"gitId":"saiutkarsh33"},"content":"        \"\\n____________________________________________________________\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":192,"author":{"gitId":"saiutkarsh33"},"content":"      );","lastModifiedDate":"2024-01-29"},{"lineNumber":193,"author":{"gitId":"saiutkarsh33"},"content":"    } catch (EmptyEventException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":194,"author":{"gitId":"saiutkarsh33"},"content":"      return (","lastModifiedDate":"2024-01-29"},{"lineNumber":195,"author":{"gitId":"saiutkarsh33"},"content":"        e.getMessage() +","lastModifiedDate":"2024-01-29"},{"lineNumber":196,"author":{"gitId":"saiutkarsh33"},"content":"        \"\\n____________________________________________________________\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":197,"author":{"gitId":"saiutkarsh33"},"content":"      );","lastModifiedDate":"2024-01-29"},{"lineNumber":198,"author":{"gitId":"saiutkarsh33"},"content":"    } catch (InvalidException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":199,"author":{"gitId":"saiutkarsh33"},"content":"      return (","lastModifiedDate":"2024-01-29"},{"lineNumber":200,"author":{"gitId":"saiutkarsh33"},"content":"        e.getMessage() +","lastModifiedDate":"2024-01-29"},{"lineNumber":201,"author":{"gitId":"saiutkarsh33"},"content":"        \"\\n____________________________________________________________\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":202,"author":{"gitId":"saiutkarsh33"},"content":"      );","lastModifiedDate":"2024-01-29"},{"lineNumber":203,"author":{"gitId":"saiutkarsh33"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":204,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":205,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"saiutkarsh33":205}},{"path":"src/main/java/chatbot/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"package chatbot;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"saiutkarsh33"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"saiutkarsh33"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"saiutkarsh33"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"saiutkarsh33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"saiutkarsh33"},"content":" * The Storage class manages the persistent storage of task data in a file.","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"saiutkarsh33"},"content":" * It is responsible for creating the file (if it doesn\u0027t exist) and writing the tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"saiutkarsh33"},"content":" * from a TaskList into this file. This allows for persisting the tasks across different","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"saiutkarsh33"},"content":" * sessions of the application.","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"saiutkarsh33"},"content":"public class Storage {","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"saiutkarsh33"},"content":"  private String filePath;","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"saiutkarsh33"},"content":"   * Constructs a new Storage object.","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"saiutkarsh33"},"content":"   * @param filePath The path of the file where tasks will be stored and retrieved.","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"saiutkarsh33"},"content":"  public Storage(String filePath) {","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"saiutkarsh33"},"content":"    this.filePath \u003d filePath;","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"saiutkarsh33"},"content":"    createFileIfNeeded();","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"saiutkarsh33"},"content":"   * Ensures that the storage file exists. If the file does not exist, this method","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"saiutkarsh33"},"content":"   * creates the necessary directories and the file itself. This method is called during","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"saiutkarsh33"},"content":"   * the initialization of the Storage object to prepare the file for reading and writing tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"saiutkarsh33"},"content":"  public void createFileIfNeeded() {","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"saiutkarsh33"},"content":"    try {","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"saiutkarsh33"},"content":"      Path path \u003d Paths.get(filePath);","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"saiutkarsh33"},"content":"      if (!Files.exists(path)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"saiutkarsh33"},"content":"        Files.createDirectories(path.getParent());","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"saiutkarsh33"},"content":"        Files.createFile(path);","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"saiutkarsh33"},"content":"      }","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"saiutkarsh33"},"content":"    } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"saiutkarsh33"},"content":"      e.printStackTrace();","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"saiutkarsh33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"saiutkarsh33"},"content":"   * Rewrites the entire task list to the storage file. This method is typically called","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"saiutkarsh33"},"content":"   * when there is a change in the tasks list (like adding, removing, or modifying tasks)","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"saiutkarsh33"},"content":"   * to update the persistent storage.","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"saiutkarsh33"},"content":"   * @param tasks The list of tasks to be written to the file.","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"saiutkarsh33"},"content":"  public void rewriteFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"saiutkarsh33"},"content":"    try (","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"saiutkarsh33"},"content":"      BufferedWriter bw \u003d new BufferedWriter(new FileWriter(filePath, false))","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"saiutkarsh33"},"content":"    ) {","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"saiutkarsh33"},"content":"      for (Task task : tasks) {","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"saiutkarsh33"},"content":"        bw.write(task.toString());","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"saiutkarsh33"},"content":"        bw.newLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"saiutkarsh33"},"content":"      }","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"saiutkarsh33"},"content":"    } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"saiutkarsh33"},"content":"      e.printStackTrace();","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"saiutkarsh33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"saiutkarsh33":74}},{"path":"src/main/java/chatbot/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"package chatbot;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"saiutkarsh33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"saiutkarsh33"},"content":" * The TaskList class manages a list of tasks. It provides methods to manipulate tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"saiutkarsh33"},"content":" * such as adding, removing, and marking them as done or not done. It also allows accessing","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"saiutkarsh33"},"content":" * individual tasks and the entire list of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"saiutkarsh33"},"content":"public class TaskList {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"saiutkarsh33"},"content":"  protected ArrayList\u003cTask\u003e al;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"saiutkarsh33"},"content":"   * Constructs a TaskList with the specified list of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"saiutkarsh33"},"content":"   * @param al The initial list of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"saiutkarsh33"},"content":"  public TaskList(ArrayList\u003cTask\u003e al) {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"saiutkarsh33"},"content":"    this.al \u003d al;","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"saiutkarsh33"},"content":"   * Adds a task to the task list.","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"saiutkarsh33"},"content":"   * @param t The task to be added.","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"saiutkarsh33"},"content":"  public void add(Task t) {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"saiutkarsh33"},"content":"    al.add(t);","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"saiutkarsh33"},"content":"   * Removes a task from the task list at the specified index.","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"saiutkarsh33"},"content":"   * @param c The index (1-based) of the task to be removed.","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"saiutkarsh33"},"content":"  public void remove(int c) {","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"saiutkarsh33"},"content":"    al.remove(c);","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"saiutkarsh33"},"content":"   * Marks a task as done.","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"saiutkarsh33"},"content":"   * @param c The index (1-based) of the task to be marked as done.","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"saiutkarsh33"},"content":"  public void asDone(int c) {","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"saiutkarsh33"},"content":"    al.get(c - 1).markAsDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"saiutkarsh33"},"content":"   * Marks a task as not done.","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"saiutkarsh33"},"content":"   * @param c The index (1-based) of the task to be marked as not done.","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"saiutkarsh33"},"content":"  public void asNotDone(int c) {","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"saiutkarsh33"},"content":"    al.get(c - 1).markAsUndone();","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"saiutkarsh33"},"content":"   * Retrieves a task from the task list at the specified index.","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"saiutkarsh33"},"content":"   * @param c The index (1-based) of the task to retrieve.","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"saiutkarsh33"},"content":"   * @return The task at the specified index.","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"saiutkarsh33"},"content":"  public Task get(int c) {","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"saiutkarsh33"},"content":"    return al.get(c);","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"saiutkarsh33"},"content":"   * Returns the current list of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"saiutkarsh33"},"content":"   * @return The list of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"saiutkarsh33"},"content":"  public ArrayList\u003cTask\u003e mine() {","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"saiutkarsh33"},"content":"    return this.al;","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"saiutkarsh33"},"content":"   * Returns the number of tasks in the task list.","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"saiutkarsh33"},"content":"   * @return The size of the task list.","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"saiutkarsh33"},"content":"  public int len() {","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"saiutkarsh33"},"content":"    return this.al.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"saiutkarsh33":90}},{"path":"src/main/java/chatbot/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"package chatbot;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"saiutkarsh33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"saiutkarsh33"},"content":" * The Ui class manages the user interface for the chatbot. It handles reading user input,","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"saiutkarsh33"},"content":" * printing responses to the console, and interacting with other components like Parser and TaskList","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"saiutkarsh33"},"content":" * to carry out user commands. This class is responsible for starting the chatbot and handling","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"saiutkarsh33"},"content":" * the loop of user interactions.","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"saiutkarsh33"},"content":"public class Ui {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"saiutkarsh33"},"content":"  protected BufferedReader br \u003d new BufferedReader(","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"saiutkarsh33"},"content":"    new InputStreamReader(System.in)","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"saiutkarsh33"},"content":"  );","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"saiutkarsh33"},"content":"  protected PrintWriter pw \u003d new PrintWriter(System.out, true);","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"saiutkarsh33"},"content":"  protected Parser p \u003d new Parser();","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"saiutkarsh33"},"content":"  protected TaskList tl;","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"saiutkarsh33"},"content":"   * Constructs a Ui object with a reference to a TaskList.","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"saiutkarsh33"},"content":"   * @param tl The TaskList that the Ui will interact with.","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"saiutkarsh33"},"content":"  public Ui(TaskList tl) {","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"saiutkarsh33"},"content":"    this.tl \u003d tl;","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"saiutkarsh33"},"content":"   * Starts the chatbot by displaying a welcome message to the user. This method should be called","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"saiutkarsh33"},"content":"   * to initiate the interaction with the user.","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"saiutkarsh33"},"content":"   * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"saiutkarsh33"},"content":"  public void start() throws IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"saiutkarsh33"},"content":"    String prompt \u003d","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"saiutkarsh33"},"content":"      \"Hello! I\u0027m TFamilyBot\\n\" +","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"saiutkarsh33"},"content":"      \"What can I do for you? \\n\" +","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"saiutkarsh33"},"content":"      \"____________________________________________________________\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"saiutkarsh33"},"content":"    pw.println(prompt);","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"saiutkarsh33"},"content":"   * Handles a single round of user interaction. It reads the user\u0027s input, processes it, and","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"saiutkarsh33"},"content":"   * prints the response. The method returns a boolean indicating whether the interaction should","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"saiutkarsh33"},"content":"   * continue (true) or if it should end (false, when the user inputs \u0027bye\u0027).","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"saiutkarsh33"},"content":"   * @param st The Storage object used for saving and retrieving task data.","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"saiutkarsh33"},"content":"   * @return false if the user inputs \u0027bye\u0027 to end the interaction, true otherwise.","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"saiutkarsh33"},"content":"   * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"saiutkarsh33"},"content":"  public boolean reply(Storage st) throws IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"saiutkarsh33"},"content":"    String io \u003d br.readLine().trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"saiutkarsh33"},"content":"    String[] words \u003d io.split(\"\\\\s+\", 2);","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"saiutkarsh33"},"content":"    String detail \u003d words.length \u003e 1 ? words[1] : \"\";","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"saiutkarsh33"},"content":"    pw.println(","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"saiutkarsh33"},"content":"      \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"saiutkarsh33"},"content":"    );","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"saiutkarsh33"},"content":"    boolean done \u003d p.isItDone(words);","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"saiutkarsh33"},"content":"    String answer \u003d p.parseThrough(io, words, detail, this.tl, st);","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"saiutkarsh33"},"content":"    pw.println(answer);","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"saiutkarsh33"},"content":"    pw.println(","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"saiutkarsh33"},"content":"      \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"saiutkarsh33"},"content":"    );","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"saiutkarsh33"},"content":"    if (done) {","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"saiutkarsh33"},"content":"      return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"saiutkarsh33"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"saiutkarsh33"},"content":"    return true;","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"saiutkarsh33":88}},{"path":"src/main/java/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"[T][ ] book bear","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"saiutkarsh33"},"content":"[T][ ] b","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"saiutkarsh33":2}},{"path":"src/test/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"// used chatGPT to create these unit tests","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"saiutkarsh33"},"content":"package chatbot;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"saiutkarsh33"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"saiutkarsh33"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"saiutkarsh33"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"saiutkarsh33"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"saiutkarsh33"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"saiutkarsh33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"saiutkarsh33"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"saiutkarsh33"},"content":"class StorageTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"saiutkarsh33"},"content":"  private String testFilePath;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"saiutkarsh33"},"content":"  private Storage storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"saiutkarsh33"},"content":"  @BeforeEach","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"saiutkarsh33"},"content":"  void setUp() {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"saiutkarsh33"},"content":"    testFilePath \u003d \"./temp_test_file.txt\";","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"saiutkarsh33"},"content":"    storage \u003d new Storage(testFilePath);","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"saiutkarsh33"},"content":"  @AfterEach","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"saiutkarsh33"},"content":"  void tearDown() {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"saiutkarsh33"},"content":"    try {","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"saiutkarsh33"},"content":"      Files.deleteIfExists(Paths.get(testFilePath));","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"saiutkarsh33"},"content":"    } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"saiutkarsh33"},"content":"      e.printStackTrace();","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"saiutkarsh33"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"saiutkarsh33"},"content":"  @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"saiutkarsh33"},"content":"  void testFileCreation() {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"saiutkarsh33"},"content":"    assertFalse(Files.exists(Paths.get(testFilePath)));","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"saiutkarsh33"},"content":"    storage.createFileIfNeeded();","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"saiutkarsh33"},"content":"    assertTrue(Files.exists(Paths.get(testFilePath)));","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"saiutkarsh33"},"content":"  @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"saiutkarsh33"},"content":"  void testRewriteFile() throws IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"saiutkarsh33"},"content":"    ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"saiutkarsh33"},"content":"    tasks.add(new Task(\"Task 1\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"saiutkarsh33"},"content":"    tasks.add(new Task(\"Task 2\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"saiutkarsh33"},"content":"    storage.rewriteFile(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"saiutkarsh33"},"content":"    ArrayList\u003cString\u003e lines \u003d Files.readAllLines(Paths.get(testFilePath));","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"saiutkarsh33"},"content":"    assertEquals(2, lines.size());","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"saiutkarsh33"},"content":"    assertEquals(\"[ ] Task 1\", lines.get(0));","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"saiutkarsh33"},"content":"    assertEquals(\"[ ] Task 2\", lines.get(1));","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"saiutkarsh33":54}},{"path":"src/test/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"// used chatGPT for this unit test file","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"saiutkarsh33"},"content":"package chatbot;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"saiutkarsh33"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"saiutkarsh33"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"saiutkarsh33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"saiutkarsh33"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"saiutkarsh33"},"content":"class TaskListTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"saiutkarsh33"},"content":"  private TaskList taskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"saiutkarsh33"},"content":"  private Task todoStub;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"saiutkarsh33"},"content":"  @BeforeEach","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"saiutkarsh33"},"content":"  void setUp() {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"saiutkarsh33"},"content":"    ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"saiutkarsh33"},"content":"    todoStub \u003d new Todo(\"Sample Task\");","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"saiutkarsh33"},"content":"    tasks.add(todoStub);","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"saiutkarsh33"},"content":"    taskList \u003d new TaskList(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"saiutkarsh33"},"content":"  @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"saiutkarsh33"},"content":"  void addTask_success() {","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"saiutkarsh33"},"content":"    Task newTodo \u003d new Todo(\"New Task\");","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"saiutkarsh33"},"content":"    taskList.add(newTodo);","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"saiutkarsh33"},"content":"    assertEquals(2, taskList.len());","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"saiutkarsh33"},"content":"  @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"saiutkarsh33"},"content":"  void removeTask_success() {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"saiutkarsh33"},"content":"    taskList.remove(0);","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"saiutkarsh33"},"content":"    assertEquals(0, taskList.len());","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"saiutkarsh33"},"content":"  @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"saiutkarsh33"},"content":"  void markTaskAsDone_success() {","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"saiutkarsh33"},"content":"    taskList.asDone(1);","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"saiutkarsh33"},"content":"    assertTrue(todoStub.isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"saiutkarsh33"},"content":"  @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"saiutkarsh33"},"content":"  void markTaskAsNotDone_success() {","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"saiutkarsh33"},"content":"    todoStub.markAsDone(); // First mark it as done","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"saiutkarsh33"},"content":"    taskList.asNotDone(1);","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"saiutkarsh33"},"content":"    assertFalse(todoStub.isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"saiutkarsh33"},"content":"  @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"saiutkarsh33"},"content":"  void getTask_success() {","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"saiutkarsh33"},"content":"    Task fetchedTask \u003d taskList.get(0);","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"saiutkarsh33"},"content":"    assertEquals(todoStub, fetchedTask);","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"saiutkarsh33"},"content":"  @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"saiutkarsh33"},"content":"  void taskListLength_success() {","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"saiutkarsh33"},"content":"    assertEquals(1, taskList.len());","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"saiutkarsh33"},"content":"  @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"saiutkarsh33"},"content":"  void taskListMine() {","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"saiutkarsh33"},"content":"    assertEquals(tasks, taskList.mine());","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"saiutkarsh33":68}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"todo borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"saiutkarsh33"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"saiutkarsh33"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"saiutkarsh33"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"saiutkarsh33"},"content":"mark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"saiutkarsh33"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"saiutkarsh33"},"content":"unmark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"saiutkarsh33"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"saiutkarsh33"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"saiutkarsh33"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"saiutkarsh33"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"saiutkarsh33"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"saiutkarsh33"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"saiutkarsh33"},"content":"unmark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"saiutkarsh33"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"saiutkarsh33"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"saiutkarsh33":16}}]
