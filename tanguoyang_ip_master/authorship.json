[{"path":"src/main/java/Dude.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanguoyang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"tanguoyang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"tanguoyang"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"tanguoyang"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"tanguoyang"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"tanguoyang"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"tanguoyang"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"tanguoyang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"tanguoyang"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"tanguoyang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"tanguoyang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"tanguoyang"},"content":"public class Dude {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"tanguoyang"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"tanguoyang"},"content":"        System.out.println(\"Loading tasks from file...\");","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"tanguoyang"},"content":"        ArrayList\u003cTask\u003e tasks \u003d TaskStorage.loadTasksFromFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"tanguoyang"},"content":"        System.out.println(\"Loaded \" + tasks.size() + \" tasks from file.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"tanguoyang"},"content":"        System.out.println(\"Hello! I\u0027m Duddde\");","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"tanguoyang"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"tanguoyang"},"content":"        while (true) {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"tanguoyang"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"tanguoyang"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"tanguoyang"},"content":"                System.out.println(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"tanguoyang"},"content":"                if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"tanguoyang"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"tanguoyang"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"tanguoyang"},"content":"                } else if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"tanguoyang"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"tanguoyang"},"content":"                        System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"tanguoyang"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"tanguoyang"},"content":"                } else if (input.startsWith(\"done \")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"tanguoyang"},"content":"                    int index \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"tanguoyang"},"content":"                    if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"tanguoyang"},"content":"                        throw new IndexOutOfBoundsException(\"Task number does not exist.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"tanguoyang"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"tanguoyang"},"content":"                    tasks.get(index).markAsDone();","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"tanguoyang"},"content":"                    TaskStorage.saveTasksToFile(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"tanguoyang"},"content":"                    System.out.println(\"Marked as done: \" + tasks.get(index));","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"tanguoyang"},"content":"                } else if (input.startsWith(\"undo \")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"tanguoyang"},"content":"                    int index \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"tanguoyang"},"content":"                    if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"tanguoyang"},"content":"                        throw new IndexOutOfBoundsException(\"Task number does not exist.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"tanguoyang"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"tanguoyang"},"content":"                    tasks.get(index).markAsNotDone();","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"tanguoyang"},"content":"                    TaskStorage.saveTasksToFile(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"tanguoyang"},"content":"                    System.out.println(\"Marked as not done: \" + tasks.get(index));","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"tanguoyang"},"content":"                } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"tanguoyang"},"content":"                    int index \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"tanguoyang"},"content":"                    if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"tanguoyang"},"content":"                        throw new IndexOutOfBoundsException(\"Task number does not exist.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"tanguoyang"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"tanguoyang"},"content":"                    Task removedTask \u003d tasks.remove(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"tanguoyang"},"content":"                    TaskStorage.saveTasksToFile(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"tanguoyang"},"content":"                    System.out.println(\"Deleted: \" + removedTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"tanguoyang"},"content":"                } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"tanguoyang"},"content":"                    String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"tanguoyang"},"content":"                    String command \u003d parts[0];","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"tanguoyang"},"content":"                    String taskInfo \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"tanguoyang"},"content":"                    switch (command.toLowerCase()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"tanguoyang"},"content":"                        case \"todo\":","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"tanguoyang"},"content":"                            tasks.add(new ToDo(taskInfo));","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"tanguoyang"},"content":"                            System.out.println(\"Added ToDo: \" + taskInfo);","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"tanguoyang"},"content":"                            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"tanguoyang"},"content":"                        case \"deadline\":","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"tanguoyang"},"content":"                            if (!taskInfo.contains(\" /by \")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"tanguoyang"},"content":"                                throw new IllegalArgumentException(","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"tanguoyang"},"content":"                                        \"Invalid deadline format. Use \u0027/by\u0027 to specify the deadline.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"tanguoyang"},"content":"                            }","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"tanguoyang"},"content":"                            String[] deadlineParts \u003d taskInfo.split(\" /by \", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"tanguoyang"},"content":"                            tasks.add(new Deadline(deadlineParts[0], deadlineParts[1]));","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"tanguoyang"},"content":"                            System.out.println(\"Added Deadline: \" + deadlineParts[0]);","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"tanguoyang"},"content":"                            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"tanguoyang"},"content":"                        case \"event\":","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"tanguoyang"},"content":"                            if (!taskInfo.contains(\" /from \") || !taskInfo.contains(\" /to \")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"tanguoyang"},"content":"                                throw new IllegalArgumentException(","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"tanguoyang"},"content":"                                        \"Invalid event format. Use \u0027/from\u0027 and \u0027/to\u0027 to specify the event times.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"tanguoyang"},"content":"                            }","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"tanguoyang"},"content":"                            String[] eventParts \u003d taskInfo.split(\" /from \", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"tanguoyang"},"content":"                            String[] eventTimes \u003d eventParts[1].split(\" /to \", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"tanguoyang"},"content":"                            tasks.add(new Event(eventParts[0], eventTimes[0], eventTimes[1]));","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"tanguoyang"},"content":"                            System.out.println(\"Added Event: \" + eventParts[0]);","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"tanguoyang"},"content":"                            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"tanguoyang"},"content":"                        default:","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"tanguoyang"},"content":"                            System.out.println(\"Unknown command\");","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"tanguoyang"},"content":"                            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"tanguoyang"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"tanguoyang"},"content":"                    TaskStorage.saveTasksToFile(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"tanguoyang"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"tanguoyang"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"tanguoyang"},"content":"                System.out.println(\"Error: Please enter a valid task number.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"tanguoyang"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"tanguoyang"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"tanguoyang"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"tanguoyang"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"tanguoyang"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"tanguoyang"},"content":"                System.out.println(\"An unexpected error occurred: \" + e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"tanguoyang"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"tanguoyang"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"tanguoyang"},"content":"        scanner.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"tanguoyang"},"content":"// Base Task class","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"tanguoyang"},"content":"abstract class Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"tanguoyang"},"content":"    String description;","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"tanguoyang"},"content":"    boolean isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"tanguoyang"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"tanguoyang"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"tanguoyang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":119,"author":{"gitId":"tanguoyang"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"tanguoyang"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"tanguoyang"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"tanguoyang"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"tanguoyang"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"tanguoyang"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"tanguoyang"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"tanguoyang"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"tanguoyang"},"content":"    public abstract String toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"tanguoyang"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"tanguoyang"},"content":"// ToDo subclass","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"tanguoyang"},"content":"class ToDo extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"tanguoyang"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"tanguoyang"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"tanguoyang"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"tanguoyang"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"tanguoyang"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"tanguoyang"},"content":"        return \"[T]\" + (isDone ? \"[X] \" : \"[ ] \") + description;","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"tanguoyang"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"tanguoyang"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"tanguoyang"},"content":"// Deadline subclass","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"tanguoyang"},"content":"class Deadline extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":147,"author":{"gitId":"tanguoyang"},"content":"    LocalDate by;","lastModifiedDate":"2024-02-07"},{"lineNumber":148,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"tanguoyang"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"tanguoyang"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"tanguoyang"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-02-07"},{"lineNumber":152,"author":{"gitId":"tanguoyang"},"content":"        this.by \u003d LocalDate.parse(by, formatter);","lastModifiedDate":"2024-02-07"},{"lineNumber":153,"author":{"gitId":"tanguoyang"},"content":"        // Parse the string to a LocalDate","lastModifiedDate":"2024-02-07"},{"lineNumber":154,"author":{"gitId":"tanguoyang"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":155,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"tanguoyang"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":157,"author":{"gitId":"tanguoyang"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":158,"author":{"gitId":"tanguoyang"},"content":"        // Define a formatter","lastModifiedDate":"2024-02-07"},{"lineNumber":159,"author":{"gitId":"tanguoyang"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM-dd-yyyy\");","lastModifiedDate":"2024-02-07"},{"lineNumber":160,"author":{"gitId":"tanguoyang"},"content":"        // Format the LocalDate to the desired format","lastModifiedDate":"2024-02-07"},{"lineNumber":161,"author":{"gitId":"tanguoyang"},"content":"        String formattedDate \u003d by.format(formatter);","lastModifiedDate":"2024-02-07"},{"lineNumber":162,"author":{"gitId":"tanguoyang"},"content":"        return \"[D]\" + (isDone ? \"[X] \" : \"[ ] \") + description + \" (by: \" + formattedDate + \")\";","lastModifiedDate":"2024-02-07"},{"lineNumber":163,"author":{"gitId":"tanguoyang"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":164,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":165,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":166,"author":{"gitId":"tanguoyang"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":167,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":168,"author":{"gitId":"tanguoyang"},"content":"// Event subclass","lastModifiedDate":"2024-02-01"},{"lineNumber":169,"author":{"gitId":"tanguoyang"},"content":"class Event extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":170,"author":{"gitId":"tanguoyang"},"content":"    LocalDate start;","lastModifiedDate":"2024-02-07"},{"lineNumber":171,"author":{"gitId":"tanguoyang"},"content":"    LocalDate end;","lastModifiedDate":"2024-02-07"},{"lineNumber":172,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":173,"author":{"gitId":"tanguoyang"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2024-02-01"},{"lineNumber":174,"author":{"gitId":"tanguoyang"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":175,"author":{"gitId":"tanguoyang"},"content":"        // Parse the strings to LocalDate","lastModifiedDate":"2024-02-07"},{"lineNumber":176,"author":{"gitId":"tanguoyang"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-02-07"},{"lineNumber":177,"author":{"gitId":"tanguoyang"},"content":"        this.start \u003d LocalDate.parse(start, formatter);","lastModifiedDate":"2024-02-07"},{"lineNumber":178,"author":{"gitId":"tanguoyang"},"content":"        this.end \u003d LocalDate.parse(end, formatter);","lastModifiedDate":"2024-02-07"},{"lineNumber":179,"author":{"gitId":"tanguoyang"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":180,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":181,"author":{"gitId":"tanguoyang"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":182,"author":{"gitId":"tanguoyang"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":183,"author":{"gitId":"tanguoyang"},"content":"        // Define a formatter","lastModifiedDate":"2024-02-07"},{"lineNumber":184,"author":{"gitId":"tanguoyang"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM-dd-yyyy\");","lastModifiedDate":"2024-02-07"},{"lineNumber":185,"author":{"gitId":"tanguoyang"},"content":"        // Format the LocalDate to the desired format","lastModifiedDate":"2024-02-07"},{"lineNumber":186,"author":{"gitId":"tanguoyang"},"content":"        String formattedStart \u003d start.format(formatter);","lastModifiedDate":"2024-02-07"},{"lineNumber":187,"author":{"gitId":"tanguoyang"},"content":"        String formattedEnd \u003d end.format(formatter);","lastModifiedDate":"2024-02-07"},{"lineNumber":188,"author":{"gitId":"tanguoyang"},"content":"        return \"[E]\" + (isDone ? \"[X] \" : \"[ ] \") + description + \" (from: \" + formattedStart + \" to: \" + formattedEnd","lastModifiedDate":"2024-02-07"},{"lineNumber":189,"author":{"gitId":"tanguoyang"},"content":"                + \")\";","lastModifiedDate":"2024-02-07"},{"lineNumber":190,"author":{"gitId":"tanguoyang"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":191,"author":{"gitId":"tanguoyang"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":192,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":193,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":194,"author":{"gitId":"tanguoyang"},"content":"class TaskStorage {","lastModifiedDate":"2024-02-01"},{"lineNumber":195,"author":{"gitId":"tanguoyang"},"content":"    public static final String FILE_NAME \u003d \"tasks.txt\";","lastModifiedDate":"2024-02-01"},{"lineNumber":196,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":197,"author":{"gitId":"tanguoyang"},"content":"    public static void saveTasksToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":198,"author":{"gitId":"tanguoyang"},"content":"        try (BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(FILE_NAME))) {","lastModifiedDate":"2024-02-07"},{"lineNumber":199,"author":{"gitId":"tanguoyang"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":200,"author":{"gitId":"tanguoyang"},"content":"                String taskString \u003d taskToFileString(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":201,"author":{"gitId":"tanguoyang"},"content":"                if (!taskString.isEmpty()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":202,"author":{"gitId":"tanguoyang"},"content":"                    bufferedWriter.write(taskString);","lastModifiedDate":"2024-02-07"},{"lineNumber":203,"author":{"gitId":"tanguoyang"},"content":"                    bufferedWriter.newLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":204,"author":{"gitId":"tanguoyang"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":205,"author":{"gitId":"tanguoyang"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":206,"author":{"gitId":"tanguoyang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":207,"author":{"gitId":"tanguoyang"},"content":"            System.out.println(\"Error while saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":208,"author":{"gitId":"tanguoyang"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":209,"author":{"gitId":"tanguoyang"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":210,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":211,"author":{"gitId":"tanguoyang"},"content":"    public static ArrayList\u003cTask\u003e loadTasksFromFile() {","lastModifiedDate":"2024-02-01"},{"lineNumber":212,"author":{"gitId":"tanguoyang"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":213,"author":{"gitId":"tanguoyang"},"content":"        try (BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(FILE_NAME))) {","lastModifiedDate":"2024-02-01"},{"lineNumber":214,"author":{"gitId":"tanguoyang"},"content":"            String line;","lastModifiedDate":"2024-02-01"},{"lineNumber":215,"author":{"gitId":"tanguoyang"},"content":"            while ((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":216,"author":{"gitId":"tanguoyang"},"content":"                Task task \u003d taskFromString(line);","lastModifiedDate":"2024-02-07"},{"lineNumber":217,"author":{"gitId":"tanguoyang"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-02-07"},{"lineNumber":218,"author":{"gitId":"tanguoyang"},"content":"                    tasks.add(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":219,"author":{"gitId":"tanguoyang"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":220,"author":{"gitId":"tanguoyang"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":221,"author":{"gitId":"tanguoyang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":222,"author":{"gitId":"tanguoyang"},"content":"            System.out.println(\"Could not load tasks from file: \" + e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":223,"author":{"gitId":"tanguoyang"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":224,"author":{"gitId":"tanguoyang"},"content":"        return tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":225,"author":{"gitId":"tanguoyang"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":226,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":227,"author":{"gitId":"tanguoyang"},"content":"    private static String taskToFileString(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":228,"author":{"gitId":"tanguoyang"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":229,"author":{"gitId":"tanguoyang"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-02-07"},{"lineNumber":230,"author":{"gitId":"tanguoyang"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2024-02-01"},{"lineNumber":231,"author":{"gitId":"tanguoyang"},"content":"            sb.append(\"T|\").append(task.isDone ? \"1\" : \"0\").append(\"|\").append(task.description);","lastModifiedDate":"2024-02-07"},{"lineNumber":232,"author":{"gitId":"tanguoyang"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2024-02-01"},{"lineNumber":233,"author":{"gitId":"tanguoyang"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-02-07"},{"lineNumber":234,"author":{"gitId":"tanguoyang"},"content":"            String byDate \u003d deadline.by.format(formatter);","lastModifiedDate":"2024-02-07"},{"lineNumber":235,"author":{"gitId":"tanguoyang"},"content":"            sb.append(\"D|\").append(task.isDone ? \"1\" : \"0\").append(\"|\").append(task.description).append(\"|\").append(byDate);","lastModifiedDate":"2024-02-07"},{"lineNumber":236,"author":{"gitId":"tanguoyang"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-02-01"},{"lineNumber":237,"author":{"gitId":"tanguoyang"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2024-02-07"},{"lineNumber":238,"author":{"gitId":"tanguoyang"},"content":"            String startDate \u003d event.start.format(formatter);","lastModifiedDate":"2024-02-07"},{"lineNumber":239,"author":{"gitId":"tanguoyang"},"content":"            String endDate \u003d event.end.format(formatter);","lastModifiedDate":"2024-02-07"},{"lineNumber":240,"author":{"gitId":"tanguoyang"},"content":"            sb.append(\"E|\").append(task.isDone ? \"1\" : \"0\").append(\"|\").append(task.description).append(\"|\").append(startDate).append(\"|\").append(endDate);","lastModifiedDate":"2024-02-07"},{"lineNumber":241,"author":{"gitId":"tanguoyang"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":242,"author":{"gitId":"tanguoyang"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":243,"author":{"gitId":"tanguoyang"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":244,"author":{"gitId":"tanguoyang"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":245,"author":{"gitId":"tanguoyang"},"content":"    private static Task taskFromString(String line) {","lastModifiedDate":"2024-02-07"},{"lineNumber":246,"author":{"gitId":"tanguoyang"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-02-01"},{"lineNumber":247,"author":{"gitId":"tanguoyang"},"content":"        boolean isDone \u003d \"1\".equals(parts[1]);","lastModifiedDate":"2024-02-07"},{"lineNumber":248,"author":{"gitId":"tanguoyang"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2024-02-01"},{"lineNumber":249,"author":{"gitId":"tanguoyang"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-02-07"},{"lineNumber":250,"author":{"gitId":"tanguoyang"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":251,"author":{"gitId":"tanguoyang"},"content":"            switch (parts[0]) {","lastModifiedDate":"2024-02-07"},{"lineNumber":252,"author":{"gitId":"tanguoyang"},"content":"                case \"T\":","lastModifiedDate":"2024-02-07"},{"lineNumber":253,"author":{"gitId":"tanguoyang"},"content":"                    ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":254,"author":{"gitId":"tanguoyang"},"content":"                    if (isDone) todo.markAsDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":255,"author":{"gitId":"tanguoyang"},"content":"                    return todo;","lastModifiedDate":"2024-02-07"},{"lineNumber":256,"author":{"gitId":"tanguoyang"},"content":"                case \"D\":","lastModifiedDate":"2024-02-07"},{"lineNumber":257,"author":{"gitId":"tanguoyang"},"content":"                    LocalDate by \u003d LocalDate.parse(parts[3], formatter);","lastModifiedDate":"2024-02-07"},{"lineNumber":258,"author":{"gitId":"tanguoyang"},"content":"                    Deadline deadline \u003d new Deadline(description, parts[3]);","lastModifiedDate":"2024-02-07"},{"lineNumber":259,"author":{"gitId":"tanguoyang"},"content":"                    if (isDone) deadline.markAsDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":260,"author":{"gitId":"tanguoyang"},"content":"                    return deadline;","lastModifiedDate":"2024-02-07"},{"lineNumber":261,"author":{"gitId":"tanguoyang"},"content":"                case \"E\":","lastModifiedDate":"2024-02-07"},{"lineNumber":262,"author":{"gitId":"tanguoyang"},"content":"                    LocalDate start \u003d LocalDate.parse(parts[3], formatter);","lastModifiedDate":"2024-02-07"},{"lineNumber":263,"author":{"gitId":"tanguoyang"},"content":"                    LocalDate end \u003d LocalDate.parse(parts[4], formatter);","lastModifiedDate":"2024-02-07"},{"lineNumber":264,"author":{"gitId":"tanguoyang"},"content":"                    Event event \u003d new Event(description, parts[3], parts[4]);","lastModifiedDate":"2024-02-07"},{"lineNumber":265,"author":{"gitId":"tanguoyang"},"content":"                    if (isDone) event.markAsDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":266,"author":{"gitId":"tanguoyang"},"content":"                    return event;","lastModifiedDate":"2024-02-07"},{"lineNumber":267,"author":{"gitId":"tanguoyang"},"content":"                default:","lastModifiedDate":"2024-02-07"},{"lineNumber":268,"author":{"gitId":"tanguoyang"},"content":"                    return null;","lastModifiedDate":"2024-02-07"},{"lineNumber":269,"author":{"gitId":"tanguoyang"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":270,"author":{"gitId":"tanguoyang"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":271,"author":{"gitId":"tanguoyang"},"content":"            System.out.println(\"Error parsing date: \" + e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":272,"author":{"gitId":"tanguoyang"},"content":"            return null;","lastModifiedDate":"2024-02-07"},{"lineNumber":273,"author":{"gitId":"tanguoyang"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":274,"author":{"gitId":"tanguoyang"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":275,"author":{"gitId":"tanguoyang"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"tanguoyang":272,"-":3}},{"path":"tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanguoyang"},"content":"D|0|work|2001-02-02","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"tanguoyang"},"content":"E|0|party|2001-02-02|2001-02-02","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"tanguoyang"},"content":"D|0|w|2001-01-01","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"tanguoyang":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanguoyang"},"content":"todo apple","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"tanguoyang"},"content":"deadline pear /by 2000-01-01","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"tanguoyang"},"content":"event orange /from 2020-01-01 /to 2020-01-02","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"tanguoyang"},"content":"list","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"tanguoyang"},"content":"done 0","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"tanguoyang"},"content":"list","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"tanguoyang"},"content":"done 1","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"tanguoyang"},"content":"list","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"tanguoyang"},"content":"done 2","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"tanguoyang"},"content":"list","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"tanguoyang"},"content":"delete 0","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"tanguoyang"},"content":"list","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"tanguoyang"},"content":"bye","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"tanguoyang":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tanguoyang"},"content":"java -classpath ..\\bin Dude \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanguoyang":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"tanguoyang"},"content":"java -classpath ../bin Dude \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanguoyang":1,"-":37}}]
