[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.1.0\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"javafx {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 , \u0027javafx.fxml\u0027]","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"willowisp01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"willowisp01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"willowisp01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"willowisp01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"willowisp01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"willowisp01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"willowisp01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"willowisp01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"willowisp01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"willowisp01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"willowisp01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"willowisp01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"willowisp01"},"content":"    mainClass.set(\"luke.Launcher\")","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"willowisp01"},"content":"    archiveFileName \u003d \u0027luke.jar\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"willowisp01":23,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"# Luke User Guide","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"![UI image](./Ui.png)","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"Have you ever wanted a friendly chatbot to keep track of your tasks and","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"give you emotional support? Great news! Luke can do all of that for you, ","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"and more! ","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"`/// Please give me a try... ///`","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"# Requirements","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"Java 11 is required to run this program. ","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"Find it [here](https://www.openlogic.com/openjdk-downloads?field_java_parent_version_target_id\u003d406\u0026field_operating_system_target_id\u003dAll\u0026field_architecture_target_id\u003dAll\u0026field_java_package_target_id\u003dAll)!","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"# Adding Tasks","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"Tasks are the core of this manager. You can add 3 types of tasks: ","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"1. todo","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"2. deadline","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"willowisp01"},"content":"3. event","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"willowisp01"},"content":"which you can see the details of below.","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"willowisp01"},"content":"Don\u0027t worry about whitespace issues. Luke can handle it all!","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"willowisp01"},"content":"## todo","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"willowisp01"},"content":"Adds a todo task. ","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"willowisp01"},"content":"Example: `todo homework`","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"willowisp01"},"content":"Sample output:","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"willowisp01"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"willowisp01"},"content":"I helped you add task \u0027[T][ ] homework\u0027. But do it yourself next time! Hmmph!","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"willowisp01"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"willowisp01"},"content":"As you can see, each todo task description has a [T] prefix.","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"willowisp01"},"content":"## deadline","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"willowisp01"},"content":"Adds a deadline task. Deadlines have a \"by\" date. ","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"willowisp01"},"content":"Please follow the date format in the example!","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"willowisp01"},"content":"Example: `deadline assignment / by 27-08-2001`","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"willowisp01"},"content":"Sample Output:","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"willowisp01"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"willowisp01"},"content":"I helped you add task \u0027[D][ ] assignment (by: 2001-08-27)\u0027. But do it yourself next time! Hmmph!","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"willowisp01"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"willowisp01"},"content":"As you can see, each deadline task description has a [D] prefix.","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"willowisp01"},"content":"## event","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"willowisp01"},"content":"Adds an event task. Events have a \"from\" and \"to\" date. ","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"willowisp01"},"content":"Please follow the date format in the example!","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"willowisp01"},"content":"Example: `event my dog\u0027s multi-day party / from 27-08-2024 / to 28-08-2024`","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"willowisp01"},"content":"Sample Output:","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"willowisp01"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"willowisp01"},"content":"I helped you add task \u0027[E][ ] my dog\u0027s multi-day party (from: 2024-08-27 to: 2024-08-28)\u0027. But do it yourself next time! Hmmph!","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"willowisp01"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"willowisp01"},"content":"As you can see, each event task description has an [E] prefix.","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"willowisp01"},"content":"# Task Commands","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"willowisp01"},"content":"Once you have a couple of tasks in the manager, Luke can help you","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"willowisp01"},"content":"to perform several useful functions with them! They are:","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"willowisp01"},"content":"1. list","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"willowisp01"},"content":"2. mark","lastModifiedDate":"2024-02-18"},{"lineNumber":80,"author":{"gitId":"willowisp01"},"content":"3. delete","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"willowisp01"},"content":"4. remind","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"willowisp01"},"content":"5. find","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"willowisp01"},"content":"which you can see the details of below. Manage your time efficiently!","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"willowisp01"},"content":"## list","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":88,"author":{"gitId":"willowisp01"},"content":"Lists down all tasks regardless of whether they are completed or not. ","lastModifiedDate":"2024-02-18"},{"lineNumber":89,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":90,"author":{"gitId":"willowisp01"},"content":"Example: `list`","lastModifiedDate":"2024-02-18"},{"lineNumber":91,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":92,"author":{"gitId":"willowisp01"},"content":"Sample Output:","lastModifiedDate":"2024-02-18"},{"lineNumber":93,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":94,"author":{"gitId":"willowisp01"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":95,"author":{"gitId":"willowisp01"},"content":"1. [T][ ] homework","lastModifiedDate":"2024-02-18"},{"lineNumber":96,"author":{"gitId":"willowisp01"},"content":"2. [T][ ] wholesome date","lastModifiedDate":"2024-02-18"},{"lineNumber":97,"author":{"gitId":"willowisp01"},"content":"3. [T][ ] go out with friends","lastModifiedDate":"2024-02-18"},{"lineNumber":98,"author":{"gitId":"willowisp01"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":99,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":100,"author":{"gitId":"willowisp01"},"content":"## mark","lastModifiedDate":"2024-02-18"},{"lineNumber":101,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":102,"author":{"gitId":"willowisp01"},"content":"Marks a task as done. You will see that there is an [X]","lastModifiedDate":"2024-02-18"},{"lineNumber":103,"author":{"gitId":"willowisp01"},"content":"in the task description. Use the (1-based) index to mark a task as done.","lastModifiedDate":"2024-02-18"},{"lineNumber":104,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":105,"author":{"gitId":"willowisp01"},"content":"Example: `mark 1`","lastModifiedDate":"2024-02-18"},{"lineNumber":106,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":107,"author":{"gitId":"willowisp01"},"content":"Sample Output:","lastModifiedDate":"2024-02-18"},{"lineNumber":108,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":109,"author":{"gitId":"willowisp01"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":110,"author":{"gitId":"willowisp01"},"content":"Good work, I guess.","lastModifiedDate":"2024-02-18"},{"lineNumber":111,"author":{"gitId":"willowisp01"},"content":"1. [T][X] homework","lastModifiedDate":"2024-02-18"},{"lineNumber":112,"author":{"gitId":"willowisp01"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":113,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":114,"author":{"gitId":"willowisp01"},"content":"You can confirm that the task is indeed done by checking the list again:","lastModifiedDate":"2024-02-18"},{"lineNumber":115,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":116,"author":{"gitId":"willowisp01"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":117,"author":{"gitId":"willowisp01"},"content":"1. [T][X] homework","lastModifiedDate":"2024-02-18"},{"lineNumber":118,"author":{"gitId":"willowisp01"},"content":"2. [T][ ] wholesome date","lastModifiedDate":"2024-02-18"},{"lineNumber":119,"author":{"gitId":"willowisp01"},"content":"3. [T][ ] go out with friends","lastModifiedDate":"2024-02-18"},{"lineNumber":120,"author":{"gitId":"willowisp01"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":121,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":122,"author":{"gitId":"willowisp01"},"content":"## delete","lastModifiedDate":"2024-02-18"},{"lineNumber":123,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":124,"author":{"gitId":"willowisp01"},"content":"Deletes a task. Use the (1-based) index to delete a task. ","lastModifiedDate":"2024-02-18"},{"lineNumber":125,"author":{"gitId":"willowisp01"},"content":"You can delete a task regardless of whether it is complete.","lastModifiedDate":"2024-02-18"},{"lineNumber":126,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":127,"author":{"gitId":"willowisp01"},"content":"Example: `delete 3`","lastModifiedDate":"2024-02-18"},{"lineNumber":128,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":129,"author":{"gitId":"willowisp01"},"content":"Sample Output:","lastModifiedDate":"2024-02-18"},{"lineNumber":130,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":131,"author":{"gitId":"willowisp01"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":132,"author":{"gitId":"willowisp01"},"content":"Fine! If that\u0027s what you really want...","lastModifiedDate":"2024-02-18"},{"lineNumber":133,"author":{"gitId":"willowisp01"},"content":"[Removed [T][ ] go out with friends]","lastModifiedDate":"2024-02-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":135,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":136,"author":{"gitId":"willowisp01"},"content":"Checking the list again: ","lastModifiedDate":"2024-02-18"},{"lineNumber":137,"author":{"gitId":"willowisp01"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":138,"author":{"gitId":"willowisp01"},"content":"1. [T][X] homework","lastModifiedDate":"2024-02-18"},{"lineNumber":139,"author":{"gitId":"willowisp01"},"content":"2. [T][ ] wholesome date","lastModifiedDate":"2024-02-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":142,"author":{"gitId":"willowisp01"},"content":"## remind","lastModifiedDate":"2024-02-18"},{"lineNumber":143,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":144,"author":{"gitId":"willowisp01"},"content":"Reminds you of which tasks you have yet to complete. ","lastModifiedDate":"2024-02-18"},{"lineNumber":145,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":146,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":147,"author":{"gitId":"willowisp01"},"content":"Example: `remind`","lastModifiedDate":"2024-02-18"},{"lineNumber":148,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":149,"author":{"gitId":"willowisp01"},"content":"Given the tasklist","lastModifiedDate":"2024-02-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":152,"author":{"gitId":"willowisp01"},"content":"1. [T][X] homework","lastModifiedDate":"2024-02-18"},{"lineNumber":153,"author":{"gitId":"willowisp01"},"content":"2. [T][ ] wholesome date","lastModifiedDate":"2024-02-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":156,"author":{"gitId":"willowisp01"},"content":"you should see the output","lastModifiedDate":"2024-02-18"},{"lineNumber":157,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":158,"author":{"gitId":"willowisp01"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":159,"author":{"gitId":"willowisp01"},"content":"Get to it!","lastModifiedDate":"2024-02-18"},{"lineNumber":160,"author":{"gitId":"willowisp01"},"content":"1. [T][ ] wholesome date","lastModifiedDate":"2024-02-18"},{"lineNumber":161,"author":{"gitId":"willowisp01"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":162,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":163,"author":{"gitId":"willowisp01"},"content":"## find","lastModifiedDate":"2024-02-18"},{"lineNumber":164,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":165,"author":{"gitId":"willowisp01"},"content":"Finds task(s) given a substring of the task name.","lastModifiedDate":"2024-02-18"},{"lineNumber":166,"author":{"gitId":"willowisp01"},"content":"No more searching through all your tasks manually!","lastModifiedDate":"2024-02-18"},{"lineNumber":167,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":168,"author":{"gitId":"willowisp01"},"content":"Example: `find date`","lastModifiedDate":"2024-02-18"},{"lineNumber":169,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":170,"author":{"gitId":"willowisp01"},"content":"Sample Output:","lastModifiedDate":"2024-02-18"},{"lineNumber":171,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":172,"author":{"gitId":"willowisp01"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":173,"author":{"gitId":"willowisp01"},"content":"Here... here you go!","lastModifiedDate":"2024-02-18"},{"lineNumber":174,"author":{"gitId":"willowisp01"},"content":"1. [T][ ] wholesome date","lastModifiedDate":"2024-02-18"},{"lineNumber":175,"author":{"gitId":"willowisp01"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":176,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":177,"author":{"gitId":"willowisp01"},"content":"# Quitting","lastModifiedDate":"2024-02-18"},{"lineNumber":178,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":179,"author":{"gitId":"willowisp01"},"content":"How do you quit Luke? No, it\u0027s not by using `:wq`. ","lastModifiedDate":"2024-02-18"},{"lineNumber":180,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":181,"author":{"gitId":"willowisp01"},"content":"Just say `bye` to Luke. Luke wants to see you again, but is too ","lastModifiedDate":"2024-02-18"},{"lineNumber":182,"author":{"gitId":"willowisp01"},"content":"shy to tell you so.","lastModifiedDate":"2024-02-18"},{"lineNumber":183,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":184,"author":{"gitId":"willowisp01"},"content":"Note that if you don\u0027t quit properly, Luke might not save your history. ","lastModifiedDate":"2024-02-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":186,"author":{"gitId":"willowisp01"},"content":"# History","lastModifiedDate":"2024-02-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":188,"author":{"gitId":"willowisp01"},"content":"Luke remembers everything you told him! Even your deepest,","lastModifiedDate":"2024-02-18"},{"lineNumber":189,"author":{"gitId":"willowisp01"},"content":"darkest secrets. If you have remaining tasks when you say `bye`,","lastModifiedDate":"2024-02-18"},{"lineNumber":190,"author":{"gitId":"willowisp01"},"content":"Luke remembers them.","lastModifiedDate":"2024-02-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":192,"author":{"gitId":"willowisp01"},"content":"Just use `list` the next time you start Luke up and you should","lastModifiedDate":"2024-02-18"},{"lineNumber":193,"author":{"gitId":"willowisp01"},"content":"see that the history has been saved. Neat! ","lastModifiedDate":"2024-02-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":195,"author":{"gitId":"willowisp01"},"content":"## Have fun trying Luke out!","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"willowisp01":174,"-":21}},{"path":"src/main/java/luke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"public enum Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"    LIST(\"list\"),","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"    FIND(\"find\"),","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"    REMIND(\"remind\");","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"    private final String nameString;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"    Command(String nameString) {","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"        this.nameString \u003d nameString;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"    public String toString() {","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"        return nameString;","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"willowisp01":19}},{"path":"src/main/java/luke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"    private LocalDate byDate;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"     * Creates a Deadline with the specified name and date.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"     * @param name Name of task.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"     * @param byDate LocalDate representing when the deadline is by.","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"    public Deadline(String name, LocalDate byDate) {","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"        super(name);","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"     * @return The status of task. ([taskType][isDone] taskname by)","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"willowisp01"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"willowisp01"},"content":"    public String getFullStatus() { //TODO: add type of task later","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"willowisp01"},"content":"        String checkbox;","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"willowisp01"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"willowisp01"},"content":"            checkbox \u003d \"[D][X] \";","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"willowisp01"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"willowisp01"},"content":"            checkbox \u003d \"[D][ ] \";","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"willowisp01"},"content":"        return checkbox + name + \" (by: \" + byDate + \")\";","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"willowisp01"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"willowisp01"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"willowisp01"},"content":"        Deadline deadline \u003d (Deadline) obj;","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"willowisp01"},"content":"        if (deadline.name.equals(this.name) \u0026\u0026 deadline.byDate.equals(this.byDate) \u0026\u0026 (deadline.isDone \u003d\u003d this.isDone)) {","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"willowisp01"},"content":"            return true;","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"willowisp01"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"willowisp01":41}},{"path":"src/main/java/luke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"//Used this https://se-education.org/guides/tutorials/javaFxPart2.html as the main template!","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"    private Label text;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"        text \u003d l;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"        text.setWrapText(true);","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"willowisp01"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"willowisp01"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"willowisp01"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"willowisp01"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"willowisp01"},"content":"    private void flip() {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"willowisp01"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"willowisp01"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"willowisp01"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"willowisp01"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"willowisp01"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"willowisp01"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"willowisp01"},"content":"    public static DialogBox getLukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"willowisp01"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"willowisp01"},"content":"        db.flip();","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"willowisp01"},"content":"        return db;","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"willowisp01":46}},{"path":"src/main/java/luke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"    LocalDate startDate;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"    LocalDate endDate;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"     * Creates an Event with the specified name, start and end date.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"     * @param name The event name.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"     * @param startDate The start date.","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"     * @param endDate The end date.","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"    public Event(String name, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"        super(name);","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"willowisp01"},"content":"     * @return The status of task. ([taskType][isDone] taskname start end)","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"willowisp01"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"willowisp01"},"content":"    public String getFullStatus() { //TODO: add type of task later","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"willowisp01"},"content":"        String checkbox;","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"willowisp01"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"willowisp01"},"content":"            checkbox \u003d \"[E][X] \";","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"willowisp01"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"willowisp01"},"content":"            checkbox \u003d \"[E][ ] \";","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"willowisp01"},"content":"        return checkbox + name + \" (from: \" + startDate +  \" to: \" + endDate + \")\";","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"willowisp01"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"willowisp01"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"willowisp01"},"content":"        Event event \u003d (Event) obj;","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"willowisp01"},"content":"        if (event.name.equals(this.name) \u0026\u0026 event.startDate.equals(this.startDate) \u0026\u0026 event.endDate.equals(this.endDate) \u0026\u0026 (event.isDone \u003d\u003d this.isDone)) {","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"willowisp01"},"content":"            return true;","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"willowisp01"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"willowisp01":44}},{"path":"src/main/java/luke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":" * Taken from https://se-education.org/guides/tutorials/javaFxPart1.html","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":" * For some reason the jar file refuses to work without this and gives","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":" * Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"public class Launcher {","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"        Application.launch(Luke.class, args);","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"willowisp01":15}},{"path":"src/main/java/luke/Luke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"willowisp01"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"willowisp01"},"content":"public class Luke extends Application {","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"willowisp01"},"content":"    //Used this https://se-education.org/guides/tutorials/javaFxPart2.html as the main template!","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"willowisp01"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"willowisp01"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"willowisp01"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"willowisp01"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"willowisp01"},"content":"    private Scene scene;","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"willowisp01"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/roblox.jpg\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"willowisp01"},"content":"    private Image luke \u003d new Image(this.getClass().getResourceAsStream(\"/images/ltg.jpg\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"willowisp01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"willowisp01"},"content":"        launch();","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"willowisp01"},"content":"    //Used this https://se-education.org/guides/tutorials/javaFxPart2.html as the main template!","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"willowisp01"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"willowisp01"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"willowisp01"},"content":"        //a bit messy. could be fixed with XFML.","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"willowisp01"},"content":"        Storage storage \u003d Storage.loadHistory();","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"willowisp01"},"content":"        File historyFile \u003d Storage.getHistoryFile();","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"willowisp01"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"willowisp01"},"content":"        Parser parser \u003d new Parser(storage, historyFile);","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"willowisp01"},"content":"        initFxFields();","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"willowisp01"},"content":"        setFxFields(stage);","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"willowisp01"},"content":"        lukeSpeaks(UI.greet());","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"willowisp01"},"content":"        setEventHandlers(parser, ui, stage);","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"willowisp01"},"content":"        setListeners();","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"willowisp01"},"content":"     * Initializes JavaFX fields for Luke GUI.","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"willowisp01"},"content":"    private void initFxFields() {","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"willowisp01"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"willowisp01"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"willowisp01"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"willowisp01"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"willowisp01"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"willowisp01"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"willowisp01"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"willowisp01"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"willowisp01"},"content":"     * Sets JavaFX field values for Luke GUI.","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"willowisp01"},"content":"     * @param stage JavaFX stage","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"willowisp01"},"content":"    private void setFxFields(Stage stage) {","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"willowisp01"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"willowisp01"},"content":"        stage.getIcons().addAll(luke);","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"willowisp01"},"content":"        stage.setX(300);","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"willowisp01"},"content":"        stage.setY(100);","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"willowisp01"},"content":"        stage.show();","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"willowisp01"},"content":"        stage.setTitle(\"Luke\");","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"willowisp01"},"content":"        double minHeight \u003d 600;","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"willowisp01"},"content":"        double minWidth \u003d 600;","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"willowisp01"},"content":"        stage.setMinHeight(minHeight);","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"willowisp01"},"content":"        stage.setMinWidth(minWidth);","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"willowisp01"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"willowisp01"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"willowisp01"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"willowisp01"},"content":"        scrollPane.setPrefSize(0.97 * minWidth, 0.89 * minHeight);","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"willowisp01"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"willowisp01"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"willowisp01"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"willowisp01"},"content":"        userInput.setPrefWidth(520);","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"willowisp01"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"willowisp01"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"willowisp01"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"willowisp01"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"willowisp01"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"willowisp01"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":108,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":110,"author":{"gitId":"willowisp01"},"content":"     * Sets event handlers to handle GUI inputs.","lastModifiedDate":"2024-02-18"},{"lineNumber":111,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":112,"author":{"gitId":"willowisp01"},"content":"     * @param parser Command parser (input string -\u003e result string)","lastModifiedDate":"2024-02-18"},{"lineNumber":113,"author":{"gitId":"willowisp01"},"content":"     * @param ui UI to generate UI messages","lastModifiedDate":"2024-02-18"},{"lineNumber":114,"author":{"gitId":"willowisp01"},"content":"     * @param stage JavaFX stage","lastModifiedDate":"2024-02-18"},{"lineNumber":115,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":116,"author":{"gitId":"willowisp01"},"content":"    private void setEventHandlers(Parser parser, UI ui, Stage stage) {","lastModifiedDate":"2024-02-18"},{"lineNumber":117,"author":{"gitId":"willowisp01"},"content":"        //makes it such that we handle user input upon clicking.","lastModifiedDate":"2024-02-07"},{"lineNumber":118,"author":{"gitId":"willowisp01"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2024-02-07"},{"lineNumber":119,"author":{"gitId":"willowisp01"},"content":"            handleUserInput(parser, ui, stage);","lastModifiedDate":"2024-02-07"},{"lineNumber":120,"author":{"gitId":"willowisp01"},"content":"        });","lastModifiedDate":"2024-02-07"},{"lineNumber":121,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":122,"author":{"gitId":"willowisp01"},"content":"        //makes it such that we handle user input upon pressing enter.","lastModifiedDate":"2024-02-07"},{"lineNumber":123,"author":{"gitId":"willowisp01"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2024-02-07"},{"lineNumber":124,"author":{"gitId":"willowisp01"},"content":"            handleUserInput(parser, ui, stage);","lastModifiedDate":"2024-02-07"},{"lineNumber":125,"author":{"gitId":"willowisp01"},"content":"        });","lastModifiedDate":"2024-02-07"},{"lineNumber":126,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":127,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":128,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":129,"author":{"gitId":"willowisp01"},"content":"     * Sets JavaFX listeners.","lastModifiedDate":"2024-02-18"},{"lineNumber":130,"author":{"gitId":"willowisp01"},"content":"     * In this case, makes sure the page scrolls down to the bottom if input","lastModifiedDate":"2024-02-18"},{"lineNumber":131,"author":{"gitId":"willowisp01"},"content":"     * flows off the screen.","lastModifiedDate":"2024-02-18"},{"lineNumber":132,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":133,"author":{"gitId":"willowisp01"},"content":"    private void setListeners() {","lastModifiedDate":"2024-02-18"},{"lineNumber":134,"author":{"gitId":"willowisp01"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2024-02-07"},{"lineNumber":135,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":136,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":137,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":138,"author":{"gitId":"willowisp01"},"content":"     * Handles user input and generates the appropriate response.","lastModifiedDate":"2024-02-18"},{"lineNumber":139,"author":{"gitId":"willowisp01"},"content":"     * Shows the appropriate response in the GUI.","lastModifiedDate":"2024-02-18"},{"lineNumber":140,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":141,"author":{"gitId":"willowisp01"},"content":"     * @param parser The parser used to parse string inputs from user.","lastModifiedDate":"2024-02-18"},{"lineNumber":142,"author":{"gitId":"willowisp01"},"content":"     * @param ui The UI which generates messages in the GUI.","lastModifiedDate":"2024-02-18"},{"lineNumber":143,"author":{"gitId":"willowisp01"},"content":"     * @param stage The JavaFX stage.","lastModifiedDate":"2024-02-18"},{"lineNumber":144,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":145,"author":{"gitId":"willowisp01"},"content":"    //Used this https://se-education.org/guides/tutorials/javaFxPart2.html as the main template!","lastModifiedDate":"2024-02-07"},{"lineNumber":146,"author":{"gitId":"willowisp01"},"content":"    private void handleUserInput(Parser parser, UI ui, Stage stage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":147,"author":{"gitId":"willowisp01"},"content":"        assert parser !\u003d null;","lastModifiedDate":"2024-02-12"},{"lineNumber":148,"author":{"gitId":"willowisp01"},"content":"        String QUIT_STRING \u003d \"QUIT\";","lastModifiedDate":"2024-02-12"},{"lineNumber":149,"author":{"gitId":"willowisp01"},"content":"        String formattedInput \u003d userInput.getText();","lastModifiedDate":"2024-02-07"},{"lineNumber":150,"author":{"gitId":"willowisp01"},"content":"        String lukeReply;","lastModifiedDate":"2024-02-07"},{"lineNumber":151,"author":{"gitId":"willowisp01"},"content":"        Label lukeText;","lastModifiedDate":"2024-02-07"},{"lineNumber":152,"author":{"gitId":"willowisp01"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2024-02-07"},{"lineNumber":153,"author":{"gitId":"willowisp01"},"content":"        if (parser.isLastCommand) {","lastModifiedDate":"2024-02-07"},{"lineNumber":154,"author":{"gitId":"willowisp01"},"content":"            stage.close();","lastModifiedDate":"2024-02-07"},{"lineNumber":155,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":156,"author":{"gitId":"willowisp01"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":157,"author":{"gitId":"willowisp01"},"content":"            lukeReply \u003d parser.parseCommand(formattedInput);","lastModifiedDate":"2024-02-07"},{"lineNumber":158,"author":{"gitId":"willowisp01"},"content":"        } catch (TasklistException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":159,"author":{"gitId":"willowisp01"},"content":"            lukeReply \u003d e.getMessage();","lastModifiedDate":"2024-02-07"},{"lineNumber":160,"author":{"gitId":"willowisp01"},"content":"        } catch (ParseCommandException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":161,"author":{"gitId":"willowisp01"},"content":"            lukeReply \u003d e.getMessage();","lastModifiedDate":"2024-02-07"},{"lineNumber":162,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":163,"author":{"gitId":"willowisp01"},"content":"        if (lukeReply.equals(QUIT_STRING)) {","lastModifiedDate":"2024-02-12"},{"lineNumber":164,"author":{"gitId":"willowisp01"},"content":"            lukeText \u003d new Label(ui.bye());","lastModifiedDate":"2024-02-07"},{"lineNumber":165,"author":{"gitId":"willowisp01"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-07"},{"lineNumber":166,"author":{"gitId":"willowisp01"},"content":"                    DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2024-02-07"},{"lineNumber":167,"author":{"gitId":"willowisp01"},"content":"                    DialogBox.getLukeDialog(lukeText, new ImageView(luke))","lastModifiedDate":"2024-02-07"},{"lineNumber":168,"author":{"gitId":"willowisp01"},"content":"            );","lastModifiedDate":"2024-02-07"},{"lineNumber":169,"author":{"gitId":"willowisp01"},"content":"            userInput.clear();","lastModifiedDate":"2024-02-12"},{"lineNumber":170,"author":{"gitId":"willowisp01"},"content":"            parser.isLastCommand \u003d true;","lastModifiedDate":"2024-02-07"},{"lineNumber":171,"author":{"gitId":"willowisp01"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":172,"author":{"gitId":"willowisp01"},"content":"            lukeText \u003d new Label(lukeReply);","lastModifiedDate":"2024-02-07"},{"lineNumber":173,"author":{"gitId":"willowisp01"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-07"},{"lineNumber":174,"author":{"gitId":"willowisp01"},"content":"                    DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2024-02-07"},{"lineNumber":175,"author":{"gitId":"willowisp01"},"content":"                    DialogBox.getLukeDialog(lukeText, new ImageView(luke))","lastModifiedDate":"2024-02-07"},{"lineNumber":176,"author":{"gitId":"willowisp01"},"content":"            );","lastModifiedDate":"2024-02-07"},{"lineNumber":177,"author":{"gitId":"willowisp01"},"content":"            userInput.clear();","lastModifiedDate":"2024-02-07"},{"lineNumber":178,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":179,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":180,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":181,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":182,"author":{"gitId":"willowisp01"},"content":"     * Makes Luke say something (which is then shown in the GUI).","lastModifiedDate":"2024-02-18"},{"lineNumber":183,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":184,"author":{"gitId":"willowisp01"},"content":"     * @param input What you want Luke to say.","lastModifiedDate":"2024-02-18"},{"lineNumber":185,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":186,"author":{"gitId":"willowisp01"},"content":"    private void lukeSpeaks(String input) {","lastModifiedDate":"2024-02-07"},{"lineNumber":187,"author":{"gitId":"willowisp01"},"content":"        Label lukeText \u003d new Label(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":188,"author":{"gitId":"willowisp01"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-07"},{"lineNumber":189,"author":{"gitId":"willowisp01"},"content":"                DialogBox.getLukeDialog(lukeText, new ImageView(luke))","lastModifiedDate":"2024-02-07"},{"lineNumber":190,"author":{"gitId":"willowisp01"},"content":"        );","lastModifiedDate":"2024-02-07"},{"lineNumber":191,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":192,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":193,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":194,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":195,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"willowisp01":195}},{"path":"src/main/java/luke/MakeTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"public class MakeTaskException extends Exception {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"    public MakeTaskException(String errorMessage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"willowisp01":8}},{"path":"src/main/java/luke/ParseCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"public class ParseCommandException extends Exception {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"    public ParseCommandException(String input) {","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"        super(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"willowisp01":7}},{"path":"src/main/java/luke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"public class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"    //Some strings the parser should look out for","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"    private final String QUIT_STRING \u003d \"QUIT\";","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"    private File saveFile;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"    boolean isLastCommand \u003d false;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"     * Creates a parser with the specified Storage and save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"     * @param storage Serializable which represents the save data.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"     * @param saveFile File object used to save/load.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"    public Parser(Storage storage, File saveFile) {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.getHistory();","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"willowisp01"},"content":"        this.taskList \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"willowisp01"},"content":"        this.saveFile \u003d saveFile;","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"willowisp01"},"content":"     * Parses a command given a string input. The command is executed if possible.","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"willowisp01"},"content":"     * Idea to separate original code into different sections provided by ChatGPT with my modification and corrections.","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"willowisp01"},"content":"     * I gave it my original code. See https://chat.openai.com/share/e4d5e892-5d06-4f57-906c-7ca4e23ff272","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"willowisp01"},"content":"     * @param input String input as given by the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"willowisp01"},"content":"     * @return The output of the command, if any.","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"willowisp01"},"content":"    public String parseCommand(String input) throws ParseCommandException, TasklistException {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"willowisp01"},"content":"        String returnMessage;","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"willowisp01"},"content":"        String trimmedLowercase \u003d input.trim().toLowerCase();","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"willowisp01"},"content":"        for (Command command : Command.values()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"willowisp01"},"content":"            if (command.toString().equals(trimmedLowercase.split(\" \")[0].trim())) {","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"willowisp01"},"content":"                return handleCommand(command, input);","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"willowisp01"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"willowisp01"},"content":"        //tasks","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"willowisp01"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"willowisp01"},"content":"            Task task \u003d TaskMaker.makeTask(input);","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"willowisp01"},"content":"            returnMessage \u003d taskList.addTask(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"willowisp01"},"content":"        } catch (MakeTaskException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"willowisp01"},"content":"            returnMessage \u003d e.getMessage();","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"willowisp01"},"content":"        return returnMessage;","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"willowisp01"},"content":"     * Interprets an input using the given command.","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"willowisp01"},"content":"     * Returns the result of executing the command as a string.","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"willowisp01"},"content":"     * @param command The type of command","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"willowisp01"},"content":"     * @param input String input as given by the user","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"willowisp01"},"content":"     * @return The result of executing the command.","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"willowisp01"},"content":"     * @throws ParseCommandException","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"willowisp01"},"content":"     * @throws TasklistException","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"willowisp01"},"content":"    private String handleCommand(Command command, String input) throws ParseCommandException, TasklistException {","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"willowisp01"},"content":"        switch (command) {","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"willowisp01"},"content":"            case BYE:","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"willowisp01"},"content":"                storage.saveHistory(saveFile, taskList.getTasks());","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"willowisp01"},"content":"                return QUIT_STRING;","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"willowisp01"},"content":"            case LIST:","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"willowisp01"},"content":"                return taskList.listTasks();","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"willowisp01"},"content":"            case REMIND:","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"willowisp01"},"content":"                return taskList.remind();","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"willowisp01"},"content":"            case DELETE:","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"willowisp01"},"content":"                return handleDeleteCommand(input);","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"willowisp01"},"content":"            case MARK:","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"willowisp01"},"content":"                return handleMarkCommand(input);","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"willowisp01"},"content":"            case FIND:","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"willowisp01"},"content":"                return handleFindCommand(input);","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"willowisp01"},"content":"            default:","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"willowisp01"},"content":"                throw new ParseCommandException(UI.getCommandNotFoundMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":82,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"willowisp01"},"content":"     * Helper function for handleCommand.","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"willowisp01"},"content":"     * In specific, handles a find command.","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"willowisp01"},"content":"     * @param input","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"willowisp01"},"content":"     * @return The result of executing the command.","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"willowisp01"},"content":"     * @throws TasklistException","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"willowisp01"},"content":"     * @throws ParseCommandException","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"willowisp01"},"content":"    private String handleFindCommand(String input) throws TasklistException, ParseCommandException {","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"willowisp01"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"willowisp01"},"content":"            String keyword \u003d input.split(\" \")[1].strip();","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"willowisp01"},"content":"            return taskList.findTask(keyword);","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"willowisp01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"willowisp01"},"content":"            String nanMessage \u003d UI.getNanMessage();","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"willowisp01"},"content":"            throw new ParseCommandException(nanMessage);","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"willowisp01"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"willowisp01"},"content":"            String missingParametersMessage \u003d UI.getMissingParameterMessage(Command.DELETE.toString());","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"willowisp01"},"content":"            throw new ParseCommandException(missingParametersMessage);","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"willowisp01"},"content":"     * Helper function for handleCommand.","lastModifiedDate":"2024-02-12"},{"lineNumber":108,"author":{"gitId":"willowisp01"},"content":"     * In specific, handles a mark command.","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":110,"author":{"gitId":"willowisp01"},"content":"     * @param input","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"willowisp01"},"content":"     * @return The result of executing the command.","lastModifiedDate":"2024-02-12"},{"lineNumber":112,"author":{"gitId":"willowisp01"},"content":"     * @throws TasklistException","lastModifiedDate":"2024-02-12"},{"lineNumber":113,"author":{"gitId":"willowisp01"},"content":"     * @throws ParseCommandException","lastModifiedDate":"2024-02-12"},{"lineNumber":114,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":115,"author":{"gitId":"willowisp01"},"content":"    private String handleMarkCommand(String input) throws TasklistException, ParseCommandException {","lastModifiedDate":"2024-02-12"},{"lineNumber":116,"author":{"gitId":"willowisp01"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":117,"author":{"gitId":"willowisp01"},"content":"            int index \u003d Integer.parseInt(input.split(\" \")[1].strip()) - 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":118,"author":{"gitId":"willowisp01"},"content":"            return taskList.markTask(index);","lastModifiedDate":"2024-02-12"},{"lineNumber":119,"author":{"gitId":"willowisp01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":120,"author":{"gitId":"willowisp01"},"content":"            String nanMessage \u003d UI.getNanMessage();","lastModifiedDate":"2024-02-12"},{"lineNumber":121,"author":{"gitId":"willowisp01"},"content":"            throw new ParseCommandException(nanMessage);","lastModifiedDate":"2024-02-12"},{"lineNumber":122,"author":{"gitId":"willowisp01"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":123,"author":{"gitId":"willowisp01"},"content":"            String missingParametersMessage \u003d UI.getMissingParameterMessage(Command.DELETE.toString());","lastModifiedDate":"2024-02-12"},{"lineNumber":124,"author":{"gitId":"willowisp01"},"content":"            throw new ParseCommandException(missingParametersMessage);","lastModifiedDate":"2024-02-12"},{"lineNumber":125,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":126,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":129,"author":{"gitId":"willowisp01"},"content":"     * Helper function for handleCommand.","lastModifiedDate":"2024-02-12"},{"lineNumber":130,"author":{"gitId":"willowisp01"},"content":"     * In specific, handles a delete command.","lastModifiedDate":"2024-02-12"},{"lineNumber":131,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":132,"author":{"gitId":"willowisp01"},"content":"     * @param input","lastModifiedDate":"2024-02-12"},{"lineNumber":133,"author":{"gitId":"willowisp01"},"content":"     * @return The result of executing the command.","lastModifiedDate":"2024-02-12"},{"lineNumber":134,"author":{"gitId":"willowisp01"},"content":"     * @throws TasklistException","lastModifiedDate":"2024-02-12"},{"lineNumber":135,"author":{"gitId":"willowisp01"},"content":"     * @throws ParseCommandException","lastModifiedDate":"2024-02-12"},{"lineNumber":136,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":137,"author":{"gitId":"willowisp01"},"content":"    private String handleDeleteCommand(String input) throws TasklistException, ParseCommandException {","lastModifiedDate":"2024-02-12"},{"lineNumber":138,"author":{"gitId":"willowisp01"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":139,"author":{"gitId":"willowisp01"},"content":"            int index \u003d Integer.parseInt(input.split(\" \")[1].strip()) - 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":140,"author":{"gitId":"willowisp01"},"content":"            return taskList.deleteTask(index);","lastModifiedDate":"2024-02-12"},{"lineNumber":141,"author":{"gitId":"willowisp01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":142,"author":{"gitId":"willowisp01"},"content":"            String nanMessage \u003d UI.getNanMessage();","lastModifiedDate":"2024-02-12"},{"lineNumber":143,"author":{"gitId":"willowisp01"},"content":"            throw new ParseCommandException(nanMessage);","lastModifiedDate":"2024-02-12"},{"lineNumber":144,"author":{"gitId":"willowisp01"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":145,"author":{"gitId":"willowisp01"},"content":"            String missingParametersMessage \u003d UI.getMissingParameterMessage(Command.DELETE.toString());","lastModifiedDate":"2024-02-12"},{"lineNumber":146,"author":{"gitId":"willowisp01"},"content":"            throw new ParseCommandException(missingParametersMessage);","lastModifiedDate":"2024-02-12"},{"lineNumber":147,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":148,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":150,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"willowisp01":150}},{"path":"src/main/java/luke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"import java.io.*;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"public class Storage implements Serializable {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"    private ArrayList\u003cTask\u003e history;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"    public Storage() {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"        history \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"     * Attempts to save history. (My reference: https://www.baeldung.com/java-serialization)","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"     * History is saved when exiting the program normally, by using \"bye\" command.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"willowisp01"},"content":"     * @param file File object to locate the save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"willowisp01"},"content":"     * @param taskList An ArrayList of Tasks, as obtained from our TaskList.","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"willowisp01"},"content":"    public void saveHistory(File file, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"willowisp01"},"content":"        updateHistory(taskList);","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"willowisp01"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"willowisp01"},"content":"            ObjectOutputStream outputStream \u003d new ObjectOutputStream(new FileOutputStream(file));","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"willowisp01"},"content":"            outputStream.writeObject(this);","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"willowisp01"},"content":"            outputStream.flush();","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"willowisp01"},"content":"            outputStream.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"willowisp01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"willowisp01"},"content":"            System.out.println(\"IO exception\");","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"willowisp01"},"content":"    public static File getHistoryFile() {","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"willowisp01"},"content":"        String workingDirectory \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"willowisp01"},"content":"        Path historyPath \u003d Paths.get(workingDirectory, \"data\", \"history.txt\");","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"willowisp01"},"content":"        File historyFile \u003d new File(String.valueOf(historyPath));","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"willowisp01"},"content":"        return historyFile;","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"willowisp01"},"content":"    public static Storage loadHistory() {","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"willowisp01"},"content":"        String workingDirectory \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"willowisp01"},"content":"        Path directoryPath \u003d Paths.get(workingDirectory,  \"data\");","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"willowisp01"},"content":"        Path historyPath \u003d Paths.get(workingDirectory, \"data\", \"history.txt\");","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"willowisp01"},"content":"        //create directory (if it does not already exist)","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"willowisp01"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"willowisp01"},"content":"            Files.createDirectory(directoryPath);","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"willowisp01"},"content":"        } catch (FileAlreadyExistsException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"willowisp01"},"content":"            //directory already exists.","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"willowisp01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"willowisp01"},"content":"            System.out.println(\"Failed to create directory\");","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"willowisp01"},"content":"        //create file (if it does not already exist)","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"willowisp01"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"willowisp01"},"content":"            Files.createFile(historyPath);","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"willowisp01"},"content":"        } catch (FileAlreadyExistsException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"willowisp01"},"content":"            //file already exists.","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"willowisp01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"willowisp01"},"content":"            //should (by right) never happen!","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"willowisp01"},"content":"            System.out.println(\"Failed to create file\");","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"willowisp01"},"content":"            return null;","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"willowisp01"},"content":"        //load the file if there is save data (reference: https://www.baeldung.com/java-serialization)","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"willowisp01"},"content":"        //otherwise, create a new History object.","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"willowisp01"},"content":"        Storage storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"willowisp01"},"content":"        File historyFile \u003d new File(String.valueOf(historyPath));","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"willowisp01"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"willowisp01"},"content":"            ObjectInputStream inputStream \u003d new ObjectInputStream(new FileInputStream(historyFile));","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"willowisp01"},"content":"            storage \u003d (Storage) inputStream.readObject();","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"willowisp01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"willowisp01"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"willowisp01"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"willowisp01"},"content":"            //should (by right) never happen!","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"willowisp01"},"content":"            System.out.println(\"Class not found\");","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"willowisp01"},"content":"            return null;","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":82,"author":{"gitId":"willowisp01"},"content":"        //Storage should either have been created or loaded","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"willowisp01"},"content":"        assert storage !\u003d null;","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"willowisp01"},"content":"        return storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"willowisp01"},"content":"     * Updates the history with the new given tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"willowisp01"},"content":"     * @param tasks The new arrayList of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"willowisp01"},"content":"    public void updateHistory(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"willowisp01"},"content":"        this.history \u003d tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"willowisp01"},"content":"    public ArrayList\u003cTask\u003e getHistory() {","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"willowisp01"},"content":"        return history;","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"willowisp01":100}},{"path":"src/main/java/luke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"public class Task implements Serializable {","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"    protected String name;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"     * Creates a task with the given name.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"     * @param name Name of task.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"    public Task(String name) {","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"    public String getName() {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"        return name;","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"willowisp01"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"willowisp01"},"content":"        return isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"willowisp01"},"content":"     * Marks this task as complete.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"willowisp01"},"content":"    public void complete() {","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"willowisp01"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"willowisp01"},"content":"     * Gives the full status of task. ([isDone] taskname)","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"willowisp01"},"content":"     * @return The status of task. ([isDone] taskname)","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"willowisp01"},"content":"    public String getFullStatus() {","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"willowisp01"},"content":"        String checkbox;","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"willowisp01"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"willowisp01"},"content":"            checkbox \u003d \"[X] \";","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"willowisp01"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"willowisp01"},"content":"            checkbox \u003d \"[ ] \";","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"willowisp01"},"content":"        return checkbox + name;","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"willowisp01"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"willowisp01"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"willowisp01"},"content":"        return name;","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"willowisp01":53}},{"path":"src/main/java/luke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"//for CURRENT tasks only.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"public class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"    //fetch tasks from history","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"        return tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"     * Adds task to tasklist.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"willowisp01"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"willowisp01"},"content":"     * @return Success message or error.","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"willowisp01"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"willowisp01"},"content":"        String returnMessage \u003d \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"willowisp01"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"willowisp01"},"content":"            tasks.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"willowisp01"},"content":"            returnMessage \u003d \"I helped you add task \u0027\" + task.getFullStatus() + \"\u0027. But do it yourself next time! Hmmph!\" + \"\\n\";","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"willowisp01"},"content":"        return returnMessage;","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"willowisp01"},"content":"     * Marks a task at index in the tasklist as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"willowisp01"},"content":"     * @param index Index of task to be marked as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"willowisp01"},"content":"     * @return The completed task (now marked as done).","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"willowisp01"},"content":"     * @throws TasklistException","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"willowisp01"},"content":"    public String markTask(int index) throws TasklistException {","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"willowisp01"},"content":"        String errorMessage;","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"willowisp01"},"content":"        String returnMessage;","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"willowisp01"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"willowisp01"},"content":"            tasks.get(index).complete();","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"willowisp01"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"willowisp01"},"content":"            errorMessage \u003d \"Jeez, you really ought to give me a number I can work with... got that?\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"willowisp01"},"content":"                    + \"[Item index exceeds history count]\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"willowisp01"},"content":"            throw new TasklistException(errorMessage);","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"willowisp01"},"content":"        returnMessage \u003d \"Good work, I guess.\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"willowisp01"},"content":"                + (index + 1) + \".\" + tasks.get(index).getFullStatus() + \"\\n\";","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"willowisp01"},"content":"        return returnMessage;","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"willowisp01"},"content":"     * Looks for a specified task in the tasklist using the given keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"willowisp01"},"content":"     * Prints them out, as well as their position in the list (index + 1), if any are found.","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"willowisp01"},"content":"     * @param keyword The keyword to search for a task.","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"willowisp01"},"content":"     * @return The tasks found.","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"willowisp01"},"content":"     * @throws TasklistException","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"willowisp01"},"content":"    public String findTask(String keyword) throws TasklistException {","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"willowisp01"},"content":"        String returnMessage \u003d \"Here... here you go!!!\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"willowisp01"},"content":"        String errorMessage \u003d returnMessage;","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"willowisp01"},"content":"        int num \u003d 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"willowisp01"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"willowisp01"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"willowisp01"},"content":"            String taskName \u003d task.getName();","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"willowisp01"},"content":"            if (taskName.contains(keyword)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"willowisp01"},"content":"                isFound \u003d true;","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"willowisp01"},"content":"                returnMessage +\u003d num + \". \" + task.getFullStatus() + \"\\n\";","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"willowisp01"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"willowisp01"},"content":"            num +\u003d 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"willowisp01"},"content":"        if (!isFound) {","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"willowisp01"},"content":"            errorMessage +\u003d \"[Nothing was found, however.]\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"willowisp01"},"content":"            throw new TasklistException(errorMessage);","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"willowisp01"},"content":"        return returnMessage;","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"willowisp01"},"content":"     * Prints a list of all current tasks and their statuses.","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"willowisp01"},"content":"     * @return A list of all tasks.","lastModifiedDate":"2024-02-18"},{"lineNumber":88,"author":{"gitId":"willowisp01"},"content":"     * @throws TasklistException","lastModifiedDate":"2024-02-18"},{"lineNumber":89,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"willowisp01"},"content":"    public String listTasks() throws TasklistException {","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"willowisp01"},"content":"        String returnMessage \u003d \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"willowisp01"},"content":"        int num \u003d 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"willowisp01"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"willowisp01"},"content":"            returnMessage \u003d \"Looks like you have way too much free time on your hands, huh.\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"willowisp01"},"content":"            + \"[No items in list]\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"willowisp01"},"content":"            throw new TasklistException(returnMessage);","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"willowisp01"},"content":"        for (Task s : tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"willowisp01"},"content":"            if (s.isDone()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"willowisp01"},"content":"                returnMessage +\u003d num + \".\" + s.getFullStatus() + \"\\n\";","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"willowisp01"},"content":"            } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"willowisp01"},"content":"                returnMessage +\u003d num + \".\" + s.getFullStatus() + \"\\n\";","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"willowisp01"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"willowisp01"},"content":"            num +\u003d 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"willowisp01"},"content":"        return returnMessage;","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"willowisp01"},"content":"     * Deletes a task at index in the tasklist.","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"willowisp01"},"content":"     * @param index Index of task to be deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"willowisp01"},"content":"     * @return Delete or error message.","lastModifiedDate":"2024-02-18"},{"lineNumber":114,"author":{"gitId":"willowisp01"},"content":"     * @throws TasklistException","lastModifiedDate":"2024-02-18"},{"lineNumber":115,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"willowisp01"},"content":"    public String deleteTask(int index) throws TasklistException {","lastModifiedDate":"2024-02-07"},{"lineNumber":117,"author":{"gitId":"willowisp01"},"content":"        String returnMessage;","lastModifiedDate":"2024-02-07"},{"lineNumber":118,"author":{"gitId":"willowisp01"},"content":"        String errorMessage;","lastModifiedDate":"2024-02-07"},{"lineNumber":119,"author":{"gitId":"willowisp01"},"content":"        String fullStatus;","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"willowisp01"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"willowisp01"},"content":"            fullStatus \u003d tasks.get(index).getFullStatus();","lastModifiedDate":"2024-02-12"},{"lineNumber":122,"author":{"gitId":"willowisp01"},"content":"            tasks.remove(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"willowisp01"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"willowisp01"},"content":"            errorMessage \u003d \"There\u0027s nothing there, dummy...\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":125,"author":{"gitId":"willowisp01"},"content":"                    + \"[Tried to remove non-existent event]\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":126,"author":{"gitId":"willowisp01"},"content":"            throw new TasklistException(errorMessage);","lastModifiedDate":"2024-02-07"},{"lineNumber":127,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"willowisp01"},"content":"        returnMessage \u003d \"Fine! If that\u0027s what you really want...\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":129,"author":{"gitId":"willowisp01"},"content":"                + \"[Removed \" + fullStatus + \"]\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":130,"author":{"gitId":"willowisp01"},"content":"        return returnMessage;","lastModifiedDate":"2024-02-07"},{"lineNumber":131,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":134,"author":{"gitId":"willowisp01"},"content":"     * Reminds the user of tasks they have yet to complete.","lastModifiedDate":"2024-02-18"},{"lineNumber":135,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":136,"author":{"gitId":"willowisp01"},"content":"     * @return The list of tasks a user has yet to complete.","lastModifiedDate":"2024-02-18"},{"lineNumber":137,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":138,"author":{"gitId":"willowisp01"},"content":"    public String remind() {","lastModifiedDate":"2024-02-12"},{"lineNumber":139,"author":{"gitId":"willowisp01"},"content":"        String returnMessage \u003d \"Get to it!\\n\";","lastModifiedDate":"2024-02-12"},{"lineNumber":140,"author":{"gitId":"willowisp01"},"content":"        int num \u003d 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":141,"author":{"gitId":"willowisp01"},"content":"        for (Task s : tasks) {","lastModifiedDate":"2024-02-12"},{"lineNumber":142,"author":{"gitId":"willowisp01"},"content":"            System.out.println(\"Task: \" + s.getFullStatus() +  s.isDone);","lastModifiedDate":"2024-02-12"},{"lineNumber":143,"author":{"gitId":"willowisp01"},"content":"            if (!s.isDone()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":144,"author":{"gitId":"willowisp01"},"content":"                returnMessage +\u003d num + \".\" + s.getFullStatus() + \"\\n\";","lastModifiedDate":"2024-02-12"},{"lineNumber":145,"author":{"gitId":"willowisp01"},"content":"                num +\u003d 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":146,"author":{"gitId":"willowisp01"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":147,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":148,"author":{"gitId":"willowisp01"},"content":"        if (num \u003d\u003d 1) { //no new tasks","lastModifiedDate":"2024-02-12"},{"lineNumber":149,"author":{"gitId":"willowisp01"},"content":"            returnMessage \u003d \"Looks like you have way too much free time on your hands, huh.\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":150,"author":{"gitId":"willowisp01"},"content":"                    + \"[Nothing left to do!]\\n\";","lastModifiedDate":"2024-02-12"},{"lineNumber":151,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":152,"author":{"gitId":"willowisp01"},"content":"        return returnMessage;","lastModifiedDate":"2024-02-12"},{"lineNumber":153,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":154,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":155,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"willowisp01":155}},{"path":"src/main/java/luke/TaskMaker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"public class TaskMaker {","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"    static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"    static final String todoString \u003d TaskType.TODO.toString();","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"    static final String deadlineString \u003d TaskType.DEADLINE.toString();","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"    static final String eventString \u003d TaskType.EVENT.toString();","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"     * Returns a Task given a string input by the user.","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"     * @param input String input given by user.","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"     * @return The task if the input is valid, else null.","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"     * @throws MakeTaskException","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"    public static Task makeTask(String input) throws MakeTaskException {","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"willowisp01"},"content":"        String trimmedLowercase \u003d input.trim().toLowerCase();","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"willowisp01"},"content":"        String taskType \u003d trimmedLowercase.split(\" \")[0];","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"willowisp01"},"content":"        String errorMessage;","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"willowisp01"},"content":"        if (taskType.equals(todoString)) {","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"willowisp01"},"content":"            return makeTodoTask(input, trimmedLowercase);","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"willowisp01"},"content":"        } else if (taskType.equals(deadlineString)) {","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"willowisp01"},"content":"            return makeDeadlineTask(input, trimmedLowercase);","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"willowisp01"},"content":"        } else if (taskType.equals(eventString)) {","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"willowisp01"},"content":"            return makeEventTask(input, trimmedLowercase);","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"willowisp01"},"content":"        } else {","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"willowisp01"},"content":"            errorMessage \u003d UI.getCommandNotFoundMessage();","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"willowisp01"},"content":"            throw new MakeTaskException(errorMessage);","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"willowisp01"},"content":"     * Makes a Todo task.","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"willowisp01"},"content":"     * @param input Original user input.","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"willowisp01"},"content":"     * @param processedInput Neatly processed user input.","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"willowisp01"},"content":"     * @return Todo task.","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"willowisp01"},"content":"     * @throws MakeTaskException","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"willowisp01"},"content":"    private static Task makeTodoTask(String input, String processedInput) throws MakeTaskException {","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"willowisp01"},"content":"        Task task \u003d new Todo(input.substring(todoString.length()).trim());","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"willowisp01"},"content":"        if (processedInput.split(\" \").length \u003c 2) {","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"willowisp01"},"content":"            String errorMessage \u003d \"You have eyes for a reason, don\u0027t you?\\n\" +","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"willowisp01"},"content":"                    \"[Missing todo description]\\n\";","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"willowisp01"},"content":"            throw new MakeTaskException(errorMessage);","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"willowisp01"},"content":"        return task;","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"willowisp01"},"content":"     * Makes a Deadline task.","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"willowisp01"},"content":"     * @param input Original user input.","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"willowisp01"},"content":"     * @param processedInput Neatly processed user input.","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"willowisp01"},"content":"     * @return Deadline task.","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"willowisp01"},"content":"     * @throws MakeTaskException","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"willowisp01"},"content":"    private static Task makeDeadlineTask(String input, String processedInput) throws MakeTaskException {","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"willowisp01"},"content":"        Task task;","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"willowisp01"},"content":"        String errorMessage;","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"willowisp01"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"willowisp01"},"content":"            String taskName \u003d input.split(\"/\")[0].trim().substring(deadlineString.length()).trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"willowisp01"},"content":"            LocalDate by \u003d LocalDate.parse(processedInput.split(\"/\")[1].replace(\"by\", \"\").trim(), formatter);","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"willowisp01"},"content":"            task \u003d new Deadline(taskName, by);","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"willowisp01"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"willowisp01"},"content":"            errorMessage \u003d UI.getMissingParameterMessage(deadlineString);","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"willowisp01"},"content":"            throw new MakeTaskException(errorMessage);","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"willowisp01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"willowisp01"},"content":"            errorMessage \u003d UI.getWrongDateFormatMessage();","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"willowisp01"},"content":"            throw new MakeTaskException(errorMessage);","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"willowisp01"},"content":"        return task;","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":80,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"willowisp01"},"content":"     * Makes an Event task.","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"willowisp01"},"content":"     * @param input Original user input.","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"willowisp01"},"content":"     * @param processedInput Neatly processed user input.","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"willowisp01"},"content":"     * @return An event task.","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"willowisp01"},"content":"     * @throws MakeTaskException","lastModifiedDate":"2024-02-18"},{"lineNumber":88,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":89,"author":{"gitId":"willowisp01"},"content":"    private static Task makeEventTask(String input, String processedInput) throws MakeTaskException {","lastModifiedDate":"2024-02-18"},{"lineNumber":90,"author":{"gitId":"willowisp01"},"content":"        Task task;","lastModifiedDate":"2024-02-18"},{"lineNumber":91,"author":{"gitId":"willowisp01"},"content":"        String errorMessage;","lastModifiedDate":"2024-02-18"},{"lineNumber":92,"author":{"gitId":"willowisp01"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"willowisp01"},"content":"            String taskName \u003d input.split(\"/\")[0].trim().substring(eventString.length()).trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"willowisp01"},"content":"            LocalDate start \u003d LocalDate.parse(processedInput.split(\"/\")[1].replace(\"from\", \"\").trim(), formatter);","lastModifiedDate":"2024-02-18"},{"lineNumber":95,"author":{"gitId":"willowisp01"},"content":"            LocalDate end \u003d LocalDate.parse(processedInput.split(\"/\")[2].replace(\"to\", \"\").trim(), formatter);","lastModifiedDate":"2024-02-18"},{"lineNumber":96,"author":{"gitId":"willowisp01"},"content":"            task \u003d new Event(taskName, start, end);","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"willowisp01"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"willowisp01"},"content":"            errorMessage \u003d \"/// I don\u0027t know when you are free... ///\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"willowisp01"},"content":"                    + \"[Missing event parameter(s)]\\n\";","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"willowisp01"},"content":"            throw new MakeTaskException(errorMessage);","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"willowisp01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"willowisp01"},"content":"            errorMessage \u003d UI.getWrongDateFormatMessage();","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"willowisp01"},"content":"            throw new MakeTaskException(errorMessage);","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"willowisp01"},"content":"        return task;","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"willowisp01":107}},{"path":"src/main/java/luke/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"public enum TaskType {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"    TODO (\"todo\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"    DEADLINE (\"deadline\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"    EVENT (\"event\");","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"    private final String nameString;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"    TaskType(String nameString) {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"        this.nameString \u003d nameString;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"        return nameString;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"willowisp01":17}},{"path":"src/main/java/luke/TasklistException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"public class TasklistException extends Exception {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"    TasklistException(String input) {","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"        super(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"willowisp01":7}},{"path":"src/main/java/luke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"     * Creates a Todo with the given name.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"     * @param name The name of the Todo.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"    public Todo(String name) {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"        super(name);","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"     * Returns the full status of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"     * @return The status of task. ([taskType][isDone] taskname)","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"    public String getFullStatus() { //TODO: add type of task later","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"        String checkbox;","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"willowisp01"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"willowisp01"},"content":"            checkbox \u003d \"[T][X] \";","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"willowisp01"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"willowisp01"},"content":"            checkbox \u003d \"[T][ ] \";","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"willowisp01"},"content":"        return checkbox + name;","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"willowisp01"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"willowisp01"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"willowisp01"},"content":"        Todo todo \u003d (Todo) obj;","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"willowisp01"},"content":"        if (todo.name.equals(this.name) \u0026\u0026 (todo.isDone \u003d\u003d this.isDone)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"willowisp01"},"content":"            return true;","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"willowisp01"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"willowisp01":38}},{"path":"src/main/java/luke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"public class UI {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"    //This class is in charge of any messages to be seen by the user.","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"    //Logo created using https://patorjk.com/software/taag/#p\u003ddisplay\u0026f\u003dVarsity\u0026t\u003dLuke","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"    private static final String LOGO \u003d \"  _____             __             \\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"            + \" |_   _|           [  |  _         \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"            + \"   | |     __   _   | | / ] .---.  \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"            + \"   | |   _[  | | |  | \u0027\u0027 \u003c / /__\\\\\\\\ \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"            + \"  _| |__/ || \\\\_/ |, | |`\\\\ \\\\| \\\\__., \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"            + \" |________|\u0027.__.\u0027_/[__|  \\\\_]\u0027.__.\u0027 \";","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"Don\u0027t be ridiculous!\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"            + \"It\u0027s... it\u0027s not like I want to see you again or anything!\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"            + \"[Press Enter to quit]\";","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"     * Prints out a greeting message and the Luke logo.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"    public static String greet() {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"willowisp01"},"content":"        String greeting \u003d \"I\u0027m\\n\" + LOGO + \"\\n\" + \"Don\u0027t expect to get too chummy with me, you got that?\\n\";","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"willowisp01"},"content":"        System.out.println(greeting);","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"willowisp01"},"content":"        return greeting;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"willowisp01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"willowisp01"},"content":"     * Prints out a goodbye message.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"willowisp01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"willowisp01"},"content":"    public static String bye() {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"willowisp01"},"content":"        System.out.println(GOODBYE_MESSAGE);","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"willowisp01"},"content":"        return GOODBYE_MESSAGE;","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"willowisp01"},"content":"    public static String getMissingParameterMessage(String param) {","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"willowisp01"},"content":"        return \"Hey! You forgot something! Be glad I\u0027m here to remind you.\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"willowisp01"},"content":"                + \"[Missing \"","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"willowisp01"},"content":"                + param","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"willowisp01"},"content":"                + \" parameter(s)]\\n\";","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"willowisp01"},"content":"    public static String getWrongDateFormatMessage() {","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"willowisp01"},"content":"        return \"Hey! What are you even talking about?!\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"willowisp01"},"content":"                + \"[Input date in format dd-mm-yyyy]\\n\";","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"willowisp01"},"content":"    public static String getNanMessage() {","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"willowisp01"},"content":"        return \"Not a number\";","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"willowisp01"},"content":"    public static String getCommandNotFoundMessage() {","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"willowisp01"},"content":"        return \"/// What on earth are you saying! ///\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"willowisp01"},"content":"                + \"[Command not found]\\n\";","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"willowisp01"},"content":"    ","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"willowisp01":55}},{"path":"src/main/resources/images/ImageSources.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"roblox.jpg from the game Roblox","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"ltg.jpg: unknown creator","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"willowisp01":2}},{"path":"src/test/java/luke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"    Parser parser \u003d new Parser(new Storage(), null);","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"    String correctMessageForTask \u003d \"I helped you add task \u0027[T][ ] Stuff\u0027. But do it yourself next time! Hmmph!\\n\";","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"    String correctMessageForDeadline \u003d \"I helped you add task \u0027[D][ ] Homework (by: 2001-08-27)\u0027. But do it yourself next time! Hmmph!\\n\";","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"    String correctMessageForEvent \u003d \"I helped you add task \u0027[E][ ] Holiday (from: 2001-08-27 to: 2001-08-28)\u0027. But do it yourself next time! Hmmph!\\n\";","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"    @Test","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"    public void makeTask_correctParams_returnTaskString() throws TasklistException, ParseCommandException {","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"        assertEquals(correctMessageForTask, parser.parseCommand(\"todo Stuff\"));","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"        assertEquals(correctMessageForDeadline, parser.parseCommand(\"deadline Homework / by 27-08-2001\"));","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"        assertEquals(correctMessageForEvent, parser.parseCommand(\"event Holiday / from 27-08-2001 / to 28-08-2001\"));","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"    @Test","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"    public void makeTask_weirdSpacing_returnTaskString() throws TasklistException, ParseCommandException {","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"        assertEquals(correctMessageForTask, parser.parseCommand(\"todo          Stuff\"));","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"willowisp01"},"content":"        assertEquals(correctMessageForDeadline, parser.parseCommand(\"deadline  Homework   /   by    27-08-2001\"  ));","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"willowisp01"},"content":"        assertEquals(correctMessageForEvent, parser.parseCommand(\"  event Holiday / from    27-08-2001 /  to 28-08-2001\"  ));","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"willowisp01"},"content":"    @Test","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"willowisp01"},"content":"    public void makeTask_unknownCommand_returnUnknownTaskString() throws TasklistException, ParseCommandException {","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"willowisp01"},"content":"        String unknownTaskString \u003d \"/// What on earth are you saying! ///\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"willowisp01"},"content":"                + \"[Command not found]\\n\";","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"willowisp01"},"content":"        assertEquals(unknownTaskString, parser.parseCommand(\"akjdijbakf\"));","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"willowisp01":32}},{"path":"src/test/java/luke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"    LocalDate date1 \u003d LocalDate.parse(\"27-08-2001\", formatter);","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"    LocalDate date2 \u003d LocalDate.parse(\"28-08-2001\", formatter);","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"    Task[] tasks \u003d {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"            new Todo(\"stuff\"),","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"            new Deadline(\"homework\", date1),","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"            new Event(\"holiday\", date1, date2)","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"    };","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"willowisp01"},"content":"    @Test","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"willowisp01"},"content":"    public void addTasks_validTasks_success() {","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"willowisp01"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"willowisp01"},"content":"        for (int i \u003d 0; i \u003c tasks.length; i++) {","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"willowisp01"},"content":"            taskList.addTask(tasks[i]);","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"willowisp01"},"content":"            assertEquals(tasks[i], taskList.getTasks().get(i));","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"willowisp01"},"content":"    @Test","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"willowisp01"},"content":"    public void addTasks_invalidTasks_failure() {","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"willowisp01"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"willowisp01"},"content":"        taskList.addTask(null);","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"willowisp01"},"content":"        assertEquals(0, taskList.getTasks().size());","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"willowisp01"},"content":"    @Test","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"willowisp01"},"content":"    public void markTask_validTasks_success() throws TasklistException {","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"willowisp01"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"willowisp01"},"content":"        for (int i \u003d 0; i \u003c tasks.length; i++) {","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"willowisp01"},"content":"            taskList.addTask(tasks[i]);","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"willowisp01"},"content":"            assertEquals(false, taskList.getTasks().get(i).isDone);","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"willowisp01"},"content":"        for (int i \u003d 0; i \u003c tasks.length; i++) {","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"willowisp01"},"content":"            taskList.markTask(i);","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"willowisp01"},"content":"            assertEquals(true, taskList.getTasks().get(i).isDone);","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"willowisp01"},"content":"    @Test","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"willowisp01"},"content":"    public void deleteTasks_deleteExistingTasks_success() throws TasklistException {","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"willowisp01"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"willowisp01"},"content":"        for (int i \u003d 0; i \u003c tasks.length; i++) {","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"willowisp01"},"content":"            taskList.addTask(tasks[i]);","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"willowisp01"},"content":"        for (int i \u003d tasks.length - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"willowisp01"},"content":"            taskList.deleteTask(i);","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"willowisp01"},"content":"            assertEquals(i, taskList.getTasks().size());","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"willowisp01":64}},{"path":"src/test/java/luke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"    //https://se-education.org/se-book/cppToJava/junit/basic/index.html for test naming ideas","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"    public void testFullStatus() {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"        Todo stuff \u003d new Todo(\"stuff\");","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"        Todo things \u003d new Todo(\"things\");","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"        assertEquals(stuff.getFullStatus(), \"[T][ ] stuff\");","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"        assertEquals(things.getFullStatus(), \"[T][ ] things\");","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"    public void markTasks() {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"        Todo stuff \u003d new Todo(\"stuff\");","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"willowisp01"},"content":"        Todo things \u003d new Todo(\"things\");","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"willowisp01"},"content":"        stuff.complete();","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"willowisp01"},"content":"        things.complete();","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"willowisp01"},"content":"        assertEquals(stuff.getFullStatus(), \"[T][X] stuff\");","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"willowisp01"},"content":"        assertEquals(things.getFullStatus(), \"[T][X] things\");","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"willowisp01":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"todo","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"deadline","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"event","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"quhd qudwduchu qiwucd","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"todo borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"deadline return book /by 27-08-2001","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"event project meeting /from 27-08-2001 /to 28-08-2001","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"event project meeting /from uewfihu i /to iudg9uh o","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"mark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"mark 4","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"delete 3","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"delete 2","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"delete 1","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"delete 0","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"willowisp01":21}},{"path":"text-ui-test/input_old.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"todo","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"deadline","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"event","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"todo borrow book","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"mark 1","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"mark 2","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"mark 3","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"mark 4","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"delete 3","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"delete 2","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"delete 1","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"delete 0","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"bye","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"willowisp01":20}},{"path":"text-ui-test/input_test_history.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"todo homework","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"bye","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"willowisp01":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"java -classpath ..\\bin luke.Luke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"willowisp01":1,"-":20}},{"path":"data/history.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"willowisp01":0}},{"path":"text-ui-test/data/history.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"willowisp01":0}}]
