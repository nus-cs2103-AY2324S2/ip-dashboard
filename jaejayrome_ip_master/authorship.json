[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"jaejayrome"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jaejayrome"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"jaejayrome"},"content":"javafx {","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"jaejayrome"},"content":"    version \u003d \"17\"","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"jaejayrome"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"jaejayrome"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"jaejayrome"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"jaejayrome"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"jaejayrome"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"jaejayrome"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"jaejayrome"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"jaejayrome"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"jaejayrome"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"jaejayrome"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"jaejayrome"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"jaejayrome"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"jaejayrome"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"jaejayrome"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"jaejayrome"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"jaejayrome"},"content":"    mainClass.set(\"pan.PanLauncher\")","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"jaejayrome"},"content":"    archiveBaseName \u003d \"pan\"","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"jaejayrome":22}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jaejayrome"},"content":"# Pan","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"jaejayrome"},"content":"Pan is a task assistant that helps you to manage and track your tasks, deadlines and events.","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"jaejayrome"},"content":"Pan packs a simple yet robust interface, ensuring a seamless user experience.","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"jaejayrome"},"content":"With Pan in your life, you can expect your daily productivity to double!","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"jaejayrome"},"content":"## Features","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"jaejayrome"},"content":"\u003e **Case Sensitivity**","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"jaejayrome"},"content":"\u003e Do note that the command keywords are case-sensitive!","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"jaejayrome"},"content":"\u003e For Tasks Descriptions, the case doesn\u0027t matter which means that you can enter it the way u want it to show in the window!","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"jaejayrome"},"content":"### 1. UI Responses","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"jaejayrome"},"content":"- **Hello by Pan**","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"jaejayrome"},"content":"- **Bye by Pan**","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"jaejayrome"},"content":"### Hello by Pan","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"jaejayrome"},"content":"Whenever you launch Pan, Pan would greet you!","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"jaejayrome"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"jaejayrome"},"content":"Hello! I\u0027m Pan","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"jaejayrome"},"content":"What can I do for you?","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"jaejayrome"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"jaejayrome"},"content":"### Bye by Pan","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"jaejayrome"},"content":"This is a command that would ask Pan to say **\"bye\"** to you.","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"jaejayrome"},"content":"Example format:","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"jaejayrome"},"content":"`bye`","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"jaejayrome"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"jaejayrome"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"jaejayrome"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"jaejayrome"},"content":"### 2. Manage Your Tasks","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"jaejayrome"},"content":"- **Add a Task**","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"jaejayrome"},"content":"- **List Tasks**","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"jaejayrome"},"content":"- **Mark Task**","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"jaejayrome"},"content":"- **Unmark Task**","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"jaejayrome"},"content":"- **Delete a Task**","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"jaejayrome"},"content":"- **Find a Task**","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"jaejayrome"},"content":"## Tutorial","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"jaejayrome"},"content":"###  Add a task","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"jaejayrome"},"content":"This comamnd would add a task of a given todo, deadline or event.","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"jaejayrome"},"content":"Example formats:","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"jaejayrome"},"content":"`todo description`","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"jaejayrome"},"content":"`deadline description /by dateBy`","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"jaejayrome"},"content":"`event description /from dateFrom /to dateTo`","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"jaejayrome"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"jaejayrome"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"jaejayrome"},"content":"...","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"jaejayrome"},"content":"Now you have (x) task(s) in the list.","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"jaejayrome"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"jaejayrome"},"content":"### `list` - View all your tasks that are currently within the task list","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"jaejayrome"},"content":"View from the window all the tasks that are currently inside the list alongside their corresponding dates (if any) and their completion status thus far.","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"jaejayrome"},"content":"Example on how to use this command:","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":66,"author":{"gitId":"jaejayrome"},"content":"`list`","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"jaejayrome"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"jaejayrome"},"content":"    [D][X] sleep (by: Dec 03 2024)","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"jaejayrome"},"content":"    [E][X] play (from: Jan 12 2024 to: Dec 02 2024)","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"jaejayrome"},"content":"    [E][X] study (from: Jan 01 2024 to: Dec 01 2024)","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"jaejayrome"},"content":"### `mark` - Mark a task","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"jaejayrome"},"content":"Mark a task as complete.","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"jaejayrome"},"content":"Example on how to use this command:","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"jaejayrome"},"content":"`mark index_number`","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"jaejayrome"},"content":"\u003e **Take Note**","lastModifiedDate":"2024-02-20"},{"lineNumber":83,"author":{"gitId":"jaejayrome"},"content":"\u003e ","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"jaejayrome"},"content":"\u003e Using the `list` command would allow you to know what is the index number of a given task.","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"jaejayrome"},"content":"\u003e For Example, if the tasklist have 1 task, we can only mark using the `index_number` **1**","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"jaejayrome"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"jaejayrome"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"jaejayrome"},"content":"    [T][X] some Todo task","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"jaejayrome"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"jaejayrome"},"content":"### `unmark`- Unmark a task","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"jaejayrome"},"content":"Unmark a task as incomplete.","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"jaejayrome"},"content":"Example on how to use this command:","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"jaejayrome"},"content":"`unmark index_number`","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"jaejayrome"},"content":"\u003e **Take Note**","lastModifiedDate":"2024-02-20"},{"lineNumber":100,"author":{"gitId":"jaejayrome"},"content":"\u003e ","lastModifiedDate":"2024-02-20"},{"lineNumber":101,"author":{"gitId":"jaejayrome"},"content":"\u003e Using the `list` command would allow you to know what is the index number of a given task.","lastModifiedDate":"2024-02-20"},{"lineNumber":102,"author":{"gitId":"jaejayrome"},"content":"\u003e For Example, if the tasklist have 1 task, we can only unmark using the `index_number` **1**","lastModifiedDate":"2024-02-20"},{"lineNumber":103,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":104,"author":{"gitId":"jaejayrome"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":105,"author":{"gitId":"jaejayrome"},"content":"OK, I\u0027ve unmarked this task:","lastModifiedDate":"2024-02-20"},{"lineNumber":106,"author":{"gitId":"jaejayrome"},"content":"    [T][] some Todo task","lastModifiedDate":"2024-02-20"},{"lineNumber":107,"author":{"gitId":"jaejayrome"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":108,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":109,"author":{"gitId":"jaejayrome"},"content":"### `delete` - Remove a task","lastModifiedDate":"2024-02-20"},{"lineNumber":110,"author":{"gitId":"jaejayrome"},"content":"Deletes a given task","lastModifiedDate":"2024-02-20"},{"lineNumber":111,"author":{"gitId":"jaejayrome"},"content":" ","lastModifiedDate":"2024-02-20"},{"lineNumber":112,"author":{"gitId":"jaejayrome"},"content":"Example on how to use this command:","lastModifiedDate":"2024-02-20"},{"lineNumber":113,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":114,"author":{"gitId":"jaejayrome"},"content":"`delete index_number`","lastModifiedDate":"2024-02-20"},{"lineNumber":115,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":116,"author":{"gitId":"jaejayrome"},"content":"\u003e **Take Note**","lastModifiedDate":"2024-02-20"},{"lineNumber":117,"author":{"gitId":"jaejayrome"},"content":"\u003e ","lastModifiedDate":"2024-02-20"},{"lineNumber":118,"author":{"gitId":"jaejayrome"},"content":"\u003e Using the `list` command would allow you to know what is the index number of a given task.","lastModifiedDate":"2024-02-20"},{"lineNumber":119,"author":{"gitId":"jaejayrome"},"content":"\u003e For Example, if the tasklist have 1 task, we can only delete using the `index_number` **1**","lastModifiedDate":"2024-02-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":122,"author":{"gitId":"jaejayrome"},"content":"Noted. I have removed this task:","lastModifiedDate":"2024-02-20"},{"lineNumber":123,"author":{"gitId":"jaejayrome"},"content":"    [T][X] some Todo task","lastModifiedDate":"2024-02-20"},{"lineNumber":124,"author":{"gitId":"jaejayrome"},"content":"Now you have (x) task in the list.","lastModifiedDate":"2024-02-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":127,"author":{"gitId":"jaejayrome"},"content":"### `find` - Search for a task using a keyword","lastModifiedDate":"2024-02-20"},{"lineNumber":128,"author":{"gitId":"jaejayrome"},"content":"Returns all tasks in the task list that matches the input keyword","lastModifiedDate":"2024-02-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":130,"author":{"gitId":"jaejayrome"},"content":"Example on how to use this command:","lastModifiedDate":"2024-02-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"jaejayrome"},"content":"`find keyword`","lastModifiedDate":"2024-02-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":134,"author":{"gitId":"jaejayrome"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":135,"author":{"gitId":"jaejayrome"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-02-20"},{"lineNumber":136,"author":{"gitId":"jaejayrome"},"content":"    [D][X] sleep (by: Dec 03 2024)","lastModifiedDate":"2024-02-20"},{"lineNumber":137,"author":{"gitId":"jaejayrome"},"content":"    [E][X] study (from: Jan 01 2024 to: Dec 01 2024)","lastModifiedDate":"2024-02-20"},{"lineNumber":138,"author":{"gitId":"jaejayrome"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":140,"author":{"gitId":"jaejayrome"},"content":"\u003e **Take Note**","lastModifiedDate":"2024-02-20"},{"lineNumber":141,"author":{"gitId":"jaejayrome"},"content":"\u003e ","lastModifiedDate":"2024-02-20"},{"lineNumber":142,"author":{"gitId":"jaejayrome"},"content":"\u003e When using the `find` command, Pan is case-sensitive.","lastModifiedDate":"2024-02-20"},{"lineNumber":143,"author":{"gitId":"jaejayrome"},"content":"\u003e In other words, the keyword of `S` would not be matched with a task that contains `s` character unless it contains `S` character.","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"-":26,"jaejayrome":117}},{"path":"src/main/java/pan/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaejayrome"},"content":"package pan;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jaejayrome"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"jaejayrome"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jaejayrome"},"content":"import pan.enums.TaskStatus;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"jaejayrome"},"content":"class Deadlines extends Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"jaejayrome"},"content":"    private LocalDate byDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"jaejayrome"},"content":"     * Constructs a Deadline instance.","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"jaejayrome"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"jaejayrome"},"content":"     * @param isDone The status of whether the deadline has been completed.","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"jaejayrome"},"content":"     * @param byDate The date at which the deadlien should have been completed by.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"jaejayrome"},"content":"    public Deadlines(String description, TaskStatus isDone, LocalDate byDate) {","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"jaejayrome"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"jaejayrome"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"jaejayrome"},"content":"     * Gets the byDate attribute of the event.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"jaejayrome"},"content":"     * @return Java LocalDate instance representing the corresponding date that","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"jaejayrome"},"content":"     *      this given deadline should have been completed by.","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"jaejayrome"},"content":"    public LocalDate getByDate() {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"jaejayrome"},"content":"        return this.byDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"jaejayrome"},"content":"     * Updates the byDate attribute of the event.","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"jaejayrome"},"content":"     * @param newByDate Updated byDate attribute of the event.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"jaejayrome"},"content":"    public void setByDate(LocalDate newByDate) {","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"jaejayrome"},"content":"        this.byDate \u003d newByDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"jaejayrome"},"content":"     * Converts the Deadline instance into its correpsonding string representation.","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"jaejayrome"},"content":"     * @return String that represents whether the corresponding Deadline has been comopleted","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"jaejayrome"},"content":"     *      as well as its corresponding date that it should have been completed by.","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"jaejayrome"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"jaejayrome"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"jaejayrome"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"jaejayrome"},"content":"            + this.byDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"jaejayrome"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jaejayrome":53}},{"path":"src/main/java/pan/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaejayrome"},"content":"package pan;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jaejayrome"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"jaejayrome"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"jaejayrome"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jaejayrome"},"content":" * Pan - Represents the Events Class for an Events instance","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jaejayrome"},"content":" * @author Jerome Goh","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jaejayrome"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"jaejayrome"},"content":"public class Events extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"jaejayrome"},"content":"    private LocalDate from;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"jaejayrome"},"content":"    private LocalDate to;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"jaejayrome"},"content":"     * Constructs an Event instance.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"jaejayrome"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"jaejayrome"},"content":"     * @param isDone The status of whether the event has been completed.","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"jaejayrome"},"content":"     * @param from   The start date time of the event.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"jaejayrome"},"content":"     * @param to The end date time of the event.","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"jaejayrome"},"content":"    public Events(String description, pan.enums.TaskStatus isDone, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"jaejayrome"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"jaejayrome"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"jaejayrome"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"jaejayrome"},"content":"     * Gets the From attribute of the event.","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"jaejayrome"},"content":"     * @return Java LocalDate instance for the start date time of the event.","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"jaejayrome"},"content":"    public LocalDate getFrom() {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"jaejayrome"},"content":"        return this.from;","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"jaejayrome"},"content":"     * Gets the To attribute of the event.","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"jaejayrome"},"content":"     * @return Java LocalDate instance for the end date time of the event.","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"jaejayrome"},"content":"    public LocalDate getTo() {","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"jaejayrome"},"content":"        return this.to;","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"jaejayrome"},"content":"     * Updates the From attribute of the event.","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"jaejayrome"},"content":"     * @param newFrom Updated From attribute of the event.","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"jaejayrome"},"content":"    public void setFrom(LocalDate newFrom) {","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"jaejayrome"},"content":"        this.from \u003d newFrom;","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"jaejayrome"},"content":"     * Updates the To attribute of the event.","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"jaejayrome"},"content":"     * @param newTo Updated To attribute of the event.","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"jaejayrome"},"content":"    public void setTo(LocalDate newTo) {","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"jaejayrome"},"content":"        this.to \u003d newTo;","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"jaejayrome"},"content":"     * Converts the Event instance into its correpsonding string representation.","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"jaejayrome"},"content":"     * @return String that represents whether the corresponding Event has been comopleted","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"jaejayrome"},"content":"     *      as well as its corresponding start and end date time.","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"jaejayrome"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"jaejayrome"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"jaejayrome"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"jaejayrome"},"content":"            + \" to: \" + this.to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"jaejayrome"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jaejayrome":76}},{"path":"src/main/java/pan/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaejayrome"},"content":"package pan;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jaejayrome"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"jaejayrome"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"jaejayrome"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"jaejayrome"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"jaejayrome"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"jaejayrome"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"jaejayrome"},"content":"import pan.controllers.MainWindow;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"jaejayrome"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"jaejayrome"},"content":" * Main - Represents the Main Class that stages the scene using FXML.","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"jaejayrome"},"content":" * @author Jerome Goh","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"jaejayrome"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"jaejayrome"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"jaejayrome"},"content":"    private Pan pan \u003d new Pan(new Ui(), new TaskList(new Storage()));","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"jaejayrome"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"jaejayrome"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"jaejayrome"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"jaejayrome"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"jaejayrome"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"jaejayrome"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"jaejayrome"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"jaejayrome"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setPan(pan);","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"jaejayrome"},"content":"            stage.show();","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"jaejayrome"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"jaejayrome"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"jaejayrome"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"jaejayrome"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"jaejayrome":33}},{"path":"src/main/java/pan/Pan.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaejayrome"},"content":"package pan;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jaejayrome"},"content":"import pan.enums.Commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"jaejayrome"},"content":"import pan.enums.TaskStatus;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"jaejayrome"},"content":"import pan.exceptions.InternalTestCases;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"jaejayrome"},"content":"import pan.exceptions.InvalidCommandException;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"jaejayrome"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jaejayrome"},"content":" * Parser - Encapsulates logic with I/O operations in the CLI","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"jaejayrome"},"content":" * @author Jerome Goh","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jaejayrome"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"jaejayrome"},"content":"public class Pan {","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"jaejayrome"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"jaejayrome"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"jaejayrome"},"content":"     * Constructs a Parser instance.","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"jaejayrome"},"content":"     * @param ui Ui instance that parser depends on.","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"jaejayrome"},"content":"     * @param taskList TaskList instance responsible for CRUD operations with chatbot\u0027s Tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"jaejayrome"},"content":"    public Pan(Ui ui, TaskList taskList) {","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"jaejayrome"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"jaejayrome"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"jaejayrome"},"content":"     * Represents the driver method to parse and validate user logic.","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"jaejayrome"},"content":"     * @param instruction The input instruction from the user.","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"jaejayrome"},"content":"    public String parseInput(String instruction) {","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"jaejayrome"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"jaejayrome"},"content":"            if (instruction.equals(\"list\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"jaejayrome"},"content":"                return taskList.list(taskList.getTasks());","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"jaejayrome"},"content":"            } else if (instruction.equals(Commands.BYE.name().toLowerCase())) {","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"jaejayrome"},"content":"                return ui.bye();","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"jaejayrome"},"content":"            } else if (instruction.matches(\"(mark) \\\\d+\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"jaejayrome"},"content":"                String index \u003d instruction.substring(4).trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"jaejayrome"},"content":"                return taskList.mark(Integer.parseInt(index));","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"jaejayrome"},"content":"            } else if (instruction.matches(\"(unmark) \\\\d+\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"jaejayrome"},"content":"                String index \u003d instruction.substring(6).trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"jaejayrome"},"content":"                return taskList.unmark(Integer.parseInt(index));","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"jaejayrome"},"content":"            } else if (instruction.matches(\"(todo)\\\\s(.+)\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"jaejayrome"},"content":"                String desc \u003d instruction.substring(4).trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"jaejayrome"},"content":"                ToDos todos \u003d new ToDos(desc, TaskStatus.INCOMPLETE);","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"jaejayrome"},"content":"                return taskList.add(todos);","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"jaejayrome"},"content":"            } else if (instruction.matches(\"(deadline)\\\\s(.+)\\\\s(/by)\\\\s(.+)\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"jaejayrome"},"content":"                String postfix \u003d instruction.substring(8).trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"jaejayrome"},"content":"                String desc \u003d postfix.split(\"/by\")[0].trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"jaejayrome"},"content":"                String byDate \u003d postfix.split(\"/by\")[1].trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"jaejayrome"},"content":"                Deadlines deadlines \u003d new Deadlines(desc, TaskStatus.INCOMPLETE, taskList.convertDate(byDate));","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"jaejayrome"},"content":"                return taskList.add(deadlines);","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"jaejayrome"},"content":"            } else if (instruction.matches(\"(event)\\\\s(.+)\\\\s(/from)\\\\s(.+)\\\\s(/to)\\\\s(.+)\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"jaejayrome"},"content":"                String postfix \u003d instruction.substring(5).trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"jaejayrome"},"content":"                String desc \u003d postfix.split(\"/from\")[0].trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"jaejayrome"},"content":"                String from \u003d postfix.split(\"/from\")[1].split(\"/to\")[0].trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"jaejayrome"},"content":"                String to \u003d postfix.split(\"/from\")[1].split(\"/to\")[1].trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"jaejayrome"},"content":"                Events events \u003d new Events(desc, TaskStatus.INCOMPLETE,","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"jaejayrome"},"content":"                    taskList.convertDate(from), taskList.convertDate(to));","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"jaejayrome"},"content":"                return taskList.add(events);","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"jaejayrome"},"content":"            } else if (instruction.matches(\"(delete) \\\\d+\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"jaejayrome"},"content":"                String index \u003d instruction.substring(6).trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"jaejayrome"},"content":"                return taskList.delete(Integer.parseInt(index));","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"jaejayrome"},"content":"            } else if (instruction.matches(\"\\\\bfind\\\\s(.+)\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"jaejayrome"},"content":"                String searchKeyword \u003d instruction.substring(4).trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"jaejayrome"},"content":"                return taskList.find(searchKeyword);","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"jaejayrome"},"content":"            } else if (instruction.equals(\"sort\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"jaejayrome"},"content":"                return taskList.sort();","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"jaejayrome"},"content":"            } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"jaejayrome"},"content":"                // catch other test cases","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"jaejayrome"},"content":"                InternalTestCases.testMissingParameters(instruction);","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"jaejayrome"},"content":"                // if exception is not caught it must be an invalid command","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"jaejayrome"},"content":"                throw new InvalidCommandException(instruction);","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"jaejayrome"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"jaejayrome"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"jaejayrome"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"jaejayrome"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"jaejayrome"},"content":"    public String sayHi() {","lastModifiedDate":"2024-02-06"},{"lineNumber":82,"author":{"gitId":"jaejayrome"},"content":"        return this.ui.hello();","lastModifiedDate":"2024-02-06"},{"lineNumber":83,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":84,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":85,"author":{"gitId":"jaejayrome"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-06"},{"lineNumber":86,"author":{"gitId":"jaejayrome"},"content":"        return \"Pan replied: \" + input;","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"jaejayrome"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jaejayrome":89}},{"path":"src/main/java/pan/PanLauncher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaejayrome"},"content":"package pan;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jaejayrome"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"jaejayrome"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"jaejayrome"},"content":" * PanLauncher - Represents the PanLauncher Class that uses the Application instance to target the Main Class.","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"jaejayrome"},"content":" * @author Jerome Goh","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"jaejayrome"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"jaejayrome"},"content":"public class PanLauncher {","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"jaejayrome"},"content":"     * Main Entrypoint into the Pan application.","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"jaejayrome"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"jaejayrome"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"jaejayrome"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"jaejayrome":16}},{"path":"src/main/java/pan/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaejayrome"},"content":"package pan;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jaejayrome"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"jaejayrome"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"jaejayrome"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"jaejayrome"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"jaejayrome"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"jaejayrome"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"jaejayrome"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"jaejayrome"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"jaejayrome"},"content":"import java.util.List;","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"jaejayrome"},"content":"import pan.enums.TaskStatus;","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"jaejayrome"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"jaejayrome"},"content":" * Storage - Represents the Storage Class that handles read and write operations","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"jaejayrome"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"jaejayrome"},"content":" * @author Jerome Goh","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"jaejayrome"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"jaejayrome"},"content":"public class Storage {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"jaejayrome"},"content":"    public Storage() {","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"jaejayrome"},"content":"     * Persists the state of the tasks into a .txt file through overwriting the file","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"jaejayrome"},"content":"     * at every function call.","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"jaejayrome"},"content":"     * @param tasks the list of tasks to take reference from when program tries to save it to a .txt file.","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"jaejayrome"},"content":"    public void save(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"jaejayrome"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"jaejayrome"},"content":"            String filePath \u003d \"./src/main/java/pan/output/pan.txt\";","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"jaejayrome"},"content":"            File outputFile \u003d new File(filePath);","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"jaejayrome"},"content":"            FileWriter writer \u003d new FileWriter(outputFile, false);","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"jaejayrome"},"content":"            // attempts to create the new file","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"jaejayrome"},"content":"            outputFile.createNewFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"jaejayrome"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"jaejayrome"},"content":"            tasks.stream().forEach(task -\u003e sb.append(task.toString() + \"\\n\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"jaejayrome"},"content":"            writer.write(sb.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"jaejayrome"},"content":"            writer.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"jaejayrome"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"jaejayrome"},"content":"            exception.printStackTrace();","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"jaejayrome"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"jaejayrome"},"content":"     * Updates the completion status of a given task within the Task List to completed.","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"jaejayrome"},"content":"     * @return list of Tasks instances that used to set the intitial state of the task list.","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"jaejayrome"},"content":"    public List\u003cTask\u003e readList() {","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"jaejayrome"},"content":"        List\u003cTask\u003e newList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"jaejayrome"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"jaejayrome"},"content":"            String filePath \u003d \"./src/main/java/pan/output/pan.txt\";","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"jaejayrome"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"jaejayrome"},"content":"            String taskString \u003d bufferedReader.readLine();","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"jaejayrome"},"content":"            while (taskString !\u003d null) {","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"jaejayrome"},"content":"                newList.add(parseCommand(taskString));","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"jaejayrome"},"content":"                taskString \u003d bufferedReader.readLine();","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"jaejayrome"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"jaejayrome"},"content":"            bufferedReader.close();","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"jaejayrome"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"jaejayrome"},"content":"            exception.printStackTrace();","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"jaejayrome"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"jaejayrome"},"content":"        return newList;","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"jaejayrome"},"content":"     * Updates the completion status of a given task within the Task List to completed.","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"jaejayrome"},"content":"     * @param commandLine","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"jaejayrome"},"content":"     * @return Task instance that represents the command of a single line within the .txt file.","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"jaejayrome"},"content":"    public Task parseCommand(String commandLine) {","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"jaejayrome"},"content":"        String baseString \u003d commandLine.substring(7);","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"jaejayrome"},"content":"        String commandDescription \u003d baseString.split(\" \")[0];","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"jaejayrome"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"jaejayrome"},"content":"        TaskStatus completionStatus \u003d TaskStatus.INCOMPLETE;","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"jaejayrome"},"content":"        if (commandLine.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"jaejayrome"},"content":"            completionStatus \u003d TaskStatus.COMPLETE;","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"jaejayrome"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"jaejayrome"},"content":"        switch (commandLine.charAt(1)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":83,"author":{"gitId":"jaejayrome"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"jaejayrome"},"content":"            ToDos todo \u003d new ToDos(commandDescription, completionStatus);","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"jaejayrome"},"content":"            return todo;","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"jaejayrome"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"jaejayrome"},"content":"            LocalDate by \u003d LocalDate.parse(","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"jaejayrome"},"content":"                baseString.substring(baseString.indexOf(\":\") + 1, baseString.indexOf(\")\")).trim(), formatter);","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"jaejayrome"},"content":"            Deadlines deadline \u003d new Deadlines(commandDescription, completionStatus, by);","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"jaejayrome"},"content":"            return deadline;","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"jaejayrome"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"jaejayrome"},"content":"            int fromIndex \u003d baseString.indexOf(\"from:\") + 5;","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"jaejayrome"},"content":"            int toIndex \u003d baseString.indexOf(\"to:\") - 1;","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"jaejayrome"},"content":"            String fromDateString \u003d baseString.substring(fromIndex, toIndex).trim();","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"jaejayrome"},"content":"            int endIndex \u003d baseString.indexOf(\")\", toIndex + 3);","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"jaejayrome"},"content":"            String toDateString \u003d baseString.substring(toIndex + 4, endIndex).trim();","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"jaejayrome"},"content":"            LocalDate fromDate \u003d LocalDate.parse(fromDateString, formatter);","lastModifiedDate":"2024-02-20"},{"lineNumber":100,"author":{"gitId":"jaejayrome"},"content":"            LocalDate toDate \u003d LocalDate.parse(toDateString, formatter);","lastModifiedDate":"2024-02-20"},{"lineNumber":101,"author":{"gitId":"jaejayrome"},"content":"            Events event \u003d new Events(commandDescription, completionStatus, fromDate, toDate);","lastModifiedDate":"2024-02-20"},{"lineNumber":102,"author":{"gitId":"jaejayrome"},"content":"            return event;","lastModifiedDate":"2024-02-20"},{"lineNumber":103,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":104,"author":{"gitId":"jaejayrome"},"content":"        default:","lastModifiedDate":"2024-02-20"},{"lineNumber":105,"author":{"gitId":"jaejayrome"},"content":"            return null;","lastModifiedDate":"2024-02-20"},{"lineNumber":106,"author":{"gitId":"jaejayrome"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":107,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":108,"author":{"gitId":"jaejayrome"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jaejayrome":108}},{"path":"src/main/java/pan/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaejayrome"},"content":"package pan;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jaejayrome"},"content":"import pan.enums.TaskStatus;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"jaejayrome"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jaejayrome"},"content":" * Task - Represents the Task class for a Task instance","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jaejayrome"},"content":" * @author Jerome Goh","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jaejayrome"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jaejayrome"},"content":"public class Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"jaejayrome"},"content":"    private String description;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"jaejayrome"},"content":"    private TaskStatus isDone;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"jaejayrome"},"content":"     * Constructs a Task instance.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"jaejayrome"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"jaejayrome"},"content":"     * @param isDone The status of whether the task has been completed.","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"jaejayrome"},"content":"    public Task(String description, TaskStatus isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"jaejayrome"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"jaejayrome"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"jaejayrome"},"content":"     * Converts the Event instance into its correpsonding string representation.","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"jaejayrome"},"content":"     * @return String that represents whether the corresponding Task has been comopleted.","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"jaejayrome"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"jaejayrome"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"jaejayrome"},"content":"        return this.isDone.name().equals(\"COMPLETE\") ? \"[X] \" + this.description : \"[ ] \" + this.description;","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"jaejayrome"},"content":"     * Gets the description attribute of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"jaejayrome"},"content":"     * @return String representing the description or body of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"jaejayrome"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"jaejayrome"},"content":"        return this.description;","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"jaejayrome"},"content":"     * Gets the isDone attribute of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"jaejayrome"},"content":"     * @return TaskStatus Enum that reflects whether the task status has been completed or not.","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"jaejayrome"},"content":"    public TaskStatus getIsDone() {","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"jaejayrome"},"content":"        return this.isDone;","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"jaejayrome"},"content":"     * Updates the description attribute of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"jaejayrome"},"content":"     * @param newDescription Updated description attribute of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"jaejayrome"},"content":"    public void setDescription(String newDescription) {","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"jaejayrome"},"content":"        this.description \u003d newDescription;","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"jaejayrome"},"content":"     * Updates the isDone attribute of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"jaejayrome"},"content":"     * @param newIsDone Updated isDone attribute of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"jaejayrome"},"content":"    public void setIsDone(TaskStatus newIsDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"jaejayrome"},"content":"        this.isDone \u003d newIsDone;","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"jaejayrome"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jaejayrome":69}},{"path":"src/main/java/pan/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaejayrome"},"content":"package pan;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jaejayrome"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"jaejayrome"},"content":"import java.util.List;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"jaejayrome"},"content":"import pan.enums.TaskStatus;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"jaejayrome"},"content":"import pan.exceptions.TaskIndexException;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"jaejayrome"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"jaejayrome"},"content":" * TaskList - Represents the TaskList Class that handles CRUD operations to the TaskList","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"jaejayrome"},"content":" * @author Jerome Goh","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"jaejayrome"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"jaejayrome"},"content":"public class TaskList {","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"jaejayrome"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"jaejayrome"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"jaejayrome"},"content":"     * Constructs a TaskList instance.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"jaejayrome"},"content":"     * @param storage Storage instance that would handle the writing of the state of taskList to a .txt file.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"jaejayrome"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"jaejayrome"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"jaejayrome"},"content":"        this.tasks \u003d storage.readList();","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"jaejayrome"},"content":"     * Gets the tasks attribute of the TaskList instance.","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"jaejayrome"},"content":"     * @return List containing Task instances that have beena added by the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"jaejayrome"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"jaejayrome"},"content":"        return tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"jaejayrome"},"content":"     * Adds a new task to the Task List.","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"jaejayrome"},"content":"     * @param instruction New Task Instance that the user wants to add to the Task List.","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"jaejayrome"},"content":"    public String add(Task instruction) {","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"jaejayrome"},"content":"        tasks.add(instruction);","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"jaejayrome"},"content":"        System.out.println();","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"jaejayrome"},"content":"        this.storage.save(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"jaejayrome"},"content":"        assert tasks.size() \u003e\u003d 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"jaejayrome"},"content":"        return \"Got it. I\u0027ve added this task:\\n\\t\" + instruction.toString()","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"jaejayrome"},"content":"            + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"jaejayrome"},"content":"     * Updates the completion status of a given task within the Task List to completed.","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"jaejayrome"},"content":"     * @param index Numeric Index of the Task\u0027s position within a Task List.","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"jaejayrome"},"content":"     * @throws TaskIndexException Occurs whenever the Index provided is out of bounds or do not exist.","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"jaejayrome"},"content":"    public String mark(int index) throws TaskIndexException {","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"jaejayrome"},"content":"        if (index \u003e tasks.size() || index \u003c 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"jaejayrome"},"content":"            throw new TaskIndexException(\"You have entered an invalid index!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"jaejayrome"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"jaejayrome"},"content":"            Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"jaejayrome"},"content":"            task.setIsDone(TaskStatus.COMPLETE);","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"jaejayrome"},"content":"            this.storage.save(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"jaejayrome"},"content":"            assert task.getIsDone() \u003d\u003d TaskStatus.COMPLETE;","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"jaejayrome"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n\\t\" + task.toString();","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"jaejayrome"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"jaejayrome"},"content":"     * Updates the completion status of a given task within the Task List to incomplete.","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"jaejayrome"},"content":"     * @param index Numeric Index of the Task\u0027s position within a Task List.","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"jaejayrome"},"content":"     * @throws TaskIndexException Occurs whenever the Index provided is out of bounds or do not exist.","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"jaejayrome"},"content":"    public String unmark(int index) throws TaskIndexException {","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"jaejayrome"},"content":"        if (index \u003e tasks.size()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"jaejayrome"},"content":"            throw new TaskIndexException(\"You have entered an invalid index!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"jaejayrome"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"jaejayrome"},"content":"            Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"jaejayrome"},"content":"            task.setIsDone(TaskStatus.INCOMPLETE);","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"jaejayrome"},"content":"            assert task.getIsDone() \u003d\u003d TaskStatus.INCOMPLETE;","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"jaejayrome"},"content":"            this.storage.save(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"jaejayrome"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\\n\\t\" + task.toString();","lastModifiedDate":"2024-02-06"},{"lineNumber":86,"author":{"gitId":"jaejayrome"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"jaejayrome"},"content":"     * Deletes a given task within the Task List.","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"jaejayrome"},"content":"     * @param index Numeric Index of the Task\u0027s position within a Task List.","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"jaejayrome"},"content":"     * @throws TaskIndexException Occurs whenever the Index provided is out of bounds or do not exist.","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"jaejayrome"},"content":"    public String delete(int index)throws TaskIndexException {","lastModifiedDate":"2024-02-06"},{"lineNumber":96,"author":{"gitId":"jaejayrome"},"content":"        if (index \u003e tasks.size()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"jaejayrome"},"content":"            throw new TaskIndexException(\"You have entered an invalid index!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"jaejayrome"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"jaejayrome"},"content":"            Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"jaejayrome"},"content":"            tasks.remove(index - 1);","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"jaejayrome"},"content":"            this.storage.save(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"jaejayrome"},"content":"            return \"Noted. I\u0027ve removed this task:\\n\\t\" + task.toString()","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"jaejayrome"},"content":"                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-20"},{"lineNumber":104,"author":{"gitId":"jaejayrome"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"jaejayrome"},"content":"     * Prints out the tasks within a Task List to the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":110,"author":{"gitId":"jaejayrome"},"content":"     * @return String output representing all the tasks in the list.","lastModifiedDate":"2024-02-20"},{"lineNumber":111,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"jaejayrome"},"content":"    public String list(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-12"},{"lineNumber":113,"author":{"gitId":"jaejayrome"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-06"},{"lineNumber":114,"author":{"gitId":"jaejayrome"},"content":"        stringBuilder.append(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-06"},{"lineNumber":115,"author":{"gitId":"jaejayrome"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":116,"author":{"gitId":"jaejayrome"},"content":"            stringBuilder.append(\"\\n\\t\" + (i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":117,"author":{"gitId":"jaejayrome"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"jaejayrome"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2024-02-06"},{"lineNumber":119,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":120,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"jaejayrome"},"content":"     * Finds and prints out the tasks that matches the user\u0027s search keyword.","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"jaejayrome"},"content":"     * @param searchKeyword String representation of the keyword that has been entered by the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"jaejayrome"},"content":"     * @return String output representing all the matched tasks in the list.","lastModifiedDate":"2024-02-20"},{"lineNumber":126,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"jaejayrome"},"content":"    public String find(String searchKeyword) {","lastModifiedDate":"2024-02-06"},{"lineNumber":128,"author":{"gitId":"jaejayrome"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-06"},{"lineNumber":129,"author":{"gitId":"jaejayrome"},"content":"        stringBuilder.append(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-06"},{"lineNumber":130,"author":{"gitId":"jaejayrome"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"jaejayrome"},"content":"            if (tasks.get(i).getDescription().contains(searchKeyword)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"jaejayrome"},"content":"                stringBuilder.append(\"\\n\\t\" + (i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2024-02-20"},{"lineNumber":133,"author":{"gitId":"jaejayrome"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"jaejayrome"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"jaejayrome"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2024-02-06"},{"lineNumber":136,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"jaejayrome"},"content":"     * Converts the date into a Java DateTime instance.","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"jaejayrome"},"content":"     * @param dateStr String representation of a date that has been keyed in by the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":142,"author":{"gitId":"jaejayrome"},"content":"     * @return LocalDate instance representing the Date, Month and Year that the user has entered.","lastModifiedDate":"2024-01-30"},{"lineNumber":143,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":144,"author":{"gitId":"jaejayrome"},"content":"    public LocalDate convertDate(String dateStr) {","lastModifiedDate":"2024-01-28"},{"lineNumber":145,"author":{"gitId":"jaejayrome"},"content":"        // assuming that byDate is in yyyy-mm-dd","lastModifiedDate":"2024-01-28"},{"lineNumber":146,"author":{"gitId":"jaejayrome"},"content":"        String[] dateArr \u003d dateStr.split(\"-\");","lastModifiedDate":"2024-01-28"},{"lineNumber":147,"author":{"gitId":"jaejayrome"},"content":"        return LocalDate.of(Integer.parseInt(dateArr[0]), Integer.parseInt(dateArr[1]), Integer.parseInt(dateArr[2]));","lastModifiedDate":"2024-01-28"},{"lineNumber":148,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":149,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":150,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":151,"author":{"gitId":"jaejayrome"},"content":"     * Sorts the list in accordance to lexicographical order for each task\u0027s description.","lastModifiedDate":"2024-02-12"},{"lineNumber":152,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":153,"author":{"gitId":"jaejayrome"},"content":"     * @return String representation of a sorted task list.","lastModifiedDate":"2024-02-12"},{"lineNumber":154,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":155,"author":{"gitId":"jaejayrome"},"content":"    public String sort() {","lastModifiedDate":"2024-02-12"},{"lineNumber":156,"author":{"gitId":"jaejayrome"},"content":"        List\u003cTask\u003e unsortedList \u003d this.tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":157,"author":{"gitId":"jaejayrome"},"content":"        unsortedList.sort((x, y) -\u003e x.getDescription().compareTo(y.getDescription()));","lastModifiedDate":"2024-02-12"},{"lineNumber":158,"author":{"gitId":"jaejayrome"},"content":"        return this.list(unsortedList);","lastModifiedDate":"2024-02-12"},{"lineNumber":159,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":160,"author":{"gitId":"jaejayrome"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jaejayrome":160}},{"path":"src/main/java/pan/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaejayrome"},"content":"package pan;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jaejayrome"},"content":"import pan.enums.TaskStatus;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"jaejayrome"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jaejayrome"},"content":" * Pan - Represents the ToDos Class for a ToDos instance","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jaejayrome"},"content":" * @author Jerome Goh","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jaejayrome"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jaejayrome"},"content":"class ToDos extends Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"jaejayrome"},"content":"     * Constructs a ToDos instance.","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"jaejayrome"},"content":"     * @param description The description of the todos.","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"jaejayrome"},"content":"     * @param isDone The status of whether the todos has been completed.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"jaejayrome"},"content":"    public ToDos(String description, TaskStatus isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"jaejayrome"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"jaejayrome"},"content":"     * Converts the ToDos instance into its correpsonding string representation.","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"jaejayrome"},"content":"     * @return String that represents whether the corresponding ToDos has been comopleted.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"jaejayrome"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"jaejayrome"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"jaejayrome"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"jaejayrome"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jaejayrome":29}},{"path":"src/main/java/pan/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaejayrome"},"content":"package pan;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jaejayrome"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"jaejayrome"},"content":" * Ui - Represents the Ui Class that manages the Ui String operations for the user such as hi and bye.","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"jaejayrome"},"content":" * @author Jerome Goh","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"jaejayrome"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"jaejayrome"},"content":"public class Ui {","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"jaejayrome"},"content":"     * Creates an Ui instance.","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"jaejayrome"},"content":"    public Ui() {}","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"jaejayrome"},"content":"     * Prints out the Welcome Message to the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"jaejayrome"},"content":"    public String hello() {","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"jaejayrome"},"content":"        return \"Hello! I\u0027m Pan\\nWhat can I do for you?\";","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"jaejayrome"},"content":"     * Prints out the Farewell Message to the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"jaejayrome"},"content":"    public String bye() {","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"jaejayrome"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"jaejayrome"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jaejayrome":26}},{"path":"src/main/java/pan/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaejayrome"},"content":"package pan.controllers;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jaejayrome"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"jaejayrome"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"jaejayrome"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"jaejayrome"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"jaejayrome"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"jaejayrome"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"jaejayrome"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"jaejayrome"},"content":"import pan.Pan;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"jaejayrome"},"content":"import pan.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"jaejayrome"},"content":"import pan.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"jaejayrome"},"content":"import pan.Ui;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"jaejayrome"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"jaejayrome"},"content":" * MainWindow - Represents the MainWindow Class responsible with loading individual FXML elements.","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"jaejayrome"},"content":" * @author Jerome Goh","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"jaejayrome"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"jaejayrome"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"jaejayrome"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"jaejayrome"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"jaejayrome"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"jaejayrome"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"jaejayrome"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"jaejayrome"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"jaejayrome"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"jaejayrome"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"jaejayrome"},"content":"    private Pan pan \u003d new Pan(new Ui(), new TaskList(new Storage()));","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"jaejayrome"},"content":"    private Image smurf \u003d new Image(this.getClass().getResourceAsStream(\"/images/clumsy.jpeg\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"jaejayrome"},"content":"    private Image panda \u003d new Image(this.getClass().getResourceAsStream(\"/images/pan.png\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"jaejayrome"},"content":"     * Initalises the scrollPane and dialogContainer to render the initial Dialog Box.","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"jaejayrome"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"jaejayrome"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"jaejayrome"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"jaejayrome"},"content":"        dialogContainer.getChildren().add(PanDialogBox.getPandaDialog(this.pan.sayHi(), panda));","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"jaejayrome"},"content":"     * Updates the Main Pan Instance.","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"jaejayrome"},"content":"    public void setPan(Pan p) {","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"jaejayrome"},"content":"        pan \u003d p;","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"jaejayrome"},"content":"     * Processes the user input by ensuring that dialogue is retained is being passed to the PanDialog.","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"jaejayrome"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"jaejayrome"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"jaejayrome"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"jaejayrome"},"content":"        String response \u003d pan.parseInput(input);","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"jaejayrome"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"jaejayrome"},"content":"            PanDialogBox.getUserDialog(input, smurf),","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"jaejayrome"},"content":"            PanDialogBox.getPandaDialog(response, panda));","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"jaejayrome"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"jaejayrome"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"jaejayrome":62}},{"path":"src/main/java/pan/controllers/PanDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaejayrome"},"content":"package pan.controllers;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jaejayrome"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"jaejayrome"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"jaejayrome"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"jaejayrome"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"jaejayrome"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"jaejayrome"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"jaejayrome"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"jaejayrome"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"jaejayrome"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"jaejayrome"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"jaejayrome"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"jaejayrome"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"jaejayrome"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"jaejayrome"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"jaejayrome"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"jaejayrome"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"jaejayrome"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"jaejayrome"},"content":"public class PanDialogBox extends HBox {","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"jaejayrome"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"jaejayrome"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"jaejayrome"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"jaejayrome"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"jaejayrome"},"content":"    private PanDialogBox(String text, Image img) {","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"jaejayrome"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"jaejayrome"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/PanDialogBox.fxml\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"jaejayrome"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"jaejayrome"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"jaejayrome"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"jaejayrome"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"jaejayrome"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"jaejayrome"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"jaejayrome"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"jaejayrome"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"jaejayrome"},"content":"    private void flip() {","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"jaejayrome"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"jaejayrome"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"jaejayrome"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"jaejayrome"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"jaejayrome"},"content":"    public static PanDialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"jaejayrome"},"content":"        return new PanDialogBox(text, img);","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"jaejayrome"},"content":"    public static PanDialogBox getPandaDialog(String text, Image img) {","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"jaejayrome"},"content":"        var db \u003d new PanDialogBox(text, img);","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"jaejayrome"},"content":"        db.flip();","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"jaejayrome"},"content":"        return db;","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"jaejayrome"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"jaejayrome":58}},{"path":"src/main/java/pan/enums/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaejayrome"},"content":"package pan.enums;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jaejayrome"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jaejayrome"},"content":" * Commands - A custom enum representing the different commands for Pan","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jaejayrome"},"content":" * @author Jerome Goh","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jaejayrome"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jaejayrome"},"content":"public enum Commands {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"jaejayrome"},"content":"    BYE, TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, FIND","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jaejayrome"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jaejayrome":9}},{"path":"src/main/java/pan/enums/TaskStatus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaejayrome"},"content":"package pan.enums;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jaejayrome"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jaejayrome"},"content":" * TaskStatus - A custom enum representing the different statuses for a Task","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jaejayrome"},"content":" * @author Jerome Goh","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jaejayrome"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jaejayrome"},"content":"public enum TaskStatus {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"jaejayrome"},"content":"    COMPLETE, INCOMPLETE","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"jaejayrome"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jaejayrome":9}},{"path":"src/main/java/pan/exceptions/InternalTestCases.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaejayrome"},"content":"package pan.exceptions;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jaejayrome"},"content":"import pan.enums.Commands;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"jaejayrome"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jaejayrome"},"content":" * InternalTestCases - Encapsulates custom test cases that is in charge of input validation failure","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jaejayrome"},"content":" * @author Jerome Goh","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jaejayrome"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jaejayrome"},"content":"public class InternalTestCases {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"jaejayrome"},"content":"     * Checks whether a given instruction input by the user violates any missing information.","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"jaejayrome"},"content":"     * @param instruction String input read in by the user","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"jaejayrome"},"content":"     * @throws MissingParameterException Occurs whenever a violation of missing","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"jaejayrome"},"content":"     *      information has been detected for a said command.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"jaejayrome"},"content":"    public static void testMissingParameters(String instruction) throws MissingParameterException {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jaejayrome"},"content":"        String brokenCommand \u003d instruction.split(\" \")[0].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"jaejayrome"},"content":"        String backCommand \u003d instruction.substring(brokenCommand.length()).trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"jaejayrome"},"content":"        switch (brokenCommand) {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"jaejayrome"},"content":"        case \"mark\":","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"jaejayrome"},"content":"            if (backCommand.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"jaejayrome"},"content":"                throw new MissingParameterException(brokenCommand + \" missing index!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"jaejayrome"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"jaejayrome"},"content":"            break;","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"jaejayrome"},"content":"        case \"unmark\":","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"jaejayrome"},"content":"            if (backCommand.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"jaejayrome"},"content":"                throw new MissingParameterException(brokenCommand + \" missing index!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"jaejayrome"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"jaejayrome"},"content":"            break;","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"jaejayrome"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"jaejayrome"},"content":"            if (backCommand.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"jaejayrome"},"content":"                throw new MissingParameterException(brokenCommand + \" missing description!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"jaejayrome"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"jaejayrome"},"content":"            break;","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"jaejayrome"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"jaejayrome"},"content":"            if (backCommand.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"jaejayrome"},"content":"                throw new MissingParameterException(brokenCommand + \" missing description \u0026 date by!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"jaejayrome"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"jaejayrome"},"content":"            if (backCommand.length() \u003e 0 \u0026\u0026 backCommand.split(\"/by\")[1].length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"jaejayrome"},"content":"                throw new MissingParameterException(brokenCommand + \" missing date by!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"jaejayrome"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"jaejayrome"},"content":"            break;","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"jaejayrome"},"content":"        case \"event\":","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"jaejayrome"},"content":"            if (backCommand.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"jaejayrome"},"content":"                throw new MissingParameterException(brokenCommand + \" missing description \u0026 from \u0026 to!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"jaejayrome"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"jaejayrome"},"content":"            if (backCommand.length() \u003e 0 \u0026\u0026 backCommand.split(\"/from\")[1].split(\"/to\")[0].length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"jaejayrome"},"content":"                throw new MissingParameterException(brokenCommand + \" missing from!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"jaejayrome"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"jaejayrome"},"content":"            if (backCommand.length() \u003e 0 \u0026\u0026 backCommand.split(\"/from\")[1].split(\"/to\")[1].length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"jaejayrome"},"content":"                throw new MissingParameterException(brokenCommand + \" missing to!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"jaejayrome"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"jaejayrome"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"jaejayrome"},"content":"        default:","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"jaejayrome"},"content":"            break;","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"jaejayrome"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"jaejayrome"},"content":"     * Checks whether a given instruction input by the user is indeed an actual command for the chatbot.","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"jaejayrome"},"content":"     * @param instruction String input read in by the user","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"jaejayrome"},"content":"     * @throws InvalidCommandException Occurs whenever an invalid command has been detected.","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"jaejayrome"},"content":"    public static void testInvalidCommand(String instruction) throws InvalidCommandException {","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"jaejayrome"},"content":"        String brokenCommand \u003d instruction.split(\" \")[0];","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"jaejayrome"},"content":"        Commands [] commands \u003d {Commands.BYE, Commands.DEADLINE, Commands.DELETE,","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"jaejayrome"},"content":"            Commands.EVENT, Commands.MARK, Commands.UNMARK, Commands.TODO};","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"jaejayrome"},"content":"        boolean isMatched \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"jaejayrome"},"content":"        for (Commands command : commands) {","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"jaejayrome"},"content":"            if (brokenCommand.equals(command.name().toLowerCase())) {","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"jaejayrome"},"content":"                isMatched \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"jaejayrome"},"content":"            } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"jaejayrome"},"content":"                continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"jaejayrome"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"jaejayrome"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"jaejayrome"},"content":"        if (!isMatched) {","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"jaejayrome"},"content":"            throw new InvalidCommandException(brokenCommand + \" is not a valid command!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"jaejayrome"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"jaejayrome"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jaejayrome":84}},{"path":"src/main/java/pan/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaejayrome"},"content":"package pan.exceptions;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jaejayrome"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jaejayrome"},"content":" * InvalidCommandException - A custom exception","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jaejayrome"},"content":" * @author Jerome Goh","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jaejayrome"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jaejayrome"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"jaejayrome"},"content":"     * Creates a InvalidCommandException instance.","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"jaejayrome"},"content":"     * @param message error message of the given exception","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"jaejayrome"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"jaejayrome"},"content":"        super(\"Invalid Command Exception: \" + message);","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"jaejayrome"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jaejayrome":16}},{"path":"src/main/java/pan/exceptions/MissingParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaejayrome"},"content":"package pan.exceptions;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jaejayrome"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jaejayrome"},"content":" * MissingParameterException - A custom exception","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jaejayrome"},"content":" * @author Jerome Goh","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jaejayrome"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jaejayrome"},"content":"public class MissingParameterException extends Exception {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"jaejayrome"},"content":"     * Creates a MissingParameterException instance.","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"jaejayrome"},"content":"     * @param message error message of the given exception","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"jaejayrome"},"content":"    public MissingParameterException(String message) {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"jaejayrome"},"content":"        super(\"Missing Parameter Exception: \" + message);","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"jaejayrome"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jaejayrome":16}},{"path":"src/main/java/pan/exceptions/TaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaejayrome"},"content":"package pan.exceptions;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jaejayrome"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jaejayrome"},"content":" * TaskIndexException - A custom exception","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jaejayrome"},"content":" * @author Jerome Goh","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jaejayrome"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jaejayrome"},"content":"public class TaskIndexException extends Exception {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"jaejayrome"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"jaejayrome"},"content":"     * Creates a TaskIndexException instance.","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"jaejayrome"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"jaejayrome"},"content":"     * @param message error message of the given exception","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"jaejayrome"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"jaejayrome"},"content":"    public TaskIndexException(String message) {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"jaejayrome"},"content":"        super(\"Task Index Exception: \" + message);","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"jaejayrome"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jaejayrome":16}},{"path":"src/main/java/pan/output/pan.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jaejayrome"},"content":"[D][X] sleep (by: Dec 03 2024)","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"jaejayrome"},"content":"[E][X] play (from: Jan 12 2024 to: Dec 02 2024)","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"jaejayrome"},"content":"[E][X] study (from: Jan 01 2024 to: Dec 01 2024)","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"jaejayrome":3}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jaejayrome"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jaejayrome"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"jaejayrome"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"jaejayrome"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"jaejayrome"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"jaejayrome"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"jaejayrome"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"pan.controllers.MainWindow\"\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"jaejayrome"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"jaejayrome"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"jaejayrome"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"jaejayrome"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"jaejayrome"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"jaejayrome"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"jaejayrome"},"content":"      \u003c/content\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"jaejayrome"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"jaejayrome"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"jaejayrome"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"jaejayrome":19}},{"path":"src/main/resources/view/PanDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jaejayrome"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jaejayrome"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"jaejayrome"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"jaejayrome"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"jaejayrome"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"jaejayrome"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"jaejayrome"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"jaejayrome"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"jaejayrome"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"jaejayrome"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"jaejayrome"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"jaejayrome"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"jaejayrome"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"jaejayrome"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"jaejayrome":16}},{"path":"src/test/java/pan/InternalTestCasesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaejayrome"},"content":"package pan;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jaejayrome"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jaejayrome"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jaejayrome"},"content":"import pan.exceptions.InternalTestCases;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"jaejayrome"},"content":"import pan.exceptions.InvalidCommandException;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"jaejayrome"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jaejayrome"},"content":"public class InternalTestCasesTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"jaejayrome"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"jaejayrome"},"content":"    public void testTestInvalidCommand_valid() {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"jaejayrome"},"content":"        assertDoesNotThrow(() -\u003e InternalTestCases.testInvalidCommand(\"bye\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"jaejayrome"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jaejayrome"},"content":"    public void testTestInvalidCommand_invalid() {","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jaejayrome"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e InternalTestCases.testInvalidCommand(\"rubbish command\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"jaejayrome"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jaejayrome":21}},{"path":"src/test/java/pan/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaejayrome"},"content":"package pan;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jaejayrome"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jaejayrome"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jaejayrome"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jaejayrome"},"content":"import pan.enums.TaskStatus;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"jaejayrome"},"content":"import pan.exceptions.TaskIndexException;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jaejayrome"},"content":"public class TaskListTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"jaejayrome"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"jaejayrome"},"content":"    public void testMark_withInvalidIndex() {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"jaejayrome"},"content":"        int invalidIndex \u003d -1;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"jaejayrome"},"content":"        TaskList taskList \u003d new TaskList(new Storage());","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"jaejayrome"},"content":"        assertThrows(TaskIndexException.class, () -\u003e taskList.mark(invalidIndex));","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"jaejayrome"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"jaejayrome"},"content":"    public void testMark_withOutOfBoundsIndex() {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jaejayrome"},"content":"        TaskList taskList \u003d new TaskList(new Storage());","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"jaejayrome"},"content":"        int invalidIndex \u003d taskList.getTasks().size() + 1;","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"jaejayrome"},"content":"        assertThrows(TaskIndexException.class, () -\u003e taskList.mark(invalidIndex));","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jaejayrome"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"jaejayrome"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jaejayrome"},"content":"    public void testMark_withValidIndex() {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"jaejayrome"},"content":"        TaskList taskList \u003d new TaskList(new Storage());","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"jaejayrome"},"content":"        taskList.add(new ToDos(\"\", TaskStatus.INCOMPLETE));","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"jaejayrome"},"content":"        int validIndex \u003d taskList.getTasks().size();","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"jaejayrome"},"content":"        assertDoesNotThrow(() -\u003e taskList.mark(validIndex));","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"jaejayrome"},"content":"        assertDoesNotThrow(() -\u003e taskList.delete(validIndex));","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"jaejayrome"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"jaejayrome"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jaejayrome":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jaejayrome"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"jaejayrome"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"jaejayrome"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"jaejayrome"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"jaejayrome"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"jaejayrome":5}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"jaejayrome"},"content":"java -classpath ../bin Pan \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"jaejayrome":1}}]
