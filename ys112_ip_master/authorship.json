[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"## Productivity observation with AI assist","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"Using github copilot for autocomplete","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"### Performance","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"Does best when the structure of the top level codes are there,","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"hence providing a better context for the AI to work with.","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"When there is no structure yet, it has higher chance of hallucinating","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"the wrong code.","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"It is also a 60-40 mix of good and bad suggestions, sometimes the details are inaccurate.","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"If you have coded similar function before, it will be able to suggest the right code when repeated.","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"Thus, it is better with laborous tasks with certain existing code for better code suggestions.","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"Personally think that it saves some time by helping you type similar code again ","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"or very trivial next few steps that you expect to take.","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"### Benefits","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"Helps to reduce cognitive load of typing and thinking of the variable names.","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"Speed up refactoring of code when shifting to more OOP, and it will consider the","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"Original code written to suggest the right code in new classes.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"Speeds up writing comments with similar code and contexts. Though it is not detailed at times,","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"I can speed up the obvious parts and add on with more important details.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"### Limitations","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"Sometimes it is not able to suggest the right code, and you have to manually type it out.","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"Sometimes it does not suggest everything previously written, so similar bugs might appear again.","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ys112":30}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"### Acknowledgements","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"References to code used:","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"- https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"Images from:","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"- https://www.flaticon.com/authors/freepik","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ys112":8,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"checkstyle {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"    archiveBaseName \u003d \"DevGPT\"","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ys112":25,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"# DevGPT User Guide","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"![DevGPT](Ui.png)","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"DevGPT is a smart chatbot that offloads your daily tasks from your mind and reminds you of them when needed. ","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"It is optimized for developers and has a command-line interface (CLI) coupled with a nice Graphical User Interface (GUI).","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"## Add todos","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"The most basic feature of DevGPT is adding todos. It allows you to add tasks to the chatbot.  ","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"Represented by a `[T]` in the chatbot and `[X]` to represent a completed task.","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"Send a message in the following format:  ","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"`todo \u003cdescription\u003e`  ","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"Example: `todo borrow book`","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"A message would indicate that the task has been added to the chatbot.","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"DevGPT:","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"\tGot it. I\u0027ve added this task:","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"\t\t[T][ ] borrow book","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"    Now you have 1 tasks in the list.","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"## Add deadlines","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"The deadlines feature allows you to add deadlines to the chatbot. A popup window will remind you of the deadlines when it is due.  ","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"Represented by a `[D]` in the chatbot and `[X]` to represent a completed task.","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"Send a message in the following format:  ","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"`deadline \u003cdescription\u003e /by \u003cdate\u003e \u003ctime\u003e`  ","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"Date and time format: `dd-mm-yyyy HHmm`  ","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"Example: `deadline return book /by 22-12-2024 1800`  ","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"Note: Time is in 24-hour format and is optional.","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"A message would indicate that the deadline has been added to the chatbot.","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"DevGPT:","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"        [D][ ] return book (by: 22 Dec 2024 18:00)","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"    Now you have 2 tasks in the list.","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"## Add events","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"The events feature allows you to add events to the chatbot. It allows you to keep track of the event period.  ","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"Represented by a `[E]` in the chatbot and `[X]` to represent a completed task.","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"Send a message in the following format:  ","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"`deadline \u003cdescription\u003e /from \u003cdate\u003e /to \u003cdate\u003e`  ","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"date and time format: `dd-mm-yyyy `  ","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"Example: `event project meeting /from 18-12-2024 /to 19-12-2024`  ","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"A message would indicate that the event has been added to the chatbot.","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"DevGPT:","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"        [E][ ] project meeting (from: 18 Dec 2024 to: 19 Dec 2024)","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"    Now you have 3 tasks in the list.","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"## List all tasks","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"List all tasks in the chatbot.","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"Send a message in the following format:  ","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"`list`","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"A message would indicate that the tasks have been listed.","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"DevGPT:","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"ys112"},"content":"    Here are the tasks in your list:","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"ys112"},"content":"    1. [T][ ] borrow book","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"ys112"},"content":"    2. [D][ ] return book (by: 22 Dec 2024 18:00)","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"ys112"},"content":"    3. [E][ ] project meeting (from: 18 Dec 2024 to: 19 Dec 2024)","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"ys112"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"ys112"},"content":"## Mark task as done","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"ys112"},"content":"Mark a task as done in the chatbot to indicate that it has been completed.   ","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"ys112"},"content":"Represented by a `[X]` in the chatbot to indicate the task is completed.","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"ys112"},"content":"Send a message in the following format:  ","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"ys112"},"content":"`mark \u003ctask number\u003e`  ","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"ys112"},"content":"Example: `mark 1`  ","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"ys112"},"content":"A message would indicate that the task has been marked as done.","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"ys112"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"ys112"},"content":"DevGPT:","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"ys112"},"content":"    Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"ys112"},"content":"    [T][X] borrow book","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"ys112"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":90,"author":{"gitId":"ys112"},"content":"## Mark task as undone","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"ys112"},"content":"Mark a task as undone in the chatbot to indicate that it has not been completed.  ","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"ys112"},"content":"Represented by a `[ ]` to indicate that the task is not completed.","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":94,"author":{"gitId":"ys112"},"content":"Send a message in the following format:  ","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"ys112"},"content":"`unmark \u003ctask number\u003e`  ","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"ys112"},"content":"Example: `unmark 1`  ","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":98,"author":{"gitId":"ys112"},"content":"A message would indicate that the task has been marked as undone.","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"ys112"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"ys112"},"content":"DevGPT:","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"ys112"},"content":"    Got it! I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-02-20"},{"lineNumber":102,"author":{"gitId":"ys112"},"content":"    [T][ ] borrow book","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"ys112"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":105,"author":{"gitId":"ys112"},"content":"## Delete task","lastModifiedDate":"2024-02-19"},{"lineNumber":106,"author":{"gitId":"ys112"},"content":"Delete a task from the chatbot when the task is no longer needed.","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":108,"author":{"gitId":"ys112"},"content":"Send a message in the following format:  ","lastModifiedDate":"2024-02-19"},{"lineNumber":109,"author":{"gitId":"ys112"},"content":"`delete \u003ctask number\u003e`  ","lastModifiedDate":"2024-02-19"},{"lineNumber":110,"author":{"gitId":"ys112"},"content":"Example: `delete 1`","lastModifiedDate":"2024-02-19"},{"lineNumber":111,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":112,"author":{"gitId":"ys112"},"content":"A message would indicate that the task has been deleted.","lastModifiedDate":"2024-02-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":114,"author":{"gitId":"ys112"},"content":"DevGPT:","lastModifiedDate":"2024-02-19"},{"lineNumber":115,"author":{"gitId":"ys112"},"content":"    Poof! I\u0027ve removed this task:","lastModifiedDate":"2024-02-19"},{"lineNumber":116,"author":{"gitId":"ys112"},"content":"    [T][X] borrow book","lastModifiedDate":"2024-02-19"},{"lineNumber":117,"author":{"gitId":"ys112"},"content":"    Now you have 2 tasks in the list.","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":120,"author":{"gitId":"ys112"},"content":"## Find task","lastModifiedDate":"2024-02-19"},{"lineNumber":121,"author":{"gitId":"ys112"},"content":"Find a task from the chatbot using keywords from the description when you need to search for a specific task.","lastModifiedDate":"2024-02-19"},{"lineNumber":122,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":123,"author":{"gitId":"ys112"},"content":"Send a message in the following format:  ","lastModifiedDate":"2024-02-19"},{"lineNumber":124,"author":{"gitId":"ys112"},"content":"`find \u003ckeyword\u003e`  ","lastModifiedDate":"2024-02-19"},{"lineNumber":125,"author":{"gitId":"ys112"},"content":"Example: `find book`  ","lastModifiedDate":"2024-02-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":127,"author":{"gitId":"ys112"},"content":"A message would indicate that the tasks have been found.","lastModifiedDate":"2024-02-19"},{"lineNumber":128,"author":{"gitId":"ys112"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":129,"author":{"gitId":"ys112"},"content":"DevGPT:","lastModifiedDate":"2024-02-19"},{"lineNumber":130,"author":{"gitId":"ys112"},"content":"    Here are the tasks in your list:","lastModifiedDate":"2024-02-19"},{"lineNumber":131,"author":{"gitId":"ys112"},"content":"    1. [D][ ] return book (by: 22 Dec 2024 18:00)","lastModifiedDate":"2024-02-19"},{"lineNumber":132,"author":{"gitId":"ys112"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":134,"author":{"gitId":"ys112"},"content":"## Exit","lastModifiedDate":"2024-02-19"},{"lineNumber":135,"author":{"gitId":"ys112"},"content":"Exit the chatbot. Saves the tasks to a file and closes.","lastModifiedDate":"2024-02-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":137,"author":{"gitId":"ys112"},"content":"Send a message in the following format:","lastModifiedDate":"2024-02-19"},{"lineNumber":138,"author":{"gitId":"ys112"},"content":"`bye`","lastModifiedDate":"2024-02-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":140,"author":{"gitId":"ys112"},"content":"A message would indicate that the chatbot is exiting.","lastModifiedDate":"2024-02-19"},{"lineNumber":141,"author":{"gitId":"ys112"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":142,"author":{"gitId":"ys112"},"content":"DevGPT:","lastModifiedDate":"2024-02-19"},{"lineNumber":143,"author":{"gitId":"ys112"},"content":"    Bye. Hope to see you again soon!","lastModifiedDate":"2024-02-19"},{"lineNumber":144,"author":{"gitId":"ys112"},"content":"```","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"ys112":128,"-":16}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import java.time.ZoneId;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"import java.util.Date;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"import java.util.Timer;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"    protected Timer timer;","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"     * Initializes a Deadline object with the given description and deadline.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"     * @param by Deadline of the task in LocalDate format.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"        assert by !\u003d null : \"Deadline should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"        timer \u003d new Timer();","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"        scheduleReminder(description, by);","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"    private void scheduleReminder(String description, LocalDateTime by) {","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"        timer.schedule(new Reminder(\"You have a deadline for \" + description + \" on \"","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"            + by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"))),","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"            Date.from(by.atZone(ZoneId.systemDefault()).toInstant()));","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"     * Returns the type of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"     * @return task type","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"        return \"D\";","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"     * Returns the date of the task in LocalDate object.","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"     * @return date of the task","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"        return by;","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"     * Returns all the information of the task in String format.","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"     * @return date of the task in String format","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\")) + \")\";","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ys112":65}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"import javafx.scene.control.ContentDisplay;","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"import javafx.scene.paint.Paint;","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":" *  Represents a dialog box that contains an ImageView to","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":" *  represent the profile picture and the text to display.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":" *","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":" *  Solution below adapted from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"     * Initializes a DialogBox object with the given text and image.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"     * @param text Text to be displayed in the dialog box.","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"     * @param img  Image to be displayed in the dialog box.","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"    private void flip() {","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"        setBackground(new Background(new BackgroundFill(Paint.valueOf(\"#D1D3D4\"), CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"        dialog.setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"        dialog.setContentDisplay(ContentDisplay.LEFT);","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"ys112"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"ys112"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"ys112"},"content":"        db.flip();","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"ys112"},"content":"        return db;","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ys112":76}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":" * Represents a duke chatbot that handles users input and add tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":" * It also saves the tasks to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"    public Duke() {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"     * Creates a Duke chatbot object.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"     * @param filePath the path of the file to save the tasks to","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"    public Duke(String filePath, Ui ui) {","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"            tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"     * Returns the response of the chatbot to the user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"     * @param input the user input","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"     * @return the response of the chatbot","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"    String getResponse(String input) {","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"            assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"            Parser parser \u003d new Parser(input);","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"            String commandWord \u003d parser.getCommandWord();","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"            boolean isAddedToTasks \u003d false;","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"            switch (commandWord) {","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"            case \"bye\":","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"                storage.writeToFile(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"                return ui.showBye();","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"            case \"list\":","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"                return ui.showTaskList(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"            case \"mark\":","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"                Task markTask \u003d tasks.markDone(parser.getIndex());","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"                assert markTask !\u003d null : \"Task should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"                return ui.showDone(markTask);","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"            case \"unmark\":","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"                Task unmarkTask \u003d tasks.unmarkDone(parser.getIndex());","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"                assert unmarkTask !\u003d null : \"Task should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"                return ui.showUnmark(unmarkTask);","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"            case \"delete\":","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"                Task deleteTask \u003d tasks.deleteTask(parser.getIndex());","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"                assert deleteTask !\u003d null : \"Task should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"                return ui.showDelete(deleteTask, tasks.getSize());","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"ys112"},"content":"            case \"find\":","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"ys112"},"content":"                TaskList filteredTasks \u003d tasks.findTasks(parser.getDescription());","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"ys112"},"content":"                assert filteredTasks !\u003d null : \"Filtered tasks should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"ys112"},"content":"                return ui.showTaskList(filteredTasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"ys112"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"ys112"},"content":"                Task task \u003d new Todo(parser.getDescription());","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"ys112"},"content":"                isAddedToTasks \u003d tasks.addTask(task);","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"ys112"},"content":"                assert isAddedToTasks : \"Todo could not be added to tasks\";","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"ys112"},"content":"                return ui.showAddTask(task, tasks.getSize());","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"ys112"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"ys112"},"content":"                Task deadlineTask \u003d new Deadline(parser.getDescription(), parser.getBy());","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"ys112"},"content":"                isAddedToTasks \u003d tasks.addTask(deadlineTask);","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"ys112"},"content":"                assert isAddedToTasks : \"Deadline could not be added to tasks\";","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"ys112"},"content":"                return ui.showAddTask(deadlineTask, tasks.getSize());","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"ys112"},"content":"            case \"event\":","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"ys112"},"content":"                Task eventTask \u003d new Event(parser.getDescription(), parser.getFromTo()[0], parser.getFromTo()[1]);","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"ys112"},"content":"                isAddedToTasks \u003d tasks.addTask(eventTask);","lastModifiedDate":"2024-02-13"},{"lineNumber":86,"author":{"gitId":"ys112"},"content":"                assert isAddedToTasks : \"Event could not be added to tasks\";","lastModifiedDate":"2024-02-13"},{"lineNumber":87,"author":{"gitId":"ys112"},"content":"                return ui.showAddTask(eventTask, tasks.getSize());","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"ys112"},"content":"            default:","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"ys112"},"content":"                return ui.commandNotUnderstood();","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"ys112"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":91,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":92,"author":{"gitId":"ys112"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"ys112"},"content":"            return ui.showError(\"The index given for the task does not exist. \\n\\t\"","lastModifiedDate":"2024-02-13"},{"lineNumber":94,"author":{"gitId":"ys112"},"content":"                + \"Please use the following format: mark \u003cindex\u003e\");","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"ys112"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"ys112"},"content":"            return ui.showError(\"Please enter a valid number to modify task\");","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"ys112"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"ys112"},"content":"            return ui.showError(\"Please enter a valid date in the format dd-mm-yyyy HHmm\");","lastModifiedDate":"2024-02-14"},{"lineNumber":99,"author":{"gitId":"ys112"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"ys112"},"content":"            return ui.showError(\"Failed to save tasks to file\");","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"ys112"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"ys112"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ys112":105,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":" * Represents an exception specific to Duke.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"     * Initializes a DukeException with the error message.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"     * @param message the error message","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"        super(message);","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ys112":15}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":" * Represents event task that handles start and end date of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"     * Initializes an Event with the description, start and end date of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"     * @param description the description of the event","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"     * @param from the start date of the event in LocalDate format","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"     * @param to the end date of the event in LocalDate format","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"        assert from !\u003d null : \"Start date should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"        assert to !\u003d null : \"End date should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"        return \"E\";","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"    public LocalDate getFrom() {","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"        return from;","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"    public LocalDate getTo() {","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"        return to;","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"))","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"            + \" to: \"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"            + to.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ys112":44}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":" *","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":" * Reused from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"public class Launcher {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ys112":14}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":" * A GUI for Duke using FXML and JavaFX to display the chatbot.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":" * Solution below adapted from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"    private Duke duke \u003d new Duke(\"data/DevGPT.txt\", ui);","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"            Image icon \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDevGPT.png\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"            stage.getIcons().add(icon);","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"            stage.setTitle(\"DevGPT\");","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().initialize(duke, ui);","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"            stage.show();","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ys112":37}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":" *","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":" * Solution below adapted from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDevGPT.png\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"     * Initializes the main window.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"     * @param duke the Duke object to handle user commands","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"     * @param ui the Ui object to handle messages for display","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"    public void initialize(Duke duke, Ui ui) {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"        assert duke !\u003d null : \"Duke object should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"        assert ui !\u003d null : \"Ui object should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"        botIntro(ui);","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"    @FXML","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"    private void botIntro(Ui ui) {","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"            DialogBox.getDukeDialog(ui.showWelcome(), dukeImage)","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"        );","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"     * Creates two dialog boxes, one from user and one from Duke which are then added to the dialog container.","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"     * The user\u0027s command is parsed to duke and the response is displayed.","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"     * If the user inputs \"bye\", the application will close","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"        assert response !\u003d null \u0026\u0026 !response.isEmpty() : \"Response should not be null or empty\";","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"            DialogBox.getUserDialog(\"User:\\n\\t\" + input, userImage),","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"            DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"        );","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"ys112"},"content":"        if (input.trim().equals(\"bye\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"ys112"},"content":"            Platform.exit();","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"ys112"},"content":"            System.exit(0);","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"ys112"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ys112":76}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":" * Represents a parser that handles users input and","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":" * returns the respective commands and descriptions.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"public class Parser {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"    private String input;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"    private String commandWord;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"     * Initializes a Parser with the input from the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"     * @param input the input from the user","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"    public Parser(String input) {","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"        this.input \u003d input;","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"     * Returns the command word from the user input.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"     * @return command word trimmed from user input","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"     * @throws DukeException if the command word is empty","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"    public String getCommandWord() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"        if (input.trim().isEmpty()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"            throw new DukeException(\"Command cannot be empty.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"        this.commandWord \u003d input.split(\" \")[0].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"        assert commandWord !\u003d null : \"Command word should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"        return commandWord;","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"     * Returns the description for the new task from user input.","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"     * @return description of the task","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"     * @throws DukeException if the description is empty","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"    public String getDescription() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"        formatCheck(\"todo\");","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"        if (input.contains(\"/\")) {","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"            return input.split(\" \", 2)[1].split(\"/\")[0].trim();","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"        return input.split(\" \", 2)[1];","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"     * Returns the date for the deadline task from user input.","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"     * @return date in LocalDate format","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"     * @throws DukeException if the date is empty","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"     * @throws DateTimeParseException if the date is not in the correct format","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"    public LocalDateTime getBy() throws DukeException, DateTimeParseException {","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"        formatCheck(\"deadline\");","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"        String dateTimeString \u003d input.split(\"/by \")[1].trim();","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"        return Task.getLocalDateTimeInput(dateTimeString);","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"     * Returns the date in array form for the event task from user input.","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"ys112"},"content":"     * The first element is the start date and the second element is the end date.","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"ys112"},"content":"     * @return array of dates in LocalDate format","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"ys112"},"content":"     * @throws DukeException if the date is empty","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"ys112"},"content":"     * @throws DateTimeParseException if the date is not in the correct format","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"ys112"},"content":"    public LocalDate[] getFromTo() throws DukeException, DateTimeParseException {","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"ys112"},"content":"        formatCheck(\"event\");","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"ys112"},"content":"        LocalDate from \u003d Task.getLocalDateInput(input.split(\"/from\")[1].split(\"/to\")[0].trim());","lastModifiedDate":"2024-02-14"},{"lineNumber":78,"author":{"gitId":"ys112"},"content":"        LocalDate to \u003d Task.getLocalDateInput(input.split(\"/to\")[1].trim());","lastModifiedDate":"2024-02-14"},{"lineNumber":79,"author":{"gitId":"ys112"},"content":"        return new LocalDate[] {from, to};","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"ys112"},"content":"    private String deadlineFormatError() throws DukeException {","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"ys112"},"content":"        return \"Please use the following format: deadline \u003cdescription\u003e /by \u003cdd-mm-yyyy\u003e \u003cHHmm\u003e (time optional)\";","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":85,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":86,"author":{"gitId":"ys112"},"content":"    private void formatCheck(String taskType) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"ys112"},"content":"        String formatStringInfo \u003d \"Please use the following format:\" + taskType + \" \u003cdescription\u003e\";","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":89,"author":{"gitId":"ys112"},"content":"        switch (taskType) {","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"ys112"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"ys112"},"content":"            if (input.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"ys112"},"content":"                throw new DukeException(\"The description of a task cannot be empty. \\n\\t\"","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"ys112"},"content":"                    + formatStringInfo);","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"ys112"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"ys112"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"ys112"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"ys112"},"content":"            if (input.split(\" \", 2).length \u003d\u003d 1 || input.split(\"/by \").length !\u003d 2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"ys112"},"content":"                throw new DukeException(\"The deadline and description for a task cannot be empty. \\n\\t\"","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"ys112"},"content":"                    + deadlineFormatError());","lastModifiedDate":"2024-02-14"},{"lineNumber":100,"author":{"gitId":"ys112"},"content":"            } else if (!input.contains(\"/by\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"ys112"},"content":"                throw new DukeException(\"Invalid command for deadline. \\n\\t\"","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"ys112"},"content":"                    + deadlineFormatError());","lastModifiedDate":"2024-02-14"},{"lineNumber":103,"author":{"gitId":"ys112"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"ys112"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"ys112"},"content":"        case \"event\":","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"ys112"},"content":"            if (input.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"ys112"},"content":"                throw new DukeException(\"The date and description for an event cannot be empty. \\n\\t\"","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"ys112"},"content":"                    + formatStringInfo + \" /from \u003cdd-mm-yyyy\u003e /to \u003cdd-mm-yyyy\u003e\");","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"ys112"},"content":"            } else if (!input.contains(\"/from\") || !input.contains(\"/to\") || input.split(\"/from \").length \u003e 2","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"ys112"},"content":"                || input.split(\"/to \").length \u003e 2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"ys112"},"content":"                throw new DukeException(\"Invalid command for event. \\n\\t\"","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"ys112"},"content":"                    + formatStringInfo + \" /from \u003cdd-mm-yyyy\u003e /to \u003cdd-mm-yyyy\u003e\");","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"ys112"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"ys112"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"ys112"},"content":"        default:","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"ys112"},"content":"            assert taskType !\u003d null || !taskType.isEmpty() : \"Task type should be null or empty\";","lastModifiedDate":"2024-02-13"},{"lineNumber":117,"author":{"gitId":"ys112"},"content":"            throw new DukeException(\"Invalid command. \\n\\t\"","lastModifiedDate":"2024-02-13"},{"lineNumber":118,"author":{"gitId":"ys112"},"content":"                + formatStringInfo);","lastModifiedDate":"2024-02-13"},{"lineNumber":119,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"ys112"},"content":"     * Returns the index of the task to be modified from user input.","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"ys112"},"content":"     * @return index of the task","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"ys112"},"content":"     * @throws DukeException if the index is empty","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"ys112"},"content":"    public int getIndex() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"ys112"},"content":"        if (input.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"ys112"},"content":"            throw new DukeException(\"The index of a task cannot be empty.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"ys112"},"content":"        return Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":136,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ys112":136}},{"path":"src/main/java/duke/Popup.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":" * Represents a popup window to display reminders.","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"public class Popup {","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"     * Displays a reminder popup using JavaFX with the given message.","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"     * @param message Message to be displayed in the popup.","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"    public static void showReminderPopup(String message) {","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"        Platform.runLater(() -\u003e {","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"            Alert alert \u003d new Alert(Alert.AlertType.INFORMATION);","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"            alert.setTitle(\"Reminder\");","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"            alert.setContentText(message);","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"            alert.showAndWait();","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"        });","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"ys112":23}},{"path":"src/main/java/duke/Reminder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import java.util.TimerTask;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":" * Represents a reminder that is triggered at a specific time to inform the user of a task.","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"public class Reminder extends TimerTask {","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"    private String message;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"    public Reminder(String message) {","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"        this.message \u003d message;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"    public void run() {","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"        Popup.showReminderPopup(message);","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"ys112":19}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":" * Storage class to handle loading and saving of tasks to a text file.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"public class Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"    private String filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"     * Initializes a Storage object with file path to text file.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"     * @param filePath the path of the file to save the tasks to","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"     * Loads the tasks from the file, processing of text to task is done in parseTasksFromString.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"     * @return the list of tasks loaded from the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"     * @throws IOException if there is an error reading the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"     * @throws DukeException if the file could not be created.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException, DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"        ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"            boolean isCreated \u003d false;","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"            isCreated \u003d file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"            isCreated \u003d file.createNewFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"            if (!isCreated) {","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"                throw new DukeException(\"File could not be created.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"        assert file.exists() : \"File should exist\";","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"            Task task \u003d parseTasksFromString(line);","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"            tasksList.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"        s.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"        return tasksList;","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"    private Task parseTasksFromString(String line) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"        assert line !\u003d null : \"Line should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"        String[] split \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"        // common fields","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"        String taskType \u003d split[0];","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"        boolean isDone \u003d split[1].equals(\"1\");","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"        String description \u003d split[2];","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"ys112"},"content":"        // class specific fields","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"ys112"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"ys112"},"content":"        case \"T\":","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"ys112"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"ys112"},"content":"            break;","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"ys112"},"content":"        case \"D\":","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"ys112"},"content":"            String by \u003d split[3];","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"ys112"},"content":"            task \u003d new Deadline(description, Task.getLocalDateTimeInput(by));","lastModifiedDate":"2024-02-14"},{"lineNumber":77,"author":{"gitId":"ys112"},"content":"            break;","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"ys112"},"content":"        case \"E\":","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"ys112"},"content":"            String from \u003d split[3];","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"ys112"},"content":"            String to \u003d split[4];","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"ys112"},"content":"            task \u003d new Event(description, Task.getLocalDateInput(from), Task.getLocalDateInput(to));","lastModifiedDate":"2024-02-14"},{"lineNumber":82,"author":{"gitId":"ys112"},"content":"            break;","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"ys112"},"content":"        default:","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"ys112"},"content":"            throw new DukeException(\"Invalid task type\");","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":87,"author":{"gitId":"ys112"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"ys112"},"content":"            task.markAsDone();","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"ys112"},"content":"        return task;","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"ys112"},"content":"     * Writes the tasks to the file and overwrites the file if it already exists.","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"ys112"},"content":"     * @param tasksList the list of tasks to be written to the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"ys112"},"content":"     * @throws DukeException if there is an error writing to the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"ys112"},"content":"     * @throws IOException if there is an error writing to the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"ys112"},"content":"    public void writeToFile(TaskList tasksList) throws DukeException, IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"ys112"},"content":"        assert filePath !\u003d null : \"File path should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":102,"author":{"gitId":"ys112"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath, false);","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"ys112"},"content":"        for (int i \u003d 0; i \u003c tasksList.getSize(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"ys112"},"content":"            Task task \u003d tasksList.getTask(i);","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"ys112"},"content":"            if (task instanceof Todo) {","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"ys112"},"content":"                fileWriter.write(","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"ys112"},"content":"                    task.getTaskType() + \" | \" + (task.isDone ? \"1\" : \"0\") + \" | \" + task.getDescription() + \"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"ys112"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"ys112"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"ys112"},"content":"                fileWriter.write(","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"ys112"},"content":"                    deadline.getTaskType() + \" | \" + (deadline.isDone ? \"1\" : \"0\") + \" | \"","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"ys112"},"content":"                        + deadline.getDescription() + \" | \" + Task.getLocalDateTimeOutput(deadline.getBy(),","lastModifiedDate":"2024-02-19"},{"lineNumber":113,"author":{"gitId":"ys112"},"content":"                        \"d-M-yyyy HHmm\") + \"\\n\");","lastModifiedDate":"2024-02-19"},{"lineNumber":114,"author":{"gitId":"ys112"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"ys112"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"ys112"},"content":"                fileWriter.write(","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"ys112"},"content":"                    task.getTaskType() + \" | \" + (task.isDone ? \"1\" : \"0\") + \" | \"","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"ys112"},"content":"                        + task.getDescription() + \" | \" + Task.getLocalDateOutput(event.getFrom(), \"d-M-yyyy\") + \" | \"","lastModifiedDate":"2024-02-14"},{"lineNumber":119,"author":{"gitId":"ys112"},"content":"                        + Task.getLocalDateOutput(event.getTo(), \"d-M-yyyy\") + \"\\n\");","lastModifiedDate":"2024-02-14"},{"lineNumber":120,"author":{"gitId":"ys112"},"content":"            } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":121,"author":{"gitId":"ys112"},"content":"                throw new DukeException(\"Invalid task type\");","lastModifiedDate":"2024-02-13"},{"lineNumber":122,"author":{"gitId":"ys112"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"ys112"},"content":"        fileWriter.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ys112":128}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":" * Represents a task that can store the description and status of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"    protected String description;","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"     * Initializes a Task with the description and status of not done.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"        assert description !\u003d null \u0026 !description.isEmpty() : \"Description should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"     * Accepts a date in String format of \"d-M-yyyy\" and returns the date in LocalDate format.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"     * @param dateString date in String format of \"d-M-yyyy\"","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"     * @return date of the task","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"    public static LocalDate getLocalDateInput(String dateString) throws DateTimeParseException {","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"        return LocalDate.parse(dateString, DateTimeFormatter.ofPattern(\"d-M-yyyy\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"     * Accepts a date in String format of \"d-M-yyyy HHmm\" and returns the date time in LocalDateTime format.","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"     * @param dateTimeString datetime in String format of \"d-M-yyyy HHmm\"","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"     * @return date of the task","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"    public static LocalDateTime getLocalDateTimeInput(String dateTimeString) throws DukeException {","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"        String[] splitDateTime \u003d dateTimeString.split(\" \");","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"        if (splitDateTime.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"            return LocalDateTime.parse(dateTimeString + \" \" + LocalTime.MIDNIGHT.toString(),","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"                DateTimeFormatter.ofPattern(\"d-M-yyyy HH:mm\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"        } else if (splitDateTime.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"            return LocalDateTime.parse(dateTimeString, DateTimeFormatter.ofPattern(\"d-M-yyyy HHmm\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"        } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"            throw new DukeException(\"Date and time should be in the format of dd-M-yyyy HHmm\");","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"     * Accepts a date in LocalDate format and returns the date time in given pattern.","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"     * @param date date in LocalDate format","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"     * @return date of the task in String format of given pattern","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"    public static String getLocalDateOutput(LocalDate date, String datePattern) throws DateTimeParseException {","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"        return date.format(DateTimeFormatter.ofPattern(datePattern));","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"     * Accepts a date in LocalDateTime format and returns the date time in given pattern.","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"     * @param date date in LocalDateTime format","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"ys112"},"content":"     * @param dateTimePtn the pattern for date time formatter","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"ys112"},"content":"     * @return date of the task in String format of given pattern","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"ys112"},"content":"    public static String getLocalDateTimeOutput(LocalDateTime date, String dateTimePtn)throws DateTimeParseException {","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"ys112"},"content":"        return date.format(DateTimeFormatter.ofPattern(dateTimePtn));","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"ys112"},"content":"     * Returns X if the task is done, else return empty space.","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"ys112"},"content":"     * @return status icon of the task","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"ys112"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":82,"author":{"gitId":"ys112"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-22"},{"lineNumber":83,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":84,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":85,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"ys112"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"ys112"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":89,"author":{"gitId":"ys112"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":90,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":91,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":92,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"ys112"},"content":"     * Marks the task as not done yet.","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"ys112"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":96,"author":{"gitId":"ys112"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":97,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":98,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":99,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"ys112"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"ys112"},"content":"     * @return description of the task","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"ys112"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"ys112"},"content":"        return description;","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"ys112"},"content":"     * Returns the type of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"ys112"},"content":"     * @return task type","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"ys112"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-01-27"},{"lineNumber":114,"author":{"gitId":"ys112"},"content":"        return \" \";","lastModifiedDate":"2024-01-27"},{"lineNumber":115,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":116,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":117,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"ys112"},"content":"     * Returns all the information of the task in String format.","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"ys112"},"content":"     * @return all the information of the task","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":123,"author":{"gitId":"ys112"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":124,"author":{"gitId":"ys112"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-23"},{"lineNumber":125,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":126,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"ys112":126}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":" * TaskList class to handle operations on the list of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"public class TaskList {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"     * Initializes a TaskList object with a list of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"     * Returns false if there is no Task given.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"     * @param task the task to be added","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"     * @return true if the task is added successfully","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"    public boolean addTask(Task task) {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"            return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"        return tasks.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"     * Deletes a task from the list of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"     * @param index the index of the task to be deleted","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"     * @return the task that is deleted","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"        return tasks.remove(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"     * Gets a task from the list of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"     * @param index the index of the task to be retrieved","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"     * @return the task at the index","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"     * @throws DukeException if the task does not exist at the index","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"    public Task getTask(int index) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"            throw new DukeException(\"No task found at index \" + index + \".\");","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"     * Gets the size of the list of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"    public int getSize() {","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"        return tasks.size();","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"     * Marks a task as done.","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"    public Task markDone(int index) {","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"ys112"},"content":"        task.markAsDone();","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"ys112"},"content":"        return task;","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"ys112"},"content":"     * Marks a task as not done yet.","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"ys112"},"content":"    public Task unmarkDone(int index) {","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"ys112"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"ys112"},"content":"        task.markAsUndone();","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"ys112"},"content":"        return task;","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"ys112"},"content":"     * Finds tasks with the description that contains the keyword given by user.","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"ys112"},"content":"     * @param description the keyword to be searched for","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"ys112"},"content":"     * @return a list of tasks that contain the description","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"ys112"},"content":"    public TaskList findTasks(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"ys112"},"content":"        assert description !\u003d null : \"Description should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":90,"author":{"gitId":"ys112"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"ys112"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"ys112"},"content":"            if (task.getDescription().contains(description)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"ys112"},"content":"                filteredTasks.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"ys112"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"ys112"},"content":"        return new TaskList(filteredTasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ys112":98}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":" * Represents a todo task that can store the description and status of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"     * Initializes a Todo with the description and status of not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"        return \"T\";","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ys112":24}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":" * Deals with showing the correct messages to MainWindow controller.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"public class Ui {","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"     * Initializes Ui object.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"    public Ui() {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"     * Prints the welcome message.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"    private String botHeader() {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"        return \"DevGPT:\\n\\t\";","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"     * Provides bot name for the given messages.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"    private String botHeader(String message) {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"        return \"DevGPT \" + message + \":\\n\\t\";","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"     * Prints the welcome message.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"    public String showWelcome() {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"        return botHeader() + \"Hello! I\u0027m DevGPT\\n\\tWhat can I do for you?\";","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"     * Prints the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"     * @param tasks the list of tasks to be printed.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"    public String showTaskList(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"            throw new DukeException(\"No tasks found.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"        String result \u003d botHeader();","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"        result +\u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"            result +\u003d doubleTab() + (i + 1) + \".\" + tasks.getTask(i) + \"\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"        return result;","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"     * Shows the task marked as done.","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"     * @param markTask the task to be marked as done.","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"    public String showDone(Task markTask) {","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"        return botHeader() + \"Nice! I\u0027ve marked this task as done:\"","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"            + doubleTab() + markTask;","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"     * Shows the task marked as undone.","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"     * @param unmarkTask the task to be marked as undone.","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"    public String showUnmark(Task unmarkTask) {","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"        return botHeader() + \"Got it! I\u0027ve marked this task as not done yet:\"","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"            + doubleTab() + unmarkTask;","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"ys112"},"content":"     * Shows that the task was deleted.","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"ys112"},"content":"     * @param deleteTask the task to be deleted.","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"ys112"},"content":"     * @param size the number of tasks in the task list after deletion.","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"ys112"},"content":"    public String showDelete(Task deleteTask, int size) {","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"ys112"},"content":"        assert size \u003e\u003d 0 : \"Size should be greater than or equal to 0\";","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"ys112"},"content":"        return botHeader() + \"Poof! I\u0027ve removed this task:\"","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"ys112"},"content":"            + doubleTab() + deleteTask","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"ys112"},"content":"            + \"\\n\\t\" + \"Now you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"ys112"},"content":"     * Shows that the task was added.","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"ys112"},"content":"     * @param task the task to be added.","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"ys112"},"content":"     * @param size the number of tasks in the task list after adding tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"ys112"},"content":"    public String showAddTask(Task task, int size) {","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"ys112"},"content":"        assert size \u003e\u003d 0 : \"Size should be greater than or equal to 0\";","lastModifiedDate":"2024-02-13"},{"lineNumber":90,"author":{"gitId":"ys112"},"content":"        return botHeader() + \"Got it. I\u0027ve added this task:\"","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"ys112"},"content":"            + doubleTab() + task + \"\\n\\t\"","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"ys112"},"content":"            + \"Now you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"ys112"},"content":"    private String doubleTab() {","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"ys112"},"content":"        return \"\\n\\t\\t\";","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"ys112"},"content":"     * Shows the error message with error header.","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"ys112"},"content":"     * @param message the error message to be shown.","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"ys112"},"content":"    public String showError(String message) {","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"ys112"},"content":"        return botHeader(\"Error\") + message;","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"ys112"},"content":"     * Shows error message for invalid command.","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"ys112"},"content":"    public String commandNotUnderstood() {","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"ys112"},"content":"        return showError(\"Your message is not understood. Please use following:\\n\\t\"","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"ys112"},"content":"            + \"todo \u003cdescription\u003e\\n\\t\"","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"ys112"},"content":"            + \"deadline \u003cdescription\u003e /by \u003cdd-mm-yyyy\u003e \u003cHHmm\u003e (time optional)\\n\\t\"","lastModifiedDate":"2024-02-14"},{"lineNumber":115,"author":{"gitId":"ys112"},"content":"            + \"event \u003cdescription\u003e /from \u003cdd-mm-yyyy\u003e /to \u003cdd-mm-yyyy\u003e\\n\\t\"","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"ys112"},"content":"            + \"list\\n\\t\"","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"ys112"},"content":"            + \"mark \u003cindex\u003e\\n\\t\"","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"ys112"},"content":"            + \"unmark \u003cindex\u003e\\n\\t\"","lastModifiedDate":"2024-02-19"},{"lineNumber":119,"author":{"gitId":"ys112"},"content":"            + \"delete \u003cindex\u003e\\n\\t\"","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"ys112"},"content":"            + \"find \u003ckeyword\u003e\\n\\t\"","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"ys112"},"content":"            + \"bye\");","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"ys112"},"content":"     * Shows bye message.","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"ys112"},"content":"    public String showBye() {","lastModifiedDate":"2024-02-04"},{"lineNumber":128,"author":{"gitId":"ys112"},"content":"        return botHeader() + \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-04"},{"lineNumber":129,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":131,"author":{"gitId":"ys112"},"content":"    public String showReminder(String message) {","lastModifiedDate":"2024-02-14"},{"lineNumber":132,"author":{"gitId":"ys112"},"content":"        return botHeader(\"reminder\") + message;","lastModifiedDate":"2024-02-14"},{"lineNumber":133,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":134,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ys112":134}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"\u003c!--Solution below adapted from https://se-education.org/guides/tutorials/javaFx.html--\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"\u003cfx:root alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"129.0\" prefWidth\u003d\"515.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER_RIGHT\" contentDisplay\u003d\"RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"            \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"         \u003c/font\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"      \u003c/ImageView\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ys112":30}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"\u003c!--Solution below adapted from https://se-education.org/guides/tutorials/javaFx.html--\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"\u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"600.0\" prefWidth\u003d\"503.0\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"426.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"557.0\" prefWidth\u003d\"515.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"554.0\" prefWidth\u003d\"498.0\" style\u003d\"-fx-background-color: #BFE6FF;\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ys112":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"class ParserTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"    void getCommandWord_emptyInput() {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"        Parser parser \u003d new Parser(\"\");","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"        assertThrows(DukeException.class, () -\u003e parser.getCommandWord(),","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"            \"Command cannot be empty.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"    void getCommandWord_spaceInput() {","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"        Parser parser \u003d new Parser(\" \");","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"        assertThrows(DukeException.class, () -\u003e parser.getCommandWord(),","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"            \"Command cannot be empty.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"    void getCommandWord_success() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"        Parser parser \u003d new Parser(\"todo test\");","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"        assertEquals(parser.getCommandWord(), \"todo\");","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"    void getDescription_emptyInput() {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"        Parser parser \u003d new Parser(\"todo\");","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"        assertThrows(DukeException.class, () -\u003e parser.getDescription(),","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"            \"The description of a task cannot be empty. \\n\\t\"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"                + \"Please use the following format: description \u003cdescription\u003e\");","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"    void getDescription_success() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"        Parser parser \u003d new Parser(\"todo test\");","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"        assertEquals(parser.getDescription(), \"test\");","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"    void getBy_wrongByFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"        Parser parser \u003d new Parser(\"deadline test by 23-12-2032\");","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"        assertThrows(DukeException.class, () -\u003e parser.getBy(),","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"            \"Invalid command for deadline. \\n\\t\"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"                + \"Please use the following format: deadline \u003cdescription\u003e /by \u003cdd-mm-yyyy\u003e\");","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"    void getBy_wrongDateFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"        Parser parser \u003d new Parser(\"deadline test /by 2032/12/13\");","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"        assertThrows(java.time.format.DateTimeParseException.class, () -\u003e parser.getBy(),","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"            \"Invalid date format. Please use dd-mm-yyyy\");","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"    void getBy_emptyInput() {","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"        Parser parser \u003d new Parser(\"deadline test /by\");","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"        assertThrows(DukeException.class, () -\u003e parser.getBy(),","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"            \"The deadline and description for a task cannot be empty. \\n\\t\"","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"                + \"Please use the following format: deadline \u003cdescription\u003e /by \u003cdd-mm-yyyy\u003e\");","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"    void getBy_multipleBy() {","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"ys112"},"content":"        Parser parser \u003d new Parser(\"deadline test /by 23-12-2032 /by 2-2-2022\");","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"ys112"},"content":"        assertThrows(DukeException.class, () -\u003e parser.getBy(),","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"ys112"},"content":"            \"Invalid command for deadline. \\n\\t\"","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"ys112"},"content":"                + \"Please use the following format: deadline \u003cdescription\u003e /by \u003cdd-mm-yyyy\u003e\");","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"ys112"},"content":"    void getBy_success() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"ys112"},"content":"        Parser parser \u003d new Parser(\"deadline test /by 23-12-2032 0000\");","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"ys112"},"content":"        assertEquals(parser.getBy(), Task.getLocalDateTimeInput(\"23-12-2032 0000\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ys112":82}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":" * Tests for TaskList class.","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":" *","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":" * @see TaskList","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"class TaskListTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"     * Tests for addTask method.","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"    void addTask_success() {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"        Task task \u003d new Todo(\"test\");","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"        assertEquals(taskList.getSize(), 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"     * Tests for addTask failure for null added.","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"    void addTask_fail() {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"        assertFalse(taskList.addTask(null));","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"     * Tests for deleteTask method.","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"    void deleteTask_success() {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"        Task task \u003d new Todo(\"test\");","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"        assertEquals(taskList.deleteTask(0), task);","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"     * Tests for deleteTask method.","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"    void deleteTask_negativeIndex() {","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"        Task task \u003d new Todo(\"test\");","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.deleteTask(-100));","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"     * Tests for deleteTask failure for invalid index.","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"    void deleteTask_fail() {","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.deleteTask(100));","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ys112":68}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"deadline return book /by 3-4-2024","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"event project meeting /from 27-1-2024 /to 30-2-2024","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"find book","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"delete 3","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"event project meeting /from 27-1-2024 /to 30-2-2024","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"mark 3","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"unmark 3","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"todo","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"deadline","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"event","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"deadline return book Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"event LSRFM comeback /from 19 03 2023","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"mark dfuhyasf","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"mark 999","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"delete dhuiasdhuasd","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"delete 999","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"LSRFM","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ys112":21}},{"path":"text-ui-test/input3.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"todo borrow book","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"delete 3","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"todo","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"deadline","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"event","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"deadline return book Sunday","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"event LSRFM comeback /from 19 Feb 2023","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"mark dfuhyasf","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"mark 8","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"delete dhuiasdhuasd","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"delete 8","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"LSRFM","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"bye","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"ys112":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ys112":1,"-":20}}]
