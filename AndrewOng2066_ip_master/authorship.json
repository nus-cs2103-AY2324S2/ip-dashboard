[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"T | 0 | read book","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"D | 1 | return book | now","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"D | 0 | meeting | now","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"T | 0 | borrow book","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"AndrewOng2066":4}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"    public enum Action {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"        LIST,","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"        TODO,","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"        DEADLINE,","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"        EVENT,","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"        MARK,","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"        UNMARK,","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"        DELETE,","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"        BYE","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"    static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"//        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"      Hello! I\u0027m AndrewOng2066\");","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"      What can I do for you?\");","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"        String userInput \u003d sc.nextLine().trim();","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"        while (!userInput.equalsIgnoreCase(Action.BYE.toString())) {","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"            String[] splitInput \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"            try {","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"                if (splitInput[0].equalsIgnoreCase(Action.LIST.toString())) {","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"                    listMethod();","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"                } else if (splitInput[0].equalsIgnoreCase(Action.MARK.toString())) {","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"                    markTask(userInput);","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"                } else if (splitInput[0].equalsIgnoreCase(Action.UNMARK.toString())) {","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"                    unmarkTask(userInput);","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"                } else if (splitInput[0].equalsIgnoreCase(Action.TODO.toString())) {","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"                    addToDo(userInput);","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"                } else if (splitInput[0].equalsIgnoreCase(Action.DEADLINE.toString())) {","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"                    addDeadline(userInput);","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"                } else if (splitInput[0].equalsIgnoreCase(Action.EVENT.toString())) {","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"                    addEvent(userInput);","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"                } else if (splitInput[0].equalsIgnoreCase(Action.DELETE.toString())) {","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"                    deleteTask(userInput);","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"                } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"                    System.out.println(\"      I\u0027m sorry, I do not understand that.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":72,"author":{"gitId":"AndrewOng2066"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"AndrewOng2066"},"content":"            System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2024-01-23"},{"lineNumber":75,"author":{"gitId":"AndrewOng2066"},"content":"            userInput \u003d sc.nextLine().trim();","lastModifiedDate":"2024-01-23"},{"lineNumber":76,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":77,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":78,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2024-01-23"},{"lineNumber":79,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"      Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2024-01-23"},{"lineNumber":81,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":82,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":83,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"AndrewOng2066"},"content":"     * Lists down the list of Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"AndrewOng2066"},"content":"    public static void listMethod() {","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"      Here are the tasks in your list:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"AndrewOng2066"},"content":"        ArrayList\u003cTask\u003e allTasksFromFile \u003d getTasksFromFile(\"duke\");","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"AndrewOng2066"},"content":"        tasks \u003d allTasksFromFile;","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"AndrewOng2066"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-24"},{"lineNumber":91,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"AndrewOng2066"},"content":"            System.out.println(\"      \" + (i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":93,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":94,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":95,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":96,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"AndrewOng2066"},"content":"     * Adds a new ToDo.","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"AndrewOng2066"},"content":"     * Adds the new ToDo inside the file.","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"AndrewOng2066"},"content":"     * @param input the description of the ToDo.","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"AndrewOng2066"},"content":"     * @throws DukeException If missing the description.","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"AndrewOng2066"},"content":"    public static void addToDo(String input) throws DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":104,"author":{"gitId":"AndrewOng2066"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2024-01-23"},{"lineNumber":105,"author":{"gitId":"AndrewOng2066"},"content":"        if (splitInput.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":106,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"      Missing the description!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":107,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":108,"author":{"gitId":"AndrewOng2066"},"content":"        String name \u003d \"\";","lastModifiedDate":"2024-01-22"},{"lineNumber":109,"author":{"gitId":"AndrewOng2066"},"content":"        for (int i \u003d 1; i \u003c splitInput.length; i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":110,"author":{"gitId":"AndrewOng2066"},"content":"            name +\u003d splitInput[i] + \" \";","lastModifiedDate":"2024-01-22"},{"lineNumber":111,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":112,"author":{"gitId":"AndrewOng2066"},"content":"        ToDo newToDo\u003d new ToDo(name.trim(), false);","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"AndrewOng2066"},"content":"        tasks.add(newToDo);","lastModifiedDate":"2024-01-24"},{"lineNumber":114,"author":{"gitId":"AndrewOng2066"},"content":"        ArrayList\u003cTask\u003e newToDoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"AndrewOng2066"},"content":"        newToDoList.add(newToDo);","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"AndrewOng2066"},"content":"        storeArrayListToFile(\"duke\", newToDoList, false);//TODO Add the file function here","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"      Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":118,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"      \" + newToDo.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":119,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"      Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":120,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":121,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":122,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":123,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"AndrewOng2066"},"content":"     * Adds a new Deadline.","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"AndrewOng2066"},"content":"     * Adds the new Deadline inside the file.","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"AndrewOng2066"},"content":"     * @param input the description and \u0027by\u0027 of the Deadline.","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"AndrewOng2066"},"content":"     * @throws DukeException If missing the description or \u0027by\u0027.","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"AndrewOng2066"},"content":"    public static void addDeadline(String input) throws DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":131,"author":{"gitId":"AndrewOng2066"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2024-01-23"},{"lineNumber":132,"author":{"gitId":"AndrewOng2066"},"content":"        if (splitInput.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":133,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"      Missing the description!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":134,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":135,"author":{"gitId":"AndrewOng2066"},"content":"        String[] deadlineSplit \u003d input.split(\"/\");","lastModifiedDate":"2024-01-23"},{"lineNumber":136,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":137,"author":{"gitId":"AndrewOng2066"},"content":"        if (deadlineSplit.length \u003c 2) {","lastModifiedDate":"2024-01-23"},{"lineNumber":138,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"      Invalid format for new Deadline!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":139,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":140,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":141,"author":{"gitId":"AndrewOng2066"},"content":"        String name \u003d deadlineSplit[0].substring(9).trim();","lastModifiedDate":"2024-01-22"},{"lineNumber":142,"author":{"gitId":"AndrewOng2066"},"content":"        String by \u003d deadlineSplit[1].substring(3).trim();","lastModifiedDate":"2024-01-22"},{"lineNumber":143,"author":{"gitId":"AndrewOng2066"},"content":"        Deadline newDeadline \u003d new Deadline(name,false, by);","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"AndrewOng2066"},"content":"        tasks.add(newDeadline);","lastModifiedDate":"2024-01-24"},{"lineNumber":145,"author":{"gitId":"AndrewOng2066"},"content":"        ArrayList\u003cTask\u003e newDeadlineList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":146,"author":{"gitId":"AndrewOng2066"},"content":"        newDeadlineList.add(newDeadline);","lastModifiedDate":"2024-01-29"},{"lineNumber":147,"author":{"gitId":"AndrewOng2066"},"content":"        storeArrayListToFile(\"duke\", newDeadlineList, false);//TODO Add the file function here","lastModifiedDate":"2024-01-30"},{"lineNumber":148,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"      Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":149,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"      \" + newDeadline.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":150,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"      Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":151,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":152,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":153,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":154,"author":{"gitId":"AndrewOng2066"},"content":"     * Adds a new Event.","lastModifiedDate":"2024-01-30"},{"lineNumber":155,"author":{"gitId":"AndrewOng2066"},"content":"     * Adds the new Event inside the file.","lastModifiedDate":"2024-01-30"},{"lineNumber":156,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":157,"author":{"gitId":"AndrewOng2066"},"content":"     * @param input the description, \u0027from\u0027, and \u0027to\u0027 of the Event.","lastModifiedDate":"2024-01-30"},{"lineNumber":158,"author":{"gitId":"AndrewOng2066"},"content":"     * @throws DukeException if missing the description, \u0027from\u0027 or \u0027to\u0027.","lastModifiedDate":"2024-01-30"},{"lineNumber":159,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":160,"author":{"gitId":"AndrewOng2066"},"content":"    public static void addEvent(String input) throws DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":161,"author":{"gitId":"AndrewOng2066"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2024-01-23"},{"lineNumber":162,"author":{"gitId":"AndrewOng2066"},"content":"        if (splitInput.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":163,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"      Missing the description!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":164,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":165,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":166,"author":{"gitId":"AndrewOng2066"},"content":"        String[] eventSplit \u003d input.split(\"/\");","lastModifiedDate":"2024-01-23"},{"lineNumber":167,"author":{"gitId":"AndrewOng2066"},"content":"        if (eventSplit.length \u003c 3) {","lastModifiedDate":"2024-01-23"},{"lineNumber":168,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"      Invalid format for new Event!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":169,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":170,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":171,"author":{"gitId":"AndrewOng2066"},"content":"        String name \u003d eventSplit[0].substring(6).trim();","lastModifiedDate":"2024-01-22"},{"lineNumber":172,"author":{"gitId":"AndrewOng2066"},"content":"        String start \u003d eventSplit[1].substring(5).trim();","lastModifiedDate":"2024-01-22"},{"lineNumber":173,"author":{"gitId":"AndrewOng2066"},"content":"        String end \u003d eventSplit[2].substring(3).trim();","lastModifiedDate":"2024-01-22"},{"lineNumber":174,"author":{"gitId":"AndrewOng2066"},"content":"        Event newEvent \u003d new Event(name, false, start, end);","lastModifiedDate":"2024-01-29"},{"lineNumber":175,"author":{"gitId":"AndrewOng2066"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2024-01-24"},{"lineNumber":176,"author":{"gitId":"AndrewOng2066"},"content":"        ArrayList\u003cTask\u003e newEventList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":177,"author":{"gitId":"AndrewOng2066"},"content":"        newEventList.add(newEvent);","lastModifiedDate":"2024-01-29"},{"lineNumber":178,"author":{"gitId":"AndrewOng2066"},"content":"        storeArrayListToFile(\"duke\", newEventList, false);//TODO Add the file function here","lastModifiedDate":"2024-01-30"},{"lineNumber":179,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"      Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":180,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"      \" + newEvent.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":181,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"      Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":182,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":183,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":184,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":185,"author":{"gitId":"AndrewOng2066"},"content":"     * Marks a task for being completed.","lastModifiedDate":"2024-01-30"},{"lineNumber":186,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":187,"author":{"gitId":"AndrewOng2066"},"content":"     * @param input the index of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":188,"author":{"gitId":"AndrewOng2066"},"content":"     * @throws DukeException If the size of tasks is 0, or no task is being selected.","lastModifiedDate":"2024-01-30"},{"lineNumber":189,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":190,"author":{"gitId":"AndrewOng2066"},"content":"    public static void markTask(String input) throws DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":191,"author":{"gitId":"AndrewOng2066"},"content":"        String splitInput[] \u003d input.split(\" \");","lastModifiedDate":"2024-01-23"},{"lineNumber":192,"author":{"gitId":"AndrewOng2066"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":193,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"      No task at the moment.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":194,"author":{"gitId":"AndrewOng2066"},"content":"        } else if (splitInput.length \u003c 2) {","lastModifiedDate":"2024-01-23"},{"lineNumber":195,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"      Please select the task.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":196,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":197,"author":{"gitId":"AndrewOng2066"},"content":"        int choiceMark;","lastModifiedDate":"2024-01-24"},{"lineNumber":198,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":199,"author":{"gitId":"AndrewOng2066"},"content":"            choiceMark \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":200,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":201,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"      Please enter a valid integer value.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":202,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":203,"author":{"gitId":"AndrewOng2066"},"content":"        if (choiceMark \u003c\u003d tasks.size() \u0026\u0026 choiceMark \u003e 0) {","lastModifiedDate":"2024-01-25"},{"lineNumber":204,"author":{"gitId":"AndrewOng2066"},"content":"            tasks.get(choiceMark - 1).markAsDone();","lastModifiedDate":"2024-01-23"},{"lineNumber":205,"author":{"gitId":"AndrewOng2066"},"content":"            storeArrayListToFile(\"duke\", tasks, true);","lastModifiedDate":"2024-01-30"},{"lineNumber":206,"author":{"gitId":"AndrewOng2066"},"content":"            System.out.println(\"      Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":207,"author":{"gitId":"AndrewOng2066"},"content":"            System.out.println(\"        \" + tasks.get(choiceMark - 1).toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":208,"author":{"gitId":"AndrewOng2066"},"content":"        } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":209,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"      Invalid choice.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":210,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":211,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":212,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":213,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":214,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":215,"author":{"gitId":"AndrewOng2066"},"content":"     * Unmarks a task for being incomplete.","lastModifiedDate":"2024-01-30"},{"lineNumber":216,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":217,"author":{"gitId":"AndrewOng2066"},"content":"     * @param input the index of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":218,"author":{"gitId":"AndrewOng2066"},"content":"     * @throws DukeException If the size of tasks is 0, or no task is being selected.","lastModifiedDate":"2024-01-30"},{"lineNumber":219,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":220,"author":{"gitId":"AndrewOng2066"},"content":"    public static void unmarkTask(String input) throws DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":221,"author":{"gitId":"AndrewOng2066"},"content":"        String splitInput[] \u003d input.split(\" \");","lastModifiedDate":"2024-01-23"},{"lineNumber":222,"author":{"gitId":"AndrewOng2066"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":223,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"      No task at the moment.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":224,"author":{"gitId":"AndrewOng2066"},"content":"        } else if (splitInput.length \u003c 2) {","lastModifiedDate":"2024-01-23"},{"lineNumber":225,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"      Please select the task.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":226,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":227,"author":{"gitId":"AndrewOng2066"},"content":"        int choiceUnmark;","lastModifiedDate":"2024-01-24"},{"lineNumber":228,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":229,"author":{"gitId":"AndrewOng2066"},"content":"            choiceUnmark \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":230,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":231,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"      Please enter a valid integer value.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":232,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":233,"author":{"gitId":"AndrewOng2066"},"content":"        if (choiceUnmark \u003c\u003d tasks.size() \u0026\u0026 choiceUnmark \u003e 0) {","lastModifiedDate":"2024-01-25"},{"lineNumber":234,"author":{"gitId":"AndrewOng2066"},"content":"            tasks.get(choiceUnmark - 1).markAsUndone();","lastModifiedDate":"2024-01-24"},{"lineNumber":235,"author":{"gitId":"AndrewOng2066"},"content":"            storeArrayListToFile(\"duke\", tasks, true);","lastModifiedDate":"2024-01-30"},{"lineNumber":236,"author":{"gitId":"AndrewOng2066"},"content":"            System.out.println(\"      OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":237,"author":{"gitId":"AndrewOng2066"},"content":"//            System.out.println(\"        \" + \"[ ] \" + tasks.get(choiceUnmark - 1).toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":238,"author":{"gitId":"AndrewOng2066"},"content":"            System.out.println(\"        \" + tasks.get(choiceUnmark - 1).toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":239,"author":{"gitId":"AndrewOng2066"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":240,"author":{"gitId":"AndrewOng2066"},"content":"            System.out.println(\"      Invalid choice\");","lastModifiedDate":"2024-01-24"},{"lineNumber":241,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":242,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":243,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":244,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":245,"author":{"gitId":"AndrewOng2066"},"content":"     * Deletes a task.","lastModifiedDate":"2024-01-30"},{"lineNumber":246,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":247,"author":{"gitId":"AndrewOng2066"},"content":"     * @param input the index of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":248,"author":{"gitId":"AndrewOng2066"},"content":"     * @throws DukeException If the size of tasks is 0, or no task is being selected.","lastModifiedDate":"2024-01-30"},{"lineNumber":249,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":250,"author":{"gitId":"AndrewOng2066"},"content":"    public static void deleteTask(String input) throws DukeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":251,"author":{"gitId":"AndrewOng2066"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":252,"author":{"gitId":"AndrewOng2066"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-24"},{"lineNumber":253,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"      No task at the moment.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":254,"author":{"gitId":"AndrewOng2066"},"content":"        } else if (splitInput.length \u003c 2) {","lastModifiedDate":"2024-01-24"},{"lineNumber":255,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"      Please select the task.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":256,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":257,"author":{"gitId":"AndrewOng2066"},"content":"        int choiceDelete;","lastModifiedDate":"2024-01-24"},{"lineNumber":258,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":259,"author":{"gitId":"AndrewOng2066"},"content":"            choiceDelete \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":260,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":261,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"      Please enter a valid integer value.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":262,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":263,"author":{"gitId":"AndrewOng2066"},"content":"        if (choiceDelete \u003c\u003d tasks.size() \u0026\u0026 choiceDelete \u003e 0) {","lastModifiedDate":"2024-01-25"},{"lineNumber":264,"author":{"gitId":"AndrewOng2066"},"content":"            Task deletedTask \u003d tasks.get(choiceDelete - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":265,"author":{"gitId":"AndrewOng2066"},"content":"            tasks.remove(choiceDelete - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":266,"author":{"gitId":"AndrewOng2066"},"content":"            storeArrayListToFile(\"duke\", tasks, true);","lastModifiedDate":"2024-01-30"},{"lineNumber":267,"author":{"gitId":"AndrewOng2066"},"content":"            System.out.println(\"      Noted, I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":268,"author":{"gitId":"AndrewOng2066"},"content":"            System.out.println(\"      \" + deletedTask.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":269,"author":{"gitId":"AndrewOng2066"},"content":"            System.out.println(\"      Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":270,"author":{"gitId":"AndrewOng2066"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":271,"author":{"gitId":"AndrewOng2066"},"content":"            System.out.println(\"      Invalid choice\");","lastModifiedDate":"2024-01-23"},{"lineNumber":272,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":273,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":274,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":275,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":276,"author":{"gitId":"AndrewOng2066"},"content":"     * Load the data into a txt file","lastModifiedDate":"2024-01-29"},{"lineNumber":277,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":278,"author":{"gitId":"AndrewOng2066"},"content":"     * @param fileName name of the txt file","lastModifiedDate":"2024-01-29"},{"lineNumber":279,"author":{"gitId":"AndrewOng2066"},"content":"     * @param tasks context to be stored in the txt file","lastModifiedDate":"2024-01-29"},{"lineNumber":280,"author":{"gitId":"AndrewOng2066"},"content":"     * @param isOverwrite check if we need to delete the current context in the txt file","lastModifiedDate":"2024-01-29"},{"lineNumber":281,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":282,"author":{"gitId":"AndrewOng2066"},"content":"    static void storeArrayListToFile(String fileName, ArrayList\u003cTask\u003e tasks, boolean isOverwrite) {","lastModifiedDate":"2024-01-30"},{"lineNumber":283,"author":{"gitId":"AndrewOng2066"},"content":"        FileManager fileManager \u003d new FileManager(fileName);","lastModifiedDate":"2024-01-29"},{"lineNumber":284,"author":{"gitId":"AndrewOng2066"},"content":"        fileManager.writeArrayListToFile(tasks, isOverwrite);","lastModifiedDate":"2024-01-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":286,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":287,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":288,"author":{"gitId":"AndrewOng2066"},"content":"     * Gets the list of Tasks from the file.","lastModifiedDate":"2024-01-30"},{"lineNumber":289,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":290,"author":{"gitId":"AndrewOng2066"},"content":"     * @param filename the txt file.","lastModifiedDate":"2024-01-30"},{"lineNumber":291,"author":{"gitId":"AndrewOng2066"},"content":"     * @return an ArrayList of Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":292,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":293,"author":{"gitId":"AndrewOng2066"},"content":"    static ArrayList\u003cTask\u003e getTasksFromFile(String filename) {","lastModifiedDate":"2024-01-29"},{"lineNumber":294,"author":{"gitId":"AndrewOng2066"},"content":"        FileManager fileManager \u003d new FileManager(filename);","lastModifiedDate":"2024-01-29"},{"lineNumber":295,"author":{"gitId":"AndrewOng2066"},"content":"        return fileManager.loadTasksFromFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":296,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":297,"author":{"gitId":"AndrewOng2066"},"content":"    ","lastModifiedDate":"2024-01-29"},{"lineNumber":298,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":299,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":301,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":302,"author":{"gitId":"AndrewOng2066"},"content":"class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":303,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":304,"author":{"gitId":"AndrewOng2066"},"content":"    private String description;","lastModifiedDate":"2024-01-22"},{"lineNumber":305,"author":{"gitId":"AndrewOng2066"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":306,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":307,"author":{"gitId":"AndrewOng2066"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-01-29"},{"lineNumber":308,"author":{"gitId":"AndrewOng2066"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-22"},{"lineNumber":309,"author":{"gitId":"AndrewOng2066"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":310,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":311,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":312,"author":{"gitId":"AndrewOng2066"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-22"},{"lineNumber":313,"author":{"gitId":"AndrewOng2066"},"content":"        return description;","lastModifiedDate":"2024-01-22"},{"lineNumber":314,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":315,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":316,"author":{"gitId":"AndrewOng2066"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":317,"author":{"gitId":"AndrewOng2066"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":318,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":319,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":320,"author":{"gitId":"AndrewOng2066"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":321,"author":{"gitId":"AndrewOng2066"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":322,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":323,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":324,"author":{"gitId":"AndrewOng2066"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":325,"author":{"gitId":"AndrewOng2066"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":326,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":327,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-22"},{"lineNumber":328,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":329,"author":{"gitId":"AndrewOng2066"},"content":"class ToDo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":330,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":331,"author":{"gitId":"AndrewOng2066"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2024-01-29"},{"lineNumber":332,"author":{"gitId":"AndrewOng2066"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-29"},{"lineNumber":333,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":334,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":335,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":336,"author":{"gitId":"AndrewOng2066"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":337,"author":{"gitId":"AndrewOng2066"},"content":"        return \"[T][\"+ super.getStatusIcon() +\"] \" + super.getDescription();","lastModifiedDate":"2024-01-24"},{"lineNumber":338,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":339,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-22"},{"lineNumber":340,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":341,"author":{"gitId":"AndrewOng2066"},"content":"class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":342,"author":{"gitId":"AndrewOng2066"},"content":"    String by;","lastModifiedDate":"2024-01-22"},{"lineNumber":343,"author":{"gitId":"AndrewOng2066"},"content":"    public Deadline(String description, boolean isDone, String by) {","lastModifiedDate":"2024-01-29"},{"lineNumber":344,"author":{"gitId":"AndrewOng2066"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-29"},{"lineNumber":345,"author":{"gitId":"AndrewOng2066"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-22"},{"lineNumber":346,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":347,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":348,"author":{"gitId":"AndrewOng2066"},"content":"    public String getBy() {","lastModifiedDate":"2024-01-22"},{"lineNumber":349,"author":{"gitId":"AndrewOng2066"},"content":"        return this.by;","lastModifiedDate":"2024-01-22"},{"lineNumber":350,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":351,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":352,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":353,"author":{"gitId":"AndrewOng2066"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":354,"author":{"gitId":"AndrewOng2066"},"content":"        return \"[D][\"+ super.getStatusIcon() +\"] \" + super.getDescription() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":355,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":356,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-22"},{"lineNumber":357,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":358,"author":{"gitId":"AndrewOng2066"},"content":"class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":359,"author":{"gitId":"AndrewOng2066"},"content":"    String start;","lastModifiedDate":"2024-01-22"},{"lineNumber":360,"author":{"gitId":"AndrewOng2066"},"content":"    String end;","lastModifiedDate":"2024-01-22"},{"lineNumber":361,"author":{"gitId":"AndrewOng2066"},"content":"    public Event(String description, boolean isDone, String start, String end) {","lastModifiedDate":"2024-01-29"},{"lineNumber":362,"author":{"gitId":"AndrewOng2066"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-29"},{"lineNumber":363,"author":{"gitId":"AndrewOng2066"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-22"},{"lineNumber":364,"author":{"gitId":"AndrewOng2066"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-22"},{"lineNumber":365,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":366,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":367,"author":{"gitId":"AndrewOng2066"},"content":"    public String getStart() {","lastModifiedDate":"2024-01-22"},{"lineNumber":368,"author":{"gitId":"AndrewOng2066"},"content":"        return this.start;","lastModifiedDate":"2024-01-22"},{"lineNumber":369,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":370,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":371,"author":{"gitId":"AndrewOng2066"},"content":"    public String getEnd() {","lastModifiedDate":"2024-01-22"},{"lineNumber":372,"author":{"gitId":"AndrewOng2066"},"content":"        return this.end;","lastModifiedDate":"2024-01-22"},{"lineNumber":373,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":374,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":375,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":376,"author":{"gitId":"AndrewOng2066"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":377,"author":{"gitId":"AndrewOng2066"},"content":"        return \"[E][\"+ super.getStatusIcon() +\"] \" + super.getDescription() + \" (from: \" + this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":379,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-01-22"},{"lineNumber":380,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"AndrewOng2066":369,"-":11}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"class DukeException extends Exception{","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"        super(message);","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"AndrewOng2066":5}},{"path":"src/main/java/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"import java.io.*;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"public class FileManager {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"    static final Path DIRECTORY_PATH \u003d Paths.get(\"./data\");","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"    private String fileName;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"    private Path filePath;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"    public FileManager(String fileName) {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"        filePath \u003d DIRECTORY_PATH.resolve(fileName + \".txt\");","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"        createFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"     * Creates directory and file if it doesn\u0027t exist.","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"    private void createFile() {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"            if (!Files.exists(DIRECTORY_PATH)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"                Files.createDirectories(DIRECTORY_PATH);","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"            if (!Files.exists(filePath)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (IOException io) {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"            System.out.println(\"There is an error when creating file. The error is \" + io.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"     * Writes tasks to the file.","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"     * @param tasks the tasks that need to be written.","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"     * @param isOverwrite True for overwrite the previous data. False for appending the data.","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"    void writeArrayListToFile(ArrayList\u003cTask\u003e tasks, boolean isOverwrite) {","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"            if (isOverwrite) {","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"                Files.write(filePath, convertTasksToString(tasks).getBytes(), StandardOpenOption.CREATE, StandardOpenOption.WRITE, StandardOpenOption.TRUNCATE_EXISTING);","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"                Files.write(filePath, convertTasksToString(tasks).getBytes(), StandardOpenOption.CREATE, StandardOpenOption.APPEND);","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (IOException io) {","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"            System.out.println(\"There is an error when writing to file. The error is \" + io.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"     * Loads Tasks from the file.","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"     * @return an ArrayList of Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"    ArrayList\u003cTask\u003e loadTasksFromFile() {","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"            List\u003cString\u003e fileContentLines \u003d Files.readAllLines(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"            result \u003d convertStringListToTasks(fileContentLines);","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (IOException io) {","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"            System.out.println(\"There is an error when reading the file.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"        return result;","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"AndrewOng2066"},"content":"     * Converts an ArrayList of Tasks to String.","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"AndrewOng2066"},"content":"     * @param tasks An arrayList of Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"AndrewOng2066"},"content":"     * @return String format of the list of Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"AndrewOng2066"},"content":"    private String convertTasksToString(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"AndrewOng2066"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"AndrewOng2066"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"AndrewOng2066"},"content":"//            result.append(task.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"AndrewOng2066"},"content":"//            result.append(System.getProperty(\"line.separator\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"AndrewOng2066"},"content":"            if (task instanceof ToDo) {","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(\"T | \");","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(task.getStatusIcon().equals(\"X\") ? \"1 | \" : \"0 | \");","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(task.getDescription());","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(System.getProperty(\"line.separator\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"AndrewOng2066"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(\"D | \");","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(task.getStatusIcon().equals(\"X\") ? \"1 | \" : \"0 | \");","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(task.getDescription() + \" | \");","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(((Deadline) task).getBy());","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(System.getProperty(\"line.separator\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"AndrewOng2066"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(\"D | \");","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(task.getStatusIcon().equals(\"X\") ? \"1 | \" : \"0 | \");","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(task.getDescription() + \" | \");","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(((Event) task).getStart() + \" | \");","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(((Event) task).getEnd());","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(System.getProperty(\"line.separator\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"AndrewOng2066"},"content":"        return result.toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"AndrewOng2066"},"content":"     * Converts the List of String to an ArrayList of Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"AndrewOng2066"},"content":"     * @param content the List of String to be converted.","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"AndrewOng2066"},"content":"     * @return an ArrayList of Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"AndrewOng2066"},"content":"    private ArrayList\u003cTask\u003e convertStringListToTasks(List\u003cString\u003e content) {","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"AndrewOng2066"},"content":"        ArrayList\u003cTask\u003e fileTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"AndrewOng2066"},"content":"        for (String i : content) {","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"AndrewOng2066"},"content":"            String[] stringAttributes \u003d i.split(\"\\\\|\");","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"AndrewOng2066"},"content":"            if (stringAttributes[0].trim().equals(\"T\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"AndrewOng2066"},"content":"                fileTasks.add(new ToDo(stringAttributes[2].trim(), stringAttributes[1].trim().equals(\"1\") ? true : false));","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"AndrewOng2066"},"content":"            } else if (stringAttributes[0].trim().equals(\"D\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"AndrewOng2066"},"content":"                fileTasks.add(new Deadline(stringAttributes[2].trim(), stringAttributes[1].trim().equals(\"1\") ? true : false, stringAttributes[3].trim()));","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"AndrewOng2066"},"content":"            } else if (stringAttributes[0].trim().equals(\"E\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"AndrewOng2066"},"content":"                fileTasks.add(new Event(stringAttributes[2].trim(), stringAttributes[1].trim().equals(\"1\") ? true : false, stringAttributes[3].trim(), stringAttributes[4].trim()));","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"AndrewOng2066"},"content":"        return fileTasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"AndrewOng2066"},"content":"     * Converts the String content to an ArrayList of Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"AndrewOng2066"},"content":"     * @param content the String content to be converted.","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"AndrewOng2066"},"content":"     * @return an ArrayList of Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":134,"author":{"gitId":"AndrewOng2066"},"content":"    private ArrayList\u003cTask\u003e convertStringToTasks(String content) {","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"AndrewOng2066"},"content":"        String[] individualStringTask \u003d content.trim().split(System.lineSeparator());","lastModifiedDate":"2024-01-29"},{"lineNumber":136,"author":{"gitId":"AndrewOng2066"},"content":"        ArrayList\u003cTask\u003e fileTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"AndrewOng2066"},"content":"        for (String i : individualStringTask) {","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"AndrewOng2066"},"content":"            String[] stringAttributes \u003d i.split(\"|\");","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"AndrewOng2066"},"content":"            if (stringAttributes[0].equals(\"T\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":140,"author":{"gitId":"AndrewOng2066"},"content":"                fileTasks.add(new ToDo(stringAttributes[2].trim(), stringAttributes[1].equals(\"1\") ? true : false));","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"AndrewOng2066"},"content":"            } else if (stringAttributes[0].equals(\"D\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"AndrewOng2066"},"content":"                fileTasks.add(new Deadline(stringAttributes[2].trim(), stringAttributes[1].equals(\"1\") ? true : false, stringAttributes[3].trim()));","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"AndrewOng2066"},"content":"            } else if (stringAttributes[0].equals(\"E\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"AndrewOng2066"},"content":"                fileTasks.add(new Event(stringAttributes[2].trim(), stringAttributes[1].equals(\"1\") ? true : false, stringAttributes[3].trim(), stringAttributes[4].trim()));","lastModifiedDate":"2024-01-29"},{"lineNumber":145,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":146,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":147,"author":{"gitId":"AndrewOng2066"},"content":"        return fileTasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":148,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":149,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":150,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":151,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"AndrewOng2066":151}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"todo read book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"todo return book","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"AndrewOng2066":3}},{"path":"text-ui-test/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"todo read book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"todo","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"todo join sports club","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"mark 4","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"deadline","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"deadline return book","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"event","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"event meeting","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"event meeting /from 5pm","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"mark 5","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"mark 7","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"mark","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"mark 9","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"unmark","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"unmark 4","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"unmark 9","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"delete","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"delete 8","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"delete 6","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"blah","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"AndrewOng2066":30}},{"path":"text-ui-test/runtest2.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"@ECHO OFF","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"REM delete output from previous run","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"    exit /b 1","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":")","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"java -classpath ..\\bin Duke \u003c input2.txt \u003e ACTUAL2.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"REM compare the output to the expected output","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"FC ACTUAL2.TXT EXPECTED2.TXT","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"AndrewOng2066":21}},{"path":"text-ui-test/runtest2.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"then","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"    mkdir ../bin","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"fi","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"# delete output from previous run","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"then","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"fi","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"then","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"    exit 1","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"fi","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"java -classpath ../bin Duke \u003c input2.txt \u003e ACTUAL2.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"# convert to UNIX format","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"cp EXPECTED2.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"dos2unix ACTUAL2.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"# compare the output to the expected output","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"diff ACTUAL2.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"then","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"    exit 0","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"else","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"    exit 1","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"fi","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"AndrewOng2066":38}}]
