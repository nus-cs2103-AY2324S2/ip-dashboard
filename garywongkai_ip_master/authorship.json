[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"garywongkai"},"content":"# Gluti project","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"garywongkai"},"content":"![Chatbot Mascot](https://github.com/garywongkai/ip/blob/branch-A-CodingStandard/src/main/data/Gluti.png)","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"garywongkai"},"content":"```","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"garywongkai"},"content":"Welcome to the Gluti chatbot!","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"garywongkai"},"content":"```","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"garywongkai"},"content":"## UML diagrams","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"garywongkai"},"content":"```mermaid","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"garywongkai"},"content":"classDiagram","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"garywongkai"},"content":"FileStorage \u003c-- Gluti : Initalises","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"garywongkai"},"content":"FileStorage --* Ui","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"garywongkai"},"content":"Ui \u003c-- Gluti : Calls","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"garywongkai"},"content":"Parser-- FileStorage : Link","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"garywongkai"},"content":"Ui --\u003e Parser : Calls","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"garywongkai"},"content":"Parser --\u003e Todo","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"garywongkai"},"content":"Parser --\u003e Deadline","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"garywongkai"},"content":"Parser --\u003e Event","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"garywongkai"},"content":"Task --|\u003e Todo : Inheritance","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"garywongkai"},"content":"Task--|\u003e Deadline: Inheritance","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"garywongkai"},"content":"Task--|\u003e Event: Inheritance","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"garywongkai"},"content":"class Gluti{   main()","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"garywongkai"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"garywongkai"},"content":"class Ui{   boolean isExit","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"garywongkai"},"content":"run()}","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"garywongkai"},"content":"class Parser{FileStorage fstorage","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"garywongkai"},"content":"boolean isExit","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"garywongkai"},"content":"parse(String)","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"garywongkai"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"garywongkai"},"content":"class FileStorage{ ArrayList\u003cTask\u003e taskList","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"garywongkai"},"content":"checkifexist()","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"garywongkai"},"content":"read(String)","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"garywongkai"},"content":"saveList(taskList)","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"garywongkai"},"content":"readList()","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"garywongkai"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"garywongkai"},"content":"class Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"garywongkai"},"content":"protected String description","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"garywongkai"},"content":"protected boolean isDone","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"garywongkai"},"content":"getStatusIcon()","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"garywongkai"},"content":"toString()","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"garywongkai"},"content":"setDone()","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"garywongkai"},"content":"setunDone()","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"garywongkai"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"garywongkai"},"content":"class Todo {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"garywongkai"},"content":"@Override toString()","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"garywongkai"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"garywongkai"},"content":"class Deadline {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"garywongkai"},"content":"protected String by","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"garywongkai"},"content":"validDate(String)","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"garywongkai"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"garywongkai"},"content":"class Event {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"garywongkai"},"content":"String[] date;","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"garywongkai"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"garywongkai"},"content":"```","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":64,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":66,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":68,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":70,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":74,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":76,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"}],"authorContributionMap":{"garywongkai":63,"-":14}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"garywongkai"},"content":"    mainClass.set(\"Gluti/Gluti\")","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"garywongkai":1,"-":41}},{"path":"src/main/data/Gluti.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"garywongkai"},"content":"[D][X] meeting (by: Nov 11 2013)","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"garywongkai"},"content":"[D][ ] meeting (by: Dec 29 2023)","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"garywongkai"},"content":"[T][ ] meeting","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"garywongkai"},"content":"[T][X] meeting","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"garywongkai":4}},{"path":"src/main/java/Gluti/Gluti.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garywongkai"},"content":"package Gluti;","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"garywongkai"},"content":"import Gluti.helpers.FileStorage;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"garywongkai"},"content":"import Gluti.helpers.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"garywongkai"},"content":"import Gluti.utils.GlutiException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"garywongkai"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"garywongkai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"garywongkai"},"content":" * The main program that is ran, and creates the FileStorage object","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"garywongkai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"garywongkai"},"content":"public class Gluti {","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"garywongkai"},"content":"    public static void main(String[] args) throws GlutiException, IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"garywongkai"},"content":"        FileStorage fStorage \u003d new FileStorage();","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"garywongkai"},"content":"        String logo \u003d \"Hello! I\u0027m Gluti\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"garywongkai"},"content":"                \"What can I do for you?\";","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"garywongkai"},"content":"        String end \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"garywongkai"},"content":"        System.out.println(logo);","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"garywongkai"},"content":"        Ui ui \u003d new Ui(fStorage);","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"garywongkai"},"content":"        ui.run();","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"garywongkai"},"content":"        System.out.println(end);","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"garywongkai"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"garywongkai"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"garywongkai":23}},{"path":"src/main/java/Gluti/helpers/FileStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garywongkai"},"content":"package Gluti.helpers;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"garywongkai"},"content":"import Gluti.utils.*;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"garywongkai"},"content":"import java.io.*;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"garywongkai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"garywongkai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"garywongkai"},"content":" * Provides a Storage interface that is shared among the program","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"garywongkai"},"content":" * Loads tasks from file when program is ran","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"garywongkai"},"content":" * and saves the tasks to file when terminated correctly","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"garywongkai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"garywongkai"},"content":"public class FileStorage {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"garywongkai"},"content":"    protected static final File DATA_FOLDER \u003d new File(\"./src/main/data\");","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"garywongkai"},"content":"    protected static final File DATA_FILE \u003d new File(\"./src/main/data/Gluti.txt\");","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"garywongkai"},"content":"    protected ArrayList\u003cTask\u003e tasklist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"garywongkai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"garywongkai"},"content":"     * Initialises a FileStorage instance","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"garywongkai"},"content":"     * Check if there already exists a file, load tasks from file if exists","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"garywongkai"},"content":"     * Creates a new file if !exists","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"garywongkai"},"content":"     * @throws GlutiException IO Exceptions","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"garywongkai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"garywongkai"},"content":"    public FileStorage() throws GlutiException {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"garywongkai"},"content":"        checkifexist();","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"garywongkai"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"garywongkai"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(DATA_FILE));","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"garywongkai"},"content":"            String line \u003d reader.readLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"garywongkai"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"garywongkai"},"content":"                tasklist.add(read(line));","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"garywongkai"},"content":"                line \u003d reader.readLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"garywongkai"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"garywongkai"},"content":"            reader.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"garywongkai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"garywongkai"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"garywongkai"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"garywongkai"},"content":"//        System.out.println(\"Done mounting tasks\");","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"garywongkai"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"garywongkai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"garywongkai"},"content":"     * Interprets the tasks loaded from file","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"garywongkai"},"content":"     * @param line the line read from File","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"garywongkai"},"content":"     * @return the Task interpreted from program","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"garywongkai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"garywongkai"},"content":"    public Task read(String line) {","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"garywongkai"},"content":"        char tasktype \u003d line.charAt(1);","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"garywongkai"},"content":"        char completion \u003d line.charAt(4);","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"garywongkai"},"content":"        Task nextTask \u003d null;","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"garywongkai"},"content":"        String description;","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"garywongkai"},"content":"        int seperator;","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"garywongkai"},"content":"        switch (tasktype) {","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"garywongkai"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"garywongkai"},"content":"                description \u003d line.substring(7);","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"garywongkai"},"content":"                nextTask \u003d new Todo(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"garywongkai"},"content":"                if (completion \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"garywongkai"},"content":"                    nextTask.setDone();","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"garywongkai"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"garywongkai"},"content":"                break;","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"garywongkai"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"garywongkai"},"content":"                seperator \u003d line.indexOf(\"(by:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"garywongkai"},"content":"                description \u003d line.substring(7, seperator);","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"garywongkai"},"content":"                String by \u003d line.substring(seperator + 4, line.length() - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"garywongkai"},"content":"                nextTask \u003d new Deadline(description, by);","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"garywongkai"},"content":"                if (completion \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"garywongkai"},"content":"                    nextTask.setDone();","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"garywongkai"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"garywongkai"},"content":"                break;","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"garywongkai"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"garywongkai"},"content":"                seperator \u003d line.indexOf(\"(from: \");","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"garywongkai"},"content":"                description \u003d line.substring(7, seperator);","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"garywongkai"},"content":"                String[] date \u003d line.substring(seperator + 6, line.length() - 1).split(\"to:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"garywongkai"},"content":"                nextTask \u003d new Event(description, date[0],date[1]);","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"garywongkai"},"content":"                if (completion \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"garywongkai"},"content":"                    nextTask.setDone();","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"garywongkai"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"garywongkai"},"content":"                break;","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"garywongkai"},"content":"            default:","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"garywongkai"},"content":"                nextTask \u003d null;","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"garywongkai"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"garywongkai"},"content":"        return nextTask;","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"garywongkai"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"garywongkai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"garywongkai"},"content":"     * Checks and creates the directory and file if there is no such directory or file","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"garywongkai"},"content":"     * @throws GlutiException IO Errors","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"garywongkai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"garywongkai"},"content":"    private void checkifexist() throws GlutiException {","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"garywongkai"},"content":"        if (!DATA_FILE.exists()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"garywongkai"},"content":"            if (!DATA_FOLDER.exists()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"garywongkai"},"content":"                DATA_FOLDER.mkdirs();","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"garywongkai"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"garywongkai"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"garywongkai"},"content":"                DATA_FILE.createNewFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"garywongkai"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"garywongkai"},"content":"                throw new GlutiException(\"Gluti detects IO Error!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"garywongkai"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"garywongkai"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"garywongkai"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"garywongkai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"garywongkai"},"content":"     * Saves the TaskList onto a file (Called during termination)","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"garywongkai"},"content":"     * @param newTasks saved tasks from program","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"garywongkai"},"content":"     * @throws GlutiException IO Errors","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"garywongkai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"garywongkai"},"content":"    public void saveList(ArrayList\u003cTask\u003e newTasks) throws GlutiException {","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"garywongkai"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"garywongkai"},"content":"            FileWriter fileWriter \u003d new FileWriter(DATA_FILE);","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"garywongkai"},"content":"            StringBuilder tasks \u003d new StringBuilder();","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"garywongkai"},"content":"            for (Task newTask : newTasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"garywongkai"},"content":"                tasks.append(newTask).append(System.lineSeparator());","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"garywongkai"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"garywongkai"},"content":"            fileWriter.write(tasks.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"garywongkai"},"content":"            fileWriter.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"garywongkai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"garywongkai"},"content":"            throw new GlutiException(\"Gluti detects IO Error!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"garywongkai"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"garywongkai"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"garywongkai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"garywongkai"},"content":"     * Returns the TaskList","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"garywongkai"},"content":"     * @return List of Tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"garywongkai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"garywongkai"},"content":"    public ArrayList\u003cTask\u003e readList() {","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"garywongkai"},"content":"        return tasklist;","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"garywongkai"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"garywongkai"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"garywongkai":132}},{"path":"src/main/java/Gluti/helpers/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garywongkai"},"content":"package Gluti.helpers;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"garywongkai"},"content":"import Gluti.utils.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"garywongkai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"garywongkai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"garywongkai"},"content":" * An Interface to interpret user input and call relevant functions","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"garywongkai"},"content":" * commands are called from UI to perform tasks (Acts as the parser and response)","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"garywongkai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"garywongkai"},"content":"public class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"garywongkai"},"content":"    private FileStorage fstorage;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"garywongkai"},"content":"    private boolean isExit;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"garywongkai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"garywongkai"},"content":"     * Initialises a Parser instance","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"garywongkai"},"content":"     * @param fstorage loads and writes tasks from/to data","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"garywongkai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"garywongkai"},"content":"    public Parser(FileStorage fstorage) {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"garywongkai"},"content":"        this.fstorage \u003d fstorage;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"garywongkai"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"garywongkai"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"garywongkai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"garywongkai"},"content":"     * Returns the current status of the program","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"garywongkai"},"content":"     * @return isExit to allow UI to know if the program is still running for it to print the exit message","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"garywongkai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"garywongkai"},"content":"    public boolean isLooping() {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"garywongkai"},"content":"        return this.isExit;","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"garywongkai"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"garywongkai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"garywongkai"},"content":"     * Parsers the user inputs and perform relevant tasks accordingly","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"garywongkai"},"content":"     * @param word The line read from user input","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"garywongkai"},"content":"     * @throws GlutiException Caught exceptions from Tasks subclasses","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"garywongkai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"garywongkai"},"content":"    public void parse(String word) throws GlutiException {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"garywongkai"},"content":"        ArrayList\u003cTask\u003e storage \u003d fstorage.readList();","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"garywongkai"},"content":"        String function \u003d word.split(\" \")[0].toLowerCase();","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"garywongkai"},"content":"            String[] input \u003d word.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"garywongkai"},"content":"            function \u003d input[0].toLowerCase();","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"garywongkai"},"content":"            switch (function) {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"garywongkai"},"content":"                case \"bye\":","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"garywongkai"},"content":"                    this.isExit \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"garywongkai"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"garywongkai"},"content":"                case \"list\":","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"garywongkai"},"content":"                    int num \u003d 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"garywongkai"},"content":"                    if (!storage.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"garywongkai"},"content":"                        for (Task x : storage) {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"garywongkai"},"content":"                            System.out.println(num++ + \".\" + x.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"garywongkai"},"content":"                        }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"garywongkai"},"content":"                    } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"garywongkai"},"content":"                        System.out.println(\"List is Empty!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"garywongkai"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"garywongkai"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"garywongkai"},"content":"                case \"mark\":","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"garywongkai"},"content":"                    int index \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"garywongkai"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"garywongkai"},"content":"                        storage.get(index - 1).setDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"garywongkai"},"content":"                        Task task \u003d storage.get(index - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"garywongkai"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"garywongkai"},"content":"                                task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"garywongkai"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"garywongkai"},"content":"                        throw new GlutiException(\"Make sure that you have selected the correct task!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"garywongkai"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"garywongkai"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"garywongkai"},"content":"                case \"unmark\":","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"garywongkai"},"content":"                    index \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"garywongkai"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"garywongkai"},"content":"                        storage.get(index - 1).setunDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"garywongkai"},"content":"                        Task task \u003d storage.get(index - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"garywongkai"},"content":"                        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"garywongkai"},"content":"                                task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"garywongkai"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"garywongkai"},"content":"                        throw new GlutiException(\"Make sure that you have selected the correct task!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"garywongkai"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"garywongkai"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"garywongkai"},"content":"                case \"todo\":","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"garywongkai"},"content":"                    String[] tempinput \u003d word.split(\" \", 2);","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"garywongkai"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"garywongkai"},"content":"                        assert tempinput.length \u003e 2;","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"garywongkai"},"content":"                        Todo toDo \u003d new Todo(tempinput[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"garywongkai"},"content":"                        storage.add(toDo);","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"garywongkai"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"garywongkai"},"content":"                                toDo);","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"garywongkai"},"content":"                        System.out.println(\"Now you have \" + storage.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"garywongkai"},"content":"                    } catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"garywongkai"},"content":"                        throw new GlutiException(\"Todo must have a description!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"garywongkai"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"garywongkai"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"garywongkai"},"content":"                case \"event\":","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"garywongkai"},"content":"                    String[] tempinpute \u003d word.split(\" \", 2);","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"garywongkai"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"garywongkai"},"content":"                        assert tempinpute.length \u003d\u003d 2 ;","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"garywongkai"},"content":"                        assert tempinpute[0].length() \u003e 1 ;","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"garywongkai"},"content":"                        String description \u003d tempinpute[1].split(\"/from\",2)[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"garywongkai"},"content":"                        String[] period \u003d tempinpute[1].split(\"/from\",2)[1].split(\"/to\",2);","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"garywongkai"},"content":"                        Event event \u003d new Event(description, period);","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"garywongkai"},"content":"                        storage.add(event);","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"garywongkai"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"garywongkai"},"content":"                                event);","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"garywongkai"},"content":"                        System.out.println(\"Now you have \" + storage.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"garywongkai"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"garywongkai"},"content":"                        throw new GlutiException(\"Event must be in this format event \u003cdescription\u003e /from \u003cdate+time\u003e /to \u003ctime\u003e\");","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"garywongkai"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"garywongkai"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"garywongkai"},"content":"                case \"deadline\":","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"garywongkai"},"content":"                    String[] tempinputd \u003d word.split(\" \", 2);//[1].split(\" /by \", 2);","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"garywongkai"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"garywongkai"},"content":"                        assert tempinputd.length \u003d\u003d 2;","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"garywongkai"},"content":"                        assert tempinputd[0].length() \u003e 3;","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"garywongkai"},"content":"                        String description \u003d tempinputd[1].split(\"/by\", 2)[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"garywongkai"},"content":"                        String time \u003d tempinputd[1].split(\"/by\", 2)[1];","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"garywongkai"},"content":"                        Deadline deadline \u003d new Deadline(description, time);","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"garywongkai"},"content":"                        storage.add(deadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"garywongkai"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"garywongkai"},"content":"                                deadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"garywongkai"},"content":"                        System.out.println(\"Now you have \" + storage.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"garywongkai"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"garywongkai"},"content":"                        throw new GlutiException(\"Deadline must be in this format \u003cdescription\u003e /by \u003cdate+time\u003e\");","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"garywongkai"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"garywongkai"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"garywongkai"},"content":"                case \"delete\":","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"garywongkai"},"content":"                    index \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"garywongkai"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"garywongkai"},"content":"                        Task task \u003d storage.get(index - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"garywongkai"},"content":"                        storage.remove(index - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"garywongkai"},"content":"                        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"garywongkai"},"content":"                                task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"garywongkai"},"content":"                        System.out.println(\"Now you have \" + storage.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"garywongkai"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"garywongkai"},"content":"                        throw new GlutiException(\"Make sure that you have selected the correct task!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"garywongkai"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"garywongkai"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"garywongkai"},"content":"                case \"find\":","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"garywongkai"},"content":"                    ArrayList\u003cTask\u003e matchlist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"garywongkai"},"content":"                    String keyword \u003d input[1];","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"garywongkai"},"content":"                    for (Task x : storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"garywongkai"},"content":"                        if (x.isMatch(keyword)){","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"garywongkai"},"content":"                            matchlist.add(x);","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"garywongkai"},"content":"                        }","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"garywongkai"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"garywongkai"},"content":"                    if (matchlist.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"garywongkai"},"content":"                        System.out.println(\"No matching tasks!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"garywongkai"},"content":"                    } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":147,"author":{"gitId":"garywongkai"},"content":"                        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"garywongkai"},"content":"                        int count \u003d 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"garywongkai"},"content":"                        for (Task y : matchlist) {","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"garywongkai"},"content":"                            System.out.println(count++ + \".\" + y);","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"garywongkai"},"content":"                        }","lastModifiedDate":"2024-02-01"},{"lineNumber":152,"author":{"gitId":"garywongkai"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"garywongkai"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"garywongkai"},"content":"                default:","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"garywongkai"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"garywongkai"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"garywongkai"},"content":"        //}","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"garywongkai"},"content":"        fstorage.saveList(storage);","lastModifiedDate":"2024-01-31"},{"lineNumber":159,"author":{"gitId":"garywongkai"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":160,"author":{"gitId":"garywongkai"},"content":"    };","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"garywongkai":160}},{"path":"src/main/java/Gluti/helpers/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garywongkai"},"content":"package Gluti.helpers;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"garywongkai"},"content":"import Gluti.utils.GlutiException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"garywongkai"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"garywongkai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"garywongkai"},"content":" * Represents the control hub for user input and filestorage for user","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"garywongkai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"garywongkai"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"garywongkai"},"content":"    private Parser parser;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"garywongkai"},"content":"    private boolean isExit ;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"garywongkai"},"content":"    private Scanner sc;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"garywongkai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"garywongkai"},"content":"     * Initializes a Ui instance and sets the status to \"working\"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"garywongkai"},"content":"     * @param fStorage the filestorage object that is going to be used in the program","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"garywongkai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"garywongkai"},"content":"    public Ui(FileStorage fStorage){","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"garywongkai"},"content":"        this.parser \u003d new Parser(fStorage);","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"garywongkai"},"content":"        isExit  \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"garywongkai"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"garywongkai"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"garywongkai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"garywongkai"},"content":"     * Runs the program loop and calls the Parser to parse user inputs","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"garywongkai"},"content":"     * @throws GlutiException Exceptions caught during parsing","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"garywongkai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"garywongkai"},"content":"    public void run() throws GlutiException {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"garywongkai"},"content":"        parser.parse(sc.nextLine());","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"garywongkai"},"content":"        while(!isExit) {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"garywongkai"},"content":"            parser.parse(sc.nextLine());","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"garywongkai"},"content":"            isExit \u003d parser.isLooping();","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"garywongkai"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"garywongkai"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"garywongkai"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"garywongkai":36}},{"path":"src/main/java/Gluti/utils/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garywongkai"},"content":"package Gluti.utils;","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"garywongkai"},"content":"import java.text.DateFormat;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"garywongkai"},"content":"import java.text.ParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"garywongkai"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"garywongkai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"garywongkai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"garywongkai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"garywongkai"},"content":" * The Deadline subclass that is a child of Task class","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"garywongkai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"garywongkai"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"garywongkai"},"content":"    protected String by;","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"garywongkai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"garywongkai"},"content":"     * Initializes a Deadline instance","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"garywongkai"},"content":"     * @param description the name of the Deadline","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"garywongkai"},"content":"     * @param by the due date of the Tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"garywongkai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"garywongkai"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"garywongkai"},"content":"        super(description);","lastModifiedDate":"2024-01-21"},{"lineNumber":24,"author":{"gitId":"garywongkai"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-21"},{"lineNumber":25,"author":{"gitId":"garywongkai"},"content":"        validDate(by);","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"garywongkai"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":27,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":28,"author":{"gitId":"garywongkai"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":29,"author":{"gitId":"garywongkai"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":30,"author":{"gitId":"garywongkai"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + by +\")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"garywongkai"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":32,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"garywongkai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"garywongkai"},"content":"     * Checks if the input is a valid date and perform the relevant formatting if valid","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"garywongkai"},"content":"     * @param by the due date input","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"garywongkai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"garywongkai"},"content":"    private void validDate(String by) {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"garywongkai"},"content":"        String temp \u003d by.trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"garywongkai"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"garywongkai"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"garywongkai"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"garywongkai"},"content":"            LocalDate parsedDate \u003d LocalDate.parse(temp, inputFormatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"garywongkai"},"content":"            String formattedDate \u003d parsedDate.format(outputFormatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"garywongkai"},"content":"            this.by \u003d \" \" +formattedDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"garywongkai"},"content":"//            System.out.println(\"Input Date: \" + temp);","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"garywongkai"},"content":"//            System.out.println(\"Formatted Date: \" + formattedDate);","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"garywongkai"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"garywongkai"},"content":"            // Handle the parsing exception (invalid format)","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"garywongkai"},"content":"            //System.out.println(\"Error: Invalid date format\");","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"garywongkai"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"garywongkai"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"garywongkai"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"garywongkai":52}},{"path":"src/main/java/Gluti/utils/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garywongkai"},"content":"package Gluti.utils;","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"garywongkai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"garywongkai"},"content":" * The Event subclass that is a child of Task class","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"garywongkai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"garywongkai"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"garywongkai"},"content":"    protected String[] date;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"garywongkai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"garywongkai"},"content":"     * Initializes a Event instance","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"garywongkai"},"content":"     * @param description name of the Event","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"garywongkai"},"content":"     * @param date the period of the Event","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"garywongkai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"garywongkai"},"content":"    public Event(String description, String[] date) {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"garywongkai"},"content":"        super(description);","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"garywongkai"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"garywongkai"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"garywongkai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"garywongkai"},"content":"     * Overloaded constructor for FileStorage tasks mounting","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"garywongkai"},"content":"     * @param description name of the Event","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"garywongkai"},"content":"     * @param date1 the start period of the Event","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"garywongkai"},"content":"     * @param date2 the end period of the Event","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"garywongkai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"garywongkai"},"content":"    public Event(String description, String date1, String date2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"garywongkai"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"garywongkai"},"content":"        this.date \u003d new String[] {date1,date2};","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"garywongkai"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"garywongkai"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":33,"author":{"gitId":"garywongkai"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":34,"author":{"gitId":"garywongkai"},"content":"        return \"[E]\" + super.toString() + \"(from:\" + date[0] + \"to:\"+ date[1] + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"garywongkai"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":36,"author":{"gitId":"garywongkai"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"garywongkai":36}},{"path":"src/main/java/Gluti/utils/GlutiException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garywongkai"},"content":"package Gluti.utils;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"garywongkai"},"content":"public class GlutiException extends Exception{","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"garywongkai"},"content":"        public GlutiException(String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"garywongkai"},"content":"            super(message);","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"garywongkai"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"garywongkai"},"content":"    }","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"garywongkai":7}},{"path":"src/main/java/Gluti/utils/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garywongkai"},"content":"package Gluti.utils;","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"garywongkai"},"content":"public class Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"garywongkai"},"content":"    protected String description;","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"garywongkai"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"garywongkai"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"garywongkai"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"garywongkai"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"garywongkai"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"garywongkai"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"garywongkai"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"garywongkai"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"garywongkai"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"garywongkai"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"garywongkai"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"garywongkai"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"garywongkai"},"content":"    public void setDone() {","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"garywongkai"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"garywongkai"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":24,"author":{"gitId":"garywongkai"},"content":"    public void setunDone() { isDone \u003d false; }","lastModifiedDate":"2024-01-21"},{"lineNumber":25,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"garywongkai"},"content":"    public boolean isMatch(String keyword) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"garywongkai"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"garywongkai"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"garywongkai"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"garywongkai":29}},{"path":"src/main/java/Gluti/utils/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garywongkai"},"content":"package Gluti.utils;","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"garywongkai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"garywongkai"},"content":" * Simple Todo subclass that is a child of Task","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"garywongkai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"garywongkai"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"garywongkai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"garywongkai"},"content":"     * Initializes a Todo instance","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"garywongkai"},"content":"     * @param description name of Todo task","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"garywongkai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"garywongkai"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"garywongkai"},"content":"        super(description);","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"garywongkai"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"garywongkai"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"garywongkai"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"garywongkai"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"garywongkai"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"garywongkai"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"garywongkai":20}},{"path":"src/test/java/Gluti/utils/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garywongkai"},"content":"package Gluti.utils;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"garywongkai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"garywongkai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"garywongkai"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"garywongkai"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"garywongkai"},"content":"    public void paramTest(){","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"garywongkai"},"content":"        Deadline testDeadline \u003d new Deadline(\"paramTest\", \"21/12/1999\");","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"garywongkai"},"content":"        assertEquals(testDeadline.toString(), \"[D][ ] paramTest(by: Dec 21 1999)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"garywongkai"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"garywongkai"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"garywongkai":13}},{"path":"src/test/java/Gluti/utils/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garywongkai"},"content":"package Gluti.utils;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"garywongkai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"garywongkai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"garywongkai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"garywongkai"},"content":"public class TodoTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"garywongkai"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"garywongkai"},"content":"    public void todoTest(){","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"garywongkai"},"content":"        Todo testTodo \u003d new Todo(\"todoTest\");","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"garywongkai"},"content":"        assertEquals(testTodo.toString(), \"[T][ ] todoTest\");","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"garywongkai"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"garywongkai"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"garywongkai":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"garywongkai"},"content":"list","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"garywongkai"},"content":"todo read book","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"garywongkai"},"content":"list","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"garywongkai"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"garywongkai"},"content":"list","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"garywongkai"},"content":"mark 1","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"garywongkai"},"content":"mark 2","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"garywongkai"},"content":"event project meeting /from Monday 2pm /to 6pm","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"garywongkai"},"content":"todo join club meeting","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"garywongkai"},"content":"mark 4","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"garywongkai"},"content":"list","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"garywongkai"},"content":"bye","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"garywongkai":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"garywongkai"},"content":"javac  -cp ..\\src\\main\\java\\Gluti -Xlint:none -d ..\\bin ..\\src\\main\\java\\Gluti\\*.java","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"garywongkai"},"content":"java -classpath ..\\bin Gluti \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"garywongkai":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"garywongkai"},"content":"if ! javac -cp ../src/main/java/ -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"garywongkai"},"content":"java -classpath ../bin Gluti \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"garywongkai":2,"-":36}}]
