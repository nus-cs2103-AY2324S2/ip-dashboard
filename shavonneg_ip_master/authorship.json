[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"shavonneg"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shavonneg":1,"-":42}},{"path":"src/main/java/duke/application/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package duke.application;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"import duke.io.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import duke.io.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"/**","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":" * The Duke class represents the main application that manages user interactions","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":" * for a task management system.","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":" */","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"    private static TaskList taskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"    private static Ui ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"     * Constructs a Duke instance, initializing the user interface, task list, and parser.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"     * Creates the necessary storage folder and loads existing tasks from storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"    public Duke() {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"        Storage.createFolder();","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"        Storage.loadFile(taskList.getTaskList());","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"     * Runs the Duke application, displaying a welcome message and handling user input in a loop.","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"     * Runs application until the user enters the \"bye\" command, saving tasks to storage","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"shavonneg"},"content":"     * before exiting.","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"    public void run() {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"shavonneg"},"content":"        ui.printLine();","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"        while (true) {","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"shavonneg"},"content":"            String input \u003d ui.getUserInput();","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"shavonneg"},"content":"            if (\"bye\".equalsIgnoreCase(input)) {","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"shavonneg"},"content":"                ui.showByeMessage();","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"shavonneg"},"content":"                Storage.saveTasks(taskList.getTaskList());","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"shavonneg"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"shavonneg"},"content":"            handleUserInput(input, parser);","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"shavonneg"},"content":"     * Handles user input by delegating the processing to the parser, which interprets","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"shavonneg"},"content":"     * and executes the corresponding commands on the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"shavonneg"},"content":"     * @param input   The user input to be processed.","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"shavonneg"},"content":"     * @param parser  The parser responsible for interpreting the user input.","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"shavonneg"},"content":"    public static void handleUserInput(String input, Parser parser) {","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"shavonneg"},"content":"        parser.handleCommand(input, taskList);","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"shavonneg"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"shavonneg"},"content":"        new Duke().run();","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"shavonneg":62,"-":1}},{"path":"src/main/java/duke/application/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package duke.application;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"public class DukeException extends IllegalArgumentException {","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"     * Constructs a DukeException with the specified error message.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"        super(message);","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"     * Constructs a DukeException with the specified error message and a nested exception.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"     * @param e       The nested exception that caused this DukeException.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"    public DukeException(String message, Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"        super(message, e);","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"     * Creates a DukeException for a generic loading error without a nested exception.","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"     * @return A DukeException indicating an error during the loading process.","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"shavonneg"},"content":"    public static DukeException createLoadingError() {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"        return new DukeException(\"Error loading files\");","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"     * Creates a DukeException for a loading error with a nested exception.","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"shavonneg"},"content":"     * @param e The nested exception that caused the loading error.","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"     * @return A DukeException indicating an error during the loading process with details from the nested exception.","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"shavonneg"},"content":"    public static DukeException showLoad(Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"shavonneg"},"content":"        return new DukeException(\"Error loading files\", e);","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"shavonneg":42}},{"path":"src/main/java/duke/application/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package duke.application;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"import duke.io.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"import duke.io.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":" * The Parser class is responsible for parsing user input and executing corresponding commands.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":" * It handles various commands such as listing tasks, marking/unmarking tasks, adding todos,","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":" * deadlines, and events, removing tasks, and exiting the application.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"public class Parser {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"     * Parses the user input into an array of strings, separating the command and the remaining input.","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"     * @param input The user input to be parsed.","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"     * @return An array containing the command and the remaining input.","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"    public static String[] parseInput(String input) {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"        return input.split(\" \", 2);","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"     * Handles the execution of commands based on the parsed user input.","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"     * @param input    The user input to be processed.","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"     * @param taskList The task list to be manipulated.","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"shavonneg"},"content":"    public void handleCommand(String input, TaskList taskList) {","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"        String[] parsedInput \u003d Parser.parseInput(input);","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"shavonneg"},"content":"        if (\"list\".equalsIgnoreCase(input)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"shavonneg"},"content":"            Ui.showTaskList(taskList.getTaskList());","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"shavonneg"},"content":"        } else if (\"bye\".equalsIgnoreCase(input)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"shavonneg"},"content":"            Ui.showByeMessage();","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"shavonneg"},"content":"            Storage.saveTasks(taskList.getTaskList());","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"shavonneg"},"content":"            System.exit(0);","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"shavonneg"},"content":"        } else if (parsedInput[0].equalsIgnoreCase(\"mark\") || parsedInput[0].equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"shavonneg"},"content":"            markingHandler(input, taskList);","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"shavonneg"},"content":"        } else if (parsedInput[0].equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"shavonneg"},"content":"            if (isDeadlineInput(input)) {","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"shavonneg"},"content":"                handleDeadlines(input, taskList);","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"shavonneg"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"shavonneg"},"content":"                Ui.showErrorMessage(\"Please complete your request by specifying the details of the task!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"shavonneg"},"content":"        } else if (parsedInput[0].equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"shavonneg"},"content":"            if (isTodoInput(input)) {","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"shavonneg"},"content":"                handleTodos(input, taskList);","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"shavonneg"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"shavonneg"},"content":"                Ui.showErrorMessage(\"Please complete your request by specifying the details of the task!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"shavonneg"},"content":"        } else if (parsedInput[0].equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"shavonneg"},"content":"            if (isEventInput(input)) {","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"shavonneg"},"content":"                handleEvents(input, taskList);","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"shavonneg"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"shavonneg"},"content":"                Ui.showErrorMessage(\"Please complete your request by specifying the details of the task!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"shavonneg"},"content":"        } else if (parsedInput[0].equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"shavonneg"},"content":"            handleRemove(input, taskList);","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"shavonneg"},"content":"        } else if (parsedInput[0].equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"shavonneg"},"content":"            findItems(input, taskList);","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"shavonneg"},"content":"        } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"shavonneg"},"content":"            Ui.showErrorMessage(\"I\u0027m sorry, I don\u0027t understand! Please type your request again.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"shavonneg"},"content":"     * Handles the marking or unmarking of tasks based on user input.","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"shavonneg"},"content":"     * @param input    The user input specifying the task number and the action.","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"shavonneg"},"content":"     * @param taskList The task list to be manipulated.","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"shavonneg"},"content":"    public static void markingHandler(String input, TaskList taskList) {","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"shavonneg"},"content":"        String[] split \u003d input.split(\" \");","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"shavonneg"},"content":"        if (split.length \u003c 2) {","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"shavonneg"},"content":"            Ui.showErrorMessage(\"Please specify the task number!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"shavonneg"},"content":"            return;","lastModifiedDate":"2024-02-05"},{"lineNumber":87,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":88,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":89,"author":{"gitId":"shavonneg"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"shavonneg"},"content":"            int index \u003d Integer.parseInt(split[1]) - 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":91,"author":{"gitId":"shavonneg"},"content":"            Task task \u003d taskList.getTaskList().get(index);","lastModifiedDate":"2024-02-06"},{"lineNumber":92,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":93,"author":{"gitId":"shavonneg"},"content":"            if (\"mark\".equalsIgnoreCase(split[0])) {","lastModifiedDate":"2024-02-05"},{"lineNumber":94,"author":{"gitId":"shavonneg"},"content":"                task.markAsDone();","lastModifiedDate":"2024-02-05"},{"lineNumber":95,"author":{"gitId":"shavonneg"},"content":"                Storage.saveTasks(taskList.getTaskList());","lastModifiedDate":"2024-02-06"},{"lineNumber":96,"author":{"gitId":"shavonneg"},"content":"                Ui.showMarkedAsDone(task);","lastModifiedDate":"2024-02-05"},{"lineNumber":97,"author":{"gitId":"shavonneg"},"content":"                Ui.printLine();","lastModifiedDate":"2024-02-05"},{"lineNumber":98,"author":{"gitId":"shavonneg"},"content":"            } else if (\"unmark\".equalsIgnoreCase(split[0])) {","lastModifiedDate":"2024-02-05"},{"lineNumber":99,"author":{"gitId":"shavonneg"},"content":"                task.unmarkTask();","lastModifiedDate":"2024-02-05"},{"lineNumber":100,"author":{"gitId":"shavonneg"},"content":"                Storage.saveTasks(taskList.getTaskList());","lastModifiedDate":"2024-02-06"},{"lineNumber":101,"author":{"gitId":"shavonneg"},"content":"                Ui.showUnmarkedTask(task);","lastModifiedDate":"2024-02-05"},{"lineNumber":102,"author":{"gitId":"shavonneg"},"content":"                Ui.printLine();","lastModifiedDate":"2024-02-05"},{"lineNumber":103,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":104,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":105,"author":{"gitId":"shavonneg"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":106,"author":{"gitId":"shavonneg"},"content":"            Ui.showErrorMessage(\"Invalid task number. Please refer to your to-do list again.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":107,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":108,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":109,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":110,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":111,"author":{"gitId":"shavonneg"},"content":"     * Handles the creation and addition of Todo tasks to the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":112,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":113,"author":{"gitId":"shavonneg"},"content":"     * @param input    User input specifying the Todo description.","lastModifiedDate":"2024-02-05"},{"lineNumber":114,"author":{"gitId":"shavonneg"},"content":"     * @param taskList The task list to which the Todo task will be added.","lastModifiedDate":"2024-02-05"},{"lineNumber":115,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":116,"author":{"gitId":"shavonneg"},"content":"    private static void handleTodos(String input, TaskList taskList) {","lastModifiedDate":"2024-02-05"},{"lineNumber":117,"author":{"gitId":"shavonneg"},"content":"        String description \u003d input.substring(5).trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":118,"author":{"gitId":"shavonneg"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":119,"author":{"gitId":"shavonneg"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2024-02-05"},{"lineNumber":120,"author":{"gitId":"shavonneg"},"content":"        Storage.saveTasks(taskList.getTaskList());","lastModifiedDate":"2024-02-06"},{"lineNumber":121,"author":{"gitId":"shavonneg"},"content":"        System.out.println(\"Ok! I\u0027ve added this todo: \" + todo);","lastModifiedDate":"2024-02-05"},{"lineNumber":122,"author":{"gitId":"shavonneg"},"content":"        System.out.println(\"Now you have \" + taskList.getTotalTasks() + \" tasks in your list.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":123,"author":{"gitId":"shavonneg"},"content":"        Ui.printLine();","lastModifiedDate":"2024-02-05"},{"lineNumber":124,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":125,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":126,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":127,"author":{"gitId":"shavonneg"},"content":"     * Handles the creation and addition of Deadline tasks to the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":128,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":129,"author":{"gitId":"shavonneg"},"content":"     * @param input    User input specifying the Deadline description and due date.","lastModifiedDate":"2024-02-05"},{"lineNumber":130,"author":{"gitId":"shavonneg"},"content":"     * @param taskList The task list to which the Deadline task will be added.","lastModifiedDate":"2024-02-05"},{"lineNumber":131,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":132,"author":{"gitId":"shavonneg"},"content":"    private static void handleDeadlines(String input, TaskList taskList) {","lastModifiedDate":"2024-02-05"},{"lineNumber":133,"author":{"gitId":"shavonneg"},"content":"        String[] splitParts \u003d input.substring(9).split(\"/by\", 2);","lastModifiedDate":"2024-02-05"},{"lineNumber":134,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":135,"author":{"gitId":"shavonneg"},"content":"        if (splitParts.length \u003e 1) {","lastModifiedDate":"2024-02-05"},{"lineNumber":136,"author":{"gitId":"shavonneg"},"content":"            String description \u003d splitParts[0].trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":137,"author":{"gitId":"shavonneg"},"content":"            String date \u003d splitParts[1].trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":138,"author":{"gitId":"shavonneg"},"content":"            if (isValidDate(date)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":139,"author":{"gitId":"shavonneg"},"content":"                LocalDate d1 \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"M/d/yyyy HHmm\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":140,"author":{"gitId":"shavonneg"},"content":"                Deadline deadline \u003d new Deadline(description, d1);","lastModifiedDate":"2024-02-06"},{"lineNumber":141,"author":{"gitId":"shavonneg"},"content":"                taskList.addTask(deadline);","lastModifiedDate":"2024-02-05"},{"lineNumber":142,"author":{"gitId":"shavonneg"},"content":"                Storage.saveTasks(taskList.getTaskList());","lastModifiedDate":"2024-02-06"},{"lineNumber":143,"author":{"gitId":"shavonneg"},"content":"                System.out.println(\"Ok! I\u0027ve added this deadline: \" + deadline);","lastModifiedDate":"2024-02-05"},{"lineNumber":144,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":145,"author":{"gitId":"shavonneg"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":146,"author":{"gitId":"shavonneg"},"content":"                Deadline deadline \u003d new Deadline(description, date);","lastModifiedDate":"2024-02-06"},{"lineNumber":147,"author":{"gitId":"shavonneg"},"content":"                taskList.addTask(deadline);","lastModifiedDate":"2024-02-05"},{"lineNumber":148,"author":{"gitId":"shavonneg"},"content":"                Storage.saveTasks(taskList.getTaskList());","lastModifiedDate":"2024-02-06"},{"lineNumber":149,"author":{"gitId":"shavonneg"},"content":"                System.out.println(\"Ok! I\u0027ve added this deadline: \" + deadline);","lastModifiedDate":"2024-02-05"},{"lineNumber":150,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":151,"author":{"gitId":"shavonneg"},"content":"            System.out.println(\"Now you have \" + taskList.getTotalTasks() + \" tasks in your list.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":152,"author":{"gitId":"shavonneg"},"content":"            Ui.printLine();","lastModifiedDate":"2024-02-05"},{"lineNumber":153,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":154,"author":{"gitId":"shavonneg"},"content":"        else {","lastModifiedDate":"2024-02-05"},{"lineNumber":155,"author":{"gitId":"shavonneg"},"content":"            System.out.println(\"Invalid input format for deadline. Please provide a valid date/time.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":156,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":157,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":158,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":159,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":160,"author":{"gitId":"shavonneg"},"content":"     * Handles the creation and addition of Event tasks to the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":161,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":162,"author":{"gitId":"shavonneg"},"content":"     * @param input    User input specifying the Event description and date range.","lastModifiedDate":"2024-02-05"},{"lineNumber":163,"author":{"gitId":"shavonneg"},"content":"     * @param taskList The task list to which the Event task will be added.","lastModifiedDate":"2024-02-05"},{"lineNumber":164,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":165,"author":{"gitId":"shavonneg"},"content":"    private static void handleEvents(String input, TaskList taskList) {","lastModifiedDate":"2024-02-05"},{"lineNumber":166,"author":{"gitId":"shavonneg"},"content":"        String[] splitParts \u003d input.substring(6).split(\"/from\", 2);","lastModifiedDate":"2024-02-05"},{"lineNumber":167,"author":{"gitId":"shavonneg"},"content":"        String[] splitTo \u003d splitParts[1].split(\"/to\", 2);","lastModifiedDate":"2024-02-05"},{"lineNumber":168,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":169,"author":{"gitId":"shavonneg"},"content":"        if (splitTo.length \u003e 1) {","lastModifiedDate":"2024-02-05"},{"lineNumber":170,"author":{"gitId":"shavonneg"},"content":"            String description \u003d splitParts[0].trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":171,"author":{"gitId":"shavonneg"},"content":"            String fromDate \u003d splitTo[0].trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":172,"author":{"gitId":"shavonneg"},"content":"            String toDate \u003d splitTo[1].trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":173,"author":{"gitId":"shavonneg"},"content":"            if (isValidDate(fromDate) \u0026\u0026 isValidDate(toDate)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":174,"author":{"gitId":"shavonneg"},"content":"                LocalDate d1 \u003d LocalDate.parse(fromDate);","lastModifiedDate":"2024-02-05"},{"lineNumber":175,"author":{"gitId":"shavonneg"},"content":"                LocalDate d2 \u003d LocalDate.parse(toDate);","lastModifiedDate":"2024-02-05"},{"lineNumber":176,"author":{"gitId":"shavonneg"},"content":"                Event event \u003d new Event(description, d1, d2);","lastModifiedDate":"2024-02-05"},{"lineNumber":177,"author":{"gitId":"shavonneg"},"content":"                taskList.addTask(event);","lastModifiedDate":"2024-02-05"},{"lineNumber":178,"author":{"gitId":"shavonneg"},"content":"                Storage.saveTasks(taskList.getTaskList());","lastModifiedDate":"2024-02-06"},{"lineNumber":179,"author":{"gitId":"shavonneg"},"content":"                Ui.showTaskAdded(event, taskList.getTotalTasks());","lastModifiedDate":"2024-02-05"},{"lineNumber":180,"author":{"gitId":"shavonneg"},"content":"                Ui.printLine();","lastModifiedDate":"2024-02-05"},{"lineNumber":181,"author":{"gitId":"shavonneg"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":182,"author":{"gitId":"shavonneg"},"content":"                Ui.showErrorMessage(\"Invalid input format for event. Please provide valid dates.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":183,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":184,"author":{"gitId":"shavonneg"},"content":"        } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":185,"author":{"gitId":"shavonneg"},"content":"            Ui.showErrorMessage(\"Invalid input format for event. Please provide valid date/time.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":186,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":187,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":188,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":189,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":190,"author":{"gitId":"shavonneg"},"content":"     * Handles the removal of tasks from the task list based on user input.","lastModifiedDate":"2024-02-05"},{"lineNumber":191,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":192,"author":{"gitId":"shavonneg"},"content":"     * @param input    User input specifying the task number to be removed.","lastModifiedDate":"2024-02-05"},{"lineNumber":193,"author":{"gitId":"shavonneg"},"content":"     * @param taskList The task list from which the task will be removed.","lastModifiedDate":"2024-02-05"},{"lineNumber":194,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":195,"author":{"gitId":"shavonneg"},"content":"    private static void handleRemove(String input, TaskList taskList) {","lastModifiedDate":"2024-02-05"},{"lineNumber":196,"author":{"gitId":"shavonneg"},"content":"        String[] splitParts \u003d input.split(\" \");","lastModifiedDate":"2024-02-05"},{"lineNumber":197,"author":{"gitId":"shavonneg"},"content":"        if (splitParts.length \u003c 2) {","lastModifiedDate":"2024-02-05"},{"lineNumber":198,"author":{"gitId":"shavonneg"},"content":"            System.out.println(\"Please specify which task number you want to remove!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":199,"author":{"gitId":"shavonneg"},"content":"            return;","lastModifiedDate":"2024-02-05"},{"lineNumber":200,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":201,"author":{"gitId":"shavonneg"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":202,"author":{"gitId":"shavonneg"},"content":"            int index \u003d Integer.parseInt(splitParts[1]) - 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":203,"author":{"gitId":"shavonneg"},"content":"            Task removedTask \u003d taskList.removeTask(index);","lastModifiedDate":"2024-02-05"},{"lineNumber":204,"author":{"gitId":"shavonneg"},"content":"            Storage.saveTasks(taskList.getTaskList());","lastModifiedDate":"2024-02-06"},{"lineNumber":205,"author":{"gitId":"shavonneg"},"content":"            Ui.showTaskRemoved(removedTask, taskList.getTotalTasks());","lastModifiedDate":"2024-02-05"},{"lineNumber":206,"author":{"gitId":"shavonneg"},"content":"            Ui.printLine();","lastModifiedDate":"2024-02-05"},{"lineNumber":207,"author":{"gitId":"shavonneg"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":208,"author":{"gitId":"shavonneg"},"content":"            Ui.showErrorMessage(\"Invalid task number. Please refer to your to-do list again.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":209,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":210,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":211,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":212,"author":{"gitId":"shavonneg"},"content":"    public void findItems(String input, TaskList tasks) {","lastModifiedDate":"2024-02-06"},{"lineNumber":213,"author":{"gitId":"shavonneg"},"content":"        Ui.showFindItemList(input);","lastModifiedDate":"2024-02-06"},{"lineNumber":214,"author":{"gitId":"shavonneg"},"content":"        boolean found \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":215,"author":{"gitId":"shavonneg"},"content":"        String[] splitParts \u003d input.split(\"find\", 2);","lastModifiedDate":"2024-02-06"},{"lineNumber":216,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":217,"author":{"gitId":"shavonneg"},"content":"        if (splitParts.length \u003e 1) {","lastModifiedDate":"2024-02-06"},{"lineNumber":218,"author":{"gitId":"shavonneg"},"content":"            String keyword \u003d splitParts[1].trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":219,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":220,"author":{"gitId":"shavonneg"},"content":"            for (int i \u003d 0; i \u003c tasks.getTotalTasks(); i++) {","lastModifiedDate":"2024-02-06"},{"lineNumber":221,"author":{"gitId":"shavonneg"},"content":"                Task item \u003d tasks.getTask(i);","lastModifiedDate":"2024-02-06"},{"lineNumber":222,"author":{"gitId":"shavonneg"},"content":"                if (item.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2024-02-06"},{"lineNumber":223,"author":{"gitId":"shavonneg"},"content":"                    System.out.println(item);","lastModifiedDate":"2024-02-06"},{"lineNumber":224,"author":{"gitId":"shavonneg"},"content":"                    found \u003d true;","lastModifiedDate":"2024-02-06"},{"lineNumber":225,"author":{"gitId":"shavonneg"},"content":"                }","lastModifiedDate":"2024-02-06"},{"lineNumber":226,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":227,"author":{"gitId":"shavonneg"},"content":"        } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":228,"author":{"gitId":"shavonneg"},"content":"            System.out.println(\"Please specify a search keyword.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":229,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":230,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":231,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":232,"author":{"gitId":"shavonneg"},"content":"        if (!found) {","lastModifiedDate":"2024-02-06"},{"lineNumber":233,"author":{"gitId":"shavonneg"},"content":"            System.out.println(\"No tasks found containing: \" + input);","lastModifiedDate":"2024-02-06"},{"lineNumber":234,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":235,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":236,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":237,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":238,"author":{"gitId":"shavonneg"},"content":"     * Validates the input format for creating Deadlines.","lastModifiedDate":"2024-02-05"},{"lineNumber":239,"author":{"gitId":"shavonneg"},"content":"     * @param input User input specifying the Deadline description and due date.","lastModifiedDate":"2024-02-05"},{"lineNumber":240,"author":{"gitId":"shavonneg"},"content":"     * @return True if the input format is valid, false otherwise.","lastModifiedDate":"2024-02-05"},{"lineNumber":241,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":242,"author":{"gitId":"shavonneg"},"content":"    private static boolean isDeadlineInput(String input) {","lastModifiedDate":"2024-02-06"},{"lineNumber":243,"author":{"gitId":"shavonneg"},"content":"        String[] splitParts \u003d input.substring(9).split(\"/by\", 2);","lastModifiedDate":"2024-02-05"},{"lineNumber":244,"author":{"gitId":"shavonneg"},"content":"        return splitParts.length \u003e 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":245,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":246,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":247,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":248,"author":{"gitId":"shavonneg"},"content":"     * Validates the input format for creating Todo tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":249,"author":{"gitId":"shavonneg"},"content":"     * @param input User input specifying the Todo description.","lastModifiedDate":"2024-02-05"},{"lineNumber":250,"author":{"gitId":"shavonneg"},"content":"     * @return True if the input format is valid, false otherwise.","lastModifiedDate":"2024-02-05"},{"lineNumber":251,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":252,"author":{"gitId":"shavonneg"},"content":"    private static boolean isTodoInput(String input) {","lastModifiedDate":"2024-02-06"},{"lineNumber":253,"author":{"gitId":"shavonneg"},"content":"        return input.length() \u003e 5;","lastModifiedDate":"2024-02-05"},{"lineNumber":254,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":255,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":256,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":257,"author":{"gitId":"shavonneg"},"content":"     * Validates the input format for creating Events.","lastModifiedDate":"2024-02-05"},{"lineNumber":258,"author":{"gitId":"shavonneg"},"content":"     * @param input User input specifying the Event description and date range.","lastModifiedDate":"2024-02-05"},{"lineNumber":259,"author":{"gitId":"shavonneg"},"content":"     * @return True if the input format is valid, false otherwise.","lastModifiedDate":"2024-02-05"},{"lineNumber":260,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":261,"author":{"gitId":"shavonneg"},"content":"    private static boolean isEventInput(String input) {","lastModifiedDate":"2024-02-06"},{"lineNumber":262,"author":{"gitId":"shavonneg"},"content":"        String[] splitParts \u003d input.substring(6).split(\"/from\", 2);","lastModifiedDate":"2024-02-05"},{"lineNumber":263,"author":{"gitId":"shavonneg"},"content":"        return splitParts.length \u003e 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":264,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":265,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":266,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":267,"author":{"gitId":"shavonneg"},"content":"     * Validates the input format for a date string.","lastModifiedDate":"2024-02-05"},{"lineNumber":268,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":269,"author":{"gitId":"shavonneg"},"content":"     * @param input The date string to be validated.","lastModifiedDate":"2024-02-05"},{"lineNumber":270,"author":{"gitId":"shavonneg"},"content":"     * @return True if the input is a valid date string, false otherwise.","lastModifiedDate":"2024-02-05"},{"lineNumber":271,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":272,"author":{"gitId":"shavonneg"},"content":"    private static boolean isValidDate(String input) {","lastModifiedDate":"2024-02-05"},{"lineNumber":273,"author":{"gitId":"shavonneg"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":274,"author":{"gitId":"shavonneg"},"content":"            LocalDate.parse(input, DateTimeFormatter.ofPattern(\"M/d/yyyy HHmm\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":275,"author":{"gitId":"shavonneg"},"content":"            return true;","lastModifiedDate":"2024-02-05"},{"lineNumber":276,"author":{"gitId":"shavonneg"},"content":"        } catch (DateTimeParseException e1) {","lastModifiedDate":"2024-02-05"},{"lineNumber":277,"author":{"gitId":"shavonneg"},"content":"            try {","lastModifiedDate":"2024-02-05"},{"lineNumber":278,"author":{"gitId":"shavonneg"},"content":"                LocalDate.parse(input, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":279,"author":{"gitId":"shavonneg"},"content":"                return true;","lastModifiedDate":"2024-02-05"},{"lineNumber":280,"author":{"gitId":"shavonneg"},"content":"            } catch (DateTimeParseException e2) {","lastModifiedDate":"2024-02-05"},{"lineNumber":281,"author":{"gitId":"shavonneg"},"content":"                return false;","lastModifiedDate":"2024-02-05"},{"lineNumber":282,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":283,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":284,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":285,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":286,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":287,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":288,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"shavonneg":288}},{"path":"src/main/java/duke/application/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package duke.application;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":" * TaskList - Represents a list of tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"     * Gets specific task.","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"        return tasks.get(i);","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"     * Gets the list of tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"     * @return ArrayList of tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"        return tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"shavonneg"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"shavonneg"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"shavonneg"},"content":"     * Removes a task from the task list based on its index.","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"shavonneg"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"shavonneg"},"content":"     * @return The removed task.","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"shavonneg"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"shavonneg"},"content":"        return tasks.remove(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"shavonneg"},"content":"     * Gets the total number of tasks in the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"shavonneg"},"content":"     * @return The total number of tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"shavonneg"},"content":"    public int getTotalTasks() {","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"shavonneg"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"shavonneg":61}},{"path":"src/main/java/duke/io/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package duke.io;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import java.io.*;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":" * Storage - Handles saving and loading tasks to and from a file.","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"public class Storage {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"    private static final String FILEPATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"     * Creates the data folder if it does not exist.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"    public static void createFolder() {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"        Path folder \u003d Paths.get(\"./data/\");","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"        if (Files.notExists(folder)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"                Files.createDirectories(folder);","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"                e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"     * Saves tasks to a file.","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"shavonneg"},"content":"     * @param tasks ArrayList of tasks to be saved.","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"    public static void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILEPATH))) {","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"shavonneg"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"                writer.write(task.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"shavonneg"},"content":"                writer.newLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"shavonneg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"shavonneg"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"shavonneg"},"content":"     * Loads tasks from a file.","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"shavonneg"},"content":"     * @param tasks ArrayList to store the loaded tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"shavonneg"},"content":"    public static void loadFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"shavonneg"},"content":"        File file \u003d new File(FILEPATH);","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"shavonneg"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"shavonneg"},"content":"            return;","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"shavonneg"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"shavonneg"},"content":"            String line;","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"shavonneg"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"shavonneg"},"content":"                tasks.add(new Task(line));","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"shavonneg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"shavonneg"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"shavonneg":65}},{"path":"src/main/java/duke/io/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package duke.io;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":" * Ui - Handles interactions with the user, including input and output.","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"    private static final String LINE_SEPARATOR \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"     * Displays the welcome message.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"    public static void showWelcomeMessage() {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"        System.out.println(\"Hello! I\u0027m RATZCHAT\");","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"        System.out.println(\"How can I help you today?\");","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"        printLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"     * Displays the goodbye message.","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"    public static void showByeMessage() {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"        System.out.println(\"BYEBYE. Thank you for using RATZCHAT!\");","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"        printLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"     * Displays an error message.","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"shavonneg"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"    public static void showErrorMessage(String message) {","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"        System.out.println(\"Error: \" + message);","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"shavonneg"},"content":"        printLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"shavonneg"},"content":"     * Prints a line separator.","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"shavonneg"},"content":"    public static void printLine() {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"shavonneg"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"shavonneg"},"content":"    public static String getUserInput() {","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"shavonneg"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"shavonneg"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"shavonneg"},"content":"     * Retrieves user input from the console.","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"shavonneg"},"content":"     * @return The user\u0027s input as a String.","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"shavonneg"},"content":"    public static void showTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"shavonneg"},"content":"        System.out.println(\"These are your to-dos: \");","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"shavonneg"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"shavonneg"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"shavonneg"},"content":"        printLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"shavonneg"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"shavonneg"},"content":"     * @param task ArrayList of tasks to be displayed.","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"shavonneg"},"content":"    public static void showMarkedAsDone(Task task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"shavonneg"},"content":"        System.out.println(\"I\u0027ve marked this task as done:\\n  \" + task);","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"shavonneg"},"content":"     * Displays a message indicating that a task has been marked as done.","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"shavonneg"},"content":"     * @param task The task that has been marked as done.","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"shavonneg"},"content":"    public static void showUnmarkedTask(Task task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"shavonneg"},"content":"        System.out.println(\"I\u0027ve unmarked this task! It is now not done yet:\\n  \" + task);","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"shavonneg"},"content":"     * Displays a message indicating that a task has been unmarked.","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"shavonneg"},"content":"     * @param task The task that has been unmarked.","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":87,"author":{"gitId":"shavonneg"},"content":"    public static void showTaskAdded(Task task, int totalTasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"shavonneg"},"content":"        System.out.println(\"Ok! I\u0027ve added this task: \" + task);","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"shavonneg"},"content":"        System.out.println(\"Now you have \" + totalTasks + \" tasks in your list.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":93,"author":{"gitId":"shavonneg"},"content":"     * Displays a message indicating that a task has been added.","lastModifiedDate":"2024-02-05"},{"lineNumber":94,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":95,"author":{"gitId":"shavonneg"},"content":"     * @param removedTask       The task that has been added.","lastModifiedDate":"2024-02-05"},{"lineNumber":96,"author":{"gitId":"shavonneg"},"content":"     * @param totalTasks The total number of tasks after the addition.","lastModifiedDate":"2024-02-05"},{"lineNumber":97,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":98,"author":{"gitId":"shavonneg"},"content":"    public static void showTaskRemoved(Task removedTask, int totalTasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"shavonneg"},"content":"        System.out.println(\"Ok! I have removed this task from your list:\\n  \" + removedTask);","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"shavonneg"},"content":"        System.out.println(\"Now you have \" + totalTasks + \" tasks in your list.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":103,"author":{"gitId":"shavonneg"},"content":"    public static void showFindItemList(String keyword) {","lastModifiedDate":"2024-02-06"},{"lineNumber":104,"author":{"gitId":"shavonneg"},"content":"        System.out.println(\"Items containing \u0027\" + keyword + \"\u0027:\");","lastModifiedDate":"2024-02-06"},{"lineNumber":105,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":106,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"shavonneg":106}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package duke.task;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":" * Deadlines - Represents a task with a deadline, a subclass of Task.","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"    private String byDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"    private LocalDate d1;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"     * Creates a Deadlines task with a description and a deadline specified as a String.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"     * @param byDate      The deadline of the task as a String.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"    public Deadline(String description, String byDate) {","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"     * Creates a Deadlines task with a description and a deadline specified as a LocalDate.","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"     * @param d1          The deadline of the task as a LocalDate.","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"    public Deadline(String description, LocalDate d1) {","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"shavonneg"},"content":"        this.d1 \u003d d1;","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"shavonneg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"        if (d1 !\u003d null) {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"shavonneg"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"shavonneg"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + byDate + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"shavonneg":42}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package duke.task;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":" * Event - Represents an event task with start and end dates, a subclass of Task.","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"    private String fromDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"    private String toDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"    private LocalDate d1;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"    private LocalDate d2;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"     * Creates an Event task with a description and date range specified as Strings.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"     * @param fromDate    The start date of the event as a String.","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"     * @param toDate      The end date of the event as a String.","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"    public Event(String description, String fromDate, String toDate) {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"shavonneg"},"content":"     * Creates an Event task with a description and date range specified as LocalDate objects.","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"shavonneg"},"content":"     * @param d1          The start date of the event as a LocalDate.","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"     * @param d2          The end date of the event as a LocalDate.","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"    public Event(String description, LocalDate d1, LocalDate d2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"shavonneg"},"content":"       super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"       this.d1 \u003d d1;","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"shavonneg"},"content":"       this.d2 \u003d d2;","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"shavonneg"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"shavonneg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"shavonneg"},"content":"        if (d1 !\u003d null \u0026\u0026 d2 !\u003d null) {","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"shavonneg"},"content":"            return \"[E]\" + super.toString() + \" (from: \" + d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" to: \"","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"shavonneg"},"content":"                    + d2.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"shavonneg"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + fromDate + \" to: \" + toDate + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"shavonneg":49}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package duke.task;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":" * Task - Represents a basic task with a description and completion status.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"public class Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"    protected String userInput;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"     * Creates a Task with the specified input description and sets completion status to false.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"     * @param input The description of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"    public Task(String input) {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"        this.userInput \u003d input;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"     * Gets the status icon based on the completion status.","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"     * @return The status icon (\"[X]\" if done, \"[ ]\" if not done).","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"shavonneg"},"content":"        return (isDone ?  \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"shavonneg"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"shavonneg"},"content":"     * Unmarks the task, setting completion status to false.","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"shavonneg"},"content":"    public void unmarkTask() {","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"shavonneg"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"shavonneg"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"shavonneg"},"content":"        return userInput;","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"shavonneg"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"shavonneg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"shavonneg"},"content":"        return getStatusIcon() + userInput;","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"shavonneg":55}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package duke.task;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":" * Todo - Represents a todo task, a subclass of Task.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"     * Creates a Todo task with the specified description.","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"shavonneg":22}},{"path":"src/test/java/duke/application/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package duke.application;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"public class DukeTest {","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"    @Test","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"    public void handleUserInputTest() {","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"        Duke d \u003d new Duke();","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"        String input \u003d \"deadline finish assignment /by Sunday 10am \";","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"    @Test","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"    public void dukeTest2() {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"shavonneg":18}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package duke.task;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"    public void DeadlinesToString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"        Deadline d \u003d new Deadline(\"deadline finish assignment\", \"2/5/2022 1530\");","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"        assertEquals(\"[D][ ] deadline finish assignment (by: 2/5/2022 1530)\", d.toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"shavonneg":11}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package duke.task;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"public class EventTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"    public void testToStringWithLocalDateRange() {","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"        LocalDate startDate \u003d LocalDate.parse(\"2022-05-02\");","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"        LocalDate endDate \u003d LocalDate.parse(\"2022-05-05\");","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"        Event event \u003d new Event(\"team workshop\", startDate, endDate);","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"        assertEquals(\"[E][ ] team workshop (from: May 2 2022 to: May 5 2022)\", event.toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"shavonneg":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"todo eat lunch","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"deadline finish assignment /by Sunday 10am","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"event project meeting /from Mon 10pm /to 12pm","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"shavonneg":4}}]
