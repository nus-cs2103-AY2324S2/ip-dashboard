[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"    String javaFxVersion \u003d \u002717.0.1\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"shavonneg"},"content":"    mainClass.set(\"unim.application.Duke\")","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"shavonneg"},"content":"    mainClassName \u003d \u0027unim.application.Main\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"shavonneg"},"content":"    archiveBaseName \u003d \"unim\"","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"shavonneg"},"content":"    archiveFileName \u003d \u0027unim.jar\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shavonneg":19,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"# Ratzchat User Guide","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"## Welcome to Ratzchat!","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"Ratzchat is your friendly chatbot designed to assist you with task management. Whether you\u0027re a student, professional, or just someone who likes to stay organized, Ratzchat is here to make your life easier. Below is a simple guide to help you make the most out of Ratzchat\u0027s features.","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"### Getting Started","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"1. **Welcome Message**","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"   Upon starting Ratzchat, you\u0027ll receive a warm welcome message. This is your cue to start interacting with the chatbot.","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"### Basic Commands","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"1. Adding Tasks:","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"   - To add a Todo task: todo \u003ctask description\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"   - To add a Deadline task: deadline \u003ctask description\u003e /by \u003cdue date\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"   - To add an Event task: event \u003cevent description\u003e /from \u003cstart date\u003e /to \u003cend date\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"2. Listing Tasks:","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"   - To see your task list: list","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"3. Marking and Unmarking Tasks:","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"   - To mark a task as done: mark \u003ctask number\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"   - To unmark a task: unmark \u003ctask number\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"4. Removing Tasks:","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"   - To delete a task: delete \u003ctask number\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"### Advanced Features ","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"1. Finding Tasks:","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"shavonneg"},"content":"   - To search for tasks with a keyword: find \u003ckeyword\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"2. Exiting Ratzchat:","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"   - To exit the chatbot: bye","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"### Pro Tips ","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"### Example Commands","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"\u003e [!TIP]","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"shavonneg"},"content":"\u003e Ratzchat is designed to simplify your task management. Feel free to experiment with commands and discover what works best for you. If you ever need assistance, just type help.","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"shavonneg"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"shavonneg":28,"-":13}},{"path":"src/main/java/unim/application/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package unim.application;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"import unim.io.MainWindow;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"shavonneg"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"shavonneg"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"shavonneg"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"shavonneg"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"shavonneg"},"content":"    private void flip() {","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"shavonneg"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"shavonneg"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"shavonneg"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"shavonneg"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"shavonneg"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"shavonneg"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"shavonneg"},"content":"    public static DialogBox getUnimDialog(String text, Image img) {","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"shavonneg"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"shavonneg"},"content":"        db.flip();","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"shavonneg"},"content":"        return db;","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"shavonneg":62}},{"path":"src/main/java/unim/application/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package unim.application;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"public class Launcher {","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"        // Launch the Main class (JavaFX application)","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"        Main.main(args);","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"shavonneg":8}},{"path":"src/main/java/unim/application/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package unim.application;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import unim.io.MainWindow;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":" * A GUI for Unim using FXML.","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"    private Unim unim \u003d new Unim();","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"            MainWindow controller \u003d fxmlLoader.getController();","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"            controller.setUnim(unim);","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"shavonneg"},"content":"            controller.showWelcomeMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"            stage.show();","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"shavonneg"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"shavonneg"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"        launch(args);","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"shavonneg":39}},{"path":"src/main/java/unim/application/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package unim.application;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"import unim.io.Storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"import unim.io.Ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"import unim.task.Deadline;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"import unim.task.Event;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"import unim.task.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"import unim.task.Todo;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":" * The Parser class is responsible for parsing user input and executing corresponding commands.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":" * It handles various commands such as listing tasks, marking/unmarking tasks, adding todos,","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":" * deadlines, and events, removing tasks, and exiting the application.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"public class Parser {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"     * Parses the user input into an array of strings, separating the command and the remaining input.","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"     * @param input The user input to be parsed.","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"     * @return An array containing the command and the remaining input.","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"    public static String[] parseInput(String input) {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"        assert input !\u003d null : \"Input cannot be null\";","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"shavonneg"},"content":"        return input.split(\" \", 2);","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"     * Handles the execution of commands based on the parsed user input.","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"     * @param input    The user input to be processed.","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"shavonneg"},"content":"     * @param taskList The task list to be manipulated.","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"     * @return A string result of the command execution.","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"shavonneg"},"content":"    public String handleCommand(String input, TaskList taskList) {","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"shavonneg"},"content":"        String[] parsedInput \u003d Parser.parseInput(input);","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"shavonneg"},"content":"        assert parsedInput.length \u003e\u003d 1 : \"Parsed input should have at least one element\";","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"shavonneg"},"content":"        if (\"list\".equalsIgnoreCase(input)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"shavonneg"},"content":"            return Ui.showTaskList(taskList.getTaskList());","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"shavonneg"},"content":"        } else if (\"bye\".equalsIgnoreCase(input)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"shavonneg"},"content":"            return Ui.showByeMessage();","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"shavonneg"},"content":"        } else if (parsedInput[0].equalsIgnoreCase(\"mark\") ||","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"shavonneg"},"content":"                parsedInput[0].equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"shavonneg"},"content":"            return markingHandler(input, taskList);","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"shavonneg"},"content":"        } else if (parsedInput[0].equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"shavonneg"},"content":"            if (isDeadlineInput(input)) {","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"shavonneg"},"content":"                return handleDeadlines(input, taskList);","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"shavonneg"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"shavonneg"},"content":"                return Ui.showErrorMessage(\"Please complete your request by specifying the details of the task!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"shavonneg"},"content":"        } else if (parsedInput[0].equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"shavonneg"},"content":"            if (isTodoInput(input)) {","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"shavonneg"},"content":"                return handleTodos(input, taskList);","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"shavonneg"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"shavonneg"},"content":"                return Ui.showErrorMessage(\"Please complete your request by specifying the details of the task!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"shavonneg"},"content":"        } else if (parsedInput[0].equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"shavonneg"},"content":"            if (isEventInput(input)) {","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"shavonneg"},"content":"                return handleEvents(input, taskList);","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"shavonneg"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"shavonneg"},"content":"                return Ui.showErrorMessage(\"Please complete your request by specifying the details of the task!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"shavonneg"},"content":"        } else if (parsedInput[0].equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"shavonneg"},"content":"            return handleRemove(input, taskList);","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"shavonneg"},"content":"        } else if (parsedInput[0].equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"shavonneg"},"content":"            return findItems(input, taskList);","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"shavonneg"},"content":"        } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"shavonneg"},"content":"            return Ui.showErrorForInput();","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"shavonneg"},"content":"     * Handles the marking or unmarking of tasks based on user input.","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"shavonneg"},"content":"     * @param input    The user input specifying the task number and the action.","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"shavonneg"},"content":"     * @param taskList The task list to be manipulated.","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"shavonneg"},"content":"    public static String markingHandler(String input, TaskList taskList) {","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"shavonneg"},"content":"        String[] split \u003d input.split(\" \");","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"shavonneg"},"content":"        if (split.length \u003c 2) {","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"shavonneg"},"content":"            return Ui.showErrorMessage(\"Please specify the task number! (e.g. mark 2)\");","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":88,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":89,"author":{"gitId":"shavonneg"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"shavonneg"},"content":"            int index \u003d Integer.parseInt(split[1]) - 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":91,"author":{"gitId":"shavonneg"},"content":"            Task task \u003d taskList.getTaskList().get(index);","lastModifiedDate":"2024-02-06"},{"lineNumber":92,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":93,"author":{"gitId":"shavonneg"},"content":"            if (\"mark\".equalsIgnoreCase(split[0])) {","lastModifiedDate":"2024-02-05"},{"lineNumber":94,"author":{"gitId":"shavonneg"},"content":"                task.markAsDone();","lastModifiedDate":"2024-02-05"},{"lineNumber":95,"author":{"gitId":"shavonneg"},"content":"                Storage.saveTasks(taskList.getTaskList());","lastModifiedDate":"2024-02-06"},{"lineNumber":96,"author":{"gitId":"shavonneg"},"content":"                return Ui.showMarkedAsDone(task);","lastModifiedDate":"2024-02-13"},{"lineNumber":97,"author":{"gitId":"shavonneg"},"content":"            } else if (\"unmark\".equalsIgnoreCase(split[0])) {","lastModifiedDate":"2024-02-05"},{"lineNumber":98,"author":{"gitId":"shavonneg"},"content":"                task.unmarkTask();","lastModifiedDate":"2024-02-05"},{"lineNumber":99,"author":{"gitId":"shavonneg"},"content":"                Storage.saveTasks(taskList.getTaskList());","lastModifiedDate":"2024-02-06"},{"lineNumber":100,"author":{"gitId":"shavonneg"},"content":"                return Ui.showUnmarkedTask(task);","lastModifiedDate":"2024-02-13"},{"lineNumber":101,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":102,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":103,"author":{"gitId":"shavonneg"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":104,"author":{"gitId":"shavonneg"},"content":"            return Ui.showErrorMessage(\"Invalid task number. Please check your to-do list again (use \u0027list\u0027).\");","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":106,"author":{"gitId":"shavonneg"},"content":"        return Ui.showErrorMessage(\"Invalid input for mark. Try putting e.g. mark 2\");","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":108,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":109,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":110,"author":{"gitId":"shavonneg"},"content":"     * Handles the creation and addition of Todo tasks to the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":111,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":112,"author":{"gitId":"shavonneg"},"content":"     * @param input    User input specifying the Todo description.","lastModifiedDate":"2024-02-05"},{"lineNumber":113,"author":{"gitId":"shavonneg"},"content":"     * @param taskList The task list to which the Todo task will be added.","lastModifiedDate":"2024-02-05"},{"lineNumber":114,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":115,"author":{"gitId":"shavonneg"},"content":"    private static String handleTodos(String input, TaskList taskList) {","lastModifiedDate":"2024-02-13"},{"lineNumber":116,"author":{"gitId":"shavonneg"},"content":"        String description \u003d input.substring(5).trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":117,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":118,"author":{"gitId":"shavonneg"},"content":"        if (isDuplicateTask(description, taskList)) {","lastModifiedDate":"2024-02-18"},{"lineNumber":119,"author":{"gitId":"shavonneg"},"content":"            return Ui.showErrorMessage(\"Duplicate task found. Task was not added, it\u0027s already there!\");","lastModifiedDate":"2024-02-19"},{"lineNumber":120,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":121,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":122,"author":{"gitId":"shavonneg"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":123,"author":{"gitId":"shavonneg"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2024-02-05"},{"lineNumber":124,"author":{"gitId":"shavonneg"},"content":"        Storage.saveTasks(taskList.getTaskList());","lastModifiedDate":"2024-02-06"},{"lineNumber":125,"author":{"gitId":"shavonneg"},"content":"        return Ui.showTodoAdded(todo, taskList.getTotalTasks());","lastModifiedDate":"2024-02-13"},{"lineNumber":126,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":127,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":128,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":129,"author":{"gitId":"shavonneg"},"content":"     * Handles the creation and addition of Deadline tasks to the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":130,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":131,"author":{"gitId":"shavonneg"},"content":"     * @param input    User input specifying the Deadline description and due date.","lastModifiedDate":"2024-02-05"},{"lineNumber":132,"author":{"gitId":"shavonneg"},"content":"     * @param taskList The task list to which the Deadline task will be added.","lastModifiedDate":"2024-02-05"},{"lineNumber":133,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":134,"author":{"gitId":"shavonneg"},"content":"    private static String handleDeadlines(String input, TaskList taskList) {","lastModifiedDate":"2024-02-13"},{"lineNumber":135,"author":{"gitId":"shavonneg"},"content":"        String[] splitParts \u003d input.substring(9).split(\"/by\", 2);","lastModifiedDate":"2024-02-05"},{"lineNumber":136,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":137,"author":{"gitId":"shavonneg"},"content":"        if (splitParts.length \u003e 1) {","lastModifiedDate":"2024-02-05"},{"lineNumber":138,"author":{"gitId":"shavonneg"},"content":"            String description \u003d splitParts[0].trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":139,"author":{"gitId":"shavonneg"},"content":"            String date \u003d splitParts[1].trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":140,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":141,"author":{"gitId":"shavonneg"},"content":"            if (isDuplicateTask(description, taskList)) {","lastModifiedDate":"2024-02-18"},{"lineNumber":142,"author":{"gitId":"shavonneg"},"content":"                return Ui.showErrorMessage(\"Duplicate task found. Task was not added, it\u0027s already there!\");","lastModifiedDate":"2024-02-19"},{"lineNumber":143,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":144,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":145,"author":{"gitId":"shavonneg"},"content":"            if (isValidDate(date)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":146,"author":{"gitId":"shavonneg"},"content":"                LocalDate d1 \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"M/d/yyyy HHmm\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":147,"author":{"gitId":"shavonneg"},"content":"                Deadline deadline \u003d new Deadline(description, d1);","lastModifiedDate":"2024-02-06"},{"lineNumber":148,"author":{"gitId":"shavonneg"},"content":"                taskList.addTask(deadline);","lastModifiedDate":"2024-02-05"},{"lineNumber":149,"author":{"gitId":"shavonneg"},"content":"                Storage.saveTasks(taskList.getTaskList());","lastModifiedDate":"2024-02-06"},{"lineNumber":150,"author":{"gitId":"shavonneg"},"content":"                return Ui.showDeadlineAdded(deadline, taskList.getTotalTasks());","lastModifiedDate":"2024-02-13"},{"lineNumber":151,"author":{"gitId":"shavonneg"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":152,"author":{"gitId":"shavonneg"},"content":"                Deadline deadline \u003d new Deadline(description, date);","lastModifiedDate":"2024-02-06"},{"lineNumber":153,"author":{"gitId":"shavonneg"},"content":"                taskList.addTask(deadline);","lastModifiedDate":"2024-02-05"},{"lineNumber":154,"author":{"gitId":"shavonneg"},"content":"                Storage.saveTasks(taskList.getTaskList());","lastModifiedDate":"2024-02-06"},{"lineNumber":155,"author":{"gitId":"shavonneg"},"content":"                return Ui.showDeadlineAdded(deadline, taskList.getTotalTasks());","lastModifiedDate":"2024-02-13"},{"lineNumber":156,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":157,"author":{"gitId":"shavonneg"},"content":"        } else {","lastModifiedDate":"2024-02-18"},{"lineNumber":158,"author":{"gitId":"shavonneg"},"content":"            return Ui.showErrorMessage(\"Invalid input format for deadline. Please follow this format: .\");","lastModifiedDate":"2024-02-19"},{"lineNumber":159,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":160,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":161,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":162,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":163,"author":{"gitId":"shavonneg"},"content":"     * Handles the creation and addition of Event tasks to the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":164,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":165,"author":{"gitId":"shavonneg"},"content":"     * @param input    User input specifying the Event description and date range.","lastModifiedDate":"2024-02-05"},{"lineNumber":166,"author":{"gitId":"shavonneg"},"content":"     * @param taskList The task list to which the Event task will be added.","lastModifiedDate":"2024-02-05"},{"lineNumber":167,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":168,"author":{"gitId":"shavonneg"},"content":"    private static String handleEvents(String input, TaskList taskList) {","lastModifiedDate":"2024-02-13"},{"lineNumber":169,"author":{"gitId":"shavonneg"},"content":"        String[] splitParts \u003d input.substring(6).split(\"/from\", 2);","lastModifiedDate":"2024-02-05"},{"lineNumber":170,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":171,"author":{"gitId":"shavonneg"},"content":"        if (splitParts.length \u003e 1) {","lastModifiedDate":"2024-02-19"},{"lineNumber":172,"author":{"gitId":"shavonneg"},"content":"            String description \u003d splitParts[0].trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":173,"author":{"gitId":"shavonneg"},"content":"            String dateRange \u003d splitParts[1].trim();","lastModifiedDate":"2024-02-19"},{"lineNumber":174,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":175,"author":{"gitId":"shavonneg"},"content":"            String[] dateParts \u003d dateRange.split(\"/to\", 2);","lastModifiedDate":"2024-02-19"},{"lineNumber":176,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":177,"author":{"gitId":"shavonneg"},"content":"            if (dateParts.length \u003e 1) {","lastModifiedDate":"2024-02-19"},{"lineNumber":178,"author":{"gitId":"shavonneg"},"content":"                String fromDate \u003d dateParts[0].trim();","lastModifiedDate":"2024-02-19"},{"lineNumber":179,"author":{"gitId":"shavonneg"},"content":"                String toDate \u003d dateParts[1].trim();","lastModifiedDate":"2024-02-19"},{"lineNumber":180,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":181,"author":{"gitId":"shavonneg"},"content":"                if (isDuplicateTask(description, taskList)) {","lastModifiedDate":"2024-02-18"},{"lineNumber":182,"author":{"gitId":"shavonneg"},"content":"                    return Ui.showErrorMessage(\"Duplicate task found. Task not added, it\u0027s already there!\");","lastModifiedDate":"2024-02-18"},{"lineNumber":183,"author":{"gitId":"shavonneg"},"content":"                }","lastModifiedDate":"2024-02-18"},{"lineNumber":184,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":185,"author":{"gitId":"shavonneg"},"content":"                if (isValidDate(fromDate) \u0026\u0026 isValidDate(toDate)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":186,"author":{"gitId":"shavonneg"},"content":"                    LocalDate d1 \u003d LocalDate.parse(fromDate, DateTimeFormatter.ofPattern(\"M/d/yyyy HHmm\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":187,"author":{"gitId":"shavonneg"},"content":"                    LocalDate d2 \u003d LocalDate.parse(toDate, DateTimeFormatter.ofPattern(\"M/d/yyyy HHmm\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":188,"author":{"gitId":"shavonneg"},"content":"                    Event event \u003d new Event(description, d1, d2);","lastModifiedDate":"2024-02-05"},{"lineNumber":189,"author":{"gitId":"shavonneg"},"content":"                    taskList.addTask(event);","lastModifiedDate":"2024-02-05"},{"lineNumber":190,"author":{"gitId":"shavonneg"},"content":"                    Storage.saveTasks(taskList.getTaskList());","lastModifiedDate":"2024-02-06"},{"lineNumber":191,"author":{"gitId":"shavonneg"},"content":"                    return Ui.showTaskAdded(event, taskList.getTotalTasks());","lastModifiedDate":"2024-02-19"},{"lineNumber":192,"author":{"gitId":"shavonneg"},"content":"                } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":193,"author":{"gitId":"shavonneg"},"content":"                    return Ui.showErrorMessage(\"Invalid input format for event. Please provide valid dates.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":194,"author":{"gitId":"shavonneg"},"content":"                }","lastModifiedDate":"2024-02-19"},{"lineNumber":195,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":196,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":197,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":198,"author":{"gitId":"shavonneg"},"content":"        return Ui.showErrorMessage(\"Invalid input format for event.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":199,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":200,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":201,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":202,"author":{"gitId":"shavonneg"},"content":"     * Handles the removal of tasks from the task list based on user input.","lastModifiedDate":"2024-02-05"},{"lineNumber":203,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":204,"author":{"gitId":"shavonneg"},"content":"     * @param input    User input specifying the task number to be removed.","lastModifiedDate":"2024-02-05"},{"lineNumber":205,"author":{"gitId":"shavonneg"},"content":"     * @param taskList The task list from which the task will be removed.","lastModifiedDate":"2024-02-05"},{"lineNumber":206,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":207,"author":{"gitId":"shavonneg"},"content":"    private static String handleRemove(String input, TaskList taskList) {","lastModifiedDate":"2024-02-13"},{"lineNumber":208,"author":{"gitId":"shavonneg"},"content":"        String[] splitParts \u003d input.split(\" \");","lastModifiedDate":"2024-02-05"},{"lineNumber":209,"author":{"gitId":"shavonneg"},"content":"        if (splitParts.length \u003c 2) {","lastModifiedDate":"2024-02-05"},{"lineNumber":210,"author":{"gitId":"shavonneg"},"content":"            System.out.println(\"Please specify which task number you want to delete!\");","lastModifiedDate":"2024-02-17"},{"lineNumber":211,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":212,"author":{"gitId":"shavonneg"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":213,"author":{"gitId":"shavonneg"},"content":"            int index \u003d Integer.parseInt(splitParts[1]) - 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":214,"author":{"gitId":"shavonneg"},"content":"            Task removedTask \u003d taskList.removeTask(index);","lastModifiedDate":"2024-02-05"},{"lineNumber":215,"author":{"gitId":"shavonneg"},"content":"            Storage.saveTasks(taskList.getTaskList());","lastModifiedDate":"2024-02-06"},{"lineNumber":216,"author":{"gitId":"shavonneg"},"content":"            return Ui.showTaskRemoved(removedTask, taskList.getTotalTasks());","lastModifiedDate":"2024-02-19"},{"lineNumber":217,"author":{"gitId":"shavonneg"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":218,"author":{"gitId":"shavonneg"},"content":"            return Ui.showErrorMessage(\"Invalid task number. Please refer to your to-do list again.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":219,"author":{"gitId":"shavonneg"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":220,"author":{"gitId":"shavonneg"},"content":"            return Ui.showErrorMessage(\"Invalid input format for delete. Try something like \u0027delete 1\u0027\");","lastModifiedDate":"2024-02-19"},{"lineNumber":221,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":222,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":223,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":224,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":225,"author":{"gitId":"shavonneg"},"content":"     * Checks if a task with the given description already exists in the task list.","lastModifiedDate":"2024-02-18"},{"lineNumber":226,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":227,"author":{"gitId":"shavonneg"},"content":"     * @param description The description of the task to check.","lastModifiedDate":"2024-02-18"},{"lineNumber":228,"author":{"gitId":"shavonneg"},"content":"     * @param taskList    The task list to check for duplicates.","lastModifiedDate":"2024-02-18"},{"lineNumber":229,"author":{"gitId":"shavonneg"},"content":"     * @return True if a duplicate task is found, false otherwise.","lastModifiedDate":"2024-02-18"},{"lineNumber":230,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":231,"author":{"gitId":"shavonneg"},"content":"    private static boolean isDuplicateTask(String description, TaskList taskList) {","lastModifiedDate":"2024-02-18"},{"lineNumber":232,"author":{"gitId":"shavonneg"},"content":"        for (Task task : taskList.getTaskList()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":233,"author":{"gitId":"shavonneg"},"content":"            if (task.getDescription().equalsIgnoreCase(description)) {","lastModifiedDate":"2024-02-18"},{"lineNumber":234,"author":{"gitId":"shavonneg"},"content":"                return true;","lastModifiedDate":"2024-02-18"},{"lineNumber":235,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":236,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":237,"author":{"gitId":"shavonneg"},"content":"        return false;","lastModifiedDate":"2024-02-18"},{"lineNumber":238,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":239,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":240,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":241,"author":{"gitId":"shavonneg"},"content":"     * Handles finding items based on a keyword.","lastModifiedDate":"2024-02-18"},{"lineNumber":242,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":243,"author":{"gitId":"shavonneg"},"content":"     * @param input    User input specifying the keyword for finding tasks.","lastModifiedDate":"2024-02-18"},{"lineNumber":244,"author":{"gitId":"shavonneg"},"content":"     * @param tasks The task list to search for tasks.","lastModifiedDate":"2024-02-18"},{"lineNumber":245,"author":{"gitId":"shavonneg"},"content":"     * @return A string result or message.","lastModifiedDate":"2024-02-18"},{"lineNumber":246,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":247,"author":{"gitId":"shavonneg"},"content":"    public String findItems(String input, TaskList tasks) {","lastModifiedDate":"2024-02-13"},{"lineNumber":248,"author":{"gitId":"shavonneg"},"content":"        Ui.showFindItemList(input);","lastModifiedDate":"2024-02-06"},{"lineNumber":249,"author":{"gitId":"shavonneg"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2024-02-18"},{"lineNumber":250,"author":{"gitId":"shavonneg"},"content":"        String[] splitParts \u003d input.split(\"find\", 2);","lastModifiedDate":"2024-02-06"},{"lineNumber":251,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":252,"author":{"gitId":"shavonneg"},"content":"        if (splitParts.length \u003e 1) {","lastModifiedDate":"2024-02-06"},{"lineNumber":253,"author":{"gitId":"shavonneg"},"content":"            String keyword \u003d splitParts[1].trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":254,"author":{"gitId":"shavonneg"},"content":"            StringBuilder foundTasks \u003d new StringBuilder(Ui.showFindItemList(keyword));","lastModifiedDate":"2024-02-19"},{"lineNumber":255,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":256,"author":{"gitId":"shavonneg"},"content":"            for (int i \u003d 0; i \u003c tasks.getTotalTasks(); i++) {","lastModifiedDate":"2024-02-06"},{"lineNumber":257,"author":{"gitId":"shavonneg"},"content":"                Task item \u003d tasks.getTask(i);","lastModifiedDate":"2024-02-06"},{"lineNumber":258,"author":{"gitId":"shavonneg"},"content":"                if (item.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2024-02-06"},{"lineNumber":259,"author":{"gitId":"shavonneg"},"content":"                    foundTasks.append(Ui.showFoundTask(item));","lastModifiedDate":"2024-02-19"},{"lineNumber":260,"author":{"gitId":"shavonneg"},"content":"                    isFound \u003d true;","lastModifiedDate":"2024-02-18"},{"lineNumber":261,"author":{"gitId":"shavonneg"},"content":"                }","lastModifiedDate":"2024-02-06"},{"lineNumber":262,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":263,"author":{"gitId":"shavonneg"},"content":"            if (isFound) {","lastModifiedDate":"2024-02-19"},{"lineNumber":264,"author":{"gitId":"shavonneg"},"content":"                return foundTasks.toString();","lastModifiedDate":"2024-02-19"},{"lineNumber":265,"author":{"gitId":"shavonneg"},"content":"            } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":266,"author":{"gitId":"shavonneg"},"content":"                return Ui.showErrorMessage(\"No tasks found containing: \" + keyword);","lastModifiedDate":"2024-02-19"},{"lineNumber":267,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":268,"author":{"gitId":"shavonneg"},"content":"        } else {","lastModifiedDate":"2024-02-19"},{"lineNumber":269,"author":{"gitId":"shavonneg"},"content":"            return Ui.showErrorMessage(\"Invalid input format for find. Please specify a search keyword.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":270,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":271,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":272,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":273,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":274,"author":{"gitId":"shavonneg"},"content":"     * Validates the input format for creating Deadlines.","lastModifiedDate":"2024-02-05"},{"lineNumber":275,"author":{"gitId":"shavonneg"},"content":"     * @param input User input specifying the Deadline description and due date.","lastModifiedDate":"2024-02-05"},{"lineNumber":276,"author":{"gitId":"shavonneg"},"content":"     * @return True if the input format is valid, false otherwise.","lastModifiedDate":"2024-02-05"},{"lineNumber":277,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":278,"author":{"gitId":"shavonneg"},"content":"    private static boolean isDeadlineInput(String input) {","lastModifiedDate":"2024-02-06"},{"lineNumber":279,"author":{"gitId":"shavonneg"},"content":"        String[] splitParts \u003d input.substring(9).split(\"/by\", 2);","lastModifiedDate":"2024-02-05"},{"lineNumber":280,"author":{"gitId":"shavonneg"},"content":"        return splitParts.length \u003e 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":281,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":282,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":283,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":284,"author":{"gitId":"shavonneg"},"content":"     * Validates the input format for creating Todo tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":285,"author":{"gitId":"shavonneg"},"content":"     * @param input User input specifying the Todo description.","lastModifiedDate":"2024-02-05"},{"lineNumber":286,"author":{"gitId":"shavonneg"},"content":"     * @return True if the input format is valid, false otherwise.","lastModifiedDate":"2024-02-05"},{"lineNumber":287,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":288,"author":{"gitId":"shavonneg"},"content":"    private static boolean isTodoInput(String input) {","lastModifiedDate":"2024-02-06"},{"lineNumber":289,"author":{"gitId":"shavonneg"},"content":"        return input.length() \u003e 5;","lastModifiedDate":"2024-02-05"},{"lineNumber":290,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":291,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":292,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":293,"author":{"gitId":"shavonneg"},"content":"     * Validates the input format for creating Events.","lastModifiedDate":"2024-02-05"},{"lineNumber":294,"author":{"gitId":"shavonneg"},"content":"     * @param input User input specifying the Event description and date range.","lastModifiedDate":"2024-02-05"},{"lineNumber":295,"author":{"gitId":"shavonneg"},"content":"     * @return True if the input format is valid, false otherwise.","lastModifiedDate":"2024-02-05"},{"lineNumber":296,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":297,"author":{"gitId":"shavonneg"},"content":"    private static boolean isEventInput(String input) {","lastModifiedDate":"2024-02-06"},{"lineNumber":298,"author":{"gitId":"shavonneg"},"content":"        String[] splitParts \u003d input.substring(6).split(\"/from\", 2);","lastModifiedDate":"2024-02-05"},{"lineNumber":299,"author":{"gitId":"shavonneg"},"content":"        return splitParts.length \u003e 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":300,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":301,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":302,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":303,"author":{"gitId":"shavonneg"},"content":"     * Validates the input format for a date string.","lastModifiedDate":"2024-02-05"},{"lineNumber":304,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":305,"author":{"gitId":"shavonneg"},"content":"     * @param input The date string to be validated.","lastModifiedDate":"2024-02-05"},{"lineNumber":306,"author":{"gitId":"shavonneg"},"content":"     * @return True if the input is a valid date string, false otherwise.","lastModifiedDate":"2024-02-05"},{"lineNumber":307,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":308,"author":{"gitId":"shavonneg"},"content":"    private static boolean isValidDate(String input) {","lastModifiedDate":"2024-02-05"},{"lineNumber":309,"author":{"gitId":"shavonneg"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":310,"author":{"gitId":"shavonneg"},"content":"            LocalDate.parse(input, DateTimeFormatter.ofPattern(\"M/d/yyyy HHmm\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":311,"author":{"gitId":"shavonneg"},"content":"            return true;","lastModifiedDate":"2024-02-05"},{"lineNumber":312,"author":{"gitId":"shavonneg"},"content":"        } catch (DateTimeParseException e1) {","lastModifiedDate":"2024-02-05"},{"lineNumber":313,"author":{"gitId":"shavonneg"},"content":"            try {","lastModifiedDate":"2024-02-05"},{"lineNumber":314,"author":{"gitId":"shavonneg"},"content":"                LocalDate.parse(input, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":315,"author":{"gitId":"shavonneg"},"content":"                return true;","lastModifiedDate":"2024-02-05"},{"lineNumber":316,"author":{"gitId":"shavonneg"},"content":"            } catch (DateTimeParseException e2) {","lastModifiedDate":"2024-02-05"},{"lineNumber":317,"author":{"gitId":"shavonneg"},"content":"                return false;","lastModifiedDate":"2024-02-05"},{"lineNumber":318,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":319,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":320,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":321,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":322,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":323,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":324,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"shavonneg":324}},{"path":"src/main/java/unim/application/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package unim.application;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"import unim.task.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":" * TaskList - Represents a list of tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"     * Gets specific task.","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"        assert i \u003e\u003d 0 \u0026\u0026 i \u003c tasks.size() : \"Index out of bounds\";","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"        return tasks.get(i);","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"     * Gets the list of tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"shavonneg"},"content":"     * @return ArrayList of tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"shavonneg"},"content":"        return tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"shavonneg"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"shavonneg"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"shavonneg"},"content":"    public boolean addTask(Task task) {","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"shavonneg"},"content":"        if (!tasks.contains(task)) {","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"shavonneg"},"content":"            tasks.add(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"shavonneg"},"content":"            return true;","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"shavonneg"},"content":"        } else {","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"shavonneg"},"content":"            return false;","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"shavonneg"},"content":"     * Removes a task from the task list based on its index.","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"shavonneg"},"content":"     * @param i The index of the task to be removed.","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"shavonneg"},"content":"     * @return The removed task.","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"shavonneg"},"content":"    public Task removeTask(int i) {","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"shavonneg"},"content":"        assert i \u003e\u003d 0 \u0026\u0026 i \u003c tasks.size() : \"Index out of bounds\";","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"shavonneg"},"content":"        return tasks.remove(i);","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"shavonneg"},"content":"     * Gets the total number of tasks in the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"shavonneg"},"content":"     * @return The total number of tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"shavonneg"},"content":"    public int getTotalTasks() {","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"shavonneg"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"shavonneg":68}},{"path":"src/main/java/unim/application/Unim.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package unim.application;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"import unim.io.Storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import unim.io.Ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":" * The Unim class represents the main application that manages user interactions","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":" * for a task management system.","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"public class Unim {","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"        Storage.createFolder();","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"        Storage.loadFile(taskList.getTaskList());","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"        String unimResponse \u003d parser.handleCommand(input, taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"        return unimResponse;","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"shavonneg":23}},{"path":"src/main/java/unim/application/UnimException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package unim.application;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"public class UnimException extends IllegalArgumentException {","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"     * Constructs a DukeException with the specified error message.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"    public UnimException(String message) {","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"        super(message);","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"     * Constructs a DukeException with the specified error message and a nested exception.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"     * @param e       The nested exception that caused this DukeException.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"    public UnimException(String message, Exception e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"        super(message, e);","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"     * Creates a DukeException for a generic loading error without a nested exception.","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"     * @return A DukeException indicating an error during the loading process.","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"shavonneg"},"content":"    public static UnimException createLoadingError() {","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"        return new UnimException(\"Error loading files\");","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"     * Creates a DukeException for a loading error with a nested exception.","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"shavonneg"},"content":"     * @param e The nested exception that caused the loading error.","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"     * @return A DukeException indicating an error during the loading process with details from the nested exception.","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"shavonneg"},"content":"    public static UnimException showLoad(Exception e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"shavonneg"},"content":"        return new UnimException(\"Error loading files\", e);","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"shavonneg":42}},{"path":"src/main/java/unim/io/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package unim.io;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import unim.application.*;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"    private Unim unim;","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"    private Image nervousUnicorn \u003d new Image(this.getClass().getResourceAsStream(\"/images/nervousUnicorn.png\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"shavonneg"},"content":"    private Image happyUnicorn \u003d new Image(this.getClass().getResourceAsStream(\"/images/happyUnicorn.png\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"shavonneg"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"        dialogContainer.setStyle(\"-fx-background-color: #fff5fd;\");","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"    public void setUnim(Unim d) {","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"shavonneg"},"content":"        this.unim \u003d d;","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"shavonneg"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"shavonneg"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"shavonneg"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"shavonneg"},"content":"        String welcomeText \u003d Ui.showWelcomeMessage();","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"shavonneg"},"content":"        dialogContainer.getChildren().add(DialogBox.getUnimDialog(welcomeText, happyUnicorn));","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"shavonneg"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Unim\u0027s reply and then appends them to","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"shavonneg"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"shavonneg"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"shavonneg"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"shavonneg"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"shavonneg"},"content":"        String response \u003d unim.getResponse(input);","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"shavonneg"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"shavonneg"},"content":"                DialogBox.getUserDialog(input, nervousUnicorn),","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"shavonneg"},"content":"                DialogBox.getUnimDialog(response, happyUnicorn)","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"shavonneg"},"content":"        );","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"shavonneg"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"shavonneg":63}},{"path":"src/main/java/unim/io/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package unim.io;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"import unim.task.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import java.io.*;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":" * Storage - Handles saving and loading tasks to and from a file.","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"public class Storage {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"    private static final String FILEPATH \u003d \"./data/unim.txt\";","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"     * Creates the data folder if it does not exist.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"    public static void createFolder() {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"        Path folder \u003d Paths.get(\"./data/\");","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"        assert Files.notExists(folder) : \"Data folder already exists\";","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"        if (Files.notExists(folder)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"                Files.createDirectories(folder);","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"                e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"                assert false : \"Failed to create data folder\";","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"     * Saves tasks to a file.","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"     * @param tasks ArrayList of tasks to be saved.","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"    public static void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"shavonneg"},"content":"        assert tasks !\u003d null : \"Tasks should not be null\";","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"shavonneg"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILEPATH, true))) {","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"shavonneg"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"shavonneg"},"content":"                writer.write(task.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"shavonneg"},"content":"                writer.newLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"shavonneg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"shavonneg"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"shavonneg"},"content":"            assert false : \"Failed to save tasks to file\";","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"shavonneg"},"content":"     * Loads tasks from a file.","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"shavonneg"},"content":"     * @param tasks ArrayList to store the loaded tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"shavonneg"},"content":"    public static void loadFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"shavonneg"},"content":"        File file \u003d new File(FILEPATH);","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"shavonneg"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"shavonneg"},"content":"            return;","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"shavonneg"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"shavonneg"},"content":"            String line;","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"shavonneg"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"shavonneg"},"content":"                line \u003d line.replace(\"[X]\", \"\").replace(\"[ ]\", \"\").trim();","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"shavonneg"},"content":"                tasks.add(new Task(line));","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"shavonneg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"shavonneg"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"shavonneg":72}},{"path":"src/main/java/unim/io/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package unim.io;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"import unim.task.Deadline;","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import unim.task.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"import unim.task.Todo;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":" * Ui - Handles interactions with the user, including input and output.","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"     * Generates the welcome message.","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"     * @return The welcome message as a String.","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"    public static String showWelcomeMessage() {","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"        return \"Hey there, welcome back to Unim!\\n\" +","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"                \"What\u0027s on your mind today?\\n\";","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"     * Generates the goodbye message.","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"     * @return The goodbye message as a String.","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"    public static String showByeMessage() {","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"shavonneg"},"content":"        return \"Leaving ALREADY? BYEBYE :( \\n Remember, I\u0027m just a message away. \\n\";","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"     * Displays an error message.","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"    public static String showErrorMessage(String message) {","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"shavonneg"},"content":"        assert message !\u003d null : \"Error message should not be null\";","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"shavonneg"},"content":"        return \"Whoops! \" + message + \"\\n\";","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"shavonneg"},"content":"     * Displays an error message for invalid inputs.","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"shavonneg"},"content":"    public static String showErrorForInput() {","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"shavonneg"},"content":"        String message \u003d \"I\u0027m sorry, I don\u0027t understand! Please type your request again. \\n \" +","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"shavonneg"},"content":"                \"You can choose to: \\n 1. add tasks (todo, deadline, event) \\n 2. find tasks \\n \" +","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"shavonneg"},"content":"                \"3. mark or unamrk tasks \\n 4. delete tasks\";","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"shavonneg"},"content":"        return message;","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"shavonneg"},"content":"     * Displays the list of tasks    .","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"shavonneg"},"content":"     * @param tasks ArrayList of tasks to be displayed.","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"shavonneg"},"content":"     * @return The user\u0027s input as a String.","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"shavonneg"},"content":"    public static String showTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"shavonneg"},"content":"        StringBuilder taskListString \u003d new StringBuilder();","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"shavonneg"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"shavonneg"},"content":"            taskListString.append(\"No tasks in your list!\\n\");","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"shavonneg"},"content":"        } else {","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"shavonneg"},"content":"            taskListString.append(\"Here are your to-dos: \");","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"shavonneg"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"shavonneg"},"content":"                taskListString.append(\"\\n\").append((i + 1)).append(\".\").append(tasks.get(i).toString());","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"shavonneg"},"content":"            taskListString.append(\"\\n\");","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"shavonneg"},"content":"        return taskListString.toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"shavonneg"},"content":"     * Generates a message indicating a todo task has been added.","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"shavonneg"},"content":"     * @param todo The todo task that was added.","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"shavonneg"},"content":"     * @param totalTasks The total number of tasks in the list after adding the todo.","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"shavonneg"},"content":"     * @return A formatted message as a String.","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"shavonneg"},"content":"    public static String showTodoAdded(Todo todo, int totalTasks) {","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"shavonneg"},"content":"        String response \u003d \"Your to-do: \" + todo + \" is on the list! You\u0027re gonna nail it :)\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"shavonneg"},"content":"                + \"Just \" + totalTasks + \" tasks in your list now.\"","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"shavonneg"},"content":"                + \"\\n\";","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"shavonneg"},"content":"        return response;","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":88,"author":{"gitId":"shavonneg"},"content":"     * Generates a message indicating a deadline task has been added.","lastModifiedDate":"2024-02-13"},{"lineNumber":89,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"shavonneg"},"content":"     * @param deadline The deadline task that was added.","lastModifiedDate":"2024-02-13"},{"lineNumber":91,"author":{"gitId":"shavonneg"},"content":"     * @param totalTasks The total number of tasks in the list after adding the deadline.","lastModifiedDate":"2024-02-13"},{"lineNumber":92,"author":{"gitId":"shavonneg"},"content":"     * @return A formatted message as a String.","lastModifiedDate":"2024-02-13"},{"lineNumber":93,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":94,"author":{"gitId":"shavonneg"},"content":"    public static String showDeadlineAdded(Deadline deadline, int totalTasks) {","lastModifiedDate":"2024-02-13"},{"lineNumber":95,"author":{"gitId":"shavonneg"},"content":"        return \"New deadline alert!\\n \" + deadline + \"!\\n\" +","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"shavonneg"},"content":"                \"Now you have \" + totalTasks + \" tasks in your list.\\n\";","lastModifiedDate":"2024-02-13"},{"lineNumber":97,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"shavonneg"},"content":"     * Displays a message indicating the tasks that are found.","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"shavonneg"},"content":"     * @param task The tasks to be displayed in the list.","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"shavonneg"},"content":"    public static String showFoundTask(Task task) {","lastModifiedDate":"2024-02-19"},{"lineNumber":106,"author":{"gitId":"shavonneg"},"content":"        return task.toString() + \"\\n\";","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":108,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":109,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":110,"author":{"gitId":"shavonneg"},"content":"     * Displays a message indicating that a task has been marked as done.","lastModifiedDate":"2024-02-05"},{"lineNumber":111,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":112,"author":{"gitId":"shavonneg"},"content":"     * @param task The task that has been marked as done.","lastModifiedDate":"2024-02-05"},{"lineNumber":113,"author":{"gitId":"shavonneg"},"content":"     * @return String representation of the marked task.","lastModifiedDate":"2024-02-13"},{"lineNumber":114,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":115,"author":{"gitId":"shavonneg"},"content":"    public static String showMarkedAsDone(Task task) {","lastModifiedDate":"2024-02-13"},{"lineNumber":116,"author":{"gitId":"shavonneg"},"content":"        return \"Boom! \" + task + \" is marked done.\\n\" +","lastModifiedDate":"2024-02-18"},{"lineNumber":117,"author":{"gitId":"shavonneg"},"content":"                \"You\u0027re crushing it!! What\u0027s next?\";","lastModifiedDate":"2024-02-18"},{"lineNumber":118,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":121,"author":{"gitId":"shavonneg"},"content":"     * Displays a message indicating that a task has been marked as done.","lastModifiedDate":"2024-02-13"},{"lineNumber":122,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":123,"author":{"gitId":"shavonneg"},"content":"     * @param task The task that has been unmarked.","lastModifiedDate":"2024-02-05"},{"lineNumber":124,"author":{"gitId":"shavonneg"},"content":"     * @return String representation of the unmarked task.","lastModifiedDate":"2024-02-13"},{"lineNumber":125,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":126,"author":{"gitId":"shavonneg"},"content":"    public static String showUnmarkedTask(Task task) {","lastModifiedDate":"2024-02-13"},{"lineNumber":127,"author":{"gitId":"shavonneg"},"content":"        return \"Not done yet? Time is ticking!! \" +","lastModifiedDate":"2024-02-18"},{"lineNumber":128,"author":{"gitId":"shavonneg"},"content":"                \"Try to finish this task soon: \\n\" + task + \"\\n\";","lastModifiedDate":"2024-02-19"},{"lineNumber":129,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":130,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":131,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":132,"author":{"gitId":"shavonneg"},"content":"     * Displays a message indicating that a task has been added.","lastModifiedDate":"2024-02-05"},{"lineNumber":133,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":134,"author":{"gitId":"shavonneg"},"content":"     * @param task       The task that has been added.","lastModifiedDate":"2024-02-13"},{"lineNumber":135,"author":{"gitId":"shavonneg"},"content":"     * @param totalTasks The total number of tasks after the addition.","lastModifiedDate":"2024-02-05"},{"lineNumber":136,"author":{"gitId":"shavonneg"},"content":"     * @return String representation of the added task.","lastModifiedDate":"2024-02-13"},{"lineNumber":137,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":138,"author":{"gitId":"shavonneg"},"content":"    public static String showTaskAdded(Task task, int totalTasks) {","lastModifiedDate":"2024-02-13"},{"lineNumber":139,"author":{"gitId":"shavonneg"},"content":"        return \"Ok! \" + task + \"is on the list!\\n\" +","lastModifiedDate":"2024-02-18"},{"lineNumber":140,"author":{"gitId":"shavonneg"},"content":"                \"Now you have \" + totalTasks + \" tasks in your list.\\n\";","lastModifiedDate":"2024-02-18"},{"lineNumber":141,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":142,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":143,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":144,"author":{"gitId":"shavonneg"},"content":"     * Displays a message indicating that a task has been removed.","lastModifiedDate":"2024-02-13"},{"lineNumber":145,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":146,"author":{"gitId":"shavonneg"},"content":"     * @param removedTask The task that has been removed.","lastModifiedDate":"2024-02-13"},{"lineNumber":147,"author":{"gitId":"shavonneg"},"content":"     * @param totalTasks  The total number of tasks after the removal.","lastModifiedDate":"2024-02-13"},{"lineNumber":148,"author":{"gitId":"shavonneg"},"content":"     * @return String representation of the removed task.","lastModifiedDate":"2024-02-13"},{"lineNumber":149,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":150,"author":{"gitId":"shavonneg"},"content":"    public static String showTaskRemoved(Task removedTask, int totalTasks) {","lastModifiedDate":"2024-02-13"},{"lineNumber":151,"author":{"gitId":"shavonneg"},"content":"        return \"Poof! This task has been removed from your list:\\n  \" + removedTask +","lastModifiedDate":"2024-02-18"},{"lineNumber":152,"author":{"gitId":"shavonneg"},"content":"                \"\\nNow you have \" + totalTasks + \" tasks in your list.\\n\";","lastModifiedDate":"2024-02-18"},{"lineNumber":153,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":154,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":155,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":156,"author":{"gitId":"shavonneg"},"content":"     * Displays a message indicating the list of items found with the keyword.","lastModifiedDate":"2024-02-13"},{"lineNumber":157,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":158,"author":{"gitId":"shavonneg"},"content":"     * @param keyword The keyword that was searched.","lastModifiedDate":"2024-02-13"},{"lineNumber":159,"author":{"gitId":"shavonneg"},"content":"     * @return String representation of the found tasks.","lastModifiedDate":"2024-02-13"},{"lineNumber":160,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":161,"author":{"gitId":"shavonneg"},"content":"    public static String showFindItemList(String keyword) {","lastModifiedDate":"2024-02-13"},{"lineNumber":162,"author":{"gitId":"shavonneg"},"content":"        assert keyword !\u003d null : \"Keyword should not be null\";","lastModifiedDate":"2024-02-18"},{"lineNumber":163,"author":{"gitId":"shavonneg"},"content":"        return \"Here are the tasks with \" + keyword + \" in them: \\n\" +","lastModifiedDate":"2024-02-18"},{"lineNumber":164,"author":{"gitId":"shavonneg"},"content":"                \"You\u0027re going to nail this! \";","lastModifiedDate":"2024-02-18"},{"lineNumber":165,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":166,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"shavonneg":166}},{"path":"src/main/java/unim/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package unim.task;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":" * Deadlines - Represents a task with a deadline, a subclass of Task.","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"    private String byDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"    private LocalDate d1;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"     * Creates a Deadlines task with a description and a deadline specified as a String.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"     * @param byDate      The deadline of the task as a String.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"    public Deadline(String description, String byDate) {","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"     * Creates a Deadlines task with a description and a deadline specified as a LocalDate.","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"     * @param d1          The deadline of the task as a LocalDate.","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"    public Deadline(String description, LocalDate d1) {","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"shavonneg"},"content":"        this.d1 \u003d d1;","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"shavonneg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"        if (d1 !\u003d null) {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"shavonneg"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"shavonneg"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + byDate + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"shavonneg":42}},{"path":"src/main/java/unim/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package unim.task;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":" * Event - Represents an event task with start and end dates, a subclass of Task.","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"    private String fromDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"    private String toDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"    private LocalDate d1;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"    private LocalDate d2;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"     * Creates an Event task with a description and date range specified as Strings.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"     * @param fromDate    The start date of the event as a String.","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"     * @param toDate      The end date of the event as a String.","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"    public Event(String description, String fromDate, String toDate) {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"shavonneg"},"content":"     * Creates an Event task with a description and date range specified as LocalDate objects.","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"shavonneg"},"content":"     * @param d1          The start date of the event as a LocalDate.","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"     * @param d2          The end date of the event as a LocalDate.","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"    public Event(String description, LocalDate d1, LocalDate d2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"shavonneg"},"content":"       super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"       this.d1 \u003d d1;","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"shavonneg"},"content":"       this.d2 \u003d d2;","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"shavonneg"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"shavonneg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"shavonneg"},"content":"        if (d1 !\u003d null \u0026\u0026 d2 !\u003d null) {","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"shavonneg"},"content":"            return \"[E]\" + super.toString() + \" (from: \" + d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" to: \"","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"shavonneg"},"content":"                    + d2.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"shavonneg"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + fromDate + \" to: \" + toDate + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"shavonneg":49}},{"path":"src/main/java/unim/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package unim.task;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":" * Task - Represents a basic task with a description and completion status.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"public class Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"    protected String userInput;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"     * Creates a Task with the specified input description and sets completion status to false.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"     * @param input The description of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"    public Task(String input) {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"        this.userInput \u003d input;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"     * Gets the status icon based on the completion status.","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"     * @return The status icon (\"[X]\" if done, \"[ ]\" if not done).","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"shavonneg"},"content":"        return (isDone ?  \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"shavonneg"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"shavonneg"},"content":"     * Unmarks the task, setting completion status to false.","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"shavonneg"},"content":"    public void unmarkTask() {","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"shavonneg"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"shavonneg"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"shavonneg"},"content":"        return userInput;","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"shavonneg"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"shavonneg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"shavonneg"},"content":"        return getStatusIcon() + userInput;","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"shavonneg":55}},{"path":"src/main/java/unim/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package unim.task;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":" * Todo - Represents a todo task, a subclass of Task.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"     * Creates a Todo task with the specified description.","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"shavonneg":22}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" style\u003d\"-fx-background-color: #fff5fd;\"\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"shavonneg":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"unim.io.MainWindow\" style\u003d\"-fx-background-color: #fff5fd;\"\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"shavonneg":26}},{"path":"src/test/java/unim/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package unim.task;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"    public void DeadlinesToString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"        Deadline d \u003d new Deadline(\"deadline finish assignment\", \"2/5/2022 1530\");","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"        assertEquals(\"[D][ ] deadline finish assignment (by: 2/5/2022 1530)\", d.toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"shavonneg":11}},{"path":"src/test/java/unim/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package unim.task;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"public class EventTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"    public void testToStringWithLocalDateRange() {","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"        LocalDate startDate \u003d LocalDate.parse(\"2022-05-02\");","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"        LocalDate endDate \u003d LocalDate.parse(\"2022-05-05\");","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"        Event event \u003d new Event(\"team workshop\", startDate, endDate);","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"        assertEquals(\"[E][ ] team workshop (from: May 2 2022 to: May 5 2022)\", event.toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"shavonneg":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"todo eat lunch","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"deadline finish assignment /by Sunday 10am","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"event team lunch /from 02/18/2024 1200 /to 02/18/2024 1330","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"list","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"mark 1","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"unmark 1","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"find assignment","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"delete 1","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"shavonneg":9}}]
