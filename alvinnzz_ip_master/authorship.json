[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"alvinnzz"},"content":"    protected LocalDateTime dueDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":"    public Deadline(String description, String by){","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":"        super(description, \u0027D\u0027);","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":"        LocalDateTime dueDateParsed \u003d LocalDateTime.parse(by.trim(), formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":"        this.dueDate \u003d dueDateParsed;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":"    public String dateInWords(){","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"alvinnzz"},"content":"        String dayWeek \u003d dueDate.getDayOfWeek().toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"alvinnzz"},"content":"        int dayMonth \u003d dueDate.getDayOfMonth();","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"alvinnzz"},"content":"        String month \u003d dueDate.getMonth().toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"alvinnzz"},"content":"        int year \u003d dueDate.getYear();","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"alvinnzz"},"content":"        return dayWeek + \" \" + dayMonth + \" \" + month + \" \" +year;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"alvinnzz"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"alvinnzz"},"content":"    public String toString(){","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"alvinnzz"},"content":"        String str \u003d String.format(","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"alvinnzz"},"content":"                super.toString() + \" (%s)\", this.dateInWords());","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"alvinnzz"},"content":"        return str;","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"alvinnzz":28}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":"    static String botName \u003d \"Corgi\";","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":"    ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":"    int numOfTasks \u003d 0;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":"    private String filePath \u003d \"./taskList.txt\";","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":"    public Storage database;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":"    public Duke() throws IOException{","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":"        this.database \u003d new Storage(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":"        this.tasks \u003d this.database.load();","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":"        this.numOfTasks \u003d this.tasks.size();","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"alvinnzz"},"content":"    public void greet(){","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"alvinnzz"},"content":"        String greetMessage \u003d String.format(","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"alvinnzz"},"content":"                \"____________________________________________________________\\n\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"alvinnzz"},"content":"                        \" Hello! I\u0027m %s\\n\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"alvinnzz"},"content":"                        \" What can I do for you?\\n\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"alvinnzz"},"content":"                        \"____________________________________________________________\\n\", botName);","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"alvinnzz"},"content":"        System.out.println(greetMessage);","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"alvinnzz"},"content":"    public void goodbye(){","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"alvinnzz"},"content":"        String exitMessage \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"alvinnzz"},"content":"                \" Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"alvinnzz"},"content":"                \"____________________________________________________________\\n\";","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"alvinnzz"},"content":"        System.out.println(exitMessage);","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"alvinnzz"},"content":"    public void echo(String input){","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"alvinnzz"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"alvinnzz"},"content":"                input +","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"alvinnzz"},"content":"                \"\\n____________________________________________________________\\n\");","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"alvinnzz"},"content":"    public static String getTaskName(String task, String input) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"alvinnzz"},"content":"        if (task.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"alvinnzz"},"content":"            if (input.length() \u003c 6) {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"alvinnzz"},"content":"                throw new DukeException(\"Please enter a task name for Todo!! \u003e.\u003c\");","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"alvinnzz"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"alvinnzz"},"content":"            String taskName \u003d input.substring(5);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"alvinnzz"},"content":"            return taskName;","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"alvinnzz"},"content":"        } else if (task.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"alvinnzz"},"content":"            int endIndex \u003d input.indexOf(\"/by\");","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"alvinnzz"},"content":"            if (input.length() \u003c 10 || endIndex \u003d\u003d -1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"alvinnzz"},"content":"                throw new DukeException(\"Please enter a task name for Deadline!! \u003e.\u003c\");","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"alvinnzz"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"alvinnzz"},"content":"            String taskName \u003d input.substring(9, endIndex);","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"alvinnzz"},"content":"            return taskName;","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"alvinnzz"},"content":"        }else if (task.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"alvinnzz"},"content":"            int endIndex \u003d input.indexOf(\"/from\");","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"alvinnzz"},"content":"            if (input.length() \u003c 7 || endIndex \u003d\u003d -1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"alvinnzz"},"content":"                throw new DukeException(\"Please enter a task name for Event!! \u003e.\u003c\");","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"alvinnzz"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"alvinnzz"},"content":"            String taskName \u003d input.substring(6, endIndex);","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"alvinnzz"},"content":"            return taskName;","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"alvinnzz"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"alvinnzz"},"content":"            throw new DukeException(\"Please use one of the 3 tasks!! \u003e.\u003c\");","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"alvinnzz"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"alvinnzz"},"content":"    public static String getStartDate(String input) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"alvinnzz"},"content":"        int startIndex \u003d input.indexOf(\"/from\") + 6;","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"alvinnzz"},"content":"        int endIndex \u003d input.indexOf(\"/to\");","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"alvinnzz"},"content":"        if (startIndex \u003d\u003d input.length() || startIndex \u003d\u003d 5) {","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"alvinnzz"},"content":"            throw new DukeException(\"Please use the keyword /from for your event! \u003e.\u003c\");","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"alvinnzz"},"content":"        } else if (startIndex \u003e input.length()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"alvinnzz"},"content":"            throw new DukeException(\"Please enter a start date for your event! \u003e.\u003c\");","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"alvinnzz"},"content":"        } else if (endIndex \u003d\u003d -1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"alvinnzz"},"content":"            throw new DukeException(\"Please use the keyword /to for your event! \u003e.\u003c\");","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"alvinnzz"},"content":"        } else if (startIndex \u003e endIndex) {","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"alvinnzz"},"content":"            throw new DukeException(\"Please enter an end date for your event! \u003e.\u003c\");","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"alvinnzz"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"alvinnzz"},"content":"        return input.substring(startIndex, endIndex);","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"alvinnzz"},"content":"    public static String getEndDate(String task, String input) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"alvinnzz"},"content":"        String startWord \u003d task.equalsIgnoreCase(\"deadline\") ? \"/by\" : \"/to\";","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"alvinnzz"},"content":"        int startIndex \u003d input.indexOf(startWord) + startWord.length() + 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"alvinnzz"},"content":"        if (startIndex \u003e input.length()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"alvinnzz"},"content":"            throw new DukeException(String.format(\"Please enter an end date for your %s!\", task));","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"alvinnzz"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"alvinnzz"},"content":"        return input.substring(startIndex);","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"alvinnzz"},"content":"    public void addToList(String input) throws DukeException{","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"alvinnzz"},"content":"        Task addedTask \u003d null;","lastModifiedDate":"2024-01-23"},{"lineNumber":86,"author":{"gitId":"alvinnzz"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"alvinnzz"},"content":"        String commandWord \u003d inputArr[0];","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"alvinnzz"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":89,"author":{"gitId":"alvinnzz"},"content":"            if (commandWord.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":90,"author":{"gitId":"alvinnzz"},"content":"                addedTask \u003d new Todo(getTaskName(commandWord, input));","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"alvinnzz"},"content":"            } else if (commandWord.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"alvinnzz"},"content":"                addedTask \u003d new Deadline(getTaskName(commandWord, input), getEndDate(commandWord, input));","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"alvinnzz"},"content":"            } else if (commandWord.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"alvinnzz"},"content":"                addedTask \u003d new Event(getTaskName(commandWord, input), getStartDate(input), getEndDate(commandWord, input));","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"alvinnzz"},"content":"            } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":96,"author":{"gitId":"alvinnzz"},"content":"                throw new DukeException(\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-01-24"},{"lineNumber":97,"author":{"gitId":"alvinnzz"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":98,"author":{"gitId":"alvinnzz"},"content":"            tasks.add(addedTask);","lastModifiedDate":"2024-01-24"},{"lineNumber":99,"author":{"gitId":"alvinnzz"},"content":"            numOfTasks++;","lastModifiedDate":"2024-01-24"},{"lineNumber":100,"author":{"gitId":"alvinnzz"},"content":"            String message \u003d String.format(","lastModifiedDate":"2024-01-23"},{"lineNumber":101,"author":{"gitId":"alvinnzz"},"content":"                    \"____________________________________________________________\\n\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":102,"author":{"gitId":"alvinnzz"},"content":"                            \" Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":103,"author":{"gitId":"alvinnzz"},"content":"                            \"  [%s][%s] %s\\n\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":104,"author":{"gitId":"alvinnzz"},"content":"                            \" Now you have %d tasks in the list.\\n\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":105,"author":{"gitId":"alvinnzz"},"content":"                            \"____________________________________________________________\\n\",","lastModifiedDate":"2024-01-23"},{"lineNumber":106,"author":{"gitId":"alvinnzz"},"content":"                    addedTask.getTaskType(), addedTask.getStatusIcon(),","lastModifiedDate":"2024-01-23"},{"lineNumber":107,"author":{"gitId":"alvinnzz"},"content":"                    addedTask.toString(), numOfTasks);","lastModifiedDate":"2024-01-23"},{"lineNumber":108,"author":{"gitId":"alvinnzz"},"content":"            System.out.println(message);","lastModifiedDate":"2024-01-22"},{"lineNumber":109,"author":{"gitId":"alvinnzz"},"content":"        } catch (DukeException error) {","lastModifiedDate":"2024-01-24"},{"lineNumber":110,"author":{"gitId":"alvinnzz"},"content":"            String errorMessage \u003d String.format(","lastModifiedDate":"2024-01-24"},{"lineNumber":111,"author":{"gitId":"alvinnzz"},"content":"                    \"____________________________________________________________\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":112,"author":{"gitId":"alvinnzz"},"content":"                    \"%s\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":113,"author":{"gitId":"alvinnzz"},"content":"                    \"____________________________________________________________\\n\", error.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":114,"author":{"gitId":"alvinnzz"},"content":"            System.out.println(errorMessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":115,"author":{"gitId":"alvinnzz"},"content":"        } catch (DateTimeException dte) {","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"alvinnzz"},"content":"            String errorMessage \u003d String.format(","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"alvinnzz"},"content":"                    \"____________________________________________________________\\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"alvinnzz"},"content":"                            \"Please follow the format for date and time (d/M/yyyy HHmm).\\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"alvinnzz"},"content":"                            \"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"alvinnzz"},"content":"            System.out.println(errorMessage);","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"alvinnzz"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":122,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":123,"author":{"gitId":"alvinnzz"},"content":"    public void printList(){","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"alvinnzz"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":125,"author":{"gitId":"alvinnzz"},"content":"                \" Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-01-23"},{"lineNumber":126,"author":{"gitId":"alvinnzz"},"content":"        for (int i \u003d 0; i \u003c numOfTasks; i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":127,"author":{"gitId":"alvinnzz"},"content":"            String currentTask \u003d String.format(\"%d.[%s][%s] %s\",","lastModifiedDate":"2024-01-23"},{"lineNumber":128,"author":{"gitId":"alvinnzz"},"content":"                    i + 1, tasks.get(i).getTaskType(),","lastModifiedDate":"2024-01-24"},{"lineNumber":129,"author":{"gitId":"alvinnzz"},"content":"                    tasks.get(i).getStatusIcon(), tasks.get(i).toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":130,"author":{"gitId":"alvinnzz"},"content":"            System.out.println(currentTask);","lastModifiedDate":"2024-01-22"},{"lineNumber":131,"author":{"gitId":"alvinnzz"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":132,"author":{"gitId":"alvinnzz"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2024-01-22"},{"lineNumber":133,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":134,"author":{"gitId":"alvinnzz"},"content":"    public void markAsDoneOrUndone(int taskNum, boolean markDone){","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"alvinnzz"},"content":"        if(taskNum \u003c 1 || taskNum \u003e 100){","lastModifiedDate":"2024-01-23"},{"lineNumber":136,"author":{"gitId":"alvinnzz"},"content":"            System.out.println(\"Invalid task number entered.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":137,"author":{"gitId":"alvinnzz"},"content":"            return;","lastModifiedDate":"2024-01-23"},{"lineNumber":138,"author":{"gitId":"alvinnzz"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":139,"author":{"gitId":"alvinnzz"},"content":"        Task targetTask \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":140,"author":{"gitId":"alvinnzz"},"content":"        if (markDone) {","lastModifiedDate":"2024-01-23"},{"lineNumber":141,"author":{"gitId":"alvinnzz"},"content":"            targetTask.setAsDone();","lastModifiedDate":"2024-01-23"},{"lineNumber":142,"author":{"gitId":"alvinnzz"},"content":"            String message \u003d String.format(","lastModifiedDate":"2024-01-23"},{"lineNumber":143,"author":{"gitId":"alvinnzz"},"content":"                    \"____________________________________________________________\\n\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":144,"author":{"gitId":"alvinnzz"},"content":"                            \" Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":145,"author":{"gitId":"alvinnzz"},"content":"                            \"  [%s][%s] %s\\n\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":146,"author":{"gitId":"alvinnzz"},"content":"                    \"____________________________________________________________\\n\",","lastModifiedDate":"2024-01-23"},{"lineNumber":147,"author":{"gitId":"alvinnzz"},"content":"                    targetTask.getTaskType(), targetTask.getStatusIcon(),","lastModifiedDate":"2024-01-23"},{"lineNumber":148,"author":{"gitId":"alvinnzz"},"content":"                    targetTask.getDescription());","lastModifiedDate":"2024-01-23"},{"lineNumber":149,"author":{"gitId":"alvinnzz"},"content":"            System.out.println(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":150,"author":{"gitId":"alvinnzz"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":151,"author":{"gitId":"alvinnzz"},"content":"            targetTask.setAsNotDone();","lastModifiedDate":"2024-01-23"},{"lineNumber":152,"author":{"gitId":"alvinnzz"},"content":"            String message \u003d String.format(","lastModifiedDate":"2024-01-23"},{"lineNumber":153,"author":{"gitId":"alvinnzz"},"content":"                    \"____________________________________________________________\\n\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":154,"author":{"gitId":"alvinnzz"},"content":"                            \" OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":155,"author":{"gitId":"alvinnzz"},"content":"                            \"  [%s][%s] %s\\n\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":156,"author":{"gitId":"alvinnzz"},"content":"                            \"____________________________________________________________\\n\",","lastModifiedDate":"2024-01-23"},{"lineNumber":157,"author":{"gitId":"alvinnzz"},"content":"                    targetTask.getTaskType(), targetTask.getStatusIcon(),","lastModifiedDate":"2024-01-23"},{"lineNumber":158,"author":{"gitId":"alvinnzz"},"content":"                    targetTask.getDescription());","lastModifiedDate":"2024-01-23"},{"lineNumber":159,"author":{"gitId":"alvinnzz"},"content":"            System.out.println(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":160,"author":{"gitId":"alvinnzz"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":161,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":162,"author":{"gitId":"alvinnzz"},"content":"    public void deleteTask (int index) throws DukeException{","lastModifiedDate":"2024-01-29"},{"lineNumber":163,"author":{"gitId":"alvinnzz"},"content":"        if (numOfTasks \u003c index){","lastModifiedDate":"2024-01-24"},{"lineNumber":164,"author":{"gitId":"alvinnzz"},"content":"            throw new DukeException(\"Invalid task index to delete!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":165,"author":{"gitId":"alvinnzz"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":166,"author":{"gitId":"alvinnzz"},"content":"        Task taskToBeDeleted \u003d tasks.get(index - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":167,"author":{"gitId":"alvinnzz"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":168,"author":{"gitId":"alvinnzz"},"content":"        numOfTasks--;","lastModifiedDate":"2024-01-24"},{"lineNumber":169,"author":{"gitId":"alvinnzz"},"content":"        String deleteMessage \u003d String.format(","lastModifiedDate":"2024-01-24"},{"lineNumber":170,"author":{"gitId":"alvinnzz"},"content":"                \"____________________________________________________________\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":171,"author":{"gitId":"alvinnzz"},"content":"                        \" Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":172,"author":{"gitId":"alvinnzz"},"content":"                        \"  [%s][%s] %s\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":173,"author":{"gitId":"alvinnzz"},"content":"                        \" Now you have %d tasks in the list.\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":174,"author":{"gitId":"alvinnzz"},"content":"                        \"____________________________________________________________\\n\",","lastModifiedDate":"2024-01-24"},{"lineNumber":175,"author":{"gitId":"alvinnzz"},"content":"                taskToBeDeleted.getTaskType(), taskToBeDeleted.getStatusIcon(),","lastModifiedDate":"2024-01-24"},{"lineNumber":176,"author":{"gitId":"alvinnzz"},"content":"                taskToBeDeleted.toString(), numOfTasks);","lastModifiedDate":"2024-01-24"},{"lineNumber":177,"author":{"gitId":"alvinnzz"},"content":"        System.out.println(deleteMessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":178,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":179,"author":{"gitId":"alvinnzz"},"content":"    public static void main(String[] args) throws DukeException, IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":180,"author":{"gitId":"alvinnzz"},"content":"        Duke myChatBot \u003d new Duke();","lastModifiedDate":"2024-01-29"},{"lineNumber":181,"author":{"gitId":"alvinnzz"},"content":"        myChatBot.greet();","lastModifiedDate":"2024-01-29"},{"lineNumber":182,"author":{"gitId":"alvinnzz"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-22"},{"lineNumber":183,"author":{"gitId":"alvinnzz"},"content":"        String input \u003d \"\";","lastModifiedDate":"2024-01-22"},{"lineNumber":184,"author":{"gitId":"alvinnzz"},"content":"        while (true){","lastModifiedDate":"2024-01-22"},{"lineNumber":185,"author":{"gitId":"alvinnzz"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":186,"author":{"gitId":"alvinnzz"},"content":"            if(input.equalsIgnoreCase(\"bye\")){","lastModifiedDate":"2024-01-24"},{"lineNumber":187,"author":{"gitId":"alvinnzz"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":188,"author":{"gitId":"alvinnzz"},"content":"            } else if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":189,"author":{"gitId":"alvinnzz"},"content":"                myChatBot.printList();","lastModifiedDate":"2024-01-29"},{"lineNumber":190,"author":{"gitId":"alvinnzz"},"content":"            } else if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0,4).equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":191,"author":{"gitId":"alvinnzz"},"content":"                myChatBot.markAsDoneOrUndone(Character.getNumericValue(input.charAt(5)), true);","lastModifiedDate":"2024-01-29"},{"lineNumber":192,"author":{"gitId":"alvinnzz"},"content":"            } else if (input.length() \u003e\u003d 8 \u0026\u0026 input.substring(0,6).equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":193,"author":{"gitId":"alvinnzz"},"content":"                myChatBot.markAsDoneOrUndone(Character.getNumericValue(input.charAt(7)), false);","lastModifiedDate":"2024-01-29"},{"lineNumber":194,"author":{"gitId":"alvinnzz"},"content":"            } else if (input.length() \u003e\u003d 8 \u0026\u0026 input.substring(0,6).equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":195,"author":{"gitId":"alvinnzz"},"content":"                String position \u003d input.substring(7);","lastModifiedDate":"2024-01-24"},{"lineNumber":196,"author":{"gitId":"alvinnzz"},"content":"                Integer i \u003d null;","lastModifiedDate":"2024-01-24"},{"lineNumber":197,"author":{"gitId":"alvinnzz"},"content":"                try {","lastModifiedDate":"2024-01-24"},{"lineNumber":198,"author":{"gitId":"alvinnzz"},"content":"                    i \u003d Integer.parseInt(position);","lastModifiedDate":"2024-01-24"},{"lineNumber":199,"author":{"gitId":"alvinnzz"},"content":"                    myChatBot.deleteTask(i);","lastModifiedDate":"2024-01-29"},{"lineNumber":200,"author":{"gitId":"alvinnzz"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":201,"author":{"gitId":"alvinnzz"},"content":"                    System.out.println(\"Invalid index to delete!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":202,"author":{"gitId":"alvinnzz"},"content":"                } catch (DukeException de) {","lastModifiedDate":"2024-01-24"},{"lineNumber":203,"author":{"gitId":"alvinnzz"},"content":"                    System.out.println(de.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":204,"author":{"gitId":"alvinnzz"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":205,"author":{"gitId":"alvinnzz"},"content":"            } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":206,"author":{"gitId":"alvinnzz"},"content":"                myChatBot.addToList(input);","lastModifiedDate":"2024-01-29"},{"lineNumber":207,"author":{"gitId":"alvinnzz"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":208,"author":{"gitId":"alvinnzz"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":209,"author":{"gitId":"alvinnzz"},"content":"        myChatBot.database.save(myChatBot.tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":210,"author":{"gitId":"alvinnzz"},"content":"        myChatBot.goodbye();","lastModifiedDate":"2024-01-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"alvinnzz":209,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"    public DukeException(String errorMessage){","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"alvinnzz":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"public class Event extends Task{","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"alvinnzz"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":"    public Event(String description, String from, String to){","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":"        super(description, \u0027E\u0027);","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":"        LocalDateTime fromParsed \u003d LocalDateTime.parse(from.trim(), formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":"        LocalDateTime toParsed \u003d LocalDateTime.parse(to.trim(), formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":"        this.from \u003d fromParsed;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":"        this.to \u003d toParsed;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":"    public String fromDateInWords(){","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"alvinnzz"},"content":"        String dayWeek \u003d from.getDayOfWeek().toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"alvinnzz"},"content":"        int dayMonth \u003d from.getDayOfMonth();","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"alvinnzz"},"content":"        String month \u003d from.getMonth().toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"alvinnzz"},"content":"        int year \u003d from.getYear();","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"alvinnzz"},"content":"        return dayWeek + \" \" + dayMonth + \" \" + month + \" \" +year;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"alvinnzz"},"content":"    public String toDateInWords(){","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"alvinnzz"},"content":"        String dayWeek \u003d to.getDayOfWeek().toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"alvinnzz"},"content":"        int dayMonth \u003d to.getDayOfMonth();","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"alvinnzz"},"content":"        String month \u003d to.getMonth().toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"alvinnzz"},"content":"        int year \u003d to.getYear();","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"alvinnzz"},"content":"        return dayWeek + \" \" + dayMonth + \" \" + month + \" \" +year;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"alvinnzz"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"alvinnzz"},"content":"    public String toString(){","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"alvinnzz"},"content":"        String str \u003d String.format(","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"alvinnzz"},"content":"                super.toString() + \" (from %s to %s)\", this.fromDateInWords(), this.toDateInWords());","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"alvinnzz"},"content":"        return str;","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"alvinnzz":35}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"import java.io.*;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"public class Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"    String filepath;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":"    public Storage(String filepath){","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"alvinnzz"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":"        try{","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":"            FileInputStream file \u003d new FileInputStream(filepath);","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":"            ObjectInputStream output \u003d new ObjectInputStream(file);","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":"            ArrayList\u003cTask\u003e taskList \u003d (ArrayList\u003cTask\u003e) output.readObject();","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":"            output.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":"            return taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"alvinnzz"},"content":"        } catch (Exception error) {","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"alvinnzz"},"content":"            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"alvinnzz"},"content":"            return taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"alvinnzz"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"alvinnzz"},"content":"    public void save(ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"alvinnzz"},"content":"        FileOutputStream file \u003d new FileOutputStream(filepath);","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"alvinnzz"},"content":"        ObjectOutputStream output \u003d new ObjectOutputStream(file);","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"alvinnzz"},"content":"        output.writeObject(taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"alvinnzz"},"content":"        output.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"alvinnzz":28}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"public class Task implements Serializable {","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"    protected String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"alvinnzz"},"content":"    protected Character taskType;","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":"    public Task(String description, Character taskType) {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"alvinnzz"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"alvinnzz"},"content":"        return description;","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"alvinnzz"},"content":"    public void setAsNotDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"alvinnzz"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"alvinnzz"},"content":"    public void setAsDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"alvinnzz"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"alvinnzz"},"content":"    public Character getTaskType(){","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"alvinnzz"},"content":"        return this.taskType;","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"alvinnzz"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"alvinnzz"},"content":"    public String toString(){","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"alvinnzz"},"content":"        return this.description;","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"alvinnzz":37}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"public class Todo extends Task{","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"    public Todo(String description){","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"        super(description, \u0027T\u0027);","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"alvinnzz":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"todo homework","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"alvinnzz":3}}]
