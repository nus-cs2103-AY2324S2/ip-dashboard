[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"import java.util.*;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"import java.io.*;","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"/**","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":" * Deadline is a subclass of Task that stores a task with a completion date.","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":" * @author Koo Zhuo Hui","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":" */","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"    private String by;","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":"     *","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":"     * @param s The name of the deadline.","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"     * @param by The time at which the deadline should be completed.","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"    public Deadline(String s, String by) {","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"        super(s);","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"smolegz"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"smolegz"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"smolegz"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"smolegz"},"content":"        return \"[D][\" + (super.getStatus() ? \"X\" : \" \") + \"] \" +","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"smolegz"},"content":"                super.getTask() + \"(by: \" + by + \")\";","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"smolegz":28}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"import java.util.*;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"import java.io.*;","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"/**","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":" * Custom exception that handles edge cases such as invalid command etc.","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":" * @author Koo Zhuo Hui","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":" */","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"     * Constructs the exception","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"     * @param message the message to be printed to user.","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"        super(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"smolegz":17}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"import java.util.*;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"import java.io.*;","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"/**","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":" * Event is a subclass of Task. It stores information of a task including","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":" * the start and end date.","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":" * @author Koo Zhuo Hui","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":" */","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"    private String from;","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"    private String to;","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":"     * Constructor for Event with a task name, start and end date.","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"     * @param s Name of the event.","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"     * @param from The start timing of the event.","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"     * @param to The end of the event.","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"smolegz"},"content":"    public Event(String s, String from, String to) {","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"smolegz"},"content":"        super(s);","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"smolegz"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"smolegz"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"smolegz"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"smolegz"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"smolegz"},"content":"        return \"[E][\" + (super.getStatus() ? \"X\" : \" \") + \"] \" +","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"smolegz"},"content":"                super.getTask() + \"(from: \" + from + \"to: \" + to + \")\";","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"smolegz":31}},{"path":"src/main/java/Howie.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"import java.util.*;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"import java.io.*;","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"/**","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":" * The chat-bot To-Do program named Howie which keeps tracks of major major tasks such as","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":" * todo, event and deadlines.","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":" * @author Koo Zhuo Hui","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":" */","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"public class Howie {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"    private static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":"     * Prints a vertical line.","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"    public static void printVLine() {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"        System.out.println(\"------------------------------------\");","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"smolegz"},"content":"     * Howie\u0027s first introduction message to user when application is started.","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"smolegz"},"content":"    public static void intro() {","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"smolegz"},"content":"        printVLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"smolegz"},"content":"        System.out.println(\"Hello! I\u0027m Howie! My hobby is to keep track of TASKS. Let me help you!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"smolegz"},"content":"        System.out.println(\"So, what can I do for you?\");","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"smolegz"},"content":"        printVLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"smolegz"},"content":"     * Exits the program when exit command is entered.","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"smolegz"},"content":"    public static void exit() {","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"smolegz"},"content":"        printVLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"smolegz"},"content":"        System.out.println(\"Bye! I\u0027ll see you when I see you :)\");","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"smolegz"},"content":"        printVLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"smolegz"},"content":"        System.exit(0);","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"smolegz"},"content":"     * Stores a specific task.","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"smolegz"},"content":"     * @param t A Task.","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"smolegz"},"content":"    public static void addToList(Task t) {","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"smolegz"},"content":"        tasks.add(t);","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"smolegz"},"content":"        printVLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"smolegz"},"content":"        System.out.println(\"Got it! Task has been added:\\n\" + t + \"\\nNow you have \"","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"smolegz"},"content":"                + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"smolegz"},"content":"        printVLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"smolegz"},"content":"     * Prints the list of tasks that is currently stored by Howie.","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"smolegz"},"content":"     * @param tasks The collection of tasks.","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"smolegz"},"content":"    public static void printAllTask(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-22"},{"lineNumber":57,"author":{"gitId":"smolegz"},"content":"        printVLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":58,"author":{"gitId":"smolegz"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"smolegz"},"content":"            System.out.println(\"Your list is now EMPTY! Time for you to have a break!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"smolegz"},"content":"            printVLine();","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"smolegz"},"content":"            return;","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"smolegz"},"content":"        System.out.println(\"You have \" + tasks.size() + \" left. There are:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"smolegz"},"content":"        for (int i\u003d1; i\u003c\u003dtasks.size(); i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":65,"author":{"gitId":"smolegz"},"content":"            Task t \u003d tasks.get(i-1);","lastModifiedDate":"2024-01-22"},{"lineNumber":66,"author":{"gitId":"smolegz"},"content":"            System.out.println(i +\".\" + t);","lastModifiedDate":"2024-01-22"},{"lineNumber":67,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":68,"author":{"gitId":"smolegz"},"content":"        printVLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":69,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":70,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"smolegz"},"content":"     * Deletes a task from Howie\u0027s list.","lastModifiedDate":"2024-01-23"},{"lineNumber":73,"author":{"gitId":"smolegz"},"content":"     * @param tasks The collection of tasks.","lastModifiedDate":"2024-01-23"},{"lineNumber":74,"author":{"gitId":"smolegz"},"content":"     * @param i 1-Based index of the task to be deleted.","lastModifiedDate":"2024-01-23"},{"lineNumber":75,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":76,"author":{"gitId":"smolegz"},"content":"    public static void delete(List\u003cTask\u003e tasks, int i) {","lastModifiedDate":"2024-01-23"},{"lineNumber":77,"author":{"gitId":"smolegz"},"content":"        if (i \u003e tasks.size() || i \u003c\u003d 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":78,"author":{"gitId":"smolegz"},"content":"            printVLine();","lastModifiedDate":"2024-01-23"},{"lineNumber":79,"author":{"gitId":"smolegz"},"content":"            throw new DukeException(\"Hmm...I can\u0027t delete something that isn\u0027t there :O\");","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"smolegz"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":81,"author":{"gitId":"smolegz"},"content":"            Task t \u003d tasks.remove(i-1);","lastModifiedDate":"2024-01-23"},{"lineNumber":82,"author":{"gitId":"smolegz"},"content":"            printVLine();","lastModifiedDate":"2024-01-23"},{"lineNumber":83,"author":{"gitId":"smolegz"},"content":"            System.out.println(\"Okay! The following task has been removed:\\n\" + t);","lastModifiedDate":"2024-01-23"},{"lineNumber":84,"author":{"gitId":"smolegz"},"content":"            printAllTask(tasks);","lastModifiedDate":"2024-01-23"},{"lineNumber":85,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":86,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":87,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":88,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":89,"author":{"gitId":"smolegz"},"content":"     * Prints a message when a blank task has been entered.","lastModifiedDate":"2024-01-23"},{"lineNumber":90,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":91,"author":{"gitId":"smolegz"},"content":"    public static void emptyTaskMessage() {","lastModifiedDate":"2024-01-23"},{"lineNumber":92,"author":{"gitId":"smolegz"},"content":"        printVLine();","lastModifiedDate":"2024-01-23"},{"lineNumber":93,"author":{"gitId":"smolegz"},"content":"        throw new DukeException(\"Hey! You\u0027ve just entered an unnamed task... Try to give a description/name of your task :)\");","lastModifiedDate":"2024-01-23"},{"lineNumber":94,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":95,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":96,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":97,"author":{"gitId":"smolegz"},"content":"     * Prints a message when an invalid format has been entered.","lastModifiedDate":"2024-01-23"},{"lineNumber":98,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":99,"author":{"gitId":"smolegz"},"content":"    public static void invalidFormat() {","lastModifiedDate":"2024-01-23"},{"lineNumber":100,"author":{"gitId":"smolegz"},"content":"        printVLine();","lastModifiedDate":"2024-01-23"},{"lineNumber":101,"author":{"gitId":"smolegz"},"content":"        throw new DukeException(\"I see you\u0027ve entered an invalid format. Type \u0027help\u0027 if you\u0027re unsure :)\");","lastModifiedDate":"2024-01-23"},{"lineNumber":102,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":103,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":104,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":105,"author":{"gitId":"smolegz"},"content":"     * Prints the list of commands available to Howie.","lastModifiedDate":"2024-01-23"},{"lineNumber":106,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":107,"author":{"gitId":"smolegz"},"content":"    public static void helpMessage() {","lastModifiedDate":"2024-01-23"},{"lineNumber":108,"author":{"gitId":"smolegz"},"content":"        printVLine();","lastModifiedDate":"2024-01-23"},{"lineNumber":109,"author":{"gitId":"smolegz"},"content":"        System.out.println(\"Below is a list of available commands for me:\\n\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":110,"author":{"gitId":"smolegz"},"content":"                \"   todo [task_name]\\n\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":111,"author":{"gitId":"smolegz"},"content":"                \"   event [task_name] /from [date] /to [date]\\n\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":112,"author":{"gitId":"smolegz"},"content":"                \"   deadline [task_name] /by [date]\\n\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":113,"author":{"gitId":"smolegz"},"content":"                \"   list - to see all tasks\\n\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":114,"author":{"gitId":"smolegz"},"content":"                \"   mark/unmark [index]\\n\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":115,"author":{"gitId":"smolegz"},"content":"                \"   bye - to exit the programme\");","lastModifiedDate":"2024-01-23"},{"lineNumber":116,"author":{"gitId":"smolegz"},"content":"        printVLine();","lastModifiedDate":"2024-01-23"},{"lineNumber":117,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":118,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":119,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":120,"author":{"gitId":"smolegz"},"content":"     * Initialises the program.","lastModifiedDate":"2024-01-23"},{"lineNumber":121,"author":{"gitId":"smolegz"},"content":"     * @param args Input arguments.","lastModifiedDate":"2024-01-23"},{"lineNumber":122,"author":{"gitId":"smolegz"},"content":"     * @throws Exception Throws DukeException and IOException when invalid commands are entered","lastModifiedDate":"2024-01-23"},{"lineNumber":123,"author":{"gitId":"smolegz"},"content":"     * or input exception occurs.","lastModifiedDate":"2024-01-23"},{"lineNumber":124,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":125,"author":{"gitId":"smolegz"},"content":"    public static void main(String[] args) throws Exception {","lastModifiedDate":"2024-01-22"},{"lineNumber":126,"author":{"gitId":"smolegz"},"content":"        intro();","lastModifiedDate":"2024-01-22"},{"lineNumber":127,"author":{"gitId":"smolegz"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2024-01-22"},{"lineNumber":128,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":129,"author":{"gitId":"smolegz"},"content":"        while (true) {","lastModifiedDate":"2024-01-22"},{"lineNumber":130,"author":{"gitId":"smolegz"},"content":"            String[] input \u003d br.readLine().split(\" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":131,"author":{"gitId":"smolegz"},"content":"            String s1 \u003d input[0];","lastModifiedDate":"2024-01-22"},{"lineNumber":132,"author":{"gitId":"smolegz"},"content":"            StringBuilder name;","lastModifiedDate":"2024-01-22"},{"lineNumber":133,"author":{"gitId":"smolegz"},"content":"            StringBuilder current;","lastModifiedDate":"2024-01-22"},{"lineNumber":134,"author":{"gitId":"smolegz"},"content":"            try {","lastModifiedDate":"2024-01-23"},{"lineNumber":135,"author":{"gitId":"smolegz"},"content":"                switch (s1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":136,"author":{"gitId":"smolegz"},"content":"                    case \"list\":","lastModifiedDate":"2024-01-22"},{"lineNumber":137,"author":{"gitId":"smolegz"},"content":"                        printAllTask(tasks);","lastModifiedDate":"2024-01-22"},{"lineNumber":138,"author":{"gitId":"smolegz"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":139,"author":{"gitId":"smolegz"},"content":"                    case \"bye\":","lastModifiedDate":"2024-01-22"},{"lineNumber":140,"author":{"gitId":"smolegz"},"content":"                        exit();","lastModifiedDate":"2024-01-22"},{"lineNumber":141,"author":{"gitId":"smolegz"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":142,"author":{"gitId":"smolegz"},"content":"                    case \"mark\":","lastModifiedDate":"2024-01-22"},{"lineNumber":143,"author":{"gitId":"smolegz"},"content":"                        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":144,"author":{"gitId":"smolegz"},"content":"                            Task toMark \u003d tasks.get(Integer.parseInt(input[1])-1);","lastModifiedDate":"2024-01-22"},{"lineNumber":145,"author":{"gitId":"smolegz"},"content":"                            printVLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":146,"author":{"gitId":"smolegz"},"content":"                            System.out.println(\"Acknowledged!!\\n\" + toMark.setDone());","lastModifiedDate":"2024-01-23"},{"lineNumber":147,"author":{"gitId":"smolegz"},"content":"                            printVLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":148,"author":{"gitId":"smolegz"},"content":"                        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":149,"author":{"gitId":"smolegz"},"content":"                            printVLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":150,"author":{"gitId":"smolegz"},"content":"                            System.out.println(\"Oppss...I can\u0027t seem to find the task you\u0027re looking for. Type \u0027list\u0027 to see the the tasks that you have!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":151,"author":{"gitId":"smolegz"},"content":"                            printVLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":152,"author":{"gitId":"smolegz"},"content":"                        }","lastModifiedDate":"2024-01-22"},{"lineNumber":153,"author":{"gitId":"smolegz"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":154,"author":{"gitId":"smolegz"},"content":"                    case \"unmark\":","lastModifiedDate":"2024-01-22"},{"lineNumber":155,"author":{"gitId":"smolegz"},"content":"                        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":156,"author":{"gitId":"smolegz"},"content":"                            Task toMark \u003d tasks.get(Integer.parseInt(input[1])-1);","lastModifiedDate":"2024-01-22"},{"lineNumber":157,"author":{"gitId":"smolegz"},"content":"                            printVLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":158,"author":{"gitId":"smolegz"},"content":"                            System.out.println(\"Acknowledged!\\n\" + toMark.setUndone());","lastModifiedDate":"2024-01-22"},{"lineNumber":159,"author":{"gitId":"smolegz"},"content":"                            printVLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":160,"author":{"gitId":"smolegz"},"content":"                        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":161,"author":{"gitId":"smolegz"},"content":"                            printVLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":162,"author":{"gitId":"smolegz"},"content":"                            System.out.println(\"Oppss...I can\u0027t seem to find the task you\u0027re looking for. Type \u0027list\u0027 to see the the tasks that you have!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":163,"author":{"gitId":"smolegz"},"content":"                            printVLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":164,"author":{"gitId":"smolegz"},"content":"                        }","lastModifiedDate":"2024-01-22"},{"lineNumber":165,"author":{"gitId":"smolegz"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":166,"author":{"gitId":"smolegz"},"content":"                    case \"deadline\":","lastModifiedDate":"2024-01-22"},{"lineNumber":167,"author":{"gitId":"smolegz"},"content":"                        name \u003d  new StringBuilder();","lastModifiedDate":"2024-01-22"},{"lineNumber":168,"author":{"gitId":"smolegz"},"content":"                        StringBuilder by \u003d  new StringBuilder();","lastModifiedDate":"2024-01-22"},{"lineNumber":169,"author":{"gitId":"smolegz"},"content":"                        current \u003d name;","lastModifiedDate":"2024-01-22"},{"lineNumber":170,"author":{"gitId":"smolegz"},"content":"                        int i \u003d 1;","lastModifiedDate":"2024-01-22"},{"lineNumber":171,"author":{"gitId":"smolegz"},"content":"                        for (; i\u003cinput.length; i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":172,"author":{"gitId":"smolegz"},"content":"                            if (input[i].equals(\"/by\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":173,"author":{"gitId":"smolegz"},"content":"                                name \u003d current;","lastModifiedDate":"2024-01-22"},{"lineNumber":174,"author":{"gitId":"smolegz"},"content":"                                current \u003d by;","lastModifiedDate":"2024-01-22"},{"lineNumber":175,"author":{"gitId":"smolegz"},"content":"                                continue;","lastModifiedDate":"2024-01-22"},{"lineNumber":176,"author":{"gitId":"smolegz"},"content":"                            }","lastModifiedDate":"2024-01-22"},{"lineNumber":177,"author":{"gitId":"smolegz"},"content":"                            current.append(input[i]).append(\" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":178,"author":{"gitId":"smolegz"},"content":"                        }","lastModifiedDate":"2024-01-22"},{"lineNumber":179,"author":{"gitId":"smolegz"},"content":"                        by \u003d current;","lastModifiedDate":"2024-01-22"},{"lineNumber":180,"author":{"gitId":"smolegz"},"content":"                        if (name.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":181,"author":{"gitId":"smolegz"},"content":"                            emptyTaskMessage();","lastModifiedDate":"2024-01-23"},{"lineNumber":182,"author":{"gitId":"smolegz"},"content":"                        } else if (name.compareTo(by) \u003d\u003d 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":183,"author":{"gitId":"smolegz"},"content":"                            invalidFormat();","lastModifiedDate":"2024-01-23"},{"lineNumber":184,"author":{"gitId":"smolegz"},"content":"                        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":185,"author":{"gitId":"smolegz"},"content":"                            Deadline dlTask \u003d new Deadline(name.toString(), by.toString().trim());","lastModifiedDate":"2024-01-22"},{"lineNumber":186,"author":{"gitId":"smolegz"},"content":"                            addToList(dlTask);","lastModifiedDate":"2024-01-22"},{"lineNumber":187,"author":{"gitId":"smolegz"},"content":"                        }","lastModifiedDate":"2024-01-23"},{"lineNumber":188,"author":{"gitId":"smolegz"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":189,"author":{"gitId":"smolegz"},"content":"                    case \"event\":","lastModifiedDate":"2024-01-22"},{"lineNumber":190,"author":{"gitId":"smolegz"},"content":"                        name \u003d  new StringBuilder();","lastModifiedDate":"2024-01-22"},{"lineNumber":191,"author":{"gitId":"smolegz"},"content":"                        StringBuilder from \u003d  new StringBuilder();","lastModifiedDate":"2024-01-22"},{"lineNumber":192,"author":{"gitId":"smolegz"},"content":"                        StringBuilder to \u003d  new StringBuilder();","lastModifiedDate":"2024-01-22"},{"lineNumber":193,"author":{"gitId":"smolegz"},"content":"                        current \u003d name;","lastModifiedDate":"2024-01-22"},{"lineNumber":194,"author":{"gitId":"smolegz"},"content":"                        i \u003d 1;","lastModifiedDate":"2024-01-22"},{"lineNumber":195,"author":{"gitId":"smolegz"},"content":"                        for (; i\u003cinput.length; i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":196,"author":{"gitId":"smolegz"},"content":"                            if (input[i].equals(\"/from\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":197,"author":{"gitId":"smolegz"},"content":"                                name \u003d current;","lastModifiedDate":"2024-01-22"},{"lineNumber":198,"author":{"gitId":"smolegz"},"content":"                                current \u003d from;","lastModifiedDate":"2024-01-22"},{"lineNumber":199,"author":{"gitId":"smolegz"},"content":"                                continue;","lastModifiedDate":"2024-01-22"},{"lineNumber":200,"author":{"gitId":"smolegz"},"content":"                            } else if (input[i].equals(\"/to\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":201,"author":{"gitId":"smolegz"},"content":"                                from \u003d current;","lastModifiedDate":"2024-01-22"},{"lineNumber":202,"author":{"gitId":"smolegz"},"content":"                                current \u003d to;","lastModifiedDate":"2024-01-22"},{"lineNumber":203,"author":{"gitId":"smolegz"},"content":"                                continue;","lastModifiedDate":"2024-01-22"},{"lineNumber":204,"author":{"gitId":"smolegz"},"content":"                            }","lastModifiedDate":"2024-01-22"},{"lineNumber":205,"author":{"gitId":"smolegz"},"content":"                            current.append(input[i]).append(\" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":206,"author":{"gitId":"smolegz"},"content":"                        }","lastModifiedDate":"2024-01-22"},{"lineNumber":207,"author":{"gitId":"smolegz"},"content":"                        if (name.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":208,"author":{"gitId":"smolegz"},"content":"                            emptyTaskMessage();","lastModifiedDate":"2024-01-23"},{"lineNumber":209,"author":{"gitId":"smolegz"},"content":"                        } else if (from.length() \u003d\u003d 0 || to.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":210,"author":{"gitId":"smolegz"},"content":"                            invalidFormat();","lastModifiedDate":"2024-01-23"},{"lineNumber":211,"author":{"gitId":"smolegz"},"content":"                        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":212,"author":{"gitId":"smolegz"},"content":"                            Event eventTask \u003d new Event(name.toString(), from.toString(), to.toString().trim());","lastModifiedDate":"2024-01-22"},{"lineNumber":213,"author":{"gitId":"smolegz"},"content":"                            addToList(eventTask);","lastModifiedDate":"2024-01-22"},{"lineNumber":214,"author":{"gitId":"smolegz"},"content":"                        }","lastModifiedDate":"2024-01-23"},{"lineNumber":215,"author":{"gitId":"smolegz"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":216,"author":{"gitId":"smolegz"},"content":"                    case \"todo\":","lastModifiedDate":"2024-01-22"},{"lineNumber":217,"author":{"gitId":"smolegz"},"content":"                        name \u003d new StringBuilder();","lastModifiedDate":"2024-01-22"},{"lineNumber":218,"author":{"gitId":"smolegz"},"content":"                        for (int j\u003d1; j\u003cinput.length; j++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":219,"author":{"gitId":"smolegz"},"content":"                            name.append(input[j]).append(\" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":220,"author":{"gitId":"smolegz"},"content":"                        }","lastModifiedDate":"2024-01-22"},{"lineNumber":221,"author":{"gitId":"smolegz"},"content":"                        if (name.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":222,"author":{"gitId":"smolegz"},"content":"                            emptyTaskMessage();","lastModifiedDate":"2024-01-23"},{"lineNumber":223,"author":{"gitId":"smolegz"},"content":"                        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":224,"author":{"gitId":"smolegz"},"content":"                            Task todo \u003d new Task(name.toString().trim());","lastModifiedDate":"2024-01-22"},{"lineNumber":225,"author":{"gitId":"smolegz"},"content":"                            addToList(todo);","lastModifiedDate":"2024-01-22"},{"lineNumber":226,"author":{"gitId":"smolegz"},"content":"                        }","lastModifiedDate":"2024-01-22"},{"lineNumber":227,"author":{"gitId":"smolegz"},"content":"                        break;","lastModifiedDate":"2024-01-23"},{"lineNumber":228,"author":{"gitId":"smolegz"},"content":"                    case \"delete\":","lastModifiedDate":"2024-01-23"},{"lineNumber":229,"author":{"gitId":"smolegz"},"content":"                        delete(tasks, Integer.parseInt(input[1]));","lastModifiedDate":"2024-01-23"},{"lineNumber":230,"author":{"gitId":"smolegz"},"content":"                        break;","lastModifiedDate":"2024-01-23"},{"lineNumber":231,"author":{"gitId":"smolegz"},"content":"                    case \"help\":","lastModifiedDate":"2024-01-23"},{"lineNumber":232,"author":{"gitId":"smolegz"},"content":"                        helpMessage();","lastModifiedDate":"2024-01-23"},{"lineNumber":233,"author":{"gitId":"smolegz"},"content":"                        break;","lastModifiedDate":"2024-01-23"},{"lineNumber":234,"author":{"gitId":"smolegz"},"content":"                    default:","lastModifiedDate":"2024-01-23"},{"lineNumber":235,"author":{"gitId":"smolegz"},"content":"                        printVLine();","lastModifiedDate":"2024-01-23"},{"lineNumber":236,"author":{"gitId":"smolegz"},"content":"                        throw new DukeException(\"Aww! I do not recognise this command. Type \u0027help\u0027 if you\u0027re unsure :)\");","lastModifiedDate":"2024-01-23"},{"lineNumber":237,"author":{"gitId":"smolegz"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":238,"author":{"gitId":"smolegz"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":239,"author":{"gitId":"smolegz"},"content":"                System.out.println(e);","lastModifiedDate":"2024-01-23"},{"lineNumber":240,"author":{"gitId":"smolegz"},"content":"                printVLine();","lastModifiedDate":"2024-01-23"},{"lineNumber":241,"author":{"gitId":"smolegz"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":242,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":243,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":244,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"smolegz":244}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"import java.util.*;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"import java.io.*;","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"/**","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":" * The Task class encapsulates a task to be tracked by Howie.","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":" * It stores information of the task and its status.","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":" * @author Koo Zhuo Hui","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":" */","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"    private String task;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":"     * Constructor for Task.","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"     * @param s The name of the task.","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"    public Task(String s) {","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"        this.task \u003d s;","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"smolegz"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"smolegz"},"content":"     * Retrieves the name of the task.","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"smolegz"},"content":"     * @return Name of task.","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"smolegz"},"content":"    public String getTask() {","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"smolegz"},"content":"        return task;","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"smolegz"},"content":"     * Retrieves the status of a task.","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"smolegz"},"content":"     * @return Whether Task is completed, or not.","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"smolegz"},"content":"    public boolean getStatus() {","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"smolegz"},"content":"        return isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"smolegz"},"content":"     * Set Task to complete status.","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"smolegz"},"content":"     * @return Returns itself.","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"smolegz"},"content":"    public Task setDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"smolegz"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"smolegz"},"content":"        return this;","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"smolegz"},"content":"     * Set Task to undone status.","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"smolegz"},"content":"     * @return Returns itself.","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"smolegz"},"content":"    public Task setUndone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"smolegz"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":53,"author":{"gitId":"smolegz"},"content":"        return this;","lastModifiedDate":"2024-01-22"},{"lineNumber":54,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":55,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":56,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"smolegz"},"content":"     * Convert this Task to a string.","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"smolegz"},"content":"     * @return A string representation of Task, including its status.","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"smolegz"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":61,"author":{"gitId":"smolegz"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":62,"author":{"gitId":"smolegz"},"content":"        return \"[T][\" +(isDone ? \"X\" : \" \") + \"] \" + task;","lastModifiedDate":"2024-01-22"},{"lineNumber":63,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":64,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"smolegz":64}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"todo borrow book","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"mark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":"mark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"unmark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"delete 4","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"delete 3","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"help","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":"bye","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"smolegz":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"java -classpath ..\\bin Howie \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"smolegz":1,"-":20}}]
