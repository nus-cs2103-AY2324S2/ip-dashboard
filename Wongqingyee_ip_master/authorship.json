[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"# duke.Duke project template","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Wongqingyee":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"checkstyle {","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Wongqingyee":5,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"T |   | erfewsd","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"T |   | wefdsx","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"T |   | read book","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"D |   | return book  | Feb 03 2024 at 12:00PM","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":4}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" * A Personal Assistant Chatbot that helps a person to keep track of various things.","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs a Duke object with the specified file path for storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"     * @param filePath The file path for storing tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"     * Runs the Duke program, processing user commands until the \"bye\" command is entered.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"     * The user is prompted with a welcome message and can interact with the chatbot.","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"     * Recognized commands include list, mark, unmark, todo, deadline, event, and more.","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"     * Further carry out the following functions based on the command entered.","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"    public void run() {","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"        ui.welcomeMsg();","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"            try {","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"                ui.showLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"Wongqingyee"},"content":"            } finally {","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Wongqingyee"},"content":"                ui.showLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"Wongqingyee"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"Wongqingyee"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"Wongqingyee"},"content":"        Duke duke \u003d new Duke(\"./data/duke.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"Wongqingyee"},"content":"        duke.run();","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Wongqingyee":63,"-":1}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import duke.command.*;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":" * The Parser class is responsible for parsing user input and converting it into executable commands.","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":" * It recognizes different command types and returns the corresponding Command objects.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"public class Parser {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"    private enum CommandType {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"        BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, FIND, HELP","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"     * Parses the user input and returns the corresponding Command object.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     * @param userInput The user-entered command.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     * @return A Command object representing the parsed command.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException When the command is invalid.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"    @SuppressWarnings(\"checkstyle:MissingSwitchDefault\")","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"    public static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"        String[] inputs \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"            // handle case-insensitive","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"            CommandType c \u003d CommandType.valueOf(inputs[0].toUpperCase());","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"            switch (c) {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"            case BYE:","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"                return new ExitCommand();","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"            case LIST:","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"                return new ListCommand();","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"            case HELP:","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"                return new HelpCommand();","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"            case DELETE:","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"                return parseDeleteCommand(inputs);","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"            case MARK:","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"                return parseMarkCommand(inputs);","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"            case UNMARK:","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"                return parseUnmarkCommand(inputs);","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"            case TODO:","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"                return parseTodoCommand(inputs);","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"            case DEADLINE:","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"                return parseDeadlineCommand(inputs);","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"            case EVENT:","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"                return parseEventCommand(inputs);","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"            case FIND:","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"                return parseFindCommand(inputs);","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"            default:","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"Wongqingyee"},"content":"                return null;","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Wongqingyee"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"Wongqingyee"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"An error occurred: Invalid command.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please enter \u0027help\u0027 for a list of valid commands.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"Wongqingyee"},"content":"     * Parses a todo command and returns the corresponding ToDoCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"Wongqingyee"},"content":"     * @param inputs The string array containing the user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"Wongqingyee"},"content":"     * @return A ToDoCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If the description of the todo is missing.","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"Wongqingyee"},"content":"    private static Command parseTodoCommand(String[] inputs) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"Wongqingyee"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"OOPS! The description of a todo cannot be left blank.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please enter \u0027help\u0027 command to find out more.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"Wongqingyee"},"content":"        String description \u003d inputs[1];","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"Wongqingyee"},"content":"        return new ToDoCommand(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"Wongqingyee"},"content":"     * Parses a delete command and returns the corresponding DeleteCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"Wongqingyee"},"content":"     * @param inputs The string array containing the user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"Wongqingyee"},"content":"     * @return A DeleteCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If the index of the task to delete is missing.","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"Wongqingyee"},"content":"    private static Command parseDeleteCommand(String[] inputs) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"Wongqingyee"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"Please indicate the index of task you want to delete.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please enter \u0027help\u0027 command to find out more.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"Wongqingyee"},"content":"        int index \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"Wongqingyee"},"content":"        return new DeleteCommand(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"Wongqingyee"},"content":"     * Parses the user input to create a MarkCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"Wongqingyee"},"content":"     * @param inputs The string array containing the user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"Wongqingyee"},"content":"     * @return A MarkCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If the index is not provided.","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"Wongqingyee"},"content":"    private static Command parseMarkCommand(String[] inputs) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"Wongqingyee"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"Please indicate the index of task you want to mark as done.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please enter \u0027help\u0027 command to find out more.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"Wongqingyee"},"content":"        int index \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"Wongqingyee"},"content":"        return new MarkCommand(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"Wongqingyee"},"content":"     * Parses the user input to create an UnmarkCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"Wongqingyee"},"content":"     * @param inputs The string array containing the user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"Wongqingyee"},"content":"     * @return An UnmarkCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If the index is not provided.","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"Wongqingyee"},"content":"    private static Command parseUnmarkCommand(String[] inputs) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"Wongqingyee"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"Please indicate the index of task you want to mark as not done.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please enter \u0027help\u0027 command to find out more.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":121,"author":{"gitId":"Wongqingyee"},"content":"        int index \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":122,"author":{"gitId":"Wongqingyee"},"content":"        return new UnmarkCommand(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":124,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"Wongqingyee"},"content":"     * Parses the user input to create a DeadlineCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":128,"author":{"gitId":"Wongqingyee"},"content":"     * @param inputs The string array containing the user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":129,"author":{"gitId":"Wongqingyee"},"content":"     * @return A DeadlineCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":130,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If the description or date/time is missing in the input.","lastModifiedDate":"2024-02-04"},{"lineNumber":131,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":132,"author":{"gitId":"Wongqingyee"},"content":"    private static Command parseDeadlineCommand(String[] inputs) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":133,"author":{"gitId":"Wongqingyee"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":134,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"OOPS! The description of a deadline cannot be left blank.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please enter \u0027help\u0027 command to find out more.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"Wongqingyee"},"content":"        } else if (!inputs[1].contains(\"/by\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":137,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"OOPS! The date/time for the deadline cannot be left blank.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":138,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please enter \u0027help\u0027 command to find out more.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":139,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":140,"author":{"gitId":"Wongqingyee"},"content":"        String[] descriptions \u003d inputs[1].split(\"/by \");","lastModifiedDate":"2024-02-04"},{"lineNumber":141,"author":{"gitId":"Wongqingyee"},"content":"        return new DeadlineCommand(descriptions[0], descriptions[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":142,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":143,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":144,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":145,"author":{"gitId":"Wongqingyee"},"content":"     * Parses the user input to create an EventCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":146,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":147,"author":{"gitId":"Wongqingyee"},"content":"     * @param inputs The string array containing the user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":148,"author":{"gitId":"Wongqingyee"},"content":"     * @return An EventCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":149,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If the description or start/end time is missing in the input.","lastModifiedDate":"2024-02-04"},{"lineNumber":150,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":151,"author":{"gitId":"Wongqingyee"},"content":"    private static Command parseEventCommand(String[] inputs) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":152,"author":{"gitId":"Wongqingyee"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":153,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"OOPS! The description of an event cannot be left blank.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":154,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please enter \u0027help\u0027 command to find out more.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":155,"author":{"gitId":"Wongqingyee"},"content":"        } else if (!inputs[1].contains(\"/from\") \u0026\u0026 !inputs[1].contains(\"/to\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":156,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"OOPS! The start time and end time cannot be left blank.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":157,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please enter \u0027help\u0027 command to find out more.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":158,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":159,"author":{"gitId":"Wongqingyee"},"content":"        String[] descriptions \u003d inputs[1].split(\"/from|/to\");","lastModifiedDate":"2024-02-04"},{"lineNumber":160,"author":{"gitId":"Wongqingyee"},"content":"        return new EventCommand(descriptions[0], descriptions[1], descriptions[2]);","lastModifiedDate":"2024-02-04"},{"lineNumber":161,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":162,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":163,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":164,"author":{"gitId":"Wongqingyee"},"content":"     * Parses the user input to create a FindCommand for searching tasks by a keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":165,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":166,"author":{"gitId":"Wongqingyee"},"content":"     * @param inputs The string array containing the user inputs.","lastModifiedDate":"2024-02-04"},{"lineNumber":167,"author":{"gitId":"Wongqingyee"},"content":"     * @return A FindCommand for searching tasks by the specified keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":168,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If the keyword is left blank.","lastModifiedDate":"2024-02-04"},{"lineNumber":169,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":170,"author":{"gitId":"Wongqingyee"},"content":"    public static Command parseFindCommand(String[] inputs) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":171,"author":{"gitId":"Wongqingyee"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":172,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"OOPS! The keyword to find cannot be left blank.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":173,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please enter \u0027help\u0027 command to find out more.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":174,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":175,"author":{"gitId":"Wongqingyee"},"content":"        return new FindCommand(inputs[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":176,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":177,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":177}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":" * Represents a command to be executed by Duke.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" * All specific command classes should extend this abstract class.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"     * Executes the command based on the given parameters.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks   The TaskList that holds the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     * @param ui      The Ui to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     * @param storage The Storage to save or load tasks from/to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":28}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" * A class that inherits from Command class.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" * Represents a command that adds a deadline task.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"    private Deadline deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs a DeadlineCommand with the specified description and deadline date/time.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"     * @param by          The date/time by which the task should be completed.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"    public DeadlineCommand(String description, String by) {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"        this.deadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"     * Executes the DeadlineCommand by adding the created deadline task to the TaskList,","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"     * displaying a confirmation message, and saving the updated TaskList to storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"     * Saves the changes into the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks   The TaskList that holds the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"     * @param ui      The Ui to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"     * @param storage The Storage to save the tasks to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(deadline);","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"        ui.showAddMsg(deadline, tasks.getTaskSize());","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"     * Checks if the DeadlineCommand is an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"     * @return false, as the DeadlineCommand is not an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":53}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":" * A class that inherits from Command class.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" * Represents a command to delete a task from the TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"    private int index;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs a DeleteCommand with the specified index of the task to be deleted.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"     * Executes the DeleteCommand by removing the task at the specified index from the TaskList,","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"     * displaying a deletion message, and saving the updated TaskList to storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"     * Saves the changes into the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks   The TaskList that holds the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"     * @param ui      The Ui to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"     * @param storage The Storage to save the tasks to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"        if (this.index \u003c\u003d tasks.getTaskSize() \u0026\u0026 this.index \u003e 0) {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"            ui.showDeleteMsg(tasks.getTasks().get(this.index - 1), tasks.getTaskSize());","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"            tasks.delete(this.index);","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"Invalid index.\"","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please provide a valid index within the range 1 to \"","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"                    + tasks.getTaskSize() + \".\");","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"     * Checks if the DeleteCommand is an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"     * @return false, as the DeleteCommand is not an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Wongqingyee"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"Wongqingyee"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":57}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" * A class that inherits from Command class.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" * Represents a command to add an event task to the TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"    private Event event;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs an EventCommand with the specified description, start time, and end time.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"    public EventCommand(String description, String from, String to) {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"        this.event \u003d new Event(description, from, to);","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"     * Executes the EventCommand by adding the event task to the TaskList,","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"     * displaying an addition message, and saving the updated TaskList to storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"     * Saves the changes into the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks   The TaskList that holds the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"     * @param ui      The Ui to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"     * @param storage The Storage to save the tasks to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(event);","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"        ui.showAddMsg(event, tasks.getTaskSize());","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"     * Checks if the EventCommand is an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"     * @return false, as the EventCommand is not an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":54}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":" * A class that inherits from the Command class.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" * Represents a command to exit the Duke program.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"     * Executes the ExitCommand by displaying a goodbye message to the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks   The TaskList that holds the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     * @param ui      The Ui to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     * @param storage The Storage to save the tasks to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"        ui.goodbyeMsg();","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"     * Checks if the ExitCommand is an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"     * @return true, as the ExitCommand is an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"        return true;","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":36}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":" * A class that inherits from the Command class.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" * Represents a command to find tasks containing a specified keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"    private String keyword;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs a FindCommand with the specified keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"     * Executes the find command, searching for tasks with the specified keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks   The list of tasks to search.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"     * @param storage The storage for saving tasks to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If the keyword is not found in the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"        if (!tasks.findTasksByKeyword(keyword).isEmpty()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"            ui.showFindMsg(tasks.findTasksByKeyword(keyword));","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"Keyword is not found.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"     * Checks if the FindCommand is an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"     * @return false, as the FindCommand is not an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":51}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":" * A class that inherits from Command class.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" * Represents a command to display help information to the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"     * Executes the HelpCommand by displaying the list of valid commands and the format","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"     * to the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks   The TaskList that holds the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     * @param ui      The Ui to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     * @param storage The Storage to save the tasks to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"        ui.showHelpMsg();","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"     * Checks if the HelpCommand is an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"     * @return false, as the HelpCommand is not an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":37}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":" * A class that inherits from Command class.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" * Represents a command to display the list of tasks to the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"     * Executes the ListCommand by displaying the list of tasks to the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks   The TaskList that holds the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     * @param ui      The Ui to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     * @param storage The Storage to save the tasks to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"        ui.showList();","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"        tasks.list();","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"     * Checks if the ListCommand is an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"     * @return false, as the ListCommand is not an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":37}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":" * A class that inherits from Command class.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"    private int index;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs a MarkCommand with the specified index of the task to be marked as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"     * Executes the MarkCommand by marking the specified task as done in the TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"     * Shows a message indicating the task has been marked as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"     * Saves the changes to the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks   The TaskList that holds the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"     * @param ui      The Ui to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"     * @param storage The Storage to save the tasks to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"        if (this.index \u003c\u003d tasks.getTaskSize() \u0026\u0026 this.index \u003e 0) {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"            tasks.mark(this.index);","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"            ui.showMarkMsg(tasks.getTasks().get(this.index - 1));","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"Invalid index. \"","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please provide a valid index within the range 1 to \"","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"                    + tasks.getTaskSize() + \".\");","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"     * Checks if the MarkCommand is an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"     * @return false, as the MarkCommand is not an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Wongqingyee"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"Wongqingyee"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":57}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" * A class that inherits from Command class.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" * Represents a command to add a ToDo task.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"    private ToDo toDo;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs a ToDoCommand with the specified description of the ToDo task.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"    public ToDoCommand(String description) {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"        this.toDo \u003d new ToDo(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"     * Executes the ToDoCommand by adding the specified ToDo task to the TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"     * Shows a message indicating the task has been added.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"     * Saves the changes into the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks   The TaskList that holds the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"     * @param ui      The Ui to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"     * @param storage The Storage to save the tasks to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(toDo);","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"        ui.showAddMsg(toDo, tasks.getTaskSize());","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"     * Checks if the ToDoCommand is an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"     * @return false, as the ToDoCommand is not an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":52}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":" * A class that inherits from Command class.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" * Represents a command to unmark a task as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"    private int index;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs an UnmarkCommand with the specified index of the task to unmark.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     * @param index The index of the task to unmark.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"     * Executes the UnmarkCommand by setting the specified task as not done in the TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"     * Shows a message indicating the task has been unmarked.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"     * Saves the changes into the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks   The TaskList that holds the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"     * @param ui      The Ui to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"     * @param storage The Storage to save the tasks to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"        if (this.index \u003c\u003d tasks.getTaskSize() \u0026\u0026 this.index \u003e 0) {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"            tasks.unmark(this.index);","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"            ui.showUnmarkMsg(tasks.getTasks().get(this.index - 1));","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"Invalid index. \"","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please provide a valid index within the range 1 to \"","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"                    + tasks.getTaskSize() + \".\");","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"     * Checks if the UnmarkCommand is an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"     * @return false, as the UnmarkCommand is not an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Wongqingyee"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"Wongqingyee"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":57}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package duke.exception;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":" * Represents an exception specific to the Duke chatbot application.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":" * It is thrown to indicate that there is an error or exceptional condition in the Duke application.","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs a DukeException with the specified detail message.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"     * @param message The error message of the exception.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Wongqingyee":17}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package duke.storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import java.io.File;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":" * Represents the storage for tasks in the Duke chatbot application.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":" * Handles loading tasks from a file and saving tasks to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"public class Storage {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"    private String filePath;","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"    private String directoryPath;","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs a Storage object with the specified file path for storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"     * @param filePath The file path for storing tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"        this.directoryPath \u003d \"./data/\";","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"     * Loads tasks from the specified file.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"     * @return ArrayList of tasks loaded from the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If an error occurs during the loading process.","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"        // Create a new file if it doesn\u0027t exist","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"                throw new DukeException(\"Error creating a new File: \" + e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"Wongqingyee"},"content":"            try (BufferedReader reader \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Wongqingyee"},"content":"                String line;","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"Wongqingyee"},"content":"                while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"Wongqingyee"},"content":"                    Task task \u003d Task.fromString(line);","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"Wongqingyee"},"content":"                    tasks.add(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"Wongqingyee"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"Wongqingyee"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"Wongqingyee"},"content":"                throw new DukeException(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"Wongqingyee"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"Wongqingyee"},"content":"        return tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"Wongqingyee"},"content":"     * Saves the tasks in the provided TaskList to the specified file.","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks The TaskList containing tasks to be saved.","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If an error occurs during the saving process.","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"Wongqingyee"},"content":"    public void save(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"Wongqingyee"},"content":"        File directory \u003d new File(directoryPath);","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"Wongqingyee"},"content":"        // Create a directory if it doesn\u0027t exist.","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"Wongqingyee"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"Wongqingyee"},"content":"            directory.mkdirs();","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"Wongqingyee"},"content":"        // Write the tasks in the list into the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"Wongqingyee"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"Wongqingyee"},"content":"            ArrayList\u003cTask\u003e taskList \u003d tasks.getTasks();","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"Wongqingyee"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"Wongqingyee"},"content":"                writer.write(task.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"Wongqingyee"},"content":"                writer.newLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"Wongqingyee"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"Wongqingyee"},"content":"            System.out.println(\"Tasks saved successfully.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"Wongqingyee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":92}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":" * Represents a task with a deadline in the Duke chatbot application.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":" * It is a subclass of the Task class.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"    protected String by;","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs a Deadline object with the specified description and deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"     * @param by           The deadline in the format \"yyyy-MM-dd hh:mma\".","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"        DateTimeFormatterBuilder builder \u003d new DateTimeFormatterBuilder();","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"        builder.parseCaseInsensitive();","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"        builder.appendPattern(\"yyyy-MM-dd hh:mma\");","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"        DateTimeFormatter format \u003d builder.toFormatter();","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"        this.dueDate \u003d LocalDateTime.parse(by, format);","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"     * Formats the provided due date using the pattern \"MMM dd yyyy \u0027at\u0027 hh:mma\".","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"     * @param dueDate The due date to be formatted.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"     * @return The formatted due date string.","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"    public String formatter(LocalDateTime dueDate) {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"        DateTimeFormatter customFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy \u0027at\u0027 hh:mma\");","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"        return customFormat.format(dueDate);","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"     * @return A string representing the Deadline task.","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"        return \"D\" + \" | \" + super.toString() + \" | \" + formatter(this.dueDate);","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Wongqingyee":53}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":" * Represents an event task in the Duke chatbot application.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":" * It is a subclass of the Task class.","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"    private String from;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"    private String to;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs an Event object with the specified description, start, and end times.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"     * @return A string representing the Event task.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"        return \"E\" + \" | \" + super.toString() + \" | \" + from + \"-\" + to;","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Wongqingyee":34}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":" * Represents a task in the Duke chatbot application.","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":" * It can be a ToDo, Deadline, or Event task.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"    public Task() {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs a Task object with the specified description.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"     * @return A string representing the status icon (\"X\" if done, \" \" if not done).","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"     * Marks the task as undone.","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"     * Converts a string representation of a task into a Task object.","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"Wongqingyee"},"content":"     * @param task A string representation of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Wongqingyee"},"content":"     * @return A Task object parsed from the input string.","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"Wongqingyee"},"content":"    public static Task fromString(String task) {","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Wongqingyee"},"content":"        String[] inputs \u003d task.split(\" \\\\| \", 4);","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"Wongqingyee"},"content":"        String type \u003d inputs[0];","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"Wongqingyee"},"content":"        String status \u003d inputs[1];","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"Wongqingyee"},"content":"        String description \u003d inputs[2];","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"Wongqingyee"},"content":"        String date \u003d \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"Wongqingyee"},"content":"        if (inputs.length \u003e 3) {","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"Wongqingyee"},"content":"            date \u003d inputs[3];","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"Wongqingyee"},"content":"        switch (type) {","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"Wongqingyee"},"content":"        case \"T\":","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"Wongqingyee"},"content":"            ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"Wongqingyee"},"content":"            if (status.equals(\"X\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"Wongqingyee"},"content":"                todo.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"Wongqingyee"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"Wongqingyee"},"content":"            return todo;","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"Wongqingyee"},"content":"        case \"D\":","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"Wongqingyee"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy \u0027at\u0027 hh:mma\");","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"Wongqingyee"},"content":"            LocalDateTime d \u003d LocalDateTime.parse(date, formatter);","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"Wongqingyee"},"content":"            DateTimeFormatter customFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd hh:mma\");","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"Wongqingyee"},"content":"            String formatted \u003d customFormat.format(d);","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"Wongqingyee"},"content":"            Deadline dl \u003d new Deadline(description, formatted);","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"Wongqingyee"},"content":"            if (status.equals(\"X\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"Wongqingyee"},"content":"                dl.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"Wongqingyee"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"Wongqingyee"},"content":"            return dl;","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"Wongqingyee"},"content":"        case \"E\":","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"Wongqingyee"},"content":"            String[] timeDate \u003d date.split(\"-\");","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"Wongqingyee"},"content":"            Event e \u003d new Event(description, timeDate[0], timeDate[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"Wongqingyee"},"content":"            if (status.equals(\"X\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"Wongqingyee"},"content":"                e.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"Wongqingyee"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"Wongqingyee"},"content":"            return e;","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"Wongqingyee"},"content":"        default:","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"Wongqingyee"},"content":"            return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"Wongqingyee"},"content":"     * Checks if the task\u0027s description contains the specified keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"Wongqingyee"},"content":"     * @param keyword The keyword to search for in the task\u0027s description.","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"Wongqingyee"},"content":"     * @return true if the description contains the keyword, false otherwise.","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"Wongqingyee"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"Wongqingyee"},"content":"        return description.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"Wongqingyee"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"Wongqingyee"},"content":"     * @return A string representing the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":112,"author":{"gitId":"Wongqingyee"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":113,"author":{"gitId":"Wongqingyee"},"content":"        return getStatusIcon() + \" | \" + description;","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":115,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Wongqingyee":115}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":" * Represents a list of tasks in the Duke chatbot application.","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"public class TaskList {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs a TaskList with the given list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"     * Deletes a task from the task list based on its index.","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"    public void delete(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"     * Lists all tasks in the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"    public void list() {","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"Wongqingyee"},"content":"     * Marks a task as done based on its index.","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"Wongqingyee"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"Wongqingyee"},"content":"    public void mark(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"Wongqingyee"},"content":"        tasks.get(index - 1).markAsDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"Wongqingyee"},"content":"     * Marks a task as undone based on its index.","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"Wongqingyee"},"content":"     * @param index The index of the task to be marked as undone.","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"Wongqingyee"},"content":"    public void unmark(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"Wongqingyee"},"content":"        tasks.get(index - 1).markAsUndone();","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"Wongqingyee"},"content":"     * Gets the number of tasks in the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"Wongqingyee"},"content":"     * @return The size of the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"Wongqingyee"},"content":"    public int getTaskSize() {","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"Wongqingyee"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"Wongqingyee"},"content":"     * Gets the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"Wongqingyee"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"Wongqingyee"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"Wongqingyee"},"content":"        return tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"Wongqingyee"},"content":"     * Gets the description of a task based on its index.","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"Wongqingyee"},"content":"     * @param index The index of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"Wongqingyee"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"Wongqingyee"},"content":"    public String getTaskDescription(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"Wongqingyee"},"content":"        return this.tasks.get(index).description;","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"Wongqingyee"},"content":"     * Finds tasks in the list that contain the specified keyword in their descriptions.","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"Wongqingyee"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"Wongqingyee"},"content":"     * @return An ArrayList of tasks containing the specified keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"Wongqingyee"},"content":"    public ArrayList\u003cTask\u003e findTasksByKeyword(String keyword) {","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"Wongqingyee"},"content":"        ArrayList\u003cTask\u003e matchingTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"Wongqingyee"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"Wongqingyee"},"content":"            if (task.containsKeyword(keyword)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"Wongqingyee"},"content":"                matchingTask.add(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"Wongqingyee"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"Wongqingyee"},"content":"        return matchingTask;","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":116}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":" * Represents a todo task in the Duke chatbot application.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs a todo task with the given description.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     * Returns a string representation of the todo task.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     * @return The string representation of the todo task.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"        return \"T\" + \" | \" + super.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Wongqingyee":26}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package duke.ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":" * The UI component for the fanTASKtic.","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" * Handles interactions with the user, such as reading commands and displaying messages.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"public class Ui {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"    private Scanner sc;","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs a Ui object and initializes the Scanner for user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"    public Ui() {","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"     * Reads a command from the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"     * @return The user\u0027s input command.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"        return sc.nextLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"     * Prints the welcome message when the chatbot starts.","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"    public void welcomeMsg() {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"        System.out.println(\"Hello from \\n\" + LOGO);","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"        System.out.println(\"This is fanTasktic!\\n\"","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"                + \"What can I do for you?\\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"     * Prints the goodbye message when the \u0027bye\u0027 command is entered.","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"    public void goodbyeMsg() {","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"        System.out.println(\"Goodbye. Have a great day ahead!\");","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"Wongqingyee"},"content":"     * Prints a message indicating that a task has been added successfully.","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"Wongqingyee"},"content":"     * @param task  The task that has been added.","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"Wongqingyee"},"content":"     * @param index The current number of tasks in the list.","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"Wongqingyee"},"content":"    public void showAddMsg(Task task, int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"Wongqingyee"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \\n\" + task);","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"Wongqingyee"},"content":"        System.out.format(\"Now you have %d tasks in the list.\\n\", index);","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"Wongqingyee"},"content":"     * Prints a message indicating that a task has been deleted successfully.","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"Wongqingyee"},"content":"     * @param deletedTask The task that has been deleted.","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"Wongqingyee"},"content":"     * @param index       The current number of tasks in the list.","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"Wongqingyee"},"content":"    public void showDeleteMsg(Task deletedTask, int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"Wongqingyee"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"Wongqingyee"},"content":"                + deletedTask);","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"Wongqingyee"},"content":"        System.out.format(\"Now you have %d tasks in the list.\\n\", (index - 1));","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"Wongqingyee"},"content":"     * Prints a message indicating that a task has been marked as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"Wongqingyee"},"content":"     * @param task The task that has been marked as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"Wongqingyee"},"content":"    public void showMarkMsg(Task task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"Wongqingyee"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"Wongqingyee"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"Wongqingyee"},"content":"     * Prints a message indicating that a task has been marked as not done.","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"Wongqingyee"},"content":"     * @param task The task that has been marked as not done.","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"Wongqingyee"},"content":"    public void showUnmarkMsg(Task task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"Wongqingyee"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"Wongqingyee"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"Wongqingyee"},"content":"     * Prints out a list of available commands.","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"Wongqingyee"},"content":"    public void showHelpMsg() {","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"Wongqingyee"},"content":"        System.out.println(\"bye: Terminate the program.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"Wongqingyee"},"content":"                + \"list: Display the list of tasks.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"Wongqingyee"},"content":"                + \"mark \u003cindex\u003e: Mark a task as done.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"Wongqingyee"},"content":"                + \"unmark \u003cindex\u003e: Mark a task as not done.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"Wongqingyee"},"content":"                + \"todo \u003cdescription\u003e: Add a todo task.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"Wongqingyee"},"content":"                + \"deadline \u003cdescription\u003e /by \u003cyyyy-MM-dd hh:mma\u003e: Add a deadline task.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"Wongqingyee"},"content":"                + \"event \u003cdescription\u003e /from \u003cstartDate\u003e /to \u003cendDate\u003e: Add an event task.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"Wongqingyee"},"content":"                + \"find \u003ckeyword\u003e: Find a list of tasks that match with the keyword.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"Wongqingyee"},"content":"     * Prints an error message.","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"Wongqingyee"},"content":"     * @param e The error message to be displayed.","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"Wongqingyee"},"content":"    public void showError(String e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"Wongqingyee"},"content":"        System.out.println(e);","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":121,"author":{"gitId":"Wongqingyee"},"content":"     * Prints a message indicating the start of the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":122,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"Wongqingyee"},"content":"    public void showList() {","lastModifiedDate":"2024-02-04"},{"lineNumber":124,"author":{"gitId":"Wongqingyee"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":128,"author":{"gitId":"Wongqingyee"},"content":"     * Prints a line separator.","lastModifiedDate":"2024-02-04"},{"lineNumber":129,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":130,"author":{"gitId":"Wongqingyee"},"content":"    public void showLine() {","lastModifiedDate":"2024-02-04"},{"lineNumber":131,"author":{"gitId":"Wongqingyee"},"content":"        System.out.println(\"-----------------------------------------------------------------\");","lastModifiedDate":"2024-02-04"},{"lineNumber":132,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":133,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":134,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"Wongqingyee"},"content":"     * Prints a list of tasks that match the specified keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":137,"author":{"gitId":"Wongqingyee"},"content":"     * @param matchingTasks The list of tasks that match the keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":138,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":139,"author":{"gitId":"Wongqingyee"},"content":"    public void showFindMsg(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":140,"author":{"gitId":"Wongqingyee"},"content":"        System.out.println(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2024-02-04"},{"lineNumber":141,"author":{"gitId":"Wongqingyee"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":142,"author":{"gitId":"Wongqingyee"},"content":"            System.out.println((i + 1) + \".\" + matchingTasks.get(i));","lastModifiedDate":"2024-02-04"},{"lineNumber":143,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":144,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":145,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":146,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":146}},{"path":"src/test/java/duke/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"    public void execute_validIndex_success() throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(new Task(\"todo smtg\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(new Task(\"event meeting /from Monday 6pm /to 7pm\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(new Task(\"deadline ip /by 2024-02-05 06:00pm\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"        Storage storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"        // Deleting task at index 2","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"        Command deleteCommand \u003d new DeleteCommand(2);","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"        deleteCommand.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"        // After deletion, only 2 tasks should remain","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"        assertEquals(2, tasks.getTaskSize());","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"        assertEquals(\"todo smtg\", tasks.getTaskDescription(0));","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"        assertEquals(\"deadline ip /by 2024-02-05 06:00pm\", tasks.getTaskDescription(1));","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"    public void execute_invalidIndex_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(new Task(\"todo smtg\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(new Task(\"Task 2\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(new Task(\"deadline ip /by 2024-02-05 06:00pm\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"        Storage storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"        // Deleting task at invalid index 0","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"        Command deleteCommand \u003d new DeleteCommand(0);","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"Wongqingyee"},"content":"        // The execution of the command should throw a DukeException","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Wongqingyee"},"content":"        assertThrows(DukeException.class, () -\u003e deleteCommand.execute(tasks, ui, storage));","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"Wongqingyee"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"Wongqingyee"},"content":"    public void isExit_returnsFalse() {","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"Wongqingyee"},"content":"        Command deleteCommand \u003d new DeleteCommand(1);","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"Wongqingyee"},"content":"        assertFalse(deleteCommand.isExit());","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":62}},{"path":"src/test/java/duke/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"public class MarkCommandTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"    public void execute_validIndex_taskMarkedSuccessfully() throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"        int validIndex \u003d 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"        Task taskToMark \u003d new Task(\"todo blahvblah\");","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(taskToMark);","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"        TaskList task \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"        Storage storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"        MarkCommand markCommand \u003d new MarkCommand(validIndex);","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"        markCommand.execute(task, ui, storage);","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"        // Verify that the task is marked","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"        assertEquals(\"X\", taskToMark.getStatusIcon());","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"        // Verify that save is called with the updated task list","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"        assertEquals(tasks, task.getTasks());","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"    public void execute_invalidIndex_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"        int invalidIndex \u003d 0;","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(new Task(\"todo blahvblah\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"        TaskList task \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"        Storage storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"        // Create MarkCommand and execute, assert DukeException is thrown","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"        MarkCommand markCommand \u003d new MarkCommand(invalidIndex);","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"        DukeException dukeException \u003d assertThrows(DukeException.class,","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"                () -\u003e markCommand.execute(task, ui, storage));","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Wongqingyee"},"content":"        // Verify that the exception message is as expected","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"Wongqingyee"},"content":"        assertEquals(\"Invalid index. Please provide a valid index within the range 1 to 1.\",","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"Wongqingyee"},"content":"                dukeException.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"Wongqingyee"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"Wongqingyee"},"content":"    public void isExit_alwaysReturnsFalse() {","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"Wongqingyee"},"content":"        MarkCommand markCommand \u003d new MarkCommand(1);","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"Wongqingyee"},"content":"        assertFalse(markCommand.isExit());","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":64}},{"path":"src/test/java/duke/command/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"    public void execute_validIndex_taskUnmarkedSuccessfully() throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"        int validIndex \u003d 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"        Task taskToMark \u003d new Task(\"todo blahvblah\");","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(taskToMark);","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"        TaskList task \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"        Storage storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(validIndex);","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"        unmarkCommand.execute(task, ui, storage);","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"        // Verify that the task is unmarked","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"        assertEquals(\" \", taskToMark.getStatusIcon());","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"        // Verify that save is called with the updated task list","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"        assertEquals(tasks, task.getTasks());","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"    public void execute_invalidIndex_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"        int invalidIndex \u003d 0;","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(new Task(\"todo blahvblah\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"        TaskList task \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"        Storage storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(invalidIndex);","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"        DukeException dukeException \u003d assertThrows(DukeException.class,","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"                () -\u003e unmarkCommand.execute(task, ui, storage));","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"Wongqingyee"},"content":"        // Verify that the exception message is as expected","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Wongqingyee"},"content":"        assertEquals(\"Invalid index. Please provide a valid index within the range 1 to 1.\",","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"Wongqingyee"},"content":"                dukeException.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"Wongqingyee"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"Wongqingyee"},"content":"    public void isExit_alwaysReturnsFalse() {","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"Wongqingyee"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(1);","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"Wongqingyee"},"content":"        assertFalse(unmarkCommand.isExit());","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":63}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"todo grocery shopping","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"event group meeting /from 2pm /to 3pm","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"deadline ip /by 25 Jan 23:59","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"todo","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"deadline ip","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"event Career Fair","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"help","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"delete 1","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Wongqingyee":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Wongqingyee":1,"-":20}}]
