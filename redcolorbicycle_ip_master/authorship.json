[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"# duke.duke project template","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"3. After that, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"redcolorbicycle":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"    mainClass.set(\"Duke.Duke\")","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"    archiveFileName \u003d \"duke.jar\"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"redcolorbicycle":2,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"# Bearducky User Guide","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"Bearducky is a CLI-based chatbot that allows the user to handle Tasks, meant to represent a duck wearing a bear hat.","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"Tasks consist of three types:","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"1. Todo, tasks that do not have any deadlines.","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"2. Deadline, tasks that have a single deadline.","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"3. Event, tasks that have a start date and end date.","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"## Features available","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"-Adding tasks","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"-Deleting tasks","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"-Marking tasks","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"-Unmarking tasks","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"-Searching for tasks","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"-Listing out tasks","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"-Feeding bearducky bread","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"## Adding tasks","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"### Adding Todo:","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"To add a Todo task, the syntax is todo taskname. For example, to add task \"do 2103\", one would enter ```todo do 2103```.","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"### Adding Deadline:","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"To add a Deadline task, the syntax is deadline /by date (mm/dd/yyyy format). For example, to add deadline \"do 2103\" by 23/2/2023, one would enter ","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"```deadline do 2103 /by 02/23/2023```. When listed, it will appear as \"do 2103 (by: 2023-02-23)\".","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"### Adding Event:","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"To add a Event task, the syntax is event /from startdate (mm/dd/yyyy format) /to enddate (mm/dd/yyyy format). For example, to add deadline \"do 2103\" from 23/2/2023 to 24/2/2023, one would enter ```event do 2103 /from 2/23/2023 /to 2/24/2023```. ","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"When listed, it will appear as \"do 2103 (from: 2023-02-23 to 2023-02-24)\".","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"## Deleting tasks","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"To delete the nth item on the list, enter the command ```delete n```.","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"## Marking tasks","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"To mark the nth item on the list, enter the command ```mark n```.","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"## Unmarking tasks","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"To unmark the nth item on the list, enter the command ```unmark n```.","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"## Searching for tasks","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"To search for a task, enter the command ```find task```. All tasks that have matching names will show up.","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"## Listing out tasks","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"To list out tasks, enter the command ```list```.","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"## Feeding","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"One has the option to make bearducky marginally less depressed by entering ```Feed bread to bearducky```.","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"## Exit","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"Enter ```bye```","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"redcolorbicycle":39,"-":14}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"    protected LocalDate by; // Deadline date","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"     * Constructs a deadline task with the given description and deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"     * @param by          The deadline date.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns the type id of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The type id of the task (\"D\" for deadline task).","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"    public String typeid() {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"        return \"D\";","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns the deadline date formatted as a string.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The deadline date formatted as a string.","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"    public String timeprint() {","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"        String bystring \u003d formatter.format(by);","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"        return (\"~\" + bystring); // Returns the deadline date formatted as \"~yyyy-MM-dd\"","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"     * @return A string representation of the deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\"; // Returns a string representation of the deadline task","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"redcolorbicycle":53}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package duke;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"    private void flip() {","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"        db.flip();","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"        return db;","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"redcolorbicycle":60}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":" * The Duke class represents the main entry point for the Duke program.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":" * It initializes the user interface, storage, and task list, and runs the program.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"    private Storage storage; // Deals with loading and saving","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"    private TaskList tasks; // Operations to add and delete","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"    private final Ui ui; // Deals with interactions from user","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"     * Constructs a Duke object with the specified file path for storing tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"     * @param filePath The file path where tasks are stored.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"     * Constructs a Duke object with the specified file path for storing tasks.","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"    public Duke() {","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"        storage \u003d new Storage(\"./data/tasks.txt\");","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"     * Runs the Duke program.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"     * Displays the greeting message, initializes a scanner for user input,","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"     * and starts the parsing process.","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"    /* public void run() {","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"        ui.greet();","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"        Parser parser \u003d new Parser(tasks, storage);","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"        parser.read();","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"     * The main method that initializes a Duke object and runs the program.","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"     * @param args Command-line arguments (not used in this program).","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"    /*","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"        Duke bearducky \u003d new Duke(\"./data/tasks.txt\");","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"        bearducky.run();","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"    /*","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"     * Method that reads user input and generates a response","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"redcolorbicycle"},"content":"     * @param input entry from user (not used in this program).","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"redcolorbicycle"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"        Parser parser \u003d new Parser(tasks, storage);","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"redcolorbicycle"},"content":"        String bearduckyresponse \u003d parser.read(input);","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"redcolorbicycle"},"content":"        return bearduckyresponse;","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":71,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"redcolorbicycle":70,"-":1}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":" * Represents an event task with a start date and an end date.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"    protected LocalDate start; // Start date of the event","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"    protected LocalDate end; // End date of the event","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"     * Constructs an Event object with the specified description, start date, and end date.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"     * @param description Description of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"     * @param start       Start date of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"     * @param end         End date of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"    public Event(String description, LocalDate start, LocalDate end) {","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns the type ID of the task, which is \"E\" for Event.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The type ID of the event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"    public String typeid() {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"        return \"E\";","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns a string representation of the start and end dates of the event in the format \"~start~end\".","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"     * @return A string containing the start and end dates of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"    public String timeprint() {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"        String startstring \u003d formatter.format(start);","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"        String endstring \u003d formatter.format(end);","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"        return (\"~\" + startstring + \"~\" + endstring);","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns a string representation of the event task including its description and dates.","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"     * @return A string representation of the event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2024-01-22"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"redcolorbicycle":58}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package duke;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"public class Launcher {","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"redcolorbicycle":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package duke;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"    private Duke duck \u003d new Duke();","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().initialize(duck, ui);","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"            stage.show();","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"redcolorbicycle":33}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package duke;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"    private Duke duck;","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"    private Image userimage \u003d new Image(this.getClass().getResourceAsStream(\"/images/PandaPo.jpg\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"    private Image bearduckyimage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Bearduckyimage.jpg\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"    public void initialize(Duke duck, Ui ui) {","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"        this.duck \u003d duck;","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(ui.greet(), bearduckyimage));","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"        duck \u003d d;","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"        String response \u003d duck.getResponse(input);","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"                DialogBox.getUserDialog(input, userimage),","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"                DialogBox.getDukeDialog(response, bearduckyimage)","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"        );","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"            Platform.exit();","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"redcolorbicycle":57}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":" * The Parser class is responsible for parsing user input commands and executing corresponding actions.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":" * It interacts with the TaskList, Ui, and Storage classes to manage tasks and data.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"public class Parser {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"    private TaskList tasklist;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"    public Parser(TaskList t, Storage st) {","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"        tasklist \u003d t;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"        storage \u003d st;","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"     * GUI version of read","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"     * Reads user input commands, processes them, and executes corresponding actions.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"     * Continuously loops until the user exits the program.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"    public String read(String userInput) {","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"        String userInputLowercase \u003d userInput.toLowerCase();","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"        if (checkFeeding(userInputLowercase)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"            return ui.happy();","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"        } else if (checkIfBaseCommand(userInputLowercase)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"            String reply \u003d handleBaseCommand(userInput.split(\" \"));","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"            storage.writeToFile(tasklist);","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"            return reply;","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"        } else if (checkIfFind(userInputLowercase)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"            String reply \u003d handleFind(userInput.split(\" \"));","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"            storage.writeToFile(tasklist);","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"            return reply;","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"        } else if (checkIfLeave(userInputLowercase)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"            return ui.goodbye();","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"        } else if (checkIfList(userInputLowercase)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"            return handleList(tasklist);","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"        } else if (checkIfTodo(userInputLowercase)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"            String reply \u003d handleTodo(userInput, tasklist);","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"            storage.writeToFile(tasklist);","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"            return reply;","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"        } else if (checkIfEvent(userInputLowercase)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"            String reply \u003d handleEvent(userInput, tasklist);","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"            storage.writeToFile(tasklist);","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"            return reply;","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"        } else if (checkIfDeadline(userInputLowercase)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"            String reply \u003d handleDeadline(userInput, tasklist);","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"            storage.writeToFile(tasklist);","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"            return reply;","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"            return ui.instructionMessage();","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"     * Handles the user input command for adding an event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"redcolorbicycle"},"content":"     * Parses the input string, creates an event task, and adds it to the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"redcolorbicycle"},"content":"     * @param s The user input command string for adding an event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"redcolorbicycle"},"content":"     * @param t The task list to which the event task will be added.","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"redcolorbicycle"},"content":"    public String handleEvent(String s, TaskList t) {","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"redcolorbicycle"},"content":"        String eventName \u003d \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"redcolorbicycle"},"content":"        String[] temp \u003d s.split(\" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"redcolorbicycle"},"content":"        if (temp.length \u003d\u003d 1 || temp[1].startsWith(\"/from\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"redcolorbicycle"},"content":"            return \"Event cannot be blank\";","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"redcolorbicycle"},"content":"        for (int a \u003d 1; a \u003c temp.length; a++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"redcolorbicycle"},"content":"            if (temp[a].startsWith(\"/from\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"redcolorbicycle"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"redcolorbicycle"},"content":"            eventName \u003d eventName.concat(temp[a]);","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"redcolorbicycle"},"content":"            eventName \u003d eventName.concat(\" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"redcolorbicycle"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"redcolorbicycle"},"content":"            String[] findPeriod \u003d s.split(\" /from \");","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"redcolorbicycle"},"content":"            String start \u003d findPeriod[1].split(\" /to \")[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"redcolorbicycle"},"content":"            String end \u003d findPeriod[1].split(\" /to \")[1];","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"redcolorbicycle"},"content":"            if (!canBeHandled(start) || !canBeHandled(end)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"redcolorbicycle"},"content":"                return \"Please enter a event with the format event eventName /from dd/mm/yyyy /to dd/mm/yyyy!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":91,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"redcolorbicycle"},"content":"            Task ne \u003d new Event(eventName, DateConvert(start), DateConvert(end));","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"redcolorbicycle"},"content":"            t.add(ne);","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"redcolorbicycle"},"content":"            return \"Duke.Task added! You now have \" + t.length() + \" tasks to attend to.\";","lastModifiedDate":"2024-02-13"},{"lineNumber":95,"author":{"gitId":"redcolorbicycle"},"content":"        } catch (ArrayIndexOutOfBoundsException b) {","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"redcolorbicycle"},"content":"            return \"Please enter a event with the format event eventName /from dd/mm/yyyy /to dd/mm/yyyy!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":97,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"redcolorbicycle"},"content":"    public String handleFind(String[] commandsplit) {","lastModifiedDate":"2024-02-13"},{"lineNumber":101,"author":{"gitId":"redcolorbicycle"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"redcolorbicycle"},"content":"            String findTarget \u003d commandsplit[1].toLowerCase();","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"redcolorbicycle"},"content":"            String returntasks \u003d \"\";","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"redcolorbicycle"},"content":"            for (int i \u003d 0; i \u003c tasklist.length(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"redcolorbicycle"},"content":"                if (tasklist.getTask(i).getDescription().toLowerCase().contains(findTarget)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"redcolorbicycle"},"content":"                    returntasks \u003d returntasks.concat(tasklist.getTask(i).toString());","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"redcolorbicycle"},"content":"                    returntasks \u003d returntasks.concat(\"\\n\");","lastModifiedDate":"2024-02-19"},{"lineNumber":108,"author":{"gitId":"redcolorbicycle"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"redcolorbicycle"},"content":"            if (returntasks.isEmpty()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":111,"author":{"gitId":"redcolorbicycle"},"content":"                return \"It doesn\u0027t exist!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":112,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":113,"author":{"gitId":"redcolorbicycle"},"content":"            return returntasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":114,"author":{"gitId":"redcolorbicycle"},"content":"        } catch (Error e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"redcolorbicycle"},"content":"            return \"[angry quacking] I can only find words!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":116,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean canBeHandled(String s) {","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"redcolorbicycle"},"content":"        return (DateConvert(s) !\u003d null);","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"redcolorbicycle"},"content":"    public LocalDate DateConvert(String s) {","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"redcolorbicycle"},"content":"        assert s.length() \u003e 5: \"Invalid length\";","lastModifiedDate":"2024-02-19"},{"lineNumber":126,"author":{"gitId":"redcolorbicycle"},"content":"        String[] patterns \u003d {\"MM/dd/yyyy\", \"M/dd/yyyy\", \"MM/d/yyyy\",","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"redcolorbicycle"},"content":"                \"M/d/yyyy\", \"MM-dd-yyyy\", \"M-dd-yyyy\", \"MM-d-yyyy\", \"M-d-yyyy\"};","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"redcolorbicycle"},"content":"        for (String pattern : patterns) {","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"redcolorbicycle"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"redcolorbicycle"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(pattern);","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"redcolorbicycle"},"content":"                return LocalDate.parse(s, formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"redcolorbicycle"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"redcolorbicycle"},"content":"                continue;","lastModifiedDate":"2024-01-30"},{"lineNumber":134,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":135,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"redcolorbicycle"},"content":"        return null;","lastModifiedDate":"2024-01-30"},{"lineNumber":137,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"redcolorbicycle"},"content":"     * Handles the user input command for adding a deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"redcolorbicycle"},"content":"     * Parses the input string, creates a deadline task, and adds it to the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"redcolorbicycle"},"content":"     * @param s The user input command string for adding a deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"redcolorbicycle"},"content":"     * @param t The task list to which the deadline task will be added.","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"redcolorbicycle"},"content":"    public String handleDeadline(String s, TaskList t) {","lastModifiedDate":"2024-02-13"},{"lineNumber":147,"author":{"gitId":"redcolorbicycle"},"content":"        String deadlineName \u003d \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"redcolorbicycle"},"content":"        String[] temp \u003d s.split(\" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":149,"author":{"gitId":"redcolorbicycle"},"content":"        if (temp.length \u003d\u003d 1 || temp[1].startsWith(\"/by\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":150,"author":{"gitId":"redcolorbicycle"},"content":"            return \"Deadline cannot be blank\";","lastModifiedDate":"2024-02-13"},{"lineNumber":151,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":152,"author":{"gitId":"redcolorbicycle"},"content":"        //create the deadline name","lastModifiedDate":"2024-01-30"},{"lineNumber":153,"author":{"gitId":"redcolorbicycle"},"content":"        for (int a \u003d 1; a \u003c temp.length; a++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":154,"author":{"gitId":"redcolorbicycle"},"content":"            if (temp[a].startsWith(\"/by\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":155,"author":{"gitId":"redcolorbicycle"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":156,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":157,"author":{"gitId":"redcolorbicycle"},"content":"            deadlineName \u003d deadlineName.concat(temp[a]);","lastModifiedDate":"2024-02-01"},{"lineNumber":158,"author":{"gitId":"redcolorbicycle"},"content":"            deadlineName \u003d deadlineName.concat(\" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":160,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":161,"author":{"gitId":"redcolorbicycle"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":162,"author":{"gitId":"redcolorbicycle"},"content":"            String[] findDeadline \u003d s.split(\" /by \");","lastModifiedDate":"2024-02-01"},{"lineNumber":163,"author":{"gitId":"redcolorbicycle"},"content":"            String deadline \u003d findDeadline[1];","lastModifiedDate":"2024-02-01"},{"lineNumber":164,"author":{"gitId":"redcolorbicycle"},"content":"            if (!canBeHandled(deadline)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":165,"author":{"gitId":"redcolorbicycle"},"content":"                return \"Please enter a deadline with the format deadline deadlineName /by dd/mm/yyyy!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":166,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":167,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":168,"author":{"gitId":"redcolorbicycle"},"content":"            Task nd \u003d new Deadline(deadlineName, DateConvert(deadline));","lastModifiedDate":"2024-02-01"},{"lineNumber":169,"author":{"gitId":"redcolorbicycle"},"content":"            t.add(nd);","lastModifiedDate":"2024-01-30"},{"lineNumber":170,"author":{"gitId":"redcolorbicycle"},"content":"            return \"Duke.Task added! You now have \" + t.length() + \" tasks to attend to.\";","lastModifiedDate":"2024-02-13"},{"lineNumber":171,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":172,"author":{"gitId":"redcolorbicycle"},"content":"        } catch (ArrayIndexOutOfBoundsException b) {","lastModifiedDate":"2024-01-30"},{"lineNumber":173,"author":{"gitId":"redcolorbicycle"},"content":"            return \"Please enter a deadline with the format deadline deadlineName /by dd/mm/yyyy!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":174,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":175,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":176,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":177,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":178,"author":{"gitId":"redcolorbicycle"},"content":"     * Handles the user input command for adding a todo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":179,"author":{"gitId":"redcolorbicycle"},"content":"     * Parses the input string, creates a todo task, and adds it to the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":180,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":181,"author":{"gitId":"redcolorbicycle"},"content":"     * @param s The user input command string for adding a todo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":182,"author":{"gitId":"redcolorbicycle"},"content":"     * @param t The task list to which the todo task will be added.","lastModifiedDate":"2024-02-01"},{"lineNumber":183,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":184,"author":{"gitId":"redcolorbicycle"},"content":"    public String handleTodo(String s, TaskList t) {","lastModifiedDate":"2024-02-13"},{"lineNumber":185,"author":{"gitId":"redcolorbicycle"},"content":"        String todoName \u003d \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":186,"author":{"gitId":"redcolorbicycle"},"content":"        String[] temp \u003d s.split(\" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":187,"author":{"gitId":"redcolorbicycle"},"content":"        if (temp.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":188,"author":{"gitId":"redcolorbicycle"},"content":"            return \"Todo cannot be blank\";","lastModifiedDate":"2024-02-13"},{"lineNumber":189,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":190,"author":{"gitId":"redcolorbicycle"},"content":"        for (int a \u003d 1; a \u003c temp.length; a++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":191,"author":{"gitId":"redcolorbicycle"},"content":"            todoName \u003d todoName.concat(temp[a]);","lastModifiedDate":"2024-02-01"},{"lineNumber":192,"author":{"gitId":"redcolorbicycle"},"content":"            todoName \u003d todoName.concat(\" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":193,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":194,"author":{"gitId":"redcolorbicycle"},"content":"        Task nt \u003d new ToDo(todoName);","lastModifiedDate":"2024-02-01"},{"lineNumber":195,"author":{"gitId":"redcolorbicycle"},"content":"        t.add(nt);","lastModifiedDate":"2024-01-30"},{"lineNumber":196,"author":{"gitId":"redcolorbicycle"},"content":"        return \"Duke.Task added! You now have \" + t.length() + \" tasks to attend to.\";","lastModifiedDate":"2024-02-13"},{"lineNumber":197,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":198,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":199,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":200,"author":{"gitId":"redcolorbicycle"},"content":"     * Checks if the input string represents a todo task command.","lastModifiedDate":"2024-02-01"},{"lineNumber":201,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":202,"author":{"gitId":"redcolorbicycle"},"content":"     * @param s The input string to be checked.","lastModifiedDate":"2024-02-01"},{"lineNumber":203,"author":{"gitId":"redcolorbicycle"},"content":"     * @return True if the input string starts with \"todo \", otherwise false.","lastModifiedDate":"2024-02-01"},{"lineNumber":204,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":205,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean checkIfTodo(String s) {","lastModifiedDate":"2024-01-30"},{"lineNumber":206,"author":{"gitId":"redcolorbicycle"},"content":"        return s.startsWith(\"todo \");","lastModifiedDate":"2024-01-30"},{"lineNumber":207,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":208,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":209,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":210,"author":{"gitId":"redcolorbicycle"},"content":"     * Checks if the input string represents an event task command.","lastModifiedDate":"2024-02-01"},{"lineNumber":211,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":212,"author":{"gitId":"redcolorbicycle"},"content":"     * @param s The input string to be checked.","lastModifiedDate":"2024-02-01"},{"lineNumber":213,"author":{"gitId":"redcolorbicycle"},"content":"     * @return True if the input string starts with \"event \", otherwise false.","lastModifiedDate":"2024-02-01"},{"lineNumber":214,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":215,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean checkIfEvent(String s) {","lastModifiedDate":"2024-01-30"},{"lineNumber":216,"author":{"gitId":"redcolorbicycle"},"content":"        return s.startsWith(\"event \");","lastModifiedDate":"2024-01-30"},{"lineNumber":217,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":218,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":219,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":220,"author":{"gitId":"redcolorbicycle"},"content":"     * Checks if the input string represents a deadline task command.","lastModifiedDate":"2024-02-01"},{"lineNumber":221,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":222,"author":{"gitId":"redcolorbicycle"},"content":"     * @param s The input string to be checked.","lastModifiedDate":"2024-02-01"},{"lineNumber":223,"author":{"gitId":"redcolorbicycle"},"content":"     * @return True if the input string starts with \"deadline \", otherwise false.","lastModifiedDate":"2024-02-01"},{"lineNumber":224,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":225,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean checkIfDeadline(String s) {","lastModifiedDate":"2024-01-30"},{"lineNumber":226,"author":{"gitId":"redcolorbicycle"},"content":"        return s.startsWith(\"deadline \");","lastModifiedDate":"2024-01-30"},{"lineNumber":227,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":228,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":229,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":230,"author":{"gitId":"redcolorbicycle"},"content":"     * Handles the user input command for listing tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":231,"author":{"gitId":"redcolorbicycle"},"content":"     * Prints the list of tasks if available, or a message indicating no tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":232,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":233,"author":{"gitId":"redcolorbicycle"},"content":"     * @param t The task list to be listed.","lastModifiedDate":"2024-02-01"},{"lineNumber":234,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":235,"author":{"gitId":"redcolorbicycle"},"content":"    public String handleList(TaskList t) {","lastModifiedDate":"2024-02-13"},{"lineNumber":236,"author":{"gitId":"redcolorbicycle"},"content":"        if (t.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":237,"author":{"gitId":"redcolorbicycle"},"content":"            return \"You\u0027re a lazy duck, get back on the grind!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":238,"author":{"gitId":"redcolorbicycle"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":239,"author":{"gitId":"redcolorbicycle"},"content":"            return t.iterateout();","lastModifiedDate":"2024-02-13"},{"lineNumber":240,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":241,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":242,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":243,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":244,"author":{"gitId":"redcolorbicycle"},"content":"     * Checks if the input string represents a \"list\" command.","lastModifiedDate":"2024-02-01"},{"lineNumber":245,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":246,"author":{"gitId":"redcolorbicycle"},"content":"     * @param f The input string to be checked.","lastModifiedDate":"2024-02-01"},{"lineNumber":247,"author":{"gitId":"redcolorbicycle"},"content":"     * @return True if the input string is \"list\", otherwise false.","lastModifiedDate":"2024-02-01"},{"lineNumber":248,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":249,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean checkIfList(String f) {","lastModifiedDate":"2024-01-29"},{"lineNumber":250,"author":{"gitId":"redcolorbicycle"},"content":"        return f.equals(\"list\");","lastModifiedDate":"2024-02-01"},{"lineNumber":251,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":252,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":253,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":254,"author":{"gitId":"redcolorbicycle"},"content":"     * Checks if the input string represents a \"feed bread to bearducky\" command.","lastModifiedDate":"2024-02-01"},{"lineNumber":255,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":256,"author":{"gitId":"redcolorbicycle"},"content":"     * @param f The input string to be checked.","lastModifiedDate":"2024-02-01"},{"lineNumber":257,"author":{"gitId":"redcolorbicycle"},"content":"     * @return True if the input string is \"feed bread to bearducky\", otherwise false.","lastModifiedDate":"2024-02-01"},{"lineNumber":258,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":259,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean checkFeeding(String f) {","lastModifiedDate":"2024-01-29"},{"lineNumber":260,"author":{"gitId":"redcolorbicycle"},"content":"        return f.equals(\"feed bread to bearducky\");","lastModifiedDate":"2024-02-01"},{"lineNumber":261,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":262,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":263,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":264,"author":{"gitId":"redcolorbicycle"},"content":"     * Checks if the input string represents a \"bye\" command.","lastModifiedDate":"2024-02-01"},{"lineNumber":265,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":266,"author":{"gitId":"redcolorbicycle"},"content":"     * @param f The input string to be checked.","lastModifiedDate":"2024-02-01"},{"lineNumber":267,"author":{"gitId":"redcolorbicycle"},"content":"     * @return True if the input string is \"bye\", otherwise false.","lastModifiedDate":"2024-02-01"},{"lineNumber":268,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":269,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean checkIfLeave(String f) {","lastModifiedDate":"2024-01-29"},{"lineNumber":270,"author":{"gitId":"redcolorbicycle"},"content":"        return f.equals(\"bye\");","lastModifiedDate":"2024-02-01"},{"lineNumber":271,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":272,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":273,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":274,"author":{"gitId":"redcolorbicycle"},"content":"     * Checks if the input string represents a base command for marking, unmarking, or deleting tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":275,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":276,"author":{"gitId":"redcolorbicycle"},"content":"     * @param f The input string to be checked.","lastModifiedDate":"2024-02-01"},{"lineNumber":277,"author":{"gitId":"redcolorbicycle"},"content":"     * @return True if the input string starts with \"mark \", \"unmark \", or \"delete \", otherwise false.","lastModifiedDate":"2024-02-01"},{"lineNumber":278,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":279,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean checkIfBaseCommand(String f) {","lastModifiedDate":"2024-01-29"},{"lineNumber":280,"author":{"gitId":"redcolorbicycle"},"content":"        return (f.startsWith(\"mark \") || f.startsWith(\"unmark \") || f.startsWith(\"delete \"));","lastModifiedDate":"2024-01-29"},{"lineNumber":281,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":282,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":283,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean checkIfFind(String f) {","lastModifiedDate":"2024-02-13"},{"lineNumber":284,"author":{"gitId":"redcolorbicycle"},"content":"        return (f.startsWith(\"find \"));","lastModifiedDate":"2024-02-13"},{"lineNumber":285,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":286,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":287,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":288,"author":{"gitId":"redcolorbicycle"},"content":"     * Handles the base commands for marking, unmarking, or deleting tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":289,"author":{"gitId":"redcolorbicycle"},"content":"     * Parses the input command, performs the corresponding task operation, and handles exceptions.","lastModifiedDate":"2024-02-01"},{"lineNumber":290,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":291,"author":{"gitId":"redcolorbicycle"},"content":"     * @param commandSplit An array containing the command split into parts.","lastModifiedDate":"2024-02-01"},{"lineNumber":292,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":293,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":294,"author":{"gitId":"redcolorbicycle"},"content":"    public String handleBaseCommand(String[] commandSplit) {","lastModifiedDate":"2024-02-13"},{"lineNumber":295,"author":{"gitId":"redcolorbicycle"},"content":"        String firstWord \u003d commandSplit[0].toLowerCase();","lastModifiedDate":"2024-02-02"},{"lineNumber":296,"author":{"gitId":"redcolorbicycle"},"content":"        assert firstWord.length() \u003c 7: \"Invalid word/I can only mark numbers!\";","lastModifiedDate":"2024-02-19"},{"lineNumber":297,"author":{"gitId":"redcolorbicycle"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":298,"author":{"gitId":"redcolorbicycle"},"content":"            int num \u003d Integer.parseInt(commandSplit[1]);","lastModifiedDate":"2024-02-02"},{"lineNumber":299,"author":{"gitId":"redcolorbicycle"},"content":"            switch (firstWord) {","lastModifiedDate":"2024-02-13"},{"lineNumber":300,"author":{"gitId":"redcolorbicycle"},"content":"                case \"mark\" -\u003e tasklist.mark(num - 1);","lastModifiedDate":"2024-02-13"},{"lineNumber":301,"author":{"gitId":"redcolorbicycle"},"content":"                case \"unmark\" -\u003e tasklist.unmark(num - 1);","lastModifiedDate":"2024-02-13"},{"lineNumber":302,"author":{"gitId":"redcolorbicycle"},"content":"                case \"delete\" -\u003e tasklist.delete(num - 1);","lastModifiedDate":"2024-02-13"},{"lineNumber":303,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":304,"author":{"gitId":"redcolorbicycle"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":305,"author":{"gitId":"redcolorbicycle"},"content":"            return \"[angry quacking] I can only mark numbers!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":306,"author":{"gitId":"redcolorbicycle"},"content":"        } catch (IndexOutOfBoundsException a) {","lastModifiedDate":"2024-01-29"},{"lineNumber":307,"author":{"gitId":"redcolorbicycle"},"content":"            return \"[exasperated quacking] You\u0027re not that busy - numbers from 1 to \" + tasklist.length() +","lastModifiedDate":"2024-02-13"},{"lineNumber":308,"author":{"gitId":"redcolorbicycle"},"content":"                    \" only, please.\";","lastModifiedDate":"2024-02-13"},{"lineNumber":309,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":310,"author":{"gitId":"redcolorbicycle"},"content":"        return \"Done!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":311,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":312,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"redcolorbicycle":312}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":" * Handles loading and saving tasks to a file.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"public class Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"    private File infoStored; // File where tasks are stored","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"    private String filepath; // Path to the file","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"     * Writes the tasks from the task list to the file, else print a statement.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"     * @param tasklist The list of tasks to be written to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"    public void writeToFile(TaskList tasklist) {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"        String filePath \u003d filepath; // Specify the file path","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"            // Iterate through the list of tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"            for (int i \u003d 0; i \u003c tasklist.length(); i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"                Task task \u003d tasklist.getTask(i);","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"                // Write the task\u0027s information to the file","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"                writer.write(task.typeid() + \"~\" + task.markstatus() + \"~\" + task.getDescription() + task.timeprint());","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"                writer.newLine(); // Add a newline character after each task","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"            System.out.println(\"Error implementing changes!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"     * Creates a new directory if it doesn\u0027t exist.","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"    public void makeNewDirectory() {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"        File location \u003d new File(\"./data\");","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"        if (location.mkdirs()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"            System.out.println(\"Successfully made new directory!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"            System.out.println(\"Data file already exists.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"     * Creates a new file if it doesn\u0027t exist.","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"     * @param filepath The path to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"    public void makeNewFile(String filepath) {","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"        File file \u003d new File(filepath);","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"redcolorbicycle"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"redcolorbicycle"},"content":"                // Create the file if it doesn\u0027t exist","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"redcolorbicycle"},"content":"                if (file.createNewFile()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"redcolorbicycle"},"content":"                    System.out.println(\"File successfully created.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"redcolorbicycle"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"redcolorbicycle"},"content":"                // Use a default filepath if the provided one is invalid","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"redcolorbicycle"},"content":"                file \u003d new File(\"./data/tasks.txt\");","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"redcolorbicycle"},"content":"                System.out.println(\"Filepath invalid. Data has been stored to the filepath ./data/tasks.txt\");","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"redcolorbicycle"},"content":"        infoStored \u003d file;","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"redcolorbicycle"},"content":"     * Loads tasks from the file and returns them as a list.","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"redcolorbicycle"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"redcolorbicycle"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"redcolorbicycle"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"redcolorbicycle"},"content":"        if (infoStored.length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"redcolorbicycle"},"content":"            return tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"redcolorbicycle"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"redcolorbicycle"},"content":"            Scanner s \u003d new Scanner(infoStored);","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"redcolorbicycle"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"redcolorbicycle"},"content":"                String nextinput \u003d s.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"redcolorbicycle"},"content":"                Task task \u003d convert(nextinput);","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"redcolorbicycle"},"content":"                tasks.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"redcolorbicycle"},"content":"            return tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"redcolorbicycle"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"redcolorbicycle"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"redcolorbicycle"},"content":"        return tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"redcolorbicycle"},"content":"     * Converts a string representation of a task into a Task object depending on its label.","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"redcolorbicycle"},"content":"     * @param input The string representation of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The Task object.","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"redcolorbicycle"},"content":"    public Task convert(String input) {","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"redcolorbicycle"},"content":"        String[] inputs \u003d input.split(\"~\");","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"redcolorbicycle"},"content":"        String type \u003d inputs[0];","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"redcolorbicycle"},"content":"        boolean marked \u003d inputs[1].equals(\"marked\");","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"redcolorbicycle"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"redcolorbicycle"},"content":"        switch (type) {","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"redcolorbicycle"},"content":"            case \"T\":","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"redcolorbicycle"},"content":"                Task task \u003d new ToDo(inputs[2]);","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"redcolorbicycle"},"content":"                if (marked) {","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"redcolorbicycle"},"content":"                    task.mark();","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"redcolorbicycle"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"redcolorbicycle"},"content":"                return task;","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"redcolorbicycle"},"content":"            case \"E\":","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"redcolorbicycle"},"content":"                LocalDate start \u003d LocalDate.parse(inputs[3], dateFormatter);","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"redcolorbicycle"},"content":"                LocalDate end \u003d LocalDate.parse(inputs[4], dateFormatter);","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"redcolorbicycle"},"content":"                Task task2 \u003d new Event(inputs[2], start, end);","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"redcolorbicycle"},"content":"                if (marked) {","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"redcolorbicycle"},"content":"                    task2.mark();","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"redcolorbicycle"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"redcolorbicycle"},"content":"                return task2;","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"redcolorbicycle"},"content":"            case \"D\":","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"redcolorbicycle"},"content":"                LocalDate due \u003d LocalDate.parse(inputs[3], dateFormatter);","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"redcolorbicycle"},"content":"                Task task3 \u003d new Deadline(inputs[2], due);","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"redcolorbicycle"},"content":"                if (marked) {","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"redcolorbicycle"},"content":"                    task3.mark();","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"redcolorbicycle"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"redcolorbicycle"},"content":"                return task3;","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"redcolorbicycle"},"content":"        return new Task(\"Error\");","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":136,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"redcolorbicycle"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"redcolorbicycle"},"content":"     * @param filePath The path to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"redcolorbicycle"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"redcolorbicycle"},"content":"        filepath \u003d filePath;","lastModifiedDate":"2024-01-30"},{"lineNumber":144,"author":{"gitId":"redcolorbicycle"},"content":"        makeNewDirectory(); // Creates a new data file in the same folder if not already existing","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"redcolorbicycle"},"content":"        makeNewFile(filePath); // Creates a new file in filepath if not already existing","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":147,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"redcolorbicycle":147}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":" * Represents a task.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"    protected String description; // Description of the task","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"    protected boolean isDone; // Indicates if the task is done or not","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"     * Constructs a task with the given description.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"        this.isDone \u003d false; // By default, tasks are not done","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The status icon (\u0027X\u0027 if the task is done, \u0027 \u0027 otherwise).","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"        return (isDone ? \"X\" : \" \"); // \u0027X\u0027 if the task is done, \u0027 \u0027 otherwise","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"        return (\"[\" + this.getStatusIcon() + \"] \" + this.description); // [X] Description if task is done, [ ] Description otherwise","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"    public void mark() {","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"     * Marks the task as undone.","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"    public void unmark() {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"        return description;","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns the status of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The status of the task (\"marked\" if done, \"unmarked\" if not done).","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"redcolorbicycle"},"content":"    public String markstatus() {","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"redcolorbicycle"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"redcolorbicycle"},"content":"            return \"marked\";","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"redcolorbicycle"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"redcolorbicycle"},"content":"            return \"unmarked\";","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns an empty string.","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"redcolorbicycle"},"content":"     * @return An empty string.","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"redcolorbicycle"},"content":"    public String timeprint() {","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"redcolorbicycle"},"content":"        return \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":83,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":84,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns the type id of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The type id of the task (\"T\" for regular task).","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"redcolorbicycle"},"content":"    public String typeid() {","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"redcolorbicycle"},"content":"        return \"T\";","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":92,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"redcolorbicycle":92}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"public class TaskList {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"    private List\u003cTask\u003e tasklist; // List to store tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"     * Constructs a TaskList object with the given list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"     * @param tasks The list of tasks to initialize the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"        tasklist \u003d tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"     * @param n The index of the task to retrieve.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"    public Task getTask(int n) {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"        return tasklist.get(n);","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"     * @param t The task to add.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"    public void add(Task t) {","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"        tasklist.add(t);","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"     * Marks the task at the specified index as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"     * @param num The index of the task to mark as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"    public void mark(int num) {","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"        tasklist.get(num).mark();","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"     * Unmarks the task at the specified index.","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"     * @param num The index of the task to unmark.","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"    public void unmark(int num) {","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"        tasklist.get(num).unmark();","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"     * Deletes the task at the specified index.","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"     * @param num The index of the task to delete.","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"redcolorbicycle"},"content":"    public void delete(int num) {","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"redcolorbicycle"},"content":"        tasklist.remove(num);","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"redcolorbicycle"},"content":"     * @return The number of tasks in the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"redcolorbicycle"},"content":"    public int length() {","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"redcolorbicycle"},"content":"        return tasklist.size();","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"redcolorbicycle"},"content":"     * Iterates through the task list and prints each task along with its index.","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"redcolorbicycle"},"content":"    public String iterateout() {","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"redcolorbicycle"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"redcolorbicycle"},"content":"        for (int i \u003d 0; i \u003c tasklist.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"redcolorbicycle"},"content":"            output \u003d output.concat((i + 1) + \". \" + tasklist.get(i));","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"redcolorbicycle"},"content":"            output \u003d output.concat(\"\\n\");","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"redcolorbicycle"},"content":"        return output;","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"redcolorbicycle":86}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":" * Represents a ToDo task, which is a subclass of Task.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"    protected String by;","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"     * Constructs a ToDo object with the specified description.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"     * @return A string representation of the ToDo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"redcolorbicycle":28}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":" * Represents the user interface for interacting with the Duke application.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"public class Ui {","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"     * Constructs a Ui object.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"    public Ui () {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"     * Displays an error message for invalid file path during loading.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"    public String showLoadingError() {","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"        return \"Invalid filepath.\";","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"     * Displays a greeting message when the application starts.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"    public String greet() {","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"        return \"Quack! My name is Bearducky. I am a duck with a bear hat and a baseball bat.\" +","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"                \"How may I help you today?\";","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"     * Displays a happy quacking message.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"    public String happy() {","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"        return \"[happy quacking]\";","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"     * Displays a goodbye message when the user exits the application.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"    public String goodbye() {","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"        return \"[sad quacking] Can I have some bread before you go?\";","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"     * Displays an instruction message for the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"    public String instructionMessage() {","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"        return \"[quack] I don\u0027t understand that command.\\n To add a task\" +","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"                \" please specify with the task type - \\\"todo\\\", \\\"deadline\\\" or \\\"event\\\", space, task\" +","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"                \" name.\\n For deadlines, please add a /by followed by the deadline (eg. /by 2/12/2019 1800) . For events, please add a / followed by the start time,\\n\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"                \" then another \\\"/\\\" followed by the end time.\\n\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"                \" To mark or unmark the nth task on the list, enter \\\"mark n\\\" or \\\"unmark n\\\" where n is the number on the list.\\n\" +","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"                \" To delete the nth task on the list, \\\"delete n\\\" where n is the number on the list.\\n\" +","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"                \" If you want to list your procrastinations, please enter the word \\\"list\\\".\" +","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"                \" Type \\\"bye\\\" to leave. \\n You can type \\\"feed bread to bearducky\\\"?\" +","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"                \" [Hopeful quacking]\";","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"redcolorbicycle":58}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" maxHeight\u003d\"1.7976931348623157E308\"/\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"redcolorbicycle":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"      \u003c/content\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"redcolorbicycle":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"    public void testcase(){","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"        // normal division results in an integer answer 2","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"        assertEquals(null, new Parser(new Scanner(System.in), new TaskList(new ArrayList\u003cTask\u003e()),new Storage(\"./data/tasks.txt\")).DateConvert(\"hi\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"redcolorbicycle":19}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"public class StorageTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"    public void testcase(){","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"        // normal division results in an integer answer 2","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"        assertEquals(new Task(\"Error\").getDescription(), new Storage(\"./data/tasks.txt\").convert(\"hi~there\").getDescription());","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"redcolorbicycle":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"test","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"todo cs2103","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"deadline cs2103 /by tonight","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"event cs2103 /tonight 8pm /tonight 11pm","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"listi","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"mark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"mark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"unmark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"unmark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"feed bread to bearducky","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"bye","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"redcolorbicycle":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"del ACTUAL.TXT","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"redcolorbicycle":1,"-":20}}]
