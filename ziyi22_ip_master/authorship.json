[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"# judy.Duke project template","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"3. After that, locate the `src/main/java/judy.Duke.java` file, right-click it, and choose `Run judy.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ziyi22":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"    mainClass.set(\"judy.Judy\")","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"    archiveFileName \u003d \"Judy.jar\"","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ziyi22":2,"-":41}},{"path":"judy.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":" T | 0 | haha","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":" D | 1 | assignment 1 | May 05 2023 11:59 PM","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":" T | 1 | ziyi","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":" E | 0 | formal night | Dec 12 2024 06:00 PM - Dec 12 2024 10:00 PM","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":" T | 0 | grocery","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":" T | 0 | read book","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":" T | 0 | return book","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":" T | 0 | borrow book","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"ziyi22":8}},{"path":"src/main/java/judy/Judy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import judy.commands.Command;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import judy.commands.GreetCommand;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import judy.exceptions.DukeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"import judy.parser.Parser;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"import judy.storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"import judy.task.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"import judy.ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"public class Judy {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"    private final Ui ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"    private static final String FILE_PATH \u003d \"judy.txt\";","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"    public Judy(String filePath) {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"        if (storage.isFileExists()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"            this.taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"            storage.createNewFile();","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"            storage.save(taskList.getTaskList());","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"    public void run() {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"        ui.showLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"        new GreetCommand().execute(storage, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"        ui.showLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"            try {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"                String input \u003d ui.readCommand();","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"                ui.showLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"                Parser parser \u003d new Parser(input, taskList);","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"                Command c \u003d parser.parse();","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"                c.execute(storage, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"            } finally {","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"                ui.showLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"ziyi22"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"ziyi22"},"content":"        new Judy(FILE_PATH).run();","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ziyi22":53}},{"path":"src/main/java/judy/commands/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"import judy.task.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import judy.task.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import judy.storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import judy.ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":" * To add a {@link Task} to the {@link TaskList}.","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"    public static final String TODO \u003d \"todo\";","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"    public static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"    public static final String EVENT \u003d \"event\";","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"    private final Task task; // The task to be added","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"    private final TaskList taskList;// The list to which the task will be added","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"     * Constructs an Add Task Command with the specified task and task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"     * @param task      The task to be added.","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"     * @param taskList  The list to which the task will be added.","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"    public AddTaskCommand(Task task, TaskList taskList) {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"     * Executes the command by adding the task to the task list,","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"     * display add task message and update the storage.","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"     * @param storage The storage component responsible for saving the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"     * @param ui The user interface component for displaying messages to the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"    public void execute(Storage storage, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"        taskList.add(this.task);","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"        ui.showAddTask(this.task, this.taskList.getSize());","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"        storage.save(taskList.getTaskList());","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"     * Indicates whether this command represents an exit command.","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"     * In this case, always returns false as adding a task does not trigger an exit.","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"     * @return Always returns false.","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"ziyi22"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"ziyi22"},"content":"        return false;","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ziyi22":52}},{"path":"src/main/java/judy/commands/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"public class ClearCommand {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ziyi22":4}},{"path":"src/main/java/judy/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import judy.storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import judy.ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":" * This is an abstract class which have a generic subclasses","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":" * to execute specific command and provide information about whether","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":" * the command signals an exit from the application.","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"     * Executes the specific action associated with the command.","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"     * @param storage The storage component responsible for managing data storage.","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"     * @param ui      The user interface component for interacting with the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"    public abstract void execute(Storage storage, Ui ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"     * Indicates whether the execution of this command signals an exit from the application.","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"     * @return True if the command represents an exit, false otherwise.","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ziyi22":28}},{"path":"src/main/java/judy/commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"import judy.task.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import judy.task.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import judy.storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import judy.ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":" * To delete a specific {@link Task} from the {@link TaskList}.","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"    private final Task task;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"     * Constructs a DeleteTaskCommand with the specified task ID and task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"     * @param taskId   The ID of the task to be deleted.","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"     * @param taskList The list from which the task will be deleted.","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"    public DeleteTaskCommand(int taskId, TaskList taskList) {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"        this.task \u003d taskList.get(taskId);","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"     * Executes the command by removing the task from the task list, displaying a deletion message,","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"     * and saving the updated task list to the storage.","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"     * @param storage The storage component responsible for saving the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"     * @param ui      The user interface component for displaying messages to the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"    public void execute(Storage storage, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"        this.taskList.remove(this.task);","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"        storage.save(this.taskList.getTaskList());","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"        ui.showDeleteTask(this.task, this.taskList.getSize());","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"     * Indicates whether this command represents an exit command.","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"     * In this case, always returns false as deleting a task does not trigger an exit.","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"     * @return Always returns false.","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"ziyi22"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"ziyi22"},"content":"        return false;","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ziyi22":51}},{"path":"src/main/java/judy/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import judy.storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import judy.ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":" * The ExitCommand class represents a command to close and terminate the application.","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"     * Executes the command by displaying a goodbye message.","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"     * @param storage The storage component (not used in this implementation).","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"     * @param ui      The user interface component for displaying messages to the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"    public void execute(Storage storage, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"        ui.showGoodbye();","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"     * Indicates whether this command represents an exit command.","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"     * In this case, always returns true as the purpose of the command is to exit the application.","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"     * @return Always returns true.","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"    @Override public boolean isExit() {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"        return true;","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ziyi22":32}},{"path":"src/main/java/judy/commands/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.commands;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import judy.storage.Storage;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import judy.task.Task;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import judy.task.TaskList;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"import judy.ui.Ui;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":" * The FindCommand class represents a command to find tasks in the task list that match a given keyword.","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"public class FindTaskCommand extends Command{","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"    private final String keyword;","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"     * Creates a FindCommand with the specified keyword.","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"    public FindTaskCommand(TaskList taskList, String keyword) {","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"     * Finds tasks in the task list that contain the specified keyword.","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"     * @return A list of tasks containing the keyword.","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"    private TaskList findMatchingTasks() {","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"        for (Task task : taskList.getTaskList()) {","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"            if (task.containsKeyword(keyword)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"        return matchingTasks;","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"     * Executes the find command to search for tasks containing the specified keyword.","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"     * @param storage The storage for saving tasks.","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"ziyi22"},"content":"    public void execute(Storage storage, Ui ui) {","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"ziyi22"},"content":"        TaskList matchingTasks \u003d findMatchingTasks();","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"ziyi22"},"content":"        ui.showFindTasks(matchingTasks);","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"ziyi22"},"content":"     * Indicates whether this command represents an exit command.","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"ziyi22"},"content":"     * @return Always returns false as finding tasks does not trigger an exit.","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"ziyi22"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"ziyi22"},"content":"        return false;","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"ziyi22":63}},{"path":"src/main/java/judy/commands/GreetCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import judy.storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import judy.ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":" * The GreetCommand class represents a command to display a welcome message.","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"public class GreetCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"     * Executes the command by displaying a welcome message in the user interface.","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"     * @param storage The storage component (not used in this implementation).","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"     * @param ui      The user interface component for displaying messages to the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"    public void execute(Storage storage, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"     * Indicates whether this command represents an exit command.","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"     * In this case, always returns false as displaying a welcome message does not trigger an exit.","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"     * @return Always returns false.","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"        return false;","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ziyi22":32}},{"path":"src/main/java/judy/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import judy.storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import judy.ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":" * The HelpCommand class represents a command to display available commands in the user interface.","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"public class HelpCommand extends Command{","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"     * Executes the command by displaying help information in the user interface.","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"     * @param storage The storage component (not used in this implementation).","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"     * @param ui      The user interface component for displaying messages to the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"    public void execute(Storage storage, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"        ui.showHelp();","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"     * Indicates whether this command represents an exit command.","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"     * In this case, always returns false as displaying help information does not trigger an exit.","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"     * @return Always returns false.","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"        return false;","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ziyi22":33}},{"path":"src/main/java/judy/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import judy.storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import judy.ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":" * The InvalidCommand class represents a command to handle invalid or unrecognized user commands.","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":" * It displays an error message in the user interface.","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"    private final String errorMessage; // The error message to be displayed","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"     * Constructs an InvalidCommand with a default error message.","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"     * The message is to be displayed and inform user that the command is not recognized.","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"    public InvalidCommand() {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"        this.errorMessage \u003d \" Sorry! I don\u0027t know what that means :c \";","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"     * Executes the command by displaying the error message in the user interface.","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"     * @param storage The storage component (not used in this implementation).","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"     * @param ui      The user interface component for displaying messages to the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"    public void execute(Storage storage, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"        ui.showError(errorMessage);","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"     * Indicates whether this command represents an exit command.","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"     * In this case, always returns false as handling an invalid command does not trigger an exit.","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"     * @return Always returns false.","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"        return false;","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ziyi22":43}},{"path":"src/main/java/judy/commands/ListTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import judy.storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import judy.task.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import judy.ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":" * The ListTaskCommand class represents a command to display the list of tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"    private final TaskList taskList; // The task list to be displayed","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"     * Constructs a ListTaskCommand with the specified task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"     * @param taskList The task list to be displayed.","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"    public ListTaskCommand(TaskList taskList) {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"     * Executes the command by displaying the list of tasks in the user interface.","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"     * @param storage The storage component (not used in this implementation).","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"     * @param ui      The user interface component for displaying messages to the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"    public void execute(Storage storage, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"        ui.showTaskList(this.taskList);","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"     * Indicates whether this command represents an exit command.","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"     * In this case, always returns false as adding a task does not trigger an exit.","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"     * @return Always returns false.","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"        return false;","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ziyi22":44}},{"path":"src/main/java/judy/commands/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"import judy.task.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import judy.task.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import judy.storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import judy.ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":" * The MarkTaskCommand class represents a command to mark","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":" * a specific {@link Task} as done in the {@link TaskList}.","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"    private final Task task;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"     * Constructs a MarkTaskCommand with the specified task ID and task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"     * @param taskId   The ID of the task to be marked as done.","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"     * @param taskList The list containing the task to be marked.","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"    public MarkTaskCommand(int taskId, TaskList taskList) {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"        this.task \u003d taskList.get(taskId);","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"     * Executes the command by marking the specified task as done, updating task list to the storage,","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"     * and displaying a confirmation message in the user interface.","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"     * @param storage The storage component responsible for saving the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"     * @param ui      The user interface component for displaying messages to the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"    public void execute(Storage storage, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"        this.task.markAsDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"        storage.save(this.taskList.getTaskList());","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"        ui.showMarkTask(this.task);","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"     * Indicates whether this command represents an exit command.","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"     * In this case, always returns false as marking a task as done does not trigger an exit.","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"     * @return Always returns false.","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"ziyi22"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"ziyi22"},"content":"        return false;","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ziyi22":52}},{"path":"src/main/java/judy/commands/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"import judy.task.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import judy.task.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import judy.storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import judy.ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":" * The UnmarkTaskCommand class represents a command to unmark","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":" * a specific {@link Task} as done in the {@link TaskList}.","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"    private final Task task;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"     * Constructs an UnmarkTaskCommand with the specified task ID and task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"     * @param taskId   The ID of the task to be unmarked.","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"     * @param taskList The list containing the task to be unmarked.","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"    public UnmarkTaskCommand(int taskId, TaskList taskList) {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"        this.task \u003d taskList.get(taskId);","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"     * Executes the command by marking the specified task as undone, updating the storage,","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"     * and displaying a confirmation message.","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"     * @param storage The storage component responsible for saving the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"     * @param ui      The user interface component for displaying messages to the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"    public void execute(Storage storage, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"        this.task.markAsUndone();","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"        storage.save(this.taskList.getTaskList());","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"        ui.showUnmarkTask(this.task);","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"     * Indicates whether this command represents an exit command.","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"     * In this case, always returns false as unmarking a task does not trigger an exit.","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"     * @return Always returns false.","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"ziyi22"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"ziyi22"},"content":"        return false;","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ziyi22":52}},{"path":"src/main/java/judy/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.exceptions;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":" * A custom exception class for handling exceptions specific to the Duke application.","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"     * Constructs a DukeException with the specified error message.","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"     * @param message The error message describing the exceptional condition.","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"        super(message);","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"ziyi22":16}},{"path":"src/main/java/judy/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.parser;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import judy.exceptions.DukeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import judy.commands.Command;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import judy.task.*;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"import judy.commands.*;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":" * The Parser class is responsible for parsing user input and converting it into corresponding Command objects.","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"public class Parser {","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"    private final String userInput;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"     * Constructs a Parser with the specified user input and task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"     * @param userInput The user input to be parsed.","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"     * @param taskList  The task list on which the commands operate.","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"    public Parser(String userInput, TaskList taskList) {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"     * Parses the user input and returns the corresponding Command object.","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"     * @return The Command object representing the parsed user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"     * @throws DukeException If an error occurs during the parsing process.","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"    public Command parse() throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"        String[] commandParts \u003d userInput.split(\" \",2);","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"        Command command;","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"        switch (commandParts[0]) {","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"            case ListTaskCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"                command \u003d new ListTaskCommand(taskList);","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"            case MarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"                command \u003d handleMark(commandParts);","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"            case UnmarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"ziyi22"},"content":"                command \u003d handleUnmark(commandParts);","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"ziyi22"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"ziyi22"},"content":"            case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"ziyi22"},"content":"                return handleDelete(commandParts);","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"ziyi22"},"content":"            case AddTaskCommand.TODO:","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"ziyi22"},"content":"                Task todo \u003d handleTodo(commandParts);","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"ziyi22"},"content":"                command \u003d new AddTaskCommand(todo, this.taskList);","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"ziyi22"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"ziyi22"},"content":"            case AddTaskCommand.DEADLINE:","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"ziyi22"},"content":"                Task deadline \u003d handleDeadline(commandParts);","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"ziyi22"},"content":"                command \u003d new AddTaskCommand(deadline, this.taskList);","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"ziyi22"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"ziyi22"},"content":"            case AddTaskCommand.EVENT:","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"ziyi22"},"content":"                Task event \u003d handleEvent(commandParts);","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"ziyi22"},"content":"                command \u003d new AddTaskCommand(event, this.taskList);","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"ziyi22"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"ziyi22"},"content":"            case FindTaskCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"ziyi22"},"content":"                command \u003d handleFind(commandParts);","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"ziyi22"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"ziyi22"},"content":"            case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"ziyi22"},"content":"                command \u003d new ExitCommand();","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"ziyi22"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"ziyi22"},"content":"            case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"ziyi22"},"content":"                command \u003d new HelpCommand();","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"ziyi22"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"ziyi22"},"content":"            default:","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"ziyi22"},"content":"                command \u003d new InvalidCommand();","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"ziyi22"},"content":"        return command;","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"ziyi22"},"content":"     * Parses a mark task input.","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"ziyi22"},"content":"     * @param commandParts The parts of the user input after splitting by space.","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"ziyi22"},"content":"     * @return a MarkTaskCommand based on user\u0027s input.","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"ziyi22"},"content":"     * @throws DukeException if user entered empty or invalid index.","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"ziyi22"},"content":"    private Command handleMark(String[] commandParts) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"ziyi22"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"ziyi22"},"content":"            int taskId \u003d Integer.parseInt(commandParts[1]) - 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"ziyi22"},"content":"            try {","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"ziyi22"},"content":"                return new MarkTaskCommand(taskId, this.taskList);","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"ziyi22"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"ziyi22"},"content":"                throw new DukeException(\" Invalid task index. Type \u0027list\u0027 to list out your tasks. \");","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"ziyi22"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"ziyi22"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"ziyi22"},"content":"            throw new DukeException(\" The index you\u0027ve input is not an integer. \");","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"ziyi22"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"ziyi22"},"content":"            throw new DukeException(\" The index of task cannot be empty.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"ziyi22"},"content":"     * Parses a unmark task input","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"ziyi22"},"content":"     * @param commandParts The parts of the user input after splitting by space.","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"ziyi22"},"content":"     * @return a UnmarkTaskCommand based on user\u0027s input.","lastModifiedDate":"2024-02-19"},{"lineNumber":106,"author":{"gitId":"ziyi22"},"content":"     * @throws DukeException if user entered empty or invalid index.","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":108,"author":{"gitId":"ziyi22"},"content":"    private Command handleUnmark(String[] commandParts) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"ziyi22"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":110,"author":{"gitId":"ziyi22"},"content":"            int taskId \u003d Integer.parseInt(commandParts[1]) - 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"ziyi22"},"content":"            try {","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"ziyi22"},"content":"                return new UnmarkTaskCommand(taskId, this.taskList);","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"ziyi22"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"ziyi22"},"content":"                throw new DukeException(\" Invalid task index. Type \u0027list\u0027 to list out your tasks. \");","lastModifiedDate":"2024-02-07"},{"lineNumber":115,"author":{"gitId":"ziyi22"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":116,"author":{"gitId":"ziyi22"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":117,"author":{"gitId":"ziyi22"},"content":"            throw new DukeException(\" The task index you\u0027ve input is not an integer. \");","lastModifiedDate":"2024-02-07"},{"lineNumber":118,"author":{"gitId":"ziyi22"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":119,"author":{"gitId":"ziyi22"},"content":"            throw new DukeException(\" The index of task cannot be empty.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":120,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":121,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":122,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":123,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":124,"author":{"gitId":"ziyi22"},"content":"     * Parses a delete task input","lastModifiedDate":"2024-02-19"},{"lineNumber":125,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":126,"author":{"gitId":"ziyi22"},"content":"     * @param commandParts The parts of the user input after splitting by space.","lastModifiedDate":"2024-02-19"},{"lineNumber":127,"author":{"gitId":"ziyi22"},"content":"     * @return a DeleteCommand based on user\u0027s input.","lastModifiedDate":"2024-02-19"},{"lineNumber":128,"author":{"gitId":"ziyi22"},"content":"     * @throws DukeException if user entered empty or invalid index.","lastModifiedDate":"2024-02-19"},{"lineNumber":129,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":130,"author":{"gitId":"ziyi22"},"content":"    private Command handleDelete(String[] commandParts) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":131,"author":{"gitId":"ziyi22"},"content":"            try {","lastModifiedDate":"2024-02-07"},{"lineNumber":132,"author":{"gitId":"ziyi22"},"content":"                int taskIndex \u003d Integer.parseInt(commandParts[1].trim()) - 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":133,"author":{"gitId":"ziyi22"},"content":"                try {","lastModifiedDate":"2024-02-07"},{"lineNumber":134,"author":{"gitId":"ziyi22"},"content":"                    return new DeleteTaskCommand(taskIndex, taskList);","lastModifiedDate":"2024-02-07"},{"lineNumber":135,"author":{"gitId":"ziyi22"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":136,"author":{"gitId":"ziyi22"},"content":"                    throw new DukeException(\" Invalid task index. Type \u0027list\u0027 to list out your tasks. \");","lastModifiedDate":"2024-02-07"},{"lineNumber":137,"author":{"gitId":"ziyi22"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":138,"author":{"gitId":"ziyi22"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":139,"author":{"gitId":"ziyi22"},"content":"                throw new DukeException(\" The index of task cannot be empty. \");","lastModifiedDate":"2024-02-07"},{"lineNumber":140,"author":{"gitId":"ziyi22"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":141,"author":{"gitId":"ziyi22"},"content":"                throw new DukeException(\" The task index you\u0027ve input is not an integer. \");","lastModifiedDate":"2024-02-07"},{"lineNumber":142,"author":{"gitId":"ziyi22"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":143,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":144,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":145,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":146,"author":{"gitId":"ziyi22"},"content":"     * Parses a todo input.","lastModifiedDate":"2024-02-19"},{"lineNumber":147,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":148,"author":{"gitId":"ziyi22"},"content":"     * @return a Todo based on user\u0027s input.","lastModifiedDate":"2024-02-19"},{"lineNumber":149,"author":{"gitId":"ziyi22"},"content":"     * @throws DukeException if user left the description empty.","lastModifiedDate":"2024-02-19"},{"lineNumber":150,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":151,"author":{"gitId":"ziyi22"},"content":"    private static Todo handleTodo(String[] todo) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":152,"author":{"gitId":"ziyi22"},"content":"        if(todo.length !\u003d 2 || todo[1].isEmpty()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":153,"author":{"gitId":"ziyi22"},"content":"            throw new DukeException(\" The description of a todo cannot be empty :c \\n\" +","lastModifiedDate":"2024-02-19"},{"lineNumber":154,"author":{"gitId":"ziyi22"},"content":"                    \" (Eg format: todo \u003cDescription\u003e )\");","lastModifiedDate":"2024-02-07"},{"lineNumber":155,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":156,"author":{"gitId":"ziyi22"},"content":"        return new Todo(todo[1]);","lastModifiedDate":"2024-02-07"},{"lineNumber":157,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":158,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":159,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":160,"author":{"gitId":"ziyi22"},"content":"     * Parses a deadline input.","lastModifiedDate":"2024-02-19"},{"lineNumber":161,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":162,"author":{"gitId":"ziyi22"},"content":"     * @return a Deadline based on user\u0027s input.","lastModifiedDate":"2024-02-19"},{"lineNumber":163,"author":{"gitId":"ziyi22"},"content":"     * @throws DukeException if user left the description empty or entered invalid format.","lastModifiedDate":"2024-02-19"},{"lineNumber":164,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":165,"author":{"gitId":"ziyi22"},"content":"    private static Deadline handleDeadline(String[] deadline) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":166,"author":{"gitId":"ziyi22"},"content":"        if (deadline.length !\u003d 2 || deadline[1].isEmpty()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":167,"author":{"gitId":"ziyi22"},"content":"            throw new DukeException(\" The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":168,"author":{"gitId":"ziyi22"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":169,"author":{"gitId":"ziyi22"},"content":"            String[] parts \u003d deadline[1].split(\"/by \", 2);","lastModifiedDate":"2024-02-07"},{"lineNumber":170,"author":{"gitId":"ziyi22"},"content":"            if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-07"},{"lineNumber":171,"author":{"gitId":"ziyi22"},"content":"                String taskDescription \u003d parts[0].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":172,"author":{"gitId":"ziyi22"},"content":"                String by \u003d parts[1].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":173,"author":{"gitId":"ziyi22"},"content":"                LocalDateTime byDateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":174,"author":{"gitId":"ziyi22"},"content":"                try {","lastModifiedDate":"2024-02-07"},{"lineNumber":175,"author":{"gitId":"ziyi22"},"content":"                    DateTimeFormatter pattern \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-07"},{"lineNumber":176,"author":{"gitId":"ziyi22"},"content":"                    byDateTime \u003d LocalDateTime.parse(by, pattern);","lastModifiedDate":"2024-02-07"},{"lineNumber":177,"author":{"gitId":"ziyi22"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":178,"author":{"gitId":"ziyi22"},"content":"                    throw new DukeException(\" Invalid date format! Please use yyyy-MM-dd HHmm.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":179,"author":{"gitId":"ziyi22"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":180,"author":{"gitId":"ziyi22"},"content":"                return new Deadline(taskDescription, byDateTime);","lastModifiedDate":"2024-02-07"},{"lineNumber":181,"author":{"gitId":"ziyi22"},"content":"            } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":182,"author":{"gitId":"ziyi22"},"content":"                throw new DukeException(\" Invalid format :c \\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":183,"author":{"gitId":"ziyi22"},"content":"                        \" (Eg format: deadline \u003cDescription\u003e /by yyyy-MM-dd HHmm)\");","lastModifiedDate":"2024-02-19"},{"lineNumber":184,"author":{"gitId":"ziyi22"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":185,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":186,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":187,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":188,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":189,"author":{"gitId":"ziyi22"},"content":"     * Parses an event input.","lastModifiedDate":"2024-02-19"},{"lineNumber":190,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":191,"author":{"gitId":"ziyi22"},"content":"     * @return an Event based on user\u0027s input.","lastModifiedDate":"2024-02-19"},{"lineNumber":192,"author":{"gitId":"ziyi22"},"content":"     * @throws DukeException if user left the description empty or entered invalid format.","lastModifiedDate":"2024-02-19"},{"lineNumber":193,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":194,"author":{"gitId":"ziyi22"},"content":"    private static Event handleEvent(String[] event) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":195,"author":{"gitId":"ziyi22"},"content":"        if (event.length !\u003d 2 || event[1].isEmpty()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":196,"author":{"gitId":"ziyi22"},"content":"            throw new DukeException(\" The description of an event cannot be empty.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":197,"author":{"gitId":"ziyi22"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":198,"author":{"gitId":"ziyi22"},"content":"            String[] eventParts \u003d event[1].split(\"/from \", 2);","lastModifiedDate":"2024-02-07"},{"lineNumber":199,"author":{"gitId":"ziyi22"},"content":"            if (eventParts.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-07"},{"lineNumber":200,"author":{"gitId":"ziyi22"},"content":"                String taskDescription \u003d eventParts[0].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":201,"author":{"gitId":"ziyi22"},"content":"                String[] eventDetails \u003d eventParts[1].split(\"/to \");","lastModifiedDate":"2024-02-07"},{"lineNumber":202,"author":{"gitId":"ziyi22"},"content":"                if (eventDetails.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-07"},{"lineNumber":203,"author":{"gitId":"ziyi22"},"content":"                    String from \u003d eventDetails[0].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":204,"author":{"gitId":"ziyi22"},"content":"                    String to \u003d eventDetails[1].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":205,"author":{"gitId":"ziyi22"},"content":"                    LocalDateTime fromDateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":206,"author":{"gitId":"ziyi22"},"content":"                    LocalDateTime toDateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":207,"author":{"gitId":"ziyi22"},"content":"                    try {","lastModifiedDate":"2024-02-07"},{"lineNumber":208,"author":{"gitId":"ziyi22"},"content":"                        DateTimeFormatter pattern \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-07"},{"lineNumber":209,"author":{"gitId":"ziyi22"},"content":"                        fromDateTime \u003d LocalDateTime.parse(from, pattern);","lastModifiedDate":"2024-02-07"},{"lineNumber":210,"author":{"gitId":"ziyi22"},"content":"                        toDateTime \u003d LocalDateTime.parse(to, pattern);","lastModifiedDate":"2024-02-07"},{"lineNumber":211,"author":{"gitId":"ziyi22"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":212,"author":{"gitId":"ziyi22"},"content":"                        throw new DukeException(\" Invalid date/time format! Please use yyyy-MM-dd HHmm. \");","lastModifiedDate":"2024-02-07"},{"lineNumber":213,"author":{"gitId":"ziyi22"},"content":"                    }","lastModifiedDate":"2024-02-07"},{"lineNumber":214,"author":{"gitId":"ziyi22"},"content":"                    return new Event(taskDescription, fromDateTime, toDateTime);","lastModifiedDate":"2024-02-07"},{"lineNumber":215,"author":{"gitId":"ziyi22"},"content":"                } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":216,"author":{"gitId":"ziyi22"},"content":"                    throw new DukeException(\" Oops! Invalid format :c \\n \" +","lastModifiedDate":"2024-02-07"},{"lineNumber":217,"author":{"gitId":"ziyi22"},"content":"                            \"(Try this: event \u003cdescription\u003e /from yyyy-MM-dd HHmm /to yyyy-MM-dd HHmm)\");","lastModifiedDate":"2024-02-07"},{"lineNumber":218,"author":{"gitId":"ziyi22"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":219,"author":{"gitId":"ziyi22"},"content":"            } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":220,"author":{"gitId":"ziyi22"},"content":"                throw new DukeException(\" Oops! Invalid format :c \\n \" +","lastModifiedDate":"2024-02-07"},{"lineNumber":221,"author":{"gitId":"ziyi22"},"content":"                        \" (Try this: event \u003cdescription\u003e /from yyyy-MM-dd HHmm /to yyyy-MM-dd HHmm)\");","lastModifiedDate":"2024-02-07"},{"lineNumber":222,"author":{"gitId":"ziyi22"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":223,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":224,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":225,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":226,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":227,"author":{"gitId":"ziyi22"},"content":"     * Parses a find task input.","lastModifiedDate":"2024-02-20"},{"lineNumber":228,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":229,"author":{"gitId":"ziyi22"},"content":"     * @return a FindTaskCommand based on user\u0027s input.","lastModifiedDate":"2024-02-20"},{"lineNumber":230,"author":{"gitId":"ziyi22"},"content":"     * @throws DukeException if user left the description empty.","lastModifiedDate":"2024-02-20"},{"lineNumber":231,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":232,"author":{"gitId":"ziyi22"},"content":"    private FindTaskCommand handleFind(String[] input) throws DukeException {","lastModifiedDate":"2024-02-20"},{"lineNumber":233,"author":{"gitId":"ziyi22"},"content":"        if (input.length !\u003d 2 || input[1].isEmpty()) {","lastModifiedDate":"2024-02-20"},{"lineNumber":234,"author":{"gitId":"ziyi22"},"content":"            throw new DukeException(\"The description of find cannot be empty.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":235,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":236,"author":{"gitId":"ziyi22"},"content":"        return new FindTaskCommand(this.taskList, input[1]);","lastModifiedDate":"2024-02-20"},{"lineNumber":237,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":238,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ziyi22":238}},{"path":"src/main/java/judy/storage/Decoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import judy.task.Deadline;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import judy.task.Event;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import judy.task.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"import judy.task.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"import judy.task.Todo;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":" * The Decoder class is to decodes the storage into TaskList objects.","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"public class Decoder {","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"     * Decodes an encoded list of tasks and returns a TaskList object.","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"     * @param encodedTasks The encoded string containing task information.","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"     * @return The TaskList object containing decoded tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"    public static TaskList decodeTasks(String encodedTasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"        String[] taskLines \u003d encodedTasks.split(\"\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"        TaskList decodedTaskList \u003d new TaskList();","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"        for (String taskLine : taskLines) {","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"            Task decodedTask \u003d decode(taskLine);","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"            decodedTaskList.add(decodedTask);","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"        return decodedTaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"     * Decodes an encoded task and returns the corresponding Task object.","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"     * @param taskLine The encoded string containing information about a task.","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"     * @return The Task object representing the decoded task.","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"    public static Task decode(String taskLine) {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"        String[] parts \u003d taskLine.split(\"\\\\|\");","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"        String taskType \u003d parts[0].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"        boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"        Task decodedTask;","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"        DateTimeFormatter pattern \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\");","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"ziyi22"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"ziyi22"},"content":"            case \"T\":","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"ziyi22"},"content":"                decodedTask \u003d new Todo(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"ziyi22"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"ziyi22"},"content":"            case \"D\":","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"ziyi22"},"content":"                String by \u003d parts[3].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"ziyi22"},"content":"                LocalDateTime byDateTime \u003d LocalDateTime.parse(by, pattern);","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"ziyi22"},"content":"                decodedTask \u003d new Deadline(description, byDateTime);","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"ziyi22"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"ziyi22"},"content":"            case \"E\":","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"ziyi22"},"content":"                String[] eventTimings \u003d parts[3].split(\" - \");","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"ziyi22"},"content":"                String from \u003d eventTimings[0].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"ziyi22"},"content":"                String to \u003d eventTimings[1].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"ziyi22"},"content":"                LocalDateTime fromDateTime \u003d LocalDateTime.parse(from, pattern);","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"ziyi22"},"content":"                LocalDateTime toDateTime \u003d LocalDateTime.parse(to, pattern);","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"ziyi22"},"content":"                decodedTask \u003d new Event(description, fromDateTime, toDateTime);","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"ziyi22"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"ziyi22"},"content":"            default:","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"ziyi22"},"content":"                decodedTask \u003d null;","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"ziyi22"},"content":"        decodedTask.setIsDone(isDone);","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"ziyi22"},"content":"        return decodedTask;","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ziyi22":72}},{"path":"src/main/java/judy/storage/Encoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import judy.task.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":" * The Encoder class is to encode a list of Task objects into encoded string format for storage.","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"public class Encoder {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"     * Encodes the list of Task objects into a decodable and readable string representation.","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"    public static String encodeTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"        StringBuilder encodedTasks \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"            encodedTasks.append(t.encode()).append(\"\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"        return encodedTasks.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ziyi22":22}},{"path":"src/main/java/judy/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import java.io.File;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"import judy.task.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":" * Represents the file used to store tasks data.","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"public class Storage {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"    private final File file;","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"     * Checks if the file associated with this storage exists.","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"     * @return {@code true} if the file exists, {@code false} otherwise.","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"    public boolean isFileExists() {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"        try (FileInputStream fileInputStream \u003d new FileInputStream(file)) {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"            return true;","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"            return false;","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"            System.out.println(\"Error checking file existence: \" + e);","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"            return false;","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"ziyi22"},"content":"     * Creates a new file at the specified file path.","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"ziyi22"},"content":"    public void createNewFile() {","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"ziyi22"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"ziyi22"},"content":"            this.file.createNewFile();","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"ziyi22"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"ziyi22"},"content":"            System.out.println(\"Unable to create new file\");","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"ziyi22"},"content":"     * Decodes and Loads tasks from the file.","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"ziyi22"},"content":"     * @return The list of tasks loaded and decoded from the file. If an error occurs during loading,","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"ziyi22"},"content":"     *         an empty list is returned.","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"ziyi22"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"ziyi22"},"content":"        if (file.length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"ziyi22"},"content":"            return new ArrayList\u003c\u003e(); // Handle empty file","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"ziyi22"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"ziyi22"},"content":"            StringBuilder encodedTasks \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"ziyi22"},"content":"            String line;","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"ziyi22"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"ziyi22"},"content":"                encodedTasks.append(line).append(\"\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"ziyi22"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"ziyi22"},"content":"            ArrayList\u003cTask\u003e decodedTasks \u003d Decoder.decodeTasks(encodedTasks.toString()).getTaskList();","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"ziyi22"},"content":"            // Check if decoding resulted in null","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"ziyi22"},"content":"            if (decodedTasks \u003d\u003d null) {","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"ziyi22"},"content":"                // Handle the null case (log, display an error, etc.)","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"ziyi22"},"content":"                System.err.println(\"Error decoding tasks from file. Null result.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"ziyi22"},"content":"                return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"ziyi22"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"ziyi22"},"content":"            return new ArrayList\u003c\u003e(decodedTasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"ziyi22"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"ziyi22"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"ziyi22"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"ziyi22"},"content":"     * Encode the provided task list and updates the file.","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"ziyi22"},"content":"     * @param taskList The list of tasks to be encoded and written to the file.","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"ziyi22"},"content":"    public void save(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"ziyi22"},"content":"        try (PrintWriter writer \u003d new PrintWriter(new FileWriter(file))) {","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"ziyi22"},"content":"            String encodedTasks \u003d Encoder.encodeTasks(taskList);","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"ziyi22"},"content":"            writer.print(encodedTasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"ziyi22"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"ziyi22"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ziyi22":107}},{"path":"src/main/java/judy/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.task;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":" * The Deadline class represents a task with a specific deadline.","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"     * Constructs a Deadline object with the specified description and deadline.","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"     * @param by          The deadline of the task.","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"        super(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"     * Gets a formatted string representation of the deadline.","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"     * @return The formatted string representation of the deadline.","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"    private String getDateTimeString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"        return this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"     * @return The formatted string representation of the Deadline task.","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"        return \" [D]\" + super.toString() + \" (by: \" + getDateTimeString() + \")\";","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"     * Encodes the Deadline task as a string for storage.","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"     * @return The encoded string representation of the Deadline task.","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"ziyi22"},"content":"    public String encode() {","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"ziyi22"},"content":"        return \" D\" + super.encode() + \" | \" + getDateTimeString();","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ziyi22":52}},{"path":"src/main/java/judy/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.task;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":" * The Event class represents a task that occurs within a specified time range.","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"    private final DateTimeFormatter pattern \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\");","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"     * Constructs an Event object with the specified description, start time, and end time.","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"        super(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"     * Gets a formatted string representation of the date and time.","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"     * @param dateTime The date and time to be formatted.","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"     * @return The formatted string representation of the date and time.","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"    private String getDateTimeString(LocalDateTime dateTime) {","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"        return dateTime.format(pattern);","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"     * @return The formatted string representation of the Event task.","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"        String fromDateTime \u003d getDateTimeString(from);","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"        String toDateTime \u003d getDateTimeString(to);","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"        return \" [E]\" + super.toString() + \" (from: \" + fromDateTime + \" to: \" + toDateTime + \")\";","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"ziyi22"},"content":"     * Encodes the Event task as a string for storage.","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"ziyi22"},"content":"     * @return The encoded string representation of the Event task.","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"ziyi22"},"content":"    public String encode() {","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"ziyi22"},"content":"        String fromDateTime \u003d getDateTimeString(from);","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"ziyi22"},"content":"        String toDateTime \u003d getDateTimeString(to);","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"ziyi22"},"content":"        return \" E\" + super.encode() + \" | \" + fromDateTime + \" - \" + toDateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ziyi22":61}},{"path":"src/main/java/judy/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.task;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":" * The Task class represents a generic task.","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"public class Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"    protected String description;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"     * Constructs a Task object with the specified description and initializes it as not done.","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"     * Checks whether the task associated with this object has been completed.","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"     * @return {@code true} if the task is done, {@code false} otherwise.","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"     * @param isDone The new completion status of the task.","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"     * Gets the status icon representing whether the task is done or not.","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"     * @return The status icon (\"X\" if done, \" \" if not done).","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"        return (isDone() ? \"X\" : \" \");","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"ziyi22"},"content":"     * Gets the encoded status representing whether the task is done or not.","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"ziyi22"},"content":"     * @return The encoded status (\"1\" if done, \"0\" if not done).","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"ziyi22"},"content":"    private String getDecodeStatus() {","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"ziyi22"},"content":"        return (isDone() ? \"1\" : \"0\");","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"ziyi22"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"ziyi22"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"ziyi22"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"ziyi22"},"content":"     * Marks the task as undone.","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"ziyi22"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"ziyi22"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"ziyi22"},"content":"     * Checks if the task description contains the specified keyword.","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"ziyi22"},"content":"     * @param keyword The keyword to search for in the task description.","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"ziyi22"},"content":"     * @return True if the task description contains the keyword, false otherwise.","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"ziyi22"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"ziyi22"},"content":"        return this.description.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"ziyi22"},"content":"     * Returns a string representation of the Task.","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"ziyi22"},"content":"     * @return The formatted string representation of the Task.","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"ziyi22"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"ziyi22"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"ziyi22"},"content":"     * Encodes the Task as a string for storage.","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"ziyi22"},"content":"     * @return The encoded string representation of the Task.","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"ziyi22"},"content":"    public String encode() {","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"ziyi22"},"content":"        return \" | \" + getDecodeStatus() + \" | \" + this.description;","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"ziyi22":99}},{"path":"src/main/java/judy/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.task;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":" * The TaskList class represents a collection of Task objects.","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"public class TaskList {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"     * Constructs an empty TaskList with an initial capacity of 100.","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"     * Constructs a TaskList with the specified list of tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"     * @param taskList The list of tasks to be included in the TaskList.","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"     * Gets the current size of the TaskList.","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"     * @return The number of tasks in the TaskList.","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"        return this.taskList.size();","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"     * Gets the ArrayList containing the tasks in the TaskList.","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"     * @return The ArrayList of tasks in the TaskList.","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"        return this.taskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"     * Gets the Task at the specified index in the TaskList.","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"ziyi22"},"content":"     * @param taskId The index of the Task to retrieve.","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"ziyi22"},"content":"     * @return The Task at the specified index.","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"ziyi22"},"content":"    public Task get(int taskId) {","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"ziyi22"},"content":"        return this.taskList.get(taskId);","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"ziyi22"},"content":"     * Adds a Task to the TaskList.","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"ziyi22"},"content":"     * @param task The Task to be added to the TaskList.","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"ziyi22"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"ziyi22"},"content":"        this.taskList.add(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"ziyi22"},"content":"     * Removes a Task from the TaskList.","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"ziyi22"},"content":"     * @param task The Task to be removed from the TaskList.","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"ziyi22"},"content":"    public void remove(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"ziyi22"},"content":"        this.taskList.remove(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"ziyi22"},"content":"     * Checks if the TaskList is empty.","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"ziyi22"},"content":"     * @return {@code true} if the TaskList is empty, {@code false} otherwise.","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"ziyi22"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"ziyi22"},"content":"        return taskList.isEmpty();","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ziyi22":81}},{"path":"src/main/java/judy/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.task;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":" * This Todo class represents a todo task.","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"     * Constructs a Todo object with the specified description.","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"        super(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"     * @return The formatted string representation of the Todo task.","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"        return \" [T]\" + super.toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"     * Encodes the Todo task as a string for storage.","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"     * @return The encoded string representation of the Todo task.","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"    public String encode() {","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"        return \" T\" + super.encode();","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"ziyi22":36}},{"path":"src/main/java/judy/ui/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":" * The Messages class contains various messages used in the application.","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"public class Messages {","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"    public static final String LINE \u003d \"-------------------------------------------------------------------\";","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"    public static final String GREET_MESSAGE \u003d \" Hello! I\u0027m Judy\\n What can I do for you?\";","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"    public static final String MARK_TASK_MESSSAGE \u003d \" Nice ! I\u0027ve marked this task as done: \\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"    public static final String UNMARK_TASK_MESSAGE \u003d \" Ok, I\u0027ve marked this task as not done yet: \\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"    public static final String EMPTY_TASKLIST_MESSAGE \u003d \" Your task list is empty. Try add one now! \";","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"    public static final String LIST_TASKS_MESSAGE \u003d \" Here are the tasks in your task list: \";","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"    public static final String DELETE_TASK_MESSAGE \u003d \" Noted. I\u0027ve removed this task: \\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"    public static final String ADD_TASK_MESSAGE \u003d \" Got it. I\u0027ve added this task: \\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"    public static final String GOODBYE_MESSAGE \u003d \" Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"    public static final String EMPTY_MATCHING_TASKS_MESSAGE \u003d \"Ohno! Can\u0027t find a matching task in your list! \";","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"    public static final String LIST_MATCHING_TASKS_MESSAGE \u003d \" Here are the matching tasks in your list: \";","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"     * Generates and returns the help message with instructions on using the application.","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"     * @return The help message.","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"    public static String helpMessage() {","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"        return (\" Here are the commands that I understand!\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"                \"   1. To add a todo, type \u0027todo \u003cdescription\u003e\u0027\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"                \"   2. To add a deadline, type \u0027deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd HHmm\u003e\u0027 \\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"                \"   3. To add an event, type \u0027event \u003cdescription\u003e /from \u003cyyyy-mm-dd HHmm\u003e /to \u003cyyyy-mm-dd HHmm\u003e\u0027\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"                \"   4. To list out your tasks, type \u0027list\u0027\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"                \"   5. To mark a task as done, type \u0027mark \u003ctask number\u003e\u0027 \\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"                \"   6. To mark a task as undone, type \u0027unmark \u003ctask number\u003e\u0027 \\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"                \"   7. To delete a task, type \u0027delete \u003ctask number\u003e\u0027 \\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"                \"   8. To exit the chat, type \u0027bye\u0027\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"        );","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"     * Generates and returns a message indicating the updated task size in the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"     * @param size The updated size of the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"     * @return The message indicating the updated task size.","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"    public static String printTaskSize(int size){","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"        return (\"\\n Now you have \" + size + \" tasks in the list. \");","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ziyi22":46}},{"path":"src/main/java/judy/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import judy.task.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import judy.task.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":" * The Ui class handles interactions with the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"public class Ui {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"     * Constructs a Ui object with a Scanner for reading user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"    public Ui() {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"     * Reads and returns a command entered by the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"     * @return The user-entered command.","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"        System.out.println(Messages.GREET_MESSAGE);","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"     * Displays a line separator.","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"    public void showLine() {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"        System.out.println(Messages.LINE);","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"     * Displays a message indicating the successful addition of a task.","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"ziyi22"},"content":"     * @param task The task that was added.","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"ziyi22"},"content":"     * @param size The updated size of the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"ziyi22"},"content":"    public void showAddTask(Task task, int size) {","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"ziyi22"},"content":"        System.out.println( Messages.ADD_TASK_MESSAGE +","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"ziyi22"},"content":"                task.toString() +","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"ziyi22"},"content":"                Messages.printTaskSize(size));","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"ziyi22"},"content":"     * Displays a message indicating the successful deletion of a task.","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"ziyi22"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"ziyi22"},"content":"     * @param size The updated size of the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"ziyi22"},"content":"    public void showDeleteTask(Task task, int size) {","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"ziyi22"},"content":"        System.out.println(Messages.DELETE_TASK_MESSAGE + task.toString() + Messages.printTaskSize(size));","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"ziyi22"},"content":"     * Displays a message indicating the successful marking of a task as done.","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"ziyi22"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"ziyi22"},"content":"    public void showMarkTask(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"ziyi22"},"content":"        String s \u003d Messages.MARK_TASK_MESSSAGE + task.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"ziyi22"},"content":"        System.out.println(s);","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"ziyi22"},"content":"     * Displays a message indicating the successful marking of a task as undone.","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"ziyi22"},"content":"     * @param task The task that was marked as undone.","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"ziyi22"},"content":"    public void showUnmarkTask(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"ziyi22"},"content":"        System.out.println(Messages.UNMARK_TASK_MESSAGE + task.toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"ziyi22"},"content":"     * Displays the list of tasks or an appropriate message if the task list is empty.","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"ziyi22"},"content":"     * @param taskList The TaskList containing the tasks to be displayed.","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":90,"author":{"gitId":"ziyi22"},"content":"    public void showTaskList(TaskList taskList) {","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"ziyi22"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"ziyi22"},"content":"            System.out.println(Messages.EMPTY_TASKLIST_MESSAGE);","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"ziyi22"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"ziyi22"},"content":"            System.out.println(Messages.LIST_TASKS_MESSAGE);","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"ziyi22"},"content":"            for(int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"ziyi22"},"content":"                int seq \u003d i+1;","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"ziyi22"},"content":"                Task t \u003d taskList.get(i);","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"ziyi22"},"content":"                System.out.println (\"  \" + seq + \". \" + t.toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"ziyi22"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":104,"author":{"gitId":"ziyi22"},"content":"     * Displays the list of tasks that contained matching keywords","lastModifiedDate":"2024-02-20"},{"lineNumber":105,"author":{"gitId":"ziyi22"},"content":"     * or an appropriate message if the task list is empty.","lastModifiedDate":"2024-02-20"},{"lineNumber":106,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":107,"author":{"gitId":"ziyi22"},"content":"     * @param taskList The TaskList containing the tasks with matching keyword.","lastModifiedDate":"2024-02-20"},{"lineNumber":108,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":109,"author":{"gitId":"ziyi22"},"content":"    public void showFindTasks(TaskList taskList) {","lastModifiedDate":"2024-02-20"},{"lineNumber":110,"author":{"gitId":"ziyi22"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-02-20"},{"lineNumber":111,"author":{"gitId":"ziyi22"},"content":"            System.out.println(Messages.EMPTY_MATCHING_TASKS_MESSAGE);","lastModifiedDate":"2024-02-20"},{"lineNumber":112,"author":{"gitId":"ziyi22"},"content":"        } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":113,"author":{"gitId":"ziyi22"},"content":"            System.out.println(Messages.LIST_MATCHING_TASKS_MESSAGE);","lastModifiedDate":"2024-02-20"},{"lineNumber":114,"author":{"gitId":"ziyi22"},"content":"            for(int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2024-02-20"},{"lineNumber":115,"author":{"gitId":"ziyi22"},"content":"                int seq \u003d i+1;","lastModifiedDate":"2024-02-20"},{"lineNumber":116,"author":{"gitId":"ziyi22"},"content":"                Task t \u003d taskList.get(i);","lastModifiedDate":"2024-02-20"},{"lineNumber":117,"author":{"gitId":"ziyi22"},"content":"                System.out.println (\"  \" + seq + \". \" + t.toString());","lastModifiedDate":"2024-02-20"},{"lineNumber":118,"author":{"gitId":"ziyi22"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":119,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":120,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":121,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":122,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":123,"author":{"gitId":"ziyi22"},"content":"     * Displays a help message with instructions on using the application.","lastModifiedDate":"2024-02-19"},{"lineNumber":124,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":125,"author":{"gitId":"ziyi22"},"content":"    public void showHelp() {","lastModifiedDate":"2024-02-07"},{"lineNumber":126,"author":{"gitId":"ziyi22"},"content":"        System.out.println(Messages.helpMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":127,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":128,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":129,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":130,"author":{"gitId":"ziyi22"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":131,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":132,"author":{"gitId":"ziyi22"},"content":"     * @param errorMessage The error message to be displayed.","lastModifiedDate":"2024-02-19"},{"lineNumber":133,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":134,"author":{"gitId":"ziyi22"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":135,"author":{"gitId":"ziyi22"},"content":"         System.out.println(errorMessage);","lastModifiedDate":"2024-02-07"},{"lineNumber":136,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":137,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":138,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":139,"author":{"gitId":"ziyi22"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":140,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":141,"author":{"gitId":"ziyi22"},"content":"    public void showGoodbye() {","lastModifiedDate":"2024-02-07"},{"lineNumber":142,"author":{"gitId":"ziyi22"},"content":"        System.out.println(Messages.GOODBYE_MESSAGE);","lastModifiedDate":"2024-02-07"},{"lineNumber":143,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":144,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":145,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ziyi22":145}},{"path":"src/test/java/judy/command/AddTaskCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.command;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import judy.commands.AddTaskCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import judy.storage.Storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import judy.task.*;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"import judy.ui.Ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"import java.io.File;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"public class AddTaskCommandTest {","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"    @AfterEach","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"    public void clean() {","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"        File file \u003d new File(\"testFile.txt\");","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"        if (file.exists()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"            assertTrue(file.delete());","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"    public void execute_addTodo_commandSuccessful() {","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"        Todo t \u003d new Todo(\" Sample Todo\");","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"        Storage storage \u003d new Storage(\"testFile.txt\");","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(t, taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"        addTaskCommand.execute(storage, ui);","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"        ArrayList\u003cTask\u003e updatedlist \u003d taskList.getTaskList();","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"        assertEquals(t, updatedlist.get(0));","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"    public void execute_addDeadLine_commandSuccessful() {","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"        String by \u003d \"2026-06-06 1159\";","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"        DateTimeFormatter pattern \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"        LocalDateTime byDateTime \u003d LocalDateTime.parse(by, pattern);","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"        Deadline d \u003d new Deadline(\" Sample Deadline\", byDateTime);","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"ziyi22"},"content":"        Storage storage \u003d new Storage(\"testFile.txt\");","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"ziyi22"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(d, taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"ziyi22"},"content":"        addTaskCommand.execute(storage, ui);","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"ziyi22"},"content":"        ArrayList\u003cTask\u003e updatedlist \u003d taskList.getTaskList();","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"ziyi22"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"ziyi22"},"content":"        assertEquals(d, updatedlist.get(0));","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"ziyi22"},"content":"    public void execute_addEvent_commandSuccessful() {","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"ziyi22"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"ziyi22"},"content":"        String from \u003d \"2026-06-06 1600\";","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"ziyi22"},"content":"        String to \u003d \"2026-06-06 1900\";","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"ziyi22"},"content":"        DateTimeFormatter pattern \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"ziyi22"},"content":"        LocalDateTime fromDateTime \u003d LocalDateTime.parse(from, pattern);","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"ziyi22"},"content":"        LocalDateTime toDateTime \u003d LocalDateTime.parse(to, pattern);","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"ziyi22"},"content":"        Event e \u003d new Event(\" Sample Event\", fromDateTime, toDateTime);","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"ziyi22"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"ziyi22"},"content":"        Storage storage \u003d new Storage(\"testFile.txt\");","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"ziyi22"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(e, taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"ziyi22"},"content":"        addTaskCommand.execute(storage, ui);","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"ziyi22"},"content":"        ArrayList\u003cTask\u003e updatedlist \u003d taskList.getTaskList();","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"ziyi22"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"ziyi22"},"content":"        assertEquals(e, updatedlist.get(0));","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"ziyi22":75}},{"path":"src/test/java/judy/data/testFile.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":" T | 0 | read book","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":" D | 0 | project | Jan 01 2025 11:59 PM","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"ziyi22":2}},{"path":"src/test/java/judy/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.parser;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import judy.commands.*;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import judy.exceptions.DukeException;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import judy.storage.Storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"import judy.task.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"import judy.task.Deadline;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"import judy.task.Todo;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"import judy.ui.Ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"    private Command command;","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"    private static TaskList taskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"    private void createList() {","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"        Storage storage \u003d new Storage(\"testFile.txt\");","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"        Todo t \u003d new Todo(\"read book\");","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"        DateTimeFormatter pattern \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(\"2025-01-01 2359\", pattern);","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"        Deadline d \u003d new Deadline(\"project\", by);","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"        new AddTaskCommand(t, taskList).execute(storage, ui);","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"        new AddTaskCommand(d, taskList).execute(storage, ui);","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"    public void markTaskCommand_parseSuccessfully() throws DukeException{","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"        createList();","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"        parser \u003d new Parser(MarkTaskCommand.COMMAND_WORD + \" 2\", taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"        command \u003d parser.parse();","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"        assertInstanceOf(MarkTaskCommand.class, command);","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"    public void markTaskCommand_invalidIndex_exceptionThrown() {","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"        try{","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"            createList();","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"            parser \u003d new Parser(MarkTaskCommand.COMMAND_WORD + \" 6\", taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"ziyi22"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"ziyi22"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"ziyi22"},"content":"            assertEquals(\" Invalid task index. Type \u0027list\u0027 to list out your tasks. \", e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"ziyi22"},"content":"    public void markTaskCommand_emptyInput_exceptionThrown() {","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"ziyi22"},"content":"        try{","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"ziyi22"},"content":"            createList();","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"ziyi22"},"content":"            parser \u003d new Parser(MarkTaskCommand.COMMAND_WORD, taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"ziyi22"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"ziyi22"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"ziyi22"},"content":"            assertEquals(\" The index of task cannot be empty.\", e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"ziyi22"},"content":"    public void markTaskCommand_wrongIndexFormat_exceptionThrown() {","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"ziyi22"},"content":"        try{","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"ziyi22"},"content":"            createList();","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"ziyi22"},"content":"            parser \u003d new Parser(MarkTaskCommand.COMMAND_WORD + \" abc\", taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"ziyi22"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"ziyi22"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"ziyi22"},"content":"            assertEquals(\" The index you\u0027ve input is not an integer. \", e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"ziyi22"},"content":"    public void unmarkTaskCommand_parseSuccessfully() throws DukeException{","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"ziyi22"},"content":"        createList();","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"ziyi22"},"content":"        parser \u003d new Parser(UnmarkTaskCommand.COMMAND_WORD + \" 2\", taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"ziyi22"},"content":"        command \u003d parser.parse();","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"ziyi22"},"content":"        assertInstanceOf(UnmarkTaskCommand.class, command);","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"ziyi22"},"content":"    public void unmarkTaskCommand_invalidIndex_exceptionThrown() {","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"ziyi22"},"content":"        try{","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"ziyi22"},"content":"            createList();","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"ziyi22"},"content":"            parser \u003d new Parser(UnmarkTaskCommand.COMMAND_WORD + \" 6\", taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"ziyi22"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"ziyi22"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"ziyi22"},"content":"            assertEquals(\" Invalid task index. Type \u0027list\u0027 to list out your tasks. \", e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":90,"author":{"gitId":"ziyi22"},"content":"    public void unmarkTaskCommand_emptyInput_exceptionThrown() {","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"ziyi22"},"content":"        try{","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"ziyi22"},"content":"            createList();","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"ziyi22"},"content":"            parser \u003d new Parser(UnmarkTaskCommand.COMMAND_WORD, taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"ziyi22"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"ziyi22"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"ziyi22"},"content":"            assertEquals(\" The index of task cannot be empty.\", e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"ziyi22"},"content":"    public void unmarkTaskCommand_wrongIndexFormat_exceptionThrown() {","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"ziyi22"},"content":"        try{","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"ziyi22"},"content":"            createList();","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"ziyi22"},"content":"            parser \u003d new Parser(UnmarkTaskCommand.COMMAND_WORD + \" abc\", taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"ziyi22"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"ziyi22"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":106,"author":{"gitId":"ziyi22"},"content":"            assertEquals(\" The task index you\u0027ve input is not an integer. \", e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":108,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":109,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":110,"author":{"gitId":"ziyi22"},"content":"    public void deleteTaskCommand_parseSuccessfully() throws DukeException{","lastModifiedDate":"2024-02-19"},{"lineNumber":111,"author":{"gitId":"ziyi22"},"content":"        createList();","lastModifiedDate":"2024-02-19"},{"lineNumber":112,"author":{"gitId":"ziyi22"},"content":"        parser \u003d new Parser(DeleteTaskCommand.COMMAND_WORD + \" 2\", taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":113,"author":{"gitId":"ziyi22"},"content":"        command \u003d parser.parse();","lastModifiedDate":"2024-02-19"},{"lineNumber":114,"author":{"gitId":"ziyi22"},"content":"        assertInstanceOf(DeleteTaskCommand.class, command);","lastModifiedDate":"2024-02-19"},{"lineNumber":115,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":116,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":117,"author":{"gitId":"ziyi22"},"content":"    public void deleteTaskCommand_invalidIndex_exceptionThrown() {","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"ziyi22"},"content":"        try{","lastModifiedDate":"2024-02-19"},{"lineNumber":119,"author":{"gitId":"ziyi22"},"content":"            createList();","lastModifiedDate":"2024-02-19"},{"lineNumber":120,"author":{"gitId":"ziyi22"},"content":"            parser \u003d new Parser(DeleteTaskCommand.COMMAND_WORD + \" 6\", taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":121,"author":{"gitId":"ziyi22"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-02-19"},{"lineNumber":122,"author":{"gitId":"ziyi22"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":123,"author":{"gitId":"ziyi22"},"content":"            assertEquals(\" Invalid task index. Type \u0027list\u0027 to list out your tasks. \", e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":124,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":125,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":126,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":127,"author":{"gitId":"ziyi22"},"content":"    public void deleteTaskCommand_emptyInput_exceptionThrown() {","lastModifiedDate":"2024-02-19"},{"lineNumber":128,"author":{"gitId":"ziyi22"},"content":"        try{","lastModifiedDate":"2024-02-19"},{"lineNumber":129,"author":{"gitId":"ziyi22"},"content":"            createList();","lastModifiedDate":"2024-02-19"},{"lineNumber":130,"author":{"gitId":"ziyi22"},"content":"            parser \u003d new Parser(DeleteTaskCommand.COMMAND_WORD, taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":131,"author":{"gitId":"ziyi22"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-02-19"},{"lineNumber":132,"author":{"gitId":"ziyi22"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":133,"author":{"gitId":"ziyi22"},"content":"            assertEquals(\" The index of task cannot be empty. \", e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":134,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":135,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":136,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":137,"author":{"gitId":"ziyi22"},"content":"    public void deleteTaskCommand_wrongIndexFormat_exceptionThrown() {","lastModifiedDate":"2024-02-19"},{"lineNumber":138,"author":{"gitId":"ziyi22"},"content":"        try{","lastModifiedDate":"2024-02-19"},{"lineNumber":139,"author":{"gitId":"ziyi22"},"content":"            createList();","lastModifiedDate":"2024-02-19"},{"lineNumber":140,"author":{"gitId":"ziyi22"},"content":"            parser \u003d new Parser(DeleteTaskCommand.COMMAND_WORD + \" abc\", taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":141,"author":{"gitId":"ziyi22"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-02-19"},{"lineNumber":142,"author":{"gitId":"ziyi22"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":143,"author":{"gitId":"ziyi22"},"content":"            assertEquals(\" The task index you\u0027ve input is not an integer. \", e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":144,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":145,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":146,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":147,"author":{"gitId":"ziyi22"},"content":"    public void AddTodoCommand_parseSuccessfully() throws DukeException{","lastModifiedDate":"2024-02-19"},{"lineNumber":148,"author":{"gitId":"ziyi22"},"content":"        createList();","lastModifiedDate":"2024-02-19"},{"lineNumber":149,"author":{"gitId":"ziyi22"},"content":"        parser \u003d new Parser(AddTaskCommand.TODO + \" read book\", taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":150,"author":{"gitId":"ziyi22"},"content":"        command \u003d parser.parse();","lastModifiedDate":"2024-02-19"},{"lineNumber":151,"author":{"gitId":"ziyi22"},"content":"        assertInstanceOf(AddTaskCommand.class, command);","lastModifiedDate":"2024-02-19"},{"lineNumber":152,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":153,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":154,"author":{"gitId":"ziyi22"},"content":"    public void addTodoCommand_emptyDescription_exceptionThrown() {","lastModifiedDate":"2024-02-19"},{"lineNumber":155,"author":{"gitId":"ziyi22"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":156,"author":{"gitId":"ziyi22"},"content":"            createList();","lastModifiedDate":"2024-02-19"},{"lineNumber":157,"author":{"gitId":"ziyi22"},"content":"            parser \u003d new Parser(AddTaskCommand.TODO, taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":158,"author":{"gitId":"ziyi22"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-02-19"},{"lineNumber":159,"author":{"gitId":"ziyi22"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":160,"author":{"gitId":"ziyi22"},"content":"            assertEquals(\" The description of a todo cannot be empty :c \\n\" +","lastModifiedDate":"2024-02-19"},{"lineNumber":161,"author":{"gitId":"ziyi22"},"content":"                    \" (Eg format: todo \u003cDescription\u003e )\", e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":162,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":163,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":164,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":165,"author":{"gitId":"ziyi22"},"content":"    public void AddDeadlineCommand_parseSuccessfully() throws DukeException{","lastModifiedDate":"2024-02-19"},{"lineNumber":166,"author":{"gitId":"ziyi22"},"content":"        createList();","lastModifiedDate":"2024-02-19"},{"lineNumber":167,"author":{"gitId":"ziyi22"},"content":"        parser \u003d new Parser(AddTaskCommand.DEADLINE + \" project /by 2024-06-06 2359\", taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":168,"author":{"gitId":"ziyi22"},"content":"        command \u003d parser.parse();","lastModifiedDate":"2024-02-19"},{"lineNumber":169,"author":{"gitId":"ziyi22"},"content":"        assertInstanceOf(AddTaskCommand.class, command);","lastModifiedDate":"2024-02-19"},{"lineNumber":170,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":171,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":172,"author":{"gitId":"ziyi22"},"content":"    public void addDealineCommand_emptyDescription_exceptionThrown() {","lastModifiedDate":"2024-02-19"},{"lineNumber":173,"author":{"gitId":"ziyi22"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":174,"author":{"gitId":"ziyi22"},"content":"            createList();","lastModifiedDate":"2024-02-19"},{"lineNumber":175,"author":{"gitId":"ziyi22"},"content":"            parser \u003d new Parser(AddTaskCommand.DEADLINE, taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":176,"author":{"gitId":"ziyi22"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-02-19"},{"lineNumber":177,"author":{"gitId":"ziyi22"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":178,"author":{"gitId":"ziyi22"},"content":"            assertEquals(\" The description of a deadline cannot be empty.\", e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":179,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":180,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":181,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":182,"author":{"gitId":"ziyi22"},"content":"    public void addDeadlineCommand_invalidCommandFormat_exceptionThrown() {","lastModifiedDate":"2024-02-19"},{"lineNumber":183,"author":{"gitId":"ziyi22"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":184,"author":{"gitId":"ziyi22"},"content":"            createList();","lastModifiedDate":"2024-02-19"},{"lineNumber":185,"author":{"gitId":"ziyi22"},"content":"            parser \u003d new Parser(AddTaskCommand.DEADLINE + \" 2024-12-31 0000\", taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":186,"author":{"gitId":"ziyi22"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-02-19"},{"lineNumber":187,"author":{"gitId":"ziyi22"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":188,"author":{"gitId":"ziyi22"},"content":"            assertEquals(\" Invalid format :c \\n\" +","lastModifiedDate":"2024-02-19"},{"lineNumber":189,"author":{"gitId":"ziyi22"},"content":"                    \" (Eg format: deadline \u003cDescription\u003e /by yyyy-MM-dd HHmm)\", e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":190,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":191,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":192,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":193,"author":{"gitId":"ziyi22"},"content":"    public void AddEventCommand_parseSuccessfully() throws DukeException{","lastModifiedDate":"2024-02-19"},{"lineNumber":194,"author":{"gitId":"ziyi22"},"content":"        createList();","lastModifiedDate":"2024-02-19"},{"lineNumber":195,"author":{"gitId":"ziyi22"},"content":"        parser \u003d new Parser(AddTaskCommand.EVENT + \" event /from 2026-06-06 0000 /to 2026-08-08 0000\", taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":196,"author":{"gitId":"ziyi22"},"content":"        command \u003d parser.parse();","lastModifiedDate":"2024-02-19"},{"lineNumber":197,"author":{"gitId":"ziyi22"},"content":"        assertInstanceOf(AddTaskCommand.class, command);","lastModifiedDate":"2024-02-19"},{"lineNumber":198,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":199,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":200,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":201,"author":{"gitId":"ziyi22"},"content":"    public void addEventCommand_emptyDescription_exceptionThrown() {","lastModifiedDate":"2024-02-19"},{"lineNumber":202,"author":{"gitId":"ziyi22"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":203,"author":{"gitId":"ziyi22"},"content":"            createList();","lastModifiedDate":"2024-02-19"},{"lineNumber":204,"author":{"gitId":"ziyi22"},"content":"            parser \u003d new Parser(AddTaskCommand.EVENT , taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":205,"author":{"gitId":"ziyi22"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-02-19"},{"lineNumber":206,"author":{"gitId":"ziyi22"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":207,"author":{"gitId":"ziyi22"},"content":"            assertEquals(\" The description of an event cannot be empty.\", e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":208,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":209,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":210,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":211,"author":{"gitId":"ziyi22"},"content":"    public void addEventCommand_invalidCommandFormat_exceptionThrown() {","lastModifiedDate":"2024-02-19"},{"lineNumber":212,"author":{"gitId":"ziyi22"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":213,"author":{"gitId":"ziyi22"},"content":"            createList();","lastModifiedDate":"2024-02-19"},{"lineNumber":214,"author":{"gitId":"ziyi22"},"content":"            parser \u003d new Parser(AddTaskCommand.EVENT + \" /from 2024-12-31 0000\", taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":215,"author":{"gitId":"ziyi22"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-02-19"},{"lineNumber":216,"author":{"gitId":"ziyi22"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":217,"author":{"gitId":"ziyi22"},"content":"            assertEquals(\" Oops! Invalid format :c \\n \" +","lastModifiedDate":"2024-02-19"},{"lineNumber":218,"author":{"gitId":"ziyi22"},"content":"                    \"(Try this: event \u003cdescription\u003e /from yyyy-MM-dd HHmm /to yyyy-MM-dd HHmm)\", e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":219,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":220,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":221,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"ziyi22":221}},{"path":"src/test/java/judy/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.task;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"    private Deadline createDeadline() {","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"        String by \u003d \"2025-01-01 1159\";","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"        DateTimeFormatter pattern \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"        LocalDateTime byDateTime \u003d LocalDateTime.parse(by, pattern);","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"        return new Deadline(\"project\", byDateTime);","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"    public void testString() {","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"        Deadline d \u003d createDeadline();","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"        assertEquals(\" [D][ ] project (by: Jan 01 2025 11:59 AM)\", d.toString());","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"    public void testTodoEncode() {","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"        Deadline d \u003d createDeadline();","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"        assertEquals(\" D | 0 | project | Jan 01 2025 11:59 AM\", d.encode());","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"ziyi22":27}},{"path":"src/test/java/judy/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package judy.task;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"    public void testTodoConvertString() {","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"        Todo t \u003d new Todo(\"read book\");","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"        assertEquals(\" [T][ ] read book\", t.toString());","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"    public void testTodoEncode() {","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"        Todo t \u003d new Todo(\"grocery\");","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"        assertEquals(\" T | 0 | grocery\", t.encode());","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"ziyi22":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"todo borrow book","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"deadline return book /by Monday","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"event Project Meeting /from Wed 5pm /to 8pm","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"list","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"mark 2","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"mark 3","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"unmark 3","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"todo watch movie","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"bye","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"ziyi22":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"# run the program, feed judy.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ziyi22":1,"-":37}}]
