[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"# Yoda project template","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"3. After that, locate the `src/main/java/Yoda.java` file, right-click it, and choose `Run Yoda.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"Greetings! Yoda, I am","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"Assist you, may I?","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣤⠤⠐⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡌⡦⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⣼⡊⢀⠔⠀⠀⣄⠤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣤⣄⣀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣶⠃⠉⠡⡠⠤⠊⠀⠠⣀⣀⡠⠔⠒⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⣿⢟⠿⠛⠛⠁","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⡇⠀⠀⠀⠀⠑⠶⠖⠊⠁⠀⠀⠀⡀⠀⠀⠀⢀⣠⣤⣤⡀⠀⠀⠀⠀⠀⢀⣠⣤⣶⣿⣿⠟⡱⠁⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣾⣿⡇⠀⢀⡠⠀⠀⠀⠈⠑⢦⣄⣀⣀⣽⣦⣤⣾⣿⠿⠿⠿⣿⡆⠀⠀⢀⠺⣿⣿⣿⣿⡿⠁⡰⠁⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣧⣠⠊⣠⣶⣾⣿⣿⣶⣶⣿⣿⠿⠛⢿⣿⣫⢕⡠⢥⣈⠀⠙⠀⠰⣷⣿⣿⣿⡿⠋⢀⠜⠁⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⢿⣿⣿⣿⣿⣰⣿⣿⠿⣛⡛⢛⣿⣿⣟⢅⠀⠀⢿⣿⠕⢺⣿⡇⠩⠓⠂⢀⠛⠛⠋⢁⣠⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"⠘⢶⡶⢶⣶⣦⣤⣤⣤⣤⣤⣀⣀⣀⣀⡀⠀⠘⣿⣿⣿⠟⠁⡡⣒⣬⢭⢠⠝⢿⡡⠂⠀⠈⠻⣯⣖⣒⣺⡭⠂⢀⠈⣶⣶⣾⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠙⠳⣌⡛⢿⣿⣿⣿⣿⣿⣿⣿⣿⣻⣵⣨⣿⣿⡏⢀⠪⠎⠙⠿⣋⠴⡃⢸⣷⣤⣶⡾⠋⠈⠻⣶⣶⣶⣷⣶⣷⣿⣟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠈⠛⢦⣌⡙⠛⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⠀⠀⠩⠭⡭⠴⠊⢀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⣿⣿⣿⡇⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠈⠙⠓⠦⣄⡉⠛⠛⠻⢿⣿⣿⣿⣷⡀⠀⠀⠀⠀⢀⣰⠋⠀⠀⠀⠀⠀⣀⣰⠤⣳⣿⣿⣿⣿⣟⠑⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠓⠒⠒⠶⢺⣿⣿⣿⣿⣦⣄⣀⣴⣿⣯⣤⣔⠒⠚⣒⣉⣉⣴⣾⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⠹⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣭⣉⣉⣤⣿⣿⣿⣿⣿⣿⡿⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⡁⡆⠙⢶⣀⠀⢀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣴⣶⣾⣿⣟⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⢛⣩⣴⣿⠇⡇⠸⡆⠙⢷⣄⠻⣿⣦⡄⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼⣿⣿⣿⣿⣿⣿⣿⣎⢻⣿⣿⣿⣿⣿⣿⣿⣭⣭⣭⣵⣶⣾⣿⣿⣿⠟⢰⢣⠀⠈⠀⠀⠙⢷⡎⠙⣿⣦⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼⣿⣿⣿⣿⣿⣿⣿⣿⡟⣿⡆⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠟⠛⠋⠁⢀⠇⢸⡇⠀⠀⠀⠀⠈⠁⠀⢸⣿⡆⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡜⡿⡘⣿⣿⣿⣿⣿⣶⣶⣤⣤⣤⣤⣤⣤⣤⣴⡎⠖⢹⡇⠀⠀⠀⠀⠀⠀⠀⠀⣿⣷⡄⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡀⠘⢿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠛⠋⡟⠀⠀⣸⣷⣀⣤⣀⣀⣀⣤⣤⣾⣿⣿⣿⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣭⣓⡲⠬⢭⣙⡛⠿⣿⣿⣶⣦⣀⠀⡜⠀⠀⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣭⣛⣓⠶⠦⠥⣀⠙⠋⠉⠉⠻⣄⣀⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣆⠐⣦⣠⣷⠊⠁⠀⠀⡭⠙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢉⣛⡛⢻⡗⠂⠀⢀⣷⣄⠈⢆⠉⠙⠻⢿⣿⣿⣿⣿⣿⠇⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⡟⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⣉⢁⣴⣿⣿⣿⣾⡇⢀⣀⣼⡿⣿⣷⡌⢻⣦⡀⠀⠈⠙⠛⠿⠏⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣿⡄⠙⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⠛⠛⢯⡉⠉⠉⠉⠉⠛⢼⣿⠿⠿⠦⡙⣿⡆⢹⣷⣤⡀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠿⠄⠈⠻⠿⠿⠿⠿⠿⠿⠛⠛⠿⠛⠉⠁⠀⠀⠀⠀⠀⠀⠻⠿⠿⠿⠿⠟⠉⠀⠀⠤⠴⠶⠌⠿⠘⠿⠿⠿⠿⠶⠤⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"KinTatHo"},"content":"________________________________________________________","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":16,"KinTatHo":34}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"KinTatHo"},"content":"    mainClass.set(\"yoda.Yoda\")","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"KinTatHo"},"content":"    archiveBaseName \u003d \"yoda\"","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"KinTatHo"},"content":"checkstyle {","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"KinTatHo"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"KinTatHo":24}},{"path":"data/output.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"T | 1 | sleep","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"D | 0 | hehe | Jun 6 2024 1800","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"T | 0 | meow","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"T | 1 | read book","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"T | 0 | jackoff","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"KinTatHo":5}},{"path":"data/yoda.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"T | 0 | sleep","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"T | 0 | eaat","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"KinTatHo":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"# User Guide for Yoda Chatbot","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"Yoda Chatbot is a task management assistant that helps you keep track of various tasks including todos, deadlines, and events.","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"### Adding a Task","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"You can add three types of tasks: todo, deadline, and event.","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"#### `todo` - Adds a todo task.","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"A todo task only contains a description.","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"Example of usage:","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"`todo read book`","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"Expected outcome:","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"Hmm, added this task, I have:","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"[T][ ] read book","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"Tasks in the list, now you have 1, hmm.","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"#### `deadline` - Adds a task with a deadline.","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"A deadline task contains a description and a date/time by which the task should be completed.","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"Example of usage:","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"`deadline return book /by Sunday`","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"Expected outcome:","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"Hmm, added this task, I have:","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"[D][ ] return book (by: Sunday)","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"Tasks in the list, now you have 2, hmm.","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"#### `event` - Adds an event task.","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"An event task contains a description and a start and end time.","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"Example of usage:","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"`event project meeting /from Monday 2pm /to 4pm`","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"Expected outcome:","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"Hmm, added this task, I have:","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"KinTatHo"},"content":"[E][ ] project meeting (from: Monday 2pm to: 4pm)","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"KinTatHo"},"content":"Tasks in the list, now you have 3, hmm.","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":43,"author":{"gitId":"KinTatHo"},"content":"### Marking a Task as Done","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"KinTatHo"},"content":"You can mark a task as completed.","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"KinTatHo"},"content":"#### `mark` - Marks a task as done.","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"KinTatHo"},"content":"Example of usage:","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"KinTatHo"},"content":"`mark 1`","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"KinTatHo"},"content":"Expected outcome:","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"KinTatHo"},"content":"Done, this task is:","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"KinTatHo"},"content":"[T][X] read book","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"KinTatHo"},"content":"### Marking a Task as Unone","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"KinTatHo"},"content":"You can unmark a task as completed.","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"KinTatHo"},"content":"#### `unmark` - Marks a task as done.","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"KinTatHo"},"content":"Example of usage:","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"KinTatHo"},"content":"`unmark 1`","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"KinTatHo"},"content":"Expected outcome:","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"KinTatHo"},"content":"Undone, this task remains:","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"KinTatHo"},"content":"[T][ ] read book","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"KinTatHo"},"content":"### `list` - Lists all tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"KinTatHo"},"content":"Shows a list of all tasks in the task manager.","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"KinTatHo"},"content":"`list`","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"KinTatHo"},"content":"Expected outcome:","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"KinTatHo"},"content":"Tasks in your list, here they are:","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"KinTatHo"},"content":"1. [T][X] read book","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"KinTatHo"},"content":"2. [D][ ] return book (by: Sunday)","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"KinTatHo"},"content":"3. [E][ ] project meeting (from: Monday 2pm to: 4pm)","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"KinTatHo"},"content":"### Deleting a Task","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"KinTatHo"},"content":"You can delete a task from your list.","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"KinTatHo"},"content":"#### `delete` - Deletes a task.","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"KinTatHo"},"content":"Example of usage:","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"KinTatHo"},"content":"`delete 1`","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"KinTatHo"},"content":"Removed, this task has been:","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"KinTatHo"},"content":"[T][X] read book","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"KinTatHo"},"content":"Tasks in the list, now you have 2, hmm.","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"KinTatHo"},"content":"### Exiting the Chatbot","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"KinTatHo"},"content":"You can exit the chatbot using the `bye` command.","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":99,"author":{"gitId":"KinTatHo"},"content":"#### `bye` - Exits the application.","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"KinTatHo"},"content":"Example of usage:","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"KinTatHo"},"content":"`bye`","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"KinTatHo"},"content":"Expected outcome:","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"KinTatHo"},"content":"Farewell. See you again, I hope!","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"-":26,"KinTatHo":79}},{"path":"src/main/java/yoda/Yoda.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"import yoda.parser.Parser;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"import yoda.storage.Storage;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"import yoda.task.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"import yoda.constants.FilePaths;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"import yoda.ui.YodaUI;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"public class Yoda {","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"    private YodaUI yodaUI;","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"    private String filePath \u003d FilePaths.RELATIVE_OUTPUT_TXT_FILE_PATH;","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"    public Yoda() {","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"            this.tasks \u003d storage.loadTasks();","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"        this.yodaUI \u003d new YodaUI(tasks, storage); // Initialize before passing to Parser","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"        this.parser \u003d new Parser(yodaUI);","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"     * Gets the greeting message to be displayed in the GUI.","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"     * @return Greeting message.","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"KinTatHo"},"content":"    public String getGreeting() {","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"        return yodaUI.printGreeting();","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"KinTatHo"},"content":"     * Generates a response to user input based on the command parsed.","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"KinTatHo"},"content":"     * @param input User input string.","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"KinTatHo"},"content":"     * @return Response to be displayed in the GUI.","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"KinTatHo"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"KinTatHo"},"content":"            String response \u003d parser.parseAndExecute(input);","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"KinTatHo"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"KinTatHo"},"content":"            return response;","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"KinTatHo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"KinTatHo"},"content":"            return \"An error occurred: \" + e.getMessage();","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"KinTatHo":53}},{"path":"src/main/java/yoda/components/Replies.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.components;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"public class Replies {","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"    private final String chatbotName;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"     * Constructor for Replies.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"     * @param chatbotName The name of the chatbot.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"    public Replies(String chatbotName) {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"        this.chatbotName \u003d chatbotName;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"     * Prints a message wrapped with lines for better readability.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"        printLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"        printLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"     * Prints a line for visual separation in the console output.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"    private void printLine() {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"        System.out.println(\"________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"     * Prints a greeting message when the chatbot starts.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"KinTatHo"},"content":"    public void printGreeting() {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"        printLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"        System.out.println(\"Greetings! \" + this.chatbotName + \", I am\\nAssist you, may I?\");","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"KinTatHo"},"content":"        printLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"KinTatHo":39}},{"path":"src/main/java/yoda/constants/FilePaths.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.constants;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":" * A class to store file paths for Yoda.","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"public class FilePaths {","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"    public static final String RELATIVE_DATA_DIRECTORY_PATH \u003d \"./data\";","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"    public static final String RELATIVE_OUTPUT_TXT_FILE_PATH \u003d \"./data/output.txt\";","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"KinTatHo":9}},{"path":"src/main/java/yoda/constants/Replies.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.constants;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"public class Replies {","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"    public static final String GREET \u003d \"Greetings! Yoda, I am\\nAssist you, may I?\";","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"    public static final String BYE \u003d \"Farewell. Be with you, may the force!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"    public static final String TASKS_SAVED \u003d \"Saved your tasks, I have.\";","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"    public static final String UNKNOWN_SEARCH_TERM \u003d \"Search term, provide you must.\";","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"    public static final String UNKNOWN_COMMAND \u003d \"Sorry, I am. What that means, I do not know :-(\";","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"    public static final String TASK_MARKED_DONE \u003d \"Marked as done, this task is:\";","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"    public static final String TASK_MARKED_UNDONE \u003d \"Undone, this task remains:\";","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"    public static final String TASK_UPDATED \u003d \"Updated, the task description is.\";","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"    public static final String TODO_UPDATE \u003d \"Enter \u0027description\u0027, you must.\";","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"    public static final String DEADLINE_UPDATE \u003d \"Enter \u0027description\u0027, or \u0027by time\u0027 you must.\";","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"    public static final String EVENT_UPDATE \u003d \"Enter \u0027description\u0027, \u0027from time\u0027 or \u0027to time\u0027 you must.\";","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"    public static final String AWAITING_DESCRIPTION_UPDATE \u003d \"New description, enter you must:\";","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"    public static final String AWAITING_DEADLINE_UPDATE \u003d \"New deadline (YYYY-MM-DD HH:MM, enter you must:\";","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"    public static final String AWAITING_EVENT_START_UPDATE \u003d \"New start time (YYYY-MM-DD HH:MM), enter you must:\";","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"    public static final String AWAITING_EVENT_END_UPDATE \u003d \"New end time (YYYY-MM-DD HH:MM), enter you must:\";","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"    public static final String INVALID_OPTION \u003d \"Invalid option. Enter a valid option for valid task, you must.\";","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"KinTatHo":23}},{"path":"src/main/java/yoda/constants/YodaExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.constants;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"public class YodaExceptions {","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"KinTatHo":4}},{"path":"src/main/java/yoda/datetimeutil/DateTimeUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.datetimeutil;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"import java.util.List;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"public class DateTimeUtil {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"    private static final List\u003cDateTimeFormatter\u003e FORMATTERS \u003d Arrays.asList(","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"dd MMM\"), // e.g., 30 Jan","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd\"), // e.g., Jan 30","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy\"), // e.g., Jan 30 2024","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"), // e.g., Jan 30 2024 1306","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"), // e.g., 2024-01-30","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"), // e.g., 2024-01-30 1306","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"d MMM yyyy\"), // e.g., 30 Jan 2024","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\"), // e.g., 30 Jan 2024 1306","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"d MMMM yyyy\"), // e.g., 30 January 2024","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"d MMMM yyyy HHmm\"), // e.g., 30 January 2024 1306","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"), // e.g., 30/01/2024","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"), // e.g., 30/01/2024 1306","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"), // e.g., 30-01-2024","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"), // e.g., 30-01-2024 1306","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"), // e.g., 2024/01/30","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\"), // e.g., 2024/01/30 1306","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"yyyyMMdd\"),   // e.g., 20240130","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"yyyyMMdd HHmm\")   // e.g., 20240130 1306","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"    );","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"    public static LocalDateTime parseDateTime(String dateTimeStr) throws DateTimeParseException {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"        for (DateTimeFormatter formatter : FORMATTERS) {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"                return LocalDateTime.parse(dateTimeStr, formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"KinTatHo"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"                // Try the next format","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"        throw new DateTimeParseException(\"Failed to parse date-time: \" + dateTimeStr, dateTimeStr, 0);","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"KinTatHo":41}},{"path":"src/main/java/yoda/exceptions/DescriptionAndTimeMissingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.exceptions;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"public class DescriptionAndTimeMissingException extends Exception {","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"     * Constructs a DescriptionAndTimeMissingException with a default message.","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"    public DescriptionAndTimeMissingException() {","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"        super(\"Description and time, both missing are. Provide both, you must.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"KinTatHo":10}},{"path":"src/main/java/yoda/exceptions/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.exceptions;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":" * Exception thrown when an attempt is made to create a task with an empty description.","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"     * Constructs an EmptyDescriptionException with a detailed message.","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"     * This exception is typically thrown when a task is created without a ","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"     * necessary description.","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"     * @param message A string providing details about the exception cause.","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"    public EmptyDescriptionException(String message) {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"        super(message); // Call to the superclass (Exception) constructor with the detailed message","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"KinTatHo":17}},{"path":"src/main/java/yoda/exceptions/InvalidDateTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.exceptions;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"public class InvalidDateTimeFormatException extends Exception{","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"     * Constructs an InvalidDateTimeFormatException with a default message.","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"    public InvalidDateTimeFormatException() {","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"        super(\"Invalid, the date format is. Use one of the accepted formats, you must.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"     * Constructs an InvalidDateTimeFormatException with the specified message.","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"     * @param message The message to be included in the exception.","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"    public InvalidDateTimeFormatException(String message) {","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"        super(message);","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"KinTatHo":20}},{"path":"src/main/java/yoda/exceptions/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.exceptions;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":" * Exception thrown when an invalid task operation is attempted.","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":" * This can occur in various scenarios such as trying to access a task","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":" * that doesn\u0027t exist or providing an invalid task number.","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"public class InvalidTaskException extends Exception {","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"     * Constructs an InvalidTaskException with a default message.","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"    public InvalidTaskException() {","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"        super(\"Valid task number, provide you must.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"KinTatHo":15}},{"path":"src/main/java/yoda/exceptions/TimeMissingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.exceptions;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":" * Exception thrown when a required time information is missing.","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":" * This can occur in scenarios such as creating a deadline or event task","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":" * without specifying the necessary time details.","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"public class TimeMissingException extends Exception {","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"     * Constructs a TimeMissingException with a detailed message.","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"     * This message provides information about the missing time detail, ","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"     * which is essential for certain types of tasks (e.g., deadlines, events).","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"    public TimeMissingException() {","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"        super(\"Required, the task time is, yes.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"     * Constructs a TimeMissingException with a customised message.","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"     * @param message provides information about the missing time detail","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"    public TimeMissingException(String message) {","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"        super(message);","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"KinTatHo":25}},{"path":"src/main/java/yoda/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.exceptions;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":" * Exception thrown when an unrecognized command is encountered.","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":" * This typically happens when user input does not match any of the expected commands.","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"     * Constructor for UnknownCommandException.","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"        super(\"Unknown command. Try again, you must.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"KinTatHo":14}},{"path":"src/main/java/yoda/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.gui;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"KinTatHo"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"KinTatHo"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"KinTatHo"},"content":"        // Set HBox to grow and fill as much space as possible","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"KinTatHo"},"content":"        HBox.setHgrow(this, Priority.ALWAYS);","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"KinTatHo"},"content":"        dialog.setWrapText(true); // Ensure text wraps within the label","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"KinTatHo"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"KinTatHo"},"content":"    private void flip() {","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"KinTatHo"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"KinTatHo"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"KinTatHo"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"KinTatHo"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"KinTatHo"},"content":"     * @param text","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"KinTatHo"},"content":"     * @param img","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"KinTatHo"},"content":"     * @return","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"KinTatHo"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"KinTatHo"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"KinTatHo"},"content":"     * @param text","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"KinTatHo"},"content":"     * @param img","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"KinTatHo"},"content":"     * @return","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"KinTatHo"},"content":"    public static DialogBox getYodaDialog(String text, Image img) {","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"KinTatHo"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"KinTatHo"},"content":"        db.flip();","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"KinTatHo"},"content":"        return db;","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"KinTatHo":79}},{"path":"src/main/java/yoda/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.gui;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"public class Launcher {","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"KinTatHo":12}},{"path":"src/main/java/yoda/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.gui;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"import yoda.Yoda;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"    private Yoda yoda \u003d new Yoda();","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"     * the application scene can be set.","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"     * Applications may create other stages, if needed, but they will not be","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"     * primary stages.","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"            Scene scene \u003d new Scene(ap, 800, 600);","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"            MainWindow controller \u003d fxmlLoader.getController();","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"            controller.setYoda(yoda);","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"KinTatHo"},"content":"            stage.setTitle(\"Yoda Chatbot\");","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"            stage.setFullScreen(true);","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"            stage.show();","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"KinTatHo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"KinTatHo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"KinTatHo"},"content":"        launch(args);","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"KinTatHo":46}},{"path":"src/main/java/yoda/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.gui;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"import yoda.Yoda;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"    private Yoda yoda;","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"    // Assuming images are stored under /resources/images/ within your project structure","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"    private Image yodaImage \u003d new Image(getClass().getResourceAsStream(\"/images/DaYoda.png\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"    private Image userImage \u003d new Image(getClass().getResourceAsStream(\"/images/DaDarthVader.png\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"        configureScrollPane();","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"        setupInputHandlers();","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"    private void configureScrollPane() {","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"KinTatHo"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"        // This ensures the scrollPane always scrolls to the bottom when new content is added","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1D));","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"KinTatHo"},"content":"    private void setupInputHandlers() {","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"KinTatHo"},"content":"        // Bind the handleUserInput method to the send button\u0027s click event","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"KinTatHo"},"content":"        sendButton.setOnMouseClicked(event -\u003e handleUserInput());","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"KinTatHo"},"content":"        // Bind the handleUserInput method to the text field\u0027s action event (e.g., pressing Enter)","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"KinTatHo"},"content":"        userInput.setOnAction(event -\u003e handleUserInput());","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"KinTatHo"},"content":"    public void setYoda(Yoda y) {","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"KinTatHo"},"content":"        this.yoda \u003d y;","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"KinTatHo"},"content":"        displayGreeting(); // Display the greeting message as soon as Yoda is set","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"KinTatHo"},"content":"    public void displayGreeting() {","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"KinTatHo"},"content":"        String greeting \u003d yoda.getGreeting();","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"KinTatHo"},"content":"        DialogBox greetingDialog \u003d DialogBox.getYodaDialog(greeting, yodaImage);","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"KinTatHo"},"content":"        dialogContainer.getChildren().add(greetingDialog);","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"KinTatHo"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"KinTatHo"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"KinTatHo"},"content":"        String input \u003d userInput.getText().trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"KinTatHo"},"content":"        if (!input.isEmpty()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"KinTatHo"},"content":"            String response \u003d yoda.getResponse(input);","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"KinTatHo"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"KinTatHo"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"KinTatHo"},"content":"                    DialogBox.getYodaDialog(response, yodaImage)","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"KinTatHo"},"content":"            );","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"KinTatHo"},"content":"            userInput.clear();","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"KinTatHo":72}},{"path":"src/main/java/yoda/parser/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":" * Enum representing the various commands that the Yoda chatbot can understand.","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"enum Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"    BYE,     // Command to end the chat session","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"    LIST,    // Command to list all tasks","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"    MARK,    // Command to mark a task as done","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"    UNMARK,  // Command to mark a task as not done","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"    TODO,    // Command to add a new \u0027Todo\u0027 task","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"    DEADLINE, // Command to add a new \u0027Deadline\u0027 task","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"    DELETE,  // Command to delete a task","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"    EVENT,   // Command to add a new \u0027Event\u0027 task","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"    UNKNOWN, // Represents an unrecognized command","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"    SAVE, // Command to save the current task list to disk","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"    FIND, // Command to find tasks by searching for keywords","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"    UPDATE; // Command to edit a task","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"     * Converts a string to its corresponding Command enum value. If the string","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"     * does not match any command, UNKNOWN is returned.","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"     * @param str The input string representing a command.","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"     * @return The corresponding Command enum value, or UNKNOWN if no match is found.","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"    public static Command fromString(String str) {","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"            return Command.valueOf(str.toUpperCase());","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"            return UNKNOWN; // Return UNKNOWN if the input string is not a valid command","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"KinTatHo":34}},{"path":"src/main/java/yoda/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"import yoda.constants.Replies;","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"import yoda.exceptions.DescriptionAndTimeMissingException;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"import yoda.exceptions.UnknownCommandException;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"import yoda.exceptions.InvalidTaskException;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"import yoda.exceptions.InvalidDateTimeFormatException;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"import yoda.exceptions.TimeMissingException;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"import yoda.task.Deadline;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"import yoda.task.Event;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"import yoda.task.Todo;","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"import yoda.task.TaskList;","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"import yoda.ui.YodaUI;","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"import yoda.datetimeutil.DateTimeUtil;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"public class Parser {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"    private final YodaUI YODA_UI;","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"     * Constructor for CommandParser.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"     * @param yodaUI The instance of YodaUI to interact with the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"    public Parser(YodaUI yodaUI) {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"        this.YODA_UI \u003d yodaUI;","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"     * Parses the user input and executes the corresponding command.","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"     * @param input The input string provided by the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"KinTatHo"},"content":"     * @throws Exception if an error occurs during command execution.","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"    public String parseAndExecute(String input) throws Exception {","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"KinTatHo"},"content":"        UpdateState updateState \u003d YODA_UI.getUpdateState();","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"        if (updateState !\u003d UpdateState.NONE) {","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"            return YODA_UI.handleUpdateState(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"KinTatHo"},"content":"        String[] parts \u003d getSplitParts(input);","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"KinTatHo"},"content":"        Command command;","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"KinTatHo"},"content":"            command \u003d Command.fromString(parts[0].toUpperCase());","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"KinTatHo"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"KinTatHo"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"KinTatHo"},"content":"            switch (command) {","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"KinTatHo"},"content":"            case BYE:","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"KinTatHo"},"content":"                return Replies.BYE;","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"KinTatHo"},"content":"            case LIST:","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"KinTatHo"},"content":"                return YODA_UI.showTasks();","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"KinTatHo"},"content":"            case SAVE:","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"KinTatHo"},"content":"                TaskList taskList \u003d YODA_UI.getTaskList();","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"KinTatHo"},"content":"                return YODA_UI.saveTasks(taskList);","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"KinTatHo"},"content":"            case DELETE:","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"KinTatHo"},"content":"                performTaskOperation(parts, YODA_UI::deleteTask);","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"KinTatHo"},"content":"            case FIND:","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"KinTatHo"},"content":"                if (parts.length \u003e 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"KinTatHo"},"content":"                    return YODA_UI.findTasks(parts[1]);","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"KinTatHo"},"content":"                } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"KinTatHo"},"content":"                    return Replies.UNKNOWN_SEARCH_TERM;","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"KinTatHo"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"KinTatHo"},"content":"            case MARK:","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"KinTatHo"},"content":"                return performTaskOperation(parts, YODA_UI::markTaskAsDone);","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"KinTatHo"},"content":"            case UNMARK:","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"KinTatHo"},"content":"                return performTaskOperation(parts, YODA_UI::markTaskAsUndone);","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"KinTatHo"},"content":"            case TODO:","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"KinTatHo"},"content":"                return YODA_UI.addTask(new Todo(parts[1]));","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"KinTatHo"},"content":"            case DEADLINE:","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"KinTatHo"},"content":"                return addTaskWithDateTime(parts, Command.DEADLINE);","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"KinTatHo"},"content":"            case EVENT:","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"KinTatHo"},"content":"                return addTaskWithDateTime(parts, Command.EVENT);","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"KinTatHo"},"content":"            case UPDATE:","lastModifiedDate":"2024-02-16"},{"lineNumber":77,"author":{"gitId":"KinTatHo"},"content":"                if (parts.length \u003e 1) {","lastModifiedDate":"2024-02-16"},{"lineNumber":78,"author":{"gitId":"KinTatHo"},"content":"                    int taskNumber \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"KinTatHo"},"content":"                    return YODA_UI.startUpdateProcess(taskNumber, input);","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"KinTatHo"},"content":"                } else {","lastModifiedDate":"2024-02-16"},{"lineNumber":81,"author":{"gitId":"KinTatHo"},"content":"                    return \"Task number, specify you must.\";","lastModifiedDate":"2024-02-16"},{"lineNumber":82,"author":{"gitId":"KinTatHo"},"content":"                }","lastModifiedDate":"2024-02-16"},{"lineNumber":83,"author":{"gitId":"KinTatHo"},"content":"            default:","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"KinTatHo"},"content":"                return Replies.UNKNOWN_COMMAND;","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"KinTatHo"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"KinTatHo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"KinTatHo"},"content":"            return \"Error occurred: \" + e.getMessage();","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":92,"author":{"gitId":"KinTatHo"},"content":"     * Splits the input string into two parts based on the first occurrence of whitespace.","lastModifiedDate":"2024-02-13"},{"lineNumber":93,"author":{"gitId":"KinTatHo"},"content":"     * @param input The input string to be split.","lastModifiedDate":"2024-02-13"},{"lineNumber":94,"author":{"gitId":"KinTatHo"},"content":"     * @return The split input string.","lastModifiedDate":"2024-02-13"},{"lineNumber":95,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":96,"author":{"gitId":"KinTatHo"},"content":"    private static String[] getSplitParts(String input) {","lastModifiedDate":"2024-02-13"},{"lineNumber":97,"author":{"gitId":"KinTatHo"},"content":"        String[] parts \u003d input.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2024-02-13"},{"lineNumber":98,"author":{"gitId":"KinTatHo"},"content":"        assert parts.length \u003e 0 : \"Input should be split into at least one part\";","lastModifiedDate":"2024-02-13"},{"lineNumber":99,"author":{"gitId":"KinTatHo"},"content":"        return parts;","lastModifiedDate":"2024-02-13"},{"lineNumber":100,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":101,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":102,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"KinTatHo"},"content":"     * Adds a task with a date and time to the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"KinTatHo"},"content":"     * @param parts The split input containing the command and task description.","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"KinTatHo"},"content":"     * @param commandType The type of task to add (deadline or event).","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"KinTatHo"},"content":"     * @throws Exception if the task description or time is missing.","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"KinTatHo"},"content":"    private String addTaskWithDateTime(String[] parts, Command commandType) throws Exception {","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"KinTatHo"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"KinTatHo"},"content":"            throw new DescriptionAndTimeMissingException();","lastModifiedDate":"2024-02-13"},{"lineNumber":111,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"KinTatHo"},"content":"        String[] taskParts \u003d getTaskParts(parts);","lastModifiedDate":"2024-02-13"},{"lineNumber":114,"author":{"gitId":"KinTatHo"},"content":"        if (taskParts.length \u003c 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"KinTatHo"},"content":"            throw new TimeMissingException();","lastModifiedDate":"2024-02-13"},{"lineNumber":116,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"KinTatHo"},"content":"        switch (commandType) {","lastModifiedDate":"2024-02-13"},{"lineNumber":119,"author":{"gitId":"KinTatHo"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-13"},{"lineNumber":120,"author":{"gitId":"KinTatHo"},"content":"            return addDeadlineTask(taskParts);","lastModifiedDate":"2024-02-13"},{"lineNumber":121,"author":{"gitId":"KinTatHo"},"content":"        case EVENT:","lastModifiedDate":"2024-02-13"},{"lineNumber":122,"author":{"gitId":"KinTatHo"},"content":"            return addEventTask(taskParts);","lastModifiedDate":"2024-02-13"},{"lineNumber":123,"author":{"gitId":"KinTatHo"},"content":"        default:","lastModifiedDate":"2024-02-13"},{"lineNumber":124,"author":{"gitId":"KinTatHo"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2024-02-13"},{"lineNumber":125,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":126,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":127,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":128,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":129,"author":{"gitId":"KinTatHo"},"content":"     * Parses the date and time from the input.","lastModifiedDate":"2024-02-13"},{"lineNumber":130,"author":{"gitId":"KinTatHo"},"content":"     * @param dateTimeStr The date and time string to be parsed.","lastModifiedDate":"2024-02-13"},{"lineNumber":131,"author":{"gitId":"KinTatHo"},"content":"     * @return The parsed date and time.","lastModifiedDate":"2024-02-13"},{"lineNumber":132,"author":{"gitId":"KinTatHo"},"content":"     * @throws InvalidDateTimeFormatException if the date and time string is invalid.","lastModifiedDate":"2024-02-13"},{"lineNumber":133,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":134,"author":{"gitId":"KinTatHo"},"content":"    private LocalDateTime parseDateTime(String dateTimeStr) throws InvalidDateTimeFormatException {","lastModifiedDate":"2024-02-13"},{"lineNumber":135,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"KinTatHo"},"content":"            return DateTimeUtil.parseDateTime(dateTimeStr);","lastModifiedDate":"2024-02-13"},{"lineNumber":137,"author":{"gitId":"KinTatHo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":138,"author":{"gitId":"KinTatHo"},"content":"            throw new InvalidDateTimeFormatException();","lastModifiedDate":"2024-02-13"},{"lineNumber":139,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":140,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":141,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":142,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":143,"author":{"gitId":"KinTatHo"},"content":"     * Adds a deadline task to the task list.","lastModifiedDate":"2024-02-13"},{"lineNumber":144,"author":{"gitId":"KinTatHo"},"content":"     * @param taskParts The split input containing the task description and time.","lastModifiedDate":"2024-02-13"},{"lineNumber":145,"author":{"gitId":"KinTatHo"},"content":"     * @return The task description and time parts.","lastModifiedDate":"2024-02-13"},{"lineNumber":146,"author":{"gitId":"KinTatHo"},"content":"     * @throws Exception if the task description or time is missing.","lastModifiedDate":"2024-02-13"},{"lineNumber":147,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":148,"author":{"gitId":"KinTatHo"},"content":"    private String addDeadlineTask(String[] taskParts) throws Exception {","lastModifiedDate":"2024-02-13"},{"lineNumber":149,"author":{"gitId":"KinTatHo"},"content":"        LocalDateTime by \u003d parseDateTime(taskParts[1]);","lastModifiedDate":"2024-02-13"},{"lineNumber":150,"author":{"gitId":"KinTatHo"},"content":"        return YODA_UI.addTask(new Deadline(taskParts[0], by));","lastModifiedDate":"2024-02-12"},{"lineNumber":151,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":152,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":153,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":154,"author":{"gitId":"KinTatHo"},"content":"     * Adds an event task to the task list.","lastModifiedDate":"2024-02-13"},{"lineNumber":155,"author":{"gitId":"KinTatHo"},"content":"     * @param taskParts The split input containing the task description and time.","lastModifiedDate":"2024-02-13"},{"lineNumber":156,"author":{"gitId":"KinTatHo"},"content":"     * @return The task description and time parts.","lastModifiedDate":"2024-02-13"},{"lineNumber":157,"author":{"gitId":"KinTatHo"},"content":"     * @throws Exception if the task description or time is missing.","lastModifiedDate":"2024-02-13"},{"lineNumber":158,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":159,"author":{"gitId":"KinTatHo"},"content":"    private String addEventTask(String[] taskParts) throws Exception {","lastModifiedDate":"2024-02-13"},{"lineNumber":160,"author":{"gitId":"KinTatHo"},"content":"        String[] timeParts \u003d getTimeParts(taskParts);","lastModifiedDate":"2024-02-13"},{"lineNumber":161,"author":{"gitId":"KinTatHo"},"content":"        if (timeParts.length \u003c 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":162,"author":{"gitId":"KinTatHo"},"content":"            throw new TimeMissingException(\"Required, the event end time is, yes.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":163,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":164,"author":{"gitId":"KinTatHo"},"content":"        LocalDateTime from \u003d parseDateTime(timeParts[0]);","lastModifiedDate":"2024-02-13"},{"lineNumber":165,"author":{"gitId":"KinTatHo"},"content":"        LocalDateTime to \u003d parseDateTime(timeParts[1]);","lastModifiedDate":"2024-02-13"},{"lineNumber":166,"author":{"gitId":"KinTatHo"},"content":"        return YODA_UI.addTask(new Event(taskParts[0], from, to));","lastModifiedDate":"2024-02-12"},{"lineNumber":167,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":168,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":169,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":170,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":171,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":172,"author":{"gitId":"KinTatHo"},"content":"     * Parses the time parts from the input.","lastModifiedDate":"2024-02-13"},{"lineNumber":173,"author":{"gitId":"KinTatHo"},"content":"     * @param taskParts The split input containing the task description and time.","lastModifiedDate":"2024-02-13"},{"lineNumber":174,"author":{"gitId":"KinTatHo"},"content":"     * @return The time parts of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":175,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":176,"author":{"gitId":"KinTatHo"},"content":"    private static String[] getTimeParts(String[] taskParts) {","lastModifiedDate":"2024-02-13"},{"lineNumber":177,"author":{"gitId":"KinTatHo"},"content":"        return taskParts[1].split(\" /to \", 2);","lastModifiedDate":"2024-02-13"},{"lineNumber":178,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":179,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":180,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":181,"author":{"gitId":"KinTatHo"},"content":"     * Parses the task description and time from the input.","lastModifiedDate":"2024-02-13"},{"lineNumber":182,"author":{"gitId":"KinTatHo"},"content":"     * @param parts The split input containing the command and task description.","lastModifiedDate":"2024-02-13"},{"lineNumber":183,"author":{"gitId":"KinTatHo"},"content":"     * @return The task description and time parts.","lastModifiedDate":"2024-02-13"},{"lineNumber":184,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":185,"author":{"gitId":"KinTatHo"},"content":"    private static String[] getTaskParts(String[] parts) {","lastModifiedDate":"2024-02-13"},{"lineNumber":186,"author":{"gitId":"KinTatHo"},"content":"        String[] taskParts \u003d parts[1].split(\" /by | /from \", 2);","lastModifiedDate":"2024-02-13"},{"lineNumber":187,"author":{"gitId":"KinTatHo"},"content":"        assert taskParts.length \u003d\u003d 2 : \"Task description and time should be present\";","lastModifiedDate":"2024-02-13"},{"lineNumber":188,"author":{"gitId":"KinTatHo"},"content":"        return taskParts;","lastModifiedDate":"2024-02-13"},{"lineNumber":189,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":190,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":191,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":192,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":193,"author":{"gitId":"KinTatHo"},"content":"     * Parses the task number from the user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":194,"author":{"gitId":"KinTatHo"},"content":"     * @param input The user input containing the task number.","lastModifiedDate":"2024-02-13"},{"lineNumber":195,"author":{"gitId":"KinTatHo"},"content":"     * @return The task number parsed from the input.","lastModifiedDate":"2024-02-13"},{"lineNumber":196,"author":{"gitId":"KinTatHo"},"content":"     * @throws InvalidTaskException if the task number is invalid.","lastModifiedDate":"2024-02-13"},{"lineNumber":197,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":198,"author":{"gitId":"KinTatHo"},"content":"    private int parseTaskNumber(String input) throws InvalidTaskException {","lastModifiedDate":"2024-02-13"},{"lineNumber":199,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":200,"author":{"gitId":"KinTatHo"},"content":"            int taskNumber \u003d Integer.parseInt(input);","lastModifiedDate":"2024-01-30"},{"lineNumber":201,"author":{"gitId":"KinTatHo"},"content":"            assert taskNumber \u003e 0 : \"Task number should be positive\";","lastModifiedDate":"2024-02-13"},{"lineNumber":202,"author":{"gitId":"KinTatHo"},"content":"            boolean taskLargerThanSize \u003d taskNumber \u003e YODA_UI.getTaskListSize();","lastModifiedDate":"2024-02-13"},{"lineNumber":203,"author":{"gitId":"KinTatHo"},"content":"            if (taskLargerThanSize) {","lastModifiedDate":"2024-02-13"},{"lineNumber":204,"author":{"gitId":"KinTatHo"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2024-02-13"},{"lineNumber":205,"author":{"gitId":"KinTatHo"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":206,"author":{"gitId":"KinTatHo"},"content":"            return taskNumber;","lastModifiedDate":"2024-01-30"},{"lineNumber":207,"author":{"gitId":"KinTatHo"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":208,"author":{"gitId":"KinTatHo"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2024-02-13"},{"lineNumber":209,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":210,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":211,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":212,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":213,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":214,"author":{"gitId":"KinTatHo"},"content":"     * Performs a task operation (delete, mark, unmark) based on the user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":215,"author":{"gitId":"KinTatHo"},"content":"     * @param parts The split input containing the command and task number.","lastModifiedDate":"2024-01-30"},{"lineNumber":216,"author":{"gitId":"KinTatHo"},"content":"     * @param operation The operation to be performed on the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":217,"author":{"gitId":"KinTatHo"},"content":"     * @throws InvalidTaskException if the task number is invalid.","lastModifiedDate":"2024-02-13"},{"lineNumber":218,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":219,"author":{"gitId":"KinTatHo"},"content":"    private String performTaskOperation(String[] parts, TaskOperation operation) throws InvalidTaskException {","lastModifiedDate":"2024-02-13"},{"lineNumber":220,"author":{"gitId":"KinTatHo"},"content":"        if (parts.length \u003e 1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":221,"author":{"gitId":"KinTatHo"},"content":"            int taskNumber \u003d this.parseTaskNumber(parts[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":222,"author":{"gitId":"KinTatHo"},"content":"            return operation.perform(taskNumber);","lastModifiedDate":"2024-02-13"},{"lineNumber":223,"author":{"gitId":"KinTatHo"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":224,"author":{"gitId":"KinTatHo"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2024-02-13"},{"lineNumber":225,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":226,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":227,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":228,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":229,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":230,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":231,"author":{"gitId":"KinTatHo"},"content":"     * Functional interface for task operations like delete, mark, and unmark.","lastModifiedDate":"2024-01-30"},{"lineNumber":232,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":233,"author":{"gitId":"KinTatHo"},"content":"    @FunctionalInterface","lastModifiedDate":"2024-01-30"},{"lineNumber":234,"author":{"gitId":"KinTatHo"},"content":"    private interface TaskOperation {","lastModifiedDate":"2024-01-30"},{"lineNumber":235,"author":{"gitId":"KinTatHo"},"content":"        String perform(int taskNumber) throws InvalidTaskException;","lastModifiedDate":"2024-02-13"},{"lineNumber":236,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":237,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":238,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"KinTatHo":238}},{"path":"src/main/java/yoda/parser/UpdateState.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.parser;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"public enum UpdateState {","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"    NONE,","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"    AWAITING_UPDATE_CHOICE,","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"    AWAITING_NEW_DESCRIPTION,","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"    AWAITING_NEW_DEADLINE,","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"    AWAITING_NEW_EVENT_START,","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"    AWAITING_NEW_EVENT_END;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"KinTatHo":10}},{"path":"src/main/java/yoda/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"import yoda.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"import yoda.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"import yoda.task.Todo;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"import yoda.task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"import yoda.task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"import yoda.datetimeutil.DateTimeUtil;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"import java.util.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"/** Represents the storage for tasks. */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"    private final String FILE_PATH;","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"    private final Path PATH;","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"     * Constructs a new Storage object.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"     * @param filePath The file path where tasks are stored.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"        this.FILE_PATH \u003d filePath;","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"KinTatHo"},"content":"        this.PATH \u003d Paths.get(filePath);","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"     * Saves the tasks to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"     * @param taskList The list of tasks to save.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"KinTatHo"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"KinTatHo"},"content":"    public void saveTasks(TaskList taskList) throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"KinTatHo"},"content":"        List\u003cString\u003e taskStrings \u003d taskList.stream()","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"KinTatHo"},"content":"                .map(this::taskToFileFormat)","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"KinTatHo"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"KinTatHo"},"content":"        if (isFileContentDifferent(taskStrings)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"KinTatHo"},"content":"            writeToFile(taskStrings);","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"KinTatHo"},"content":"     * Checks if the file content is different from the given list of task strings.","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"KinTatHo"},"content":"     * @param taskStrings The list of task strings to compare with the file content.","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"KinTatHo"},"content":"     * @return true if the file content is different, false otherwise.","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"KinTatHo"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"KinTatHo"},"content":"    private boolean isFileContentDifferent(List\u003cString\u003e taskStrings) throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"KinTatHo"},"content":"        boolean isFileJustCreated \u003d ensureFileExists();","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"KinTatHo"},"content":"        if (isFileJustCreated) {","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"KinTatHo"},"content":"            return true;","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"KinTatHo"},"content":"        List\u003cString\u003e fileContent \u003d Files.readAllLines(PATH);","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"KinTatHo"},"content":"        return !fileContent.equals(taskStrings);","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"KinTatHo"},"content":"     * Writes a list of task strings to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"KinTatHo"},"content":"     * @param taskStrings The list of task strings to be written.","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"KinTatHo"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"KinTatHo"},"content":"    private void writeToFile(List\u003cString\u003e taskStrings) throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"KinTatHo"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2024-02-08"},{"lineNumber":76,"author":{"gitId":"KinTatHo"},"content":"            for (String taskString : taskStrings) {","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"KinTatHo"},"content":"                writer.write(taskString + System.lineSeparator());","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"KinTatHo"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"KinTatHo"},"content":"     * Converts a Task object into a string format suitable for file storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"KinTatHo"},"content":"     * @param task The task to be converted.","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"KinTatHo"},"content":"     * @return The task in string format.","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"KinTatHo"},"content":"    public String taskToFileFormat(Task task) {","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"KinTatHo"},"content":"        String status \u003d task.getStatus();","lastModifiedDate":"2024-02-13"},{"lineNumber":90,"author":{"gitId":"KinTatHo"},"content":"        String type \u003d task.getType();","lastModifiedDate":"2024-02-13"},{"lineNumber":91,"author":{"gitId":"KinTatHo"},"content":"        String details \u003d task.toFileFormatDetails();","lastModifiedDate":"2024-02-13"},{"lineNumber":92,"author":{"gitId":"KinTatHo"},"content":"        return type + \" | \" + status + \" | \" + details;","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":96,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"KinTatHo"},"content":"     * Loads tasks from the file and returns them as a TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"KinTatHo"},"content":"     * @return The list of tasks loaded from the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"KinTatHo"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"KinTatHo"},"content":"    public TaskList loadTasks() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"KinTatHo"},"content":"        List\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"KinTatHo"},"content":"        ensureFileExists();","lastModifiedDate":"2024-02-13"},{"lineNumber":105,"author":{"gitId":"KinTatHo"},"content":"        try (BufferedReader reader \u003d Files.newBufferedReader(PATH)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":106,"author":{"gitId":"KinTatHo"},"content":"            String line;","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"KinTatHo"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"KinTatHo"},"content":"                Task task \u003d fileToTaskFormat(line);","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"KinTatHo"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"KinTatHo"},"content":"                    loadedTasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"KinTatHo"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"KinTatHo"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"KinTatHo"},"content":"        return new TaskList(loadedTasks);","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":118,"author":{"gitId":"KinTatHo"},"content":"     * Ensures the file exists and creates it if it does not.","lastModifiedDate":"2024-02-13"},{"lineNumber":119,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":120,"author":{"gitId":"KinTatHo"},"content":"     * @return true if the file was just created, false if it already existed.","lastModifiedDate":"2024-02-13"},{"lineNumber":121,"author":{"gitId":"KinTatHo"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-13"},{"lineNumber":122,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":123,"author":{"gitId":"KinTatHo"},"content":"    private boolean ensureFileExists() throws IOException {","lastModifiedDate":"2024-02-13"},{"lineNumber":124,"author":{"gitId":"KinTatHo"},"content":"        if (!Files.exists(PATH)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":125,"author":{"gitId":"KinTatHo"},"content":"            Files.createDirectories(PATH.getParent());","lastModifiedDate":"2024-02-13"},{"lineNumber":126,"author":{"gitId":"KinTatHo"},"content":"            Files.createFile(PATH);","lastModifiedDate":"2024-02-13"},{"lineNumber":127,"author":{"gitId":"KinTatHo"},"content":"            return true;","lastModifiedDate":"2024-02-13"},{"lineNumber":128,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":129,"author":{"gitId":"KinTatHo"},"content":"        return false;","lastModifiedDate":"2024-02-13"},{"lineNumber":130,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":131,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":132,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":133,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":134,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"KinTatHo"},"content":"     * Converts a line from the file into a Task object.","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"KinTatHo"},"content":"     * @param line The line from the file to be converted.","lastModifiedDate":"2024-02-03"},{"lineNumber":138,"author":{"gitId":"KinTatHo"},"content":"     * @return The task represented by the line.","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":140,"author":{"gitId":"KinTatHo"},"content":"    private Task fileToTaskFormat(String line) {","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"KinTatHo"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"KinTatHo"},"content":"        if (parts.length \u003c 3) return null; // Basic validation","lastModifiedDate":"2024-02-08"},{"lineNumber":143,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":144,"author":{"gitId":"KinTatHo"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"KinTatHo"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"KinTatHo"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"KinTatHo"},"content":"        switch (type) {","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"KinTatHo"},"content":"        case \"T\":","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"KinTatHo"},"content":"            return createTodoTask(isDone, description);","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"KinTatHo"},"content":"        case \"D\":","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"KinTatHo"},"content":"            if (parts.length \u003c 4) return null;","lastModifiedDate":"2024-02-13"},{"lineNumber":153,"author":{"gitId":"KinTatHo"},"content":"            return createDeadlineTask(isDone, description, parts[3]);","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"KinTatHo"},"content":"        case \"E\":","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"KinTatHo"},"content":"            if (parts.length \u003c 5) return null;","lastModifiedDate":"2024-02-13"},{"lineNumber":156,"author":{"gitId":"KinTatHo"},"content":"            return createEventTask(isDone, description, parts[3], parts[4]);","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"KinTatHo"},"content":"        default:","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"KinTatHo"},"content":"            return null;","lastModifiedDate":"2024-01-31"},{"lineNumber":159,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":160,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":161,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":162,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":163,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":164,"author":{"gitId":"KinTatHo"},"content":"     * Creates a Todo task from the given parameters.","lastModifiedDate":"2024-02-03"},{"lineNumber":165,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":166,"author":{"gitId":"KinTatHo"},"content":"     * @param isDone      Whether the task is done.","lastModifiedDate":"2024-02-03"},{"lineNumber":167,"author":{"gitId":"KinTatHo"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":168,"author":{"gitId":"KinTatHo"},"content":"     * @return The Todo task created.","lastModifiedDate":"2024-02-03"},{"lineNumber":169,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":170,"author":{"gitId":"KinTatHo"},"content":"    private Task createTodoTask(boolean isDone, String description) {","lastModifiedDate":"2024-01-31"},{"lineNumber":171,"author":{"gitId":"KinTatHo"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-01-31"},{"lineNumber":172,"author":{"gitId":"KinTatHo"},"content":"        if (isDone) todo.markAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":173,"author":{"gitId":"KinTatHo"},"content":"        return todo;","lastModifiedDate":"2024-01-31"},{"lineNumber":174,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":175,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":176,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":177,"author":{"gitId":"KinTatHo"},"content":"     * Creates a Deadline task from the given parameters.","lastModifiedDate":"2024-02-03"},{"lineNumber":178,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":179,"author":{"gitId":"KinTatHo"},"content":"     * @param isDone      Whether the task is done.","lastModifiedDate":"2024-02-03"},{"lineNumber":180,"author":{"gitId":"KinTatHo"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":181,"author":{"gitId":"KinTatHo"},"content":"     * @param by          The deadline of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":182,"author":{"gitId":"KinTatHo"},"content":"     * @return The Deadline task created.","lastModifiedDate":"2024-02-03"},{"lineNumber":183,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":184,"author":{"gitId":"KinTatHo"},"content":"    private Task createDeadlineTask(boolean isDone, String description, String by) {","lastModifiedDate":"2024-01-31"},{"lineNumber":185,"author":{"gitId":"KinTatHo"},"content":"        LocalDateTime byDateTime \u003d DateTimeUtil.parseDateTime(by);","lastModifiedDate":"2024-01-31"},{"lineNumber":186,"author":{"gitId":"KinTatHo"},"content":"        Deadline deadline \u003d new Deadline(description, byDateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":187,"author":{"gitId":"KinTatHo"},"content":"        if (isDone) deadline.markAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":188,"author":{"gitId":"KinTatHo"},"content":"        return deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":189,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":190,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":191,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":192,"author":{"gitId":"KinTatHo"},"content":"     * Creates an Event task from the given parameters.","lastModifiedDate":"2024-02-03"},{"lineNumber":193,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":194,"author":{"gitId":"KinTatHo"},"content":"     * @param isDone      Whether the task is done.","lastModifiedDate":"2024-02-03"},{"lineNumber":195,"author":{"gitId":"KinTatHo"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":196,"author":{"gitId":"KinTatHo"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":197,"author":{"gitId":"KinTatHo"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":198,"author":{"gitId":"KinTatHo"},"content":"     * @return The Event task created.","lastModifiedDate":"2024-02-03"},{"lineNumber":199,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":200,"author":{"gitId":"KinTatHo"},"content":"    private Task createEventTask(boolean isDone, String description, String from, String to) {","lastModifiedDate":"2024-01-31"},{"lineNumber":201,"author":{"gitId":"KinTatHo"},"content":"        LocalDateTime fromDateTime \u003d DateTimeUtil.parseDateTime(from);","lastModifiedDate":"2024-01-31"},{"lineNumber":202,"author":{"gitId":"KinTatHo"},"content":"        LocalDateTime toDateTime \u003d DateTimeUtil.parseDateTime(to);","lastModifiedDate":"2024-01-31"},{"lineNumber":203,"author":{"gitId":"KinTatHo"},"content":"        Event event \u003d new Event(description, fromDateTime, toDateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":204,"author":{"gitId":"KinTatHo"},"content":"        if (isDone) event.markAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":205,"author":{"gitId":"KinTatHo"},"content":"        return event;","lastModifiedDate":"2024-01-31"},{"lineNumber":206,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":207,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":208,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":209,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"KinTatHo":209}},{"path":"src/main/java/yoda/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":" * Represents a deadline task. It extends the Task class and adds a deadline time.","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"    private LocalDateTime by; // Deadline time for the task","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"     * Constructs a Deadline task with a description and a deadline time.","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"     * @param description A string describing the deadline task.","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"     * @param by A string representing the time by which the task should be completed.","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"        super(description); // Calls the constructor of the superclass Task","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"        this.by \u003d by;       // Sets the deadline time for this task","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"     * Returns the type of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"     * @return A string representing the type of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"    public String getType() {","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"        return \"D\";","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"     * Sets the new description of the task.","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"KinTatHo"},"content":"     * @param newDescription The new description for the task.","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"    @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"KinTatHo"},"content":"    public void setDescription(String newDescription) {","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"        super.setDescription(newDescription);","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"KinTatHo"},"content":"     * Retrieves the deadline time of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"KinTatHo"},"content":"     * @return The deadline time of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"KinTatHo"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"KinTatHo"},"content":"        return by;","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"KinTatHo"},"content":"     * Sets the deadline time of the task.","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"KinTatHo"},"content":"     * @param newBy The new deadline time for the task.","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"KinTatHo"},"content":"    public void setBy(LocalDateTime newBy) {","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"KinTatHo"},"content":"        this.by \u003d newBy;","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"KinTatHo"},"content":"     * Retrieves the deadline time of the task as a string.","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"KinTatHo"},"content":"     * @return The deadline time of the task as a string.","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"KinTatHo"},"content":"    public String getByString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"KinTatHo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"KinTatHo"},"content":"        return getBy().format(formatter);","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"KinTatHo"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"KinTatHo"},"content":"    public String toFileFormatDetails() {","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"KinTatHo"},"content":"        return getDescription() + \" | \" + getByString();","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"KinTatHo"},"content":"     * Returns a string representation of the deadline task, including its type,","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"KinTatHo"},"content":"     * description, and deadline time.","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"KinTatHo"},"content":"     * @return A formatted string with the type of task, its description, and the deadline.","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"KinTatHo"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"KinTatHo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"KinTatHo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"KinTatHo"},"content":"        return \"[\" + getType() + \"]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2024-02-16"},{"lineNumber":84,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"KinTatHo":85}},{"path":"src/main/java/yoda/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":" * Represents an event task.","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"    private LocalDateTime from; // Event starting time","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"    private LocalDateTime to; // Event ending time","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"     * Constructs an Event task with a description, start time, and end time.","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"     * @param description A string describing the event.","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"     * @param from A string representing the start time of the event.","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"     * @param to A string representing the end time of the event.","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"        super(description); // Calls the constructor of the superclass Task","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"     * Sets the new description of the task.","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"     * @param newDescription The new description for the task.","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"    @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"    public void setDescription(String newDescription) {","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"        super.setDescription(newDescription);","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"     * Returns the type of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"KinTatHo"},"content":"     * @return A string representing the type of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"KinTatHo"},"content":"    public String getType() {","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"KinTatHo"},"content":"        return \"E\";","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"KinTatHo"},"content":"     * Retrieves the start time of the event.","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"KinTatHo"},"content":"     * @return The start time of the event.","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"KinTatHo"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"KinTatHo"},"content":"        return from;","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"KinTatHo"},"content":"     * Sets the new start time of the event.","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"KinTatHo"},"content":"     * @param newFrom The new start time for the event.","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"KinTatHo"},"content":"    public void setFrom(LocalDateTime newFrom) {","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"KinTatHo"},"content":"        this.from \u003d newFrom;","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"KinTatHo"},"content":"     * Retrieves the start time of the event as a string.","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"KinTatHo"},"content":"     * @return The start time of the event as a string.","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"KinTatHo"},"content":"    public String getFromString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"KinTatHo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"KinTatHo"},"content":"        return getFrom().format(formatter);","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"KinTatHo"},"content":"     * Retrieves the end time of the event.","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"KinTatHo"},"content":"     * @return The end time of the event.","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"KinTatHo"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"KinTatHo"},"content":"        return to;","lastModifiedDate":"2024-02-16"},{"lineNumber":78,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":81,"author":{"gitId":"KinTatHo"},"content":"     * Sets the new end time of the event.","lastModifiedDate":"2024-02-16"},{"lineNumber":82,"author":{"gitId":"KinTatHo"},"content":"     * @param newTo The new end time for the event.","lastModifiedDate":"2024-02-16"},{"lineNumber":83,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":84,"author":{"gitId":"KinTatHo"},"content":"    public void setTo(LocalDateTime newTo) {","lastModifiedDate":"2024-02-16"},{"lineNumber":85,"author":{"gitId":"KinTatHo"},"content":"        this.to \u003d newTo;","lastModifiedDate":"2024-02-16"},{"lineNumber":86,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":87,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":88,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"KinTatHo"},"content":"     * Retrieves the end time of the event as a string.","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"KinTatHo"},"content":"     * @return The end time of the event as a string.","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"KinTatHo"},"content":"    public String getToString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"KinTatHo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"KinTatHo"},"content":"        return getTo().format(formatter);","lastModifiedDate":"2024-02-13"},{"lineNumber":96,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":98,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":99,"author":{"gitId":"KinTatHo"},"content":"     * Returns a string representation of the event, including its type,","lastModifiedDate":"2024-02-13"},{"lineNumber":100,"author":{"gitId":"KinTatHo"},"content":"     * @return","lastModifiedDate":"2024-02-13"},{"lineNumber":101,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":102,"author":{"gitId":"KinTatHo"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":103,"author":{"gitId":"KinTatHo"},"content":"    public String toFileFormatDetails() {","lastModifiedDate":"2024-02-13"},{"lineNumber":104,"author":{"gitId":"KinTatHo"},"content":"        // Event-specific format","lastModifiedDate":"2024-02-13"},{"lineNumber":105,"author":{"gitId":"KinTatHo"},"content":"        return getDescription() + \" | \" + getFromString() + \" to \" + getToString();","lastModifiedDate":"2024-02-13"},{"lineNumber":106,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":107,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":108,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"KinTatHo"},"content":"     * Returns a string representation of the event.","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":111,"author":{"gitId":"KinTatHo"},"content":"     * @return A formatted string with the type of task, its description,","lastModifiedDate":"2024-01-27"},{"lineNumber":112,"author":{"gitId":"KinTatHo"},"content":"     *         start time, and end time.","lastModifiedDate":"2024-01-27"},{"lineNumber":113,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":114,"author":{"gitId":"KinTatHo"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":115,"author":{"gitId":"KinTatHo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":116,"author":{"gitId":"KinTatHo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"KinTatHo"},"content":"        return \"[\" + getType() + \"]\" + super.toString() + \" (from: \" + from.format(formatter) + \" to: \" + to.format(formatter) + \")\";","lastModifiedDate":"2024-02-16"},{"lineNumber":118,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":119,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"KinTatHo":119}},{"path":"src/main/java/yoda/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":" * Represents a generic task with a description and a completion status.","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":" * This is an abstract class to be extended by specific types of tasks.","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"    private String description; // Description of the task","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"    private boolean isDone;           // Flag to track if the task is done","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"     * Constructs a Task with the given description. By default, the task is not done.","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"    protected Task(String description) {","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"        this.isDone \u003d false; // Task is not done by default","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"        return this.description;","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"     * Gets the status of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"KinTatHo"},"content":"     * @return true if the task is done, false otherwise.","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"KinTatHo"},"content":"        return this.isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"KinTatHo"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"KinTatHo"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"KinTatHo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"KinTatHo"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"KinTatHo"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"KinTatHo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"KinTatHo"},"content":"     * Abstract method to return the type of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"KinTatHo"},"content":"     * Subclasses must provide their own implementation.","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"KinTatHo"},"content":"     * @return The type of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"KinTatHo"},"content":"    public abstract String getType();","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"KinTatHo"},"content":"     * Sets the new description of the task.","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"KinTatHo"},"content":"     * @param newDescription The new description for the task.","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":66,"author":{"gitId":"KinTatHo"},"content":"    public void setDescription(String newDescription) {","lastModifiedDate":"2024-02-16"},{"lineNumber":67,"author":{"gitId":"KinTatHo"},"content":"        this.description \u003d newDescription;","lastModifiedDate":"2024-02-16"},{"lineNumber":68,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"KinTatHo"},"content":"     * Returns the status of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"KinTatHo"},"content":"     * @return \"1\" if the task is done, \"0\" otherwise.","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"KinTatHo"},"content":"    public String getStatus() {","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"KinTatHo"},"content":"        return (isDone ? \"1\" : \"0\");","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"KinTatHo"},"content":"     * Returns a string representation of the event, including its type,","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"KinTatHo"},"content":"    public abstract String toFileFormatDetails();","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"KinTatHo"},"content":"     * Returns a string representation of the task, including its done status and description.","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"KinTatHo"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"KinTatHo"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"KinTatHo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"KinTatHo"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + this.getDescription();","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"KinTatHo":93}},{"path":"src/main/java/yoda/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"import yoda.constants.Replies;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"import yoda.exceptions.InvalidTaskException;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"import yoda.parser.UpdateState;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":" * Represents a list of tasks. It provides operations to add, delete, and retrieve tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"    private final List\u003cTask\u003e TASKS; // List to store the tasks","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"        this.TASKS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"    public TaskList(List\u003cTask\u003e loadedTasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"        this.TASKS \u003d loadedTasks !\u003d null ? new ArrayList\u003c\u003e(loadedTasks) : new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"            TASKS.add(task);","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"KinTatHo"},"content":"     * Finds a task from the list.","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"     * @param keyword The keyword to search for in the task descriptions.","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"     * @return A string containing the tasks found with the keyword.","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"    public String findTasks(String keyword) {","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"        List\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"KinTatHo"},"content":"        for (Task task : TASKS) {","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"KinTatHo"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"KinTatHo"},"content":"                foundTasks.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"KinTatHo"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"KinTatHo"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"KinTatHo"},"content":"        if (foundTasks.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"KinTatHo"},"content":"            response.append(\"No tasks found with the keyword: \").append(keyword);","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"KinTatHo"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"KinTatHo"},"content":"            response.append(\"Tasks found with the keyword: \").append(keyword).append(\"\\n\");","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"KinTatHo"},"content":"            for (int i \u003d 0; i \u003c foundTasks.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"KinTatHo"},"content":"                response.append(i + 1).append(\".\").append(foundTasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"KinTatHo"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"KinTatHo"},"content":"        return response.toString();","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"KinTatHo"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"KinTatHo"},"content":"     * @param taskNumber The number of the task to be deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"KinTatHo"},"content":"     * @throws InvalidTaskException If the task number is invalid.","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"KinTatHo"},"content":"    public String deleteTask(int taskNumber) throws InvalidTaskException {","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"KinTatHo"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e TASKS.size()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"KinTatHo"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"KinTatHo"},"content":"        TASKS.remove(taskNumber - 1);","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"KinTatHo"},"content":"        return \"Removed, this task has been:\\nNow you have \" + this.getSize() + \" tasks in the list.\";","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"KinTatHo"},"content":"//","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"KinTatHo"},"content":"     * Marks a task as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"KinTatHo"},"content":"     * @param taskNumber The number of the task to mark as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"KinTatHo"},"content":"     * @throws InvalidTaskException If the task number is invalid.","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"KinTatHo"},"content":"    public String markTaskAsDone(int taskNumber) throws InvalidTaskException {","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"KinTatHo"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e TASKS.size()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"KinTatHo"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"KinTatHo"},"content":"            Task task \u003d this.getTask(taskNumber);","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"KinTatHo"},"content":"            task.markAsDone();","lastModifiedDate":"2024-02-13"},{"lineNumber":86,"author":{"gitId":"KinTatHo"},"content":"            return Replies.TASK_MARKED_DONE + \"\\n\" + task;","lastModifiedDate":"2024-02-13"},{"lineNumber":87,"author":{"gitId":"KinTatHo"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":88,"author":{"gitId":"KinTatHo"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-13"},{"lineNumber":89,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"KinTatHo"},"content":"     * @param taskNumber The number of the task to mark as not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"KinTatHo"},"content":"     * @return The response to marking a task as undone.","lastModifiedDate":"2024-02-13"},{"lineNumber":95,"author":{"gitId":"KinTatHo"},"content":"     * @throws InvalidTaskException If the task number is invalid.","lastModifiedDate":"2024-02-13"},{"lineNumber":96,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"KinTatHo"},"content":"    public String markTaskAsUndone(int taskNumber) throws InvalidTaskException {","lastModifiedDate":"2024-02-13"},{"lineNumber":98,"author":{"gitId":"KinTatHo"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e TASKS.size()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"KinTatHo"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2024-02-13"},{"lineNumber":100,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":101,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":102,"author":{"gitId":"KinTatHo"},"content":"            Task task \u003d this.getTask(taskNumber);","lastModifiedDate":"2024-02-13"},{"lineNumber":103,"author":{"gitId":"KinTatHo"},"content":"            task.markAsUndone();","lastModifiedDate":"2024-02-13"},{"lineNumber":104,"author":{"gitId":"KinTatHo"},"content":"            return Replies.TASK_MARKED_UNDONE + \"\\n\" + task;","lastModifiedDate":"2024-02-13"},{"lineNumber":105,"author":{"gitId":"KinTatHo"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":106,"author":{"gitId":"KinTatHo"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-13"},{"lineNumber":107,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"KinTatHo"},"content":"     * Retrieves a task from the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"KinTatHo"},"content":"     * @param taskNumber The number of the task to retrieve.","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"KinTatHo"},"content":"     * @return The task at the specified position.","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"KinTatHo"},"content":"     * @throws InvalidTaskException If the task number is invalid.","lastModifiedDate":"2024-02-13"},{"lineNumber":115,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"KinTatHo"},"content":"    public Task getTask(int taskNumber) throws InvalidTaskException {","lastModifiedDate":"2024-02-13"},{"lineNumber":117,"author":{"gitId":"KinTatHo"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e TASKS.size()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":118,"author":{"gitId":"KinTatHo"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2024-02-13"},{"lineNumber":119,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"KinTatHo"},"content":"        return TASKS.get(taskNumber - 1);","lastModifiedDate":"2024-02-08"},{"lineNumber":121,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"KinTatHo"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"KinTatHo"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"KinTatHo"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-13"},{"lineNumber":128,"author":{"gitId":"KinTatHo"},"content":"        return TASKS.size();","lastModifiedDate":"2024-02-08"},{"lineNumber":129,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"KinTatHo"},"content":"     * Checks if the list is empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"KinTatHo"},"content":"     * @return true if the list is empty, false otherwise.","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"KinTatHo"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"KinTatHo"},"content":"        return TASKS.isEmpty();","lastModifiedDate":"2024-02-08"},{"lineNumber":137,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":140,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"KinTatHo"},"content":"     * Returns a stream of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"KinTatHo"},"content":"     * @return A stream of Task objects.","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"KinTatHo"},"content":"    public Stream\u003cTask\u003e stream() {","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"KinTatHo"},"content":"        return TASKS.stream();","lastModifiedDate":"2024-02-08"},{"lineNumber":146,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"KinTatHo"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"KinTatHo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"KinTatHo"},"content":"        if (TASKS.isEmpty()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":151,"author":{"gitId":"KinTatHo"},"content":"            return \"Empty, your task list is.\";","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"KinTatHo"},"content":"        StringBuilder response \u003d new StringBuilder(\"Tasks in your list, here they are:\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"KinTatHo"},"content":"        for (int i \u003d 0; i \u003c TASKS.size(); i++) {","lastModifiedDate":"2024-02-08"},{"lineNumber":156,"author":{"gitId":"KinTatHo"},"content":"            response.append(i + 1).append(\".\").append(TASKS.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-08"},{"lineNumber":157,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"KinTatHo"},"content":"        return response.toString().trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":159,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":160,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":161,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"KinTatHo":161}},{"path":"src/main/java/yoda/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":" * Represents a \"Todo\" task. It is a simple task with only a description.","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"     * Constructs a todo task with the given description.","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"     * @param description A string describing the todo task.","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"        super(description); // Call to the superclass (Task) constructor","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"     * Returns the type of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"     * @return A string representing the type of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"    public String getType() {","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"        return \"T\";","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"     * Sets the new description of the task.","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"     * @param newDescription The new description for the task.","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"    @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"    public void setDescription(String newDescription) {","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"KinTatHo"},"content":"        super.setDescription(newDescription);","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"     * Returns a string representation of the event, including its type,","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"     * @return","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"KinTatHo"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"KinTatHo"},"content":"    public String toFileFormatDetails() {","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"KinTatHo"},"content":"        return getDescription();","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"KinTatHo"},"content":"     * Returns a string representation of the todo task.","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"KinTatHo"},"content":"     * The method overrides the Task class\u0027s toString method to add the specific","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"KinTatHo"},"content":"     * identifier for Todo tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"KinTatHo"},"content":"     * @return A formatted string representing the todo task,","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"KinTatHo"},"content":"     *         prefixed with \"[T]\" to denote a Todo type task.","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"KinTatHo"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"KinTatHo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"KinTatHo"},"content":"        return \"[\" + getType() + \"]\" + super.toString(); // Adding the Todo identifier to the string representation","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"KinTatHo":58}},{"path":"src/main/java/yoda/ui/YodaUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.ui;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"import yoda.exceptions.InvalidTaskException;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"import yoda.parser.UpdateState;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"import yoda.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"import yoda.task.Deadline;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"import yoda.task.Event;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"import yoda.task.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"import yoda.constants.Replies;","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"import yoda.storage.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"import yoda.datetimeutil.DateTimeUtil;","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"public class YodaUI {","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"    private final TaskList TASKLIST;","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"    private final Storage STORAGE;","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"    private int updatingTaskNumber \u003d -1;","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"    private UpdateState updateState \u003d UpdateState.NONE;","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"    private Task taskToUpdate;","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"     * Constructor to initialize the chat bot with a TaskList, and a Storage.","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"     * @param taskList The TaskList object to manage tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"     * @param storage The Storage object for handling task persistence.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"    public YodaUI(TaskList taskList, Storage storage) {","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"        this.TASKLIST \u003d taskList;","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"        this.STORAGE \u003d storage;","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"     * Marks a task as done.","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"KinTatHo"},"content":"     * Delegates to TaskList to mark a task as done.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"     * @param taskNumber The number of the task to mark as done.","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"KinTatHo"},"content":"    public String markTaskAsDone(int taskNumber) {","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"KinTatHo"},"content":"            return TASKLIST.markTaskAsDone(taskNumber);","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"KinTatHo"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"KinTatHo"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"KinTatHo"},"content":"     * Marks a task as undone.","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"KinTatHo"},"content":"     * Delegates to TaskList to mark a task as undone.","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"KinTatHo"},"content":"     * @param taskNumber The number of the task to mark as not done.","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"KinTatHo"},"content":"    public String markTaskAsUndone(int taskNumber) {","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"KinTatHo"},"content":"            return TASKLIST.markTaskAsUndone(taskNumber);","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"KinTatHo"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"KinTatHo"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"KinTatHo"},"content":"     * Gets the number of tasks in the list.","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"KinTatHo"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"KinTatHo"},"content":"    public int getTaskListSize() {","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"KinTatHo"},"content":"        return TASKLIST.getSize();","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"KinTatHo"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"KinTatHo"},"content":"        return this.TASKLIST;","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"KinTatHo"},"content":"     * Finds tasks that match the search term.","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"KinTatHo"},"content":"     * Delegates to TaskList to find tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"KinTatHo"},"content":"     * @param searchTerm The search term to match tasks against.","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"KinTatHo"},"content":"    public String findTasks(String searchTerm) {","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"KinTatHo"},"content":"        return TASKLIST.findTasks(searchTerm);","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"KinTatHo"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"KinTatHo"},"content":"     * Delegates to TaskList to delete a task.","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"KinTatHo"},"content":"     * @param taskNumber The number of the task to be deleted.","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"KinTatHo"},"content":"    public String deleteTask(int taskNumber) {","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"KinTatHo"},"content":"            return TASKLIST.deleteTask(taskNumber);","lastModifiedDate":"2024-02-13"},{"lineNumber":91,"author":{"gitId":"KinTatHo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"KinTatHo"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"KinTatHo"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-02-13"},{"lineNumber":98,"author":{"gitId":"KinTatHo"},"content":"     * Delegates to TaskList to add a task.","lastModifiedDate":"2024-02-13"},{"lineNumber":99,"author":{"gitId":"KinTatHo"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"KinTatHo"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"KinTatHo"},"content":"        TASKLIST.addTask(task);","lastModifiedDate":"2024-02-08"},{"lineNumber":103,"author":{"gitId":"KinTatHo"},"content":"        return \"Hmm, added this task, I have:\\n\" + task + \"\\nTasks in the list, now you have \" + TASKLIST.getSize() + \", hmm.\";","lastModifiedDate":"2024-02-13"},{"lineNumber":104,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"KinTatHo"},"content":"     * Displays all the tasks in the list.","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"KinTatHo"},"content":"     * Delegates to TaskList to get the string representation of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"KinTatHo"},"content":"    public String showTasks() {","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"KinTatHo"},"content":"        return TASKLIST.toString();","lastModifiedDate":"2024-02-12"},{"lineNumber":112,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":113,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":114,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":115,"author":{"gitId":"KinTatHo"},"content":"     * Saves the tasks to the file.","lastModifiedDate":"2024-02-13"},{"lineNumber":116,"author":{"gitId":"KinTatHo"},"content":"     * Delegates to Storage to save the tasks.","lastModifiedDate":"2024-02-13"},{"lineNumber":117,"author":{"gitId":"KinTatHo"},"content":"     * @param taskList The TaskList to be saved.","lastModifiedDate":"2024-02-13"},{"lineNumber":118,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":119,"author":{"gitId":"KinTatHo"},"content":"    public String saveTasks(TaskList taskList) {","lastModifiedDate":"2024-02-12"},{"lineNumber":120,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"KinTatHo"},"content":"            STORAGE.saveTasks(taskList);","lastModifiedDate":"2024-02-08"},{"lineNumber":122,"author":{"gitId":"KinTatHo"},"content":"            return Replies.TASKS_SAVED;","lastModifiedDate":"2024-02-13"},{"lineNumber":123,"author":{"gitId":"KinTatHo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"KinTatHo"},"content":"            return \"Error saving tasks: \" + e.getMessage();","lastModifiedDate":"2024-02-12"},{"lineNumber":125,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":126,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":127,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":128,"author":{"gitId":"KinTatHo"},"content":"    /** Sets the task number to be updated.","lastModifiedDate":"2024-02-16"},{"lineNumber":129,"author":{"gitId":"KinTatHo"},"content":"     * @param taskNumber The number of the task to be updated.","lastModifiedDate":"2024-02-16"},{"lineNumber":130,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":131,"author":{"gitId":"KinTatHo"},"content":"    public void setUpdatingTaskNumber(int taskNumber) {","lastModifiedDate":"2024-02-16"},{"lineNumber":132,"author":{"gitId":"KinTatHo"},"content":"        this.updatingTaskNumber \u003d taskNumber;","lastModifiedDate":"2024-02-16"},{"lineNumber":133,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":134,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":135,"author":{"gitId":"KinTatHo"},"content":"    /** Sets the current state of the update process.","lastModifiedDate":"2024-02-16"},{"lineNumber":136,"author":{"gitId":"KinTatHo"},"content":"     * @param state The current state of the update process.","lastModifiedDate":"2024-02-16"},{"lineNumber":137,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":138,"author":{"gitId":"KinTatHo"},"content":"    public void setUpdateState(UpdateState state) {","lastModifiedDate":"2024-02-16"},{"lineNumber":139,"author":{"gitId":"KinTatHo"},"content":"        this.updateState \u003d state;","lastModifiedDate":"2024-02-16"},{"lineNumber":140,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":141,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":142,"author":{"gitId":"KinTatHo"},"content":"    /** Gets the number of the task to be updated.","lastModifiedDate":"2024-02-16"},{"lineNumber":143,"author":{"gitId":"KinTatHo"},"content":"     * @return The number of the task to be updated.","lastModifiedDate":"2024-02-16"},{"lineNumber":144,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":145,"author":{"gitId":"KinTatHo"},"content":"    public int getUpdatingTaskNumber() {","lastModifiedDate":"2024-02-16"},{"lineNumber":146,"author":{"gitId":"KinTatHo"},"content":"        return this.updatingTaskNumber;","lastModifiedDate":"2024-02-16"},{"lineNumber":147,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":148,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":149,"author":{"gitId":"KinTatHo"},"content":"    /** Gets the current state of the update process.","lastModifiedDate":"2024-02-16"},{"lineNumber":150,"author":{"gitId":"KinTatHo"},"content":"     * @return The current state of the update process.","lastModifiedDate":"2024-02-16"},{"lineNumber":151,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":152,"author":{"gitId":"KinTatHo"},"content":"    public UpdateState getUpdateState() {","lastModifiedDate":"2024-02-16"},{"lineNumber":153,"author":{"gitId":"KinTatHo"},"content":"        return this.updateState;","lastModifiedDate":"2024-02-16"},{"lineNumber":154,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":155,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":156,"author":{"gitId":"KinTatHo"},"content":"    /** Starts the process of updating a task.","lastModifiedDate":"2024-02-16"},{"lineNumber":157,"author":{"gitId":"KinTatHo"},"content":"     * @param taskNumber The number of the task to be updated.","lastModifiedDate":"2024-02-16"},{"lineNumber":158,"author":{"gitId":"KinTatHo"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2024-02-16"},{"lineNumber":159,"author":{"gitId":"KinTatHo"},"content":"     * @return The response to be displayed in the GUI.","lastModifiedDate":"2024-02-16"},{"lineNumber":160,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":161,"author":{"gitId":"KinTatHo"},"content":"    public String startUpdateProcess(int taskNumber, String input) {","lastModifiedDate":"2024-02-16"},{"lineNumber":162,"author":{"gitId":"KinTatHo"},"content":"        setUpdatingTaskNumber(taskNumber);","lastModifiedDate":"2024-02-16"},{"lineNumber":163,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":164,"author":{"gitId":"KinTatHo"},"content":"            taskToUpdate \u003d TASKLIST.getTask(updatingTaskNumber);","lastModifiedDate":"2024-02-16"},{"lineNumber":165,"author":{"gitId":"KinTatHo"},"content":"            String typeOfTask \u003d taskToUpdate.getType();","lastModifiedDate":"2024-02-16"},{"lineNumber":166,"author":{"gitId":"KinTatHo"},"content":"            switch (typeOfTask) {","lastModifiedDate":"2024-02-16"},{"lineNumber":167,"author":{"gitId":"KinTatHo"},"content":"            case \"T\":","lastModifiedDate":"2024-02-16"},{"lineNumber":168,"author":{"gitId":"KinTatHo"},"content":"                updateState \u003d UpdateState.AWAITING_UPDATE_CHOICE;","lastModifiedDate":"2024-02-16"},{"lineNumber":169,"author":{"gitId":"KinTatHo"},"content":"                return Replies.TODO_UPDATE;","lastModifiedDate":"2024-02-16"},{"lineNumber":170,"author":{"gitId":"KinTatHo"},"content":"            case \"D\":","lastModifiedDate":"2024-02-16"},{"lineNumber":171,"author":{"gitId":"KinTatHo"},"content":"                updateState \u003d UpdateState.AWAITING_UPDATE_CHOICE;","lastModifiedDate":"2024-02-16"},{"lineNumber":172,"author":{"gitId":"KinTatHo"},"content":"                return Replies.DEADLINE_UPDATE;","lastModifiedDate":"2024-02-16"},{"lineNumber":173,"author":{"gitId":"KinTatHo"},"content":"            case \"E\":","lastModifiedDate":"2024-02-16"},{"lineNumber":174,"author":{"gitId":"KinTatHo"},"content":"                updateState \u003d UpdateState.AWAITING_UPDATE_CHOICE;","lastModifiedDate":"2024-02-16"},{"lineNumber":175,"author":{"gitId":"KinTatHo"},"content":"                return Replies.EVENT_UPDATE;","lastModifiedDate":"2024-02-16"},{"lineNumber":176,"author":{"gitId":"KinTatHo"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":177,"author":{"gitId":"KinTatHo"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":178,"author":{"gitId":"KinTatHo"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-16"},{"lineNumber":179,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":180,"author":{"gitId":"KinTatHo"},"content":"        return Replies.UNKNOWN_COMMAND;","lastModifiedDate":"2024-02-16"},{"lineNumber":181,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":182,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":183,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":184,"author":{"gitId":"KinTatHo"},"content":"     * Handles the update process for a task.","lastModifiedDate":"2024-02-16"},{"lineNumber":185,"author":{"gitId":"KinTatHo"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2024-02-16"},{"lineNumber":186,"author":{"gitId":"KinTatHo"},"content":"     * @return The response to be displayed in the GUI.","lastModifiedDate":"2024-02-16"},{"lineNumber":187,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":188,"author":{"gitId":"KinTatHo"},"content":"    public String handleUpdateState(String input) {","lastModifiedDate":"2024-02-16"},{"lineNumber":189,"author":{"gitId":"KinTatHo"},"content":"        String response;","lastModifiedDate":"2024-02-16"},{"lineNumber":190,"author":{"gitId":"KinTatHo"},"content":"        switch (updateState) {","lastModifiedDate":"2024-02-16"},{"lineNumber":191,"author":{"gitId":"KinTatHo"},"content":"        case AWAITING_UPDATE_CHOICE:","lastModifiedDate":"2024-02-16"},{"lineNumber":192,"author":{"gitId":"KinTatHo"},"content":"            response \u003d processUpdateChoice(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":193,"author":{"gitId":"KinTatHo"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":194,"author":{"gitId":"KinTatHo"},"content":"        case AWAITING_NEW_DESCRIPTION:","lastModifiedDate":"2024-02-16"},{"lineNumber":195,"author":{"gitId":"KinTatHo"},"content":"            response \u003d updateDescription(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":196,"author":{"gitId":"KinTatHo"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":197,"author":{"gitId":"KinTatHo"},"content":"        case AWAITING_NEW_DEADLINE:","lastModifiedDate":"2024-02-16"},{"lineNumber":198,"author":{"gitId":"KinTatHo"},"content":"            response \u003d updateDeadline(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":199,"author":{"gitId":"KinTatHo"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":200,"author":{"gitId":"KinTatHo"},"content":"        case AWAITING_NEW_EVENT_START:","lastModifiedDate":"2024-02-16"},{"lineNumber":201,"author":{"gitId":"KinTatHo"},"content":"        case AWAITING_NEW_EVENT_END:","lastModifiedDate":"2024-02-16"},{"lineNumber":202,"author":{"gitId":"KinTatHo"},"content":"            response \u003d updateEventTimes(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":203,"author":{"gitId":"KinTatHo"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":204,"author":{"gitId":"KinTatHo"},"content":"        default:","lastModifiedDate":"2024-02-16"},{"lineNumber":205,"author":{"gitId":"KinTatHo"},"content":"            response \u003d Replies.UNKNOWN_COMMAND;","lastModifiedDate":"2024-02-16"},{"lineNumber":206,"author":{"gitId":"KinTatHo"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":207,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":208,"author":{"gitId":"KinTatHo"},"content":"        return response;","lastModifiedDate":"2024-02-16"},{"lineNumber":209,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":210,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":211,"author":{"gitId":"KinTatHo"},"content":"    /** Processes the user\u0027s choice of what to update for a task.","lastModifiedDate":"2024-02-16"},{"lineNumber":212,"author":{"gitId":"KinTatHo"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2024-02-16"},{"lineNumber":213,"author":{"gitId":"KinTatHo"},"content":"     * @return The response to be displayed in the GUI.","lastModifiedDate":"2024-02-16"},{"lineNumber":214,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":215,"author":{"gitId":"KinTatHo"},"content":"    private String processUpdateChoice(String input) {","lastModifiedDate":"2024-02-16"},{"lineNumber":216,"author":{"gitId":"KinTatHo"},"content":"        Task task;","lastModifiedDate":"2024-02-16"},{"lineNumber":217,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":218,"author":{"gitId":"KinTatHo"},"content":"            task \u003d TASKLIST.getTask(updatingTaskNumber);","lastModifiedDate":"2024-02-16"},{"lineNumber":219,"author":{"gitId":"KinTatHo"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":220,"author":{"gitId":"KinTatHo"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-16"},{"lineNumber":221,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":222,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":223,"author":{"gitId":"KinTatHo"},"content":"        switch (input.toLowerCase()) {","lastModifiedDate":"2024-02-16"},{"lineNumber":224,"author":{"gitId":"KinTatHo"},"content":"        case \"description\":","lastModifiedDate":"2024-02-16"},{"lineNumber":225,"author":{"gitId":"KinTatHo"},"content":"            setUpdateState(UpdateState.AWAITING_NEW_DESCRIPTION);","lastModifiedDate":"2024-02-16"},{"lineNumber":226,"author":{"gitId":"KinTatHo"},"content":"            return Replies.AWAITING_DESCRIPTION_UPDATE;","lastModifiedDate":"2024-02-16"},{"lineNumber":227,"author":{"gitId":"KinTatHo"},"content":"        case \"by time\":","lastModifiedDate":"2024-02-16"},{"lineNumber":228,"author":{"gitId":"KinTatHo"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2024-02-16"},{"lineNumber":229,"author":{"gitId":"KinTatHo"},"content":"                setUpdateState(UpdateState.AWAITING_NEW_DEADLINE);","lastModifiedDate":"2024-02-16"},{"lineNumber":230,"author":{"gitId":"KinTatHo"},"content":"                return Replies.AWAITING_DEADLINE_UPDATE;","lastModifiedDate":"2024-02-16"},{"lineNumber":231,"author":{"gitId":"KinTatHo"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":232,"author":{"gitId":"KinTatHo"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":233,"author":{"gitId":"KinTatHo"},"content":"        case \"from time\":","lastModifiedDate":"2024-02-16"},{"lineNumber":234,"author":{"gitId":"KinTatHo"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2024-02-16"},{"lineNumber":235,"author":{"gitId":"KinTatHo"},"content":"                setUpdateState(UpdateState.AWAITING_NEW_EVENT_START);","lastModifiedDate":"2024-02-16"},{"lineNumber":236,"author":{"gitId":"KinTatHo"},"content":"                return Replies.AWAITING_EVENT_START_UPDATE;","lastModifiedDate":"2024-02-16"},{"lineNumber":237,"author":{"gitId":"KinTatHo"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":238,"author":{"gitId":"KinTatHo"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":239,"author":{"gitId":"KinTatHo"},"content":"        case \"to time\":","lastModifiedDate":"2024-02-16"},{"lineNumber":240,"author":{"gitId":"KinTatHo"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2024-02-16"},{"lineNumber":241,"author":{"gitId":"KinTatHo"},"content":"                setUpdateState(UpdateState.AWAITING_NEW_EVENT_END);","lastModifiedDate":"2024-02-16"},{"lineNumber":242,"author":{"gitId":"KinTatHo"},"content":"                return Replies.AWAITING_EVENT_END_UPDATE;","lastModifiedDate":"2024-02-16"},{"lineNumber":243,"author":{"gitId":"KinTatHo"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":244,"author":{"gitId":"KinTatHo"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":245,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":246,"author":{"gitId":"KinTatHo"},"content":"        return Replies.INVALID_OPTION;","lastModifiedDate":"2024-02-16"},{"lineNumber":247,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":248,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":249,"author":{"gitId":"KinTatHo"},"content":"    /** Updates the description of a task.","lastModifiedDate":"2024-02-16"},{"lineNumber":250,"author":{"gitId":"KinTatHo"},"content":"     * @param newDescription The new description to be updated.","lastModifiedDate":"2024-02-16"},{"lineNumber":251,"author":{"gitId":"KinTatHo"},"content":"     * @return The response to be displayed in the GUI.","lastModifiedDate":"2024-02-16"},{"lineNumber":252,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":253,"author":{"gitId":"KinTatHo"},"content":"    private String updateDescription(String newDescription) {","lastModifiedDate":"2024-02-16"},{"lineNumber":254,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":255,"author":{"gitId":"KinTatHo"},"content":"            Task task \u003d TASKLIST.getTask(updatingTaskNumber);","lastModifiedDate":"2024-02-16"},{"lineNumber":256,"author":{"gitId":"KinTatHo"},"content":"            task.setDescription(newDescription);","lastModifiedDate":"2024-02-16"},{"lineNumber":257,"author":{"gitId":"KinTatHo"},"content":"            setUpdateState(UpdateState.NONE);","lastModifiedDate":"2024-02-16"},{"lineNumber":258,"author":{"gitId":"KinTatHo"},"content":"            setUpdatingTaskNumber(-1);","lastModifiedDate":"2024-02-16"},{"lineNumber":259,"author":{"gitId":"KinTatHo"},"content":"            return Replies.TASK_UPDATED;","lastModifiedDate":"2024-02-16"},{"lineNumber":260,"author":{"gitId":"KinTatHo"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":261,"author":{"gitId":"KinTatHo"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-16"},{"lineNumber":262,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":263,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":264,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":265,"author":{"gitId":"KinTatHo"},"content":"    /** Updates the deadline of a deadline task.","lastModifiedDate":"2024-02-16"},{"lineNumber":266,"author":{"gitId":"KinTatHo"},"content":"     * @param newDeadline The new deadline to be updated.","lastModifiedDate":"2024-02-16"},{"lineNumber":267,"author":{"gitId":"KinTatHo"},"content":"     * @return The response to be displayed in the GUI.","lastModifiedDate":"2024-02-16"},{"lineNumber":268,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":269,"author":{"gitId":"KinTatHo"},"content":"    private String updateDeadline(String newDeadline) {","lastModifiedDate":"2024-02-16"},{"lineNumber":270,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":271,"author":{"gitId":"KinTatHo"},"content":"            Task task \u003d TASKLIST.getTask(updatingTaskNumber);","lastModifiedDate":"2024-02-16"},{"lineNumber":272,"author":{"gitId":"KinTatHo"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2024-02-16"},{"lineNumber":273,"author":{"gitId":"KinTatHo"},"content":"                LocalDateTime byDateTime \u003d DateTimeUtil.parseDateTime(newDeadline);","lastModifiedDate":"2024-02-16"},{"lineNumber":274,"author":{"gitId":"KinTatHo"},"content":"                ((Deadline) task).setBy(byDateTime);","lastModifiedDate":"2024-02-16"},{"lineNumber":275,"author":{"gitId":"KinTatHo"},"content":"                setUpdateState(UpdateState.NONE);","lastModifiedDate":"2024-02-16"},{"lineNumber":276,"author":{"gitId":"KinTatHo"},"content":"                return \"Updated, the task deadline is.\";","lastModifiedDate":"2024-02-16"},{"lineNumber":277,"author":{"gitId":"KinTatHo"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":278,"author":{"gitId":"KinTatHo"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":279,"author":{"gitId":"KinTatHo"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-16"},{"lineNumber":280,"author":{"gitId":"KinTatHo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":281,"author":{"gitId":"KinTatHo"},"content":"            return \"Invalid date/time format, provide you must.\";","lastModifiedDate":"2024-02-16"},{"lineNumber":282,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":283,"author":{"gitId":"KinTatHo"},"content":"        return \"Invalid task type, this is.\";","lastModifiedDate":"2024-02-16"},{"lineNumber":284,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":285,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":286,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":287,"author":{"gitId":"KinTatHo"},"content":"     * Updates the start and end times of an event task.","lastModifiedDate":"2024-02-16"},{"lineNumber":288,"author":{"gitId":"KinTatHo"},"content":"     * @param newTime The new start or end time to be updated.","lastModifiedDate":"2024-02-16"},{"lineNumber":289,"author":{"gitId":"KinTatHo"},"content":"     * @return The response to be displayed in the GUI.","lastModifiedDate":"2024-02-16"},{"lineNumber":290,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":291,"author":{"gitId":"KinTatHo"},"content":"    private String updateEventTimes(String newTime) {","lastModifiedDate":"2024-02-16"},{"lineNumber":292,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":293,"author":{"gitId":"KinTatHo"},"content":"            Task task \u003d TASKLIST.getTask(updatingTaskNumber);","lastModifiedDate":"2024-02-16"},{"lineNumber":294,"author":{"gitId":"KinTatHo"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2024-02-16"},{"lineNumber":295,"author":{"gitId":"KinTatHo"},"content":"                LocalDateTime newDateTime \u003d DateTimeUtil.parseDateTime(newTime);","lastModifiedDate":"2024-02-16"},{"lineNumber":296,"author":{"gitId":"KinTatHo"},"content":"                if (updateState \u003d\u003d UpdateState.AWAITING_NEW_EVENT_START) {","lastModifiedDate":"2024-02-16"},{"lineNumber":297,"author":{"gitId":"KinTatHo"},"content":"                    ((Event) task).setFrom(newDateTime);","lastModifiedDate":"2024-02-16"},{"lineNumber":298,"author":{"gitId":"KinTatHo"},"content":"                    setUpdateState(UpdateState.AWAITING_NEW_EVENT_END);","lastModifiedDate":"2024-02-16"},{"lineNumber":299,"author":{"gitId":"KinTatHo"},"content":"                    return \"New end time (YYYY-MM-DD HH:MM), enter you must:\";","lastModifiedDate":"2024-02-16"},{"lineNumber":300,"author":{"gitId":"KinTatHo"},"content":"                } else {","lastModifiedDate":"2024-02-16"},{"lineNumber":301,"author":{"gitId":"KinTatHo"},"content":"                    ((Event) task).setTo(newDateTime);","lastModifiedDate":"2024-02-16"},{"lineNumber":302,"author":{"gitId":"KinTatHo"},"content":"                    setUpdateState(UpdateState.NONE);","lastModifiedDate":"2024-02-16"},{"lineNumber":303,"author":{"gitId":"KinTatHo"},"content":"                    return \"Updated, the task event times are.\";","lastModifiedDate":"2024-02-16"},{"lineNumber":304,"author":{"gitId":"KinTatHo"},"content":"                }","lastModifiedDate":"2024-02-16"},{"lineNumber":305,"author":{"gitId":"KinTatHo"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":306,"author":{"gitId":"KinTatHo"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":307,"author":{"gitId":"KinTatHo"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-16"},{"lineNumber":308,"author":{"gitId":"KinTatHo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":309,"author":{"gitId":"KinTatHo"},"content":"            return \"Invalid date/time format, provide you must.\";","lastModifiedDate":"2024-02-16"},{"lineNumber":310,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":311,"author":{"gitId":"KinTatHo"},"content":"        return \"Invalid task type, this is.\";","lastModifiedDate":"2024-02-16"},{"lineNumber":312,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":313,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":314,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":315,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":316,"author":{"gitId":"KinTatHo"},"content":"     * Constructs a greeting message when the chatbot starts.","lastModifiedDate":"2024-02-12"},{"lineNumber":317,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":318,"author":{"gitId":"KinTatHo"},"content":"     * @return A string containing the formatted greeting message.","lastModifiedDate":"2024-02-12"},{"lineNumber":319,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":320,"author":{"gitId":"KinTatHo"},"content":"    public String printGreeting() {","lastModifiedDate":"2024-02-12"},{"lineNumber":321,"author":{"gitId":"KinTatHo"},"content":"        return Replies.GREET;","lastModifiedDate":"2024-02-13"},{"lineNumber":322,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":323,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":324,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":325,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"KinTatHo":325}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"KinTatHo":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"yoda.gui.MainWindow\"\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"600.0\" prefWidth\u003d\"588.0\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"KinTatHo":19}},{"path":"src/test/java/yoda/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"    public void addTask_newTask_taskAdded() throws Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"        TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"        Todo todo \u003d new Todo(\"Read book\");","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"        assertEquals(todo, taskList.getTask(1));","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"    public void addTask_nullTask_noChange() {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"        TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"        taskList.addTask(null);","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"KinTatHo":29}},{"path":"src/test/java/yoda/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"    public void todoConstructor_description_correctStringRepresentation() {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"        String description \u003d \"Read book\";","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"        assertEquals(\"[T][ ] Read book\", todo.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"    public void toString_notDone_todoString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"        Todo todo \u003d new Todo(\"Complete assignment\");","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"        assertEquals(\"[T][ ] Complete assignment\", todo.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"    public void toString_done_todoString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"        Todo todo \u003d new Todo(\"Finish homework\");","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"        todo.markAsDone();","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"        assertEquals(\"[T][X] Finish homework\", todo.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"KinTatHo":28}},{"path":"text-ui-test/data/yoda.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"T | 1 | read book","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"D | 0 | return book | Jun 6 2024 1800","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"T | 1 | join sports club","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"T | 1 | borrow book","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"T | 0 | sleep","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"D | 0 | return book | Jun 6 2024 1800","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"T | 0 | join sports club","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"T | 0 | borrow book","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"T | 0 | sleep","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"D | 0 | return book | Jun 6 2024 1800","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"E | 0 | project meeting | Aug 6 2024 1400 to Aug 6 2024 1600","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"T | 0 | join sports club","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"T | 0 | borrow book","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"T | 0 | sleep","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"KinTatHo":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"list","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"find book","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"deadline return book /by 6 June 2024 1800","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"event project meeting /from 6 Aug 2024 1400 /to 6 Aug 2024 1600","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"todo join sports club","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"todo borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"mark 4","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"todo sleep","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"save","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"KinTatHo":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"java -classpath ..\\bin yoda.Yoda \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"KinTatHo":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/yoda/*.java","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"java -classpath ../bin Yoda \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"KinTatHo":2}}]
