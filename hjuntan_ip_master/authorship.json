[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"    mainClass.set(\"toothless.Launcher\")","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"    archiveFileName \u003d \u0027toothless.jar\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"    archiveBaseName \u003d \"toothless\"","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hjuntan":18,"-":30}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"# **Toothless User Guide**","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"Toothless is a desktop app for managing tasks, optimized for use via a Command Line Interface (CLI). It is a chatbot that helps you keep track of your tasks. ","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"It is ~~a simple~~ an easy-to-use task manager that is optimized for use via a CLI while still having the benefits of a Graphical User Interface (GUI). ","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"If you can type fast, Toothless can get your tasks managed faster than traditional GUI apps.","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"- [Features](#features)","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"  - [Notes about the command format](#notes-about-the-command-format)","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"  - [Adding todos: `todo`](#adding-todos-todo)","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"  - [Adding deadlines: `deadline`](#adding-deadlines-deadline)","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"  - [Adding events: `event`](#adding-events-event)","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"  - [List out all tasks: `list`](#list-out-all-tasks-list)","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"  - [View tasks in the form of a schedule: `schedule`](#view-tasks-in-the-form-of-a-schedule-schedule)","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"  - [Find tasks by keyword: `find`](#find-tasks-by-keyword-find)","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"  - [Mark a task as done: `mark`](#mark-a-task-as-done-mark)","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"  - [Mark a task as not done: `unmark`](#mark-a-task-as-not-done-unmark)","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"  - [Delete a task: `delete`](#delete-a-task-delete)","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"  - [Goodbye Toothless: `bye`](#goodbye-toothless-bye)","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"- [Saving the data](#saving-the-data)","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"- [Command summary](#command-summary)","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"- [Acknowledgements](#acknowledgements)","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"## Quick Start","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"2. Download the latest `toothless.jar` from [here]() to your computer.","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"3. Copy the file to the folder you want to use as the home folder for your Toothless.","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"4. Open a command terminal and `cd` to the home folder. Then run `java -jar toothless.jar` to start the app.","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"5. A GUI similar to the below should appear in a few seconds. Note that the GUI is not interactive and is for illustration purposes only.","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"![Screenshot of Toothless application](Ui.png)","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"6. Type the command in the command box and press Enter to execute it. e.g. typing `list` and pressing Enter will list all the tasks in the task list.","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"## Features","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"### Notes about the command format","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"\u003e [!TIP]","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"\u003e - Words in `\u003cangle_brackets\u003e` are the parameters to be supplied by the user.","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"    e.g. in `todo \u003ctask description\u003e`, `\u003ctask description\u003e` is a parameter which can be used as `todo read book`.","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"\u003e - Commands with multiple parameters must be specified in the correct order.","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"  e.g. `event \u003ctask description\u003e /from \u003cdate\u003e /to \u003cdate\u003e` must be specified in that exact order.","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"\u003e - Extraneous parameters for commands that do not take in parameters (such as `list` and `bye`) will be ignored.","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"  e.g. if the command specifies `list 123`, it will be interpreted as `list`.","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"\u003e - Commands are case-insensitive.","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"  e.g. `todo` and `ToDo` are equivalent.","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"\u003e - Commands must be mentioned in full.","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"  e.g. `t` is not a valid command.","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"hjuntan"},"content":"\u003e - Commands that are not recognized will be ignored.","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"  e.g. `blah` is not a valid command.","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"\u003e - Commands with invalid parameters will be ignored.","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"hjuntan"},"content":"  e.g. `todo` without a description will be ignored.","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"hjuntan"},"content":"\u003e - Commands use the 24-hour clock format for time.","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"hjuntan"},"content":"  e.g. `22:00` is 10pm.","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"hjuntan"},"content":"\u003e - Commands do not support the use of the `|` character.","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"hjuntan"},"content":"### Adding todos: `todo`","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":61,"author":{"gitId":"hjuntan"},"content":"This command adds a todo task to the task list.","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":63,"author":{"gitId":"hjuntan"},"content":"\u003e Format: `todo \u003ctask description\u003e`","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"hjuntan"},"content":"Example: `todo read book`","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"hjuntan"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"hjuntan"},"content":"Toothless adds this task:","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"hjuntan"},"content":"[T][ ] read book","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"hjuntan"},"content":"Human has N tasks now.","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"hjuntan"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"hjuntan"},"content":"where `N` is the number of tasks currently in the list.","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"hjuntan"},"content":"### Adding deadlines: `deadline`","lastModifiedDate":"2024-02-21"},{"lineNumber":75,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"hjuntan"},"content":"This command adds a deadline task to the task list.","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"hjuntan"},"content":"\u003e Format: `deadline \u003ctask description\u003e /by \u003cdate\u003e`","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"hjuntan"},"content":"\u003e ","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"hjuntan"},"content":"\u003e Do note that the `\u003cdate\u003e` should be in the format `YYYY-MM-DD HH:mm`","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"hjuntan"},"content":"Example: `deadline essay assignment /by 2024-02-20 22:00`","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"hjuntan"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"hjuntan"},"content":"Toothless adds this task:","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"hjuntan"},"content":"[D][ ] essay assignment (by: Feb 20 2024 22:00)","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"hjuntan"},"content":"Human has N tasks now.","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"hjuntan"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"hjuntan"},"content":"where `N` is the number of tasks currently in the list.","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"hjuntan"},"content":"### Adding events: `event`","lastModifiedDate":"2024-02-21"},{"lineNumber":92,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"hjuntan"},"content":"This command adds an event task to the task list.","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"hjuntan"},"content":"\u003e Format: `event \u003ctask description\u003e /from \u003cdate\u003e /to \u003cdate\u003e`","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"hjuntan"},"content":"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"hjuntan"},"content":"\u003e Do note that the `\u003cdate\u003e` should be in the format `YYYY-MM-DD HH:mm`","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"hjuntan"},"content":"Example: `event project meeting /from 2024-02-20 22:00 /to 2024-02-20 23:00`","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":101,"author":{"gitId":"hjuntan"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":102,"author":{"gitId":"hjuntan"},"content":"Toothless adds this task:","lastModifiedDate":"2024-02-20"},{"lineNumber":103,"author":{"gitId":"hjuntan"},"content":"[E][ ] project meeting (from: Feb 20 2024 22:00 to: Feb 20 2024 23:00)","lastModifiedDate":"2024-02-20"},{"lineNumber":104,"author":{"gitId":"hjuntan"},"content":"Human has N tasks now.","lastModifiedDate":"2024-02-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":106,"author":{"gitId":"hjuntan"},"content":"where `N` is the number of tasks currently in the list.","lastModifiedDate":"2024-02-20"},{"lineNumber":107,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":108,"author":{"gitId":"hjuntan"},"content":"### List out all tasks: `list`","lastModifiedDate":"2024-02-21"},{"lineNumber":109,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":110,"author":{"gitId":"hjuntan"},"content":"This command lists out all the tasks in the task list.","lastModifiedDate":"2024-02-20"},{"lineNumber":111,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":112,"author":{"gitId":"hjuntan"},"content":"\u003e Format: `list`","lastModifiedDate":"2024-02-20"},{"lineNumber":113,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":114,"author":{"gitId":"hjuntan"},"content":"Example: `list`","lastModifiedDate":"2024-02-20"},{"lineNumber":115,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":116,"author":{"gitId":"hjuntan"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":117,"author":{"gitId":"hjuntan"},"content":"Here all human tasks:","lastModifiedDate":"2024-02-20"},{"lineNumber":118,"author":{"gitId":"hjuntan"},"content":"1. [T][ ] read book","lastModifiedDate":"2024-02-20"},{"lineNumber":119,"author":{"gitId":"hjuntan"},"content":"2. [D][ ] essay assignment (by: Feb 20 2024 22:00)","lastModifiedDate":"2024-02-20"},{"lineNumber":120,"author":{"gitId":"hjuntan"},"content":"3. [E][ ] project meeting (from: Feb 20 2024 22:00 to: Feb 20 2024 23:00)","lastModifiedDate":"2024-02-20"},{"lineNumber":121,"author":{"gitId":"hjuntan"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":122,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":123,"author":{"gitId":"hjuntan"},"content":"### View tasks in the form of a schedule: `schedule`","lastModifiedDate":"2024-02-21"},{"lineNumber":124,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":125,"author":{"gitId":"hjuntan"},"content":"This command lists out all the tasks in the task list in the form of a schedule.","lastModifiedDate":"2024-02-20"},{"lineNumber":126,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":127,"author":{"gitId":"hjuntan"},"content":"\u003e Format: `schedule`","lastModifiedDate":"2024-02-20"},{"lineNumber":128,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":129,"author":{"gitId":"hjuntan"},"content":"The tasks are grouped by date.","lastModifiedDate":"2024-02-20"},{"lineNumber":130,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":131,"author":{"gitId":"hjuntan"},"content":"The tasks are sorted by time within each date.","lastModifiedDate":"2024-02-20"},{"lineNumber":132,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":133,"author":{"gitId":"hjuntan"},"content":"All tasks without a date are grouped under the date `No Date`.","lastModifiedDate":"2024-02-20"},{"lineNumber":134,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":135,"author":{"gitId":"hjuntan"},"content":"Example: `schedule`","lastModifiedDate":"2024-02-20"},{"lineNumber":136,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":138,"author":{"gitId":"hjuntan"},"content":"Tasks on Feb 20 2024:","lastModifiedDate":"2024-02-20"},{"lineNumber":139,"author":{"gitId":"hjuntan"},"content":"1. [D][ ] essay assignment (by: Feb 20 2024 22:00)","lastModifiedDate":"2024-02-20"},{"lineNumber":140,"author":{"gitId":"hjuntan"},"content":"2. [E][ ] project meeting (from: Feb 20 2024 22:00 to: Feb 20 2024 23:00)","lastModifiedDate":"2024-02-20"},{"lineNumber":141,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":142,"author":{"gitId":"hjuntan"},"content":"Tasks without a date:","lastModifiedDate":"2024-02-20"},{"lineNumber":143,"author":{"gitId":"hjuntan"},"content":"1. [T][ ] read book","lastModifiedDate":"2024-02-20"},{"lineNumber":144,"author":{"gitId":"hjuntan"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":145,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":146,"author":{"gitId":"hjuntan"},"content":"### Find tasks by keyword: `find`","lastModifiedDate":"2024-02-21"},{"lineNumber":147,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":148,"author":{"gitId":"hjuntan"},"content":"This command finds tasks in the task list that contain the keyword.","lastModifiedDate":"2024-02-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":150,"author":{"gitId":"hjuntan"},"content":"\u003e Format: `find \u003ckeyword\u003e`","lastModifiedDate":"2024-02-20"},{"lineNumber":151,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":152,"author":{"gitId":"hjuntan"},"content":"The keyword is case-sensitive.","lastModifiedDate":"2024-02-20"},{"lineNumber":153,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":154,"author":{"gitId":"hjuntan"},"content":"The keyword can be a substring of the task description.","lastModifiedDate":"2024-02-20"},{"lineNumber":155,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":156,"author":{"gitId":"hjuntan"},"content":"Example: `find book`","lastModifiedDate":"2024-02-20"},{"lineNumber":157,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":158,"author":{"gitId":"hjuntan"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":159,"author":{"gitId":"hjuntan"},"content":"Toothless have found these same tasks:","lastModifiedDate":"2024-02-20"},{"lineNumber":160,"author":{"gitId":"hjuntan"},"content":"1. [T][ ] read book","lastModifiedDate":"2024-02-20"},{"lineNumber":161,"author":{"gitId":"hjuntan"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":162,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":163,"author":{"gitId":"hjuntan"},"content":"### Mark a task as done: `mark`","lastModifiedDate":"2024-02-21"},{"lineNumber":164,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":165,"author":{"gitId":"hjuntan"},"content":"This command marks a task as done.","lastModifiedDate":"2024-02-20"},{"lineNumber":166,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":167,"author":{"gitId":"hjuntan"},"content":"\u003e Format: `mark \u003ctask number\u003e`","lastModifiedDate":"2024-02-20"},{"lineNumber":168,"author":{"gitId":"hjuntan"},"content":"\u003e ","lastModifiedDate":"2024-02-20"},{"lineNumber":169,"author":{"gitId":"hjuntan"},"content":"\u003e Do note that the `\u003ctask number\u003e` should be a valid task number in the list.","lastModifiedDate":"2024-02-20"},{"lineNumber":170,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":171,"author":{"gitId":"hjuntan"},"content":"The task number can be obtained by using the `list` command.","lastModifiedDate":"2024-02-20"},{"lineNumber":172,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":173,"author":{"gitId":"hjuntan"},"content":"Example: `mark 1`","lastModifiedDate":"2024-02-20"},{"lineNumber":174,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":175,"author":{"gitId":"hjuntan"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":176,"author":{"gitId":"hjuntan"},"content":"Toothless marks this task as done:","lastModifiedDate":"2024-02-20"},{"lineNumber":177,"author":{"gitId":"hjuntan"},"content":"[T][X] read book","lastModifiedDate":"2024-02-20"},{"lineNumber":178,"author":{"gitId":"hjuntan"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":179,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":180,"author":{"gitId":"hjuntan"},"content":"### Mark a task as not done: `unmark`","lastModifiedDate":"2024-02-21"},{"lineNumber":181,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":182,"author":{"gitId":"hjuntan"},"content":"This command marks a task as not done.","lastModifiedDate":"2024-02-20"},{"lineNumber":183,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":184,"author":{"gitId":"hjuntan"},"content":"\u003e Format: `unmark \u003ctask number\u003e`","lastModifiedDate":"2024-02-20"},{"lineNumber":185,"author":{"gitId":"hjuntan"},"content":"\u003e ","lastModifiedDate":"2024-02-20"},{"lineNumber":186,"author":{"gitId":"hjuntan"},"content":"\u003e Do note that the `\u003ctask number\u003e` should be a valid task number in the list.","lastModifiedDate":"2024-02-20"},{"lineNumber":187,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":188,"author":{"gitId":"hjuntan"},"content":"The task number can be obtained by using the `list` command.","lastModifiedDate":"2024-02-20"},{"lineNumber":189,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":190,"author":{"gitId":"hjuntan"},"content":"Example: `unmark 1`","lastModifiedDate":"2024-02-20"},{"lineNumber":191,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":192,"author":{"gitId":"hjuntan"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":193,"author":{"gitId":"hjuntan"},"content":"Toothless marks this task as not done:","lastModifiedDate":"2024-02-20"},{"lineNumber":194,"author":{"gitId":"hjuntan"},"content":"[T][ ] read book","lastModifiedDate":"2024-02-20"},{"lineNumber":195,"author":{"gitId":"hjuntan"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":196,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":197,"author":{"gitId":"hjuntan"},"content":"### Delete a task: `delete`","lastModifiedDate":"2024-02-21"},{"lineNumber":198,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":199,"author":{"gitId":"hjuntan"},"content":"This command deletes a task from the task list.","lastModifiedDate":"2024-02-20"},{"lineNumber":200,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":201,"author":{"gitId":"hjuntan"},"content":"\u003e Format: `delete \u003ctask number\u003e`","lastModifiedDate":"2024-02-20"},{"lineNumber":202,"author":{"gitId":"hjuntan"},"content":"\u003e ","lastModifiedDate":"2024-02-20"},{"lineNumber":203,"author":{"gitId":"hjuntan"},"content":"\u003e Do note that the `\u003ctask number\u003e` should be a valid task number in the list.","lastModifiedDate":"2024-02-20"},{"lineNumber":204,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":205,"author":{"gitId":"hjuntan"},"content":"The task number can be obtained by using the `list` command.","lastModifiedDate":"2024-02-20"},{"lineNumber":206,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":207,"author":{"gitId":"hjuntan"},"content":"Example: `delete 1`","lastModifiedDate":"2024-02-20"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":210,"author":{"gitId":"hjuntan"},"content":"Toothless deletes this task:","lastModifiedDate":"2024-02-20"},{"lineNumber":211,"author":{"gitId":"hjuntan"},"content":"[T][ ] read book","lastModifiedDate":"2024-02-20"},{"lineNumber":212,"author":{"gitId":"hjuntan"},"content":"Human has N tasks now.","lastModifiedDate":"2024-02-20"},{"lineNumber":213,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":214,"author":{"gitId":"hjuntan"},"content":"where `N` is the number of tasks currently in the list.","lastModifiedDate":"2024-02-20"},{"lineNumber":215,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":216,"author":{"gitId":"hjuntan"},"content":"### Goodbye Toothless: `bye`","lastModifiedDate":"2024-02-21"},{"lineNumber":217,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":218,"author":{"gitId":"hjuntan"},"content":"This command exits the application.","lastModifiedDate":"2024-02-20"},{"lineNumber":219,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":220,"author":{"gitId":"hjuntan"},"content":"\u003e Format: `bye`","lastModifiedDate":"2024-02-20"},{"lineNumber":221,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":222,"author":{"gitId":"hjuntan"},"content":"Example: `bye`","lastModifiedDate":"2024-02-20"},{"lineNumber":223,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":224,"author":{"gitId":"hjuntan"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":225,"author":{"gitId":"hjuntan"},"content":"Toothless will miss you, human. Toothless will be here when you need Toothless.","lastModifiedDate":"2024-02-20"},{"lineNumber":226,"author":{"gitId":"hjuntan"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":227,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":228,"author":{"gitId":"hjuntan"},"content":"## Saving the data","lastModifiedDate":"2024-02-20"},{"lineNumber":229,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":230,"author":{"gitId":"hjuntan"},"content":"Toothless data are saved in the hard disk automatically after the `bye` command. There is no need to save manually.","lastModifiedDate":"2024-02-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":232,"author":{"gitId":"hjuntan"},"content":"## Command summary","lastModifiedDate":"2024-02-20"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":235,"author":{"gitId":"hjuntan"},"content":"| Action           | Format, Examples                                                                                                                  |","lastModifiedDate":"2024-02-20"},{"lineNumber":236,"author":{"gitId":"hjuntan"},"content":"|------------------|-----------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-02-20"},{"lineNumber":237,"author":{"gitId":"hjuntan"},"content":"| Add todo         | `todo \u003ctask description\u003e` \u003cbr\u003e e.g., `todo read book`                                                                             |","lastModifiedDate":"2024-02-20"},{"lineNumber":238,"author":{"gitId":"hjuntan"},"content":"| Add deadline     | `deadline \u003ctask description\u003e /by \u003cdate\u003e` \u003cbr\u003e e.g., `deadline essay assignment /by 2024-02-20 22:00`                              |","lastModifiedDate":"2024-02-23"},{"lineNumber":239,"author":{"gitId":"hjuntan"},"content":"| Add event        | `event \u003ctask description\u003e /from \u003cdate\u003e /to \u003cdate\u003e` \u003cbr\u003e e.g., `event project meeting /from 2024-02-20 22:00 /to 2024-02-20 23:00` |","lastModifiedDate":"2024-02-23"},{"lineNumber":240,"author":{"gitId":"hjuntan"},"content":"| List             | `list`                                                                                                                            |","lastModifiedDate":"2024-02-20"},{"lineNumber":241,"author":{"gitId":"hjuntan"},"content":"| Schedule         | `schedule`                                                                                                                        |","lastModifiedDate":"2024-02-20"},{"lineNumber":242,"author":{"gitId":"hjuntan"},"content":"| Find             | `find \u003ckeyword\u003e` \u003cbr\u003e e.g., `find book`                                                                                           |","lastModifiedDate":"2024-02-20"},{"lineNumber":243,"author":{"gitId":"hjuntan"},"content":"| Mark as done     | `mark \u003ctask number\u003e` \u003cbr\u003e e.g., `mark 1`                                                                                          |","lastModifiedDate":"2024-02-20"},{"lineNumber":244,"author":{"gitId":"hjuntan"},"content":"| Mark as not done | `unmark \u003ctask number\u003e` \u003cbr\u003e e.g., `unmark 1`                                                                                      |","lastModifiedDate":"2024-02-20"},{"lineNumber":245,"author":{"gitId":"hjuntan"},"content":"| Delete           | `delete \u003ctask number\u003e` \u003cbr\u003e e.g., `delete 1`                                                                                      |","lastModifiedDate":"2024-02-20"},{"lineNumber":246,"author":{"gitId":"hjuntan"},"content":"| Exit             | `bye`                                                                                                                             |","lastModifiedDate":"2024-02-20"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":248,"author":{"gitId":"hjuntan"},"content":"## Acknowledgements","lastModifiedDate":"2024-02-20"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":250,"author":{"gitId":"hjuntan"},"content":"Toothless is based on the Duke project created by the [SE-EDU initiative](https://se-education.org). It is a project that is part of the CS2103T Software Engineering module at the National University of Singapore.","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"hjuntan":226,"-":24}},{"path":"src/main/java/toothless/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package toothless;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import toothless.commands.ByeCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"import toothless.commands.Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"import toothless.commands.DeadlineCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import toothless.commands.DeleteCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"import toothless.commands.EventCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"import toothless.commands.FindCommand;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"import toothless.commands.ListCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"import toothless.commands.MarkCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"import toothless.commands.ScheduleCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"import toothless.commands.TodoCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"import toothless.commands.UnmarkCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"import toothless.tasks.Deadline;","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"import toothless.tasks.Event;","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"import toothless.tasks.Task;","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"import toothless.tasks.Todo;","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":" * This class is responsible for parsing user input and converting it into a corresponding Command object.","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":" * It also provides methods for parsing task data and date-time data from string representations.","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"public class Parser {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"     * Parses a string representing a command and returns the corresponding Command object.","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"     * @param input the string representing a command.","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"     * @return the Command object corresponding to the string.","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"     * @throws ToothlessException if the string cannot be parsed correctly.","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"    public static Command parseCommand(String input) throws ToothlessException {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"        String[] split \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"        String commandType \u003d split[0].toUpperCase();","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"        switch (commandType) {","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"        case \"BYE\":","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"        case \"LIST\":","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"            return new ListCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"        case \"FIND\":","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"            if (split.length \u003c 2) {","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"                throw new ToothlessException(\"Find command needs a keyword! \u003e_\u003c\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"                        \"Please enter in this format: find \u003ckeyword\u003e\");","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"            return new FindCommand(split[1].trim());","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"        case \"MARK\":","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"hjuntan"},"content":"        case \"UNMARK\":","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"        case \"DELETE\":","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"            return parseUpdateCommand(split);","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"hjuntan"},"content":"        case \"TODO\":","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"hjuntan"},"content":"        case \"EVENT\":","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"hjuntan"},"content":"        case \"DEADLINE\":","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"hjuntan"},"content":"            return parseTaskCommand(split);","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"hjuntan"},"content":"        case \"SCHEDULE\":","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"hjuntan"},"content":"            return new ScheduleCommand();","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"hjuntan"},"content":"        default:","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"hjuntan"},"content":"            assert false : commandType;","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(\"Sorry, Toothless no understand this action :P\");","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"hjuntan"},"content":"    private static Command parseTaskCommand(String[] split) throws ToothlessException{","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"hjuntan"},"content":"        if (split.length \u003c 2) {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(\"Task has no name! \u003e_\u003c\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"hjuntan"},"content":"                    \"Please enter in this format: \u003ctask_type\u003e \u003ctask_description\u003e [/\u003cdate\u003e]\");","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"hjuntan"},"content":"        String taskType \u003d split[0].toUpperCase();","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"hjuntan"},"content":"        String taskDetails \u003d split[1].trim();","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"hjuntan"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"hjuntan"},"content":"        case \"TODO\":","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"hjuntan"},"content":"            return new TodoCommand(taskDetails);","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"hjuntan"},"content":"        case \"EVENT\":","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"hjuntan"},"content":"            return new EventCommand(taskDetails);","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"hjuntan"},"content":"        case \"DEADLINE\":","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"hjuntan"},"content":"            return new DeadlineCommand(taskDetails);","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"hjuntan"},"content":"        default:","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"hjuntan"},"content":"            assert false : taskType;","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(\"Invalid Task Command O_O\");","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"hjuntan"},"content":"    private static Command parseUpdateCommand(String[] split) throws ToothlessException {","lastModifiedDate":"2024-02-13"},{"lineNumber":86,"author":{"gitId":"hjuntan"},"content":"        if (split.length \u003c 2) {","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(\"Update command has no task number! \u003e_\u003c\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"hjuntan"},"content":"                    \"Please enter in this format: \u003cupdate type\u003e \u003ctask number\u003e\");","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"hjuntan"},"content":"        String updateType \u003d split[0].toUpperCase();","lastModifiedDate":"2024-02-13"},{"lineNumber":91,"author":{"gitId":"hjuntan"},"content":"        String taskDetails \u003d split[1].trim();","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"hjuntan"},"content":"        switch (updateType) {","lastModifiedDate":"2024-02-13"},{"lineNumber":93,"author":{"gitId":"hjuntan"},"content":"        case \"MARK\":","lastModifiedDate":"2024-02-13"},{"lineNumber":94,"author":{"gitId":"hjuntan"},"content":"            return new MarkCommand(taskDetails);","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"hjuntan"},"content":"        case \"UNMARK\":","lastModifiedDate":"2024-02-13"},{"lineNumber":96,"author":{"gitId":"hjuntan"},"content":"            return new UnmarkCommand(taskDetails);","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"hjuntan"},"content":"        case \"DELETE\":","lastModifiedDate":"2024-02-13"},{"lineNumber":98,"author":{"gitId":"hjuntan"},"content":"            return new DeleteCommand(taskDetails);","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"hjuntan"},"content":"        default:","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"hjuntan"},"content":"            assert false : updateType;","lastModifiedDate":"2024-02-13"},{"lineNumber":101,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(\"Invalid Update Command O_O\");","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":105,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":106,"author":{"gitId":"hjuntan"},"content":"     * Parses a string representing a task and returns the corresponding Task object.","lastModifiedDate":"2024-02-20"},{"lineNumber":107,"author":{"gitId":"hjuntan"},"content":"     * @param storedTask the string representing a task.","lastModifiedDate":"2024-02-20"},{"lineNumber":108,"author":{"gitId":"hjuntan"},"content":"     * @return the Task object corresponding to the string.","lastModifiedDate":"2024-02-20"},{"lineNumber":109,"author":{"gitId":"hjuntan"},"content":"     * @throws ToothlessException if the string cannot be parsed correctly.","lastModifiedDate":"2024-02-20"},{"lineNumber":110,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":111,"author":{"gitId":"hjuntan"},"content":"    public static Task parseTask(String[] storedTask) throws ToothlessException {","lastModifiedDate":"2024-02-20"},{"lineNumber":112,"author":{"gitId":"hjuntan"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":113,"author":{"gitId":"hjuntan"},"content":"            String taskType \u003d storedTask[0];","lastModifiedDate":"2024-02-20"},{"lineNumber":114,"author":{"gitId":"hjuntan"},"content":"            String description \u003d storedTask[2];","lastModifiedDate":"2024-02-20"},{"lineNumber":115,"author":{"gitId":"hjuntan"},"content":"            boolean isDone \u003d storedTask[1].equals(\"1\");","lastModifiedDate":"2024-02-20"},{"lineNumber":116,"author":{"gitId":"hjuntan"},"content":"            switch (taskType) {","lastModifiedDate":"2024-02-20"},{"lineNumber":117,"author":{"gitId":"hjuntan"},"content":"                case \"T\":","lastModifiedDate":"2024-02-20"},{"lineNumber":118,"author":{"gitId":"hjuntan"},"content":"                    return new Todo(description, isDone);","lastModifiedDate":"2024-02-20"},{"lineNumber":119,"author":{"gitId":"hjuntan"},"content":"                case \"D\":","lastModifiedDate":"2024-02-20"},{"lineNumber":120,"author":{"gitId":"hjuntan"},"content":"                    String date \u003d storedTask[3];","lastModifiedDate":"2024-02-20"},{"lineNumber":121,"author":{"gitId":"hjuntan"},"content":"                    return new Deadline(description, date, isDone);","lastModifiedDate":"2024-02-20"},{"lineNumber":122,"author":{"gitId":"hjuntan"},"content":"                case \"E\":","lastModifiedDate":"2024-02-20"},{"lineNumber":123,"author":{"gitId":"hjuntan"},"content":"                    String startDate \u003d storedTask[3];","lastModifiedDate":"2024-02-20"},{"lineNumber":124,"author":{"gitId":"hjuntan"},"content":"                    String endDate \u003d storedTask[4];","lastModifiedDate":"2024-02-20"},{"lineNumber":125,"author":{"gitId":"hjuntan"},"content":"                    return new Event(description, startDate, endDate, isDone);","lastModifiedDate":"2024-02-20"},{"lineNumber":126,"author":{"gitId":"hjuntan"},"content":"                default:","lastModifiedDate":"2024-02-20"},{"lineNumber":127,"author":{"gitId":"hjuntan"},"content":"                    throw new ToothlessException(\"File corrupted O_O.\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":128,"author":{"gitId":"hjuntan"},"content":"                            \"Please delete the toothless.txt file located \" +","lastModifiedDate":"2024-02-23"},{"lineNumber":129,"author":{"gitId":"hjuntan"},"content":"                            \"in the data folder and restart the program.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":130,"author":{"gitId":"hjuntan"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":131,"author":{"gitId":"hjuntan"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":132,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(\"File corrupted O_O.\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":133,"author":{"gitId":"hjuntan"},"content":"                    \"Please delete the toothless.txt file located in the data folder and restart the program.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":134,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":135,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":136,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":137,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":138,"author":{"gitId":"hjuntan"},"content":"     * Parses a string representing a date-time and returns the corresponding LocalDateTime object.","lastModifiedDate":"2024-02-20"},{"lineNumber":139,"author":{"gitId":"hjuntan"},"content":"     * @param dateTime the string representing a date-time.","lastModifiedDate":"2024-02-20"},{"lineNumber":140,"author":{"gitId":"hjuntan"},"content":"     * @return the LocalDateTime object corresponding to the string.","lastModifiedDate":"2024-02-20"},{"lineNumber":141,"author":{"gitId":"hjuntan"},"content":"     * @throws ToothlessException if the string cannot be parsed correctly.","lastModifiedDate":"2024-02-20"},{"lineNumber":142,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":143,"author":{"gitId":"hjuntan"},"content":"    public static LocalDateTime parseDateTime(String dateTime) throws ToothlessException {","lastModifiedDate":"2024-02-20"},{"lineNumber":144,"author":{"gitId":"hjuntan"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":145,"author":{"gitId":"hjuntan"},"content":"            return LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":146,"author":{"gitId":"hjuntan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":147,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(\"Human date not correct! D:\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":148,"author":{"gitId":"hjuntan"},"content":"                    \"Please enter in this format: yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-23"},{"lineNumber":149,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":150,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":151,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"hjuntan":151}},{"path":"src/main/java/toothless/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package toothless;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"import toothless.tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":" * Represents the storage of tasks in a file.","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":" * This class is responsible for loading tasks from the file and saving tasks to the file.","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"public class Storage {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"    private String filepath;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"    private File file;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"     * Constructs a Storage object associated with the filepath.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"     * @param filepath","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"     * Loads tasks from the storage file and returns them as a List of Task.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"     * If the file does not exist, it attempts to create the necessary directory and returns an empty List of Task.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"     * @return a list of Tasks loaded from the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"     * @throws ToothlessException if the file format is corrupted or cannot be parsed correctly.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"    public List\u003cTask\u003e load() throws ToothlessException {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"            List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"            this.file \u003d new File(this.filepath);","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"                String[] storedTask \u003d sc.nextLine().split(\" \\\\| \");","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"                Task task \u003d Parser.parseTask(storedTask);","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"                list.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"            return list;","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"        } catch (FileNotFoundException exception) {","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"            new File(this.filepath).getParentFile().mkdirs();","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"hjuntan"},"content":"     * Writes a list of tasks to the storage file","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"hjuntan"},"content":"     * by converting each Task into a string format suitable for storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"hjuntan"},"content":"     * If the file cannot be written to, an error message is printed.","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"hjuntan"},"content":"     * @param tasks the TaskList containing tasks to be saved to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"hjuntan"},"content":"    public void writeTasks(TaskList tasks) throws ToothlessException {","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"hjuntan"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"hjuntan"},"content":"            FileWriter writer \u003d new FileWriter(this.filepath);","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"hjuntan"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++){","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"hjuntan"},"content":"                Task task \u003d tasks.getTask(i);","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"hjuntan"},"content":"                writer.write(task.toWrite() + \"\\n\");","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"hjuntan"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"hjuntan"},"content":"            writer.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"hjuntan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(\"Toothless cannot write to file :( \\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"hjuntan"},"content":"                    \"Please check if the file is in use or if the file path is correct.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"hjuntan":71}},{"path":"src/main/java/toothless/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package toothless;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"import java.util.List;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import toothless.tasks.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":" * This class is responsible for managing the tasks in the list.","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"public class TaskList {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"     * Constructs a TaskList with the specified list of tasks.","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"     * @param taskList The list of tasks to be used to construct the TaskList.","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"     * Constructs a TaskList with an empty list of tasks.","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"     * @param t The task to be added to the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"        taskList.add(t);","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"     * Removes the task at the specified index from the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"        assert index \u003e 0;","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"        taskList.remove(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"     * Retrieves the task at the specified index from the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"hjuntan"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"hjuntan"},"content":"        assert index \u003e 0;","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"hjuntan"},"content":"        return taskList.get(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"hjuntan"},"content":"     * Returns the number of tasks currently in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"hjuntan"},"content":"     * @return The number of tasks currently in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"hjuntan"},"content":"    public int size() {","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"hjuntan"},"content":"        return taskList.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"hjuntan":64}},{"path":"src/main/java/toothless/Toothless.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package toothless;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import toothless.commands.Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":" * A chatbot that helps store and organise your tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"public class Toothless {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"    public Toothless() {","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"        storage \u003d new Storage(\"./data/toothless.txt\");","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"    public String greet() {","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"        return ui.showWelcome();","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"    public String loadingTasks() {","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"        return ui.showLoadingTasks();","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"     * Loads the tasks from the storage file, creates a new TaskList if the file does not exist.","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"     * @return The message to be displayed to the user.","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"    public String load() {","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"            return ui.showIncompleteTask(tasks);","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"        } catch (ToothlessException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"        return isExit;","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"    public String exit() {","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"        return ui.showFarewell();","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"hjuntan"},"content":"     * Gets the response from the chatbot based on the user input.","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"     * @return The response from the chatbot.","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"hjuntan"},"content":"     * @throws ToothlessException If the input is invalid.","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"hjuntan"},"content":"    public String getResponse(String input) throws ToothlessException{","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"hjuntan"},"content":"        Command command \u003d Parser.parseCommand(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"hjuntan"},"content":"        isExit \u003d command.isExit();","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"hjuntan"},"content":"        return command.handle(ui, tasks, storage);","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"hjuntan":60}},{"path":"src/main/java/toothless/ToothlessException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package toothless;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":" * Represents an exception specific to the Toothless chatbot.","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"public class ToothlessException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"     * Constructs a new ToothlessException with the specified detail message.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"     * @param message The detail message.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"    public ToothlessException(String message) {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"hjuntan":15}},{"path":"src/main/java/toothless/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package toothless;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"import toothless.tasks.Task;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":" * Represents the user interface of the chatbot.","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":" * This class is responsible for displaying messages to the user.","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"public class Ui {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"    private String chatBotName \u003d \"Toothless\";","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"    private String greetingString \u003d \"Hi! \" + chatBotName + \" is \" + chatBotName + \"!\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"            + \"What can \" + chatBotName + \" do for human?\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"    private String exitString \u003d \"Toothless will miss you, human.\\nToothless will be here when you need Toothless.\";","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"    public String showWelcome() {","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"        return greetingString;","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"    public String showFarewell() {","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"        return exitString;","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"    public String showLoadingTasks() {","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"        return \"Loading previous human kept tasks...\\n\";","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"    // Task messages","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"    public String showDeletedTask(Task task, int size) {","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"        return \"Toothless deletes this task:\\n\" + task.toString() + \"\\nHuman has \" + size + \" tasks now.\";","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"    public String showAddedTask(Task task, int size) {","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"        return \"Toothless adds this task:\\n\" + task.toString() + \"\\nHuman has \" + size + \" tasks now.\";","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"    public String showMarkedTask(Task task) {","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"        return \"Nice! Toothless have marked this task as done:\\n\" + task.toString();","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"    public String showUnmarkedTask(Task task) {","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"        return \"Nice! Toothless have marked this task as undone:\\n\" + task.toString();","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"    // List messages","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"     * Displays the tasks found by the find command to the user.","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"     * @param tasks The list of tasks found by the find command.","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"    public String showFoundTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"        String message \u003d \"Toothless have found these same tasks:\\n\";","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"hjuntan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"hjuntan"},"content":"            message +\u003d (i + 1) + \". \" + tasks.get(i) + \"\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"hjuntan"},"content":"        return message;","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"hjuntan"},"content":"     * Displays all tasks to the user.","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"hjuntan"},"content":"     * @param tasks The TaskList containing the tasks to be displayed.","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"hjuntan"},"content":"    public String showAllTasks(TaskList tasks) {","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"hjuntan"},"content":"        String message \u003d \"Here all human tasks:\\n\";","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"hjuntan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"hjuntan"},"content":"            message +\u003d (i + 1) + \". \" + tasks.getTask(i) + \"\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"hjuntan"},"content":"        return message;","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"hjuntan"},"content":"     * Displays all incomplete tasks to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"hjuntan"},"content":"     * @param tasks The TaskList containing the tasks to be displayed.","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"hjuntan"},"content":"    public String showIncompleteTask(TaskList tasks) {","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"hjuntan"},"content":"        String message \u003d \"Reminder\\nHuman still have these tasks to do:\\n\";","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"hjuntan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"hjuntan"},"content":"            Task t \u003d tasks.getTask(i);","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"hjuntan"},"content":"            if (!t.isDone()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"hjuntan"},"content":"                message +\u003d (i + 1) + \". \" + t + \"\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"hjuntan"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"hjuntan"},"content":"        return message;","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"hjuntan"},"content":"    // Warning messages","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"hjuntan"},"content":"    public String showNoTaskNameWarning() {","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"hjuntan"},"content":"        return \"Task has no name! \u003e_\u003c\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"hjuntan"},"content":"                \"Please enter in this format: \u003ctask_type\u003e \u003ctask_description\u003e [/\u003cdate\u003e]\";","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"hjuntan"},"content":"    public String showNoDeadlineWarning() {","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"hjuntan"},"content":"        return \"Deadline has no date! \u003e_\u003c\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"hjuntan"},"content":"                \"Human, please enter a date for the deadline in this format: yyyy-MM-dd HH:mm\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"hjuntan"},"content":"                \"with a /by in front of the date.\";","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"hjuntan"},"content":"    public String showEventNoStartWarning() {","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"hjuntan"},"content":"        return \"Event has no start date! \u003e_\u003c\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"hjuntan"},"content":"                \"Human, please enter a start date for the event in this format: yyyy-MM-dd HH:mm\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"hjuntan"},"content":"                \"with a /from in front of the date.\";","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":103,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":104,"author":{"gitId":"hjuntan"},"content":"    public String showEventNoEndWarning() {","lastModifiedDate":"2024-02-20"},{"lineNumber":105,"author":{"gitId":"hjuntan"},"content":"        return \"Event has no end date! \u003e_\u003c\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"hjuntan"},"content":"                \"Human, please enter an end date for the event in this format: yyyy-MM-dd HH:mm\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"hjuntan"},"content":"                \"with a /to in front of the date.\";","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":109,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":110,"author":{"gitId":"hjuntan"},"content":"    public String showEmptyListWarning() {","lastModifiedDate":"2024-02-20"},{"lineNumber":111,"author":{"gitId":"hjuntan"},"content":"        return \"Human list is empty like my tummy right now! :(\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":112,"author":{"gitId":"hjuntan"},"content":"                \"Please add some tasks to me! :D\";","lastModifiedDate":"2024-02-23"},{"lineNumber":113,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":114,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":115,"author":{"gitId":"hjuntan"},"content":"    public String showNoMatchingTaskWarning() {","lastModifiedDate":"2024-02-20"},{"lineNumber":116,"author":{"gitId":"hjuntan"},"content":"        return \"Toothless cannot find any matching tasks! :(\";","lastModifiedDate":"2024-02-23"},{"lineNumber":117,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":118,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":119,"author":{"gitId":"hjuntan"},"content":"    public String showInvalidMarkWarning() {","lastModifiedDate":"2024-02-20"},{"lineNumber":120,"author":{"gitId":"hjuntan"},"content":"        return \"Human trying to mark nothing ^O^. Foolish.\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":121,"author":{"gitId":"hjuntan"},"content":"                \"Please enter a valid task number to mark. :)\";","lastModifiedDate":"2024-02-23"},{"lineNumber":122,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":123,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":124,"author":{"gitId":"hjuntan"},"content":"    public String showInvalidUnmarkWarning() {","lastModifiedDate":"2024-02-20"},{"lineNumber":125,"author":{"gitId":"hjuntan"},"content":"        return \"Human trying to unmark nothing ^O^. Silly.\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":126,"author":{"gitId":"hjuntan"},"content":"                \"Please enter a valid task number to unmark. :)\";","lastModifiedDate":"2024-02-23"},{"lineNumber":127,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":128,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":129,"author":{"gitId":"hjuntan"},"content":"    public String showInvalidDeleteWarning() {","lastModifiedDate":"2024-02-20"},{"lineNumber":130,"author":{"gitId":"hjuntan"},"content":"        return \"Human trying to delete nothing ^O^. Absurd.\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":131,"author":{"gitId":"hjuntan"},"content":"                \"Please enter a valid task number to delete. :)\";","lastModifiedDate":"2024-02-23"},{"lineNumber":132,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":133,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"hjuntan":133}},{"path":"src/main/java/toothless/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package toothless.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import toothless.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"import toothless.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"import toothless.ToothlessException;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import toothless.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":" * Represents a command to terminate the application.","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"     * Executes the command to terminate the application. Saves the current state of the task list to storage","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"     * @param ui The user interface to interact with.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"     * @param taskList The task list to be manipulated or queried.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"     * @param storage The storage system for loading or saving tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"     * @return String message to be displayed to the user.","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"    public String handle(Ui ui, TaskList taskList, Storage storage) throws ToothlessException {","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"        storage.writeTasks(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"        return ui.showFarewell();","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"     * Indicates whether the command is an exit command.","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"     * @return True if the command is an exit command, false otherwise.","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"        return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"hjuntan":34}},{"path":"src/main/java/toothless/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package toothless.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import toothless.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"import toothless.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"import toothless.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import toothless.ToothlessException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":" * This abstract class represents a command within the Toothless application.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":" * Commands are used to interact with the application\u0027s user interface, task list, and storage system,","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":" * potentially throwing a ToothlessException to signal issues specific to command execution.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"     * Executes the command to perform a specific action, potentially manipulating the task list and storage system.","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"     * @param ui The user interface to interact with.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"     * @param taskList The task list to be manipulated or queried.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"     * @param storage The storage system for loading or saving tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"     * @return String message to be displayed to the user.","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"     * @throws ToothlessException If an error specific to the Toothless application occurs during command execution.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"    public abstract String handle(Ui ui, TaskList taskList, Storage storage) throws ToothlessException;","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"     * Indicates whether the command is an exit command.","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"     * @return True if the command is an exit command, false otherwise.","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"     * Converts a string detail into an integer index for task manipulation.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"     * The method adjusts the index to accommodate zero-based indexing used internally.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"     * @param detail The string detail, typically representing the task number entered by the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"     * @return The integer index corresponding to the user\u0027s input, adjusted for zero-based indexing.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"     * @throws ToothlessException If the provided detail is not a valid integer.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"    public int getTaskIndex(String detail) throws ToothlessException {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"            int taskIndex \u003d Integer.valueOf(detail);","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"            return taskIndex - 1;","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(\"Task number entered is not real number.\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"                    \"Please put real number ._.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"hjuntan":47}},{"path":"src/main/java/toothless/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package toothless.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import toothless.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"import toothless.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"import toothless.ToothlessException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import toothless.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"import toothless.tasks.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"import toothless.tasks.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":" * Represents a command to add a deadline task to the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":" * The detail provided includes the task description and its deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"    private String detail;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"     * Constructs a DeadlineCommand with the specified detail, which includes the task description","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"     * and its deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"     * @param detail The task detail, expected to contain a description and a deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"    public DeadlineCommand(String detail) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"     * Executes the command to add a new deadline task to the task list. Parses the task detail to separate","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"     * the description from the deadline, creates a new deadline task, adds it to the task list, and displays","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"     * a message to the user about the addition.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"     * @param ui The user interface to interact with.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"     * @param taskList The task list to be manipulated or queried.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"     * @param storage The storage system for loading or saving tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"     * @return String message to be displayed to the user.","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"     * @throws ToothlessException If the task detail is invalid, either missing a description or a deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"    public String handle(Ui ui, TaskList taskList, Storage storage) throws ToothlessException {","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"        if (detail.equals(\"\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(ui.showNoTaskNameWarning());","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"        int dateIndex \u003d detail.indexOf(\"/by\");","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"        if (dateIndex \u003d\u003d -1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(ui.showNoDeadlineWarning());","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"        if (dateIndex \u003d\u003d 0) {","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(ui.showNoTaskNameWarning());","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"hjuntan"},"content":"        String description \u003d detail.substring(0, dateIndex).trim();","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"        if (dateIndex + 4 \u003e\u003d detail.length()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(ui.showNoDeadlineWarning());","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"hjuntan"},"content":"        String date \u003d detail.substring(dateIndex + 4).trim();","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"hjuntan"},"content":"        Task t \u003d new Deadline(description, date);","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"hjuntan"},"content":"        taskList.addTask(t);","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"hjuntan"},"content":"        return ui.showAddedTask(t, taskList.size());","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"hjuntan"},"content":"     * Indicates whether the command is an exit command.","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"hjuntan"},"content":"     * @return False, as the command is not an exit command.","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"hjuntan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"hjuntan"},"content":"        return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"hjuntan":71}},{"path":"src/main/java/toothless/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package toothless.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import toothless.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"import toothless.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"import toothless.ToothlessException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import toothless.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"import toothless.tasks.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":" * Represents a command to delete a specific task from the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":" * The task to be deleted is specified by a detail string,","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":" * which should contain the index of the task in the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"    private String detail;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"     * Constructs a DeleteCommand with the specified detail.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"     * The detail is expected to be a string representing the index of the task to be deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"     * @param detail The index of the task to be deleted, as a string.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"    public DeleteCommand(String detail) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"     * Executes the command to delete a task from the task list. It converts the detail string to an index,","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"     * validates the index, removes the specified task from the list, and shows a message indicating the task","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"     * has been removed.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"     * @param ui The user interface to interact with.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"     * @param taskList The task list to be manipulated or queried.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"     * @param storage The storage system for loading or saving tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"     * @return String message to be displayed to the user.","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"     * @throws ToothlessException If the detail does not represent a valid index.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"    public String handle(Ui ui, TaskList taskList, Storage storage) throws ToothlessException {","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"        int taskIndex \u003d getTaskIndex(detail);","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"        if (taskIndex \u003e\u003d taskList.size() || taskIndex \u003c 0) {","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(ui.showInvalidDeleteWarning());","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"        Task t \u003d taskList.getTask(taskIndex);","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"        taskList.removeTask(taskIndex);","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"        return ui.showDeletedTask(t, taskList.size());","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"hjuntan"},"content":"     * Indicates whether the command is an exit command.","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"     * @return False, as the command is not an exit command.","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"hjuntan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"hjuntan"},"content":"        return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"hjuntan":57}},{"path":"src/main/java/toothless/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package toothless.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import toothless.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"import toothless.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"import toothless.ToothlessException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import toothless.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"import toothless.tasks.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"import toothless.tasks.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":" * Represents a command to add an event task to the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":" * The detail provided includes the event description and its start and end dates.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"    private String detail;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"     * Constructs an EventCommand with the specified detail, which includes the task description","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"     * and its start and end dates.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"     * @param detail The task detail, expected to contain a description, a start date, and an end date.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"    public EventCommand(String detail) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"     * Executes the command to add a new event task to the task list. Parses the task detail to separate","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"     * the description from the start and end dates, creates a new event task, adds it to the task list,","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"     * and displays a message to the user about the addition.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"     * @param ui The user interface to interact with.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"     * @param taskList The task list where the new task will be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"     * @param storage The storage system, not directly used by this command.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"     * @return String message to be displayed to the user.","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"     * @throws ToothlessException If the task detail is invalid,","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"     *  either missing a description, a start date, or an end date.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"    public String handle(Ui ui, TaskList taskList, Storage storage) throws ToothlessException {","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"        if (detail.equals(\"\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(ui.showNoTaskNameWarning());","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"        int date1Index \u003d detail.indexOf(\"/from\");","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"        if (date1Index \u003d\u003d -1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(ui.showEventNoStartWarning());","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"        if (date1Index \u003d\u003d 0) {","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(ui.showNoTaskNameWarning());","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"hjuntan"},"content":"        String description \u003d detail.substring(0, date1Index).trim();","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"        if (date1Index + 6 \u003e\u003d detail.length()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(ui.showEventNoStartWarning());","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"hjuntan"},"content":"        detail \u003d detail.substring(date1Index + 6);","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"hjuntan"},"content":"        int date2Index \u003d detail.indexOf(\"/to\");","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"hjuntan"},"content":"        if (date2Index \u003d\u003d -1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(ui.showEventNoEndWarning());","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"hjuntan"},"content":"        if (date2Index \u003d\u003d 0) {","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(ui.showEventNoStartWarning());","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"hjuntan"},"content":"        String startDate \u003d detail.substring(0, date2Index).trim();","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"hjuntan"},"content":"        if (date2Index + 4 \u003e\u003d detail.length()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(ui.showEventNoEndWarning());","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"hjuntan"},"content":"        String endDate \u003d detail.substring(date2Index + 4).trim();","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"hjuntan"},"content":"        Task t \u003d new Event(description, startDate, endDate);","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"hjuntan"},"content":"        taskList.addTask(t);","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"hjuntan"},"content":"        return ui.showAddedTask(t, taskList.size());","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"hjuntan"},"content":"     * Indicates whether the command is an exit command.","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"hjuntan"},"content":"     * @return False, as the command is not an exit command.","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"hjuntan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"hjuntan"},"content":"        return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"hjuntan":84}},{"path":"src/main/java/toothless/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package toothless.commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"import toothless.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"import toothless.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import toothless.ToothlessException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"import toothless.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"import toothless.tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":" * Represents a command to find and display tasks in the task list that match a given keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":" * The detail is used to search through task descriptions to find matches.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"    private String keyword;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"     * Constructs a FindCommand with the specified keyword for searching.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"     * @param keyword The search criteria used to find matching tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"     * Executes the command to find and display tasks that match the given detail.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"     * Searches through the task list and displays tasks with descriptions that contain the specified keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"     * @param ui The user interface to interact with.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"     * @param taskList The task list to search through.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"     * @param storage The storage system, not directly used by this command.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"     * @return false to indicate the application should continue running.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"     * @throws ToothlessException If the task list is empty or no tasks match the search criteria.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"    public String handle(Ui ui, TaskList taskList, Storage storage) throws ToothlessException {","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(ui.showEmptyListWarning());","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"            if (task.contains(keyword)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"                list.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(ui.showNoMatchingTaskWarning());","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"        return ui.showFoundTasks(list);","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"hjuntan"},"content":"     * Indicates whether the command is an exit command.","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"hjuntan"},"content":"     * @return False, as the command is not an exit command.","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"hjuntan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"hjuntan"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"hjuntan":63}},{"path":"src/main/java/toothless/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package toothless.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import toothless.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"import toothless.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"import toothless.ToothlessException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import toothless.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":" * Represents a command to list all tasks currently in the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":" * When executed, this command iterates through the task list and displays each task to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"     * Executes the command to list all tasks in the task list. If the list is empty, it throws an exception","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"     * to inform the user that there are no tasks to display.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"     * @param ui The user interface to interact with.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"     * @param taskList The task list whose tasks are to be displayed.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"     * @param storage The storage system, not directly used by this command.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"     * @return false to indicate the application should continue running.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"     * @throws ToothlessException If the task list is empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"    public String handle(Ui ui, TaskList taskList, Storage storage) throws ToothlessException {","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(ui.showEmptyListWarning());","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"        return ui.showAllTasks(taskList);","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"     * Indicates whether the command is an exit command.","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"     * @return False, as the command is not an exit command.","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"        return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"hjuntan":39}},{"path":"src/main/java/toothless/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package toothless.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import toothless.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"import toothless.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"import toothless.ToothlessException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import toothless.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"import toothless.tasks.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":" * Represents a command to mark a specified task as done within the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":" * The task to be marked is specified by a detail string, which should contain the index of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":" * in the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"    private String detail;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"     * Constructs a MarkCommand with the specified detail.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"     * The detail is expected to be a string representing the index of the task to be marked as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"     * @param detail The index of the task to be marked as done, as a string.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"    public MarkCommand(String detail) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"     * Executes the command to mark a task as done. It converts the detail string to an index,","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"     * validates the index, retrieves the specified task from the list, marks the task as done,","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"     * and shows a message indicating the task has been marked as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"     * @param ui The user interface to interact with.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"     * @param taskList The task list from which the task will be marked as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"     * @param storage The storage system, not directly used by this command.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"     * @return false to indicate the application should continue running.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"     * @throws ToothlessException If the detail does not represent a valid index.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"    public String handle(Ui ui, TaskList taskList, Storage storage) throws ToothlessException {","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"        int taskIndex \u003d super.getTaskIndex(detail);","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"        if (taskIndex \u003e\u003d taskList.size() || taskIndex \u003c 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(ui.showInvalidMarkWarning());","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"        Task t \u003d taskList.getTask(taskIndex);","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"        t.markAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"        return ui.showMarkedTask(t);","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"     * Indicates whether the command is an exit command.","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"     * @return False, as the command is not an exit command.","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"hjuntan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"hjuntan"},"content":"        return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"hjuntan":58}},{"path":"src/main/java/toothless/commands/ScheduleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package toothless.commands;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import toothless.Storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"import toothless.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"import toothless.ToothlessException;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import toothless.Ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"import toothless.tasks.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"import toothless.tasks.Todo;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"import toothless.tasks.Deadline;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"import toothless.tasks.Event;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"import java.util.List;","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"public class ScheduleCommand extends Command {","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"     * Executes the command to list all tasks in the task list. If the list is empty, it throws an exception","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"     * to inform the user that there are no tasks to display.","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"     * @param ui The user interface to interact with.","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"     * @param taskList The task list whose tasks are to be displayed.","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"     * @param storage The storage system, not directly used by this command.","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"     * @return false to indicate the application should continue running.","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"     * @throws ToothlessException If the task list is empty.","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"    public String handle(Ui ui, TaskList taskList, Storage storage) throws ToothlessException {","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(ui.showEmptyListWarning());","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"        HashMap\u003cLocalDate, List\u003cTask\u003e\u003e hashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"        addAllTask(taskList, hashMap);","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"        LocalDate[] keys \u003d hashMap.keySet().toArray(new LocalDate[0]);","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"        sortKeys(keys);","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"        return getResponse(hashMap, keys);","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"    private void addAllTask(TaskList taskList, HashMap\u003cLocalDate, List\u003cTask\u003e\u003e hashMap) {","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"            if (task instanceof Todo) {","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"                if (!hashMap.containsKey(LocalDate.MAX)) {","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"                    hashMap.put(LocalDate.MAX, new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"                }","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"                hashMap.get(LocalDate.MAX).add(task);","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"hjuntan"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"                LocalDate date \u003d deadline.getDate().toLocalDate();","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"hjuntan"},"content":"                if (!hashMap.containsKey(date)) {","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"hjuntan"},"content":"                    hashMap.put(date, new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"hjuntan"},"content":"                }","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"hjuntan"},"content":"                hashMap.get(date).add(deadline);","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"hjuntan"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"hjuntan"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"hjuntan"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"hjuntan"},"content":"                LocalDate date \u003d event.getStartDate().toLocalDate();","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"hjuntan"},"content":"                if (!hashMap.containsKey(date)) {","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"hjuntan"},"content":"                    hashMap.put(date, new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"hjuntan"},"content":"                }","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"hjuntan"},"content":"                hashMap.get(date).add(event);","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"hjuntan"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"hjuntan"},"content":"    private void sortKeys(LocalDate[] keys) {","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"hjuntan"},"content":"        for (int i \u003d 0; i \u003c keys.length; i++) {","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"hjuntan"},"content":"            for (int j \u003d i + 1; j \u003c keys.length; j++) {","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"hjuntan"},"content":"                if (keys[i].isAfter(keys[j])) {","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"hjuntan"},"content":"                    LocalDate temp \u003d keys[i];","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"hjuntan"},"content":"                    keys[i] \u003d keys[j];","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"hjuntan"},"content":"                    keys[j] \u003d temp;","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"hjuntan"},"content":"                }","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"hjuntan"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"hjuntan"},"content":"    private String getResponse(HashMap\u003cLocalDate, List\u003cTask\u003e\u003e hashMap, LocalDate[] keys){","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"hjuntan"},"content":"        String response \u003d \"\";","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"hjuntan"},"content":"        for (int i \u003d 0; i \u003c keys.length; i++) {","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"hjuntan"},"content":"            LocalDate key \u003d keys[i];","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"hjuntan"},"content":"            if (key.equals(LocalDate.MAX)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"hjuntan"},"content":"                response +\u003d \"Tasks without a date:\\n\";","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"hjuntan"},"content":"            } else {","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"hjuntan"},"content":"                response +\u003d \"Tasks on \" + dateToString(key) + \":\\n\";","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"hjuntan"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":90,"author":{"gitId":"hjuntan"},"content":"            List\u003cTask\u003e tasks \u003d hashMap.get(key);","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"hjuntan"},"content":"            for (int j \u003d 0; j \u003c tasks.size(); j++) {","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"hjuntan"},"content":"                Task t \u003d tasks.get(j);","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"hjuntan"},"content":"                response +\u003d (j + 1) + \". \" + t + \"\\n\";","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"hjuntan"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"hjuntan"},"content":"            if (i !\u003d keys.length - 1) {","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"hjuntan"},"content":"                response +\u003d \"\\n\";","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"hjuntan"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"hjuntan"},"content":"        return response;","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"hjuntan"},"content":"    private String dateToString(LocalDate date) {","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"hjuntan"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":106,"author":{"gitId":"hjuntan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"hjuntan"},"content":"        return false;","lastModifiedDate":"2024-02-19"},{"lineNumber":108,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":109,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"hjuntan":109}},{"path":"src/main/java/toothless/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package toothless.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import toothless.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"import toothless.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"import toothless.ToothlessException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import toothless.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"import toothless.tasks.Todo;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"import toothless.tasks.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":" * Represents a command to add a todo task to the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":" * The detail provided includes the task description.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"    private String detail;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"     * Constructs a TodoCommand with the specified detail, which includes the task description.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"     * @param detail The task description.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"    public TodoCommand(String detail) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"     * Executes the command to add a new todo task to the task list. It creates a new todo task with the","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"     * specified description, adds it to the task list, and displays a message to the user about the addition.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"     * @param ui The user interface to interact with.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"     * @param taskList The task list where the new task will be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"     * @param storage The storage system, not directly used by this command.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"     * @return false to indicate the application should continue running.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"     * @throws ToothlessException If the task description is missing.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"    public String handle(Ui ui, TaskList taskList, Storage storage) throws ToothlessException {","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"        if (detail.equals(\"\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(ui.showNoTaskNameWarning());","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"        Task t \u003d new Todo(detail);","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"        taskList.addTask(t);","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"        return ui.showAddedTask(t, taskList.size());","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"     * Indicates whether the command is an exit command.","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"     * @return False, as the command is not an exit command.","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"hjuntan"},"content":"        return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"hjuntan":55}},{"path":"src/main/java/toothless/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package toothless.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import toothless.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"import toothless.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"import toothless.ToothlessException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import toothless.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"import toothless.tasks.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":" * Represents a command to mark a task as not done within the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":" * The task to be unmarked is specified by a detail string, which should contain the index of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":" * in the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"    private String detail;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"     * Constructs an UnmarkCommand with the specified detail.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"     * The detail is expected to be a string representing the index of the task to be marked as not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"     * @param detail The index of the task to be marked as not done, as a string.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"    public UnmarkCommand(String detail) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"     * Executes the command to mark a specified task as not done. It converts the detail string to an index,","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"     * validates the index, marks the specified task as not done, and shows a message indicating the task","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"     * has been marked as not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"     * @param ui The user interface to interact with.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"     * @param taskList The task list from which the task will be marked as not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"     * @param storage The storage system, not directly used by this command.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"     * @return false to indicate the application should continue running.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"     * @throws ToothlessException If the detail does not represent a valid index or points to a non-existent task,","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"     *  or if the detail string is empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"    public String handle(Ui ui, TaskList taskList, Storage storage) throws ToothlessException {","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"        int taskIndex \u003d super.getTaskIndex(detail);","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"        if (taskIndex \u003e\u003d taskList.size() || taskIndex \u003c 0) {","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(ui.showInvalidUnmarkWarning());","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"        Task t \u003d taskList.getTask(taskIndex);","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"        t.markAsNotDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"        return ui.showUnmarkedTask(t);","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"     * Indicates whether the command is an exit command.","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"hjuntan"},"content":"     * @return False, as the command is not an exit command.","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"hjuntan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"hjuntan"},"content":"        return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"hjuntan":59}},{"path":"src/main/java/toothless/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package toothless.tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import toothless.Parser;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"import toothless.ToothlessException;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":" * Represents a deadline task in the Toothless application. A deadline task includes a description,","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":" * and end date.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"    private LocalDateTime date;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"     * Constructs a Deadline with the specified description and end date.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"     * @param description The deadline\u0027s description.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"     * @param date The end date of the deadline in a parsable datetime format.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"    public Deadline(String description, String date) throws ToothlessException {","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"        super.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"        this.date \u003d Parser.parseDateTime(date);","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"     * Constructs a Deadline with the specified description, end date, and completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"     * @param description The deadline\u0027s description.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"     * @param date The end date of the deadline in a parsable datetime format.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"     * @param isDone The deadline\u0027s completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"    public Deadline(String description, String date, boolean isDone) throws ToothlessException {","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"        super.description \u003d description;","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"        super.isDone \u003d isDone;","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"        this.date \u003d Parser.parseDateTime(date);","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"        return \"D\";","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"    public String toWrite() {","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"        return \"D | \" + super.toWrite() + \" | \" + dateTimeToWriteFormat(date);","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"        return super.toString() + \" (by: \" + super.dateTimeFormat(date) + \")\";","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"hjuntan"},"content":"        return date;","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"hjuntan":55}},{"path":"src/main/java/toothless/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package toothless.tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"import toothless.Parser;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import toothless.ToothlessException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":" * Represents an event task in the Toothless application. An event task includes a description,","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":" * start date, and end date.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"    private static String warningMessage \u003d \"Your end date is earlier than your start date :/\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"            \"Please make sure your end date is after your start date.\";","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"     * Constructs an Event task with the specified description, start date, and end date.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"     * Checks that the start date is before the end date before setting the values.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"     * @param startDate The start date of the event in a string format that can be parsed to LocalDateTime.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"     * @param endDate The end date of the event in a string format that can be parsed to LocalDateTime.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"     * @throws ToothlessException If the end date is before the start date.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"    public Event(String description, String startDate, String endDate) throws ToothlessException {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"        super.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"        LocalDateTime start \u003d Parser.parseDateTime(startDate);","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"        LocalDateTime end \u003d Parser.parseDateTime(endDate);","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"        if (start.isAfter(end)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(warningMessage);","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"        this.startDate \u003d start;","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"        this.endDate \u003d end;","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"     * Constructs an Event task with the specified description, start date, end date, and completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"     * Checks that the start date is before the end date before setting the values.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"     * @param startDate The start date of the event in a string format that can be parsed to LocalDateTime.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"     * @param endDate The end date of the event in a string format that can be parsed to LocalDateTime.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"     * @param isDone The completion status of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"     * @throws ToothlessException If the end date is before the start date.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"    public Event(String description, String startDate, String endDate, boolean isDone) throws ToothlessException {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"        super.description \u003d description;","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"        super.isDone \u003d isDone;","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"        LocalDateTime start \u003d Parser.parseDateTime(startDate);","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"hjuntan"},"content":"        LocalDateTime end \u003d Parser.parseDateTime(endDate);","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"        if (start.isAfter(end)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"            throw new ToothlessException(warningMessage);","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"hjuntan"},"content":"        this.startDate \u003d start;","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"hjuntan"},"content":"        this.endDate \u003d end;","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"hjuntan"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"hjuntan"},"content":"        return \"E\";","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"hjuntan"},"content":"    public String toWrite() {","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"hjuntan"},"content":"        return \"E | \" + super.toWrite() +","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"hjuntan"},"content":"                \" | \" + dateTimeToWriteFormat(startDate) +","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"hjuntan"},"content":"                \" | \" + dateTimeToWriteFormat(endDate);","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"hjuntan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"hjuntan"},"content":"        return super.toString() + \" (from: \" + super.dateTimeFormat(startDate) +","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"hjuntan"},"content":"                \" to: \" + super.dateTimeFormat(endDate) + \")\";","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":75,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"hjuntan"},"content":"    public LocalDateTime getStartDate() {","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"hjuntan"},"content":"        return startDate;","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"hjuntan":79}},{"path":"src/main/java/toothless/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package toothless.tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":" * This abstract class represents a task within the Toothless application.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":" * This class provides the common structure and functionality for various types of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"    protected String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"     * Returns a string representation of the task, typically the task\u0027s description.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"     * @return The task\u0027s description.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"        return \" [\" + getTaskIcon() + \"][\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"     * Returns the status icon of the task, indicating whether it is done.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"     * @return A string \"X\" if the task is done, or a space \" \" if it is not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"        return isDone ? \"X\" : \" \"; // mark done task with X","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"     * Formats the task data for writing into storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"     * @return A string representation of the task\u0027s storage format.","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"    public String toWrite() {","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"hjuntan"},"content":"        return (isDone ? 1 : 0) + \" | \" + description;","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"hjuntan"},"content":"     * Checks if the task is marked as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"hjuntan"},"content":"     * @return true if the task is marked, false otherwise.","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"hjuntan"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"hjuntan"},"content":"        return isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"hjuntan"},"content":"     * Formats a LocalDateTime into a different format, \"MMM dd yyyy HH:mm\".","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"hjuntan"},"content":"     * @param dateTime The LocalDateTime object to format.","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"hjuntan"},"content":"     * @return A string representation of the date and time in \"MMM dd yyyy HH:mm\" format.","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"hjuntan"},"content":"    public String dateTimeFormat(LocalDateTime dateTime) {","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"hjuntan"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"MMM-dd-yyyy hh:mm\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"hjuntan"},"content":"    public String dateTimeToWriteFormat(LocalDateTime dateTime) {","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"hjuntan"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"hjuntan"},"content":"     * Checks if the task\u0027s description contains the keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"hjuntan"},"content":"     * @param keyword A String representing the keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"hjuntan"},"content":"     * @return true if the task\u0027s description contains keyword, false otherwise.","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"hjuntan"},"content":"    public boolean contains(String keyword){","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"hjuntan"},"content":"        return description.contains(keyword);","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"hjuntan"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"hjuntan"},"content":"     * Returns the icon representing the type of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"hjuntan"},"content":"     * @return A string representing the task\u0027s type icon.","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"hjuntan"},"content":"    public abstract String getTaskIcon();","lastModifiedDate":"2024-01-23"},{"lineNumber":89,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"hjuntan":89}},{"path":"src/main/java/toothless/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package toothless.tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":" * Represents a todo task in the Toothless application. A todo task includes only a description","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":" * and does not have a date associated with it.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"     * Constructs a Todo task with the specified description.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"     * @param description The todo\u0027s description.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"        super.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"     * Constructs a Todo task with the specified description and completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"     * @param description The todo\u0027s description.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"     * @param isDone The todo\u0027s completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"        super.description \u003d description;","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"        super.isDone \u003d isDone;","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"        return \"T\";","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"    public String toWrite() {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"        return \"T | \" + super.toWrite();","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"hjuntan":37}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" fillHeight\u003d\"false\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"  /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"hjuntan":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"toothless.MainWindow\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"hjuntan":19}},{"path":"src/test/java/toothless/TaskListStub1.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package toothless;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import toothless.tasks.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"import toothless.tasks.Todo;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"public class TaskListStub1 extends TaskList{","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"    public TaskListStub1() {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"        super();","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"        Task task \u003d new Todo(\"Eat sandwich\");","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"        super.addTask(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"hjuntan":15}},{"path":"src/test/java/toothless/UiStub1.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package toothless;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import toothless.tasks.Task;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"public class UiStub1 extends Ui{","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"    public String showMarkedTask(Task task) {","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"        return \"Task marked as done: \" + task;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"hjuntan":11}},{"path":"src/test/java/toothless/commands/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package toothless.commands;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"import toothless.*;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"public class MarkCommandTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"    public void markCorrectTask() {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"            Ui ui \u003d new UiStub1();","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"            TaskList taskList \u003d new TaskListStub1();","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"            Storage storage \u003d new Storage(\"./data/test/toothless.txt\");","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"            MarkCommand markCommand \u003d new MarkCommand(\"1\");","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"            markCommand.handle(ui, taskList, storage);","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"            assertEquals(\"X\", taskList.getTask(0).getStatusIcon());","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"        } catch (ToothlessException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"            fail();","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"    public void markIncorrectTask1() {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"            Ui ui \u003d new UiStub1();","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"            TaskList taskList \u003d new TaskListStub1();","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"            Storage storage \u003d new Storage(\"./data/test/toothless.txt\");","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"            MarkCommand markCommand \u003d new MarkCommand(\"2\");","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"            markCommand.handle(ui, taskList, storage);","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"            fail();","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"        } catch (ToothlessException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"            assertEquals(e.getMessage(), \"Human trying to mark nothing ^O^. Foolish\");","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"    public void markIncorrectTask2() {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"            Ui ui \u003d new UiStub1();","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"            TaskList taskList \u003d new TaskListStub1();","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"            Storage storage \u003d new Storage(\"./data/test/toothless.txt\");","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"            MarkCommand markCommand \u003d new MarkCommand(\"-1\");","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"            markCommand.handle(ui, taskList, storage);","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"            fail();","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"        } catch (ToothlessException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"            assertEquals(e.getMessage(), \"Human trying to mark nothing ^O^. Foolish\");","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"hjuntan"},"content":"    public void markIncorrectTask3() {","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"hjuntan"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"hjuntan"},"content":"            Ui ui \u003d new UiStub1();","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"hjuntan"},"content":"            TaskList taskList \u003d new TaskListStub1();","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"hjuntan"},"content":"            Storage storage \u003d new Storage(\"./data/test/toothless.txt\");","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"hjuntan"},"content":"            MarkCommand markCommand \u003d new MarkCommand(\"hamburger\");","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"hjuntan"},"content":"            markCommand.handle(ui, taskList, storage);","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"hjuntan"},"content":"            fail();","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"hjuntan"},"content":"        } catch (ToothlessException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"hjuntan"},"content":"            assertEquals(e.getMessage(), \"Number put is not number.\\nPlease put real number ._.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"hjuntan":65}},{"path":"src/test/java/toothless/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package toothless.tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"import toothless.Toothless;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"import toothless.ToothlessException;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"    public void createDeadline() {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"            Deadline deadline \u003d new Deadline(\"Eat sandwich\", \"2024-12-31T22:00\");","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"            assertEquals(\"Eat sandwich (by: Dec 31 2024 22:00)\", deadline.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"        } catch (ToothlessException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"            fail();","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"    public void markAndUnmarkDeadline() {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"            Deadline deadline \u003d new Deadline(\"Eat sandwich\", \"2024-12-31T22:00\");","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"            deadline.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"            assertEquals(\"X\", deadline.getStatusIcon());","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"            deadline.markAsNotDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"            assertEquals(\" \", deadline.getStatusIcon());","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"        } catch (ToothlessException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"            fail();","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"    public void saveDeadline() {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"            Deadline deadline \u003d new Deadline(\"Eat sandwich\",\"2024-12-31T22:00\");","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"            assertEquals(\"D | 0 | Eat sandwich | 2024-12-31T22:00\", deadline.toWrite());","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"        } catch (ToothlessException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"            fail();","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"hjuntan":43}},{"path":"src/test/java/toothless/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package toothless.tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"import toothless.ToothlessException;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"public class EventTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"    public void createEvent() {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"        try{","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"            Event event \u003d new Event(\"Sleep\", \"2024-01-14T23:00\", \"2024-01-15T08:00\");","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"            assertEquals(\"Sleep (from: Jan 14 2024 23:00 to: Jan 15 2024 08:00)\", event.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"        } catch (ToothlessException e){","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"            fail();","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"    public void createIncorrectEvent() {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"        try{","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"            Event event \u003d new Event(\"Sleep\", \"2024-01-16T23:00\", \"2024-01-15T08:00\");","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"            fail();","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"        } catch (ToothlessException e){","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"            assertEquals(\"End date is earlier :/\", e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"    public void markAndUnmarkEvent() {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"        try{","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"            Event event \u003d new Event(\"Sleep\", \"2024-01-14T23:00\", \"2024-01-15T08:00\");","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"            event.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"            assertEquals(\"X\", event.getStatusIcon());","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"            event.markAsNotDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"            assertEquals(\" \", event.getStatusIcon());","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"        } catch (ToothlessException e){","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"            fail();","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"    public void saveEvent() {","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"        try{","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"            Event event \u003d new Event(\"Sleep\", \"2024-01-14T23:00\", \"2024-01-15T08:00\");","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"            assertEquals(\"E | 0 | Sleep | 2024-01-14T23:00 | 2024-01-15T08:00\", event.toWrite());","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"        } catch (ToothlessException e){","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"            fail();","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"hjuntan":52}},{"path":"src/test/java/toothless/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package toothless.tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"    public void createTodo() {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"        Todo todo \u003d new Todo(\"Make sandwich\");","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"        assertEquals(\"Make sandwich\", todo.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"    public void markAndUnmarkTodo() {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"        Todo todo \u003d new Todo(\"Make sandwich\");","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"        todo.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"        assertEquals(\"X\", todo.getStatusIcon());","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"        todo.markAsNotDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"        assertEquals(\" \", todo.getStatusIcon());","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"    public void saveTodo() {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"        Todo todo \u003d new Todo(\"Make sandwich\");","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"        assertEquals(\"T | 0 | Make sandwich\", todo.toWrite());","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"hjuntan":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"todo simple task","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"deadline simple assignment /by today","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"event simple celebration /from 26 Jan 4pm /to 26 Jan 6pm","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"mark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"unmark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"hjuntan":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"java -classpath ..\\bin Toothless \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hjuntan":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"# run the program, feed toothless.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hjuntan":1,"-":37}}]
