[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"cleowenxuan"},"content":"    mainClass.set(\"asher.Asher\")","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"cleowenxuan"},"content":"    archiveBaseName \u003d \"asher\"","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cleowenxuan":2,"-":40}},{"path":"src/main/java/asher/Asher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cleowenxuan"},"content":"package asher;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"cleowenxuan"},"content":"import asher.Commands.Parser;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"cleowenxuan"},"content":"import asher.Commands.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"cleowenxuan"},"content":"import asher.Tasks.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"cleowenxuan"},"content":"import asher.Ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"cleowenxuan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"cleowenxuan"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"cleowenxuan"},"content":" * Represents the main Asher class to run the program.","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"cleowenxuan"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"cleowenxuan"},"content":"public class Asher {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"cleowenxuan"},"content":"    private final Ui ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"cleowenxuan"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"cleowenxuan"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"cleowenxuan"},"content":"    private final Parser parser;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"cleowenxuan"},"content":"     * Constructs Asher with the specified file path.","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"cleowenxuan"},"content":"     * @param filePath The file that contains the task data.","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"cleowenxuan"},"content":"    public Asher(String filePath) {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"cleowenxuan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"cleowenxuan"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"cleowenxuan"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"cleowenxuan"},"content":"        parser \u003d new Parser(ui, tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"cleowenxuan"},"content":"     * Runs the Asher bot.","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"cleowenxuan"},"content":"    public void run() {","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"cleowenxuan"},"content":"        String dataFile \u003d \"./taskLists.txt\";","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"cleowenxuan"},"content":"        storage.getFileContents(dataFile, tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"cleowenxuan"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"cleowenxuan"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"cleowenxuan"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"cleowenxuan"},"content":"            String input;","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"cleowenxuan"},"content":"            do {","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"cleowenxuan"},"content":"                input \u003d scanner.nextLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"cleowenxuan"},"content":"                parser.parseCommand(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"cleowenxuan"},"content":"            } while (!input.equals(\"bye\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"cleowenxuan"},"content":"        } catch (BotException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"cleowenxuan"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"cleowenxuan"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"cleowenxuan"},"content":"        ui.showExitMessage();","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"cleowenxuan"},"content":"     * The main entry of the program.","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"cleowenxuan"},"content":"     * @param args The command-line arguments to be passed into the program.","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"cleowenxuan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"cleowenxuan"},"content":"        String dataFile \u003d \"./taskLists.txt\";","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"cleowenxuan"},"content":"        new Asher(dataFile).run();","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"cleowenxuan"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"cleowenxuan":60}},{"path":"src/main/java/asher/BotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cleowenxuan"},"content":"package asher;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"cleowenxuan"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"cleowenxuan"},"content":" * Represents the exception class specific to the bot.","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"cleowenxuan"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"cleowenxuan"},"content":"public class BotException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"cleowenxuan"},"content":"     * Constructs a new BotException with the error message.","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"cleowenxuan"},"content":"     * @param message The message of error.","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"cleowenxuan"},"content":"    public BotException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"cleowenxuan"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"cleowenxuan"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"cleowenxuan":14}},{"path":"src/main/java/asher/Commands/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cleowenxuan"},"content":"package asher.Commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"cleowenxuan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"cleowenxuan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"cleowenxuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"cleowenxuan"},"content":"import asher.BotException;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"cleowenxuan"},"content":"import asher.Tasks.Deadline;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"cleowenxuan"},"content":"import asher.Tasks.Event;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"cleowenxuan"},"content":"import asher.Tasks.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"cleowenxuan"},"content":"import asher.Tasks.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"cleowenxuan"},"content":"import asher.Tasks.Todo;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"cleowenxuan"},"content":"import asher.Ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"cleowenxuan"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"cleowenxuan"},"content":" * The Parser class handles the parsing of user commands and return the corresponding actions for each command.","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"cleowenxuan"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"cleowenxuan"},"content":"public class Parser {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"cleowenxuan"},"content":"    private final Ui ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"cleowenxuan"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"cleowenxuan"},"content":"     * Constructs a Parser object with the given Ui and the TaskList.","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"cleowenxuan"},"content":"     * @param ui The Ui object to interact with user.","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"cleowenxuan"},"content":"     * @param taskList The TaskList object to manage tasks.","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"cleowenxuan"},"content":"    public Parser(Ui ui, TaskList taskList) {","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"cleowenxuan"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"cleowenxuan"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"cleowenxuan"},"content":"     * Parses the user input command and executes the actions for a command.","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"cleowenxuan"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"cleowenxuan"},"content":"     * @throws BotException BotException is thrown if there is an invalid command.","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"cleowenxuan"},"content":"    public void parseCommand(String input) throws BotException {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"cleowenxuan"},"content":"        String[] word \u003d input.split(\" \");","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"cleowenxuan"},"content":"        String inputType \u003d word[0];","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"cleowenxuan"},"content":"        switch (inputType) {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"cleowenxuan"},"content":"            case \"bye\":","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"cleowenxuan"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"cleowenxuan"},"content":"            case \"list\":","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"cleowenxuan"},"content":"                ui.showTaskList(taskList);","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"cleowenxuan"},"content":"                break;  ","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"cleowenxuan"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"cleowenxuan"},"content":"                parseMarkCommand(input, taskList, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"cleowenxuan"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"cleowenxuan"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"cleowenxuan"},"content":"                parseUnmarkCommand(input, taskList, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"cleowenxuan"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"cleowenxuan"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"cleowenxuan"},"content":"                parseToDoCommand(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"cleowenxuan"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"cleowenxuan"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"cleowenxuan"},"content":"                parseDeadlineCommand(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"cleowenxuan"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"cleowenxuan"},"content":"            case \"event\":","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"cleowenxuan"},"content":"                parseEventCommand(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"cleowenxuan"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"cleowenxuan"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"cleowenxuan"},"content":"                parseDeleteCommand(input, taskList, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"cleowenxuan"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"cleowenxuan"},"content":"            case \"find\":","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"cleowenxuan"},"content":"                parseFindCommand(input);","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"cleowenxuan"},"content":"                break;","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"cleowenxuan"},"content":"            default:","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"cleowenxuan"},"content":"                throw new BotException(\"Invalid Command!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"cleowenxuan"},"content":"     * Create a Todo task based on the user input.","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"cleowenxuan"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"cleowenxuan"},"content":"     * @return The created Todo List.","lastModifiedDate":"2024-02-08"},{"lineNumber":76,"author":{"gitId":"cleowenxuan"},"content":"     * @throws BotException BotException is thrown if there is an invalid Todo command or the description is empty.","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"cleowenxuan"},"content":"    public static Todo createToDoCommand(String input) throws BotException {","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"cleowenxuan"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"cleowenxuan"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"cleowenxuan"},"content":"            throw new BotException(\"Todo command is invalid!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"cleowenxuan"},"content":"        String description \u003d parts[1].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"cleowenxuan"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"cleowenxuan"},"content":"            throw new BotException(\"Todo description cannot be empty!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"cleowenxuan"},"content":"        return new Todo(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":92,"author":{"gitId":"cleowenxuan"},"content":"     * Parses the user input command to create a Todo task.","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"cleowenxuan"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-02-08"},{"lineNumber":94,"author":{"gitId":"cleowenxuan"},"content":"     * @throws BotException Bot Exception is thrown when there is an invalid command.","lastModifiedDate":"2024-02-08"},{"lineNumber":95,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":96,"author":{"gitId":"cleowenxuan"},"content":"    public void parseToDoCommand(String input) throws BotException {","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"cleowenxuan"},"content":"        Todo todo \u003d createToDoCommand(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"cleowenxuan"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"cleowenxuan"},"content":"        ui.showAddTaskMessage(todo);","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"cleowenxuan"},"content":"        int totalTask \u003d taskList.getSize();","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"cleowenxuan"},"content":"        ui.showNumberOfTaskInListMessage(totalTask);","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":105,"author":{"gitId":"cleowenxuan"},"content":"     * Create a Deadline task based on the user input.","lastModifiedDate":"2024-02-08"},{"lineNumber":106,"author":{"gitId":"cleowenxuan"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-02-08"},{"lineNumber":107,"author":{"gitId":"cleowenxuan"},"content":"     * @return The created Deadline List.","lastModifiedDate":"2024-02-08"},{"lineNumber":108,"author":{"gitId":"cleowenxuan"},"content":"     * @throws BotException BotException is thrown if there is an invalid Deadline command or the description/deadline is empty.","lastModifiedDate":"2024-02-08"},{"lineNumber":109,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":110,"author":{"gitId":"cleowenxuan"},"content":"    public static Deadline createDeadlineCommand(String input) throws BotException {","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"cleowenxuan"},"content":"        int split \u003d input.indexOf(\"/by\");","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"cleowenxuan"},"content":"        if (split \u003d\u003d -1) {","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"cleowenxuan"},"content":"            throw new BotException(\"Due date not found!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":115,"author":{"gitId":"cleowenxuan"},"content":"        if (split + 4 \u003e\u003d input.length()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":116,"author":{"gitId":"cleowenxuan"},"content":"            throw new BotException(\"No such deadline!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":117,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":118,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":119,"author":{"gitId":"cleowenxuan"},"content":"        String[] parts \u003d input.substring(9).split(\"/by\", 2);","lastModifiedDate":"2024-02-07"},{"lineNumber":120,"author":{"gitId":"cleowenxuan"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":121,"author":{"gitId":"cleowenxuan"},"content":"        String deadline \u003d parts[1].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":122,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":123,"author":{"gitId":"cleowenxuan"},"content":"        String[] deadlineParts \u003d deadline.split(\" \", 2);","lastModifiedDate":"2024-02-07"},{"lineNumber":124,"author":{"gitId":"cleowenxuan"},"content":"        String dueDateInString \u003d deadlineParts[0].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":125,"author":{"gitId":"cleowenxuan"},"content":"        String dueTimeInString \u003d deadlineParts[1].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":126,"author":{"gitId":"cleowenxuan"},"content":"        LocalDate dueDate \u003d LocalDate.parse(dueDateInString);","lastModifiedDate":"2024-02-07"},{"lineNumber":127,"author":{"gitId":"cleowenxuan"},"content":"        LocalTime dueTime \u003d LocalTime.parse(dueTimeInString);","lastModifiedDate":"2024-02-07"},{"lineNumber":128,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":129,"author":{"gitId":"cleowenxuan"},"content":"        if (description.isEmpty() || deadline.isEmpty()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":130,"author":{"gitId":"cleowenxuan"},"content":"            throw new BotException(\"Description and deadline cannot be empty!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":131,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":132,"author":{"gitId":"cleowenxuan"},"content":"        return new Deadline(description, dueDate, dueTime);","lastModifiedDate":"2024-02-07"},{"lineNumber":133,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":134,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":135,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":136,"author":{"gitId":"cleowenxuan"},"content":"     * Parses the user input command to create a Deadline task.","lastModifiedDate":"2024-02-08"},{"lineNumber":137,"author":{"gitId":"cleowenxuan"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-02-08"},{"lineNumber":138,"author":{"gitId":"cleowenxuan"},"content":"     * @throws BotException Bot Exception is thrown when there is an invalid command.","lastModifiedDate":"2024-02-08"},{"lineNumber":139,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":140,"author":{"gitId":"cleowenxuan"},"content":"    public void parseDeadlineCommand(String input) throws BotException {","lastModifiedDate":"2024-02-07"},{"lineNumber":141,"author":{"gitId":"cleowenxuan"},"content":"        Deadline deadline \u003d createDeadlineCommand(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":142,"author":{"gitId":"cleowenxuan"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2024-02-07"},{"lineNumber":143,"author":{"gitId":"cleowenxuan"},"content":"        ui.showAddTaskMessage(deadline);","lastModifiedDate":"2024-02-07"},{"lineNumber":144,"author":{"gitId":"cleowenxuan"},"content":"        int totalTask \u003d taskList.getSize();","lastModifiedDate":"2024-02-07"},{"lineNumber":145,"author":{"gitId":"cleowenxuan"},"content":"        ui.showNumberOfTaskInListMessage(totalTask);","lastModifiedDate":"2024-02-07"},{"lineNumber":146,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":147,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":148,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":149,"author":{"gitId":"cleowenxuan"},"content":"     * Create an Event task based on the user input.","lastModifiedDate":"2024-02-08"},{"lineNumber":150,"author":{"gitId":"cleowenxuan"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-02-08"},{"lineNumber":151,"author":{"gitId":"cleowenxuan"},"content":"     * @return The created Event List.","lastModifiedDate":"2024-02-08"},{"lineNumber":152,"author":{"gitId":"cleowenxuan"},"content":"     * @throws BotException BotException is thrown if there is an invalid Event command or when the endDate/endTime is","lastModifiedDate":"2024-02-08"},{"lineNumber":153,"author":{"gitId":"cleowenxuan"},"content":"     * before the startDate/startTime or when the description/start/end is empty.","lastModifiedDate":"2024-02-08"},{"lineNumber":154,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":155,"author":{"gitId":"cleowenxuan"},"content":"    public static Event createEventCommand(String input) throws BotException {","lastModifiedDate":"2024-02-07"},{"lineNumber":156,"author":{"gitId":"cleowenxuan"},"content":"        int split1 \u003d input.indexOf(\"/from\");","lastModifiedDate":"2024-02-07"},{"lineNumber":157,"author":{"gitId":"cleowenxuan"},"content":"        int split2 \u003d input.indexOf(\"/to\");","lastModifiedDate":"2024-02-07"},{"lineNumber":158,"author":{"gitId":"cleowenxuan"},"content":"        if (split1 \u003d\u003d -1 || split2 \u003d\u003d -1) {","lastModifiedDate":"2024-02-07"},{"lineNumber":159,"author":{"gitId":"cleowenxuan"},"content":"            throw new BotException(\"Start and End time not found!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":160,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":161,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":162,"author":{"gitId":"cleowenxuan"},"content":"        if (split2 + 4 \u003e\u003d input.length()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":163,"author":{"gitId":"cleowenxuan"},"content":"            throw new BotException(\"End time not found!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":164,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":165,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":166,"author":{"gitId":"cleowenxuan"},"content":"        String description \u003d input.substring(6, split1).trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":167,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":168,"author":{"gitId":"cleowenxuan"},"content":"        String start \u003d input.substring(split1 + 6, split2).trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":169,"author":{"gitId":"cleowenxuan"},"content":"        String[] startParts \u003d start.split(\" \", 2);","lastModifiedDate":"2024-02-07"},{"lineNumber":170,"author":{"gitId":"cleowenxuan"},"content":"        String startDateInString \u003d startParts[0].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":171,"author":{"gitId":"cleowenxuan"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateInString);","lastModifiedDate":"2024-02-07"},{"lineNumber":172,"author":{"gitId":"cleowenxuan"},"content":"        String startTimeInString \u003d startParts[1].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":173,"author":{"gitId":"cleowenxuan"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeInString);","lastModifiedDate":"2024-02-07"},{"lineNumber":174,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":175,"author":{"gitId":"cleowenxuan"},"content":"        String end \u003d input.substring(split2 + 4).trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":176,"author":{"gitId":"cleowenxuan"},"content":"        String[] endParts \u003d end.split(\" \", 2);","lastModifiedDate":"2024-02-07"},{"lineNumber":177,"author":{"gitId":"cleowenxuan"},"content":"        String endDateInString \u003d endParts[0].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":178,"author":{"gitId":"cleowenxuan"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateInString);","lastModifiedDate":"2024-02-07"},{"lineNumber":179,"author":{"gitId":"cleowenxuan"},"content":"        String endTimeInString \u003d endParts[1].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":180,"author":{"gitId":"cleowenxuan"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeInString);","lastModifiedDate":"2024-02-07"},{"lineNumber":181,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":182,"author":{"gitId":"cleowenxuan"},"content":"        if ((endDate.isBefore(startDate)) || ((endDate.isEqual(startDate)) \u0026\u0026 (endTime.isBefore(startTime)))) {","lastModifiedDate":"2024-02-07"},{"lineNumber":183,"author":{"gitId":"cleowenxuan"},"content":"            throw new BotException(\"Start Date/Time is after End Date/Time!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":184,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":185,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":186,"author":{"gitId":"cleowenxuan"},"content":"        if (description.isEmpty() || start.isEmpty() || end.isEmpty()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":187,"author":{"gitId":"cleowenxuan"},"content":"            throw new BotException(\"Description, StartTiming or EndTiming not found!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":188,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":189,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":190,"author":{"gitId":"cleowenxuan"},"content":"        return new Event(description, startDate, startTime, endDate, endTime);","lastModifiedDate":"2024-02-07"},{"lineNumber":191,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":192,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":193,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":194,"author":{"gitId":"cleowenxuan"},"content":"     * Parses the user input command to create an Event task.","lastModifiedDate":"2024-02-08"},{"lineNumber":195,"author":{"gitId":"cleowenxuan"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-02-08"},{"lineNumber":196,"author":{"gitId":"cleowenxuan"},"content":"     * @throws BotException Bot Exception is thrown when there is an invalid command.","lastModifiedDate":"2024-02-08"},{"lineNumber":197,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":198,"author":{"gitId":"cleowenxuan"},"content":"    public void parseEventCommand(String input) throws BotException {","lastModifiedDate":"2024-02-07"},{"lineNumber":199,"author":{"gitId":"cleowenxuan"},"content":"        Event event \u003d createEventCommand(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":200,"author":{"gitId":"cleowenxuan"},"content":"        taskList.addTask(event);","lastModifiedDate":"2024-02-07"},{"lineNumber":201,"author":{"gitId":"cleowenxuan"},"content":"        ui.showAddTaskMessage(event);","lastModifiedDate":"2024-02-07"},{"lineNumber":202,"author":{"gitId":"cleowenxuan"},"content":"        int totalTask \u003d taskList.getSize();","lastModifiedDate":"2024-02-07"},{"lineNumber":203,"author":{"gitId":"cleowenxuan"},"content":"        ui.showNumberOfTaskInListMessage(totalTask);","lastModifiedDate":"2024-02-07"},{"lineNumber":204,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":205,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":206,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":207,"author":{"gitId":"cleowenxuan"},"content":"     * Parses the user input command to mark a task done and update the task status.","lastModifiedDate":"2024-02-08"},{"lineNumber":208,"author":{"gitId":"cleowenxuan"},"content":"     * @param command The user input command.","lastModifiedDate":"2024-02-08"},{"lineNumber":209,"author":{"gitId":"cleowenxuan"},"content":"     * @param taskList The TaskList containing the tasks.","lastModifiedDate":"2024-02-08"},{"lineNumber":210,"author":{"gitId":"cleowenxuan"},"content":"     * @param ui The Ui object for displaying messages that the task is marked.","lastModifiedDate":"2024-02-08"},{"lineNumber":211,"author":{"gitId":"cleowenxuan"},"content":"     * @throws BotException Bot Exception is thrown when the task is not found.","lastModifiedDate":"2024-02-08"},{"lineNumber":212,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":213,"author":{"gitId":"cleowenxuan"},"content":"    private static void parseMarkCommand(String command, TaskList taskList, Ui ui) throws BotException {","lastModifiedDate":"2024-02-07"},{"lineNumber":214,"author":{"gitId":"cleowenxuan"},"content":"        int taskNumber \u003d taskList.getTaskNumber(command);","lastModifiedDate":"2024-02-07"},{"lineNumber":215,"author":{"gitId":"cleowenxuan"},"content":"        if (taskNumber !\u003d -1) {","lastModifiedDate":"2024-02-07"},{"lineNumber":216,"author":{"gitId":"cleowenxuan"},"content":"            taskList.getTasks().get(taskNumber).markDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":217,"author":{"gitId":"cleowenxuan"},"content":"            ui.showMarkTaskMessage(taskList.getTasks().get(taskNumber));","lastModifiedDate":"2024-02-07"},{"lineNumber":218,"author":{"gitId":"cleowenxuan"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":219,"author":{"gitId":"cleowenxuan"},"content":"            throw new BotException(\"Invalid Task!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":220,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":221,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":222,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":223,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":224,"author":{"gitId":"cleowenxuan"},"content":"     * Parses the user input command to unmark a task done and update the task status.","lastModifiedDate":"2024-02-08"},{"lineNumber":225,"author":{"gitId":"cleowenxuan"},"content":"     * @param command The user input command.","lastModifiedDate":"2024-02-08"},{"lineNumber":226,"author":{"gitId":"cleowenxuan"},"content":"     * @param taskList The TaskList containing the tasks.","lastModifiedDate":"2024-02-08"},{"lineNumber":227,"author":{"gitId":"cleowenxuan"},"content":"     * @param ui The Ui object for displaying messages that the task is unmarked.","lastModifiedDate":"2024-02-08"},{"lineNumber":228,"author":{"gitId":"cleowenxuan"},"content":"     * @throws BotException Bot Exception is thrown when the task is not found.","lastModifiedDate":"2024-02-08"},{"lineNumber":229,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":230,"author":{"gitId":"cleowenxuan"},"content":"    private static void parseUnmarkCommand(String command, TaskList taskList, Ui ui) throws BotException {","lastModifiedDate":"2024-02-07"},{"lineNumber":231,"author":{"gitId":"cleowenxuan"},"content":"        int taskNumber \u003d taskList.getTaskNumber(command);","lastModifiedDate":"2024-02-07"},{"lineNumber":232,"author":{"gitId":"cleowenxuan"},"content":"        if (taskNumber !\u003d -1) {","lastModifiedDate":"2024-02-07"},{"lineNumber":233,"author":{"gitId":"cleowenxuan"},"content":"            taskList.getTasks().get(taskNumber).markUndone();","lastModifiedDate":"2024-02-07"},{"lineNumber":234,"author":{"gitId":"cleowenxuan"},"content":"            ui.showUnmarkTaskMessage(taskList.getTasks().get(taskNumber));","lastModifiedDate":"2024-02-07"},{"lineNumber":235,"author":{"gitId":"cleowenxuan"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":236,"author":{"gitId":"cleowenxuan"},"content":"            throw new BotException(\"Invalid Task!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":237,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":238,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":239,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":240,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":241,"author":{"gitId":"cleowenxuan"},"content":"     * Parses the user input command to delete a task and remove it from the TaskList.","lastModifiedDate":"2024-02-08"},{"lineNumber":242,"author":{"gitId":"cleowenxuan"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-02-08"},{"lineNumber":243,"author":{"gitId":"cleowenxuan"},"content":"     * @param taskList The TaskList containing the tasks.","lastModifiedDate":"2024-02-08"},{"lineNumber":244,"author":{"gitId":"cleowenxuan"},"content":"     * @param ui The Ui object for displaying messages that delete is successful.","lastModifiedDate":"2024-02-08"},{"lineNumber":245,"author":{"gitId":"cleowenxuan"},"content":"     * @throws BotException Bot Exception is thrown if there is an invalid command.","lastModifiedDate":"2024-02-08"},{"lineNumber":246,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":247,"author":{"gitId":"cleowenxuan"},"content":"    private static void parseDeleteCommand(String input, TaskList taskList, Ui ui) throws BotException {","lastModifiedDate":"2024-02-07"},{"lineNumber":248,"author":{"gitId":"cleowenxuan"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":249,"author":{"gitId":"cleowenxuan"},"content":"            String[] words \u003d input.split(\" \");","lastModifiedDate":"2024-02-07"},{"lineNumber":250,"author":{"gitId":"cleowenxuan"},"content":"            if (words.length \u003c 2) {","lastModifiedDate":"2024-02-07"},{"lineNumber":251,"author":{"gitId":"cleowenxuan"},"content":"                throw new BotException(\"Invalid format of input!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":252,"author":{"gitId":"cleowenxuan"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":253,"author":{"gitId":"cleowenxuan"},"content":"            int taskId \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2024-02-07"},{"lineNumber":254,"author":{"gitId":"cleowenxuan"},"content":"            int taskIndex \u003d taskList.getTaskIndexById(taskId);","lastModifiedDate":"2024-02-07"},{"lineNumber":255,"author":{"gitId":"cleowenxuan"},"content":"            if (taskIndex !\u003d -1) {","lastModifiedDate":"2024-02-07"},{"lineNumber":256,"author":{"gitId":"cleowenxuan"},"content":"                Task removedTask \u003d taskList.deleteTask(taskIndex);","lastModifiedDate":"2024-02-07"},{"lineNumber":257,"author":{"gitId":"cleowenxuan"},"content":"                if (removedTask !\u003d null) {","lastModifiedDate":"2024-02-07"},{"lineNumber":258,"author":{"gitId":"cleowenxuan"},"content":"                    ui.showRemoveTaskMessage(removedTask);","lastModifiedDate":"2024-02-07"},{"lineNumber":259,"author":{"gitId":"cleowenxuan"},"content":"                    ui.showNumberOfTaskInListMessage(taskList.getTasks().size());","lastModifiedDate":"2024-02-07"},{"lineNumber":260,"author":{"gitId":"cleowenxuan"},"content":"                } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":261,"author":{"gitId":"cleowenxuan"},"content":"                    System.out.println(\"Task not found!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":262,"author":{"gitId":"cleowenxuan"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":263,"author":{"gitId":"cleowenxuan"},"content":"                taskList.updateTaskIds();","lastModifiedDate":"2024-02-07"},{"lineNumber":264,"author":{"gitId":"cleowenxuan"},"content":"            } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":265,"author":{"gitId":"cleowenxuan"},"content":"                System.out.println(\"Task not found!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":266,"author":{"gitId":"cleowenxuan"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":267,"author":{"gitId":"cleowenxuan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":268,"author":{"gitId":"cleowenxuan"},"content":"            throw new BotException(\"Task not found!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":269,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":270,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":271,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":272,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":273,"author":{"gitId":"cleowenxuan"},"content":"     * Parses the user input command to find the tasks with the keyword.","lastModifiedDate":"2024-02-08"},{"lineNumber":274,"author":{"gitId":"cleowenxuan"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-02-08"},{"lineNumber":275,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":276,"author":{"gitId":"cleowenxuan"},"content":"    private void parseFindCommand(String input) {","lastModifiedDate":"2024-02-08"},{"lineNumber":277,"author":{"gitId":"cleowenxuan"},"content":"        String keyword \u003d input.substring(5).trim();","lastModifiedDate":"2024-02-08"},{"lineNumber":278,"author":{"gitId":"cleowenxuan"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d taskList.searchKeyword(keyword);","lastModifiedDate":"2024-02-08"},{"lineNumber":279,"author":{"gitId":"cleowenxuan"},"content":"        ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2024-02-08"},{"lineNumber":280,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":281,"author":{"gitId":"cleowenxuan"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"cleowenxuan":281}},{"path":"src/main/java/asher/Commands/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cleowenxuan"},"content":"package asher.Commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"cleowenxuan"},"content":"import java.io.File;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"cleowenxuan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"cleowenxuan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"cleowenxuan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"cleowenxuan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"cleowenxuan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"cleowenxuan"},"content":"import asher.Tasks.Deadline;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"cleowenxuan"},"content":"import asher.Tasks.Event;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"cleowenxuan"},"content":"import asher.Tasks.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"cleowenxuan"},"content":"import asher.Tasks.Todo;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"cleowenxuan"},"content":"import asher.Tasks.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"cleowenxuan"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"cleowenxuan"},"content":" * The storage class handles storing tasks into a file in the hard disk before program exit and","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"cleowenxuan"},"content":" * retrieving the tasks from the same file when the program is run again.","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"cleowenxuan"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"cleowenxuan"},"content":"public class Storage {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"cleowenxuan"},"content":"    protected String filePath;","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"cleowenxuan"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"cleowenxuan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"cleowenxuan"},"content":"     * Retrieves the tasks from the file that is saved and give the user the list of tasks","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"cleowenxuan"},"content":"     * that was previously stored.","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"cleowenxuan"},"content":"     * @param filePath The file that the tasks are stored in.","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"cleowenxuan"},"content":"     * @param tasks The List of tasks.","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"cleowenxuan"},"content":"    public void getFileContents(String filePath, TaskList tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"cleowenxuan"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"cleowenxuan"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"cleowenxuan"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"cleowenxuan"},"content":"                boolean created \u003d file.createNewFile();","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"cleowenxuan"},"content":"                if (!created) {","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"cleowenxuan"},"content":"                    throw new IOException(\"Failed to create file: \" + filePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"cleowenxuan"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"cleowenxuan"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"cleowenxuan"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"cleowenxuan"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"cleowenxuan"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"cleowenxuan"},"content":"                Task task \u003d createTask(line);","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"cleowenxuan"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"cleowenxuan"},"content":"                    tasks.addTask(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"cleowenxuan"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"cleowenxuan"},"content":"            } scanner.close();","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"cleowenxuan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"cleowenxuan"},"content":"            System.out.println(\"Error:\" + e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"cleowenxuan"},"content":"    private Task createTask(String list) {","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"cleowenxuan"},"content":"        Task task;","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"cleowenxuan"},"content":"        String[] splitParts \u003d list.split(\" \\\\| \");","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"cleowenxuan"},"content":"        if (splitParts.length \u003c 3) {","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"cleowenxuan"},"content":"            return null;","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"cleowenxuan"},"content":"        String type \u003d splitParts[0];","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"cleowenxuan"},"content":"        boolean isCompleted \u003d splitParts[1].equals(\"1\");","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"cleowenxuan"},"content":"        String description \u003d splitParts[2];","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"cleowenxuan"},"content":"        if (type.equals(\"T\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"cleowenxuan"},"content":"            Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"cleowenxuan"},"content":"            if (isCompleted) {","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"cleowenxuan"},"content":"                todo.markDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"cleowenxuan"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"cleowenxuan"},"content":"            task \u003d todo;","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"cleowenxuan"},"content":"        } else if (type.equals(\"D\") \u0026\u0026 splitParts.length \u003d\u003d 5) {","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"cleowenxuan"},"content":"            String date \u003d splitParts[3];","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"cleowenxuan"},"content":"            LocalDate dueDate \u003d LocalDate.parse(date);","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"cleowenxuan"},"content":"            String dueTimeInString \u003d splitParts[4];","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"cleowenxuan"},"content":"            LocalTime dueTime \u003d LocalTime.parse(dueTimeInString);","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"cleowenxuan"},"content":"            Deadline deadline \u003d new Deadline(description, dueDate, dueTime);","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"cleowenxuan"},"content":"            if (isCompleted) {","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"cleowenxuan"},"content":"                deadline.markDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"cleowenxuan"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"cleowenxuan"},"content":"            task \u003d deadline;","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"cleowenxuan"},"content":"        } else if (type.equals(\"E\") \u0026\u0026 splitParts.length \u003d\u003d 7) {","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"cleowenxuan"},"content":"            String startDateInString \u003d splitParts[3];","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"cleowenxuan"},"content":"            LocalDate startDate \u003d LocalDate.parse(startDateInString);","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"cleowenxuan"},"content":"            String startTimeInString \u003d splitParts[4];","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"cleowenxuan"},"content":"            LocalTime startTime \u003d LocalTime.parse(startTimeInString);","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"cleowenxuan"},"content":"            String endDateInString \u003d splitParts[5];","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"cleowenxuan"},"content":"            LocalDate endDate \u003d LocalDate.parse(endDateInString);","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"cleowenxuan"},"content":"            String endTimeInString \u003d splitParts[6];","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"cleowenxuan"},"content":"            LocalTime endTime \u003d LocalTime.parse(endTimeInString);","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"cleowenxuan"},"content":"            Event event \u003d new Event(description, startDate, startTime, endDate, endTime);","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"cleowenxuan"},"content":"            if (isCompleted) {","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"cleowenxuan"},"content":"                event.markDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"cleowenxuan"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"cleowenxuan"},"content":"            task \u003d event;","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"cleowenxuan"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"cleowenxuan"},"content":"            task \u003d null;","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"cleowenxuan"},"content":"        return task;","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":106,"author":{"gitId":"cleowenxuan"},"content":"     * Writes the list of tasks into the file before program terminates.","lastModifiedDate":"2024-02-08"},{"lineNumber":107,"author":{"gitId":"cleowenxuan"},"content":"     * @param tasks The List of tasks.","lastModifiedDate":"2024-02-08"},{"lineNumber":108,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":109,"author":{"gitId":"cleowenxuan"},"content":"    public void writeToFile(TaskList tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":110,"author":{"gitId":"cleowenxuan"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"cleowenxuan"},"content":"            FileWriter fw \u003d new FileWriter(\"./taskLists.txt\");","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"cleowenxuan"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"cleowenxuan"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"cleowenxuan"},"content":"                if (task \u003d\u003d null) {","lastModifiedDate":"2024-02-07"},{"lineNumber":115,"author":{"gitId":"cleowenxuan"},"content":"                    break;","lastModifiedDate":"2024-02-07"},{"lineNumber":116,"author":{"gitId":"cleowenxuan"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":117,"author":{"gitId":"cleowenxuan"},"content":"                String taskString \u003d task.writeToString();","lastModifiedDate":"2024-02-07"},{"lineNumber":118,"author":{"gitId":"cleowenxuan"},"content":"                fw.write(taskString + \u0027\\n\u0027);","lastModifiedDate":"2024-02-07"},{"lineNumber":119,"author":{"gitId":"cleowenxuan"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":120,"author":{"gitId":"cleowenxuan"},"content":"            fw.close();","lastModifiedDate":"2024-02-07"},{"lineNumber":121,"author":{"gitId":"cleowenxuan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":122,"author":{"gitId":"cleowenxuan"},"content":"            System.out.println(\"Cannot write into the file\" + e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":123,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":124,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":125,"author":{"gitId":"cleowenxuan"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"cleowenxuan":125}},{"path":"src/main/java/asher/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cleowenxuan"},"content":"package asher.Tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"cleowenxuan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"cleowenxuan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"cleowenxuan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"cleowenxuan"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"cleowenxuan"},"content":" * Represents a type of task called deadline.","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"cleowenxuan"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"cleowenxuan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"cleowenxuan"},"content":"    protected LocalDate dueDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"cleowenxuan"},"content":"    protected LocalTime dueTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"cleowenxuan"},"content":"     * Constructs a Deadline with the given description and the given due date.","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"cleowenxuan"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"cleowenxuan"},"content":"     * @param dueDate The end date of the deadline.","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"cleowenxuan"},"content":"     * @param dueTime The end time of the deadline.","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"cleowenxuan"},"content":"    public Deadline(String description, LocalDate dueDate, LocalTime dueTime) {","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"cleowenxuan"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"cleowenxuan"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"cleowenxuan"},"content":"        this.dueTime \u003d dueTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"cleowenxuan"},"content":"     * Retrieves the due date of the task.","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"cleowenxuan"},"content":"     * @return The due date in LocalDate object.","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"cleowenxuan"},"content":"    public LocalDate getDueDate() {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"cleowenxuan"},"content":"        return dueDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"cleowenxuan"},"content":"     * Retrieves the due time of the task.","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"cleowenxuan"},"content":"     * @return The due time in LocalTime object.","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"cleowenxuan"},"content":"    public LocalTime getDueTime() {","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"cleowenxuan"},"content":"        return dueTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"cleowenxuan"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"cleowenxuan"},"content":"    public String writeToString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"cleowenxuan"},"content":"        String status \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"cleowenxuan"},"content":"        return \"D\" + \" | \" + status + \" | \" + description + \" | \" + dueDate + \" | \" + dueTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"cleowenxuan"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"cleowenxuan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"cleowenxuan"},"content":"        DateTimeFormatter formattingDate \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"cleowenxuan"},"content":"        DateTimeFormatter formattingTime \u003d DateTimeFormatter.ofPattern(\"hh:mm a\");","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"cleowenxuan"},"content":"        String formattedDate \u003d dueDate.format(formattingDate);","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"cleowenxuan"},"content":"        String formattedTime \u003d dueTime.format(formattingTime);","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"cleowenxuan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \",\" + \" \" + formattedTime + \")\";","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"cleowenxuan"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"cleowenxuan":56}},{"path":"src/main/java/asher/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cleowenxuan"},"content":"package asher.Tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"cleowenxuan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"cleowenxuan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"cleowenxuan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"cleowenxuan"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"cleowenxuan"},"content":" * Represents a type of task called Event.","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"cleowenxuan"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"cleowenxuan"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"cleowenxuan"},"content":"    protected LocalDate startDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"cleowenxuan"},"content":"    protected LocalTime startTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"cleowenxuan"},"content":"    protected LocalDate endDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"cleowenxuan"},"content":"    protected LocalTime endTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"cleowenxuan"},"content":"     * Constructs an Event with the given start date and end date.","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"cleowenxuan"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"cleowenxuan"},"content":"     * @param startDate The start date of the event.","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"cleowenxuan"},"content":"     * @param startTime The start time of the event.","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"cleowenxuan"},"content":"     * @param endDate The end date of the event.","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"cleowenxuan"},"content":"     * @param endTime The end time of the event.","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"cleowenxuan"},"content":"    public Event(String description, LocalDate startDate, LocalTime startTime, LocalDate endDate, LocalTime endTime) {","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"cleowenxuan"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"cleowenxuan"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"cleowenxuan"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"cleowenxuan"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"cleowenxuan"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"cleowenxuan"},"content":"     * Retrieves the start date of the task.","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"cleowenxuan"},"content":"     * @return The start date in LocalDate.","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"cleowenxuan"},"content":"    public LocalDate getStartDate() {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"cleowenxuan"},"content":"        return startDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"cleowenxuan"},"content":"     * Retrieves the end date of the task.","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"cleowenxuan"},"content":"     * @return The end date in LocalDate.","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"cleowenxuan"},"content":"    public LocalDate getEndDate() {","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"cleowenxuan"},"content":"        return endDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"cleowenxuan"},"content":"     * Retrieves the start date of the task.","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"cleowenxuan"},"content":"     * @return The start date in LocalTime.","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"cleowenxuan"},"content":"    public LocalTime getStartTime() {","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"cleowenxuan"},"content":"        return startTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"cleowenxuan"},"content":"     * Retrieves the end date of the task.","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"cleowenxuan"},"content":"     * @return The end date in LocalTime.","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"cleowenxuan"},"content":"    public LocalTime getEndTime() {","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"cleowenxuan"},"content":"        return endTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"cleowenxuan"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"cleowenxuan"},"content":"    public String writeToString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"cleowenxuan"},"content":"        String status \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"cleowenxuan"},"content":"        return \"E\" + \" | \" + status + \" | \" + description + \" | \" + startDate + \" | \" + startTime + \" | \" + endDate + \" | \" + endTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"cleowenxuan"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"cleowenxuan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"cleowenxuan"},"content":"        DateTimeFormatter formattingDate \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"cleowenxuan"},"content":"        DateTimeFormatter formattingTime \u003d DateTimeFormatter.ofPattern(\"hh:mm a\");","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"cleowenxuan"},"content":"        String formattedStartDate \u003d startDate.format(formattingDate);","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"cleowenxuan"},"content":"        String formattedEndDate \u003d endDate.format(formattingDate);","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"cleowenxuan"},"content":"        String formattedStartTime \u003d startTime.format(formattingTime);","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"cleowenxuan"},"content":"        String formattedEndTime \u003d endTime.format(formattingTime);","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"cleowenxuan"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formattedStartDate + \",\" + \" \" + formattedStartTime + \" to: \" + formattedEndDate + \",\" + \" \" + formattedEndTime + \")\";","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"cleowenxuan"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"cleowenxuan":80}},{"path":"src/main/java/asher/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cleowenxuan"},"content":"package asher.Tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"cleowenxuan"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"cleowenxuan"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"cleowenxuan"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"cleowenxuan"},"content":"    private static int nextId \u003d 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"cleowenxuan"},"content":"    private int id;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"cleowenxuan"},"content":"     * Represents a task.","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"cleowenxuan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"cleowenxuan"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"cleowenxuan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"cleowenxuan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"cleowenxuan"},"content":"        this.id \u003d nextId++;","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"cleowenxuan"},"content":"     * Get the description of the task.","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"cleowenxuan"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"cleowenxuan"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"cleowenxuan"},"content":"        return description;","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"cleowenxuan"},"content":"     * Retrieves the TaskId of the task.","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"cleowenxuan"},"content":"     * @return The TaskId of the task.","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"cleowenxuan"},"content":"    public int getTaskId() {","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"cleowenxuan"},"content":"        return id;","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"cleowenxuan"},"content":"     * Retrieves the ID of the task.","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"cleowenxuan"},"content":"     * @return The ID of the task.","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"cleowenxuan"},"content":"    public int getId() {","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"cleowenxuan"},"content":"        return this.id;","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"cleowenxuan"},"content":"     * Sets the ID of the task.","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"cleowenxuan"},"content":"     * @param id The ID of the task that is to be set.","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"cleowenxuan"},"content":"    public void setId(int id) {","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"cleowenxuan"},"content":"        this.id \u003d id;","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"cleowenxuan"},"content":"     * Retrieves the status of whether the task is marked.","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"cleowenxuan"},"content":"     * @return \"X\" if the task is mark, \" \" if the task is unmark","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"cleowenxuan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"cleowenxuan"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"cleowenxuan"},"content":"     * Mark the task as done by setting isDone to be true.","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"cleowenxuan"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"cleowenxuan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"cleowenxuan"},"content":"     * Mark the task as undone by setting isDone to be false.","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"cleowenxuan"},"content":"    public void markUndone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"cleowenxuan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"cleowenxuan"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"cleowenxuan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"cleowenxuan"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"cleowenxuan"},"content":"    public String writeToString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"cleowenxuan"},"content":"        return \"\";","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"cleowenxuan"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"cleowenxuan":81}},{"path":"src/main/java/asher/Tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cleowenxuan"},"content":"package asher.Tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"cleowenxuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"cleowenxuan"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"cleowenxuan"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"cleowenxuan"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"cleowenxuan"},"content":"public class TaskList {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"cleowenxuan"},"content":"    private final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"cleowenxuan"},"content":"    public static final int MAX_TASKS \u003d 100;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"cleowenxuan"},"content":"     * Retrieves the total number of tasks in the list.","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"cleowenxuan"},"content":"     * @return The total number of tasks.","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"cleowenxuan"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"cleowenxuan"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"cleowenxuan"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"cleowenxuan"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"cleowenxuan"},"content":"     * @return The task at the specified index if valid, else return null.","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"cleowenxuan"},"content":"    public Task get(int index) {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"cleowenxuan"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"cleowenxuan"},"content":"            return tasks.get(index);","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"cleowenxuan"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"cleowenxuan"},"content":"            return null;","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"cleowenxuan"},"content":"     * Retrieves the list of tasks.","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"cleowenxuan"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"cleowenxuan"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"cleowenxuan"},"content":"        return tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"cleowenxuan"},"content":"     * Retrieves the index of a task based on its ID.","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"cleowenxuan"},"content":"     * @param taskId The ID of the task.","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"cleowenxuan"},"content":"     * @return The index that the task is at.","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"cleowenxuan"},"content":"    public int getTaskIndexById(int taskId) {","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"cleowenxuan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"cleowenxuan"},"content":"            if (tasks.get(i).getTaskId() \u003d\u003d taskId) {","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"cleowenxuan"},"content":"                return i;","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"cleowenxuan"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"cleowenxuan"},"content":"        return -1;","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"cleowenxuan"},"content":"     * Retrieves the index of a task based on its ID extracted from the command.","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"cleowenxuan"},"content":"     * @param task The command containing the taskId.","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"cleowenxuan"},"content":"     * @return The index that the task is at.","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"cleowenxuan"},"content":"    public int getTaskNumber(String task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"cleowenxuan"},"content":"        String[] word \u003d task.split(\" \");","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"cleowenxuan"},"content":"        if (word.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"cleowenxuan"},"content":"            int taskId \u003d Integer.parseInt(word[1]);","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"cleowenxuan"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"cleowenxuan"},"content":"                if (tasks.get(i).getId() \u003d\u003d taskId) {","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"cleowenxuan"},"content":"                    return i;","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"cleowenxuan"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"cleowenxuan"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"cleowenxuan"},"content":"        return -1;","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"cleowenxuan"},"content":"     * Updates the IDs of the tasks in the list.","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":76,"author":{"gitId":"cleowenxuan"},"content":"    public void updateTaskIds() {","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"cleowenxuan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"cleowenxuan"},"content":"            tasks.get(i).setId(i + 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"cleowenxuan"},"content":"     * Add a task to the task list.","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"cleowenxuan"},"content":"     * @param task The task that should be added into the list.","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"cleowenxuan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"cleowenxuan"},"content":"        if (tasks.size() \u003c MAX_TASKS) {","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"cleowenxuan"},"content":"            tasks.add(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"cleowenxuan"},"content":"     * Deletes the task with the specified task ID from the task list.","lastModifiedDate":"2024-02-08"},{"lineNumber":94,"author":{"gitId":"cleowenxuan"},"content":"     * @param taskId The ID of the task to be deleted.","lastModifiedDate":"2024-02-08"},{"lineNumber":95,"author":{"gitId":"cleowenxuan"},"content":"     * @return The task that was removed, else return null if invalid task.","lastModifiedDate":"2024-02-08"},{"lineNumber":96,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"cleowenxuan"},"content":"    public Task deleteTask(int taskId) {","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"cleowenxuan"},"content":"        if (taskId \u003c 0 || taskId \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"cleowenxuan"},"content":"            return null;","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"cleowenxuan"},"content":"        return tasks.remove(taskId);","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":104,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":105,"author":{"gitId":"cleowenxuan"},"content":"     * Searches the keyword inside the list of task.","lastModifiedDate":"2024-02-08"},{"lineNumber":106,"author":{"gitId":"cleowenxuan"},"content":"     * @param keyword The word to search for.","lastModifiedDate":"2024-02-08"},{"lineNumber":107,"author":{"gitId":"cleowenxuan"},"content":"     * @return All the tasks that contains the keyword.","lastModifiedDate":"2024-02-08"},{"lineNumber":108,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":109,"author":{"gitId":"cleowenxuan"},"content":"    public ArrayList\u003cTask\u003e searchKeyword(String keyword) {","lastModifiedDate":"2024-02-08"},{"lineNumber":110,"author":{"gitId":"cleowenxuan"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-08"},{"lineNumber":111,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":112,"author":{"gitId":"cleowenxuan"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-08"},{"lineNumber":113,"author":{"gitId":"cleowenxuan"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2024-02-08"},{"lineNumber":114,"author":{"gitId":"cleowenxuan"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-02-08"},{"lineNumber":115,"author":{"gitId":"cleowenxuan"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":116,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":117,"author":{"gitId":"cleowenxuan"},"content":"        return matchingTasks;","lastModifiedDate":"2024-02-08"},{"lineNumber":118,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":119,"author":{"gitId":"cleowenxuan"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"cleowenxuan":119}},{"path":"src/main/java/asher/Tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cleowenxuan"},"content":"package asher.Tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"cleowenxuan"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"cleowenxuan"},"content":" * Represents a type of task called ToDo.","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"cleowenxuan"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"cleowenxuan"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"cleowenxuan"},"content":"     * Constructs a ToDo with the given description.","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"cleowenxuan"},"content":"     * @param description The description of the todo.","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"cleowenxuan"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"cleowenxuan"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"cleowenxuan"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"cleowenxuan"},"content":"    public String writeToString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"cleowenxuan"},"content":"        String status \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"cleowenxuan"},"content":"        return \"T\" + \" | \" + status + \" | \" + description;","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"cleowenxuan"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"cleowenxuan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"cleowenxuan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"cleowenxuan"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"cleowenxuan":25}},{"path":"src/main/java/asher/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cleowenxuan"},"content":"package asher.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"cleowenxuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"cleowenxuan"},"content":"import asher.Tasks.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"cleowenxuan"},"content":"import asher.Tasks.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"cleowenxuan"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"cleowenxuan"},"content":" * Contains functions to handle the user interface of the bot.","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"cleowenxuan"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"cleowenxuan"},"content":"public class Ui {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"cleowenxuan"},"content":"     * Constructs a Ui object.","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"cleowenxuan"},"content":"    public Ui() {}","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"cleowenxuan"},"content":"     * Displays the welcome message at the start.","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"cleowenxuan"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"cleowenxuan"},"content":"        System.out.println(\"Hello! I\u0027m Asher. What can I do for you?\");","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"cleowenxuan"},"content":"     * Displays the exit message at the end.","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"cleowenxuan"},"content":"    public void showExitMessage() {","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"cleowenxuan"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"cleowenxuan"},"content":"     * Displays the add task message.","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"cleowenxuan"},"content":"     * @param task The task that is added.","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"cleowenxuan"},"content":"    public void showAddTaskMessage(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"cleowenxuan"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"cleowenxuan"},"content":"        System.out.println(\" \" + task);","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"cleowenxuan"},"content":"     * Displays the remove task message.","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"cleowenxuan"},"content":"     * @param removedTask The task that is deleted.","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"cleowenxuan"},"content":"    public void showRemoveTaskMessage(Task removedTask) {","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"cleowenxuan"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"cleowenxuan"},"content":"        System.out.println(\" \" + removedTask);","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"cleowenxuan"},"content":"     * Displays the number of tasks in the list message.","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"cleowenxuan"},"content":"     * @param totalTasks The total number of tasks.","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"cleowenxuan"},"content":"    public void showNumberOfTaskInListMessage(int totalTasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"cleowenxuan"},"content":"        System.out.println(\"Now you have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"cleowenxuan"},"content":"     * Display the task is marked message.","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"cleowenxuan"},"content":"     * @param task The task that should be marked.","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"cleowenxuan"},"content":"    public void showMarkTaskMessage(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"cleowenxuan"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"cleowenxuan"},"content":"        System.out.println(\" \"  + task);","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"cleowenxuan"},"content":"     * Displays the task is unmarked message.","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"cleowenxuan"},"content":"     * @param task The task that should be unmarked.","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"cleowenxuan"},"content":"    public void showUnmarkTaskMessage(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"cleowenxuan"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"cleowenxuan"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":76,"author":{"gitId":"cleowenxuan"},"content":"     * Displays the task list message.","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"cleowenxuan"},"content":"     * @param taskList The task list.","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"cleowenxuan"},"content":"    public void showTaskList(TaskList taskList) {","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"cleowenxuan"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"cleowenxuan"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"cleowenxuan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"cleowenxuan"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"cleowenxuan"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"cleowenxuan"},"content":"     * Displays the matching tasks message.","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"cleowenxuan"},"content":"     * @param matchingTasks The tasks that have the common keyword.","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"cleowenxuan"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":92,"author":{"gitId":"cleowenxuan"},"content":"    public void showMatchingTasks(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"cleowenxuan"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":94,"author":{"gitId":"cleowenxuan"},"content":"            System.out.println(\"No matching tasks at all!\");","lastModifiedDate":"2024-02-08"},{"lineNumber":95,"author":{"gitId":"cleowenxuan"},"content":"        } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":96,"author":{"gitId":"cleowenxuan"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":98,"author":{"gitId":"cleowenxuan"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"cleowenxuan"},"content":"                System.out.println((i + 1) + \".\" + matchingTasks.get(i));","lastModifiedDate":"2024-02-08"},{"lineNumber":100,"author":{"gitId":"cleowenxuan"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":101,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":102,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":103,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":104,"author":{"gitId":"cleowenxuan"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"cleowenxuan":104}},{"path":"src/test/java/asher/Commands/parserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cleowenxuan"},"content":"package asher.Commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"cleowenxuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"cleowenxuan"},"content":"import asher.BotException;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"cleowenxuan"},"content":"import asher.Tasks.Todo;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"cleowenxuan"},"content":"import asher.Tasks.Deadline;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"cleowenxuan"},"content":"import asher.Tasks.Event;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"cleowenxuan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"cleowenxuan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"cleowenxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"cleowenxuan"},"content":"public class parserTest {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"cleowenxuan"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"cleowenxuan"},"content":"    public void testCreateToDoCommand() throws BotException {","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"cleowenxuan"},"content":"        Todo todo \u003d Parser.createToDoCommand(\"todo Go for a run\");","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"cleowenxuan"},"content":"        assertEquals(\"Go for a run\", todo.getDescription());","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"cleowenxuan"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"cleowenxuan"},"content":"    public void testCreateDeadlineCommand() throws BotException {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"cleowenxuan"},"content":"        Deadline deadline \u003d Parser.createDeadlineCommand(\"deadline submit report /by 2023-12-31 18:00\");","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"cleowenxuan"},"content":"        assertEquals(\"submit report\", deadline.getDescription());","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"cleowenxuan"},"content":"        assertEquals(LocalDate.of(2023, 12, 31), deadline.getDueDate());","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"cleowenxuan"},"content":"        assertEquals(LocalTime.of(18, 0), deadline.getDueTime());","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"cleowenxuan"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"cleowenxuan"},"content":"    public void testCreateEventCommand() throws BotException {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"cleowenxuan"},"content":"        Event event \u003d Parser.createEventCommand(\"event project meeting /from 2023-12-31 14:00 /to 2023-12-31 15:00\");","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"cleowenxuan"},"content":"        assertEquals(\"project meeting\", event.getDescription());","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"cleowenxuan"},"content":"        assertEquals(LocalDate.of(2023, 12, 31), event.getStartDate());","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"cleowenxuan"},"content":"        assertEquals(LocalTime.of(14, 0), event.getStartTime());","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"cleowenxuan"},"content":"        assertEquals(LocalDate.of(2023, 12, 31), event.getEndDate());","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"cleowenxuan"},"content":"        assertEquals(LocalTime.of(15, 0), event.getEndTime());","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"cleowenxuan"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"cleowenxuan":37}},{"path":"src/test/java/asher/Tasks/taskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cleowenxuan"},"content":"package asher.Tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"cleowenxuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"cleowenxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"cleowenxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"cleowenxuan"},"content":"public class taskListTest {","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"cleowenxuan"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"cleowenxuan"},"content":"    public void testAddAndGetTask() {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"cleowenxuan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"cleowenxuan"},"content":"        Task task \u003d new Task(\"Task 1\");","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"cleowenxuan"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"cleowenxuan"},"content":"        assertEquals(task, taskList.get(0));","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"cleowenxuan"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"cleowenxuan"},"content":"    public void testAddAndDeleteTask() {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"cleowenxuan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"cleowenxuan"},"content":"        Task task \u003d new Task(\"Task 1\");","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"cleowenxuan"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"cleowenxuan"},"content":"        Task deletedTask \u003d taskList.deleteTask(0);","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"cleowenxuan"},"content":"        assertEquals(task, deletedTask);","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"cleowenxuan"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"cleowenxuan"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"cleowenxuan"},"content":"    public void testEmptyTaskList() {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"cleowenxuan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"cleowenxuan"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"cleowenxuan"},"content":"        assertNull(taskList.get(0));","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"cleowenxuan"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"cleowenxuan"},"content":"    public void testFullTaskList() {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"cleowenxuan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"cleowenxuan"},"content":"        for (int i \u003d 0; i \u003c TaskList.MAX_TASKS; i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"cleowenxuan"},"content":"            taskList.addTask(new Task(\"Task \" + (i + 1)));","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"cleowenxuan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"cleowenxuan"},"content":"        taskList.addTask(new Task(\"Extra Task\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"cleowenxuan"},"content":"        assertEquals(TaskList.MAX_TASKS, taskList.getSize());","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"cleowenxuan"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"cleowenxuan":47}},{"path":"src/test/java/asher/Tasks/taskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cleowenxuan"},"content":"package asher.Tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"cleowenxuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"cleowenxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"cleowenxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"cleowenxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"cleowenxuan"},"content":"public class taskTest {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"cleowenxuan"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"cleowenxuan"},"content":"    public void testMarkDoneAndUndone() {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"cleowenxuan"},"content":"        Task task \u003d new Task(\"Task\");","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"cleowenxuan"},"content":"        assertFalse(task.isDone);","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"cleowenxuan"},"content":"        task.markDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"cleowenxuan"},"content":"        assertTrue(task.isDone);","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"cleowenxuan"},"content":"        task.markUndone();","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"cleowenxuan"},"content":"        assertFalse(task.isDone);","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"cleowenxuan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"cleowenxuan"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"cleowenxuan"},"content":"    public void testConstructor() {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"cleowenxuan"},"content":"        Task task \u003d new Task(\"Go for a run\");","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"cleowenxuan"},"content":"        assertEquals(\"Go for a run\", task.description);","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"cleowenxuan"},"content":"        assertFalse(task.isDone);","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"cleowenxuan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"cleowenxuan"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"cleowenxuan":27}},{"path":"taskLists.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cleowenxuan"},"content":"D | 0 | homework | 2024-01-03 | 09:00","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"cleowenxuan"},"content":"E | 1 | open house | 2019-04-05 | 18:00 | 2023-04-06 | 17:00","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"cleowenxuan"},"content":"D | 1 | homework | 2024-01-03 | 09:00","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"cleowenxuan"},"content":"E | 0 | open house | 2019-04-05 | 18:00 | 2023-04-06 | 17:00","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"cleowenxuan"},"content":"T | 0 | running","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"cleowenxuan"},"content":"T | 0 | run2.4km","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"cleowenxuan"},"content":"T | 0 | run","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"cleowenxuan":7}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cleowenxuan"},"content":"todo read book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"cleowenxuan"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"cleowenxuan"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"cleowenxuan"},"content":"todo join sports club","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"cleowenxuan"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"cleowenxuan"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"cleowenxuan"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"cleowenxuan"},"content":"mark 4","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"cleowenxuan"},"content":"unmark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"cleowenxuan"},"content":"unmark 4","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"cleowenxuan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"cleowenxuan"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"cleowenxuan"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"cleowenxuan"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"cleowenxuan"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"cleowenxuan":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"cleowenxuan"},"content":"java -classpath ..\\bin asher.Asher \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cleowenxuan":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"cleowenxuan"},"content":"java -classpath ../bin asher.Asher \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cleowenxuan":1,"-":37}}]
