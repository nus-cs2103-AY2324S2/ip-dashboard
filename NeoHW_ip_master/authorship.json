[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"# Bytebuddy!!!","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"\u003e \"10/10 app - a loyal fan\"","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"Bytebuddy frees your mind of having to remember things you need to do. It\u0027s,","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"* text-based","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"* Easy to learn","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"* ~FAST~ _SUPER_ FAST to use","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"All you need to do is, ","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"1. download it from [here](https://github.com/NeoHW/ip)","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"1. double-click it.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"1. add your tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"1. let it manage your tasks for you :shushing_face:","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"And it is **FREE**!","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"Features:","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"- [x] Managing tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"- [x] Managing deadlines","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"- [ ] Reminders (coming soon)","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"How to use: ","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"1. After that, locate the `src/main/java/ByteBuddy.java` file, right-click it, and choose `Run ByteBuddy.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"   ____   __   __  _____  U _____ u   ____     _   _   ____     ____   __   __ ","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"U | __\")u \\ \\ / / |_ \" _| \\| ___\"|/U | __\")uU |\"|u| | |  _\"\\   |  _\"\\  \\ \\ / / ","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":" \\|  _ \\/  \\ V /    | |    |  _|\"   \\|  _ \\/ \\| |\\| |/| | | | /| | | |  \\ V /  ","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"  | |_) | U_|\"|_u  /| |\\   | |___    | |_) |  | |_| |U| |_| |\\U| |_| |\\U_|\"|_u ","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"  |____/    |_|   u |_|U   |_____|   |____/  \u003c\u003c\\___/  |____/ u |____/ u  |_|   ","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":" _|| \\\\_.-,//|(_  _// \\\\_  \u003c\u003c   \u003e\u003e  _|| \\\\_ (__) )(    |||_     |||_ .-,//|(_  ","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"(__) (__)\\_) (__)(__) (__)(__) (__)(__) (__)    (__)  (__)_)   (__)_) \\_) (__) ","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NeoHW":28,"-":14}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"checkstyle {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"    // Junit","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"    exclude \u0027**/TaskListTest.class\u0027","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"tasks.withType(Test) {","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"    // Exclude TaskListTest from the test execution","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"    exclude \u0027**/TaskListTest.class\u0027","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"//application {","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"//    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"//}","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"// to fix Error: Could not find or load main class seedu.duke.Duke","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"// use package path","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"    // mainClassName \u003d \u0027bytebuddy.ByteBuddy\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"    mainClassName \u003d \u0027bytebuddy.gui.Launcher\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"NeoHW"},"content":"// JAR output is in build/libs","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"NeoHW"},"content":"    archiveBaseName \u003d \"bytebuddy\"","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"    archiveFileName \u003d \u0027bytebuddy.jar\u0027","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":80,"author":{"gitId":"NeoHW"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NeoHW":40,"-":41}},{"path":"data/output.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"D | 1 | return book | 2 December 2019, 6PM","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"T | 1 | read book","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"T | 0 | run away","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"T | 1 | test gui","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"T | 1 | test todo duplication","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"NeoHW":5}},{"path":"src/main/java/bytebuddy/ByteBuddy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.ui.Ui.printWithSolidLineBreak;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.commands.Command;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.exceptions.ByteBuddyException;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.parser.Parser;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.storage.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.tasks.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.ui.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":" * The {@code ByteBuddy} class represents the main application class for the ByteBuddy chatbot.","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":" * It initializes the chatbot, runs the main loop to process user commands, and handles exceptions.","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"public class ByteBuddy {","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"    // class variables","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"    private static Storage storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"    private static TaskList taskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"    private static Ui ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"     * Creates a new chatbot called ByteBuddy that helps with tasking.","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"    public ByteBuddy() {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"            taskList \u003d storage.load();","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"        } catch (ByteBuddyException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"            // throw new ByteBuddyException(\"Error loading the list from output.txt\");","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"            System.out.println(\"Error loading the list from output.txt\");","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"     * Main method to run ByteBuddy chatbot.","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"     * @param args command line arguments.","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"     * @throws ByteBuddyException if there is an error during the execution of the ByteBuddy chatbot.","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"    public static void main(String[] args) throws ByteBuddyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"        new ByteBuddy().run();","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"     * Runs the ByteBuddy chatbot.","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"    public void run() {","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"        Ui.printStartMessage();","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"        // repeating user commands","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"        while (!isExit) {","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"            } catch (ByteBuddyException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"                printWithSolidLineBreak(\"\\t \" + e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"        // bye","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"        Ui.printByeMessage();","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"NeoHW"},"content":"     * Returns String reply according to user instructions","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"NeoHW"},"content":"     * @param s String input by user","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"    public String getResponse(String s) {","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"NeoHW"},"content":"            Command c \u003d Parser.parse(s);","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"NeoHW"},"content":"            return c.execute(taskList, ui, storage);","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"        } catch (ByteBuddyException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"NeoHW"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"NeoHW":82}},{"path":"src/main/java/bytebuddy/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.commands;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.constants.Messages.BYE_MESSAGE;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.exceptions.ByteBuddyException;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.storage.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.tasks.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.ui.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":" * Command to exit the chatbot and say bye.","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"     * Executes the ByeCommand, performing any necessary actions when the chatbot exits.","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"     * @param taskList   The task list on which the command operates.","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"     * @param ui      The user interface for displaying information to the user.","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"     * @param storage The storage for saving and loading data.","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws ByteBuddyException {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"        // No action needed for ByeCommand","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"        return \"\\t \" + BYE_MESSAGE;","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"     * Checks if the ByeCommand is an exit command, indicating that the chatbot should exit.","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"     * @return {@code true} as ByeCommand is an exit command.","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"        return true;","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"NeoHW":37}},{"path":"src/main/java/bytebuddy/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.commands;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.exceptions.ByteBuddyException;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.storage.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.tasks.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.ui.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":" * Interface that represents a Command to be executed by the Bytebuddy chatbot.","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":" * A command typically performs an action on the task list,","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":" * interacts with the user interface, and may involve storage operations.","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":" * Implementing classes must provide an implementation for the {@code execute} method.","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":" *","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":" * @see bytebuddy.tasks.TaskList","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":" * @see bytebuddy.ui.Ui","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":" * @see bytebuddy.storage.Storage","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"public interface Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"     * Executes the command, affecting the provided task list, user interface, and storage.","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"     * @param taskList   The task list on which the command operates.","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"     * @param ui      The user interface for displaying information to the user.","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"     * @param storage The storage for saving and loading data.","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"     * @return String result output after executing instruction given","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"     * @throws ByteBuddyException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"    String execute(TaskList taskList, Ui ui, Storage storage) throws ByteBuddyException;","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"     * Checks if the command is an exit command,","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"     * indicating whether the chatbot should exit after executing this command.","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"     * @return {@code true} if the command is an exit command, {@code false} otherwise.","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"    boolean isExit();","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"NeoHW":39}},{"path":"src/main/java/bytebuddy/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.commands;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.exceptions.ByteBuddyException;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.storage.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.tasks.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.ui.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":" * Command to create and add a Deadline task to the task list based on the provided information.","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"    private String info;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"     * Constructs a DeadlineCommand with the provided information.","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"     * @param info The information containing details about the Deadline task.","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"    public DeadlineCommand(String info) {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"        this.info \u003d info;","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"     * Executes the DeadlineCommand, adding a Deadline task to the task list.","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"     * @param taskList The task list to which the Deadline task will be added.","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"     * @param ui       The user interface.","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"     * @param storage  The storage for saving and loading data.","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"     * @throws ByteBuddyException If there is an error executing the DeadlineCommand.","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws ByteBuddyException {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"        return taskList.deadline(info);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"     * Checks if the DeadlineCommand is an exit command, indicating that the chatbot should not exit.","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"     * @return {@code false} as DeadlineCommand is not an exit command.","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"        return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"NeoHW":45}},{"path":"src/main/java/bytebuddy/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.commands;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.exceptions.ByteBuddyException;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.storage.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.tasks.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.ui.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":" * Command to delete a task from the task list based on the provided task number.","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"    private String info;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"     * Constructs a DeleteCommand with the provided information.","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"     * @param info The information containing the task number to be deleted.","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"    public DeleteCommand(String info) {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"        this.info \u003d info;","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"     * Executes the DeleteCommand, deleting a task from the task list.","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"     * @param taskList The task list from which the task will be deleted.","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"     * @param ui       The user interface.","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"     * @param storage  The storage for saving and loading data.","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"     * @throws ByteBuddyException If there is an error executing the DeleteCommand.","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws ByteBuddyException {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"        return taskList.delete(info);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"     * Checks if the DeleteCommand is an exit command, indicating that the chatbot should not exit.","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"     * @return {@code false} as DeleteCommand is not an exit command.","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"        return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"NeoHW":45}},{"path":"src/main/java/bytebuddy/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.commands;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.exceptions.ByteBuddyException;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.storage.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.tasks.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.ui.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":" * Command to add an event task to the task list based on the provided information.","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"    private String info;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"     * Constructs an EventCommand with the provided information.","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"     * @param info The information containing details of the event task to be added.","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"    public EventCommand(String info) {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"        this.info \u003d info;","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"     * Executes the EventCommand, adding an event task to the task list.","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"     * @param taskList The task list to which the event task will be added.","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"     * @param ui       The user interface.","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"     * @param storage  The storage for saving and loading data.","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"     * @throws ByteBuddyException If there is an error executing the EventCommand.","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws ByteBuddyException {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"        return taskList.event(info);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"     * Checks if the EventCommand is an exit command, indicating that the chatbot should not exit.","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"     * @return {@code false} as EventCommand is not an exit command.","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"        return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"NeoHW":45}},{"path":"src/main/java/bytebuddy/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.commands;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.parser.Parser.splitStringWithTrim;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.exceptions.ByteBuddyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.tasks.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.ui.Ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":" * Command to find tasks in the task list that match a specified keyword.","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":" * The keyword is used to search for tasks containing the specified text in their descriptions.","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":" * Executes the \u0027findInTaskList\u0027 method in the provided \u0027TaskList\u0027 instance.","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"    private List\u003cString\u003e keywords;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"     * Constructs a new FindCommand with the specified keyword.","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"     * @param info The keyword(s) or text to search for among all the tasks in the task list.","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"    public FindCommand(String info) {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"        this.keywords \u003d splitStringWithTrim(info, \",\", 0);","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"     * Executes the \u0027findInTaskList\u0027 method in the provided \u0027TaskList\u0027 instance to find tasks","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"     * containing the specified keyword in their descriptions.","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"     * @param taskList The TaskList instance containing the list of tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"     * @param ui       The Ui instance for user interaction.","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"     * @param storage  The Storage instance for file storage operations.","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"     * @throws ByteBuddyException If there is an issue executing the \u0027findInTaskList\u0027 method.","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws ByteBuddyException {","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"        return \"\\t \" + taskList.findTaskWithKeywordInTaskList(keywords);","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"     * Checks if the DeleteCommand is an exit command, indicating that the chatbot should not exit.","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"     * @return {@code false} as FindCommand is not an exit command.","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"NeoHW":53}},{"path":"src/main/java/bytebuddy/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.commands;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.storage.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.tasks.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.ui.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":" * Command to display the list of tasks in the task list.","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"     * Executes the ListCommand, displaying the list of tasks in the task list.","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"     * @param taskList The task list whose tasks will be displayed.","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"     * @param ui       The user interface for displaying information.","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"     * @param storage  The storage for saving and loading data.","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"        return taskList.getFormattedTaskList();","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"     * Checks if the ListCommand is an exit command, indicating that the chatbot should not exit.","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"     * @return {@code false} as ListCommand is not an exit command.","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"        return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"NeoHW":33}},{"path":"src/main/java/bytebuddy/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.commands;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.exceptions.ByteBuddyException;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.storage.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.tasks.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.ui.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":" * Command to mark a task as done in the task list.","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"    private String info;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"     * Constructs a MarkCommand with the specified information.","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"     * @param info The information associated with the MarkCommand.","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"    public MarkCommand(String info) {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"        this.info \u003d info;","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"     * Executes the MarkCommand, marking a task as done in the task list.","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"     * @param taskList The task list containing the tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"     * @param ui       The user interface for displaying information.","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"     * @param storage  The storage for saving and loading data.","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"     * @throws ByteBuddyException If there is an error executing the MarkCommand.","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws ByteBuddyException {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"        return taskList.mark(info);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"     * Checks if the MarkCommand is an exit command, indicating that the chatbot should not exit.","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"     * @return {@code false} as MarkCommand is not an exit command.","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"        return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"NeoHW":45}},{"path":"src/main/java/bytebuddy/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.commands;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.exceptions.ByteBuddyException;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.storage.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.tasks.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.ui.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":" * Command to add a todo task to the task list.","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"public class TodoCommand implements Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"    private String info;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"     * Constructs a TodoCommand with the specified information.","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"     * @param info The information associated with the TodoCommand.","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"    public TodoCommand(String info) {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"        this.info \u003d info;","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"     * Executes the TodoCommand, adding a todo task to the task list.","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"     * @param taskList The task list containing the tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"     * @param ui       The user interface for displaying information.","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"     * @param storage  The storage for saving and loading data.","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"     * @throws ByteBuddyException If there is an error executing the TodoCommand.","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws ByteBuddyException {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"        return taskList.todo(info);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"     * Checks if the TodoCommand is an exit command, indicating that the chatbot should not exit.","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"     * @return {@code false} as TodoCommand is not an exit command.","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"        return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"NeoHW":45}},{"path":"src/main/java/bytebuddy/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.commands;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.exceptions.ByteBuddyException;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.storage.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.tasks.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.ui.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":" * Command to mark a task as not done in the task list.","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"    private String info;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"     * Constructs an UnmarkCommand with the specified information.","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"     * @param info The information associated with the UnmarkCommand.","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"    public UnmarkCommand(String info) {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"        this.info \u003d info;","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"     * Executes the UnmarkCommand, marking a task as not done in the task list.","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"     * @param taskList The task list containing the tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"     * @param ui       The user interface for displaying information.","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"     * @param storage  The storage for saving and loading data.","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"     * @throws ByteBuddyException If there is an error executing the UnmarkCommand.","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws ByteBuddyException {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"        return taskList.unmark(info);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"     * Checks if the UnmarkCommand is an exit command, indicating that the chatbot should not exit.","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"     * @return {@code false} as UnmarkCommand is not an exit command.","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"        return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"NeoHW":45}},{"path":"src/main/java/bytebuddy/constants/ExceptionErrorMessages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.constants;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":" * The {@code ExceptionErrorMessages} class contains constants representing error messages for exception handling.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"public class ExceptionErrorMessages {","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"    public static final String EMPTY_DESCRIPTION_ERROR_MESSAGE \u003d \"The description cannot be empty??\";","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"    public static final String EMPTY_KEYWORD_ERROR_MESSAGE \u003d \"Are you finding anything at all?\";","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"    public static final String NUMBER_FORMAT_ERROR_MESSAGE \u003d \"Invalid task number format! Please enter a valid number.\";","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"    public static final String NO_SUCH_TASK_NUMBER_ERROR_MESSAGE \u003d \"We do not have this task number!!\";","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"    public static final String FAILED_WRITE_TO_FILE_ERROR_MESSAGE \u003d \"Failed to write to file\";","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"    public static final String DUPLICATE_TASK_ERROR_MESSAGE \u003d \"This task already exists!\";","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"NeoHW":13}},{"path":"src/main/java/bytebuddy/constants/FilePaths.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.constants;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":" * The {@code FilePaths} class contains constants representing file paths used in the application for output.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"public class FilePaths {","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"    public static final String RELATIVE_DATA_DIRECTORY_PATH \u003d \"./data\";","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"    public static final String RELATIVE_OUTPUT_TXT_FILE_PATH \u003d \"./data/output.txt\";","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"NeoHW":9}},{"path":"src/main/java/bytebuddy/constants/Formats.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.constants;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":" * The {@code Formats} class contains constants representing task input formats used in the application.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"public class Formats {","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"    public static final String EVENT_FORMAT \u003d \"event [task] /from [date] /to [date]\";","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"    public static final String DEADLINE_FORMAT \u003d \"deadline [task] /by [date]\";","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"    public static final String LIST_FORMAT \u003d \"list [keyword1] OR list [keyword1], [keyword2] ... for multiple values\";","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"NeoHW":10}},{"path":"src/main/java/bytebuddy/constants/Information.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.constants;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":" * The {@code Information} class contains constants representing various informational strings used in the application.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"public class Information {","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"    public static final String SOLID_LINE_BREAK \u003d \"-\".repeat(90);","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"    public static final String CHATBOT_NAME \u003d \"ByteBuddy\";","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"    public static final String CHATBOT_NAME_LOGO \u003d","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"        \"   ____   __   __  _____  U _____ u   ____     _   _   ____     ____   __   __ \\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"                + \"U | __\\\")u \\\\ \\\\ / / |_ \\\" _| \\\\| ___\\\"|/U | __\\\")uU |\\\"|u| | |  _\\\"\\\\   |  _\\\"\\\\  \\\\ \\\\ / / \\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"                + \" \\\\|  _ \\\\/  \\\\ V /    | |    |  _|\\\"   \\\\|  _ \\\\/ \\\\| |\\\\| |/| | | | /| | | |  \\\\ V /  \\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"                + \"  | |_) | U_|\\\"|_u  /| |\\\\   | |___    | |_) |  | |_| |U| |_| |\\\\U| |_| |\\\\U_|\\\"|_u \\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"                + \"  |____/    |_|   u |_|U   |_____|   |____/  \u003c\u003c\\\\___/  |____/ u |____/ u  |_|   \\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"                + \" _|| \\\\\\\\_.-,//|(_  _// \\\\\\\\_  \u003c\u003c   \u003e\u003e  _|| \\\\\\\\_ (__) )(    |||_     |||_ .-,//|(_  \\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"                + \"(__) (__)\\\\_) (__)(__) (__)(__) (__)(__) (__)    (__)  (__)_)   (__)_) \\\\_) (__) \\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"NeoHW":17}},{"path":"src/main/java/bytebuddy/constants/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.constants;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.constants.Information.CHATBOT_NAME;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":" * The {@code Messages} class contains constants representing various messages used in the application.","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"public class Messages {","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"    public static final String START_MESSAGE \u003d \"\\t Hello! I\u0027m \" + CHATBOT_NAME + \"!\\n\\t What can I do for you?\";","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"    public static final String BYE_MESSAGE \u003d \"\\t Sad to see you leave :(\";","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"NeoHW":11}},{"path":"src/main/java/bytebuddy/exceptions/ByteBuddyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.exceptions;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":" * Custom exception class for handling Duke-related exceptions.","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"public class ByteBuddyException extends Exception {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"     * Constructs a ByteBuddyException with the specified error message.","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"    public ByteBuddyException(String message) {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"        super(message);","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"     * Overrides the getMessage() method to prepend a specific message to the original error message.","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"     * @return The formatted error message with the added prefix for personality.","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"    public String getMessage() {","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"        return String.format(\"\\t holup!! %s\", super.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"NeoHW":27}},{"path":"src/main/java/bytebuddy/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.gui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":" * This control represents a dialog box consisting of an ImageView to represent","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":" * the speaker\u0027s face and a label","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"    private void flip() {","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"    public static DialogBox getByteBuddyDialog(String text, Image img) {","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"        db.flip();","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"        return db;","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NeoHW":63}},{"path":"src/main/java/bytebuddy/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.gui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":" * Represents the launching of GUI.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"public class Launcher {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NeoHW":12}},{"path":"src/main/java/bytebuddy/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.gui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.ByteBuddy;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":" * A GUI for ByteBuddy using FXML.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"    private ByteBuddy byteBuddy \u003d new ByteBuddy();","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setByteBuddy(byteBuddy);","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"            stage.setTitle(\"ByteBuddy\");","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"            stage.show();","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NeoHW":34}},{"path":"src/main/java/bytebuddy/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.gui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.constants.Messages.BYE_MESSAGE;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.constants.Messages.START_MESSAGE;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.ByteBuddy;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"    private ByteBuddy byteBuddy;","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpeg\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"    private Image byteBuddyImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bytebuddy.jpeg\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"     * Initializes the main window of the ByteBuddy GUI application.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"     * This method is automatically called by JavaFX after the FXML file is loaded","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"     * and the corresponding UI components are injected.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"     * @see javafx.scene.control.ScrollPane","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"     * @see javafx.scene.layout.VBox","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"     * @see bytebuddy.gui.DialogBox","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"     * @see bytebuddy.constants.Messages","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"     * @see javafx.fxml.FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"                DialogBox.getByteBuddyDialog(START_MESSAGE, byteBuddyImage));","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"    public void setByteBuddy(ByteBuddy bb) {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"        byteBuddy \u003d bb;","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"     * Creates two dialog boxes, one echoing user input and","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"     * the other containing main.java.ByteBuddy\u0027s reply and","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"     * then appends them to the dialog container.","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"     * Clears the user input after processing.","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"        String response \u003d byteBuddy.getResponse(input);","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"NeoHW"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"NeoHW"},"content":"                DialogBox.getByteBuddyDialog(response, byteBuddyImage)","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"NeoHW"},"content":"        );","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"NeoHW"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"NeoHW"},"content":"        if (response.equals(\"\\t \" + BYE_MESSAGE)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1.0));","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"NeoHW"},"content":"            delay.play();","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NeoHW":79}},{"path":"src/main/java/bytebuddy/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.parser;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import java.util.Collections;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.commands.ByeCommand;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.commands.Command;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.commands.DeadlineCommand;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.commands.DeleteCommand;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.commands.EventCommand;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.commands.FindCommand;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.commands.ListCommand;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.commands.MarkCommand;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.commands.TodoCommand;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.commands.UnmarkCommand;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.exceptions.ByteBuddyException;","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":" * Parser class responsible for parsing user input and generating corresponding Command objects.","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"public class Parser {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"     * Parses the given full input to create and return the appropriate Command object.","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"     * @param fullInput The full input provided by the user.","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"     * @return The Command object corresponding to the parsed input.","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"     * @throws ByteBuddyException If the input cannot be parsed into a valid Command.","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"    public static Command parse(String fullInput) throws ByteBuddyException {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"        String[] commandParts \u003d fullInput.split(\" \", 2);","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"        String commandType \u003d commandParts[0].toLowerCase();","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"        String commandInfo \u003d commandParts.length \u003e 1 ? commandParts[1].trim() : \"\";","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"        switch (commandType) {","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"        case \"bye\":","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"        case \"list\":","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"            return new ListCommand();","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"        case \"mark\":","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"            return new MarkCommand(commandInfo);","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"        case \"unmark\":","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"            return new UnmarkCommand(commandInfo);","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"        case \"delete\":","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"            return new DeleteCommand(commandInfo);","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"            return new TodoCommand(commandInfo);","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"            return new DeadlineCommand(commandInfo);","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"        case \"event\":","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"            return new EventCommand(commandInfo);","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"        case \"find\":","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"            return new FindCommand(commandInfo);","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"        default:","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"            throw new ByteBuddyException(\"Sorry but this command does not exist~\");","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"     * Splits a string into a list of trimmed substrings using a specified separator and maximum number of tokens.","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"     * @param info       The input string to split.","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"     * @param separator  The separator to use.","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"     * @param maxTokens  The maximum number of tokens to split the string into.","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"     * @return A list of trimmed substrings.","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"    public static List\u003cString\u003e splitStringWithTrim(String info, String separator, int maxTokens) {","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"NeoHW"},"content":"        assert info !\u003d null : \"Input string must not be null\";","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"NeoHW"},"content":"        if (info.isEmpty()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"NeoHW"},"content":"            return Collections.emptyList();","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"NeoHW"},"content":"        return Arrays.stream(info.split(separator, maxTokens)).map(String::trim).collect(Collectors.toList());","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"NeoHW":79}},{"path":"src/main/java/bytebuddy/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.constants.FilePaths.RELATIVE_DATA_DIRECTORY_PATH;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.constants.FilePaths.RELATIVE_OUTPUT_TXT_FILE_PATH;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import java.io.File;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.exceptions.ByteBuddyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.tasks.Deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.tasks.Event;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.tasks.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.tasks.Todo;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":" * The Storage class manages the reading and writing of tasks to a file.","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"public class Storage {","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"     * Creates a new Storage instance, initializing the data directory and output file.","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"     * @throws ByteBuddyException If there is an issue with creating the directory or file.","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"    public Storage() throws ByteBuddyException {","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"        init();","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"     * Initializes the data directory and output file.","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"     * @throws ByteBuddyException If there is an issue with creating the directory or file.","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"    public void init() throws ByteBuddyException {","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"        File dataDir \u003d new File(RELATIVE_DATA_DIRECTORY_PATH);","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"        File outputTxt \u003d new File(RELATIVE_OUTPUT_TXT_FILE_PATH);","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"        createOutputDirectoryAndFile(dataDir, outputTxt);","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"     * Creates the output directory and file.","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"     * @param dataDir   The data directory.","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"     * @param outputTxt The output file.","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"     * @throws ByteBuddyException If there is an issue with creating the directory or file.","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"    public static void createOutputDirectoryAndFile(File dataDir, File outputTxt) throws ByteBuddyException {","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"            dataDir.mkdirs();","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"            outputTxt.createNewFile();","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"        } catch (SecurityException | IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"            throw new ByteBuddyException(e.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"     * Loads tasks from the output file and returns a TaskList.","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"     * @return The TaskList loaded from the output file.","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"     * @throws ByteBuddyException If there is an issue with reading from the file.","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"    public TaskList load() throws ByteBuddyException {","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"        return initTaskList(RELATIVE_OUTPUT_TXT_FILE_PATH);","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"NeoHW"},"content":"     * Writes the given text to the specified file path.","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"NeoHW"},"content":"     * @param filePath  The path to the file.","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"NeoHW"},"content":"     * @param textToAdd The text to write to the file.","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"     * @throws IOException If there is an issue with writing to the file.","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"NeoHW"},"content":"    public static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"NeoHW"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"NeoHW"},"content":"        fw.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"NeoHW"},"content":"     * Initializes a TaskList by reading tasks from the specified file path.","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"NeoHW"},"content":"     * @param filePath The path to the file.","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"NeoHW"},"content":"     * @return The initialized TaskList.","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"NeoHW"},"content":"     * @throws ByteBuddyException If there is an issue with reading from the file.","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"NeoHW"},"content":"    public static TaskList initTaskList(String filePath) throws ByteBuddyException {","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"NeoHW"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"NeoHW"},"content":"        try (Scanner scanner \u003d new Scanner(new File(filePath))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"NeoHW"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"NeoHW"},"content":"                String[] parts \u003d scanner.nextLine().split(\" \\\\| \");","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"NeoHW"},"content":"                assert parts.length \u003e\u003d 3 : \"Invalid task format\";","lastModifiedDate":"2024-02-06"},{"lineNumber":96,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":97,"author":{"gitId":"NeoHW"},"content":"                switch (parts[0]) {","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"NeoHW"},"content":"                case \"T\":","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"NeoHW"},"content":"                    assert parts.length \u003d\u003d 3 : \"Invalid Todo task format\";","lastModifiedDate":"2024-02-06"},{"lineNumber":100,"author":{"gitId":"NeoHW"},"content":"                    list.add(new Todo(parts[1], parts[2]));","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"NeoHW"},"content":"                    break;","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"NeoHW"},"content":"                case \"D\":","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"NeoHW"},"content":"                    assert parts.length \u003d\u003d 4 : \"Invalid Deadline task format\";","lastModifiedDate":"2024-02-06"},{"lineNumber":104,"author":{"gitId":"NeoHW"},"content":"                    list.add(new Deadline(parts[1], parts[2], parts[3]));","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"NeoHW"},"content":"                    break;","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"NeoHW"},"content":"                case \"E\":","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"NeoHW"},"content":"                    assert parts.length \u003d\u003d 5 : \"Invalid Event task format\";","lastModifiedDate":"2024-02-06"},{"lineNumber":108,"author":{"gitId":"NeoHW"},"content":"                    list.add(new Event(parts[1], parts[2], parts[3], parts[4]));","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"NeoHW"},"content":"                    break;","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"NeoHW"},"content":"                default:","lastModifiedDate":"2024-01-27"},{"lineNumber":111,"author":{"gitId":"NeoHW"},"content":"                    assert false : \"Unknown task type\";","lastModifiedDate":"2024-02-06"},{"lineNumber":112,"author":{"gitId":"NeoHW"},"content":"                    break;","lastModifiedDate":"2024-01-27"},{"lineNumber":113,"author":{"gitId":"NeoHW"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":114,"author":{"gitId":"NeoHW"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":115,"author":{"gitId":"NeoHW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":116,"author":{"gitId":"NeoHW"},"content":"            throw new ByteBuddyException(\"Error reading from file: \" + e);","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":118,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":119,"author":{"gitId":"NeoHW"},"content":"        return list;","lastModifiedDate":"2024-01-27"},{"lineNumber":120,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":121,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"NeoHW":121}},{"path":"src/main/java/bytebuddy/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"import java.util.Optional;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":" * The Deadline class represents a task with a specified deadline.","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":" * It extends the Task class and includes additional properties for the deadline.","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"    protected String by;","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"    protected Optional\u003cLocalDate\u003e byDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"    protected Optional\u003cLocalDateTime\u003e byDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"     * Constructs a new Deadline task with the given description and deadline.","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"     * @param by           The deadline of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"        this.byDate \u003d parseDate(by);","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"        this.byDateTime \u003d parseDateTime(by);","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"        // Initialise \u0027by\u0027 string depending on type, else use given \u0027by\u0027 string as is","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"        if (byDateTime.isPresent() || byDate.isPresent()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"            this.by \u003d formatByString(by);","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"            this.by \u003d by;","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"     * Constructs a new Deadline task with completion status, description, and deadline.","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"     * @param completed   The completion status of the task (1 for done, 0 for not done).","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"     * @param by          The deadline of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"    public Deadline(String completed, String description, String by) {","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"        super(description, completed.equals(\"1\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"     * Parses the date and time from the input string.","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"     * @param by The input string containing date and time information.","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"     * @return An Optional containing LocalDateTime if parsing is successful, empty otherwise.","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"    private Optional\u003cLocalDateTime\u003e parseDateTime(String by) {","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"            return Optional.of(LocalDateTime.parse(by, formatter));","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"            return Optional.empty();","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"NeoHW"},"content":"     * Parses the date from the input string.","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"NeoHW"},"content":"     * @param by The input string containing date information.","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"NeoHW"},"content":"     * @return An Optional containing LocalDate if parsing is successful, empty otherwise.","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"NeoHW"},"content":"    private Optional\u003cLocalDate\u003e parseDate(String by) {","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"NeoHW"},"content":"            return Optional.of(LocalDate.parse(by, formatter));","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"NeoHW"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"            return Optional.empty();","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"NeoHW"},"content":"     * Formats the \u0027by\u0027 string based on the type of date or date-time.","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"NeoHW"},"content":"     * @param by The default string representation if no special formatting is required.","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"NeoHW"},"content":"     * @return The formatted \u0027by\u0027 string.","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"NeoHW"},"content":"    private String formatByString(String by) {","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"NeoHW"},"content":"        if (byDateTime.isPresent()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"NeoHW"},"content":"            return byDateTime.get().format(DateTimeFormatter.ofPattern(\"d MMMM yyyy, ha\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"NeoHW"},"content":"        } else if (byDate.isPresent()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"NeoHW"},"content":"            return byDate.get().format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"NeoHW"},"content":"        return by;","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"NeoHW"},"content":"     * Returns a formatted string representation of the Deadline task for writing into output file.","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"NeoHW"},"content":"     * @return The formatted output string.","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"NeoHW"},"content":"    public String getTextFormattedOutput() {","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"NeoHW"},"content":"        int intIsDone \u003d isDone ? 1 : 0;","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"NeoHW"},"content":"        return String.format(\"D | %d | %s | %s\", intIsDone, description, by);","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"NeoHW"},"content":"     * Indicates whether some other object is \"equal to\" this one.","lastModifiedDate":"2024-02-09"},{"lineNumber":110,"author":{"gitId":"NeoHW"},"content":"     * This method considers two Deadline objects equal if they have the same description, completion status,","lastModifiedDate":"2024-02-09"},{"lineNumber":111,"author":{"gitId":"NeoHW"},"content":"     * and deadline.","lastModifiedDate":"2024-02-09"},{"lineNumber":112,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":113,"author":{"gitId":"NeoHW"},"content":"     * @param obj the reference object with which to compare.","lastModifiedDate":"2024-02-09"},{"lineNumber":114,"author":{"gitId":"NeoHW"},"content":"     * @return true if this Deadline is the same as the obj argument; false otherwise.","lastModifiedDate":"2024-02-09"},{"lineNumber":115,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":116,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":117,"author":{"gitId":"NeoHW"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-09"},{"lineNumber":118,"author":{"gitId":"NeoHW"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-02-09"},{"lineNumber":119,"author":{"gitId":"NeoHW"},"content":"            return true;","lastModifiedDate":"2024-02-09"},{"lineNumber":120,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":121,"author":{"gitId":"NeoHW"},"content":"        if (obj \u003d\u003d null || getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":122,"author":{"gitId":"NeoHW"},"content":"            return false;","lastModifiedDate":"2024-02-09"},{"lineNumber":123,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":124,"author":{"gitId":"NeoHW"},"content":"        Deadline deadline \u003d (Deadline) obj;","lastModifiedDate":"2024-02-09"},{"lineNumber":125,"author":{"gitId":"NeoHW"},"content":"        return isDone \u003d\u003d deadline.isDone","lastModifiedDate":"2024-02-09"},{"lineNumber":126,"author":{"gitId":"NeoHW"},"content":"                \u0026\u0026 Objects.equals(description, deadline.description)","lastModifiedDate":"2024-02-09"},{"lineNumber":127,"author":{"gitId":"NeoHW"},"content":"                \u0026\u0026 Objects.equals(by, deadline.by);","lastModifiedDate":"2024-02-09"},{"lineNumber":128,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":129,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":130,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":131,"author":{"gitId":"NeoHW"},"content":"     * Returns a hash code value for the Deadline object. This method is supported for the benefit of","lastModifiedDate":"2024-02-09"},{"lineNumber":132,"author":{"gitId":"NeoHW"},"content":"     * hash tables such as those provided by HashMap.","lastModifiedDate":"2024-02-09"},{"lineNumber":133,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":134,"author":{"gitId":"NeoHW"},"content":"     * @return a hash code value for this object.","lastModifiedDate":"2024-02-09"},{"lineNumber":135,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":136,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":137,"author":{"gitId":"NeoHW"},"content":"    public int hashCode() {","lastModifiedDate":"2024-02-09"},{"lineNumber":138,"author":{"gitId":"NeoHW"},"content":"        return Objects.hash(description, isDone, by);","lastModifiedDate":"2024-02-09"},{"lineNumber":139,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":140,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":141,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"NeoHW"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"NeoHW"},"content":"     * @return The string representation.","lastModifiedDate":"2024-01-29"},{"lineNumber":145,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":146,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":147,"author":{"gitId":"NeoHW"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":148,"author":{"gitId":"NeoHW"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-22"},{"lineNumber":149,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":150,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"NeoHW":150}},{"path":"src/main/java/bytebuddy/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"import java.util.Optional;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":" * The Event class represents a task that occurs within a specified time frame.","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":" * It extends the Task class and includes additional properties for start and end times.","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"    protected String from;","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"    protected String to;","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"    protected Optional\u003cLocalDate\u003e fromDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"    protected Optional\u003cLocalDateTime\u003e fromDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"    protected Optional\u003cLocalDate\u003e toDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"    protected Optional\u003cLocalDateTime\u003e toDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"     * Constructs a new Event task with the given description, start, and end times.","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"        this.fromDate \u003d parseDate(from);","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"        this.fromDateTime \u003d parseDateTime(from);","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"        // Initialise \u0027by\u0027 string depending on type, else use given \u0027by\u0027 string as is","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"        if (fromDate.isPresent() || fromDateTime.isPresent()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"            this.from \u003d formatFromString(from);","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"            this.from \u003d from;","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"        this.toDate \u003d parseDate(to);","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"        this.toDateTime \u003d parseDateTime(to);","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"        // Initialise \u0027by\u0027 string depending on type, else use given \u0027by\u0027 string as is","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"        if (toDate.isPresent() || toDateTime.isPresent()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"            this.to \u003d formatToString(from);","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"            this.to \u003d to;","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"     * Constructs a new Event task with completion status, description, start, and end times.","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"     * @param completed   The completion status of the event (1 for done, 0 for not done).","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"    public Event(String completed, String description, String from, String to) {","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"        super(description, completed.equals(\"1\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"     * Parses the date and time from the input string.","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"     * @param s The input string containing date and time information.","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"NeoHW"},"content":"     * @return An Optional containing LocalDateTime if parsing is successful, empty otherwise.","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"NeoHW"},"content":"    private Optional\u003cLocalDateTime\u003e parseDateTime(String s) {","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"            return Optional.of(LocalDateTime.parse(s, formatter));","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"NeoHW"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"NeoHW"},"content":"            return Optional.empty();","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"NeoHW"},"content":"     * Parses the date from the input string.","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"NeoHW"},"content":"     * @param s The input string containing date information.","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"NeoHW"},"content":"     * @return An Optional containing LocalDate if parsing is successful, empty otherwise.","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"NeoHW"},"content":"    private Optional\u003cLocalDate\u003e parseDate(String s) {","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"NeoHW"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"NeoHW"},"content":"            return Optional.of(LocalDate.parse(s, formatter));","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"NeoHW"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"NeoHW"},"content":"            return Optional.empty();","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"NeoHW"},"content":"     * Formats the \u0027from\u0027 string based on the type of date or date-time.","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"NeoHW"},"content":"     * @param standard The default string representation if no special formatting is required.","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"NeoHW"},"content":"     * @return The formatted \u0027from\u0027 string.","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"NeoHW"},"content":"    private String formatFromString(String standard) {","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"NeoHW"},"content":"        if (fromDateTime.isPresent()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"NeoHW"},"content":"            return fromDateTime.get().format(DateTimeFormatter.ofPattern(\"d \u0027of\u0027 MMMM yyyy, ha\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"NeoHW"},"content":"        } else if (fromDate.isPresent()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"NeoHW"},"content":"            return fromDate.get().format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"NeoHW"},"content":"        return standard;","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":111,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":112,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"NeoHW"},"content":"     * Formats the \u0027to\u0027 string based on the type of date or date-time.","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"NeoHW"},"content":"     * @param standard The default string representation if no special formatting is required.","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"NeoHW"},"content":"     * @return The formatted \u0027to\u0027 string.","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"NeoHW"},"content":"    private String formatToString(String standard) {","lastModifiedDate":"2024-01-27"},{"lineNumber":119,"author":{"gitId":"NeoHW"},"content":"        if (toDateTime.isPresent()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":120,"author":{"gitId":"NeoHW"},"content":"            return toDateTime.get().format(DateTimeFormatter.ofPattern(\"d \u0027of\u0027 MMMM yyyy, ha\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":121,"author":{"gitId":"NeoHW"},"content":"        } else if (toDate.isPresent()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":122,"author":{"gitId":"NeoHW"},"content":"            return toDate.get().format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":123,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":124,"author":{"gitId":"NeoHW"},"content":"        return standard;","lastModifiedDate":"2024-01-27"},{"lineNumber":125,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":126,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":127,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"NeoHW"},"content":"     * Returns a formatted string representation of the Event task for writing into output file.","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"NeoHW"},"content":"     * @return The formatted output string.","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":133,"author":{"gitId":"NeoHW"},"content":"    public String getTextFormattedOutput() {","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"NeoHW"},"content":"        int intIsDone \u003d isDone ? 1 : 0;","lastModifiedDate":"2024-01-27"},{"lineNumber":135,"author":{"gitId":"NeoHW"},"content":"        return String.format(\"E | %d | %s | %s | %s\", intIsDone, description, from, to);","lastModifiedDate":"2024-01-27"},{"lineNumber":136,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":137,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":138,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":139,"author":{"gitId":"NeoHW"},"content":"     * Indicates whether some other object is \"equal to\" this one.","lastModifiedDate":"2024-02-09"},{"lineNumber":140,"author":{"gitId":"NeoHW"},"content":"     * This method considers two Event objects equal if they have the same description, completion status,","lastModifiedDate":"2024-02-09"},{"lineNumber":141,"author":{"gitId":"NeoHW"},"content":"     * start time, and end time.","lastModifiedDate":"2024-02-09"},{"lineNumber":142,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":143,"author":{"gitId":"NeoHW"},"content":"     * @param obj the reference object with which to compare.","lastModifiedDate":"2024-02-09"},{"lineNumber":144,"author":{"gitId":"NeoHW"},"content":"     * @return true if this Event is the same as the obj argument; false otherwise.","lastModifiedDate":"2024-02-09"},{"lineNumber":145,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":146,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":147,"author":{"gitId":"NeoHW"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-09"},{"lineNumber":148,"author":{"gitId":"NeoHW"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-02-09"},{"lineNumber":149,"author":{"gitId":"NeoHW"},"content":"            return true;","lastModifiedDate":"2024-02-09"},{"lineNumber":150,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":151,"author":{"gitId":"NeoHW"},"content":"        if (obj \u003d\u003d null || getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":152,"author":{"gitId":"NeoHW"},"content":"            return false;","lastModifiedDate":"2024-02-09"},{"lineNumber":153,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":154,"author":{"gitId":"NeoHW"},"content":"        Event event \u003d (Event) obj;","lastModifiedDate":"2024-02-09"},{"lineNumber":155,"author":{"gitId":"NeoHW"},"content":"        return isDone \u003d\u003d event.isDone","lastModifiedDate":"2024-02-09"},{"lineNumber":156,"author":{"gitId":"NeoHW"},"content":"                \u0026\u0026 Objects.equals(description, event.description)","lastModifiedDate":"2024-02-09"},{"lineNumber":157,"author":{"gitId":"NeoHW"},"content":"                \u0026\u0026 Objects.equals(from, event.from)","lastModifiedDate":"2024-02-09"},{"lineNumber":158,"author":{"gitId":"NeoHW"},"content":"                \u0026\u0026 Objects.equals(to, event.to);","lastModifiedDate":"2024-02-09"},{"lineNumber":159,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":160,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":161,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":162,"author":{"gitId":"NeoHW"},"content":"     * Returns a hash code value for the Event object. This method is supported for the benefit of","lastModifiedDate":"2024-02-09"},{"lineNumber":163,"author":{"gitId":"NeoHW"},"content":"     * hash tables such as those provided by HashMap.","lastModifiedDate":"2024-02-09"},{"lineNumber":164,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":165,"author":{"gitId":"NeoHW"},"content":"     * @return a hash code value for this object.","lastModifiedDate":"2024-02-09"},{"lineNumber":166,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":167,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":168,"author":{"gitId":"NeoHW"},"content":"    public int hashCode() {","lastModifiedDate":"2024-02-09"},{"lineNumber":169,"author":{"gitId":"NeoHW"},"content":"        return Objects.hash(description, isDone, from, to);","lastModifiedDate":"2024-02-09"},{"lineNumber":170,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":171,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":172,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":173,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":174,"author":{"gitId":"NeoHW"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2024-01-29"},{"lineNumber":175,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":176,"author":{"gitId":"NeoHW"},"content":"     * @return The string representation.","lastModifiedDate":"2024-01-29"},{"lineNumber":177,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":178,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":179,"author":{"gitId":"NeoHW"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":180,"author":{"gitId":"NeoHW"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-01-22"},{"lineNumber":181,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":182,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"NeoHW":182}},{"path":"src/main/java/bytebuddy/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":" * The Task class represents a task with a description and completion status.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"    protected String description;","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"     * Constructs a new Task with the given description and sets its completion status to false.","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"     * Constructs a new Task with the given description and completion status.","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"     * Gets the description of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"        return this.description;","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"     * Checks if the task is marked as done.","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"     * @return True if the task is marked as done, false otherwise.","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"        return this.isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"     * Marks the task as done and returns a message indicating the change.","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"     * @return A message indicating that the task has been marked as done.","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"    public String markAsDone() {","lastModifiedDate":"2024-01-21"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-21"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"        return \"Nice! I\u0027ve mark this task as done:\\n\\t\\t\" + this;","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"     * Marks the task as not done and returns a message indicating the change.","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"     * @return A message indicating that the task has been marked as not done yet.","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"    public String unmarkAsDone() {","lastModifiedDate":"2024-01-21"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-21"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\\t\\t\" + this;","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":68,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"NeoHW"},"content":"     * Gets the status icon representing the completion status of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"NeoHW"},"content":"     * @return The status icon (\"✓\" for done, \"✕\" for not done).","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-21"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"        return (isDone ? \"✓\" : \"✕\"); // mark done task with ✓","lastModifiedDate":"2024-01-22"},{"lineNumber":76,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":77,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"NeoHW"},"content":"     * Returns a formatted string representation of the task for writing into an output file.","lastModifiedDate":"2024-02-09"},{"lineNumber":80,"author":{"gitId":"NeoHW"},"content":"     * Subclasses must implement this method to provide specific formatting for each type of task.","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"NeoHW"},"content":"     * @return A formatted string representation of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"NeoHW"},"content":"    public abstract String getTextFormattedOutput();","lastModifiedDate":"2024-02-09"},{"lineNumber":85,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":86,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":87,"author":{"gitId":"NeoHW"},"content":"     * Indicates whether some other object is \"equal to\" this one.","lastModifiedDate":"2024-02-09"},{"lineNumber":88,"author":{"gitId":"NeoHW"},"content":"     * Subclasses must override this method to define their own equality criteria.","lastModifiedDate":"2024-02-09"},{"lineNumber":89,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":90,"author":{"gitId":"NeoHW"},"content":"     * @param obj The reference object with which to compare.","lastModifiedDate":"2024-02-09"},{"lineNumber":91,"author":{"gitId":"NeoHW"},"content":"     * @return {@code true} if this object is the same as the obj argument; {@code false} otherwise.","lastModifiedDate":"2024-02-09"},{"lineNumber":92,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":93,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"NeoHW"},"content":"    public abstract boolean equals(Object obj);","lastModifiedDate":"2024-02-09"},{"lineNumber":95,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":96,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":97,"author":{"gitId":"NeoHW"},"content":"     * Returns a hash code value for the object.","lastModifiedDate":"2024-02-09"},{"lineNumber":98,"author":{"gitId":"NeoHW"},"content":"     * Subclasses must override this method to generate a hash code consistent with the equals method.","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"NeoHW"},"content":"     * @return A hash code value for this object.","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"NeoHW"},"content":"    public abstract int hashCode();","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"NeoHW"},"content":"     * Returns a string representation of the task, including its status icon and description.","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"NeoHW"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"NeoHW"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":111,"author":{"gitId":"NeoHW"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-21"},{"lineNumber":112,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":113,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"NeoHW":113}},{"path":"src/main/java/bytebuddy/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.constants.ExceptionErrorMessages.DUPLICATE_TASK_ERROR_MESSAGE;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.constants.ExceptionErrorMessages.EMPTY_DESCRIPTION_ERROR_MESSAGE;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.constants.ExceptionErrorMessages.EMPTY_KEYWORD_ERROR_MESSAGE;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.constants.ExceptionErrorMessages.FAILED_WRITE_TO_FILE_ERROR_MESSAGE;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.constants.ExceptionErrorMessages.NO_SUCH_TASK_NUMBER_ERROR_MESSAGE;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.constants.ExceptionErrorMessages.NUMBER_FORMAT_ERROR_MESSAGE;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.constants.FilePaths.RELATIVE_OUTPUT_TXT_FILE_PATH;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.constants.Formats.DEADLINE_FORMAT;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.constants.Formats.EVENT_FORMAT;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.constants.Formats.LIST_FORMAT;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.parser.Parser.splitStringWithTrim;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.storage.Storage.writeToFile;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.ui.Ui.printWithSolidLineBreak;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.exceptions.ByteBuddyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.ui.Ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":" * The TaskList class represents a collection of tasks and","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":" * provides methods to manipulate and interact with the task list.","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"public class TaskList {","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"    private HashSet\u003cTask\u003e taskSet;","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"     * Constructs a new TaskList with an empty list of tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"        taskSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"     * @return The size of the task list.","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"    public int size() {","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"        return taskList.size();","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"     * Clears all tasks from the task list.","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"    public void clear() {","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"        taskList.clear();","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"        taskSet.clear();","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"     * Checks if the task list contains a specific task.","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"     * @param t The task to check for.","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"     * @return true if the task list contains the specified task, false otherwise.","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"    public boolean contains(Task t) {","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"        // return taskList.contains(t);","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"        return taskSet.contains(t);","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"NeoHW"},"content":"     * Gets a task at a specified index in the task list.","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"NeoHW"},"content":"     * @param i The index of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"NeoHW"},"content":"    public Task get(int i) {","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"NeoHW"},"content":"        return taskList.get(i);","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"NeoHW"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"NeoHW"},"content":"     * @param t The task to add.","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"NeoHW"},"content":"     * @return true if the task was added successfully, false otherwise.","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"NeoHW"},"content":"    public boolean add(Task t) throws ByteBuddyException {","lastModifiedDate":"2024-02-09"},{"lineNumber":87,"author":{"gitId":"NeoHW"},"content":"        if (this.contains(t)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":88,"author":{"gitId":"NeoHW"},"content":"            throw new ByteBuddyException(DUPLICATE_TASK_ERROR_MESSAGE);","lastModifiedDate":"2024-02-09"},{"lineNumber":89,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":90,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":91,"author":{"gitId":"NeoHW"},"content":"        taskSet.add(t);","lastModifiedDate":"2024-02-09"},{"lineNumber":92,"author":{"gitId":"NeoHW"},"content":"        return taskList.add(t);","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"NeoHW"},"content":"     * Removes a task at a specified index from the task list.","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"NeoHW"},"content":"     * @param index The index of the task to remove.","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"NeoHW"},"content":"     * @return The removed task.","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"NeoHW"},"content":"    public Task remove(int index) {","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"NeoHW"},"content":"        taskSet.remove(this.get(index));","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"NeoHW"},"content":"        return taskList.remove(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"NeoHW"},"content":"    private boolean isValidIndex(int markIndex) {","lastModifiedDate":"2024-02-06"},{"lineNumber":107,"author":{"gitId":"NeoHW"},"content":"        return markIndex \u003c 0 || markIndex \u003e\u003d taskList.size();","lastModifiedDate":"2024-02-06"},{"lineNumber":108,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":109,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"NeoHW"},"content":"     * Marks a task as done in the task list based on user input.","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"NeoHW"},"content":"     * @param info The user input containing task information.","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"NeoHW"},"content":"     * @throws ByteBuddyException If an error occurs during the marking process.","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"NeoHW"},"content":"    public String mark(String info) throws ByteBuddyException {","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":118,"author":{"gitId":"NeoHW"},"content":"            int markIndex \u003d Integer.parseInt(info.trim()) - 1;","lastModifiedDate":"2024-01-27"},{"lineNumber":119,"author":{"gitId":"NeoHW"},"content":"            if (isValidIndex(markIndex)) {","lastModifiedDate":"2024-02-06"},{"lineNumber":120,"author":{"gitId":"NeoHW"},"content":"                // throw new ByteBuddyException(NO_SUCH_TASK_NUMBER_ERROR_MESSAGE);","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"NeoHW"},"content":"                return \"\\t \" + NO_SUCH_TASK_NUMBER_ERROR_MESSAGE;","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"NeoHW"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":123,"author":{"gitId":"NeoHW"},"content":"            String markToPrint \u003d taskList.get(markIndex).markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":124,"author":{"gitId":"NeoHW"},"content":"            printWithSolidLineBreak(\"\\t \" + markToPrint);","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":126,"author":{"gitId":"NeoHW"},"content":"            writeToFile(RELATIVE_OUTPUT_TXT_FILE_PATH, getTaskListFormattedStringOutput(taskList));","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":128,"author":{"gitId":"NeoHW"},"content":"            return \"\\t \" + markToPrint;","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"NeoHW"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":130,"author":{"gitId":"NeoHW"},"content":"            // throw new ByteBuddyException(NUMBER_FORMAT_ERROR_MESSAGE);","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"NeoHW"},"content":"            return \"\\t \" + NUMBER_FORMAT_ERROR_MESSAGE;","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"NeoHW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":133,"author":{"gitId":"NeoHW"},"content":"            // throw new ByteBuddyException(FAILED_WRITE_TO_FILE_ERROR_MESSAGE);","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"NeoHW"},"content":"            return \"\\t \" + FAILED_WRITE_TO_FILE_ERROR_MESSAGE;","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":136,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":137,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":138,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":139,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":140,"author":{"gitId":"NeoHW"},"content":"     * Marks a task as not done in the task list based on user input.","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"NeoHW"},"content":"     * @param info The user input containing task information.","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"NeoHW"},"content":"     * @throws ByteBuddyException If an error occurs during the unmarking process.","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":145,"author":{"gitId":"NeoHW"},"content":"    public String unmark(String info) throws ByteBuddyException {","lastModifiedDate":"2024-02-03"},{"lineNumber":146,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":147,"author":{"gitId":"NeoHW"},"content":"            int unmarkIndex \u003d Integer.parseInt(info.trim()) - 1;","lastModifiedDate":"2024-01-27"},{"lineNumber":148,"author":{"gitId":"NeoHW"},"content":"            if (isValidIndex(unmarkIndex)) {","lastModifiedDate":"2024-02-06"},{"lineNumber":149,"author":{"gitId":"NeoHW"},"content":"                // throw new ByteBuddyException(NO_SUCH_TASK_NUMBER_ERROR_MESSAGE);","lastModifiedDate":"2024-02-03"},{"lineNumber":150,"author":{"gitId":"NeoHW"},"content":"                return \"\\t \" + NO_SUCH_TASK_NUMBER_ERROR_MESSAGE;","lastModifiedDate":"2024-02-03"},{"lineNumber":151,"author":{"gitId":"NeoHW"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":152,"author":{"gitId":"NeoHW"},"content":"            String unmarkToPrint \u003d taskList.get(unmarkIndex).unmarkAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":153,"author":{"gitId":"NeoHW"},"content":"            printWithSolidLineBreak(\"\\t \" + unmarkToPrint);","lastModifiedDate":"2024-01-29"},{"lineNumber":154,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":155,"author":{"gitId":"NeoHW"},"content":"            writeToFile(RELATIVE_OUTPUT_TXT_FILE_PATH, getTaskListFormattedStringOutput(taskList));","lastModifiedDate":"2024-01-29"},{"lineNumber":156,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":157,"author":{"gitId":"NeoHW"},"content":"            return \"\\t \" + unmarkToPrint;","lastModifiedDate":"2024-02-03"},{"lineNumber":158,"author":{"gitId":"NeoHW"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":159,"author":{"gitId":"NeoHW"},"content":"            // throw new ByteBuddyException(NUMBER_FORMAT_ERROR_MESSAGE);","lastModifiedDate":"2024-02-03"},{"lineNumber":160,"author":{"gitId":"NeoHW"},"content":"            return \"\\t \" + NUMBER_FORMAT_ERROR_MESSAGE;","lastModifiedDate":"2024-02-03"},{"lineNumber":161,"author":{"gitId":"NeoHW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":162,"author":{"gitId":"NeoHW"},"content":"            // throw new ByteBuddyException(FAILED_WRITE_TO_FILE_ERROR_MESSAGE);","lastModifiedDate":"2024-02-03"},{"lineNumber":163,"author":{"gitId":"NeoHW"},"content":"            return \"\\t \" + FAILED_WRITE_TO_FILE_ERROR_MESSAGE;","lastModifiedDate":"2024-02-03"},{"lineNumber":164,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":165,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":166,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":167,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":168,"author":{"gitId":"NeoHW"},"content":"     * Deletes a task from the task list based on user input.","lastModifiedDate":"2024-01-29"},{"lineNumber":169,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":170,"author":{"gitId":"NeoHW"},"content":"     * @param info The user input containing task information.","lastModifiedDate":"2024-01-29"},{"lineNumber":171,"author":{"gitId":"NeoHW"},"content":"     * @throws ByteBuddyException If an error occurs during the deletion process.","lastModifiedDate":"2024-01-29"},{"lineNumber":172,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":173,"author":{"gitId":"NeoHW"},"content":"    public String delete(String info) throws ByteBuddyException {","lastModifiedDate":"2024-02-03"},{"lineNumber":174,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":175,"author":{"gitId":"NeoHW"},"content":"            int deleteIndex \u003d Integer.parseInt(info.trim()) - 1;","lastModifiedDate":"2024-01-27"},{"lineNumber":176,"author":{"gitId":"NeoHW"},"content":"            if (isValidIndex(deleteIndex)) {","lastModifiedDate":"2024-02-06"},{"lineNumber":177,"author":{"gitId":"NeoHW"},"content":"                // throw new ByteBuddyException(NO_SUCH_TASK_NUMBER_ERROR_MESSAGE);","lastModifiedDate":"2024-02-03"},{"lineNumber":178,"author":{"gitId":"NeoHW"},"content":"                return \"\\t \" + NO_SUCH_TASK_NUMBER_ERROR_MESSAGE;","lastModifiedDate":"2024-02-03"},{"lineNumber":179,"author":{"gitId":"NeoHW"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":180,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":181,"author":{"gitId":"NeoHW"},"content":"            taskSet.remove(this.get(deleteIndex));","lastModifiedDate":"2024-02-09"},{"lineNumber":182,"author":{"gitId":"NeoHW"},"content":"            Task removed \u003d taskList.remove(deleteIndex);","lastModifiedDate":"2024-01-27"},{"lineNumber":183,"author":{"gitId":"NeoHW"},"content":"            printTaskRemovedWithSolidLineBreak(removed);","lastModifiedDate":"2024-01-27"},{"lineNumber":184,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":185,"author":{"gitId":"NeoHW"},"content":"            writeToFile(RELATIVE_OUTPUT_TXT_FILE_PATH, getTaskListFormattedStringOutput(taskList));","lastModifiedDate":"2024-01-29"},{"lineNumber":186,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":187,"author":{"gitId":"NeoHW"},"content":"            return returnTaskRemovedString(removed);","lastModifiedDate":"2024-02-03"},{"lineNumber":188,"author":{"gitId":"NeoHW"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":189,"author":{"gitId":"NeoHW"},"content":"            // throw new ByteBuddyException(NUMBER_FORMAT_ERROR_MESSAGE);","lastModifiedDate":"2024-02-03"},{"lineNumber":190,"author":{"gitId":"NeoHW"},"content":"            return \"\\t \" + NUMBER_FORMAT_ERROR_MESSAGE;","lastModifiedDate":"2024-02-03"},{"lineNumber":191,"author":{"gitId":"NeoHW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":192,"author":{"gitId":"NeoHW"},"content":"            // throw new ByteBuddyException(FAILED_WRITE_TO_FILE_ERROR_MESSAGE);","lastModifiedDate":"2024-02-03"},{"lineNumber":193,"author":{"gitId":"NeoHW"},"content":"            return \"\\t \" + FAILED_WRITE_TO_FILE_ERROR_MESSAGE;","lastModifiedDate":"2024-02-03"},{"lineNumber":194,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":195,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":196,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":197,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":198,"author":{"gitId":"NeoHW"},"content":"     * Adds a new Todo task to the task list based on user input.","lastModifiedDate":"2024-01-29"},{"lineNumber":199,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":200,"author":{"gitId":"NeoHW"},"content":"     * @param info The user input containing task information.","lastModifiedDate":"2024-01-29"},{"lineNumber":201,"author":{"gitId":"NeoHW"},"content":"     * @throws ByteBuddyException If an error occurs during the task creation process.","lastModifiedDate":"2024-01-29"},{"lineNumber":202,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":203,"author":{"gitId":"NeoHW"},"content":"    public String todo(String info) throws ByteBuddyException {","lastModifiedDate":"2024-02-03"},{"lineNumber":204,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":205,"author":{"gitId":"NeoHW"},"content":"            if (info.isEmpty()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":206,"author":{"gitId":"NeoHW"},"content":"                // throw new ByteBuddyException(EMPTY_DESCRIPTION_ERROR_MESSAGE);","lastModifiedDate":"2024-02-03"},{"lineNumber":207,"author":{"gitId":"NeoHW"},"content":"                return \"\\t \" + EMPTY_DESCRIPTION_ERROR_MESSAGE;","lastModifiedDate":"2024-02-03"},{"lineNumber":208,"author":{"gitId":"NeoHW"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":209,"author":{"gitId":"NeoHW"},"content":"            Task todo \u003d new Todo(info);","lastModifiedDate":"2024-01-27"},{"lineNumber":210,"author":{"gitId":"NeoHW"},"content":"            this.add(todo);","lastModifiedDate":"2024-02-09"},{"lineNumber":211,"author":{"gitId":"NeoHW"},"content":"            printTaskAddedWithSolidLineBreak(todo);","lastModifiedDate":"2024-01-27"},{"lineNumber":212,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":213,"author":{"gitId":"NeoHW"},"content":"            writeToFile(RELATIVE_OUTPUT_TXT_FILE_PATH, getTaskListFormattedStringOutput(taskList));","lastModifiedDate":"2024-01-29"},{"lineNumber":214,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":215,"author":{"gitId":"NeoHW"},"content":"            return returnTaskAddedString(todo);","lastModifiedDate":"2024-02-03"},{"lineNumber":216,"author":{"gitId":"NeoHW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":217,"author":{"gitId":"NeoHW"},"content":"            // throw new ByteBuddyException(FAILED_WRITE_TO_FILE_ERROR_MESSAGE);","lastModifiedDate":"2024-02-03"},{"lineNumber":218,"author":{"gitId":"NeoHW"},"content":"            return \"\\t \" + FAILED_WRITE_TO_FILE_ERROR_MESSAGE;","lastModifiedDate":"2024-02-03"},{"lineNumber":219,"author":{"gitId":"NeoHW"},"content":"        } catch (ByteBuddyException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":220,"author":{"gitId":"NeoHW"},"content":"            return \"\\t \" + e.getMessage();","lastModifiedDate":"2024-02-09"},{"lineNumber":221,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":222,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":223,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":224,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":225,"author":{"gitId":"NeoHW"},"content":"     * Adds a new Deadline task to the task list based on user input.","lastModifiedDate":"2024-01-29"},{"lineNumber":226,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":227,"author":{"gitId":"NeoHW"},"content":"     * @param info The user input containing task information.","lastModifiedDate":"2024-01-29"},{"lineNumber":228,"author":{"gitId":"NeoHW"},"content":"     * @throws ByteBuddyException If an error occurs during the task creation process.","lastModifiedDate":"2024-01-29"},{"lineNumber":229,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":230,"author":{"gitId":"NeoHW"},"content":"    public String deadline(String info) throws ByteBuddyException {","lastModifiedDate":"2024-02-03"},{"lineNumber":231,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":232,"author":{"gitId":"NeoHW"},"content":"            if (info.isEmpty()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":233,"author":{"gitId":"NeoHW"},"content":"                // throw new ByteBuddyException(EMPTY_DESCRIPTION_ERROR_MESSAGE);","lastModifiedDate":"2024-02-03"},{"lineNumber":234,"author":{"gitId":"NeoHW"},"content":"                return \"\\t \" + EMPTY_DESCRIPTION_ERROR_MESSAGE;","lastModifiedDate":"2024-02-03"},{"lineNumber":235,"author":{"gitId":"NeoHW"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":236,"author":{"gitId":"NeoHW"},"content":"            List\u003cString\u003e deadlineInfo \u003d splitStringWithTrim(info, \"/by\", 2);","lastModifiedDate":"2024-01-27"},{"lineNumber":237,"author":{"gitId":"NeoHW"},"content":"            Task deadline \u003d new Deadline(deadlineInfo.get(0), deadlineInfo.get(1));","lastModifiedDate":"2024-01-27"},{"lineNumber":238,"author":{"gitId":"NeoHW"},"content":"            this.add(deadline);","lastModifiedDate":"2024-02-09"},{"lineNumber":239,"author":{"gitId":"NeoHW"},"content":"            printTaskAddedWithSolidLineBreak(deadline);","lastModifiedDate":"2024-01-27"},{"lineNumber":240,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":241,"author":{"gitId":"NeoHW"},"content":"            writeToFile(RELATIVE_OUTPUT_TXT_FILE_PATH, getTaskListFormattedStringOutput(taskList));","lastModifiedDate":"2024-01-29"},{"lineNumber":242,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":243,"author":{"gitId":"NeoHW"},"content":"            return returnTaskAddedString(deadline);","lastModifiedDate":"2024-02-03"},{"lineNumber":244,"author":{"gitId":"NeoHW"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":245,"author":{"gitId":"NeoHW"},"content":"            // throw new ByteBuddyException(\"The correct usage is: \" + DEADLINE_FORMAT);","lastModifiedDate":"2024-02-03"},{"lineNumber":246,"author":{"gitId":"NeoHW"},"content":"            return \"\\t The correct usage is: \" + DEADLINE_FORMAT;","lastModifiedDate":"2024-02-03"},{"lineNumber":247,"author":{"gitId":"NeoHW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":248,"author":{"gitId":"NeoHW"},"content":"            // throw new ByteBuddyException(FAILED_WRITE_TO_FILE_ERROR_MESSAGE);","lastModifiedDate":"2024-02-03"},{"lineNumber":249,"author":{"gitId":"NeoHW"},"content":"            return \"\\t \" + FAILED_WRITE_TO_FILE_ERROR_MESSAGE;","lastModifiedDate":"2024-02-03"},{"lineNumber":250,"author":{"gitId":"NeoHW"},"content":"        } catch (ByteBuddyException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":251,"author":{"gitId":"NeoHW"},"content":"            return \"\\t \" + e.getMessage();","lastModifiedDate":"2024-02-09"},{"lineNumber":252,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":253,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":254,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":255,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":256,"author":{"gitId":"NeoHW"},"content":"     * Returns String output to inform user that event has been added","lastModifiedDate":"2024-02-03"},{"lineNumber":257,"author":{"gitId":"NeoHW"},"content":"     * Adds a new Event task to the task list based on user input.","lastModifiedDate":"2024-01-29"},{"lineNumber":258,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":259,"author":{"gitId":"NeoHW"},"content":"     * @param info The user input containing task information.","lastModifiedDate":"2024-01-29"},{"lineNumber":260,"author":{"gitId":"NeoHW"},"content":"     * @throws ByteBuddyException If an error occurs during the task creation process.","lastModifiedDate":"2024-01-29"},{"lineNumber":261,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":262,"author":{"gitId":"NeoHW"},"content":"    public String event(String info) throws ByteBuddyException {","lastModifiedDate":"2024-02-03"},{"lineNumber":263,"author":{"gitId":"NeoHW"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":264,"author":{"gitId":"NeoHW"},"content":"            if (info.isEmpty()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":265,"author":{"gitId":"NeoHW"},"content":"                // throw new ByteBuddyException(EMPTY_DESCRIPTION_ERROR_MESSAGE);","lastModifiedDate":"2024-02-03"},{"lineNumber":266,"author":{"gitId":"NeoHW"},"content":"                return \"\\t \" + EMPTY_DESCRIPTION_ERROR_MESSAGE;","lastModifiedDate":"2024-02-03"},{"lineNumber":267,"author":{"gitId":"NeoHW"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":268,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":269,"author":{"gitId":"NeoHW"},"content":"            List\u003cString\u003e eventInfo \u003d splitStringWithTrim(info, \"/from|/to\", 3);","lastModifiedDate":"2024-01-27"},{"lineNumber":270,"author":{"gitId":"NeoHW"},"content":"            Task event \u003d new Event(eventInfo.get(0), eventInfo.get(1), eventInfo.get(2));","lastModifiedDate":"2024-01-27"},{"lineNumber":271,"author":{"gitId":"NeoHW"},"content":"            this.add(event);","lastModifiedDate":"2024-02-09"},{"lineNumber":272,"author":{"gitId":"NeoHW"},"content":"            printTaskAddedWithSolidLineBreak(event);","lastModifiedDate":"2024-01-27"},{"lineNumber":273,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":274,"author":{"gitId":"NeoHW"},"content":"            writeToFile(RELATIVE_OUTPUT_TXT_FILE_PATH, getTaskListFormattedStringOutput(taskList));","lastModifiedDate":"2024-01-29"},{"lineNumber":275,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":276,"author":{"gitId":"NeoHW"},"content":"            return returnTaskAddedString(event);","lastModifiedDate":"2024-02-03"},{"lineNumber":277,"author":{"gitId":"NeoHW"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":278,"author":{"gitId":"NeoHW"},"content":"            // throw new ByteBuddyException(\"The correct usage is: \" + EVENT_FORMAT);","lastModifiedDate":"2024-02-03"},{"lineNumber":279,"author":{"gitId":"NeoHW"},"content":"            return \"The correct usage is: \" + EVENT_FORMAT;","lastModifiedDate":"2024-02-03"},{"lineNumber":280,"author":{"gitId":"NeoHW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":281,"author":{"gitId":"NeoHW"},"content":"            // throw new ByteBuddyException(FAILED_WRITE_TO_FILE_ERROR_MESSAGE);","lastModifiedDate":"2024-02-03"},{"lineNumber":282,"author":{"gitId":"NeoHW"},"content":"            return FAILED_WRITE_TO_FILE_ERROR_MESSAGE;","lastModifiedDate":"2024-02-03"},{"lineNumber":283,"author":{"gitId":"NeoHW"},"content":"        } catch (ByteBuddyException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":284,"author":{"gitId":"NeoHW"},"content":"            return \"\\t \" + e.getMessage();","lastModifiedDate":"2024-02-09"},{"lineNumber":285,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":286,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":287,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":288,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":289,"author":{"gitId":"NeoHW"},"content":"     * Returns the entire task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":290,"author":{"gitId":"NeoHW"},"content":"     * Each task is numbered, and its details are displayed in the format \"[task_number].[task_details]\".","lastModifiedDate":"2024-01-29"},{"lineNumber":291,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":292,"author":{"gitId":"NeoHW"},"content":"    public String getFormattedTaskList() {","lastModifiedDate":"2024-02-03"},{"lineNumber":293,"author":{"gitId":"NeoHW"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2024-01-29"},{"lineNumber":294,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":295,"author":{"gitId":"NeoHW"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-27"},{"lineNumber":296,"author":{"gitId":"NeoHW"},"content":"            if (i \u003e 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":297,"author":{"gitId":"NeoHW"},"content":"                str.append(\"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":298,"author":{"gitId":"NeoHW"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":299,"author":{"gitId":"NeoHW"},"content":"            str.append(\"\\t \").append(i + 1).append(\".\").append(taskList.get(i));","lastModifiedDate":"2024-01-29"},{"lineNumber":300,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":301,"author":{"gitId":"NeoHW"},"content":"        return str.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":302,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":303,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":304,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":305,"author":{"gitId":"NeoHW"},"content":"     * Prints the entire task list with a solid line break above and below the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":306,"author":{"gitId":"NeoHW"},"content":"     * Each task is numbered, and its details are displayed in the format \"[task_number].[task_details]\".","lastModifiedDate":"2024-02-03"},{"lineNumber":307,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":308,"author":{"gitId":"NeoHW"},"content":"    public void printTaskList() {","lastModifiedDate":"2024-02-03"},{"lineNumber":309,"author":{"gitId":"NeoHW"},"content":"        Ui.printWithSolidLineBreak(getFormattedTaskList());","lastModifiedDate":"2024-02-03"},{"lineNumber":310,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":311,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":312,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":313,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":314,"author":{"gitId":"NeoHW"},"content":"     * Formats the task list into a string with each task\u0027s formatted output on a new line","lastModifiedDate":"2024-01-29"},{"lineNumber":315,"author":{"gitId":"NeoHW"},"content":"     * for writing into output file.","lastModifiedDate":"2024-01-29"},{"lineNumber":316,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":317,"author":{"gitId":"NeoHW"},"content":"     * @param taskList The list of tasks to format.","lastModifiedDate":"2024-01-29"},{"lineNumber":318,"author":{"gitId":"NeoHW"},"content":"     * @return A string containing the formatted output of each task in the list.","lastModifiedDate":"2024-01-29"},{"lineNumber":319,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":320,"author":{"gitId":"NeoHW"},"content":"    public String getTaskListFormattedStringOutput(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-01-29"},{"lineNumber":321,"author":{"gitId":"NeoHW"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2024-01-27"},{"lineNumber":322,"author":{"gitId":"NeoHW"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-01-27"},{"lineNumber":323,"author":{"gitId":"NeoHW"},"content":"            s.append(task.getTextFormattedOutput()).append(\"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":324,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":325,"author":{"gitId":"NeoHW"},"content":"        return s.toString();","lastModifiedDate":"2024-01-27"},{"lineNumber":326,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":327,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":328,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":329,"author":{"gitId":"NeoHW"},"content":"     * Returns a confirmation message for the added task,","lastModifiedDate":"2024-02-03"},{"lineNumber":330,"author":{"gitId":"NeoHW"},"content":"     * and the updated total number of tasks in the list.","lastModifiedDate":"2024-01-29"},{"lineNumber":331,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":332,"author":{"gitId":"NeoHW"},"content":"     * @param task The task that was added to the list.","lastModifiedDate":"2024-01-29"},{"lineNumber":333,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":334,"author":{"gitId":"NeoHW"},"content":"    public String returnTaskAddedString(Task task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":335,"author":{"gitId":"NeoHW"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2024-01-29"},{"lineNumber":336,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":337,"author":{"gitId":"NeoHW"},"content":"        str.append(\"\\t Got it. I\u0027ve Added this task:\\n\")","lastModifiedDate":"2024-01-29"},{"lineNumber":338,"author":{"gitId":"NeoHW"},"content":"                .append(\"\\t\\t \").append(task).append(\"\\n\")","lastModifiedDate":"2024-01-29"},{"lineNumber":339,"author":{"gitId":"NeoHW"},"content":"                .append(\"\\t Now you have \").append(taskList.size()).append(\" tasks in the list.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":340,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":341,"author":{"gitId":"NeoHW"},"content":"        return str.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":342,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":343,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":344,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":345,"author":{"gitId":"NeoHW"},"content":"     * Prints a solid line break, followed by a confirmation message for the added task,","lastModifiedDate":"2024-02-03"},{"lineNumber":346,"author":{"gitId":"NeoHW"},"content":"     * and the updated total number of tasks in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":347,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":348,"author":{"gitId":"NeoHW"},"content":"     * @param task The task that was added to the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":349,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":350,"author":{"gitId":"NeoHW"},"content":"    public void printTaskAddedWithSolidLineBreak(Task task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":351,"author":{"gitId":"NeoHW"},"content":"        Ui.printWithSolidLineBreak(returnTaskAddedString(task));","lastModifiedDate":"2024-02-03"},{"lineNumber":352,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":353,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":354,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":355,"author":{"gitId":"NeoHW"},"content":"     * Returns a confirmation message for the removed task,","lastModifiedDate":"2024-02-03"},{"lineNumber":356,"author":{"gitId":"NeoHW"},"content":"     * and the updated total number of tasks in the list.","lastModifiedDate":"2024-01-29"},{"lineNumber":357,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":358,"author":{"gitId":"NeoHW"},"content":"     * @param task The task that was removed from the list.","lastModifiedDate":"2024-01-29"},{"lineNumber":359,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":360,"author":{"gitId":"NeoHW"},"content":"    public String returnTaskRemovedString(Task task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":361,"author":{"gitId":"NeoHW"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2024-01-29"},{"lineNumber":362,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":363,"author":{"gitId":"NeoHW"},"content":"        str.append(\"\\t Noted. I\u0027ve removed this task:\\n\")","lastModifiedDate":"2024-01-29"},{"lineNumber":364,"author":{"gitId":"NeoHW"},"content":"                .append(\"\\t\\t \").append(task).append(\"\\n\")","lastModifiedDate":"2024-01-29"},{"lineNumber":365,"author":{"gitId":"NeoHW"},"content":"                .append(\"\\t Now you have \").append(taskList.size()).append(\" tasks in the list.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":366,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":367,"author":{"gitId":"NeoHW"},"content":"        return str.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":368,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":369,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":370,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":371,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":372,"author":{"gitId":"NeoHW"},"content":"     * Prints a solid line break, followed by a confirmation message for the removed task,","lastModifiedDate":"2024-02-03"},{"lineNumber":373,"author":{"gitId":"NeoHW"},"content":"     * and the updated total number of tasks in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":374,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":375,"author":{"gitId":"NeoHW"},"content":"     * @param task The task that was removed from the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":376,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":377,"author":{"gitId":"NeoHW"},"content":"    public void printTaskRemovedWithSolidLineBreak(Task task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":378,"author":{"gitId":"NeoHW"},"content":"        Ui.printWithSolidLineBreak(returnTaskRemovedString(task));","lastModifiedDate":"2024-02-03"},{"lineNumber":379,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":380,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":381,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":382,"author":{"gitId":"NeoHW"},"content":"     * Finds tasks in the task list that match a specified keyword in their descriptions.","lastModifiedDate":"2024-01-29"},{"lineNumber":383,"author":{"gitId":"NeoHW"},"content":"     * The method searches for tasks containing the specified text in their descriptions","lastModifiedDate":"2024-01-29"},{"lineNumber":384,"author":{"gitId":"NeoHW"},"content":"     * and prints the matching tasks to the console.","lastModifiedDate":"2024-01-29"},{"lineNumber":385,"author":{"gitId":"NeoHW"},"content":"     * Returns the matching tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":386,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":387,"author":{"gitId":"NeoHW"},"content":"     * @param keywords The keyword or text to search for among all the tasks in the task list.","lastModifiedDate":"2024-01-29"},{"lineNumber":388,"author":{"gitId":"NeoHW"},"content":"     * @throws ByteBuddyException If there is an issue with the search operation, such as an empty keyword.","lastModifiedDate":"2024-01-29"},{"lineNumber":389,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":390,"author":{"gitId":"NeoHW"},"content":"    public String findTaskWithKeywordInTaskList(List\u003cString\u003e keywords) throws ByteBuddyException {","lastModifiedDate":"2024-02-03"},{"lineNumber":391,"author":{"gitId":"NeoHW"},"content":"        if (keywords.isEmpty()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":392,"author":{"gitId":"NeoHW"},"content":"            throw new ByteBuddyException(EMPTY_KEYWORD_ERROR_MESSAGE + \"\\n\\t Usage: \" + LIST_FORMAT);","lastModifiedDate":"2024-01-29"},{"lineNumber":393,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":394,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":395,"author":{"gitId":"NeoHW"},"content":"        boolean foundTask \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":396,"author":{"gitId":"NeoHW"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2024-01-29"},{"lineNumber":397,"author":{"gitId":"NeoHW"},"content":"        for (String keyword: keywords) {","lastModifiedDate":"2024-01-29"},{"lineNumber":398,"author":{"gitId":"NeoHW"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":399,"author":{"gitId":"NeoHW"},"content":"                String description \u003d taskList.get(i).getDescription().toLowerCase();","lastModifiedDate":"2024-01-29"},{"lineNumber":400,"author":{"gitId":"NeoHW"},"content":"                Pair\u003cStringBuilder, Boolean\u003e pair \u003d","lastModifiedDate":"2024-02-07"},{"lineNumber":401,"author":{"gitId":"NeoHW"},"content":"                        processMatchingTask(keyword.toLowerCase(), str, foundTask, description, i);","lastModifiedDate":"2024-02-07"},{"lineNumber":402,"author":{"gitId":"NeoHW"},"content":"                str \u003d pair.getKey();","lastModifiedDate":"2024-02-06"},{"lineNumber":403,"author":{"gitId":"NeoHW"},"content":"                foundTask \u003d pair.getValue();","lastModifiedDate":"2024-02-06"},{"lineNumber":404,"author":{"gitId":"NeoHW"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":405,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":406,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":407,"author":{"gitId":"NeoHW"},"content":"        if (!foundTask) {","lastModifiedDate":"2024-01-29"},{"lineNumber":408,"author":{"gitId":"NeoHW"},"content":"            Ui.printWithSolidLineBreak(\"\\t There are no matching tasks in your list :(\");","lastModifiedDate":"2024-01-29"},{"lineNumber":409,"author":{"gitId":"NeoHW"},"content":"            return \"There are no matching tasks in your list :(\";","lastModifiedDate":"2024-02-03"},{"lineNumber":410,"author":{"gitId":"NeoHW"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":411,"author":{"gitId":"NeoHW"},"content":"            Ui.printWithSolidLineBreak(\"\\t \" + str.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":412,"author":{"gitId":"NeoHW"},"content":"            return str.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":413,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":414,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":415,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":416,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":417,"author":{"gitId":"NeoHW"},"content":"    private Pair\u003cStringBuilder, Boolean\u003e processMatchingTask(String keyword, StringBuilder str,","lastModifiedDate":"2024-02-07"},{"lineNumber":418,"author":{"gitId":"NeoHW"},"content":"            boolean foundTask, String description, int i) {","lastModifiedDate":"2024-02-07"},{"lineNumber":419,"author":{"gitId":"NeoHW"},"content":"        if (description.contains(keyword)) {","lastModifiedDate":"2024-02-06"},{"lineNumber":420,"author":{"gitId":"NeoHW"},"content":"            if (!foundTask) {","lastModifiedDate":"2024-02-06"},{"lineNumber":421,"author":{"gitId":"NeoHW"},"content":"                str.append(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-06"},{"lineNumber":422,"author":{"gitId":"NeoHW"},"content":"                foundTask \u003d true;","lastModifiedDate":"2024-02-06"},{"lineNumber":423,"author":{"gitId":"NeoHW"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":424,"author":{"gitId":"NeoHW"},"content":"            str.append(\"\\n\\t\\t \").append(i + 1).append(\".\").append(taskList.get(i));","lastModifiedDate":"2024-02-06"},{"lineNumber":425,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":426,"author":{"gitId":"NeoHW"},"content":"        return new Pair\u003c\u003e(str, foundTask);","lastModifiedDate":"2024-02-06"},{"lineNumber":427,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":428,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"NeoHW":428}},{"path":"src/main/java/bytebuddy/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":" * The Todo class represents a simple task without a specified deadline or duration.","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":" * It extends the Task class and provides specific implementations for task creation and string representations.","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"     * Constructs a new Todo task with the given description.","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"     * Constructs a new Todo task with completion status, description, and optional information.","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"     * @param completed   The completion status of the task (1 for done, 0 for not done).","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"    public Todo(String completed, String description) {","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"        super(description, completed.equals(\"1\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"     * Returns a formatted string representation of the Todo task for writing into output file.","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"     * @return The formatted output string.","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"    public String getTextFormattedOutput() {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"        int intIsDone \u003d isDone ? 1 : 0;","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"        return String.format(\"T | %d | %s\", intIsDone, description);","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"     * Indicates whether some other object is \"equal to\" this one.","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"     * This method considers two Todo objects equal if they have the same description and completion status.","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"     * @param obj the reference object with which to compare.","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"     * @return true if this Todo is the same as the obj argument; false otherwise.","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"            return true;","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"        if (obj \u003d\u003d null || getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"            return false;","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"        Todo todo \u003d (Todo) obj;","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"        return isDone \u003d\u003d todo.isDone \u0026\u0026 Objects.equals(description, todo.description);","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"     * Returns a hash code value for the Todo object. This method is supported for the benefit of","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"     * hash tables such as those provided by HashMap.","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"     * @return a hash code value for this object.","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"    public int hashCode() {","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"NeoHW"},"content":"        return Objects.hash(description, isDone);","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"NeoHW"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"     * @return The string representation.","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"NeoHW"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":77,"author":{"gitId":"NeoHW"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-22"},{"lineNumber":79,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":80,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"NeoHW":80}},{"path":"src/main/java/bytebuddy/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.constants.Information.SOLID_LINE_BREAK;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.constants.Messages.BYE_MESSAGE;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.constants.Messages.START_MESSAGE;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":" * The Ui class handles user interface interactions, including printing messages and reading user input.","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"public class Ui {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"    private Scanner sc;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"     * Creates a new Ui instance, initializing the Scanner for user input.","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"    public Ui() {","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"     * Prints the given string with a solid line break above and below it.","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"     * @param s The string to be printed.","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"    public static void printWithSolidLineBreak(String s) {","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"        System.out.println(\"\\t\" + SOLID_LINE_BREAK);","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"        System.out.println(s);","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"        System.out.println(\"\\t\" + SOLID_LINE_BREAK);","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"     * Prints the start message with a solid line break above and below it.","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"    public static void printStartMessage() {","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"        printWithSolidLineBreak(\"\\t \" + START_MESSAGE);","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"     * Prints the bye message with a solid line break above and below it.","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"    public static void printByeMessage() {","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"        printWithSolidLineBreak(\"\\t \" + BYE_MESSAGE);","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"     * Reads a command entered by the user.","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"     * @return The command entered by the user.","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"    public String readCommand() {","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"        return sc.nextLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"NeoHW":56}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NeoHW":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/17.0.7\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"bytebuddy.gui.MainWindow\"\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"50.0\" prefWidth\u003d\"600.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"524.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"588.0\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NeoHW":19}},{"path":"src/test/java/bytebuddy/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.constants.ExceptionErrorMessages.EMPTY_DESCRIPTION_ERROR_MESSAGE;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.constants.ExceptionErrorMessages.NO_SUCH_TASK_NUMBER_ERROR_MESSAGE;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.constants.ExceptionErrorMessages.NUMBER_FORMAT_ERROR_MESSAGE;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.constants.Formats.DEADLINE_FORMAT;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.constants.Formats.EVENT_FORMAT;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"import static bytebuddy.constants.Information.SOLID_LINE_BREAK;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"import bytebuddy.exceptions.ByteBuddyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"public class TaskListTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"    public void testTodo() throws ByteBuddyException, IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"        String todoInfo \u003d \"Test\";","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"        taskList.todo(todoInfo);","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"        assertEquals(\"[T][✕] Test\", taskList.get(0).toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"    public void testTodoEmptyDescription() {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"        String emptyTodoInfo \u003d \"\";","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"        ByteBuddyException exception \u003d assertThrows(ByteBuddyException.class, () -\u003e taskList.todo(emptyTodoInfo));","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"        assertEquals(\"holup!! \" + EMPTY_DESCRIPTION_ERROR_MESSAGE, exception.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"    public void testDeadline() throws ByteBuddyException, IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"        String deadlineInfo \u003d \"Submit report /by 2023-02-28\";","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"        taskList.deadline(deadlineInfo);","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"        assertEquals(\"[D][✕] Submit report (by: Feb 28 2023)\", taskList.get(0).toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"    public void testDeadlineIncorrectFormat() {","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"NeoHW"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"NeoHW"},"content":"        String incorrectDeadlineInfo \u003d \"Submit report\";","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"NeoHW"},"content":"        ByteBuddyException exception \u003d","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"NeoHW"},"content":"                assertThrows(ByteBuddyException.class, () -\u003e taskList.deadline(incorrectDeadlineInfo));","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"NeoHW"},"content":"        assertEquals(\"holup!! The correct usage is: \" + DEADLINE_FORMAT, exception.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"NeoHW"},"content":"    public void testEvent() throws ByteBuddyException, IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"NeoHW"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"NeoHW"},"content":"        String eventInfo \u003d \"TestEvent /from 2019-10-15 /to 2/12/2019 1800\";","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"NeoHW"},"content":"        taskList.event(eventInfo);","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"NeoHW"},"content":"        assertEquals(\"[E][✕] TestEvent (from: Oct 15 2019 to: 2 of December 2019, 6PM)\", taskList.get(0).toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"NeoHW"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"NeoHW"},"content":"    public void testEventIncorrectFormat() {","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"NeoHW"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"NeoHW"},"content":"        String incorrectEventInfo \u003d \"Project meeting /from 2023-02-28 14:00\";","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"NeoHW"},"content":"        ByteBuddyException exception \u003d assertThrows(ByteBuddyException.class, () -\u003e taskList.event(incorrectEventInfo));","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"NeoHW"},"content":"        assertEquals(\"holup!! The correct usage is: \" + EVENT_FORMAT, exception.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"NeoHW"},"content":"    public void testMark() throws ByteBuddyException, IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"NeoHW"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"NeoHW"},"content":"        taskList.add(new Todo(\"Test\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"NeoHW"},"content":"        taskList.mark(\"1\");","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"NeoHW"},"content":"        assertEquals(\"[T][✓] Test\", taskList.get(0).toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"NeoHW"},"content":"    public void testMarkInvalidFormat() {","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"NeoHW"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"NeoHW"},"content":"        String invalidMarkInfo \u003d \"abc\";","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"NeoHW"},"content":"        ByteBuddyException exception \u003d assertThrows(ByteBuddyException.class, () -\u003e taskList.mark(invalidMarkInfo));","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"NeoHW"},"content":"        assertEquals(\"holup!! \" + NUMBER_FORMAT_ERROR_MESSAGE, exception.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"NeoHW"},"content":"    public void testMarkInvalidTaskNumber() {","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"NeoHW"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"NeoHW"},"content":"        String invalidTaskNumber \u003d \"10\";","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"NeoHW"},"content":"        ByteBuddyException exception \u003d assertThrows(ByteBuddyException.class, () -\u003e taskList.mark(invalidTaskNumber));","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"NeoHW"},"content":"        assertEquals(\"holup!! \" + NO_SUCH_TASK_NUMBER_ERROR_MESSAGE, exception.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"NeoHW"},"content":"    public void testUnmark() throws ByteBuddyException, IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"NeoHW"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"NeoHW"},"content":"        taskList.add(new Todo(\"Test\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":116,"author":{"gitId":"NeoHW"},"content":"        taskList.mark(\"1\");","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"NeoHW"},"content":"        taskList.unmark(\"1\");","lastModifiedDate":"2024-01-28"},{"lineNumber":119,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":120,"author":{"gitId":"NeoHW"},"content":"        assertEquals(\"[T][✕] Test\", taskList.get(0).toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"NeoHW"},"content":"    public void testUnmarkInvalidFormat() {","lastModifiedDate":"2024-01-28"},{"lineNumber":125,"author":{"gitId":"NeoHW"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":126,"author":{"gitId":"NeoHW"},"content":"        String invalidUnmarkInfo \u003d \"xyz\";","lastModifiedDate":"2024-01-28"},{"lineNumber":127,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":128,"author":{"gitId":"NeoHW"},"content":"        ByteBuddyException exception \u003d assertThrows(ByteBuddyException.class, () -\u003e taskList.unmark(invalidUnmarkInfo));","lastModifiedDate":"2024-01-28"},{"lineNumber":129,"author":{"gitId":"NeoHW"},"content":"        assertEquals(\"holup!! \" + NUMBER_FORMAT_ERROR_MESSAGE, exception.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":130,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":131,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":132,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":133,"author":{"gitId":"NeoHW"},"content":"    public void testUnmarkInvalidTaskNumber() {","lastModifiedDate":"2024-01-28"},{"lineNumber":134,"author":{"gitId":"NeoHW"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":135,"author":{"gitId":"NeoHW"},"content":"        String invalidTaskNumber \u003d \"5\";","lastModifiedDate":"2024-01-28"},{"lineNumber":136,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":137,"author":{"gitId":"NeoHW"},"content":"        ByteBuddyException exception \u003d assertThrows(ByteBuddyException.class, () -\u003e taskList.unmark(invalidTaskNumber));","lastModifiedDate":"2024-01-28"},{"lineNumber":138,"author":{"gitId":"NeoHW"},"content":"        assertEquals(\"holup!! \" + NO_SUCH_TASK_NUMBER_ERROR_MESSAGE, exception.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":139,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":140,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":141,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":142,"author":{"gitId":"NeoHW"},"content":"    public void testDelete() throws ByteBuddyException, IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":143,"author":{"gitId":"NeoHW"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":144,"author":{"gitId":"NeoHW"},"content":"        taskList.add(new Todo(\"Test\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":145,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":146,"author":{"gitId":"NeoHW"},"content":"        taskList.delete(\"1\");","lastModifiedDate":"2024-01-28"},{"lineNumber":147,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":148,"author":{"gitId":"NeoHW"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2024-01-28"},{"lineNumber":149,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":150,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":151,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":152,"author":{"gitId":"NeoHW"},"content":"    public void testDeleteInvalidFormat() {","lastModifiedDate":"2024-01-28"},{"lineNumber":153,"author":{"gitId":"NeoHW"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":154,"author":{"gitId":"NeoHW"},"content":"        String invalidDeleteInfo \u003d \"invalid\";","lastModifiedDate":"2024-01-28"},{"lineNumber":155,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":156,"author":{"gitId":"NeoHW"},"content":"        ByteBuddyException exception \u003d assertThrows(ByteBuddyException.class, () -\u003e taskList.delete(invalidDeleteInfo));","lastModifiedDate":"2024-01-28"},{"lineNumber":157,"author":{"gitId":"NeoHW"},"content":"        assertEquals(\"holup!! \" + NUMBER_FORMAT_ERROR_MESSAGE, exception.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":158,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":159,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":160,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":161,"author":{"gitId":"NeoHW"},"content":"    public void testDeleteInvalidTaskNumber() {","lastModifiedDate":"2024-01-28"},{"lineNumber":162,"author":{"gitId":"NeoHW"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":163,"author":{"gitId":"NeoHW"},"content":"        String invalidTaskNumber \u003d \"8\";","lastModifiedDate":"2024-01-28"},{"lineNumber":164,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":165,"author":{"gitId":"NeoHW"},"content":"        ByteBuddyException exception \u003d assertThrows(ByteBuddyException.class, () -\u003e taskList.delete(invalidTaskNumber));","lastModifiedDate":"2024-01-28"},{"lineNumber":166,"author":{"gitId":"NeoHW"},"content":"        assertEquals(\"holup!! \" + NO_SUCH_TASK_NUMBER_ERROR_MESSAGE, exception.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":167,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":168,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":169,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":170,"author":{"gitId":"NeoHW"},"content":"    public void testPrintTaskList() throws ByteBuddyException {","lastModifiedDate":"2024-02-09"},{"lineNumber":171,"author":{"gitId":"NeoHW"},"content":"        // Redirect System.out for testing print output","lastModifiedDate":"2024-01-28"},{"lineNumber":172,"author":{"gitId":"NeoHW"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-01-28"},{"lineNumber":173,"author":{"gitId":"NeoHW"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-01-28"},{"lineNumber":174,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":175,"author":{"gitId":"NeoHW"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":176,"author":{"gitId":"NeoHW"},"content":"        taskList.add(new Todo(\"Test\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":177,"author":{"gitId":"NeoHW"},"content":"        taskList.add(new Deadline(\"Submit report\", \"2023-02-28\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":178,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":179,"author":{"gitId":"NeoHW"},"content":"        taskList.printTaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":180,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":181,"author":{"gitId":"NeoHW"},"content":"        String expectedOutput \u003d \"\\t\"","lastModifiedDate":"2024-01-29"},{"lineNumber":182,"author":{"gitId":"NeoHW"},"content":"                + SOLID_LINE_BREAK","lastModifiedDate":"2024-01-29"},{"lineNumber":183,"author":{"gitId":"NeoHW"},"content":"                + \"\\n\\t 1.[T][✕] Test\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":184,"author":{"gitId":"NeoHW"},"content":"                + \"\\t 2.[D][✕] Submit report (by: Feb 28 2023)\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":185,"author":{"gitId":"NeoHW"},"content":"                + \"\\t\"","lastModifiedDate":"2024-01-29"},{"lineNumber":186,"author":{"gitId":"NeoHW"},"content":"                + SOLID_LINE_BREAK","lastModifiedDate":"2024-01-29"},{"lineNumber":187,"author":{"gitId":"NeoHW"},"content":"                + \"\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":188,"author":{"gitId":"NeoHW"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":189,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":190,"author":{"gitId":"NeoHW"},"content":"        // Reset System.out","lastModifiedDate":"2024-01-28"},{"lineNumber":191,"author":{"gitId":"NeoHW"},"content":"        System.setOut(System.out);","lastModifiedDate":"2024-01-28"},{"lineNumber":192,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":193,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"NeoHW":193}},{"path":"src/test/java/bytebuddy/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"public class TaskTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"    public void testTaskMarkAsDone() {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"        Task task \u003d new Todo(\"Sample task\");","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"        String expectedOutput \u003d \"Nice! I\u0027ve mark this task as done:\\n\\t\\t[T][✓] \" + task.description;","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"        String actualOutput \u003d task.markAsDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"        assertTrue(task.isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"    public void testTaskUnmarkAsDone() {","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"        Task task \u003d new Todo(\"1\", \"Sample task\");","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"        String expectedOutput \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\\t\\t[T][✕] \" + task.description;","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"        String actualOutput \u003d task.unmarkAsDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"NeoHW"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"NeoHW"},"content":"        assertFalse(task.isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"NeoHW"},"content":"    public void testGetStatusIcon() {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"NeoHW"},"content":"        Task task \u003d new Todo(\"Sample task\");","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"NeoHW"},"content":"        task.markAsDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"NeoHW"},"content":"        String expectedOutput \u003d \"✓\";","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"NeoHW"},"content":"        String actualOutput \u003d task.getStatusIcon();","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"NeoHW"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"NeoHW"},"content":"    public void testTaskToString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"NeoHW"},"content":"        Task task \u003d new Todo(\"1\", \"Sample task\");","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"NeoHW"},"content":"        String expectedOutput \u003d \"[T][\" + task.getStatusIcon() + \"] Sample task\";","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"NeoHW"},"content":"        String actualOutput \u003d task.toString();","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"NeoHW"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"NeoHW":55}},{"path":"src/test/java/bytebuddy/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"package bytebuddy.tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"public class TodoTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"    public void testTodoToString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"NeoHW"},"content":"        Todo todo \u003d new Todo(\"Buy groceries\");","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"NeoHW"},"content":"        String expectedOutput \u003d \"[T][✕] Buy groceries\";","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"NeoHW"},"content":"        String actualOutput \u003d todo.toString();","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"NeoHW"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"NeoHW"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"NeoHW"},"content":"    public void testTodoTextFormattedOutput() {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"NeoHW"},"content":"        Todo todo \u003d new Todo(\"Buy groceries\");","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"NeoHW"},"content":"        String expectedOutput \u003d \"T | 0 | Buy groceries\";","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"NeoHW"},"content":"        String actualOutput \u003d todo.getTextFormattedOutput();","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"NeoHW"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"NeoHW"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"NeoHW"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"NeoHW":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"todo borrow book","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"NeoHW"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"NeoHW"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"NeoHW"},"content":"mark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"NeoHW"},"content":"mark 3","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"NeoHW"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"NeoHW"},"content":"unmark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"NeoHW"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"NeoHW"},"content":"bye","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"NeoHW":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"NeoHW"},"content":"java -classpath ..\\bin ByteBuddy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NeoHW":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"NeoHW"},"content":"# ./runtest.sh to run this script in text-ui-test directory","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"NeoHW"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"NeoHW"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NeoHW":3,"-":33}}]
