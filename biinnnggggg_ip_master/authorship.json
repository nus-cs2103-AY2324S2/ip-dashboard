[{"path":"src/main/java/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"abstract class AddCommand extends Command {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"    protected final String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"    AddCommand(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"        super(\"\");","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"    protected void respond(TaskList taskList, Ui ui, Task newTask) {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"        String message \u003d","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"                \"Got it, I\u0027ve added this task:\\n  \"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"                + newTask + \"\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"                + \"Now you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"        ui.display(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":15}},{"path":"src/main/java/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"public class AddDeadlineCommand extends AddCommand {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"    private final String byDate;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"    AddDeadlineCommand(String description, String byDate) {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"    void execute(TaskList taskList, Ui ui) throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"        /*","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"        TODO:","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"            1. Refactor for DRY Principle.","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"         */","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"        Task newTask \u003d new Deadline(description, byDate);","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"        taskList.add(newTask);","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"        respond(taskList, ui, newTask);","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"    boolean isExit() {","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"        return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":24}},{"path":"src/main/java/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"    private final String fromDate;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"    private final String toDate;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"    AddEventCommand(String description, String fromDate, String toDate) {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"    void execute(TaskList taskList, Ui ui) throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"        /*","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"        TODO:","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"            1. Refactor to enforce DRY Principle.","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"         */","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"        Task newTask \u003d new Event(description, fromDate, toDate);","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"        taskList.add(newTask);","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"        respond(taskList, ui, newTask);","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"    boolean isExit() {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"        return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":26}},{"path":"src/main/java/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"public class AddTodoCommand extends AddCommand {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"    AddTodoCommand(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"    void execute(TaskList taskList, Ui ui) throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"        /*","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"        TODO:","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"            1. Ensure that there are no duplicates","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"         */","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"        Task newTask \u003d new Todo(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"        taskList.add(newTask);","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"        respond(taskList, ui, newTask);","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    boolean isExit() {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"        return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":22}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"    String text;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"    Command(String text) {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"        this.text \u003d text;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"    abstract void execute(TaskList taskList, Ui ui) throws MikeException;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"    abstract boolean isExit();","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":12}},{"path":"src/main/java/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"import java.util.InputMismatchException;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"public class CommandParser {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"    private final String source;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"    private final String[] commands;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"    private final int numberOfCommands;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"    CommandParser(String source) {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"        this.source \u003d source;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"        this.commands \u003d source.split(\" \", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"        this.numberOfCommands \u003d commands.length;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"    public Command parse() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"        String primaryCommand \u003d commands[0];","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"        switch (primaryCommand) {","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"            case \"bye\": return parseBy();","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"            case \"list\": return parseList();","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"            case \"mark\": return parseMark();","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"            case \"unmark\": return parseUnmark();","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"            case \"todo\": return parseTodo();","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"            case \"deadline\": return parseDeadline();","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"            case \"event\": return parseEvent();","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"            case \"delete\": return parseDelete();","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"            default: {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"                throw new MikeException(\"That is the weirdest thing you\u0027ve ever said.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"    private Command parseBy() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"        if (numberOfCommands !\u003d 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"Usage: bye\");","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"        return new ExitCommand();","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"    private Command parseList() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"        if (numberOfCommands !\u003d 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"Usage: list\");","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"biinnnggggg"},"content":"        return new ListCommand();","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"biinnnggggg"},"content":"    private Command parseMark() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"biinnnggggg"},"content":"        if (numberOfCommands !\u003d 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"Usage: mark [number]\");","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"biinnnggggg"},"content":"        String argument \u003d commands[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"biinnnggggg"},"content":"            int taskNumber \u003d Integer.parseInt(argument);","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"biinnnggggg"},"content":"            return new MarkCommand(taskNumber);","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"biinnnggggg"},"content":"        } catch(InputMismatchException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"biinnnggggg"},"content":"            String errorMessage \u003d","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"biinnnggggg"},"content":"                    \"One, two, three, four, get the kid back through the door!\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"biinnnggggg"},"content":"                            String.format(\"\u0027%s\u0027 is not an integer Sulley...\", argument);","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(errorMessage);","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"biinnnggggg"},"content":"    private Command parseUnmark() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"biinnnggggg"},"content":"        if (numberOfCommands !\u003d 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"Usage: unmark [number]\");","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"biinnnggggg"},"content":"        String argument \u003d commands[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"biinnnggggg"},"content":"            int taskNumber \u003d Integer.parseInt(argument);","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"biinnnggggg"},"content":"            return new UnmarkCommand(taskNumber);","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"biinnnggggg"},"content":"        } catch (InputMismatchException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"biinnnggggg"},"content":"            String errorMessage \u003d","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"biinnnggggg"},"content":"                    \"One, two, three, four, get the kid back through the door!\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"biinnnggggg"},"content":"                            String.format(\"\u0027%s\u0027 is not an integer Sulley...\", argument);","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(errorMessage);","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"biinnnggggg"},"content":"    private Command parseTodo() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"biinnnggggg"},"content":"        if (numberOfCommands !\u003d 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"The description is missing.\\nUsage: todo [description]\");","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"biinnnggggg"},"content":"        String taskDescription \u003d commands[1].strip();","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"biinnnggggg"},"content":"        if (taskDescription.isBlank()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"The description is missing.\\nUsage: todo [description]\");","lastModifiedDate":"2024-01-25"},{"lineNumber":89,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"biinnnggggg"},"content":"        return new AddTodoCommand(taskDescription);","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"biinnnggggg"},"content":"    private Command parseDeadline() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"biinnnggggg"},"content":"        if (numberOfCommands !\u003d 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"Usage: deadline [description] /by [date]\");","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"biinnnggggg"},"content":"        String arguments \u003d commands[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"biinnnggggg"},"content":"        String[] descriptionAndDate \u003d arguments.split(\"/by\", 3);","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"biinnnggggg"},"content":"        int numberOfArguments \u003d descriptionAndDate.length;","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"biinnnggggg"},"content":"        if (numberOfArguments !\u003d 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":104,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"Usage: deadline [description] /by [date]\");","lastModifiedDate":"2024-01-25"},{"lineNumber":105,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":106,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":107,"author":{"gitId":"biinnnggggg"},"content":"        String description \u003d descriptionAndDate[0].strip();","lastModifiedDate":"2024-01-25"},{"lineNumber":108,"author":{"gitId":"biinnnggggg"},"content":"        String byDate \u003d descriptionAndDate[1].strip();","lastModifiedDate":"2024-01-25"},{"lineNumber":109,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":110,"author":{"gitId":"biinnnggggg"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":111,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"The description is missing Sull.\\nUsage: deadline [description] /by [date]\");","lastModifiedDate":"2024-01-25"},{"lineNumber":112,"author":{"gitId":"biinnnggggg"},"content":"        } else if (byDate.isBlank()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":113,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"The date is missing Sull.\\nUsage: deadline [description] /by [date]\");","lastModifiedDate":"2024-01-25"},{"lineNumber":114,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":115,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":116,"author":{"gitId":"biinnnggggg"},"content":"        return new AddDeadlineCommand(description, byDate);","lastModifiedDate":"2024-01-25"},{"lineNumber":117,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":118,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":119,"author":{"gitId":"biinnnggggg"},"content":"    private Command parseEvent() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":120,"author":{"gitId":"biinnnggggg"},"content":"        if (numberOfCommands !\u003d 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":121,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"Usage: event [description] /from [date] /to [date]\");","lastModifiedDate":"2024-01-25"},{"lineNumber":122,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":123,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":124,"author":{"gitId":"biinnnggggg"},"content":"        String arguments \u003d commands[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":125,"author":{"gitId":"biinnnggggg"},"content":"        String[] descriptionAndDates \u003d arguments.split(\"/from\", 3);","lastModifiedDate":"2024-01-25"},{"lineNumber":126,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":127,"author":{"gitId":"biinnnggggg"},"content":"        if (descriptionAndDates.length !\u003d 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":128,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"Usage: event [description] /from [date] /to [date]\");","lastModifiedDate":"2024-01-25"},{"lineNumber":129,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":130,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":131,"author":{"gitId":"biinnnggggg"},"content":"        String description \u003d descriptionAndDates[0].strip();","lastModifiedDate":"2024-01-25"},{"lineNumber":132,"author":{"gitId":"biinnnggggg"},"content":"        String dates \u003d descriptionAndDates[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":133,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":134,"author":{"gitId":"biinnnggggg"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":135,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"The description is missing Sull.\\nUsage: event [description] /from [date] /to [date]\");","lastModifiedDate":"2024-01-25"},{"lineNumber":136,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":137,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":138,"author":{"gitId":"biinnnggggg"},"content":"        String[] fromAndToDates \u003d dates.split(\"/to\", 3);","lastModifiedDate":"2024-01-25"},{"lineNumber":139,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":140,"author":{"gitId":"biinnnggggg"},"content":"        if (fromAndToDates.length !\u003d 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":141,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"Usage: event [description] /from [date] /to [date]\");","lastModifiedDate":"2024-01-25"},{"lineNumber":142,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":143,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":144,"author":{"gitId":"biinnnggggg"},"content":"        String fromDate \u003d fromAndToDates[0].strip();","lastModifiedDate":"2024-01-25"},{"lineNumber":145,"author":{"gitId":"biinnnggggg"},"content":"        String toDate \u003d fromAndToDates[1].strip();","lastModifiedDate":"2024-01-25"},{"lineNumber":146,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":147,"author":{"gitId":"biinnnggggg"},"content":"        if (fromDate.isBlank() || toDate.isBlank()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":148,"author":{"gitId":"biinnnggggg"},"content":"            String errorMessage \u003d \"Required argument missing in \u0027/from [date]\u0027.\\nUsage: event [description] /from [date] /to [date]\";","lastModifiedDate":"2024-01-25"},{"lineNumber":149,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(errorMessage);","lastModifiedDate":"2024-01-25"},{"lineNumber":150,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":151,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":152,"author":{"gitId":"biinnnggggg"},"content":"        return new AddEventCommand(description, fromDate, toDate);","lastModifiedDate":"2024-01-25"},{"lineNumber":153,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":154,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":155,"author":{"gitId":"biinnnggggg"},"content":"    private Command parseDelete() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":156,"author":{"gitId":"biinnnggggg"},"content":"        if (numberOfCommands !\u003d 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":157,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"Usage: delete [number]\");","lastModifiedDate":"2024-01-25"},{"lineNumber":158,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":159,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":160,"author":{"gitId":"biinnnggggg"},"content":"        String argument \u003d commands[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":161,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":162,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":163,"author":{"gitId":"biinnnggggg"},"content":"            int taskNumber \u003d Integer.parseInt(argument);","lastModifiedDate":"2024-01-25"},{"lineNumber":164,"author":{"gitId":"biinnnggggg"},"content":"            return new DeleteCommand(taskNumber);","lastModifiedDate":"2024-01-25"},{"lineNumber":165,"author":{"gitId":"biinnnggggg"},"content":"        } catch(InputMismatchException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":166,"author":{"gitId":"biinnnggggg"},"content":"            String errorMessage \u003d","lastModifiedDate":"2024-01-25"},{"lineNumber":167,"author":{"gitId":"biinnnggggg"},"content":"                    \"One, two, three, four, get the kid back through the door!\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":168,"author":{"gitId":"biinnnggggg"},"content":"                            String.format(\"\u0027%s\u0027 is not an integer Sulley...\", argument);","lastModifiedDate":"2024-01-25"},{"lineNumber":169,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(errorMessage);","lastModifiedDate":"2024-01-25"},{"lineNumber":170,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":171,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":172,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":172}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"    protected String by;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"    Deadline(String description, String by) {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"        return \"[D]\" + super.toString() + \"\";","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":13}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"    private final int taskNumber;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"    DeleteCommand(int taskNumber) {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"        super(\"\");","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"    void execute(TaskList taskList, Ui ui) throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"        int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"There are no tasks to remove.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"        } else if (taskIndex \u003e\u003d taskList.size() || taskIndex \u003c 0) {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"That task doesn\u0027t exist. Please enter a number in the range 1-\" + taskList.size() + \".\");","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"        Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"        taskList.remove(taskIndex);","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"        String message \u003d","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"                \"Noted! I\u0027ve removed this task:\\n  \" + ","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"                task + \"\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"                + \"Now you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"        ui.display(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"    boolean isExit() {","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"        return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":30}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"    protected String from;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"    protected String to;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"    Event(String description, String from, String to) {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":15}},{"path":"src/main/java/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"    ExitCommand() {","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"        super(\"\");","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"    void execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"        ui.farewell();","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"    boolean isExit() {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"        return true;","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":15}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"    ListCommand() {","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"        super(\"\" );","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"    void execute(TaskList taskList, Ui ui) throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"You have no more tasks Sulley...\");","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"        ui.display(\"You and I are a team.\\nHere is the task list:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"        ui.display(taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"    boolean isExit() {","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"        return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":19}},{"path":"src/main/java/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"    private final int taskNumber;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"    MarkCommand(int taskNumber) {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"        super(\"\");","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"    void execute(TaskList taskList, Ui ui) throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"        int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"There are no tasks to mark. Please add a task first.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"        } else if (taskIndex \u003e\u003d taskList.size() || taskIndex \u003c 0) {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"That\u0027s suspicious. Please enter a number in the range 1-\" + taskList.size() + \".\");","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"        Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"        task.markAsDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"        String message \u003d \"Nice! I\u0027ve marked this task as done:\\n  \" + task;","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"        ui.display(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"        /*","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"           TODO:","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"            1. Check that task is or is not done.","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"        */","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"    boolean isExit() {","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"        return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":30}},{"path":"src/main/java/Mike.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"import java.util.InputMismatchException;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"public class Mike {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"    private final Ui ui;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"    Mike() {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"    public void run() {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"        this.ui.displayWelcome();","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"        boolean exitSeen \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"        while (!exitSeen) {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"            try {","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"                String userInput \u003d ui.scanInput();","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"                ui.displayLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"                Command command \u003d new CommandParser(userInput).parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"                command.execute(taskList, ui);","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"                if (command.isExit()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"                    exitSeen \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"            } catch (MikeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"                ui.displayError(e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"            } finally {","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"                ui.displayLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"     * Main method that runs the program.","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"     * @param args n/a","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"        new Mike().run();","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"biinnnggggg":39}},{"path":"src/main/java/MikeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"public class MikeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"    MikeException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"    protected final String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"    Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"        return description;","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"biinnnggggg":29}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"        return String.join(\"\\n\", IntStream.range(0, this.size())","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"                .boxed()","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"                .map(i -\u003e {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"                    Task task \u003d this.get(i);","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"                    int index \u003d i + 1;","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"                    return String.format(\"%d.%s\", index, task.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"                })","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"                .toArray(String[]::new)","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"        );","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"biinnnggggg":17}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"    Todo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":10}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"public class Ui {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"    Ui() {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"    public String scanInput() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"            return scanner.nextLine().strip();","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"That is the weirdest thing you\u0027ve ever said.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"    public void displayError(String errorMessage) {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"        display(errorMessage);","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"    public void displayWelcome() {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"        displayLogo();","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"        displayGreeting();","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"        displayLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"     * Displays a farewell message with Wazowski pizazz.","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"    public void farewell() {","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"        String farewell \u003d","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"                \" Where are you going? We\u0027ll talk.\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"                        \" We\u0027ll have a latte.\";","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"        display(farewell);","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"     * Prints the Wazowski logo as ASCII art.","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"    private void displayLogo() {","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"biinnnggggg"},"content":"        String logo \u003d","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"                \"                   .\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"biinnnggggg"},"content":"                \"          \u0026#  #*\u0026/,,(@%*. (#\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"biinnnggggg"},"content":"                \"           %#((,.      #%,*,\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"biinnnggggg"},"content":"                \"         %%%(/,.. *(     /,.**\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"biinnnggggg"},"content":"                \"      .%%%%#/**,%(@@\u0026@    /.,,/\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"biinnnggggg"},"content":"                \"      %%%%#(((/*(#*(%\u0026    ..,,,*(\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"biinnnggggg"},"content":"                \"    *#%%%##(/,#(/**,,...,...,,,**/\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"biinnnggggg"},"content":"                \"   .#%%%%%##(((//#(//*......,,,**//\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"biinnnggggg"},"content":"                \"   \u0026#%%%%%%###(///*,,..,,,,,,,***/#*\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"biinnnggggg"},"content":"                \"   \u0026#%%%%%%#####@@@@@@(,,**,****/(#*\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"biinnnggggg"},"content":"                \"  *\u0026%#%%\u0026\u0026\u0026%%%@@@@@@@@@@\u0026**/////(.\u0026/*\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"biinnnggggg"},"content":"                \"  #\u0026, #%\u0026\u0026\u0026\u0026\u0026\u0026%(((/*****((((((##.  #(\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"biinnnggggg"},"content":"                \"  ##    #\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026%%%%%%###%%(    (*\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"biinnnggggg"},"content":"                \"  .#/     /%%%%%%%%%%%%%%%%#       //\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"biinnnggggg"},"content":"                \"   #(     /##            *#,       (/\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"biinnnggggg"},"content":"                \"   %*     /#(             #,       //\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"biinnnggggg"},"content":"                \"   %(/.    %(            .%\u0026      //*/\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"biinnnggggg"},"content":"                \"   %/,\u0026,   \u0026(            #%/      (#//,\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"biinnnggggg"},"content":"                \"   /(*     ##*           #%       \u0026*#%\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"biinnnggggg"},"content":"                \"     @/@*  (#*.          #(.      /%%\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"biinnnggggg"},"content":"                \"      (/(/##(...........##(//\u0026#(\u0026/.\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"biinnnggggg"},"content":"                \"     (@%(\u0026@@,#,..........,*@@\u0026\u0026@\u0026*,\\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"biinnnggggg"},"content":"        display(logo);","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"biinnnggggg"},"content":"    private void displayGreeting() {","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"biinnnggggg"},"content":"        String greeting \u003d","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"biinnnggggg"},"content":"                \" Hello! I\u0027m Mike WAZOWSKI.\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"biinnnggggg"},"content":"                \" What can I do for you?\";","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"biinnnggggg"},"content":"        display(greeting);","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"biinnnggggg"},"content":"    public void displayLine() {","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"biinnnggggg"},"content":"        String horizontalLine \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"biinnnggggg"},"content":"        display(horizontalLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"biinnnggggg"},"content":"    public void display(Object object) {","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"biinnnggggg"},"content":"        System.out.println(object);","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":81}},{"path":"src/main/java/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"    private final int taskNumber;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"    UnmarkCommand(int taskNumber) {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"        super(\"\");","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"    void execute(TaskList taskList, Ui ui) throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"        int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"There are no tasks to mark. Please add a task first.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"        } else if (taskIndex \u003e\u003d taskList.size() || taskIndex \u003c 0) {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"That\u0027s suspicious. Please enter a number in the range 1-\" + taskList.size() + \".\");","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"        Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"        task.markAsNotDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"        String message \u003d \"I\u0027ve marked this task as not done:\\n  \" + task;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"        ui.display(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"        /*","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"           TODO:","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"            1. Check that task is or is not done.","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"        */","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"    boolean isExit() {","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"        return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"todo read book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"deadline return book /by friday","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"random text","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"event book club /from saturday 5pm /to 7pm","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"mark 4","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"event /from saturday 5pm /to 7pm","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"event book club /from saturday 5pm /from /to 7pm","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"event book club /to saturday 5pm /from 7pm","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"java -classpath ..\\bin Mike \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"biinnnggggg":1,"-":20}}]
