[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yuechen2001"},"content":"# Jimmy project template","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"yuechen2001"},"content":"3. After that, locate the `src/main/java/Jimmy.java` file, right-click it, and choose `Run Jimmy.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yuechen2001":2,"-":22}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuechen2001"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yuechen2001"},"content":"    private final String deadline;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yuechen2001"},"content":"    public Deadline(String taskName, String deadline) {","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yuechen2001"},"content":"        super(taskName);","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yuechen2001"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yuechen2001"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yuechen2001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yuechen2001"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.deadline + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yuechen2001"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yuechen2001":12}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuechen2001"},"content":"public class Event extends Task{","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yuechen2001"},"content":"    private final String start;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yuechen2001"},"content":"    private final String end;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yuechen2001"},"content":"    public Event(String taskName, String start, String end) {","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yuechen2001"},"content":"        super(taskName);","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yuechen2001"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yuechen2001"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yuechen2001"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yuechen2001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yuechen2001"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yuechen2001"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yuechen2001":15}},{"path":"src/main/java/Jimmy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuechen2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"yuechen2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"yuechen2001"},"content":"public class Jimmy {","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yuechen2001"},"content":"    private static final ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yuechen2001"},"content":"    private static void greetUser() {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(\"Hello! I\u0027m Jimmy\\nWhat can I do for you?\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yuechen2001"},"content":"    private static void createNewTask(String instruction, String details) throws JimmyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"yuechen2001"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yuechen2001"},"content":"        switch (instruction) {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yuechen2001"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yuechen2001"},"content":"                newTask \u003d createNewTodo(details);","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"yuechen2001"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yuechen2001"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yuechen2001"},"content":"                newTask \u003d createNewDeadline(details);","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"yuechen2001"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yuechen2001"},"content":"            case \"event\":","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yuechen2001"},"content":"                newTask \u003d createNewEvent(details);","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"yuechen2001"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yuechen2001"},"content":"        list.add(newTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(newTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(generateListCounter() + \"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"yuechen2001"},"content":"    private static Todo createNewTodo(String details) {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"yuechen2001"},"content":"        return new Todo(details);","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"yuechen2001"},"content":"    private static Deadline createNewDeadline(String details) throws JimmyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"yuechen2001"},"content":"        if (!details.contains(\" /by \")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"Sorry! \" +","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"yuechen2001"},"content":"                    \"Please use the correct format when creating a new deadline.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"yuechen2001"},"content":"        String[] deadlineDetails \u003d details.split(\" /by \", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"yuechen2001"},"content":"        String deadlineName \u003d deadlineDetails[0], deadline \u003d deadlineDetails[1];","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"yuechen2001"},"content":"        if (deadlineName.length() \u003d\u003d 0 || deadline.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"Please check that you have entered a deadline name and a deadline.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"yuechen2001"},"content":"        return new Deadline(deadlineName, deadline);","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"yuechen2001"},"content":"    private static Event createNewEvent(String details) throws JimmyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"yuechen2001"},"content":"        if (!details.contains(\" /from \") || !details.contains(\" /to \")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"Sorry! \" +","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"yuechen2001"},"content":"                    \"Please use the correct format when creating a new event.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"yuechen2001"},"content":"        String[] eventDetails \u003d details.split(\" /from | /to \");","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"yuechen2001"},"content":"        String eventName \u003d eventDetails[0], start \u003d eventDetails[1], end \u003d eventDetails[2];","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"yuechen2001"},"content":"        if (eventName.length() \u003d\u003d 0 || start.length() \u003d\u003d 0 || end.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"Please check that you have entered a event name, a start time and an end time.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"yuechen2001"},"content":"        return new Event(eventName, start, end);","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"yuechen2001"},"content":"    private static String generateListCounter() {","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"yuechen2001"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"yuechen2001"},"content":"            return \"You have no tasks, create some now!\";","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"yuechen2001"},"content":"        } else if (list.size() \u003d\u003d 1) {","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"yuechen2001"},"content":"            return \"Now you have 1 task in the list.\";","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"yuechen2001"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"yuechen2001"},"content":"            return \"Now you have \" + list.size() + \" tasks in the list.\";","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"yuechen2001"},"content":"    private static void deleteTask(String taskIndex) throws JimmyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"yuechen2001"},"content":"        int deleteTask;","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"yuechen2001"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"yuechen2001"},"content":"            deleteTask \u003d Integer.parseInt(taskIndex) - 1;","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"yuechen2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"Please only enter an integer.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"yuechen2001"},"content":"        if (deleteTask \u003c 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"Please only enter a positive integer.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"yuechen2001"},"content":"        } else if (deleteTask \u003e\u003d getListSize()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"The task you are looking for does not exist.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"yuechen2001"},"content":"        Task deletedTask \u003d list.remove(deleteTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(deletedTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(generateListCounter() + \"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"yuechen2001"},"content":"    private static void displayTasks() {","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"yuechen2001"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"yuechen2001"},"content":"            if (i \u003d\u003d list.size() - 1) {","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"yuechen2001"},"content":"                System.out.println((i + 1) + \".\" + list.get(i).toString() + \"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"yuechen2001"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"yuechen2001"},"content":"                System.out.println((i + 1) + \".\" + list.get(i).toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"yuechen2001"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"yuechen2001"},"content":"    private static void markTaskComplete(String taskIndex) throws JimmyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"yuechen2001"},"content":"        int completeTask;","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"yuechen2001"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"yuechen2001"},"content":"            completeTask \u003d Integer.parseInt(taskIndex) - 1;","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"yuechen2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"Please only enter an integer.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"yuechen2001"},"content":"        if (completeTask \u003c 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"Please only enter a positive integer.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"yuechen2001"},"content":"        } else if (completeTask \u003e\u003d getListSize()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"The task you are looking for does not exist.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"yuechen2001"},"content":"        Task curr \u003d list.get(completeTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"yuechen2001"},"content":"        curr.markAsComplete();","lastModifiedDate":"2024-01-28"},{"lineNumber":116,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"yuechen2001"},"content":"    private static void markTaskIncomplete(String taskIndex) throws JimmyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"yuechen2001"},"content":"        int incompleteTask;","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"yuechen2001"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"yuechen2001"},"content":"            incompleteTask \u003d Integer.parseInt(taskIndex) - 1;","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"yuechen2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"Please only enter an integer.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"yuechen2001"},"content":"        if (incompleteTask \u003c 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"Please only enter a positive integer.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"yuechen2001"},"content":"        } else if (incompleteTask \u003e\u003d getListSize()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"The task you are looking for does not exist.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"yuechen2001"},"content":"        Task curr \u003d list.get(incompleteTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"yuechen2001"},"content":"        curr.markAsIncomplete();","lastModifiedDate":"2024-01-28"},{"lineNumber":133,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":134,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":135,"author":{"gitId":"yuechen2001"},"content":"    private static int getListSize() {","lastModifiedDate":"2024-01-29"},{"lineNumber":136,"author":{"gitId":"yuechen2001"},"content":"        return list.size();","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"yuechen2001"},"content":"    private static void exit() {","lastModifiedDate":"2024-01-29"},{"lineNumber":140,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":141,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":142,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"yuechen2001"},"content":"    public static void main(String[] args) throws JimmyException{","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"yuechen2001"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-29"},{"lineNumber":145,"author":{"gitId":"yuechen2001"},"content":"        greetUser();","lastModifiedDate":"2024-01-29"},{"lineNumber":146,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":147,"author":{"gitId":"yuechen2001"},"content":"        while (true) {","lastModifiedDate":"2024-01-29"},{"lineNumber":148,"author":{"gitId":"yuechen2001"},"content":"            String userInput \u003d sc.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":149,"author":{"gitId":"yuechen2001"},"content":"            String[] inputArray \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":150,"author":{"gitId":"yuechen2001"},"content":"            String instruction;","lastModifiedDate":"2024-01-29"},{"lineNumber":151,"author":{"gitId":"yuechen2001"},"content":"            String details \u003d \"\";","lastModifiedDate":"2024-01-29"},{"lineNumber":152,"author":{"gitId":"yuechen2001"},"content":"            if (inputArray.length \u003e 1) {","lastModifiedDate":"2024-01-29"},{"lineNumber":153,"author":{"gitId":"yuechen2001"},"content":"                instruction \u003d inputArray[0];","lastModifiedDate":"2024-01-29"},{"lineNumber":154,"author":{"gitId":"yuechen2001"},"content":"                details \u003d inputArray[1];","lastModifiedDate":"2024-01-29"},{"lineNumber":155,"author":{"gitId":"yuechen2001"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":156,"author":{"gitId":"yuechen2001"},"content":"                instruction \u003d inputArray[0];","lastModifiedDate":"2024-01-29"},{"lineNumber":157,"author":{"gitId":"yuechen2001"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":158,"author":{"gitId":"yuechen2001"},"content":"            switch (instruction) {","lastModifiedDate":"2024-01-29"},{"lineNumber":159,"author":{"gitId":"yuechen2001"},"content":"                case \"bye\":","lastModifiedDate":"2024-01-29"},{"lineNumber":160,"author":{"gitId":"yuechen2001"},"content":"                    exit();","lastModifiedDate":"2024-01-29"},{"lineNumber":161,"author":{"gitId":"yuechen2001"},"content":"                    return;","lastModifiedDate":"2024-01-29"},{"lineNumber":162,"author":{"gitId":"yuechen2001"},"content":"                case \"list\":","lastModifiedDate":"2024-01-29"},{"lineNumber":163,"author":{"gitId":"yuechen2001"},"content":"                    displayTasks();","lastModifiedDate":"2024-01-29"},{"lineNumber":164,"author":{"gitId":"yuechen2001"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":165,"author":{"gitId":"yuechen2001"},"content":"                case \"mark\":","lastModifiedDate":"2024-01-29"},{"lineNumber":166,"author":{"gitId":"yuechen2001"},"content":"                    markTaskComplete(details);","lastModifiedDate":"2024-01-29"},{"lineNumber":167,"author":{"gitId":"yuechen2001"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":168,"author":{"gitId":"yuechen2001"},"content":"                case \"unmark\":","lastModifiedDate":"2024-01-29"},{"lineNumber":169,"author":{"gitId":"yuechen2001"},"content":"                    markTaskIncomplete(details);","lastModifiedDate":"2024-01-29"},{"lineNumber":170,"author":{"gitId":"yuechen2001"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":171,"author":{"gitId":"yuechen2001"},"content":"                case \"delete\":","lastModifiedDate":"2024-01-29"},{"lineNumber":172,"author":{"gitId":"yuechen2001"},"content":"                    deleteTask(details);","lastModifiedDate":"2024-01-29"},{"lineNumber":173,"author":{"gitId":"yuechen2001"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":174,"author":{"gitId":"yuechen2001"},"content":"                default:","lastModifiedDate":"2024-01-29"},{"lineNumber":175,"author":{"gitId":"yuechen2001"},"content":"                    createNewTask(instruction, details);","lastModifiedDate":"2024-01-29"},{"lineNumber":176,"author":{"gitId":"yuechen2001"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":177,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":178,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":179,"author":{"gitId":"yuechen2001"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yuechen2001":179}},{"path":"src/main/java/JimmyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuechen2001"},"content":"public class JimmyException extends Exception{","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"yuechen2001"},"content":"    public JimmyException(String error) {","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"yuechen2001"},"content":"        super(error);","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"yuechen2001"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"yuechen2001":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuechen2001"},"content":"abstract public class Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yuechen2001"},"content":"    protected final String desc;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yuechen2001"},"content":"    private boolean isCompleted;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yuechen2001"},"content":"    public Task(String taskName) {","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"yuechen2001"},"content":"        this.desc \u003d taskName;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yuechen2001"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yuechen2001"},"content":"    public void markAsComplete() {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yuechen2001"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(this.toString() + \"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yuechen2001"},"content":"    public void markAsIncomplete() {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yuechen2001"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(this.toString() + \"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yuechen2001"},"content":"    public String getStatus() {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yuechen2001"},"content":"        return this.isCompleted","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yuechen2001"},"content":"                ? \"X\"","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yuechen2001"},"content":"                : \" \";","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yuechen2001"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yuechen2001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"yuechen2001"},"content":"        return \"[\" + this.getStatus() + \"] \" + this.desc;","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"yuechen2001"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yuechen2001":32}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuechen2001"},"content":"public class Todo extends Task{","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yuechen2001"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yuechen2001"},"content":"        super(taskName);","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yuechen2001"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yuechen2001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yuechen2001"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yuechen2001"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yuechen2001":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yuechen2001"},"content":"todo eat breakfast","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yuechen2001"},"content":"todo go for lunch","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yuechen2001"},"content":"mark 1","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yuechen2001"},"content":"mark 2","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yuechen2001"},"content":"list","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yuechen2001"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yuechen2001"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yuechen2001"},"content":"mark 3","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yuechen2001"},"content":"unmark 3","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yuechen2001"},"content":"list","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yuechen2001"},"content":"delete 1","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"yuechen2001"},"content":"list","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"yuechen2001"},"content":"bye","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yuechen2001":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"yuechen2001"},"content":"java -classpath ..\\bin Jimmy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yuechen2001":1,"-":20}}]
