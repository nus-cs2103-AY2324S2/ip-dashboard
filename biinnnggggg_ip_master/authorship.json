[{"path":"src/main/java/mike/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike;/*","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"TODO:","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"    1. Write comments to document the code.","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import mike.command.*;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"import java.util.List;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"class CommandParser {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"    private final List\u003cToken\u003e tokens;","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"    private int current;","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"    CommandParser(List\u003cToken\u003e tokens) {","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"        this.tokens \u003d tokens;","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"        this.current \u003d 0;","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"     * Parses the token list to generate a Command object which is returned.","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"     * @return Command that can be executed.","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"     * @throws MikeException If there is no command input or the command is not recognized.","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"    public Command parse() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"        Token commandToken \u003d advance();","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"        switch (commandToken.getType()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"        case EXIT:","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"            return parseExit();","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"        case LIST:","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"            return parseList();","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"        case MARK:","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"            return parseMark();","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"        case UNMARK:","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"            return parseUnmark();","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"        case TODO:","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"            return parseTodo();","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"        case DEADLINE:","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"            return parseDeadline();","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"        case EVENT:","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"            return parseEvent();","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"biinnnggggg"},"content":"        case DELETE:","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"            return parseDelete();","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"biinnnggggg"},"content":"        case EOC:","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"Say something.\");","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"biinnnggggg"},"content":"        default:","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"biinnnggggg"},"content":"            String errorMessage \u003d \"\u0027\" + commandToken.getText() + \"\u0027 is not recognized as a command.\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"biinnnggggg"},"content":"                    + \"That is the weirdest thing you\u0027ve ever said.\";","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(errorMessage);","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"biinnnggggg"},"content":"    private Command parseExit() throws MikeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.EOC, \"Usage: bye\");","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"biinnnggggg"},"content":"        return new ExitCommand();","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"biinnnggggg"},"content":"    private Command parseList() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.EOC, \"Usage: list\");","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"biinnnggggg"},"content":"        return new ListCommand();","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"biinnnggggg"},"content":"    private Command parseMark() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"biinnnggggg"},"content":"        String usage \u003d \"Usage: mark [number]\";","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.LITERAL, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"biinnnggggg"},"content":"        String argument \u003d previousToken().getText();","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.EOC, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":68,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"biinnnggggg"},"content":"            int taskNumber \u003d Integer.parseInt(argument);","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"biinnnggggg"},"content":"            return new MarkCommand(taskNumber);","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"biinnnggggg"},"content":"        } catch(NumberFormatException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":73,"author":{"gitId":"biinnnggggg"},"content":"            String errorMessage \u003d \"One, two, three, four, get the kid back through the door!\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":74,"author":{"gitId":"biinnnggggg"},"content":"                    \"\u0027\" + argument + \"\u0027 is not an integer Sulley...\";","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(errorMessage);","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"biinnnggggg"},"content":"    private Command parseUnmark() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"biinnnggggg"},"content":"        String usage \u003d\"Usage: unmark [number]\";","lastModifiedDate":"2024-01-26"},{"lineNumber":81,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":82,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.LITERAL, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":83,"author":{"gitId":"biinnnggggg"},"content":"        String argument \u003d previousToken().getText();","lastModifiedDate":"2024-01-26"},{"lineNumber":84,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":85,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.EOC, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":86,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"biinnnggggg"},"content":"            int taskNumber \u003d Integer.parseInt(argument);","lastModifiedDate":"2024-01-25"},{"lineNumber":89,"author":{"gitId":"biinnnggggg"},"content":"            return new UnmarkCommand(taskNumber);","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"biinnnggggg"},"content":"        } catch(NumberFormatException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":91,"author":{"gitId":"biinnnggggg"},"content":"            String errorMessage \u003d \"One, two, three, four, get the kid back through the door!\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":92,"author":{"gitId":"biinnnggggg"},"content":"                    \"\u0027\" + argument + \"\u0027 is not an integer Sulley...\";","lastModifiedDate":"2024-01-26"},{"lineNumber":93,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(errorMessage);","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"biinnnggggg"},"content":"    private Command parseTodo() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"biinnnggggg"},"content":"        String usage \u003d \"Usage: todo [description]\";","lastModifiedDate":"2024-01-26"},{"lineNumber":99,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.LITERAL, \"Description missing.\\n\" + usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":101,"author":{"gitId":"biinnnggggg"},"content":"        String description \u003d previousToken().getText().strip();","lastModifiedDate":"2024-01-26"},{"lineNumber":102,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.EOC, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":104,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":105,"author":{"gitId":"biinnnggggg"},"content":"        return new AddTodoCommand(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":106,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":107,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":108,"author":{"gitId":"biinnnggggg"},"content":"    private Command parseDeadline() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":109,"author":{"gitId":"biinnnggggg"},"content":"        String usage \u003d \"Usage: deadline [description] /by [date]\";","lastModifiedDate":"2024-01-26"},{"lineNumber":110,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":111,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.LITERAL, \"Description missing.\\n\" + usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":112,"author":{"gitId":"biinnnggggg"},"content":"        String description \u003d previousToken().getText().strip();","lastModifiedDate":"2024-01-26"},{"lineNumber":113,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":114,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.FORWARD_DASH, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":115,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.PARAM, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":116,"author":{"gitId":"biinnnggggg"},"content":"        Token paramToken \u003d previousToken();","lastModifiedDate":"2024-01-26"},{"lineNumber":117,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":118,"author":{"gitId":"biinnnggggg"},"content":"        if (!paramToken.getText().equals(\"by\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":119,"author":{"gitId":"biinnnggggg"},"content":"            throw error(usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":120,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":121,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":122,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.LITERAL, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":123,"author":{"gitId":"biinnnggggg"},"content":"        String deadline \u003d previousToken().getText().strip();","lastModifiedDate":"2024-01-26"},{"lineNumber":124,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":125,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.EOC, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":126,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":127,"author":{"gitId":"biinnnggggg"},"content":"        return new AddDeadlineCommand(description, deadline);","lastModifiedDate":"2024-01-26"},{"lineNumber":128,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":129,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":130,"author":{"gitId":"biinnnggggg"},"content":"    private Command parseEvent() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":131,"author":{"gitId":"biinnnggggg"},"content":"        String usage \u003d \"Usage: event [description] /from [date] /to [date]\";","lastModifiedDate":"2024-01-26"},{"lineNumber":132,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":133,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.LITERAL, \"Description missing.\\n\" + usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":134,"author":{"gitId":"biinnnggggg"},"content":"        String description \u003d previousToken().getText().strip();","lastModifiedDate":"2024-01-26"},{"lineNumber":135,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":136,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.FORWARD_DASH, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":137,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.PARAM, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":138,"author":{"gitId":"biinnnggggg"},"content":"        Token paramToken \u003d previousToken();","lastModifiedDate":"2024-01-26"},{"lineNumber":139,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":140,"author":{"gitId":"biinnnggggg"},"content":"        if (!paramToken.getText().equals(\"from\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":141,"author":{"gitId":"biinnnggggg"},"content":"            throw error(usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":142,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":143,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":144,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.LITERAL, \"Start date missing.\\n\" + usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":145,"author":{"gitId":"biinnnggggg"},"content":"        String startDate \u003d previousToken().getText().strip();","lastModifiedDate":"2024-01-26"},{"lineNumber":146,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":147,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.FORWARD_DASH, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":148,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.PARAM, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":149,"author":{"gitId":"biinnnggggg"},"content":"        paramToken \u003d previousToken();","lastModifiedDate":"2024-01-26"},{"lineNumber":150,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":151,"author":{"gitId":"biinnnggggg"},"content":"        if (!paramToken.getText().equals(\"to\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":152,"author":{"gitId":"biinnnggggg"},"content":"            throw error(usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":153,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":154,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":155,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.LITERAL, \"End date missing.\\n\" + usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":156,"author":{"gitId":"biinnnggggg"},"content":"        String endDate \u003d previousToken().getText().strip();","lastModifiedDate":"2024-01-26"},{"lineNumber":157,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":158,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.EOC, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":159,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":160,"author":{"gitId":"biinnnggggg"},"content":"        return new AddEventCommand(description, startDate, endDate);","lastModifiedDate":"2024-01-26"},{"lineNumber":161,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":162,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":163,"author":{"gitId":"biinnnggggg"},"content":"    private Command parseDelete() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":164,"author":{"gitId":"biinnnggggg"},"content":"        String usage \u003d \"Usage: delete [number]\";","lastModifiedDate":"2024-01-26"},{"lineNumber":165,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":166,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.LITERAL, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":167,"author":{"gitId":"biinnnggggg"},"content":"        String argument \u003d previousToken().getText();","lastModifiedDate":"2024-01-26"},{"lineNumber":168,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":169,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.EOC, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":170,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":171,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":172,"author":{"gitId":"biinnnggggg"},"content":"            int taskNumber \u003d Integer.parseInt(argument);","lastModifiedDate":"2024-01-25"},{"lineNumber":173,"author":{"gitId":"biinnnggggg"},"content":"            return new DeleteCommand(taskNumber);","lastModifiedDate":"2024-01-25"},{"lineNumber":174,"author":{"gitId":"biinnnggggg"},"content":"        } catch(NumberFormatException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":175,"author":{"gitId":"biinnnggggg"},"content":"            String errorMessage \u003d \"One, two, three, four, get the kid back through the door!\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":176,"author":{"gitId":"biinnnggggg"},"content":"                    \"\u0027\" + argument + \"\u0027 is not an integer Sulley...\";","lastModifiedDate":"2024-01-26"},{"lineNumber":177,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(errorMessage);","lastModifiedDate":"2024-01-25"},{"lineNumber":178,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":179,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":180,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":181,"author":{"gitId":"biinnnggggg"},"content":"    private MikeException error(String message) {","lastModifiedDate":"2024-01-26"},{"lineNumber":182,"author":{"gitId":"biinnnggggg"},"content":"        return new MikeException(message);","lastModifiedDate":"2024-01-26"},{"lineNumber":183,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":184,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":185,"author":{"gitId":"biinnnggggg"},"content":"    private Token consume(TokenType type, String message) throws MikeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":186,"author":{"gitId":"biinnnggggg"},"content":"        if (check(type)) return advance();","lastModifiedDate":"2024-01-26"},{"lineNumber":187,"author":{"gitId":"biinnnggggg"},"content":"        throw error(message);","lastModifiedDate":"2024-01-26"},{"lineNumber":188,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":189,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":190,"author":{"gitId":"biinnnggggg"},"content":"    private boolean check(TokenType type) {","lastModifiedDate":"2024-01-26"},{"lineNumber":191,"author":{"gitId":"biinnnggggg"},"content":"        return peekToken().getType() \u003d\u003d type;","lastModifiedDate":"2024-01-26"},{"lineNumber":192,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":193,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":194,"author":{"gitId":"biinnnggggg"},"content":"    private Token advance() {","lastModifiedDate":"2024-01-26"},{"lineNumber":195,"author":{"gitId":"biinnnggggg"},"content":"        if (!isAtEnd()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":196,"author":{"gitId":"biinnnggggg"},"content":"            current++;","lastModifiedDate":"2024-01-26"},{"lineNumber":197,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":198,"author":{"gitId":"biinnnggggg"},"content":"        return previousToken();","lastModifiedDate":"2024-01-26"},{"lineNumber":199,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":200,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":201,"author":{"gitId":"biinnnggggg"},"content":"    private Token previousToken() {","lastModifiedDate":"2024-01-26"},{"lineNumber":202,"author":{"gitId":"biinnnggggg"},"content":"        return tokens.get(current - 1);","lastModifiedDate":"2024-01-26"},{"lineNumber":203,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":204,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":205,"author":{"gitId":"biinnnggggg"},"content":"    private boolean isAtEnd() {","lastModifiedDate":"2024-01-26"},{"lineNumber":206,"author":{"gitId":"biinnnggggg"},"content":"        return peekToken().getType() \u003d\u003d TokenType.EOC;","lastModifiedDate":"2024-01-26"},{"lineNumber":207,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":208,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":209,"author":{"gitId":"biinnnggggg"},"content":"    private Token peekToken() {","lastModifiedDate":"2024-01-26"},{"lineNumber":210,"author":{"gitId":"biinnnggggg"},"content":"        return tokens.get(current);","lastModifiedDate":"2024-01-26"},{"lineNumber":211,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":212,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":212}},{"path":"src/main/java/mike/CommandScanner.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import java.util.Map;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import java.util.List;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"class CommandScanner {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"    private static final Map\u003cString, TokenType\u003e commands;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"    static {","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"        commands \u003d new HashMap\u003cString, TokenType\u003e(0);","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"        commands.put(\"bye\", TokenType.EXIT);","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"        commands.put(\"list\", TokenType.LIST);","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"        commands.put(\"mark\", TokenType.MARK);","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"        commands.put(\"unmark\", TokenType.UNMARK);","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"        commands.put(\"todo\", TokenType.TODO);","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"        commands.put(\"deadline\", TokenType.DEADLINE);","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"        commands.put(\"event\", TokenType.EVENT);","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"        commands.put(\"delete\", TokenType.DELETE);","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"    private final String source;","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"    private final List\u003cToken\u003e tokens;","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"    private int start;","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"    private int current;","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"    CommandScanner(String source) {","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"        this.source \u003d source;","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"        this.tokens \u003d new ArrayList\u003cToken\u003e();","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"        this.start \u003d 0;","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"        this.current \u003d 0;","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"    public List\u003cToken\u003e scanTokens() {","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"        // command token","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"        scanStartToken();","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"        // argument tokens","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"        while (!isAtEnd()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"biinnnggggg"},"content":"            start \u003d current;","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"            scanToken();","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"biinnnggggg"},"content":"        scanEndToken();","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"biinnnggggg"},"content":"        return tokens;","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"biinnnggggg"},"content":"    private void scanEndToken() {","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"biinnnggggg"},"content":"        tokens.add(new Token(TokenType.EOC, \"\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"biinnnggggg"},"content":"    private void scanToken() {","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"biinnnggggg"},"content":"        char c \u003d advance();","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"biinnnggggg"},"content":"        switch (c) {","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"biinnnggggg"},"content":"            case \u0027/\u0027:","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"biinnnggggg"},"content":"                prefix();","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"biinnnggggg"},"content":"                parameter();","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"biinnnggggg"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"biinnnggggg"},"content":"            case \u0027 \u0027:","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"biinnnggggg"},"content":"            case \u0027\\r\u0027:","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"biinnnggggg"},"content":"            case \u0027\\t\u0027:","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"biinnnggggg"},"content":"                // ignore whitespace","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"biinnnggggg"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"biinnnggggg"},"content":"            default:","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"biinnnggggg"},"content":"                literal();","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"biinnnggggg"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":68,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":70,"author":{"gitId":"biinnnggggg"},"content":"    private void literal() {","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"biinnnggggg"},"content":"        while (peek() !\u003d \u0027/\u0027 \u0026\u0026 !isAtEnd()) advance();","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"biinnnggggg"},"content":"        addToken(TokenType.LITERAL);","lastModifiedDate":"2024-01-26"},{"lineNumber":73,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":74,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"biinnnggggg"},"content":"    private void parameter() {","lastModifiedDate":"2024-01-26"},{"lineNumber":76,"author":{"gitId":"biinnnggggg"},"content":"        start \u003d current;","lastModifiedDate":"2024-01-26"},{"lineNumber":77,"author":{"gitId":"biinnnggggg"},"content":"        while (!isWhiteSpace(peek()) \u0026\u0026 !isAtEnd()) advance();","lastModifiedDate":"2024-01-26"},{"lineNumber":78,"author":{"gitId":"biinnnggggg"},"content":"        addToken(TokenType.PARAM);","lastModifiedDate":"2024-01-26"},{"lineNumber":79,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":80,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":81,"author":{"gitId":"biinnnggggg"},"content":"    private void prefix() {","lastModifiedDate":"2024-01-26"},{"lineNumber":82,"author":{"gitId":"biinnnggggg"},"content":"        addToken(TokenType.FORWARD_DASH);","lastModifiedDate":"2024-01-26"},{"lineNumber":83,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":84,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":85,"author":{"gitId":"biinnnggggg"},"content":"    private void scanStartToken() {","lastModifiedDate":"2024-01-26"},{"lineNumber":86,"author":{"gitId":"biinnnggggg"},"content":"        while (!isWhiteSpace(peek()) \u0026\u0026 !isAtEnd()) advance();","lastModifiedDate":"2024-01-26"},{"lineNumber":87,"author":{"gitId":"biinnnggggg"},"content":"        String text \u003d source.substring(start, current);","lastModifiedDate":"2024-01-26"},{"lineNumber":88,"author":{"gitId":"biinnnggggg"},"content":"        TokenType type \u003d commands.get(text);","lastModifiedDate":"2024-01-26"},{"lineNumber":89,"author":{"gitId":"biinnnggggg"},"content":"        if (type \u003d\u003d null) type \u003d TokenType.LITERAL;","lastModifiedDate":"2024-01-26"},{"lineNumber":90,"author":{"gitId":"biinnnggggg"},"content":"        // flag that LITERAL is not recognised command when parsing","lastModifiedDate":"2024-01-26"},{"lineNumber":91,"author":{"gitId":"biinnnggggg"},"content":"        addToken(type);","lastModifiedDate":"2024-01-26"},{"lineNumber":92,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":93,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":94,"author":{"gitId":"biinnnggggg"},"content":"    private void addToken(TokenType type) {","lastModifiedDate":"2024-01-26"},{"lineNumber":95,"author":{"gitId":"biinnnggggg"},"content":"        String text \u003d source.substring(start, current);","lastModifiedDate":"2024-01-26"},{"lineNumber":96,"author":{"gitId":"biinnnggggg"},"content":"        Token newToken \u003d new Token(type, text);","lastModifiedDate":"2024-01-26"},{"lineNumber":97,"author":{"gitId":"biinnnggggg"},"content":"        tokens.add(newToken);","lastModifiedDate":"2024-01-26"},{"lineNumber":98,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":99,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":100,"author":{"gitId":"biinnnggggg"},"content":"    private char peek() {","lastModifiedDate":"2024-01-26"},{"lineNumber":101,"author":{"gitId":"biinnnggggg"},"content":"        if (isAtEnd()) return \u0027\\0\u0027;","lastModifiedDate":"2024-01-26"},{"lineNumber":102,"author":{"gitId":"biinnnggggg"},"content":"        return source.charAt(current);","lastModifiedDate":"2024-01-26"},{"lineNumber":103,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":104,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":105,"author":{"gitId":"biinnnggggg"},"content":"    private boolean isWhiteSpace(char c) {","lastModifiedDate":"2024-01-26"},{"lineNumber":106,"author":{"gitId":"biinnnggggg"},"content":"        return c \u003d\u003d \u0027 \u0027 || c \u003d\u003d \u0027\\t\u0027 || c \u003d\u003d \u0027\\r\u0027;","lastModifiedDate":"2024-01-26"},{"lineNumber":107,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":108,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":109,"author":{"gitId":"biinnnggggg"},"content":"    private char advance() {","lastModifiedDate":"2024-01-26"},{"lineNumber":110,"author":{"gitId":"biinnnggggg"},"content":"        return source.charAt(current++);","lastModifiedDate":"2024-01-26"},{"lineNumber":111,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":112,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":113,"author":{"gitId":"biinnnggggg"},"content":"    private boolean isAtEnd() {","lastModifiedDate":"2024-01-26"},{"lineNumber":114,"author":{"gitId":"biinnnggggg"},"content":"        return current \u003e\u003d source.length();","lastModifiedDate":"2024-01-26"},{"lineNumber":115,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":116,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":117,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":118,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"biinnnggggg":118}},{"path":"src/main/java/mike/Mike.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import mike.command.Command;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import java.util.List;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"/*","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"TODO:","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"    1. Write comments to document code","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"    2. Write the README.md","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"public class Mike {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"    private static final String FILE_PATH \u003d \"./data/mike.txt\";","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"    private final Ui ui;","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"    private final Storage storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"    Mike() {","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"        this.storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"        this.taskList \u003d storage.load();","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"    public void run() {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"        ui.displayWelcome();","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"        boolean exitSeen \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"        while (!exitSeen) {","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"            try {","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"                String userInput \u003d ui.scanInput();","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"                Ui.displayLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"                List\u003cToken\u003e tokens \u003d new CommandScanner(userInput).scanTokens();","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"                Command command \u003d new CommandParser(tokens).parse();","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"                command.execute(taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"                if (command.isExit()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"                    exitSeen \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"            } catch (MikeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"                Ui.displayError(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"biinnnggggg"},"content":"            } finally {","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"                Ui.displayLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"biinnnggggg"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"biinnnggggg"},"content":"        storage.writeToFile(taskList);","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"biinnnggggg"},"content":"     * Main method that runs the program.","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"biinnnggggg"},"content":"     * @param args n/a","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"biinnnggggg"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"biinnnggggg"},"content":"        Mike mike \u003d new Mike();","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"biinnnggggg"},"content":"        mike.run();","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"biinnnggggg":55}},{"path":"src/main/java/mike/MikeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"public class MikeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"    public MikeException(String message) {","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":7}},{"path":"src/main/java/mike/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Event;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Todo;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"import java.io.File;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"class Storage {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"    private final String fileDirectory;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"    private final String filePath;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"    protected File file;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    Storage(String filePath) {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"        this.fileDirectory \u003d filePath.split(\"/\")[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"     * Return a TaskList object constructed from file data.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"     * @return TaskList","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"    public TaskList load() {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"            if (new File(fileDirectory).mkdirs()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"                Ui.display(\"File location created at \" + filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"                Ui.display(\"File location already exists\");","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"            this.file \u003d file;","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"                Ui.display(\"File created: \" + file.getName());","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"biinnnggggg"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"                Ui.display(\"File already exists\");","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"biinnnggggg"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"biinnnggggg"},"content":"            Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"biinnnggggg"},"content":"            String line;","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"biinnnggggg"},"content":"            Task newTask;","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"biinnnggggg"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"biinnnggggg"},"content":"            while (fileScanner.hasNext()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"biinnnggggg"},"content":"                line \u003d fileScanner.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"biinnnggggg"},"content":"                newTask \u003d extractTask(line);","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"biinnnggggg"},"content":"                taskList.add(newTask);","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"biinnnggggg"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"biinnnggggg"},"content":"            return taskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"biinnnggggg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"biinnnggggg"},"content":"            Ui.displayError(\"404 File not found\");","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"biinnnggggg"},"content":"            return new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"biinnnggggg"},"content":"        } catch (MikeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"biinnnggggg"},"content":"            Ui.displayError(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"biinnnggggg"},"content":"            return new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"biinnnggggg"},"content":"    public void writeToFile(TaskList taskList) {","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"biinnnggggg"},"content":"        try (PrintWriter out \u003d new PrintWriter(filePath)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"biinnnggggg"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"biinnnggggg"},"content":"                out.println(task.getFileEncoding());","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"biinnnggggg"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"biinnnggggg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"biinnnggggg"},"content":"            Ui.display(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"biinnnggggg"},"content":"    private Task extractTask(String line) throws IndexOutOfBoundsException, MikeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"biinnnggggg"},"content":"        String[] taskInformation \u003d line.split(\",\");","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"biinnnggggg"},"content":"        String taskType \u003d taskInformation[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"biinnnggggg"},"content":"        String taskDescription \u003d taskInformation[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"biinnnggggg"},"content":"        boolean taskIsCompleted \u003d taskInformation[2].equals(\"true\");","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"biinnnggggg"},"content":"        Task newTask;","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"biinnnggggg"},"content":"        switch (taskType) {","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"biinnnggggg"},"content":"        case \"Todo\":","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"biinnnggggg"},"content":"            newTask \u003d new Todo(taskDescription);","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"biinnnggggg"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"biinnnggggg"},"content":"        case \"Deadline\": // format: taskType,taskDescription,taskDone,deadline","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"biinnnggggg"},"content":"            String deadline \u003d taskInformation[3];","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"biinnnggggg"},"content":"            newTask \u003d new Deadline(taskDescription, deadline);","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"biinnnggggg"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"biinnnggggg"},"content":"        case \"Event\": // format: taskType,taskDescription,taskDone,startDate,endDate","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"biinnnggggg"},"content":"            String startDate \u003d taskInformation[3];","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"biinnnggggg"},"content":"            String endDate \u003d taskInformation[4];","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"biinnnggggg"},"content":"            newTask \u003d new Event(taskDescription, startDate, endDate);","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"biinnnggggg"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"biinnnggggg"},"content":"        default:","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"File corrupted. Unable to load saved data.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"biinnnggggg"},"content":"        if (taskIsCompleted) {","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"biinnnggggg"},"content":"            newTask.markAsDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"biinnnggggg"},"content":"        return newTask;","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"biinnnggggg":106}},{"path":"src/main/java/mike/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"public class TaskList extends ArrayList\u003cTask\u003e  {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"        return String.join(\"\\n\", IntStream.range(0, this.size())","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"                .boxed()","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"                .map(i -\u003e {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"                    Task task \u003d this.get(i);","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"                    int index \u003d i + 1;","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"                    return String.format(\"%d.%s\", index, task.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"                })","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"                .toArray(String[]::new)","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"        );","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"biinnnggggg":22}},{"path":"src/main/java/mike/Token.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"class Token {","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"    final TokenType type;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"    final String text;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"    Token(TokenType type, String text) {","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"        this.text \u003d text;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"    public TokenType getType() {","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"        return type;","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"    public String getText() {","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"        return text;","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"        return type + \" \" + text;","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"biinnnggggg":24}},{"path":"src/main/java/mike/TokenType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"enum TokenType {","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"    // Command tokens","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"    EXIT, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE,","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"    // prefix character tokens","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"    FORWARD_DASH,","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"    // parameter tokens","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"    PARAM,","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"    // argument tokens","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"    LITERAL,","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"    // end of command","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"    EOC","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"biinnnggggg":18}},{"path":"src/main/java/mike/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"public class Ui {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"    Ui() {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"    public String scanInput() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"            return scanner.nextLine().strip();","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"That is the weirdest thing you\u0027ve ever said.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"    public static void display(Object object) {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"        System.out.println(object);","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"    public static void displayError(String errorMessage) {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"        display(errorMessage);","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"    public void displayWelcome() {","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"        displayLogo();","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"        displayGreeting();","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"        displayLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"     * Displays a farewell message with Wazowski pizazz.","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"    public static void farewell() {","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"        String farewell \u003d","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"                \" Where are you going? We\u0027ll talk.\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"                        \" We\u0027ll have a latte.\";","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"        display(farewell);","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"biinnnggggg"},"content":"     * Prints the Wazowski logo as ASCII art.","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"biinnnggggg"},"content":"    private void displayLogo() {","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"biinnnggggg"},"content":"        String logo \u003d","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"biinnnggggg"},"content":"                \"                   .\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"biinnnggggg"},"content":"                \"          \u0026#  #*\u0026/,,(@%*. (#\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"biinnnggggg"},"content":"                \"           %#((,.      #%,*,\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"biinnnggggg"},"content":"                \"         %%%(/,.. *(     /,.**\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"biinnnggggg"},"content":"                \"      .%%%%#/**,%(@@\u0026@    /.,,/\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"biinnnggggg"},"content":"                \"      %%%%#(((/*(#*(%\u0026    ..,,,*(\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"biinnnggggg"},"content":"                \"    *#%%%##(/,#(/**,,...,...,,,**/\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"biinnnggggg"},"content":"                \"   .#%%%%%##(((//#(//*......,,,**//\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"biinnnggggg"},"content":"                \"   \u0026#%%%%%%###(///*,,..,,,,,,,***/#*\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"biinnnggggg"},"content":"                \"   \u0026#%%%%%%#####@@@@@@(,,**,****/(#*\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"biinnnggggg"},"content":"                \"  *\u0026%#%%\u0026\u0026\u0026%%%@@@@@@@@@@\u0026**/////(.\u0026/*\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"biinnnggggg"},"content":"                \"  #\u0026, #%\u0026\u0026\u0026\u0026\u0026\u0026%(((/*****((((((##.  #(\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"biinnnggggg"},"content":"                \"  ##    #\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026%%%%%%###%%(    (*\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"biinnnggggg"},"content":"                \"  .#/     /%%%%%%%%%%%%%%%%#       //\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"biinnnggggg"},"content":"                \"   #(     /##            *#,       (/\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"biinnnggggg"},"content":"                \"   %*     /#(             #,       //\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"biinnnggggg"},"content":"                \"   %(/.    %(            .%\u0026      //*/\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"biinnnggggg"},"content":"                \"   %/,\u0026,   \u0026(            #%/      (#//,\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"biinnnggggg"},"content":"                \"   /(*     ##*           #%       \u0026*#%\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"biinnnggggg"},"content":"                \"     @/@*  (#*.          #(.      /%%\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"biinnnggggg"},"content":"                \"      (/(/##(...........##(//\u0026#(\u0026/.\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"biinnnggggg"},"content":"                \"     (@%(\u0026@@,#,..........,*@@\u0026\u0026@\u0026*,\\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"biinnnggggg"},"content":"        display(logo);","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"biinnnggggg"},"content":"    private void displayGreeting() {","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"biinnnggggg"},"content":"        String greeting \u003d","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"biinnnggggg"},"content":"                \" Hello! I\u0027m mike WAZOWSKI.\\n\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"biinnnggggg"},"content":"                \" What can I do for you?\";","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"biinnnggggg"},"content":"        display(greeting);","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"biinnnggggg"},"content":"    public static void displayLine() {","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"biinnnggggg"},"content":"        String horizontalLine \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2024-01-26"},{"lineNumber":81,"author":{"gitId":"biinnnggggg"},"content":"        display(horizontalLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":84}},{"path":"src/main/java/mike/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import mike.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import mike.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"abstract class AddCommand extends Command {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"    protected final String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"    public AddCommand(String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"        super(\"\");","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"    protected void respond(TaskList taskList, Task newTask) {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"        String message \u003d","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"                \"Got it, I\u0027ve added this task:\\n  \"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"                + newTask + \"\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"                + \"Now you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"        Ui.display(message);","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":21}},{"path":"src/main/java/mike/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import mike.MikeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import mike.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"public class AddDeadlineCommand extends AddCommand {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"    private final String deadline;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"    public AddDeadlineCommand(String description, String deadline) {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"    public void execute(TaskList taskList) throws MikeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"        Task newTask \u003d new Deadline(description, deadline);","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"        taskList.add(newTask);","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"        respond(taskList, newTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"        return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":27}},{"path":"src/main/java/mike/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import mike.MikeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import mike.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Event;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"    private final String startDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"    private final String endDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"    public AddEventCommand(String description, String startDate, String endDate) {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"    public void execute(TaskList taskList) throws MikeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"        Task newTask \u003d new Event(description, startDate, endDate);","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"        taskList.add(newTask);","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"        respond(taskList, newTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"        return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":29}},{"path":"src/main/java/mike/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import mike.MikeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import mike.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Todo;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"public class AddTodoCommand extends AddCommand {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"    public AddTodoCommand(String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"    public void execute(TaskList taskList) throws MikeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"        Task newTask \u003d new Todo(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"        taskList.add(newTask);","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"        respond(taskList, newTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"        return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":25}},{"path":"src/main/java/mike/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import mike.MikeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import mike.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"    String text;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"    public Command(String text) {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"        this.text \u003d text;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"    public abstract void execute(TaskList taskList) throws MikeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"        return \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"biinnnggggg":22}},{"path":"src/main/java/mike/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import mike.MikeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import mike.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import mike.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"import mike.command.Command;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"    private final int taskNumber;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"        super(\"\");","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    public void execute(TaskList taskList) throws MikeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"        int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"There are no tasks to remove.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"        } else if (taskIndex \u003e\u003d taskList.size() || taskIndex \u003c 0) {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"That task doesn\u0027t exist. Please enter a number in the range 1-\" + taskList.size() + \".\");","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"        Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"        taskList.remove(taskIndex);","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"        String message \u003d","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"                \"Noted! I\u0027ve removed this task:\\n  \" +","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"                task + \"\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"                + \"Now you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"        Ui.display(message);","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"        return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":38}},{"path":"src/main/java/mike/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import mike.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import mike.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import mike.command.Command;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"    public ExitCommand() {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"        super(\"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"        Ui.farewell();","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"        return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"biinnnggggg":22}},{"path":"src/main/java/mike/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import mike.MikeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import mike.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import mike.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"import mike.command.Command;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"    public ListCommand() {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"        super(\"\" );","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"    public void execute(TaskList taskList) throws MikeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"You have no more tasks Sulley...\");","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"        Ui.display(\"You and I are a team.\\nHere is the task list:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"        Ui.display(taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"        return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":26}},{"path":"src/main/java/mike/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import mike.MikeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import mike.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import mike.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"import mike.command.Command;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"    private final int taskNumber;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"        super(\"\");","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    public void execute(TaskList taskList) throws MikeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"        int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"There are no tasks to mark. Please add a task first.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"        } else if (taskIndex \u003e\u003d taskList.size() || taskIndex \u003c 0) {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"That\u0027s suspicious. Please enter a number in the range 1-\" + taskList.size() + \".\");","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"        Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"        task.markAsDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"        String message \u003d \"Nice! I\u0027ve marked this task as done:\\n  \" + task;","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"        Ui.display(message);","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"        /*","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"           TODO:","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"            1. Check that task is or is not done.","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"        */","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"        return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":39}},{"path":"src/main/java/mike/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import mike.MikeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import mike.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import mike.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"import mike.command.Command;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"    private final int taskNumber;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"        super(\"\");","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    public void execute(TaskList taskList) throws MikeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"        int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"There are no tasks to mark. Please add a task first.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"        } else if (taskIndex \u003e\u003d taskList.size() || taskIndex \u003c 0) {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"That\u0027s suspicious. Please enter a number in the range 1-\" + taskList.size() + \".\");","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"        Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"        task.markAsNotDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"        String message \u003d \"I\u0027ve marked this task as not done:\\n  \" + task;","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"        Ui.display(message);","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"        /*","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"           TODO:","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"            1. Check that task is or is not done.","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"        */","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"        return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":39}},{"path":"src/main/java/mike/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import mike.MikeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"    private static final String TYPE \u003d \"Deadline\";","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"    public Deadline(String description, String deadline) throws MikeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"        super(description, TYPE);","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"            this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"Please enter a valid date \" + e.getParsedString());","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"    private String getDeadline() {","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"        return deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"    public String getFileEncoding() {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"        return super.getFileEncoding() + \",\" + deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getDeadline() + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":35}},{"path":"src/main/java/mike/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import mike.MikeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"    private static final String TYPE \u003d \"Event\";","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"    protected LocalDate startDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"    protected LocalDate endDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"    public Event(String description, String startDate, String endDate) throws MikeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"        super(description, TYPE);","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"            this.startDate \u003d LocalDate.parse(startDate);","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"            this.endDate \u003d LocalDate.parse(endDate);","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"Please enter a valid date \" + e.getParsedString());","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"    private String getStartDate() {","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"        return startDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"    private String getEndDate() {","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"        return endDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"    public String getFileEncoding() {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"        return super.getFileEncoding() + \",\" + getStartDate() + \",\" + getEndDate();","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"        return \"[E]\" + super.toString() + \" (from:\" + getStartDate() + \" to:\" +  getEndDate() + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":41}},{"path":"src/main/java/mike/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"public class Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"    protected final String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"    protected String type;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"    public Task(String description, String type) {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"        return description;","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"    public String getIsDone() {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"        return isDone ? \"true\" : \"false\";","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"    public String getType() {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"        return type;","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"    public String getFileEncoding() {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"        return getType() + \",\" + getDescription() + \",\" + getIsDone();","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"biinnnggggg"},"content":"    };","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"biinnnggggg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"biinnnggggg"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"biinnnggggg":45}},{"path":"src/main/java/mike/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"    private static final String TYPE \u003d \"Todo\";","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"        super(description, TYPE);","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"todo read book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"deadline return book /by friday","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"random text","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"event book club /from saturday 5pm /to 7pm","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"mark 4","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"event /from saturday 5pm /to 7pm","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"event book club /from saturday 5pm /from /to 7pm","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"event book club /to saturday 5pm /from 7pm","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"java -classpath ..\\bin Mike \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"biinnnggggg":1,"-":20}}]
