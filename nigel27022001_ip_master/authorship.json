[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"# duke.Duke project template","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nigel27022001":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"nigel27022001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"nigel27022001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"nigel27022001"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"nigel27022001"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"nigel27022001"},"content":"    archiveFileName \u003d \"duke.jar\"","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"nigel27022001"},"content":"checkstyle {","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"nigel27022001"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nigel27022001":22,"-":41}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"nigel27022001"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"nigel27022001"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"nigel27022001"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"nigel27022001"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"nigel27022001"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"nigel27022001"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"nigel27022001"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"nigel27022001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"nigel27022001"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"nigel27022001"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"nigel27022001"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"nigel27022001"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"nigel27022001"},"content":"    private void flip() {","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"nigel27022001"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"nigel27022001"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"nigel27022001"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"nigel27022001"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"nigel27022001"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"nigel27022001"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"nigel27022001"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"nigel27022001"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"nigel27022001"},"content":"        db.flip();","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"nigel27022001"},"content":"        db.setStyle(\"-fx-background-color: #A0D9F8\");","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"nigel27022001"},"content":"        return db;","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"nigel27022001":62}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.Parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"nigel27022001"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"nigel27022001"},"content":" * Class that represents the Duke Chatbot.","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"nigel27022001"},"content":"public class Duke {","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"nigel27022001"},"content":"    /** TaskList Object to be used to store Tasks. */","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"nigel27022001"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"nigel27022001"},"content":"    /** Ui Object for User Interactions. */","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"nigel27022001"},"content":"    private Ui userInterface;","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"nigel27022001"},"content":"    /** Storage Object to store and load Tasklist states. */","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"nigel27022001"},"content":"    private Storage fileStorage;","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"nigel27022001"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"nigel27022001"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"nigel27022001"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"nigel27022001"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"nigel27022001"},"content":"    private Scene scene;","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"nigel27022001"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/PenguUser.png\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"nigel27022001"},"content":"    private Image pengu \u003d new Image(this.getClass().getResourceAsStream(\"/images/PenguBot.png\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"nigel27022001"},"content":"     * Constucts a Duke Object that will be loaded with existing TaskList state.","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"nigel27022001"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"nigel27022001"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"nigel27022001"},"content":"    public Duke() throws DukeException, IOException {","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"nigel27022001"},"content":"        this.userInterface \u003d new Ui();","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"nigel27022001"},"content":"        this.fileStorage \u003d new Storage(\"./data/tasks.txt\");","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"nigel27022001"},"content":"        userInterface.showWelcome();","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"nigel27022001"},"content":"        if (this.fileStorage.isOccupied) {","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"nigel27022001"},"content":"            ArrayList\u003cTask\u003e loadedList \u003d fileStorage.loadStorage();","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"nigel27022001"},"content":"            taskList \u003d new TaskList(loadedList);","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"nigel27022001"},"content":"        } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"nigel27022001"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"nigel27022001"},"content":"    protected String getResponse(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"nigel27022001"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"nigel27022001"},"content":"            Command c \u003d Parser.parseInstructions(input);","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"nigel27022001"},"content":"            return c.execute(taskList, userInterface, fileStorage);","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"nigel27022001"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"nigel27022001"},"content":"            return userInterface.showError(e.getMessage());","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nigel27022001":78,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"public class Launcher {","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"nigel27022001":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"    {","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"            duke \u003d new Duke();","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"nigel27022001"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"nigel27022001"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"nigel27022001"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"nigel27022001"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"nigel27022001"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"nigel27022001"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"nigel27022001"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"nigel27022001"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"nigel27022001"},"content":"            stage.show();","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"nigel27022001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"nigel27022001"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"nigel27022001":42}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"nigel27022001"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/PenguUser.png\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"nigel27022001"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/PenguBot.png\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"nigel27022001"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"nigel27022001"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"nigel27022001"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"nigel27022001"},"content":"        this.welcomeMessage();","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"nigel27022001"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"nigel27022001"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"nigel27022001"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"nigel27022001"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"nigel27022001"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"nigel27022001"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"nigel27022001"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"nigel27022001"},"content":"        String response \u003d duke.getResponse(userInput.getText());","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"nigel27022001"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"nigel27022001"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"nigel27022001"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"nigel27022001"},"content":"        );","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"nigel27022001"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"nigel27022001"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"nigel27022001"},"content":"    private void welcomeMessage() {","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"nigel27022001"},"content":"        Ui userInterface \u003d new Ui();","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"nigel27022001"},"content":"        String message \u003d userInterface.showWelcome();","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"nigel27022001"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(message, dukeImage));","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"nigel27022001":62}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":" * Class that represents a command that adds a {@link Task} in a {@link TaskList}.","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"    /**  Task object to be added into the TaskList */","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"    private Task taskToBeAdded;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"     * Constructs a AddTaskCommand Object.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"     * @param task Task Object to be added into the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"        this.taskToBeAdded \u003d task;","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"     * Runs the AddTaskCommand to add a task into the existing TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"nigel27022001"},"content":"     * @param taskList Existing TaskList to be updated.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"nigel27022001"},"content":"     * @param ui UserInterface Object.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"nigel27022001"},"content":"     * @param storage Existing Storage to be updated.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"nigel27022001"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"nigel27022001"},"content":"        taskList.addTask(taskToBeAdded);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"nigel27022001"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"nigel27022001"},"content":"            storage.saveStorage(taskList.getTaskStore());","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"nigel27022001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"nigel27022001"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"nigel27022001"},"content":"        return ui.showAddedTask(taskToBeAdded, taskList.listSize());","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"nigel27022001"},"content":"     * Returns a boolean value telling us whether this command is an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"nigel27022001"},"content":"     * @return Boolean value indicating whether this command is an exist command.","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"nigel27022001"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"nigel27022001"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"nigel27022001":51}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":" * Class that represants Commands that can be executed by Duke.","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"     * Executes the Command.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"     * @param taskList Existing TaskList to be updated.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"     * @param ui Existing UserInterface Object.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"     * @param storage Existing Storage to be updated","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"     * Returns a boolean value telling us whether this command is an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"nigel27022001"},"content":"     * @return Boolean value indicating whether this command is an exist command.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"nigel27022001":28}},{"path":"src/main/java/duke/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":" * Class representing a command that deletes a {@link Task} from the {@link TaskList}.","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"    /** Index of Task to be deleted from the TaskList. */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"    private int indexToBeDeleted;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"     * Constructs a DeletedTaskCommand Object.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"     * @param index Index of Task in TaskList to be deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"    public DeleteTaskCommand(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"        this.indexToBeDeleted \u003d index;","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"     * Runs the DeleteTaskCommand to delete a task from the existing TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"nigel27022001"},"content":"     * @param taskList Existing TaskList to be updated.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"nigel27022001"},"content":"     * @param ui Existing UserInterface Object.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"nigel27022001"},"content":"     * @param storage Existing Storage to be updated","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"nigel27022001"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"nigel27022001"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"nigel27022001"},"content":"        Task deletedTask;","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"nigel27022001"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"nigel27022001"},"content":"            deletedTask \u003d taskList.deleteTask(indexToBeDeleted);","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"nigel27022001"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"nigel27022001"},"content":"            throw new DukeException(\"*HONK* Pengu thinks you need a valid task number to delete, \"","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"nigel27022001"},"content":"                    + \"consider checking the list command\");","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"nigel27022001"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"nigel27022001"},"content":"            storage.saveStorage(taskList.getTaskStore());","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"nigel27022001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"nigel27022001"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"nigel27022001"},"content":"        return ui.showDeletedTask(deletedTask, taskList.listSize());","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"nigel27022001"},"content":"     * Returns a boolean value telling us whether this command is an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"nigel27022001"},"content":"     * @return Boolean value indicating whether this command is an exist command.","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"nigel27022001"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"nigel27022001"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"nigel27022001":59}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":" * Class representing a Command that exits out of the chatbot.","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"     * Runs the ExistCommand to exit out of the Chatbot.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"     * @param taskList Existing TaskList to be updated.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"     * @param ui Existing UserInterface Object.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"     * @param storage Existing Storage to be updated","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"        return ui.showExit();","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"     * Returns a boolean value telling us whether this command is an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"nigel27022001"},"content":"     * @return Boolean value indicating whether this command is an exist command.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"        return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"nigel27022001":30}},{"path":"src/main/java/duke/command/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"package duke.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":" * Class representing a Command that Finds and List {@link Task} that appears in the {@link TaskList}.","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"    /** String containing keyword to be used to search in the TaskList. */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"    private String keyword;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"     * Constructs a FindTaskCommand Object.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"     * @param keyword String containing keyword to be used to search in the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"    public FindTaskCommand(String keyword) {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"     * Runs the FindTaskCommand to Find Tasks in the TaskList that contain the keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"nigel27022001"},"content":"     * @param taskList Existing TaskList to be updated.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"nigel27022001"},"content":"     * @param ui Existing UserInterface Object.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"nigel27022001"},"content":"     * @param storage Existing Storage to be updated","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"nigel27022001"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"nigel27022001"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"nigel27022001"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d taskList.findTask(this.keyword);","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"nigel27022001"},"content":"        return ui.showFilteredTask(filteredList, this.keyword);","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"nigel27022001"},"content":"     * Returns a boolean value of whether this command is an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"nigel27022001"},"content":"     * @return Boolean value of whether this command is an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"nigel27022001"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"nigel27022001"},"content":"        return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"nigel27022001":48}},{"path":"src/main/java/duke/command/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":" * Class that represents a Command that Lists {@link duke.task.Task} in the {@link TaskList}.","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"public class ListTasksCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"     * Runs the ListTasksCommand to print out the list of Tasks currently in the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"     * @param taskList Existing TaskList to be updated.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"     * @param ui Existing UserInterface Object.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"     * @param storage Existing Storage to be updated","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"        return ui.showTaskListContents(taskList.getTaskStore());","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"     * Returns a boolean value telling us whether this command is an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"nigel27022001"},"content":"     * @return Boolean value indicating whether this command is an exist command.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"nigel27022001":30}},{"path":"src/main/java/duke/command/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":" * Class that represents a Command that marks {@link Task} in the {@link TaskList}.","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"    /** Index of the Task in the TaskList to be Marked. */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"    private int indexToBeMarked;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"     * Constructs a MarkTaskCommand Object.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"     * @param index Index of the Task in the TaskList to be Marked.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"    public MarkTaskCommand(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"        this.indexToBeMarked \u003d index;","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"     * Runs the MarkTaskCommand to mark an existing Task in the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"nigel27022001"},"content":"     * @param taskList Existing TaskList to be updated.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"nigel27022001"},"content":"     * @param ui Existing UserInterface Object.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"nigel27022001"},"content":"     * @param storage Existing Storage to be updated","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"nigel27022001"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"nigel27022001"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"nigel27022001"},"content":"        Task markedTask;","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"nigel27022001"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"nigel27022001"},"content":"            markedTask \u003d taskList.markTask(indexToBeMarked);","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"nigel27022001"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"nigel27022001"},"content":"            throw new DukeException(\"*HONK* Pengu thinks you need a valid task number to mark, \"","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"nigel27022001"},"content":"                    + \"consider checking the list command\");","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"nigel27022001"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"nigel27022001"},"content":"            storage.saveStorage(taskList.getTaskStore());","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"nigel27022001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"nigel27022001"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"nigel27022001"},"content":"        return ui.showMarkedTask(markedTask);","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"nigel27022001"},"content":"     * Returns a boolean value telling us whether this command is an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"nigel27022001"},"content":"     * @return Boolean value indicating whether this command is an exist command.","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"nigel27022001"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"nigel27022001"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"nigel27022001":59}},{"path":"src/main/java/duke/command/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":" * Class that represents a Command that unmarks a {@link Task} from the {@link TaskList}.","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"    /** Index of the Task in the TaskList to be Unmarked. */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"    private int indexToBeUnmarked;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"     * Constructs a UnmarkTaskCommand Object.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"     * @param index Index of the Task in the TaskList to be Unmarked.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"    public UnmarkTaskCommand(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"        this.indexToBeUnmarked \u003d index;","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"     * Runs the UnmarkTaskCommand to unmark an existing Task in the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"nigel27022001"},"content":"     * @param taskList Existing TaskList to be updated.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"nigel27022001"},"content":"     * @param ui Existing UserInterface Object.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"nigel27022001"},"content":"     * @param storage Existing Storage to be updated","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"nigel27022001"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"nigel27022001"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"nigel27022001"},"content":"        Task unmarkedTask;","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"nigel27022001"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"nigel27022001"},"content":"            unmarkedTask \u003d taskList.unmarkTask(indexToBeUnmarked);","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"nigel27022001"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"nigel27022001"},"content":"            throw new DukeException(\"*HONK* Pengu thinks you need a valid task number to unmark, \"","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"nigel27022001"},"content":"                    + \"consider checking the list command\");","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"nigel27022001"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"nigel27022001"},"content":"            storage.saveStorage(taskList.getTaskStore());","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"nigel27022001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"nigel27022001"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"nigel27022001"},"content":"        return ui.showUnmarkedTask(unmarkedTask);","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"nigel27022001"},"content":"     * Returns a boolean value telling us whether this command is an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"nigel27022001"},"content":"     * @return Boolean value indicating whether this command is an exist command.","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"nigel27022001"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"nigel27022001"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"nigel27022001":59}},{"path":"src/main/java/duke/command/UpdateTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"package duke.command;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.Ui;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"public class UpdateTaskCommand extends Command {","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"    private int indexToBeUpdated;","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"    private String updateDetails;","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"    public UpdateTaskCommand(String updateDetails) {","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"        this.updateDetails \u003d updateDetails;","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"        String[] inputArr \u003d updateDetails.split(\" \");","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"        indexToBeUpdated \u003d Integer.parseInt(inputArr[1]) - 1;","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"        updateDetails \u003d String.join(\" \", inputArr);","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"        System.out.println(updateDetails);","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"nigel27022001"},"content":"        Task taskToBeUpdated;","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"nigel27022001"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"            taskToBeUpdated \u003d taskList.getTaskStore().get(indexToBeUpdated);","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"nigel27022001"},"content":"            throw new DukeException(\"*Honk* Pengu thinks you either need a valid task number\"","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"nigel27022001"},"content":"                    + \", consider checking the \u0027list\u0027 command\");","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"nigel27022001"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"nigel27022001"},"content":"            String[] strArr \u003d this.updateDetails.split(\" \");","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"nigel27022001"},"content":"            String change \u003d \"\";","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"nigel27022001"},"content":"            for (int k \u003d 3; k \u003c strArr.length; k++) {","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"nigel27022001"},"content":"                if (k \u003d\u003d strArr.length - 1) {","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"nigel27022001"},"content":"                    change \u003d change + strArr[k];","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"nigel27022001"},"content":"                } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"nigel27022001"},"content":"                    change \u003d change + strArr[k] + \" \";","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"nigel27022001"},"content":"                }","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"nigel27022001"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"nigel27022001"},"content":"            taskToBeUpdated.updateTaskDescription(strArr[2], change);","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"nigel27022001"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"nigel27022001"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"nigel27022001"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"nigel27022001"},"content":"            storage.saveStorage(taskList.getTaskStore());","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"nigel27022001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"nigel27022001"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"nigel27022001"},"content":"        return ui.showUpdatedTask(taskToBeUpdated);","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"nigel27022001"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"nigel27022001"},"content":"        return false;","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"nigel27022001":57}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.Parser;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":" * Class that represents a Deadline Task.","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"    /** LocalDateTime Object of when the Deadline Tasks is marked to be done by. */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"    private LocalDateTime byDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"     * Constructs a Deadline Object.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"     * @param description String containing the description of the Task.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"     * @param byDate LocalDateTime Object of when the Deadline Tasks is marked to be done by.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"    public Deadline(String description, LocalDateTime byDate) {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"     * Returns the Deadline Object as a String.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"nigel27022001"},"content":"     * @return String Representation of the Task Object.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"nigel27022001"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"nigel27022001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"nigel27022001"},"content":"        DateTimeFormatter dTFormatter \u003d DateTimeFormatter.ofPattern(\"MMM-dd-yyyy HHmm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"nigel27022001"},"content":"        String byDateString \u003d byDate.format(dTFormatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"nigel27022001"},"content":"        return String.format(\"[D]\" + super.toString() + \" (by: %s)\", byDateString);","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"nigel27022001"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"nigel27022001"},"content":"    public void updateTaskDescription(String field, String updatedDescription) throws DukeException {","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"nigel27022001"},"content":"        String fieldInput \u003d field.toLowerCase();","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"nigel27022001"},"content":"        switch (fieldInput) {","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"nigel27022001"},"content":"        case \"info\":","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"nigel27022001"},"content":"            this.description \u003d updatedDescription;","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"nigel27022001"},"content":"            break;","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"nigel27022001"},"content":"        case \"by\":","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"nigel27022001"},"content":"            this.byDate \u003d Parser.checkDates(updatedDescription);","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"nigel27022001"},"content":"            break;","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"nigel27022001"},"content":"        default:","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"nigel27022001"},"content":"            throw new DukeException(\"*Honk!* Pengu can only update the \u0027info\u0027 or \u0027by\u0027 of this task\");","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"nigel27022001":53}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.Parser;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":" * Class that represents a Event Task.","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"    /** LocalDateTime Object of when the Event Task is stated to begin. */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"    private LocalDateTime fromDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"    /** LocalDateTime Object of when the Event Task is stated to end. */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"    private LocalDateTime toDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"     * Constructs a Event Object.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"     * @param description String containing the description of the Task.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"     * @param fromDate LocalDateTime Object of when the Event Task is stated to begin.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"     * @param toDate LocalDateTime Object of when the Event Task is stated to end.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"nigel27022001"},"content":"    public Event(String description, LocalDateTime fromDate, LocalDateTime toDate) {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"nigel27022001"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"nigel27022001"},"content":"     * Returns the Event Object as a String","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"nigel27022001"},"content":"     * @return String Representation of the Event Object.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"nigel27022001"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"nigel27022001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"nigel27022001"},"content":"        DateTimeFormatter dTFormatter \u003d DateTimeFormatter.ofPattern(\"MMM-dd-yyyy HHmm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"nigel27022001"},"content":"        String fromDateString \u003d fromDate.format(dTFormatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"nigel27022001"},"content":"        String toDateString \u003d toDate.format(dTFormatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"nigel27022001"},"content":"        return String.format(\"[E]\" + super.toString() + \" (from: %s to: %s)\", fromDateString, toDateString);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"nigel27022001"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"nigel27022001"},"content":"    public void updateTaskDescription(String field, String updatedDescription) throws DukeException {","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"nigel27022001"},"content":"        String fieldInput \u003d field.toLowerCase();","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"nigel27022001"},"content":"        switch (fieldInput) {","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"nigel27022001"},"content":"        case \"info\":","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"nigel27022001"},"content":"            this.description \u003d updatedDescription;","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"nigel27022001"},"content":"            break;","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"nigel27022001"},"content":"        case \"from\":","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"nigel27022001"},"content":"            this.fromDate \u003d Parser.checkDates(updatedDescription);","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"nigel27022001"},"content":"            break;","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"nigel27022001"},"content":"        case \"to\":","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"nigel27022001"},"content":"            this.toDate \u003d Parser.checkDates(updatedDescription);","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"nigel27022001"},"content":"            break;","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"nigel27022001"},"content":"        default:","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"nigel27022001"},"content":"            throw new DukeException(\"*Honk!* Pengu can only update the \u0027info\u0027, \u0027from\u0027 or \u0027to\u0027 of this task\");","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"nigel27022001":61}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":" * Class that represents a Task","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"    /** String containing the description of the Task. */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"    protected String description;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"    /** Boolean value that tells us if the Task has been marked done. */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"     * Constructs a Task Object.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"     * @param description String containing the description of the Task.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"nigel27022001"},"content":"     * Returns a String that indicated whether the Task has been marked done.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"     * @return String that indicates whether the Task has been marked done.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"nigel27022001"},"content":"    protected String getStatusIcon() {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"nigel27022001"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"nigel27022001"},"content":"     * Returns the Task Object as a String","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"nigel27022001"},"content":"     * @return String Representation of the Task Object.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"nigel27022001"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"nigel27022001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"nigel27022001"},"content":"        return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"nigel27022001"},"content":"     * Updates the Tasks status of whether it is marked done.","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"nigel27022001"},"content":"     * @param isDone Boolean value indicating whether the Task should be marked done.","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"nigel27022001"},"content":"    public void updateTaskStatus(boolean isDone) {","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"nigel27022001"},"content":"        if (isDone \u003d\u003d true) {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"nigel27022001"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"nigel27022001"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"nigel27022001"},"content":"            isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"nigel27022001"},"content":"    public abstract void updateTaskDescription(String field, String updatedDescription) throws DukeException;","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"nigel27022001"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"nigel27022001"},"content":"        return this.description;","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"nigel27022001":61}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.Parser;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":" * Class that represents a ToDo Task.","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"     * Constructs a ToDo Object.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"     * @param description String containing the description of the Task.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"     * Returns the ToDo Object as a String.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"     * @return String Representation of the ToDo Object.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"nigel27022001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"nigel27022001"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"nigel27022001"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"nigel27022001"},"content":"    public void updateTaskDescription(String field, String updatedDescription) throws DukeException {","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"nigel27022001"},"content":"        String fieldInput \u003d field.toLowerCase();","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"nigel27022001"},"content":"        switch (fieldInput) {","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"nigel27022001"},"content":"        case \"info\":","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"nigel27022001"},"content":"            this.description \u003d updatedDescription;","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"nigel27022001"},"content":"            break;","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"nigel27022001"},"content":"        default:","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"nigel27022001"},"content":"            throw new DukeException(\"*Honk!* Pengu can only update the \u0027info\u0027 of this task\");","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"nigel27022001":40}},{"path":"src/main/java/duke/utility/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"package duke.utility;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":" * Class that represents an Exception that is specific to Duke.","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"     * Constructs a DukeException Object.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"     * @param message String containing the exception message.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"nigel27022001":15}},{"path":"src/main/java/duke/utility/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"package duke.utility;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import duke.command.*;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":" * Class that represents a parser that is used by the chatbot to parse user input.","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"public class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"     * Returns a Command Object that adds a specified Task by parsing the String input.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"     * @param description String containing details of the Task to be created.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"     * @return Command Object that adds a specified Task.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"nigel27022001"},"content":"    public static Command taskParser(String description) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"        Task newTask;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"        validTaskCommand(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"nigel27022001"},"content":"        if (description.toLowerCase().startsWith(\"todo\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"nigel27022001"},"content":"            newTask \u003d parseTodo(description);","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"nigel27022001"},"content":"        } else if (description.toLowerCase().startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"nigel27022001"},"content":"            newTask \u003d parseDeadline(description);","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"nigel27022001"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"nigel27022001"},"content":"            newTask \u003d parseEvent(description);","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"nigel27022001"},"content":"        return new AddTaskCommand(newTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"nigel27022001"},"content":"     * Returns a Command Object which alters Tasks in the TaskList by parsing the String input.","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"nigel27022001"},"content":"     * @param userInput String containing details of the Command to be executed.","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"nigel27022001"},"content":"     * @return Command Object which alters Tasks in the TaskList","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"nigel27022001"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"nigel27022001"},"content":"    public static Command parseInstructions(String userInput) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"nigel27022001"},"content":"        if (userInput.toLowerCase().equals(\"bye\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"nigel27022001"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"nigel27022001"},"content":"        } else if (userInput.toLowerCase().equals(\"list\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"nigel27022001"},"content":"            return new ListTasksCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"nigel27022001"},"content":"        } else if (userInput.toLowerCase().startsWith(\"mark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"nigel27022001"},"content":"            String[] inputArr \u003d userInput.split(\" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"nigel27022001"},"content":"            int index \u003d Integer.parseInt(inputArr[1]) - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"nigel27022001"},"content":"            return new MarkTaskCommand(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"nigel27022001"},"content":"        } else if (userInput.toLowerCase().startsWith(\"unmark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"nigel27022001"},"content":"            String[] inputArr \u003d userInput.split(\" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"nigel27022001"},"content":"            int index \u003d Integer.parseInt(inputArr[1]) - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"nigel27022001"},"content":"            return new UnmarkTaskCommand(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"nigel27022001"},"content":"        } else if (userInput.toLowerCase().startsWith(\"delete\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"nigel27022001"},"content":"            String[] inputArr \u003d userInput.split(\" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"nigel27022001"},"content":"            int index \u003d Integer.parseInt(inputArr[1]) - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"nigel27022001"},"content":"            return new DeleteTaskCommand(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"nigel27022001"},"content":"        } else if (userInput.toLowerCase().startsWith(\"find\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"nigel27022001"},"content":"            String[] inputArr \u003d userInput.split(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"nigel27022001"},"content":"            assert inputArr[0].toLowerCase() \u003d\u003d \"find\";","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"nigel27022001"},"content":"            if (inputArr.length \u003e 2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"nigel27022001"},"content":"                throw new DukeException(\"Pengu can only look up one-word long keywords\");","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"nigel27022001"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"nigel27022001"},"content":"            return new FindTaskCommand(inputArr[1]);","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"nigel27022001"},"content":"        } else if (userInput.toLowerCase().startsWith(\"update\")) {","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"nigel27022001"},"content":"            return new UpdateTaskCommand(userInput);","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"nigel27022001"},"content":"        String keyword \u003d userInput.split(\" \")[0].toLowerCase();","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"nigel27022001"},"content":"        if (!(keyword.equals(\"todo\") || keyword.equals(\"deadline\") || keyword.equals(\"event\"))) {","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"nigel27022001"},"content":"            throw new DukeException(\"*HONK* Pengu has never seen such a command before,\"","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"nigel27022001"},"content":"                    + \" some commands Pengu can do are: list, todo, deadline\");","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"nigel27022001"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"nigel27022001"},"content":"            return taskParser(userInput);","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"nigel27022001"},"content":"     * Returns a Task Object by parsing the String obtained from storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"nigel27022001"},"content":"     * @param fileLine String obtained from the storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"nigel27022001"},"content":"     * @return Task Object based on String inputted.","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"nigel27022001"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"nigel27022001"},"content":"    public static Task parseFileLine(String fileLine) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"nigel27022001"},"content":"        Task t;","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"nigel27022001"},"content":"        boolean isTodo \u003d fileLine.charAt(1) \u003d\u003d \u0027T\u0027;","lastModifiedDate":"2024-02-14"},{"lineNumber":92,"author":{"gitId":"nigel27022001"},"content":"        boolean isDeadline \u003d fileLine.charAt(1) \u003d\u003d \u0027D\u0027;","lastModifiedDate":"2024-02-14"},{"lineNumber":93,"author":{"gitId":"nigel27022001"},"content":"        boolean isEvent \u003d fileLine.charAt(1) \u003d\u003d \u0027E\u0027;","lastModifiedDate":"2024-02-14"},{"lineNumber":94,"author":{"gitId":"nigel27022001"},"content":"        if (isTodo) {","lastModifiedDate":"2024-02-14"},{"lineNumber":95,"author":{"gitId":"nigel27022001"},"content":"            String infoString \u003d fileLine.substring(7);","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"nigel27022001"},"content":"            t \u003d new ToDo(infoString);","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"nigel27022001"},"content":"        } else if (isDeadline) {","lastModifiedDate":"2024-02-14"},{"lineNumber":98,"author":{"gitId":"nigel27022001"},"content":"            t \u003d parseFileDeadline(fileLine);","lastModifiedDate":"2024-02-14"},{"lineNumber":99,"author":{"gitId":"nigel27022001"},"content":"        } else if (isEvent) {","lastModifiedDate":"2024-02-14"},{"lineNumber":100,"author":{"gitId":"nigel27022001"},"content":"            t \u003d parseFileEvent(fileLine);","lastModifiedDate":"2024-02-14"},{"lineNumber":101,"author":{"gitId":"nigel27022001"},"content":"        } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":102,"author":{"gitId":"nigel27022001"},"content":"            throw new DukeException(\"Wrong File Format\");","lastModifiedDate":"2024-02-14"},{"lineNumber":103,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":104,"author":{"gitId":"nigel27022001"},"content":"        return t;","lastModifiedDate":"2024-02-14"},{"lineNumber":105,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":106,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":107,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":108,"author":{"gitId":"nigel27022001"},"content":"     * Checks if the Task Command is valid.","lastModifiedDate":"2024-02-14"},{"lineNumber":109,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":110,"author":{"gitId":"nigel27022001"},"content":"     * @param str String containing the user input.","lastModifiedDate":"2024-02-14"},{"lineNumber":111,"author":{"gitId":"nigel27022001"},"content":"     * @return Boolean Value of whether the command is valid.","lastModifiedDate":"2024-02-14"},{"lineNumber":112,"author":{"gitId":"nigel27022001"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-14"},{"lineNumber":113,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":114,"author":{"gitId":"nigel27022001"},"content":"    private static boolean validTaskCommand(String str) throws DukeException {","lastModifiedDate":"2024-02-14"},{"lineNumber":115,"author":{"gitId":"nigel27022001"},"content":"        List\u003cString\u003e strArr \u003d Arrays.asList(str.split(\" \"));","lastModifiedDate":"2024-02-14"},{"lineNumber":116,"author":{"gitId":"nigel27022001"},"content":"        String keyword \u003d str.split(\" \")[0].toLowerCase();","lastModifiedDate":"2024-02-14"},{"lineNumber":117,"author":{"gitId":"nigel27022001"},"content":"        if (!(keyword.equals(\"todo\") || keyword.equals(\"deadline\") || keyword.equals(\"event\"))) {","lastModifiedDate":"2024-02-14"},{"lineNumber":118,"author":{"gitId":"nigel27022001"},"content":"            throw new DukeException(\"*HONK* Pengu has never seen such a command before,\"","lastModifiedDate":"2024-02-14"},{"lineNumber":119,"author":{"gitId":"nigel27022001"},"content":"                    + \" some commands Pengu can do are: list, todo, deadline\");","lastModifiedDate":"2024-02-14"},{"lineNumber":120,"author":{"gitId":"nigel27022001"},"content":"        } else if (keyword.equals(\"todo\") \u0026\u0026 !(strArr.size() \u003e 1)) {","lastModifiedDate":"2024-02-14"},{"lineNumber":121,"author":{"gitId":"nigel27022001"},"content":"            throw new DukeException(\"*HONK* Pengu needs a Task description to record this down\");","lastModifiedDate":"2024-02-14"},{"lineNumber":122,"author":{"gitId":"nigel27022001"},"content":"        } else if (keyword.equals(\"deadline\") \u0026\u0026 !(strArr.contains(\"/by\"))) {","lastModifiedDate":"2024-02-14"},{"lineNumber":123,"author":{"gitId":"nigel27022001"},"content":"            throw new DukeException(\"*HONK* Pengu needs a /by followed by a end date for your task\");","lastModifiedDate":"2024-02-14"},{"lineNumber":124,"author":{"gitId":"nigel27022001"},"content":"        } else if (keyword.equals(\"event\") \u0026\u0026 !(strArr.contains(\"/from\") \u0026\u0026 (strArr.contains(\"/to\")))) {","lastModifiedDate":"2024-02-14"},{"lineNumber":125,"author":{"gitId":"nigel27022001"},"content":"            throw new DukeException(\"*HONK* Pengu needs a /from followed by a from date and a \"","lastModifiedDate":"2024-02-14"},{"lineNumber":126,"author":{"gitId":"nigel27022001"},"content":"                    + \"/to followed by a end date for your task\");","lastModifiedDate":"2024-02-14"},{"lineNumber":127,"author":{"gitId":"nigel27022001"},"content":"        } else if (keyword.equals(\"deadline\") \u0026\u0026 strArr.get(1).equals(\"/by\")) {","lastModifiedDate":"2024-02-14"},{"lineNumber":128,"author":{"gitId":"nigel27022001"},"content":"            throw new DukeException(\"Honk* Pengu cannot accept a deadline task without a description\");","lastModifiedDate":"2024-02-14"},{"lineNumber":129,"author":{"gitId":"nigel27022001"},"content":"        } else if (keyword.equals(\"event\") \u0026\u0026 (strArr.get(1).equals(\"/from\") || strArr.get(1).equals(\"/to\"))) {","lastModifiedDate":"2024-02-14"},{"lineNumber":130,"author":{"gitId":"nigel27022001"},"content":"            throw new DukeException(\"*Honk* Pengu cannot accept a event without a description\");","lastModifiedDate":"2024-02-14"},{"lineNumber":131,"author":{"gitId":"nigel27022001"},"content":"        } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":132,"author":{"gitId":"nigel27022001"},"content":"            return true;","lastModifiedDate":"2024-02-14"},{"lineNumber":133,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":134,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":135,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":136,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":137,"author":{"gitId":"nigel27022001"},"content":"     * Returns a LocalDateTime Object based on the String inputted if in valid format.","lastModifiedDate":"2024-02-14"},{"lineNumber":138,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":139,"author":{"gitId":"nigel27022001"},"content":"     * @param dateString String containing Date and Time details.","lastModifiedDate":"2024-02-14"},{"lineNumber":140,"author":{"gitId":"nigel27022001"},"content":"     * @return LocalDateTime Object based on the String inputted.","lastModifiedDate":"2024-02-14"},{"lineNumber":141,"author":{"gitId":"nigel27022001"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-14"},{"lineNumber":142,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":143,"author":{"gitId":"nigel27022001"},"content":"    public static LocalDateTime checkDates(String dateString) throws DukeException {","lastModifiedDate":"2024-02-14"},{"lineNumber":144,"author":{"gitId":"nigel27022001"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":145,"author":{"gitId":"nigel27022001"},"content":"            DateTimeFormatter dTFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-14"},{"lineNumber":146,"author":{"gitId":"nigel27022001"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(dateString, dTFormatter);","lastModifiedDate":"2024-02-14"},{"lineNumber":147,"author":{"gitId":"nigel27022001"},"content":"            return date;","lastModifiedDate":"2024-02-14"},{"lineNumber":148,"author":{"gitId":"nigel27022001"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":149,"author":{"gitId":"nigel27022001"},"content":"            throw new DukeException(\"Pengu thinks that you need to put the date in this format: yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-14"},{"lineNumber":150,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":151,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":152,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":153,"author":{"gitId":"nigel27022001"},"content":"    private static Task parseTodo(String userInput) {","lastModifiedDate":"2024-02-14"},{"lineNumber":154,"author":{"gitId":"nigel27022001"},"content":"        String[] descriptionArr \u003d userInput.split(\" \");","lastModifiedDate":"2024-02-14"},{"lineNumber":155,"author":{"gitId":"nigel27022001"},"content":"        StringBuilder descBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-14"},{"lineNumber":156,"author":{"gitId":"nigel27022001"},"content":"        for (int k \u003d 1; k \u003c descriptionArr.length; k++) {","lastModifiedDate":"2024-02-14"},{"lineNumber":157,"author":{"gitId":"nigel27022001"},"content":"            if (k \u003d\u003d descriptionArr.length - 1) {","lastModifiedDate":"2024-02-14"},{"lineNumber":158,"author":{"gitId":"nigel27022001"},"content":"                descBuilder.append(descriptionArr[k]);","lastModifiedDate":"2024-02-14"},{"lineNumber":159,"author":{"gitId":"nigel27022001"},"content":"            } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":160,"author":{"gitId":"nigel27022001"},"content":"                descBuilder.append(descriptionArr[k] + \" \");","lastModifiedDate":"2024-02-14"},{"lineNumber":161,"author":{"gitId":"nigel27022001"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":162,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":163,"author":{"gitId":"nigel27022001"},"content":"        return new ToDo(descBuilder.toString());","lastModifiedDate":"2024-02-14"},{"lineNumber":164,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":165,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":166,"author":{"gitId":"nigel27022001"},"content":"    private static Task parseDeadline(String userInput) throws DukeException {","lastModifiedDate":"2024-02-14"},{"lineNumber":167,"author":{"gitId":"nigel27022001"},"content":"        String[] descriptionArr \u003d userInput.split(\" \");","lastModifiedDate":"2024-02-14"},{"lineNumber":168,"author":{"gitId":"nigel27022001"},"content":"        int byIndex \u003d Arrays.asList(descriptionArr).indexOf(\"/by\");","lastModifiedDate":"2024-02-14"},{"lineNumber":169,"author":{"gitId":"nigel27022001"},"content":"        StringBuilder descBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-14"},{"lineNumber":170,"author":{"gitId":"nigel27022001"},"content":"        for (int k \u003d 1; k \u003c byIndex; k++) {","lastModifiedDate":"2024-02-14"},{"lineNumber":171,"author":{"gitId":"nigel27022001"},"content":"            if (k \u003d\u003d byIndex - 1) {","lastModifiedDate":"2024-02-14"},{"lineNumber":172,"author":{"gitId":"nigel27022001"},"content":"                descBuilder.append(descriptionArr[k]);","lastModifiedDate":"2024-02-14"},{"lineNumber":173,"author":{"gitId":"nigel27022001"},"content":"            } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":174,"author":{"gitId":"nigel27022001"},"content":"                descBuilder.append(descriptionArr[k] + \" \");","lastModifiedDate":"2024-02-14"},{"lineNumber":175,"author":{"gitId":"nigel27022001"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":176,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":177,"author":{"gitId":"nigel27022001"},"content":"        StringBuilder byBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-14"},{"lineNumber":178,"author":{"gitId":"nigel27022001"},"content":"        for (int k \u003d byIndex + 1; k \u003c descriptionArr.length; k++) {","lastModifiedDate":"2024-02-14"},{"lineNumber":179,"author":{"gitId":"nigel27022001"},"content":"            if (k \u003d\u003d descriptionArr.length - 1) {","lastModifiedDate":"2024-02-14"},{"lineNumber":180,"author":{"gitId":"nigel27022001"},"content":"                byBuilder.append(descriptionArr[k]);","lastModifiedDate":"2024-02-14"},{"lineNumber":181,"author":{"gitId":"nigel27022001"},"content":"            } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":182,"author":{"gitId":"nigel27022001"},"content":"                byBuilder.append(descriptionArr[k] + \" \");","lastModifiedDate":"2024-02-14"},{"lineNumber":183,"author":{"gitId":"nigel27022001"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":184,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":185,"author":{"gitId":"nigel27022001"},"content":"        return new Deadline(descBuilder.toString(), checkDates(byBuilder.toString()));","lastModifiedDate":"2024-02-14"},{"lineNumber":186,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":187,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":188,"author":{"gitId":"nigel27022001"},"content":"    private static Task parseEvent(String userInput) throws DukeException {","lastModifiedDate":"2024-02-14"},{"lineNumber":189,"author":{"gitId":"nigel27022001"},"content":"        String[] descriptionArr \u003d userInput.split(\" \");","lastModifiedDate":"2024-02-14"},{"lineNumber":190,"author":{"gitId":"nigel27022001"},"content":"        int fromIndex \u003d Arrays.asList(descriptionArr).indexOf(\"/from\");","lastModifiedDate":"2024-02-14"},{"lineNumber":191,"author":{"gitId":"nigel27022001"},"content":"        StringBuilder descBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-14"},{"lineNumber":192,"author":{"gitId":"nigel27022001"},"content":"        for (int k \u003d 1; k \u003c fromIndex; k++) {","lastModifiedDate":"2024-02-14"},{"lineNumber":193,"author":{"gitId":"nigel27022001"},"content":"            if (k \u003d\u003d fromIndex - 1) {","lastModifiedDate":"2024-02-14"},{"lineNumber":194,"author":{"gitId":"nigel27022001"},"content":"                descBuilder.append(descriptionArr[k]);","lastModifiedDate":"2024-02-14"},{"lineNumber":195,"author":{"gitId":"nigel27022001"},"content":"            } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":196,"author":{"gitId":"nigel27022001"},"content":"                descBuilder.append(descriptionArr[k] + \" \");","lastModifiedDate":"2024-02-14"},{"lineNumber":197,"author":{"gitId":"nigel27022001"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":198,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":199,"author":{"gitId":"nigel27022001"},"content":"        int toIndex \u003d Arrays.asList(descriptionArr).indexOf(\"/to\");","lastModifiedDate":"2024-02-14"},{"lineNumber":200,"author":{"gitId":"nigel27022001"},"content":"        StringBuilder fromBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-14"},{"lineNumber":201,"author":{"gitId":"nigel27022001"},"content":"        for (int k \u003d fromIndex + 1; k \u003c toIndex; k++) {","lastModifiedDate":"2024-02-14"},{"lineNumber":202,"author":{"gitId":"nigel27022001"},"content":"            if (k \u003d\u003d toIndex - 1) {","lastModifiedDate":"2024-02-14"},{"lineNumber":203,"author":{"gitId":"nigel27022001"},"content":"                fromBuilder.append(descriptionArr[k]);","lastModifiedDate":"2024-02-14"},{"lineNumber":204,"author":{"gitId":"nigel27022001"},"content":"            } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":205,"author":{"gitId":"nigel27022001"},"content":"                fromBuilder.append(descriptionArr[k] + \" \");","lastModifiedDate":"2024-02-14"},{"lineNumber":206,"author":{"gitId":"nigel27022001"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":207,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":208,"author":{"gitId":"nigel27022001"},"content":"        StringBuilder toBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-14"},{"lineNumber":209,"author":{"gitId":"nigel27022001"},"content":"        for (int k \u003d toIndex + 1; k \u003c descriptionArr.length; k++) {","lastModifiedDate":"2024-02-14"},{"lineNumber":210,"author":{"gitId":"nigel27022001"},"content":"            if (k \u003d\u003d descriptionArr.length - 1) {","lastModifiedDate":"2024-02-14"},{"lineNumber":211,"author":{"gitId":"nigel27022001"},"content":"                toBuilder.append(descriptionArr[k]);","lastModifiedDate":"2024-02-14"},{"lineNumber":212,"author":{"gitId":"nigel27022001"},"content":"            } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":213,"author":{"gitId":"nigel27022001"},"content":"                toBuilder.append(descriptionArr[k] + \" \");","lastModifiedDate":"2024-02-14"},{"lineNumber":214,"author":{"gitId":"nigel27022001"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":215,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":216,"author":{"gitId":"nigel27022001"},"content":"        return new Event(descBuilder.toString(), checkDates(fromBuilder.toString()),","lastModifiedDate":"2024-02-14"},{"lineNumber":217,"author":{"gitId":"nigel27022001"},"content":"                checkDates(toBuilder.toString()));","lastModifiedDate":"2024-02-14"},{"lineNumber":218,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":219,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":220,"author":{"gitId":"nigel27022001"},"content":"    private static Task parseFileDeadline(String fileInput) throws DukeException {","lastModifiedDate":"2024-02-14"},{"lineNumber":221,"author":{"gitId":"nigel27022001"},"content":"        DateTimeFormatter dTFormatter \u003d DateTimeFormatter.ofPattern(\"MMM-dd-yyyy HHmm\");","lastModifiedDate":"2024-02-14"},{"lineNumber":222,"author":{"gitId":"nigel27022001"},"content":"        String infoString \u003d fileInput.substring(7);","lastModifiedDate":"2024-02-14"},{"lineNumber":223,"author":{"gitId":"nigel27022001"},"content":"        String[] strArr \u003d infoString.split(\" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":224,"author":{"gitId":"nigel27022001"},"content":"        int byIndex \u003d Arrays.asList(strArr).indexOf(\"(by:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":225,"author":{"gitId":"nigel27022001"},"content":"        StringBuilder descBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-01"},{"lineNumber":226,"author":{"gitId":"nigel27022001"},"content":"        for (int k \u003d 0; k \u003c byIndex; k++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":227,"author":{"gitId":"nigel27022001"},"content":"            if (k \u003d\u003d byIndex - 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":228,"author":{"gitId":"nigel27022001"},"content":"                descBuilder.append(strArr[k]);","lastModifiedDate":"2024-02-01"},{"lineNumber":229,"author":{"gitId":"nigel27022001"},"content":"            } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":230,"author":{"gitId":"nigel27022001"},"content":"                descBuilder.append(strArr[k] + \" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":231,"author":{"gitId":"nigel27022001"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":232,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":233,"author":{"gitId":"nigel27022001"},"content":"        StringBuilder byBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-01"},{"lineNumber":234,"author":{"gitId":"nigel27022001"},"content":"        for (int k \u003d byIndex + 1; k \u003c strArr.length; k++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":235,"author":{"gitId":"nigel27022001"},"content":"            if (k \u003d\u003d strArr.length - 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":236,"author":{"gitId":"nigel27022001"},"content":"                byBuilder.append(strArr[k]);","lastModifiedDate":"2024-02-01"},{"lineNumber":237,"author":{"gitId":"nigel27022001"},"content":"            } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":238,"author":{"gitId":"nigel27022001"},"content":"                byBuilder.append(strArr[k] + \" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":239,"author":{"gitId":"nigel27022001"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":240,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":241,"author":{"gitId":"nigel27022001"},"content":"        if (byBuilder.toString().length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":242,"author":{"gitId":"nigel27022001"},"content":"            throw new DukeException(\"Wrong File Format\");","lastModifiedDate":"2024-02-01"},{"lineNumber":243,"author":{"gitId":"nigel27022001"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":244,"author":{"gitId":"nigel27022001"},"content":"            String dateTimeStr \u003d byBuilder.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":245,"author":{"gitId":"nigel27022001"},"content":"            dateTimeStr \u003d dateTimeStr.substring(0, dateTimeStr.length() - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":246,"author":{"gitId":"nigel27022001"},"content":"            LocalDateTime byTime \u003d LocalDateTime.parse(dateTimeStr, dTFormatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":247,"author":{"gitId":"nigel27022001"},"content":"            return new Deadline(descBuilder.toString(), byTime);","lastModifiedDate":"2024-02-14"},{"lineNumber":248,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":249,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":250,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":251,"author":{"gitId":"nigel27022001"},"content":"    private static Task parseFileEvent(String fileInput) throws DukeException {","lastModifiedDate":"2024-02-14"},{"lineNumber":252,"author":{"gitId":"nigel27022001"},"content":"        DateTimeFormatter dTFormatter \u003d DateTimeFormatter.ofPattern(\"MMM-dd-yyyy HHmm\");","lastModifiedDate":"2024-02-14"},{"lineNumber":253,"author":{"gitId":"nigel27022001"},"content":"        String infoString \u003d fileInput.substring(7);","lastModifiedDate":"2024-02-14"},{"lineNumber":254,"author":{"gitId":"nigel27022001"},"content":"        String[] strArr \u003d infoString.split(\" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":255,"author":{"gitId":"nigel27022001"},"content":"        int fromIndex \u003d Arrays.asList(strArr).indexOf(\"(from:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":256,"author":{"gitId":"nigel27022001"},"content":"        StringBuilder descBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-01"},{"lineNumber":257,"author":{"gitId":"nigel27022001"},"content":"        for (int k \u003d 0; k \u003c fromIndex; k++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":258,"author":{"gitId":"nigel27022001"},"content":"            if (k \u003d\u003d fromIndex - 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":259,"author":{"gitId":"nigel27022001"},"content":"                descBuilder.append(strArr[k]);","lastModifiedDate":"2024-02-01"},{"lineNumber":260,"author":{"gitId":"nigel27022001"},"content":"            } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":261,"author":{"gitId":"nigel27022001"},"content":"                descBuilder.append(strArr[k] + \" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":262,"author":{"gitId":"nigel27022001"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":263,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":264,"author":{"gitId":"nigel27022001"},"content":"        int toIndex \u003d Arrays.asList(strArr).indexOf(\"to:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":265,"author":{"gitId":"nigel27022001"},"content":"        StringBuilder fromBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-01"},{"lineNumber":266,"author":{"gitId":"nigel27022001"},"content":"        for (int k \u003d fromIndex + 1; k \u003c toIndex; k++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":267,"author":{"gitId":"nigel27022001"},"content":"            if (k \u003d\u003d toIndex - 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":268,"author":{"gitId":"nigel27022001"},"content":"                fromBuilder.append(strArr[k]);","lastModifiedDate":"2024-02-01"},{"lineNumber":269,"author":{"gitId":"nigel27022001"},"content":"            } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":270,"author":{"gitId":"nigel27022001"},"content":"                fromBuilder.append(strArr[k] + \" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":271,"author":{"gitId":"nigel27022001"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":272,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":273,"author":{"gitId":"nigel27022001"},"content":"        StringBuilder toBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-01"},{"lineNumber":274,"author":{"gitId":"nigel27022001"},"content":"        for (int k \u003d toIndex + 1; k \u003c strArr.length; k++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":275,"author":{"gitId":"nigel27022001"},"content":"            if (k \u003d\u003d strArr.length - 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":276,"author":{"gitId":"nigel27022001"},"content":"                toBuilder.append(strArr[k]);","lastModifiedDate":"2024-02-01"},{"lineNumber":277,"author":{"gitId":"nigel27022001"},"content":"            } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":278,"author":{"gitId":"nigel27022001"},"content":"                toBuilder.append(strArr[k] + \" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":279,"author":{"gitId":"nigel27022001"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":280,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":281,"author":{"gitId":"nigel27022001"},"content":"        if (fromBuilder.toString().length() \u003d\u003d 0 || toBuilder.toString().length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":282,"author":{"gitId":"nigel27022001"},"content":"            throw new DukeException(\"Wrong File Format\");","lastModifiedDate":"2024-02-01"},{"lineNumber":283,"author":{"gitId":"nigel27022001"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":284,"author":{"gitId":"nigel27022001"},"content":"            String fromDateTimeStr \u003d fromBuilder.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":285,"author":{"gitId":"nigel27022001"},"content":"            String toDateTimeStr \u003d toBuilder.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":286,"author":{"gitId":"nigel27022001"},"content":"            fromDateTimeStr \u003d fromDateTimeStr.substring(0, fromDateTimeStr.length());","lastModifiedDate":"2024-02-01"},{"lineNumber":287,"author":{"gitId":"nigel27022001"},"content":"            toDateTimeStr \u003d toDateTimeStr.substring(0, toDateTimeStr.length() - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":288,"author":{"gitId":"nigel27022001"},"content":"            LocalDateTime fromTime \u003d LocalDateTime.parse(fromDateTimeStr, dTFormatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":289,"author":{"gitId":"nigel27022001"},"content":"            LocalDateTime toTime \u003d LocalDateTime.parse(toDateTimeStr, dTFormatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":290,"author":{"gitId":"nigel27022001"},"content":"            return new Event(descBuilder.toString(), fromTime, toTime);","lastModifiedDate":"2024-02-14"},{"lineNumber":291,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":292,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":293,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"nigel27022001":293}},{"path":"src/main/java/duke/utility/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"package duke.utility;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":" * Class representing a storage which stores {@link Task}s from past {@link TaskList}s.","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"    /** Boolean Value stating whether the storage file contains Tasks. */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"    public boolean isOccupied;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"    /** File Object that stores Tasks from previous sessions. */","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"    private File storageFile;","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"     * Constructs a Storage Object with storage based on FilePath.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"     * @param FilePath FilePath where Tasks will be stored and loaded.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"nigel27022001"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"    public Storage(String FilePath) throws DukeException, IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"        storageFile \u003d new File(FilePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"nigel27022001"},"content":"        if (!storageFile.getParentFile().exists()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"nigel27022001"},"content":"            storageFile.getParentFile().mkdirs();","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"nigel27022001"},"content":"        if (!storageFile.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"nigel27022001"},"content":"            storageFile.createNewFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"nigel27022001"},"content":"        if (storageFile.length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"nigel27022001"},"content":"            isOccupied \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"nigel27022001"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"nigel27022001"},"content":"            isOccupied \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"nigel27022001"},"content":"     * Returns an ArrayList of Tasks based on Tasks stored in File from previous sessions.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"nigel27022001"},"content":"     * @return Arraylist of Tasks stored in file.","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"nigel27022001"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"nigel27022001"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"nigel27022001"},"content":"    public ArrayList\u003cTask\u003e loadStorage() throws DukeException, IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"nigel27022001"},"content":"        Scanner s \u003d new Scanner(storageFile);","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"nigel27022001"},"content":"        ArrayList\u003cTask\u003e loadedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"nigel27022001"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"nigel27022001"},"content":"            String storedInput \u003d s.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"nigel27022001"},"content":"            Task currTask \u003d Parser.parseFileLine(storedInput);","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"nigel27022001"},"content":"            loadedList.add(currTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"nigel27022001"},"content":"        return loadedList;","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"nigel27022001"},"content":"     * Saves Tasks in the ArrayList into the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"nigel27022001"},"content":"     * @param taskList Arraylist of Tasks to be stored.","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"nigel27022001"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"nigel27022001"},"content":"    public void saveStorage(ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"nigel27022001"},"content":"        FileWriter fw \u003d new FileWriter(storageFile, false);","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"nigel27022001"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"nigel27022001"},"content":"            fw.append(t.toString() + \"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"nigel27022001"},"content":"        fw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"nigel27022001":73}},{"path":"src/main/java/duke/utility/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"package duke.utility;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":" * Class that represents a TaskList that stores {@link Task}s.","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"    /** ArrayList of Tasks. */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"    private ArrayList\u003cTask\u003e taskStore;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"     * Constructs a TaskList object.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"        this.taskStore \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"     * Constructs a TaskList object with the Tasks inputted.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"     * @param loadedTaskStore ArrayList of Tasks to be stored in the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"nigel27022001"},"content":"    public TaskList(ArrayList\u003cTask\u003e loadedTaskStore) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"        this.taskStore \u003d loadedTaskStore;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"nigel27022001"},"content":"     * Marks Task in the TaskList as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"nigel27022001"},"content":"     * @param index Index of the Task in the TaskList to be marked as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"nigel27022001"},"content":"     * @return Task Object that was marked.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"nigel27022001"},"content":"    public Task markTask(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"nigel27022001"},"content":"        Task currTask \u003d taskStore.get(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"nigel27022001"},"content":"        currTask.updateTaskStatus(true);","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"nigel27022001"},"content":"        return currTask;","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"nigel27022001"},"content":"     * Unmarks Task in the TaskList as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"nigel27022001"},"content":"     * @param index Index of the Task in the TaskList to be marked as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"nigel27022001"},"content":"     * @return Task Object that was unmarked.","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"nigel27022001"},"content":"    public Task unmarkTask(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"nigel27022001"},"content":"        Task currTask \u003d taskStore.get(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"nigel27022001"},"content":"        currTask.updateTaskStatus(false);","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"nigel27022001"},"content":"        return currTask;","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"nigel27022001"},"content":"     * Deletes Task from the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"nigel27022001"},"content":"     * @param index Index of the Task in the TaskList to be deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"nigel27022001"},"content":"     * @return Tasks Object that was removed from the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"nigel27022001"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"nigel27022001"},"content":"        Task deletedTask \u003d taskStore.remove(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"nigel27022001"},"content":"        return deletedTask;","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"nigel27022001"},"content":"     * Adds Task into the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"nigel27022001"},"content":"     * @param taskToBeAdded Task Object to be added in the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"nigel27022001"},"content":"    public void addTask(Task taskToBeAdded) {","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"nigel27022001"},"content":"        taskStore.add(taskToBeAdded);","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"nigel27022001"},"content":"     * Returns the TaskStore.","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"nigel27022001"},"content":"     * @return ArrayList containing Tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"nigel27022001"},"content":"    public ArrayList\u003cTask\u003e getTaskStore() {","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"nigel27022001"},"content":"        return taskStore;","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"nigel27022001"},"content":"     * Returns the size of the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"nigel27022001"},"content":"     * @return int value of the size of the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"nigel27022001"},"content":"    public int listSize() {","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"nigel27022001"},"content":"        return taskStore.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"nigel27022001"},"content":"    public ArrayList\u003cTask\u003e findTask(String keyword) {","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"nigel27022001"},"content":"        ArrayList\u003cTask\u003e filterList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"nigel27022001"},"content":"        for (int k \u003d 0; k \u003c this.listSize(); k++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"nigel27022001"},"content":"            if (this.taskStore.get(k).getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"nigel27022001"},"content":"                filterList.add(this.taskStore.get(k));","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"nigel27022001"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"nigel27022001"},"content":"        return filterList;","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"nigel27022001":101}},{"path":"src/main/java/duke/utility/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"package duke.utility;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":" * Class that represents a UserInterface that handles all user interactions.","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"public class Ui {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"     * Prints out a welcome message.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"    public String showWelcome() {","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"        return \"Hello! I\u0027m Pengu\\n\" + \"What can I do for you?\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"                + \"\\nDid you know that the noise penguins make are called \\\"honks\\\"\";","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"     * Prints out a exit message.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"    public String showExit() {","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"        return \"Bye. Hope to see you again soon! **HONK HONK**\";","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"     * Prints out the Tasks in the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"nigel27022001"},"content":"     * @param taskList ArrayList of Tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"nigel27022001"},"content":"    public String showTaskListContents(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"nigel27022001"},"content":"        String output;","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"nigel27022001"},"content":"        int storageSize \u003d taskList.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"nigel27022001"},"content":"        if (storageSize \u003d\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"nigel27022001"},"content":"            output \u003d \"*Honk!* You currently have no tasks\";","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"nigel27022001"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"nigel27022001"},"content":"            output \u003d \"*Honk!* Pengu has listed your current tasks below:\";","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"nigel27022001"},"content":"            for (int k \u003d 0; k \u003c storageSize; k++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"nigel27022001"},"content":"                int curr \u003d k + 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"nigel27022001"},"content":"                Task currTask \u003d taskList.get(k);","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"nigel27022001"},"content":"                output \u003d output + \"\\n\" + curr + \". \" + currTask.toString();","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"nigel27022001"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"nigel27022001"},"content":"        return output;","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"nigel27022001"},"content":"     * Prints out the marked Task Object.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"nigel27022001"},"content":"     * @param markedTask Task Object that was marked.","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"nigel27022001"},"content":"    public String showMarkedTask(Task markedTask) {","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"nigel27022001"},"content":"        return \"*Honk!* Good Job!, Pengu has marked this task as done:\\n\" + markedTask.toString();","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"nigel27022001"},"content":"     * Prints out the Task Object that was unmarked.","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"nigel27022001"},"content":"     * @param unmarkedTask Task Object taht was unmarked.","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"nigel27022001"},"content":"    public String showUnmarkedTask(Task unmarkedTask) {","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"nigel27022001"},"content":"        return \"*Honk!* Pengu has marked this task as not done yet:\\n\" + unmarkedTask.toString();","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"nigel27022001"},"content":"     * Prints the Task that was deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"nigel27022001"},"content":"     * @param deletedTask Task Object that was deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"nigel27022001"},"content":"     * @param taskStoreSize int of the size of TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"nigel27022001"},"content":"    public String showDeletedTask(Task deletedTask, int taskStoreSize) {","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"nigel27022001"},"content":"        String output \u003d String.format(\"*Honk* Pengu has removed the following task:\\n\" + deletedTask.toString()","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"nigel27022001"},"content":"                + \"\\nNow you have %s tasks left\", taskStoreSize);","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"nigel27022001"},"content":"        return output;","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"nigel27022001"},"content":"     * Prints out the error message.","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"nigel27022001"},"content":"     * @param errMessage error message.","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"nigel27022001"},"content":"    public String showError(String errMessage) {","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"nigel27022001"},"content":"        return errMessage;","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"nigel27022001"},"content":"     * Prints out the added Task.","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"nigel27022001"},"content":"     * @param addedTask Task Object that was added.","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"nigel27022001"},"content":"     * @param taskStoreSize int of the size of the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"nigel27022001"},"content":"    public String showAddedTask(Task addedTask, int taskStoreSize) {","lastModifiedDate":"2024-02-09"},{"lineNumber":93,"author":{"gitId":"nigel27022001"},"content":"        String output \u003d String.format(\"*Honk! Honk!* Pengu has added this task:\\n\" + addedTask.toString()","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"nigel27022001"},"content":"                + \"\\nGet back to work! you have %s tasks in the list\\n\", taskStoreSize);","lastModifiedDate":"2024-02-09"},{"lineNumber":95,"author":{"gitId":"nigel27022001"},"content":"        return output;","lastModifiedDate":"2024-02-09"},{"lineNumber":96,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"nigel27022001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"nigel27022001"},"content":"     * Prints out the tasks that contains the keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"nigel27022001"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"nigel27022001"},"content":"     * @param filteredList ArrayList of the Tasks that contain the keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"nigel27022001"},"content":"     * @param keyword String containing the keyword that was used to search within the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"nigel27022001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"nigel27022001"},"content":"    public String showFilteredTask(ArrayList\u003cTask\u003e filteredList, String keyword) {","lastModifiedDate":"2024-02-09"},{"lineNumber":105,"author":{"gitId":"nigel27022001"},"content":"        String output;","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"nigel27022001"},"content":"        if (filteredList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"nigel27022001"},"content":"            output \u003d String.format(\"*Honk! no tasks with %s keyword found! \"","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"nigel27022001"},"content":"                    + \"Maybe try looking at the list command\", keyword);","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"nigel27022001"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"nigel27022001"},"content":"            output \u003d String.format(\"*Honk! Pengu has found the following tasks containing \"","lastModifiedDate":"2024-02-09"},{"lineNumber":111,"author":{"gitId":"nigel27022001"},"content":"                    + \"the %s keyword:\", keyword);","lastModifiedDate":"2024-02-09"},{"lineNumber":112,"author":{"gitId":"nigel27022001"},"content":"            for (int k \u003d 0; k \u003c filteredList.size(); k++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"nigel27022001"},"content":"                int curr \u003d k + 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"nigel27022001"},"content":"                Task currTask \u003d filteredList.get(k);","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"nigel27022001"},"content":"                output \u003d output + \"\\n\" + curr + \". \" + currTask.toString();","lastModifiedDate":"2024-02-09"},{"lineNumber":116,"author":{"gitId":"nigel27022001"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"nigel27022001"},"content":"        return output;","lastModifiedDate":"2024-02-09"},{"lineNumber":119,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":121,"author":{"gitId":"nigel27022001"},"content":"    public String showUpdatedTask(Task taskToBeUpdated) {","lastModifiedDate":"2024-02-14"},{"lineNumber":122,"author":{"gitId":"nigel27022001"},"content":"        return String.format(\"*Honk! Pengu has updated the following task:\"","lastModifiedDate":"2024-02-14"},{"lineNumber":123,"author":{"gitId":"nigel27022001"},"content":"                + \"\\n %s\", taskToBeUpdated.toString());","lastModifiedDate":"2024-02-14"},{"lineNumber":124,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":125,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"nigel27022001":125}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"nigel27022001":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"                \u003cVBox id\u003d\"10\" fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #B5E2FA;\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"nigel27022001":19}},{"path":"src/test/java/duke/command/DeleteTaskCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"import duke.utility.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"public class DeleteTaskCommandTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"    public void execute_invalidTaskIndex_exceptionThrown() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"            Command testCommand \u003d new DeleteTaskCommand(1);","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"            testCommand.execute(new TaskList(), new Ui(), new Storage(\"./data/tasks.txt\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"            fail();","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"            assertEquals(\"*HONK* Pengu thinks you need a valid task number to delete, \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"                    \"consider checking the list command\", e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"nigel27022001"},"content":"    public void execute_validTaskIndex_success() throws DukeException, IOException{","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"nigel27022001"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"nigel27022001"},"content":"        testList.addTask(new ToDo(\"task index 0\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"nigel27022001"},"content":"        Command testCommand \u003d new DeleteTaskCommand(0);","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"nigel27022001"},"content":"        testCommand.execute(testList, new Ui(), new Storage(\"./data/tasks.txt\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"nigel27022001"},"content":"        assertEquals(0, testList.listSize());","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"nigel27022001":36}},{"path":"src/test/java/duke/utility/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"package duke.utility;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"    public void checkDates_invalidDataTimeFormat_exceptionThrown() {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"            String testInput \u003d \"Jan-20-2021 1800\";","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"            Parser.checkDates(testInput);","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"            fail();","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"            assertEquals(\"Pengu thinks that you need to put the date in this format: yyyy-MM-dd HHmm\", e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"    public void parseInstructions_invalidCommandFormat_exceptionThrown() {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"nigel27022001"},"content":"            String testInput \u003d \"Fake-input\";","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"nigel27022001"},"content":"            Parser.parseInstructions(testInput);","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"            fail();","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"nigel27022001"},"content":"            assertEquals(\"*HONK* Pengu has never seen such a command before, \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"nigel27022001"},"content":"                    \"some commands Pengu can do are: list, todo, deadline\", e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"nigel27022001"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"nigel27022001"},"content":"    public void parseFileLine_correctFormat_success() {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"nigel27022001"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"nigel27022001"},"content":"            String testInput \u003d \"[E][ ] test event (from: Oct-20-1900 1800 to: Oct-20-1900 1800)\";","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"nigel27022001"},"content":"            Task testOutput \u003d Parser.parseFileLine(testInput);","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"nigel27022001"},"content":"            assertEquals(testInput, testOutput.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"nigel27022001"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"nigel27022001"},"content":"            fail();","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"nigel27022001":44}},{"path":"src/test/java/duke/utility/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"package duke.utility;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"    public void markTask_validTodoTaskInput_success() {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"        testList.addTask(new ToDo(\"test todo\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"        testList.markTask(0);","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"        assertEquals(testList.getTaskStore().get(0).toString(), \"[T][X] test todo\" );","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"    public void deletedTask_validTask_success() {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"        testList.addTask(new ToDo(\"test1\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"        testList.addTask(new ToDo(\"test2\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"        testList.deleteTask(1);","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"nigel27022001"},"content":"        testList.deleteTask(0);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"nigel27022001"},"content":"        assertEquals(0, testList.listSize());","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"nigel27022001":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"todo homework","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"deadline assignment /by thursday","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"event exam /from may /to june","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"mark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"nigel27022001":9}}]
