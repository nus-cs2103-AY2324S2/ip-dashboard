[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"# duke.Duke project template","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kinjalagarwal1810":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"    mainClass.set(\"seedu.duke.Main\")","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kinjalagarwal1810":15,"-":41}},{"path":"data/jamie.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"E | 0 | met gala | 19/03/2024 1600 | 19/03/2024 2200","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"T | 0 | read book","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"T | 0 | go school","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"kinjalagarwal1810":3}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":" * containing text from the speaker. This is used in the GUI to display messages from the user and Duke.","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"            e.printStackTrace(); // Consider better error handling or logging","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Flips the dialog box to alternate the display of the ImageView and text, typically for differentiating","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"     * between user messages and Duke\u0027s responses.","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"    private void flip() {","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Creates a DialogBox for the user with specified text and image.","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param text The message text.","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param img  The user\u0027s image.","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A new instance of DialogBox configured for the user.","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Creates a DialogBox for Duke with specified text and image, flipping the orientation.","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param text The message text.","lastModifiedDate":"2024-02-16"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param img  Duke\u0027s image.","lastModifiedDate":"2024-02-16"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A new instance of DialogBox configured for Duke.","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"        db.flip(); // Flips the dialog box to differentiate Duke\u0027s messages from the user\u0027s messages","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"        return db;","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"kinjalagarwal1810":75}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":" * The Duke program implements an application that manages a list of tasks.","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":" * It allows adding, deleting, and completing tasks, as well as listing all the current tasks.","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"public class Duke extends Application {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Duke() {","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"        this(\"./data/jamie.txt\");","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"        initializeComponents(filePath);","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"    private void initializeComponents(String filePath) {","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"        } catch (JamieException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"            tasks \u003d new TaskList(); // Start with an empty task list if there\u0027s an error","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"        setupUiComponents(stage);","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"        setupEventHandlers();","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"    private void setupUiComponents(Stage stage) {","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"kinjalagarwal1810"},"content":"        AnchorPane mainLayout \u003d new AnchorPane(scrollPane, userInput, sendButton);","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"        configureStage(stage);","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"        stage.show();","lastModifiedDate":"2024-02-08"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"kinjalagarwal1810"},"content":"    private void configureStage(Stage stage) {","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"kinjalagarwal1810"},"content":"        stage.setTitle(\"Jamie\");","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"kinjalagarwal1810"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"kinjalagarwal1810"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"kinjalagarwal1810"},"content":"        setLayoutSizes();","lastModifiedDate":"2024-02-16"},{"lineNumber":85,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":86,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"kinjalagarwal1810"},"content":"    private void setLayoutSizes() {","lastModifiedDate":"2024-02-16"},{"lineNumber":88,"author":{"gitId":"kinjalagarwal1810"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"kinjalagarwal1810"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"kinjalagarwal1810"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"kinjalagarwal1810"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":92,"author":{"gitId":"kinjalagarwal1810"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":94,"author":{"gitId":"kinjalagarwal1810"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-08"},{"lineNumber":95,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":96,"author":{"gitId":"kinjalagarwal1810"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"kinjalagarwal1810"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":98,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"kinjalagarwal1810"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":100,"author":{"gitId":"kinjalagarwal1810"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":101,"author":{"gitId":"kinjalagarwal1810"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":102,"author":{"gitId":"kinjalagarwal1810"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":103,"author":{"gitId":"kinjalagarwal1810"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":104,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":105,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":106,"author":{"gitId":"kinjalagarwal1810"},"content":"    private void setupEventHandlers() {","lastModifiedDate":"2024-02-16"},{"lineNumber":107,"author":{"gitId":"kinjalagarwal1810"},"content":"        sendButton.setOnMouseClicked(event -\u003e handleUserInput());","lastModifiedDate":"2024-02-16"},{"lineNumber":108,"author":{"gitId":"kinjalagarwal1810"},"content":"        userInput.setOnAction(event -\u003e handleUserInput());","lastModifiedDate":"2024-02-16"},{"lineNumber":109,"author":{"gitId":"kinjalagarwal1810"},"content":"        dialogContainer.heightProperty().addListener(observable -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2024-02-16"},{"lineNumber":110,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":111,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":112,"author":{"gitId":"kinjalagarwal1810"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2024-02-08"},{"lineNumber":113,"author":{"gitId":"kinjalagarwal1810"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2024-02-08"},{"lineNumber":114,"author":{"gitId":"kinjalagarwal1810"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2024-02-08"},{"lineNumber":115,"author":{"gitId":"kinjalagarwal1810"},"content":"        return textToAdd;","lastModifiedDate":"2024-02-08"},{"lineNumber":116,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":117,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":118,"author":{"gitId":"kinjalagarwal1810"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-08"},{"lineNumber":119,"author":{"gitId":"kinjalagarwal1810"},"content":"        String userMessage \u003d userInput.getText();","lastModifiedDate":"2024-02-16"},{"lineNumber":120,"author":{"gitId":"kinjalagarwal1810"},"content":"        String response \u003d getResponse(userMessage);","lastModifiedDate":"2024-02-16"},{"lineNumber":121,"author":{"gitId":"kinjalagarwal1810"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-16"},{"lineNumber":122,"author":{"gitId":"kinjalagarwal1810"},"content":"                DialogBox.getUserDialog(userMessage, userImage),","lastModifiedDate":"2024-02-16"},{"lineNumber":123,"author":{"gitId":"kinjalagarwal1810"},"content":"                DialogBox.getDukeDialog(response, dukeImage));","lastModifiedDate":"2024-02-16"},{"lineNumber":124,"author":{"gitId":"kinjalagarwal1810"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-08"},{"lineNumber":125,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":126,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":127,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-12"},{"lineNumber":128,"author":{"gitId":"kinjalagarwal1810"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":129,"author":{"gitId":"kinjalagarwal1810"},"content":"            Command command \u003d parser.parse(input);","lastModifiedDate":"2024-02-14"},{"lineNumber":130,"author":{"gitId":"kinjalagarwal1810"},"content":"            return command.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-12"},{"lineNumber":131,"author":{"gitId":"kinjalagarwal1810"},"content":"        } catch (JamieException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":132,"author":{"gitId":"kinjalagarwal1810"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2024-02-16"},{"lineNumber":133,"author":{"gitId":"kinjalagarwal1810"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":134,"author":{"gitId":"kinjalagarwal1810"},"content":"            return \"Error getting response: \" + e.getMessage();","lastModifiedDate":"2024-02-16"},{"lineNumber":135,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":136,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":137,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"kinjalagarwal1810":137}},{"path":"src/main/java/duke/JamieException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":" * Represents an exception specific to the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":" * This exception is used to indicate errors that are specific to the Duke application\u0027s logic.","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"public class JamieException extends Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs a new JamieException with the specified detail message.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"     * This constructor initializes the exception with a message detailing the cause of the error,","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"     * which can later be retrieved using the getMessage() method inherited from the Throwable class.","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param message The detail message providing specific information about the exception and its cause.","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"    public JamieException(String message) {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"        super(message);","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":19}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":" * Launcher class to workaround classpath issues when launching a JavaFX application.","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":" * This class serves as the main entry point for the application. It is separated from the Main class","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":" * which extends Application to avoid module-path issues with JavaFX.","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"public class Launcher {","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Main method to launch the application.","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param args Command line arguments passed to the application.","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Launch the JavaFX application. The application\u0027s start method will be called.","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"kinjalagarwal1810":19}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":" * A GUI for Duke using FXML, setting up the primary stage and scene for the application.","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void init() throws Exception {","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"        super.init();","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Initialize your Duke object here to handle any initialization exceptions properly.","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.duke \u003d new Duke(\"./data/jamie.txt\");","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"            // Ensure the FXML file path is correct.","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"            if (Main.class.getResource(\"/view/MainWindow.fxml\") \u003d\u003d null) {","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"                throw new IOException(\"Cannot find FXML file.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"            // Load the root layout from the FXML.","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"            AnchorPane rootLayout \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"            Scene scene \u003d new Scene(rootLayout);","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"            // Set the Duke instance in the controller.","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"            MainWindow controller \u003d fxmlLoader.getController();","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"            if (controller \u003d\u003d null) {","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"                throw new IOException(\"Controller cannot be null.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"            controller.setDuke(duke);","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"            stage.show();","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"            System.exit(1); // Exit the application due to FXML loading failure.","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"        launch(args);","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"kinjalagarwal1810":58}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":" * Controller for MainWindow. Provides the layout for the other controls and handles user interaction.","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Initializes the controller class. This method is automatically called","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"     * after the fxml file has been loaded.","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"        String welcomeMessage \u003d ui.showWelcome();","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(welcomeMessage, dukeImage));","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Sets the Duke instance for the controller.","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param d The Duke instance to be used.","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Handles the action of the user pressing the send button or entering input.","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"     * It creates dialog boxes for the user input and Duke\u0027s reply, then clears the input.","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"     * It will also close the application if the user inputs \"bye\".","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"        String input \u003d userInput.getText().trim(); // Trim input to remove leading and trailing whitespaces","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (!input.isEmpty()) { // Check if the input is not empty","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"            String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"                    DialogBox.getDukeDialog(response, dukeImage));","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"            userInput.clear(); // Clear the input after processing","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"            if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"                closeMainWindow();","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Closes the main window and exits the application.","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"    private void closeMainWindow() {","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"        Platform.exit(); // Close the platform and exit the application","lastModifiedDate":"2024-02-16"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"kinjalagarwal1810":77}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.command.AddTaskCommand;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.command.CompleteTaskCommand;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.command.DeleteTaskCommand;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.command.ExitTaskCommand;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.command.FindTaskCommand;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.command.ListTasksCommand;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":" * Parser class responsible for interpreting user input and translating it","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":" * into commands that can be executed by the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"public class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Parses the user input into a Command object representing the action to be taken.","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"     * This method interprets the user input and translates it into specific","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"     * commands understood by the Duke application, such as adding, deleting, or completing tasks.","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param userInput The user input string to be parsed.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return Command object representing the action to be taken.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws JamieException If the user input cannot be understood or is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static Command parse(String userInput) throws JamieException {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"        String[] words \u003d userInput.trim().split(\"\\\\s+\", 2); // Split by whitespace, limit to 2 parts","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"        String commandWord \u003d words[0].toLowerCase();","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"        String commandArgs \u003d words.length \u003e 1 ? words[1] : \"\";","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"        switch (commandWord) {","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"            return new ExitTaskCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"        case \"list\":","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"            return new ListTasksCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"        case \"done\":","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"            return parseCompleteTaskCommand(commandArgs);","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"            return parseDeleteTaskCommand(commandArgs);","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"            return parseAddTodoCommand(commandArgs);","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"            return parseAddDeadlineCommand(commandArgs);","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"        case \"event\":","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"            return parseAddEventCommand(commandArgs);","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"        case \"find\":","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"            return new FindTaskCommand(commandArgs);","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"        default:","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new JamieException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"    private static Command parseCompleteTaskCommand(String args) throws JamieException {","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"            int index \u003d Integer.parseInt(args);","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"            return new CompleteTaskCommand(index);","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new JamieException(\"Invalid task number for completion.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"    private static Command parseDeleteTaskCommand(String args) throws JamieException {","lastModifiedDate":"2024-02-16"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"            int index \u003d Integer.parseInt(args);","lastModifiedDate":"2024-02-16"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"            return new DeleteTaskCommand(index);","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new JamieException(\"Invalid task number for deletion.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"    private static Command parseAddTodoCommand(String details) throws JamieException {","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (details.isBlank()) {","lastModifiedDate":"2024-02-16"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new JamieException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"kinjalagarwal1810"},"content":"        return new AddTaskCommand(new ToDo(details));","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"kinjalagarwal1810"},"content":"    private static Command parseAddDeadlineCommand(String details) throws JamieException {","lastModifiedDate":"2024-02-16"},{"lineNumber":82,"author":{"gitId":"kinjalagarwal1810"},"content":"        String[] parts \u003d details.split(\" /by \", 2);","lastModifiedDate":"2024-02-16"},{"lineNumber":83,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (parts.length \u003c 2 || parts[0].isBlank() || parts[1].isBlank()) {","lastModifiedDate":"2024-02-16"},{"lineNumber":84,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new JamieException(\"OOPS!!! Invalid format for deadline. \"","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"kinjalagarwal1810"},"content":"                    + \"Please use: deadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"kinjalagarwal1810"},"content":"        return new AddTaskCommand(new Deadline(parts[0], parts[1]));","lastModifiedDate":"2024-02-16"},{"lineNumber":88,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":89,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"kinjalagarwal1810"},"content":"    private static Command parseAddEventCommand(String details) throws JamieException {","lastModifiedDate":"2024-02-16"},{"lineNumber":91,"author":{"gitId":"kinjalagarwal1810"},"content":"        String[] eventDetails \u003d details.split(\" /at \", 2);","lastModifiedDate":"2024-02-16"},{"lineNumber":92,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (eventDetails.length \u003c 2 || eventDetails[0].isBlank() || eventDetails[1].isBlank()) {","lastModifiedDate":"2024-02-16"},{"lineNumber":93,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new JamieException(\"OOPS!!! Invalid format for event. \"","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"kinjalagarwal1810"},"content":"                    + \"Please use: event \u003cdescription\u003e /at \u003cdate/time\u003e\");","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"kinjalagarwal1810"},"content":"        String[] eventTiming \u003d eventDetails[1].split(\" /to \");","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"kinjalagarwal1810"},"content":"        return new AddTaskCommand(new Event(eventDetails[0], eventTiming[0], eventTiming[1]));","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":99}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.List;","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":" * Handles the storage of task data to and from a file.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":" * This includes loading tasks from a file when the program starts","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":" * and saving tasks to the file when they are added, deleted, or modified.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"public class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final String file;","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs a new Storage object with the specified file path for storing tasks.","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param file The path of the file where tasks are stored.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Storage(String file) {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"        assert file !\u003d null \u0026\u0026 !file.isEmpty() : \"File path cannot be null or empty\";","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.file \u003d file;","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Loads tasks from the specified file into a list.","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"     * If the file does not exist, an empty list is returned.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A list containing the loaded Task objects.","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws JamieException If an error occurs while parsing the file data.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"    public List\u003cTask\u003e load() throws JamieException {","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"        List\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"        try (Scanner scanner \u003d new Scanner(new BufferedReader(new FileReader(this.file)))) {","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"                String taskString \u003d scanner.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"                String[] splits \u003d taskString.split(\" \\\\| \"); // Splitting each part of the task","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"                switch (splits[0]) {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"                case \"T\":","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"                    Task toDo \u003d new ToDo(splits[2], \"1\".equals(splits[1]));","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"                    loadedTasks.add(toDo);","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"                case \"E\":","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"                    Task event \u003d new Event(splits[2], splits[3], splits[4], \"1\".equals(splits[1]));","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"                    loadedTasks.add(event);","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"                case \"D\":","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"                    Task deadline \u003d new Deadline(splits[2], splits[3], \"1\".equals(splits[1]));","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"                    loadedTasks.add(deadline);","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"                default:","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"                    throw new JamieException(\"Error occurred when reading data from storage file: \"","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"                            + \"Unrecognized task type.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"            // If file not found, consider it as starting fresh with no tasks","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"            // Alternatively, could throw new JamieException to inform the user or take other actions","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"kinjalagarwal1810"},"content":"            System.out.println(\"No existing task file found. Starting with an empty task list.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"        return loadedTasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Saves the current list of tasks in the TaskList to the file.","lastModifiedDate":"2024-02-16"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"     * The tasks are converted into a specific string format before being written to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param taskList The TaskList containing the tasks to be saved.","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void save(TaskList taskList) throws IOException {","lastModifiedDate":"2024-02-16"},{"lineNumber":83,"author":{"gitId":"kinjalagarwal1810"},"content":"        assert taskList !\u003d null : \"TaskList cannot be null when saving\";","lastModifiedDate":"2024-02-16"},{"lineNumber":84,"author":{"gitId":"kinjalagarwal1810"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks(); // Retrieve the list of tasks from TaskList","lastModifiedDate":"2024-02-16"},{"lineNumber":85,"author":{"gitId":"kinjalagarwal1810"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.file))) {","lastModifiedDate":"2024-02-16"},{"lineNumber":86,"author":{"gitId":"kinjalagarwal1810"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-02-16"},{"lineNumber":87,"author":{"gitId":"kinjalagarwal1810"},"content":"                writer.write(task.toFileString());","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"kinjalagarwal1810"},"content":"                writer.newLine();","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Note: IOException is thrown to the caller to handle as this could be a user-critical error.","lastModifiedDate":"2024-02-16"},{"lineNumber":92,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":93}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":" * Represents a list of tasks. This class is responsible for managing tasks,","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":" * including adding, deleting, and completing tasks, as well as retrieving","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":" * information about the tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"public class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Creates an empty TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Creates a TaskList with a pre-existing list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param tasks The initial list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"        assert tasks !\u003d null : \"Initial task list cannot be null\";","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(tasks); // Use a copy of the list to avoid modifying the original list","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"        assert task !\u003d null : \"Cannot add a null task\";","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Deletes a task from the task list at the specified index.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Indexing for the user starts from 1, so 1 is subtracted for internal zero-based indexing.","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param taskIndex The one-based index of the task to be removed.","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"        int zeroBasedIndex \u003d taskIndex - 1;","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"        assert zeroBasedIndex \u003e\u003d 0 \u0026\u0026 zeroBasedIndex \u003c tasks.size() : \"Task index is out of bounds\";","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"        tasks.remove(zeroBasedIndex);","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Marks a task at the specified index as completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Indexing for the user starts from 1, so 1 is subtracted for internal zero-based indexing.","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param taskIndex The one-based index of the task to be marked as done.","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void completeTask(int taskIndex) {","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"        int zeroBasedIndex \u003d taskIndex - 1;","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"        assert zeroBasedIndex \u003e\u003d 0 \u0026\u0026 zeroBasedIndex \u003c tasks.size() : \"Task index is out of bounds\";","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"        Task task \u003d tasks.get(zeroBasedIndex);","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"        task.markAsDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return The size of the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"    public int getTasksSize() {","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-02-16"},{"lineNumber":81,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"kinjalagarwal1810"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-16"},{"lineNumber":83,"author":{"gitId":"kinjalagarwal1810"},"content":"        return this.tasks; // Returns direct reference; consider returning an unmodifiable list for encapsulation","lastModifiedDate":"2024-02-16"},{"lineNumber":84,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Retrieves a task by its one-based index in the list.","lastModifiedDate":"2024-02-16"},{"lineNumber":88,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param index The one-based index of the task.","lastModifiedDate":"2024-02-16"},{"lineNumber":90,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return The task at the specified index, or null if the index is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"kinjalagarwal1810"},"content":"        int zeroBasedIndex \u003d index - 1;","lastModifiedDate":"2024-02-16"},{"lineNumber":94,"author":{"gitId":"kinjalagarwal1810"},"content":"        assert zeroBasedIndex \u003e\u003d 0 \u0026\u0026 zeroBasedIndex \u003c tasks.size() : \"Task index is out of bounds\";","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"kinjalagarwal1810"},"content":"        return tasks.get(zeroBasedIndex);","lastModifiedDate":"2024-02-16"},{"lineNumber":96,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Finds and returns a list of tasks that contain the given keyword in their description.","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A list of tasks that contain the keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"kinjalagarwal1810"},"content":"    public List\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"kinjalagarwal1810"},"content":"        assert keyword !\u003d null \u0026\u0026 !keyword.isBlank() : \"Search keyword cannot be null or blank\";","lastModifiedDate":"2024-02-16"},{"lineNumber":106,"author":{"gitId":"kinjalagarwal1810"},"content":"        List\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"kinjalagarwal1810"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"kinjalagarwal1810"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"kinjalagarwal1810"},"content":"                matchedTasks.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"kinjalagarwal1810"},"content":"        return matchedTasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":114}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.List;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":" * Represents the user interface of the Duke application.","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":" * This class handles interactions with the user, including displaying messages, errors, and task lists.","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"public class Ui {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String showWelcome() {","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"Hello! I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param errorMessage The error message to be displayed.","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String showError(String errorMessage) {","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"Error: \" + errorMessage;","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Displays a message indicating an error loading tasks from file.","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String showLoadingError() {","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"Error loading tasks from file. Starting with an empty task list.\";","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Displays an exit message to the user.","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String showExitMessage() {","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param tasks The TaskList containing the tasks to be displayed.","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String showTaskList(TaskList tasks) {","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"        List\u003cTask\u003e taskArrayList \u003d tasks.getTasks();","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (taskArrayList.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"            return \"The task list is empty.\";","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"            StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"            for (int i \u003d 0; i \u003c taskArrayList.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"                sb.append(\" \").append(i + 1).append(\". \").append(taskArrayList.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"            return sb.toString().trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Displays a list of tasks that match a search query to the user.","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param tasks The list of tasks that match the search query.","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String showTaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"            return \"No matching tasks found.\";","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"kinjalagarwal1810"},"content":"            StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"                sb.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"            return sb.toString().trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Displays the number of tasks in the task list to the user.","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param tasks The TaskList whose size is to be displayed.","lastModifiedDate":"2024-02-12"},{"lineNumber":82,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String showNumTasks(TaskList tasks) {","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"Now you have \" + tasks.getTasksSize() + \" tasks in the list.\";","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Displays a message indicating a task has been marked as done.","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param task The task that has been marked as done.","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String showMarkAsDoneMessage(Task task) {","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task;","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Displays a message indicating a task has been marked as not done.","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param task The task that has been marked as not done yet.","lastModifiedDate":"2024-02-16"},{"lineNumber":100,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String showMarkAsUndoneMessage(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + task;","lastModifiedDate":"2024-02-16"},{"lineNumber":103,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Displays a message indicating a task has been deleted from the task list.","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":108,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param removedTask The task that has been deleted.","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param tasks The updated TaskList after the task has been deleted.","lastModifiedDate":"2024-02-12"},{"lineNumber":110,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String showDeleteMessage(Task removedTask, TaskList tasks) {","lastModifiedDate":"2024-02-12"},{"lineNumber":112,"author":{"gitId":"kinjalagarwal1810"},"content":"        String deleteTaskMessage \u003d \"Noted. I\u0027ve removed this task:\\n\" + removedTask;","lastModifiedDate":"2024-02-15"},{"lineNumber":113,"author":{"gitId":"kinjalagarwal1810"},"content":"        String numOfTasksMessage \u003d showNumTasks(tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":114,"author":{"gitId":"kinjalagarwal1810"},"content":"        return deleteTaskMessage + \"\\n\" + numOfTasksMessage;","lastModifiedDate":"2024-02-16"},{"lineNumber":115,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":118,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Displays a message indicating a task has been added to the task list.","lastModifiedDate":"2024-02-12"},{"lineNumber":119,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":120,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param newTask The task that has been added.","lastModifiedDate":"2024-02-12"},{"lineNumber":121,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param tasks The updated TaskList after the task has been added.","lastModifiedDate":"2024-02-16"},{"lineNumber":122,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":123,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String showAddTaskMessage(Task newTask, TaskList tasks) {","lastModifiedDate":"2024-02-12"},{"lineNumber":124,"author":{"gitId":"kinjalagarwal1810"},"content":"        String addTaskMessage \u003d \"Got it. I\u0027ve added this task:\\n\" + newTask;","lastModifiedDate":"2024-02-16"},{"lineNumber":125,"author":{"gitId":"kinjalagarwal1810"},"content":"        String numOfTasksMessage \u003d showNumTasks(tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":126,"author":{"gitId":"kinjalagarwal1810"},"content":"        return addTaskMessage + \"\\n\" + numOfTasksMessage;","lastModifiedDate":"2024-02-16"},{"lineNumber":127,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":128}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.JamieException;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":" * Represents a command to add a task to the task list. Ensures that tasks are","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":" * added reliably and saved immediately to avoid data loss.","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final Task taskToAdd;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs an AddTaskCommand with the specified task to add.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Validates that the task is not null to prevent null references in the task list.","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param taskToAdd The task to add. Must not be null.","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"    public AddTaskCommand(Task taskToAdd) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (taskToAdd \u003d\u003d null) {","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new IllegalArgumentException(\"Task to add cannot be null.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.taskToAdd \u003d taskToAdd;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Executes the command by adding the task to the task list, saving it to storage,","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"     * and displaying a message to indicate the task has been added.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"     * If saving fails, wraps the IOException in a JamieException to simplify error handling.","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param tasks   The task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param storage The storage for saving the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A message indicating the task has been added.","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws JamieException If there is an error while saving the task list.","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws JamieException, IOException {","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"        tasks.addTask(taskToAdd);","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"            storage.save(tasks); // Assuming storage.save handles its own exceptions or throws no checked exceptions","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"            return ui.showAddTaskMessage(taskToAdd, tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"            return \"Error saving tasks: \" + e.getMessage();","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"kinjalagarwal1810":52}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.JamieException;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":" * An abstract class representing a command to be executed.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Executes the command within the context of the Duke application.","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param tasks   The task list to operate on.","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param ui      The user interface to interact with the user.","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param storage The storage to persist task changes.","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A message indicating the outcome of the execution.","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws JamieException If an error occurs during command execution.","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws JamieException, IOException;","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Marks the command as an exit command to signal the application to terminate.","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void markAsExit() {","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"kinjalagarwal1810":36}},{"path":"src/main/java/duke/command/CompleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.JamieException;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":" * Represents a command to mark a task as complete.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"public class CompleteTaskCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final int taskIndex;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs a CompleteTaskCommand with the specified task index.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param taskIndex The index of the task to mark as complete.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"    public CompleteTaskCommand(int taskIndex) {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Executes the command by marking the specified task as complete in the task list,","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"     * saving it to storage, and displaying a message indicating the task has been marked as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param tasks   The task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param storage The storage for saving the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A message indicating the task has been marked as done.","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws JamieException If there is an error while executing the command.","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws JamieException {","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (taskIndex \u003c\u003d 0 || taskIndex \u003e tasks.getTasksSize()) {","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new JamieException(\"The task index provided is out of bounds.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"        tasks.completeTask(this.taskIndex - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"        } catch (Exception e) { // Assuming storage.save now throws a checked exception that you want to catch.","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new JamieException(\"Failed to save tasks: \" + e.getMessage());","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"        return ui.showMarkAsDoneMessage(tasks.getTask(this.taskIndex - 1));","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":46}},{"path":"src/main/java/duke/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.JamieException;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":" * Represents a command to delete a task from the task list. Ensures that the deletion operation","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":" * is performed safely and updates the task list in storage accordingly.","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final int taskNum;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs a DeleteTaskCommand with the specified task number.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param taskNum The number of the task to delete, 1-based index.","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"    public DeleteTaskCommand(int taskNum) {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Executes the command by deleting the specified task from the task list,","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"     * saving the updated task list to storage, and displaying a message indicating","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"     * the task has been deleted.","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param tasks   The task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param storage The storage for saving the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A message indicating the task has been deleted.","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws JamieException If the task number is invalid or there is an error while saving the task list.","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws JamieException {","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (this.taskNum \u003c\u003d 0 || this.taskNum \u003e tasks.getTasksSize()) {","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new JamieException(\"Task number is out of bounds. Please select a valid task number.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"        Task toDelete \u003d tasks.getTask(this.taskNum - 1); // Assuming getTask accounts for zero-based indexing.","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"        tasks.deleteTask(this.taskNum - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"        } catch (Exception e) { // Assuming storage.save could throw an exception that needs to be caught.","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new JamieException(\"Failed to save the task list after deletion: \" + e.getMessage());","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"        return ui.showDeleteMessage(toDelete, tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":48}},{"path":"src/main/java/duke/command/ExitTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"public class ExitTaskCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Executes the command by marking it as an exit command.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param taskList The task list (not used in this command).","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param ui       The user interface (not used in this command).","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param storage  The storage (not used in this command).","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"        super.markAsExit();","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"        return ui.showExitMessage();","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":23}},{"path":"src/main/java/duke/command/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.List;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":" * Represents a command to search for tasks by a specified keyword.","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":" * This command allows users to find tasks that contain the given keyword in their description.","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final String keyword; // Declare as final since it should not change once initialized","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Creates a FindTaskCommand with the specified keyword for searching tasks.","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param keyword The keyword used to find tasks containing matching text.","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"    public FindTaskCommand(String keyword) {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (keyword \u003d\u003d null || keyword.trim().isEmpty()) {","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new IllegalArgumentException(\"Keyword for finding tasks cannot be null or empty.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.keyword \u003d keyword.trim(); // Trim the keyword to remove leading and trailing whitespaces","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Executes the find task command by searching for tasks containing the keyword","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"     * and displays them to the user. It leverages the task list to filter tasks based","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"     * on the keyword and uses the UI to display the found tasks.","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param tasks   The task list containing the tasks to be searched.","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param ui      The UI component for displaying the found tasks.","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param storage The storage component, not used in this command.","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A message indicating the result of the search operation.","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"        List\u003cTask\u003e foundTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"        return ui.showTaskList(foundTasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"kinjalagarwal1810":44}},{"path":"src/main/java/duke/command/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":" * Represents a command to list all tasks currently in the task list.","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":" * This command is responsible for triggering the display of all tasks to the user.","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"public class ListTasksCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Executes the command by displaying the list of all tasks using the user interface.","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"     * The method leverages the provided UI component to show tasks currently managed within the task list.","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param tasks   The task list containing the tasks to be displayed.","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param ui      The user interface responsible for displaying the list of tasks.","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param storage The storage component, not used in this command but included for interface consistency.","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A string representation of all tasks, formatted for user display.","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"        return ui.showTaskList(tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":26}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.JamieException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":" * Represents a task with a specific deadline.","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final LocalDateTime byDateTime;","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs a Deadline task with the specified description and deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param by          The deadline in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws JamieException If the date format is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Deadline(String description, String by) throws JamieException {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.byDateTime \u003d parseDateTime(by); // Using \u0027this\u0027 for consistency","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs a Deadline task with the specified description, deadline, and completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param by          The deadline in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param isDone      True if the task is completed, false otherwise.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws JamieException If the date format is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Deadline(String description, String by, boolean isDone) throws JamieException {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.byDateTime \u003d parseDateTime(by); // Ensuring the date is parsed consistently","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Parses the deadline date and time from the given string.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param by The deadline in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return The parsed LocalDateTime.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws JamieException If the date format is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"    private LocalDateTime parseDateTime(String by) throws JamieException {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"            return LocalDateTime.parse(by, FORMATTER);","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new JamieException(\"Invalid date format for deadline. Please use \u0027dd/MM/yyyy HHmm\u0027.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns the deadline date and time.","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return The deadline date and time as a LocalDateTime object.","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"        return this.byDateTime; // Consistency in using \u0027this\u0027 for class fields","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A string in the format \"[D][Status] Description (by: Deadline)\".","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + FORMATTER.format(this.byDateTime) + \")\";","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns a string representation of the Deadline task for saving to a file.","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A string in the format \"D | Status | Description | Deadline\".","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"D | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \"","lastModifiedDate":"2024-02-16"},{"lineNumber":83,"author":{"gitId":"kinjalagarwal1810"},"content":"                + FORMATTER.format(this.byDateTime);","lastModifiedDate":"2024-02-16"},{"lineNumber":84,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":85}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.JamieException;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":" * Represents an event task with a specified start and end time.","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final LocalDateTime fromDateTime;","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final LocalDateTime toDateTime;","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs an Event task with the specified description, start time, and end time.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param from        The start time in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param to          The end time in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws JamieException If the date format is invalid.","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Event(String description, String from, String to) throws JamieException {","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.fromDateTime \u003d parseDateTime(from);","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.toDateTime \u003d parseDateTime(to);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs an Event task with the specified description, start time, end time, and completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param from        The start time in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param to          The end time in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param isDone      True if the event is completed, false otherwise.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws JamieException If the date format is invalid.","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Event(String description, String from, String to, boolean isDone) throws JamieException {","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.fromDateTime \u003d parseDateTime(from);","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.toDateTime \u003d parseDateTime(to);","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Parses the date and time from the given string.","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param dateTime The date and time in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return The parsed LocalDateTime.","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws JamieException If the date format is invalid.","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"    private LocalDateTime parseDateTime(String dateTime) throws JamieException {","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"            return LocalDateTime.parse(dateTime, FORMATTER);","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new JamieException(\"Invalid date format for event. Please use \u0027dd/MM/yyyy HHmm\u0027.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns the start time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return The start time as a LocalDateTime object.","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"        return this.fromDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns the end time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return The end time as a LocalDateTime object.","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"        return this.toDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A string in the format \"[E][Status] Description (from: Start Time to: End Time)\".","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"kinjalagarwal1810"},"content":"                + \" (from: \" + FORMATTER.format(this.fromDateTime)","lastModifiedDate":"2024-02-16"},{"lineNumber":88,"author":{"gitId":"kinjalagarwal1810"},"content":"                + \" to: \" + FORMATTER.format(this.toDateTime) + \")\";","lastModifiedDate":"2024-02-16"},{"lineNumber":89,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns a string representation of the Event task for saving to a file.","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A string in the format \"E | Status | Description | Start Time | End Time\".","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"E | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \"","lastModifiedDate":"2024-02-16"},{"lineNumber":99,"author":{"gitId":"kinjalagarwal1810"},"content":"                + FORMATTER.format(this.fromDateTime) + \" | \"","lastModifiedDate":"2024-02-16"},{"lineNumber":100,"author":{"gitId":"kinjalagarwal1810"},"content":"                + FORMATTER.format(this.toDateTime);","lastModifiedDate":"2024-02-16"},{"lineNumber":101,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":102}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":" * An abstract class representing a task within the Duke application.","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":" * This class serves as a base for different types of tasks that can be created, tracked, and managed.","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final String description;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs a Task with the specified description, defaulting the completion status to false (not done).","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param description The description of the task, must not be null or empty.","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"        validateDescription(description);","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs a Task with the specified description and completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param description The description of the task, must not be null or empty.","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"        validateDescription(description);","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Validates the description ensuring it is not null or empty.","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param description The task description.","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"    private void validateDescription(String description) {","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new IllegalArgumentException(\"Task description cannot be null or empty.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"        return this.description;","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return true if the task is completed, false otherwise.","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns a status icon for the task based on its completion status.","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return \"X\" if the task is completed, otherwise a space character.","lastModifiedDate":"2024-02-16"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"kinjalagarwal1810"},"content":"    /*","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns a string representation of the task, including its status icon and description.","lastModifiedDate":"2024-02-16"},{"lineNumber":88,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A string formatted as [Status] Description, where Status is either \"X\" or a space.","lastModifiedDate":"2024-02-16"},{"lineNumber":90,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":92,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns a string representation of the task for saving to a file.","lastModifiedDate":"2024-02-16"},{"lineNumber":98,"author":{"gitId":"kinjalagarwal1810"},"content":"     * This method is intended to be overridden by subclasses to provide specific formatting.","lastModifiedDate":"2024-02-16"},{"lineNumber":99,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A formatted string representing the task for file storage.","lastModifiedDate":"2024-02-16"},{"lineNumber":101,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"kinjalagarwal1810"},"content":"    public abstract String toFileString();","lastModifiedDate":"2024-02-16"},{"lineNumber":103,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":103}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":" * Represents a to-do task that can be added to the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs a ToDo task with the specified description. If the description is blank,","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"     * a default description is used. Ensures that the description provided is not null.","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws IllegalArgumentException if the description is null.","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Validate the description is not null before passing to the superclass constructor.","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"        super(validateDescription(description));","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs a ToDo task with the specified description and completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Ensures that the description provided is not null.","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param isDone      The completion status of the to-do task.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws IllegalArgumentException if the description is null.","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"        // No need for assert here since validateDescription will throw an exception if needed.","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"        super(validateDescription(description), isDone);","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Validates the task\u0027s description. Throws an IllegalArgumentException if the description is null.","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns a default description if provided description is blank.","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param description The description to validate.","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return The validated description, or a default description if the original was blank.","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws IllegalArgumentException if the description is null.","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"    private static String validateDescription(String description) {","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new IllegalArgumentException(\"Description cannot be null.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"        return description.isBlank() ? \"Default Description\" : description;","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A string containing the task type, status, and description.","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns a string representation of the ToDo task for saving to a file.","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A formatted string for saving the ToDo task to a file.","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"T | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getDescription();","lastModifiedDate":"2024-02-16"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":67}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"kinjalagarwal1810":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"kinjalagarwal1810":19}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"//import duke.task.*;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"class StorageTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"    @TempDir","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"    Path tempDir;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"    void save() {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"        Path tempFile \u003d tempDir.resolve(\"temp.txt\");","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"        Storage storage \u003d new Storage(tempFile.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"        taskList.addTask(new ToDo(\"Write JUnit tests\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Handle or declare the potential IOException","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"            try {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"                storage.save(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"                // Handle the IOException","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"            // Remove the catch block for JamieException if it\u0027s not thrown by storage.save","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"        });","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Additional code to check the file\u0027s contents can be added here","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"kinjalagarwal1810":36}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"        import duke.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"        import duke.task.ToDo;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"        import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"        import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"class TaskListTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"    void addTask() {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"        Task task \u003d new ToDo(\"Read book\");","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertEquals(1, taskList.getTasksSize()); // Assuming getTasksSize() returns the number of tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertEquals(task, taskList.getTask(0)); // Assuming getTask(0) returns the first task","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"kinjalagarwal1810":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"todo borrow book","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"todo buy groceries","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"event project meeting /from 7pm /to 8pm","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"deadline assignment /by sun 5pm","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"event dinner /from 6pm /to 10pm","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"mark 2","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"mark 3","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"list","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"kinjalagarwal1810":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kinjalagarwal1810":1,"-":20}}]
