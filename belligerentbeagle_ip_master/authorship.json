[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"# duke.Duke project template","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"belligerentbeagle"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"belligerentbeagle":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"belligerentbeagle"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"belligerentbeagle"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"belligerentbeagle"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"belligerentbeagle"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"belligerentbeagle"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"belligerentbeagle"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"belligerentbeagle"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"belligerentbeagle"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"belligerentbeagle"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"belligerentbeagle"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"belligerentbeagle"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"belligerentbeagle"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"belligerentbeagle"},"content":"    mainClass.set(\"Main\")","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":51,"author":{"gitId":"belligerentbeagle"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"belligerentbeagle"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"belligerentbeagle":16,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"# duke.Duke User Guide","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"}],"authorContributionMap":{"belligerentbeagle":1,"-":29}},{"path":"selfnotes.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"##Testing things to add:","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"\u003e For file retrieval","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"- duke.txt not available ","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"- duke.txt being corrupted","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"- duke.txt working fine","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"belligerentbeagle":6}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"public class Launcher {","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"belligerentbeagle":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"import view.MainWindow;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"belligerentbeagle"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"belligerentbeagle"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"belligerentbeagle"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"belligerentbeagle"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"belligerentbeagle"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"belligerentbeagle"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"belligerentbeagle"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"belligerentbeagle"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"belligerentbeagle"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"belligerentbeagle"},"content":"            stage.show();","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"belligerentbeagle"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"belligerentbeagle"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"belligerentbeagle"},"content":"    public static void main(String args[]) {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"belligerentbeagle"},"content":"        new Duke(\"./src/main/java/data/duke.txt\").run();","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"belligerentbeagle"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"belligerentbeagle":34}},{"path":"src/main/java/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"T | 0 | me","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"T | 0 | you","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"belligerentbeagle":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"import exceptions.TaskNotExistException;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"import model.Deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"import model.Event;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"import model.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"import model.Todo;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"import service.Parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"import service.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"import service.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"import ui.UI;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"public class Duke {","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"belligerentbeagle"},"content":"    private static TaskList taskList;","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"belligerentbeagle"},"content":"    private static UI ui;","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"belligerentbeagle"},"content":"    private static Storage storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"belligerentbeagle"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"belligerentbeagle"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"belligerentbeagle"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"belligerentbeagle"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"belligerentbeagle"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"belligerentbeagle"},"content":"        return processCommand(input, taskList, true);","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"belligerentbeagle"},"content":"    public enum Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"belligerentbeagle"},"content":"        TODO, DEADLINE, EVENT, DELETE, MARK, UNMARK, LIST, BYE, UNKNOWN, FIND;","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"belligerentbeagle"},"content":"        public static Command fromString(String maybeCommand) {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"belligerentbeagle"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"belligerentbeagle"},"content":"                return Command.valueOf(maybeCommand.toUpperCase());","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"belligerentbeagle"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"belligerentbeagle"},"content":"                return UNKNOWN;","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"belligerentbeagle"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"belligerentbeagle"},"content":"     * Performs the appropriate action based on the user\u0027s input of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"belligerentbeagle"},"content":"     * From adding of tasks which can be todos, deadlines and events, deleting and marking and unmarking them.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"belligerentbeagle"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"belligerentbeagle"},"content":"     * @param userInput user\u0027s commands","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"belligerentbeagle"},"content":"     * @param todos the list of tasks that are currently present.","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"belligerentbeagle"},"content":"     * @param isVerbose helps to ensure whether we are preloading (includes the need to save the entries)","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"belligerentbeagle"},"content":"     * @throws RuntimeException","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"belligerentbeagle"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"belligerentbeagle"},"content":"    public static String processCommand(String userInput, TaskList todos, Boolean isVerbose) throws RuntimeException {","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"belligerentbeagle"},"content":"        System.out.println(\"USERINPUT: \" + userInput);","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"belligerentbeagle"},"content":"        String maybeCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"belligerentbeagle"},"content":"        String arr[];","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"belligerentbeagle"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"belligerentbeagle"},"content":"            arr \u003d userInput.split(\" \", 2); // String in Array format. Useful: https://www.geeksforgeeks.org/split-string-java-examples/","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"belligerentbeagle"},"content":"            assert((arr.length) \u003e 1);","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"belligerentbeagle"},"content":"            maybeCommand \u003d arr[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"belligerentbeagle"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"belligerentbeagle"},"content":"            maybeCommand \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"belligerentbeagle"},"content":"            return \"null\";","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"belligerentbeagle"},"content":"        Command command \u003d Command.fromString(maybeCommand);","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"belligerentbeagle"},"content":"        switch (command) {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"belligerentbeagle"},"content":"        case FIND:","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"belligerentbeagle"},"content":"            return TaskManager.processFind(arr, userInput, todos, isVerbose);","lastModifiedDate":"2024-02-16"},{"lineNumber":66,"author":{"gitId":"belligerentbeagle"},"content":"        case BYE:","lastModifiedDate":"2024-02-16"},{"lineNumber":67,"author":{"gitId":"belligerentbeagle"},"content":"            return (ui.formalities(\"farewell\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":68,"author":{"gitId":"belligerentbeagle"},"content":"        case LIST:","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"belligerentbeagle"},"content":"            return TaskManager.processList(arr, userInput, todos, isVerbose);","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"belligerentbeagle"},"content":"        case MARK:","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"belligerentbeagle"},"content":"            return TaskManager.processMark(arr, userInput, todos, isVerbose, storage);","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"belligerentbeagle"},"content":"        case UNMARK:","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"belligerentbeagle"},"content":"            return TaskManager.processUnmark(arr, userInput, todos, isVerbose, storage);","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"belligerentbeagle"},"content":"        case TODO:","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"belligerentbeagle"},"content":"            return TaskManager.processTodo(arr, userInput, todos, isVerbose, storage);","lastModifiedDate":"2024-02-16"},{"lineNumber":76,"author":{"gitId":"belligerentbeagle"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-16"},{"lineNumber":77,"author":{"gitId":"belligerentbeagle"},"content":"            return TaskManager.processDeadline(arr, userInput, todos, isVerbose, storage);","lastModifiedDate":"2024-02-16"},{"lineNumber":78,"author":{"gitId":"belligerentbeagle"},"content":"        case EVENT:","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"belligerentbeagle"},"content":"            return TaskManager.processEvent(arr, userInput, todos, isVerbose, storage);","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"belligerentbeagle"},"content":"        case DELETE:","lastModifiedDate":"2024-02-16"},{"lineNumber":81,"author":{"gitId":"belligerentbeagle"},"content":"            return TaskManager.processDelete(arr, userInput, todos, isVerbose, storage);","lastModifiedDate":"2024-02-16"},{"lineNumber":82,"author":{"gitId":"belligerentbeagle"},"content":"        default:","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"Uh ah I don\u0027t understand ya \");","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"belligerentbeagle"},"content":"            return \"Uh ah I don\u0027t understand ya \";","lastModifiedDate":"2024-02-16"},{"lineNumber":85,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"belligerentbeagle"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"belligerentbeagle"},"content":"     * Constructor of Duke","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"belligerentbeagle"},"content":"     * @param filePath file storage location to save and retrieve list of tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"belligerentbeagle"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"belligerentbeagle"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"belligerentbeagle"},"content":"        ui \u003d new UI();","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"belligerentbeagle"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"belligerentbeagle"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"belligerentbeagle"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":99,"author":{"gitId":"belligerentbeagle"},"content":"     * Constructor of Duke without parameters ","lastModifiedDate":"2024-02-16"},{"lineNumber":100,"author":{"gitId":"belligerentbeagle"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":101,"author":{"gitId":"belligerentbeagle"},"content":"    public Duke() {","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"belligerentbeagle"},"content":"       new Duke(\"./src/main/java/data/duke.txt\");","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":106,"author":{"gitId":"belligerentbeagle"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"belligerentbeagle"},"content":"     * With a Duke object, .run() is the main entry point of the program, running all its processes.","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"belligerentbeagle"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"belligerentbeagle"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":110,"author":{"gitId":"belligerentbeagle"},"content":"    public void run() {","lastModifiedDate":"2024-02-09"},{"lineNumber":111,"author":{"gitId":"belligerentbeagle"},"content":"        //do something","lastModifiedDate":"2024-02-09"},{"lineNumber":112,"author":{"gitId":"belligerentbeagle"},"content":"        ui.formalities(\"greet\");","lastModifiedDate":"2024-02-09"},{"lineNumber":113,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":114,"author":{"gitId":"belligerentbeagle"},"content":"        //Load existing information","lastModifiedDate":"2024-02-09"},{"lineNumber":115,"author":{"gitId":"belligerentbeagle"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":116,"author":{"gitId":"belligerentbeagle"},"content":"            storage.loadInfo(taskList);","lastModifiedDate":"2024-02-09"},{"lineNumber":117,"author":{"gitId":"belligerentbeagle"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":118,"author":{"gitId":"belligerentbeagle"},"content":"            e.getMessage();","lastModifiedDate":"2024-02-09"},{"lineNumber":119,"author":{"gitId":"belligerentbeagle"},"content":"            taskList \u003d null;","lastModifiedDate":"2024-02-09"},{"lineNumber":120,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":121,"author":{"gitId":"belligerentbeagle"},"content":"        while (true) {","lastModifiedDate":"2024-01-23"},{"lineNumber":122,"author":{"gitId":"belligerentbeagle"},"content":"            //Parsing user input.","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"belligerentbeagle"},"content":"           String command \u003d new Parser().parse();","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"belligerentbeagle"},"content":"           assert(command !\u003d null);","lastModifiedDate":"2024-02-15"},{"lineNumber":125,"author":{"gitId":"belligerentbeagle"},"content":"            //Process user command","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"belligerentbeagle"},"content":"            try {","lastModifiedDate":"2024-01-24"},{"lineNumber":127,"author":{"gitId":"belligerentbeagle"},"content":"                processCommand(command, taskList, true);","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"belligerentbeagle"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":129,"author":{"gitId":"belligerentbeagle"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":132,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":133,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":134,"author":{"gitId":"belligerentbeagle"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"belligerentbeagle"},"content":"        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2024-02-16"},{"lineNumber":136,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":137,"author":{"gitId":"belligerentbeagle"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"belligerentbeagle":137}},{"path":"src/main/java/duke/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"package duke;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"import exceptions.TaskNotExistException;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"import model.Deadline;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"import model.Event;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"import model.Task;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"import model.Todo;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"import service.TaskList;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"import service.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"public class TaskManager {","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"belligerentbeagle"},"content":"    public static boolean isValidDelete(String[] arr) {","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"belligerentbeagle"},"content":"        if (arr.length \u003c\u003d 1) {","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"belligerentbeagle"},"content":"            return false;","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"belligerentbeagle"},"content":"        return true;","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"belligerentbeagle"},"content":"    public static String processDelete(String[] arr, String UserInput, TaskList todos, Boolean isVerbose, Storage storage) {","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"belligerentbeagle"},"content":"        if (!isValidDelete(arr)) {","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"belligerentbeagle"},"content":"            return (\"arr:\" + Arrays.toString(arr) + \"\\n Nuh uh! Which task to delete? \\nMake sure to add the task number!\");","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"belligerentbeagle"},"content":"        Integer i \u003d Integer.valueOf(arr[1]);","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"belligerentbeagle"},"content":"        Task task;","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"belligerentbeagle"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"belligerentbeagle"},"content":"            task \u003d todos.get(i - 1);","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"belligerentbeagle"},"content":"            todos.remove(i - 1);","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"belligerentbeagle"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"belligerentbeagle"},"content":"           Exception e1 \u003d new TaskNotExistException(Integer.toString(i));","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"belligerentbeagle"},"content":"           return e1.getMessage();","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"belligerentbeagle"},"content":"        if (isVerbose) {","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"Okay! I\u0027ve fed this task to Woodstock, bye bye!:\");","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(task.toString());","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"Now you have \" + todos.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"belligerentbeagle"},"content":"            storage.updateRecords(todos);","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"belligerentbeagle"},"content":"        System.out.println(\"Reached here\");","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"belligerentbeagle"},"content":"        return (\"Okay! I\u0027ve fed this task to Woodstock, bye bye!:\" + \"\\n\" + task.toString() + \"\\n\" + \"Now you have \" + todos.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"belligerentbeagle"},"content":"    public static String processEvent(String[] arr, String UserInput, TaskList todos, Boolean isVerbose, Storage storage) {","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"belligerentbeagle"},"content":"        if (arr.length \u003d\u003d 4) {","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"belligerentbeagle"},"content":"            throw new DukeException(\" Nuh uh! The description of an event cannot be empty.\\nMake sure to add a from and to date after the description with /from and /to too!\");","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"belligerentbeagle"},"content":"        if (isVerbose) {","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"Got it. Added this task:\");","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"belligerentbeagle"},"content":"        // extraction of parameters","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"belligerentbeagle"},"content":"        String getDesc[] \u003d arr[1].split(\" /from \");","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"belligerentbeagle"},"content":"        String desc \u003d getDesc[0];","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"belligerentbeagle"},"content":"        String getDates[] \u003d getDesc[1].split(\" /to \");","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"belligerentbeagle"},"content":"        String from \u003d getDates[0];","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"belligerentbeagle"},"content":"        String to \u003d getDates[1];","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"belligerentbeagle"},"content":"        //creating of event","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"belligerentbeagle"},"content":"        Event event \u003d new Event(desc, from, to);","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"belligerentbeagle"},"content":"        todos.add(event);","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"belligerentbeagle"},"content":"        if (isVerbose) {","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(event.toString());","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"Now you have \" + todos.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":66,"author":{"gitId":"belligerentbeagle"},"content":"            storage.updateRecords(todos);","lastModifiedDate":"2024-02-16"},{"lineNumber":67,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":68,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"belligerentbeagle"},"content":"        return (\"Got it. Added this task:\" + \"\\n\" + event.toString() + \"\\n\" + (\"Now you have \" + todos.size() + \" tasks in the list.\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"belligerentbeagle"},"content":"    public static String processDeadline(String[] arr, String UserInput, TaskList todos, Boolean isVerbose, Storage storage) {","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"belligerentbeagle"},"content":"        if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"belligerentbeagle"},"content":"            throw new DukeException(\" Nuh uh! The description of a deadline cannot be empty.\\nMake sure to add a deadline after the description with /by too!\");","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":76,"author":{"gitId":"belligerentbeagle"},"content":"        if (isVerbose) {","lastModifiedDate":"2024-02-16"},{"lineNumber":77,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"Got it. Added this task:\");","lastModifiedDate":"2024-02-16"},{"lineNumber":78,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"belligerentbeagle"},"content":"        String arguments[] \u003d arr[1].split(\" /by \");","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"belligerentbeagle"},"content":"        String description \u003d arguments[0];","lastModifiedDate":"2024-02-16"},{"lineNumber":81,"author":{"gitId":"belligerentbeagle"},"content":"        String by \u003d arguments[1];","lastModifiedDate":"2024-02-16"},{"lineNumber":82,"author":{"gitId":"belligerentbeagle"},"content":"        Deadline deadline;","lastModifiedDate":"2024-02-16"},{"lineNumber":83,"author":{"gitId":"belligerentbeagle"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":84,"author":{"gitId":"belligerentbeagle"},"content":"            deadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-16"},{"lineNumber":85,"author":{"gitId":"belligerentbeagle"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":86,"author":{"gitId":"belligerentbeagle"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-16"},{"lineNumber":87,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":88,"author":{"gitId":"belligerentbeagle"},"content":"        todos.add(deadline);","lastModifiedDate":"2024-02-16"},{"lineNumber":89,"author":{"gitId":"belligerentbeagle"},"content":"        if (isVerbose) {","lastModifiedDate":"2024-02-16"},{"lineNumber":90,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(deadline.toString());","lastModifiedDate":"2024-02-16"},{"lineNumber":91,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"Now you have \" + todos.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":92,"author":{"gitId":"belligerentbeagle"},"content":"            storage.updateRecords(todos);","lastModifiedDate":"2024-02-16"},{"lineNumber":93,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":94,"author":{"gitId":"belligerentbeagle"},"content":"        return (\"Got it. Added this task:\" + \"\\n\" + deadline.toString() + \"\\n\" + (\"Now you have \" + todos.size() + \" tasks in the list.\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":96,"author":{"gitId":"belligerentbeagle"},"content":"    public static String processTodo(String[] arr, String UserInput, TaskList todos, Boolean isVerbose, Storage storage) {","lastModifiedDate":"2024-02-16"},{"lineNumber":97,"author":{"gitId":"belligerentbeagle"},"content":"        if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-16"},{"lineNumber":98,"author":{"gitId":"belligerentbeagle"},"content":"            throw new DukeException(\" Nuh uh! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":99,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":100,"author":{"gitId":"belligerentbeagle"},"content":"        if (isVerbose) {","lastModifiedDate":"2024-02-16"},{"lineNumber":101,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"Got it. Added this task:\");","lastModifiedDate":"2024-02-16"},{"lineNumber":102,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":103,"author":{"gitId":"belligerentbeagle"},"content":"        Todo todo \u003d new Todo(arr[1]);","lastModifiedDate":"2024-02-16"},{"lineNumber":104,"author":{"gitId":"belligerentbeagle"},"content":"        todos.add(todo);","lastModifiedDate":"2024-02-16"},{"lineNumber":105,"author":{"gitId":"belligerentbeagle"},"content":"        if (isVerbose) {","lastModifiedDate":"2024-02-16"},{"lineNumber":106,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(todo.toString());","lastModifiedDate":"2024-02-16"},{"lineNumber":107,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"Now you have \" + todos.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":108,"author":{"gitId":"belligerentbeagle"},"content":"            storage.updateRecords(todos);","lastModifiedDate":"2024-02-16"},{"lineNumber":109,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":110,"author":{"gitId":"belligerentbeagle"},"content":"        return (\"Got it. Added this task:\\n\" + todo.toString() + \"\\n\" + \"Now you have \" + todos.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":111,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":112,"author":{"gitId":"belligerentbeagle"},"content":"    public static String processMark(String[] arr, String UserInput, TaskList todos, Boolean isVerbose, Storage storage) {","lastModifiedDate":"2024-02-16"},{"lineNumber":113,"author":{"gitId":"belligerentbeagle"},"content":"        // mark task as done","lastModifiedDate":"2024-02-16"},{"lineNumber":114,"author":{"gitId":"belligerentbeagle"},"content":"        Integer index \u003d Integer.valueOf(arr[1]) - 1;","lastModifiedDate":"2024-02-16"},{"lineNumber":115,"author":{"gitId":"belligerentbeagle"},"content":"        Task currTask \u003d todos.get(index);","lastModifiedDate":"2024-02-16"},{"lineNumber":116,"author":{"gitId":"belligerentbeagle"},"content":"        currTask.markAsDone();","lastModifiedDate":"2024-02-16"},{"lineNumber":117,"author":{"gitId":"belligerentbeagle"},"content":"        if (isVerbose) {","lastModifiedDate":"2024-02-16"},{"lineNumber":118,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.print(\" Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2024-02-16"},{"lineNumber":119,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\" \" + currTask.toString());","lastModifiedDate":"2024-02-16"},{"lineNumber":120,"author":{"gitId":"belligerentbeagle"},"content":"            storage.updateRecords(todos);","lastModifiedDate":"2024-02-16"},{"lineNumber":121,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":122,"author":{"gitId":"belligerentbeagle"},"content":"        return (\" Nice! I\u0027ve marked this task as done:\\n\" + \" \" + currTask.toString());","lastModifiedDate":"2024-02-16"},{"lineNumber":123,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":124,"author":{"gitId":"belligerentbeagle"},"content":"    public static String processList(String[] arr, String UserInput, TaskList todos, Boolean isVerbose) {","lastModifiedDate":"2024-02-16"},{"lineNumber":125,"author":{"gitId":"belligerentbeagle"},"content":"        if (isVerbose) {","lastModifiedDate":"2024-02-16"},{"lineNumber":126,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2024-02-16"},{"lineNumber":127,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":128,"author":{"gitId":"belligerentbeagle"},"content":"        String tasksString \u003d \"\";","lastModifiedDate":"2024-02-16"},{"lineNumber":129,"author":{"gitId":"belligerentbeagle"},"content":"        for (int i \u003d 0; i \u003c todos.size(); i++) {","lastModifiedDate":"2024-02-16"},{"lineNumber":130,"author":{"gitId":"belligerentbeagle"},"content":"            Task currTask \u003d todos.get(i);","lastModifiedDate":"2024-02-16"},{"lineNumber":131,"author":{"gitId":"belligerentbeagle"},"content":"            if (isVerbose) {","lastModifiedDate":"2024-02-16"},{"lineNumber":132,"author":{"gitId":"belligerentbeagle"},"content":"                System.out.println((i + 1) + \". \" + currTask.toString());","lastModifiedDate":"2024-02-16"},{"lineNumber":133,"author":{"gitId":"belligerentbeagle"},"content":"                tasksString +\u003d ((i + 1) + \". \" + currTask.toString() + \"\\n\");","lastModifiedDate":"2024-02-16"},{"lineNumber":134,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":135,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":136,"author":{"gitId":"belligerentbeagle"},"content":"        return (\" Here are the tasks in your list:\\n\" + tasksString);","lastModifiedDate":"2024-02-16"},{"lineNumber":137,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":138,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":139,"author":{"gitId":"belligerentbeagle"},"content":"    public static String processUnmark(String[] arr, String UserInput, TaskList todos, Boolean isVerbose, Storage storage) {","lastModifiedDate":"2024-02-16"},{"lineNumber":140,"author":{"gitId":"belligerentbeagle"},"content":"        Integer index \u003d Integer.valueOf(arr[1]) - 1;","lastModifiedDate":"2024-02-16"},{"lineNumber":141,"author":{"gitId":"belligerentbeagle"},"content":"        Task currTask \u003d todos.get(index);","lastModifiedDate":"2024-02-16"},{"lineNumber":142,"author":{"gitId":"belligerentbeagle"},"content":"        // mark task as undone","lastModifiedDate":"2024-02-16"},{"lineNumber":143,"author":{"gitId":"belligerentbeagle"},"content":"        index \u003d Integer.valueOf(arr[1]) - 1;","lastModifiedDate":"2024-02-16"},{"lineNumber":144,"author":{"gitId":"belligerentbeagle"},"content":"        if (isVerbose) {","lastModifiedDate":"2024-02-16"},{"lineNumber":145,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.print(\" OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2024-02-16"},{"lineNumber":146,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":147,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":148,"author":{"gitId":"belligerentbeagle"},"content":"        currTask \u003d todos.get(index);","lastModifiedDate":"2024-02-16"},{"lineNumber":149,"author":{"gitId":"belligerentbeagle"},"content":"        currTask.markAsUndone();","lastModifiedDate":"2024-02-16"},{"lineNumber":150,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":151,"author":{"gitId":"belligerentbeagle"},"content":"        if (isVerbose) {","lastModifiedDate":"2024-02-16"},{"lineNumber":152,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\" \" + currTask.toString());","lastModifiedDate":"2024-02-16"},{"lineNumber":153,"author":{"gitId":"belligerentbeagle"},"content":"            storage.updateRecords(todos);","lastModifiedDate":"2024-02-16"},{"lineNumber":154,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":155,"author":{"gitId":"belligerentbeagle"},"content":"        return (\" OK, I\u0027ve marked this task as not done yet:\\n\" + \" \" + currTask.toString());","lastModifiedDate":"2024-02-16"},{"lineNumber":156,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":157,"author":{"gitId":"belligerentbeagle"},"content":"    public static String processFind(String[] arr, String UserInput, TaskList todos, Boolean isVerbose) {","lastModifiedDate":"2024-02-16"},{"lineNumber":158,"author":{"gitId":"belligerentbeagle"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2024-02-16"},{"lineNumber":159,"author":{"gitId":"belligerentbeagle"},"content":"        String query \u003d arr[1];","lastModifiedDate":"2024-02-16"},{"lineNumber":160,"author":{"gitId":"belligerentbeagle"},"content":"        String matchingTasksString \u003d \"\";","lastModifiedDate":"2024-02-16"},{"lineNumber":161,"author":{"gitId":"belligerentbeagle"},"content":"        for (int i \u003d 0; i \u003c todos.size(); i++) {","lastModifiedDate":"2024-02-16"},{"lineNumber":162,"author":{"gitId":"belligerentbeagle"},"content":"            Task currTask \u003d todos.get(i);","lastModifiedDate":"2024-02-16"},{"lineNumber":163,"author":{"gitId":"belligerentbeagle"},"content":"            if (currTask.toString().contains(query)) {","lastModifiedDate":"2024-02-16"},{"lineNumber":164,"author":{"gitId":"belligerentbeagle"},"content":"                matchingTasks.add(currTask);","lastModifiedDate":"2024-02-16"},{"lineNumber":165,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":166,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":167,"author":{"gitId":"belligerentbeagle"},"content":"        if (matchingTasks.size() \u003e 0) {","lastModifiedDate":"2024-02-16"},{"lineNumber":168,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2024-02-16"},{"lineNumber":169,"author":{"gitId":"belligerentbeagle"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2024-02-16"},{"lineNumber":170,"author":{"gitId":"belligerentbeagle"},"content":"                System.out.println((i + 1) + \". \" + matchingTasks.get(i).toString());","lastModifiedDate":"2024-02-16"},{"lineNumber":171,"author":{"gitId":"belligerentbeagle"},"content":"                matchingTasksString +\u003d ((i + 1) + \". \" + matchingTasks.get(i).toString() + \"\\n\");","lastModifiedDate":"2024-02-16"},{"lineNumber":172,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":173,"author":{"gitId":"belligerentbeagle"},"content":"        } else {","lastModifiedDate":"2024-02-16"},{"lineNumber":174,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\" Sorry no tasks found matching that word :\u003c\");","lastModifiedDate":"2024-02-16"},{"lineNumber":175,"author":{"gitId":"belligerentbeagle"},"content":"            return (\" Sorry no tasks found matching that word :\u003c\");","lastModifiedDate":"2024-02-16"},{"lineNumber":176,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":177,"author":{"gitId":"belligerentbeagle"},"content":"        return (\" Here are the tasks in your list:\\n\" + matchingTasksString);","lastModifiedDate":"2024-02-16"},{"lineNumber":178,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":179,"author":{"gitId":"belligerentbeagle"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"belligerentbeagle":179}},{"path":"src/main/java/exceptions/BadDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"package exceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"public class BadDateException extends RuntimeException {","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"    protected final String expected;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"    protected final String example;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"    protected final String received;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"     * Constructs a BadInputException with the specified detail message.","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"     * @param message the detail message","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"    public BadDateException(String message, String expected, String example, String received) {","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"        super(message);","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"belligerentbeagle"},"content":"        this.expected \u003d expected;","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"belligerentbeagle"},"content":"        this.example \u003d example;","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"belligerentbeagle"},"content":"        this.received \u003d received;","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"belligerentbeagle"},"content":"    @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"belligerentbeagle"},"content":"    public String getMessage() {","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"belligerentbeagle"},"content":"        String message \u003d super.getMessage() + \"\\n\";","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"belligerentbeagle"},"content":"        String badInputMessage \u003d String.format(\"Bad date provided! Check the format or validity of date: %s\\n\",","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"belligerentbeagle"},"content":"                received \u003d\u003d null || received.isEmpty() ? \"\u003cempty\u003e\" : received);","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"belligerentbeagle"},"content":"        String expectedMessage \u003d (expected \u003d\u003d null) ? \"\" : String.format(\"Expected: %s\\n\", expected);","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"belligerentbeagle"},"content":"        String exampleMessage \u003d (example \u003d\u003d null) ? \"\" : String.format(\"Example: %s\\n\", example);","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"belligerentbeagle"},"content":"        return String.format(\"%s%s%s%s\", badInputMessage, message, expectedMessage, exampleMessage);","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"belligerentbeagle"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"belligerentbeagle":34}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"package exceptions;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"    public DukeException(String error) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"        super(error);","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"     * Gives a description of the error.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"     * @return Message on the error.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"belligerentbeagle"},"content":"    public String getMessage() {","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"belligerentbeagle"},"content":"        return super.getMessage();","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"belligerentbeagle"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"belligerentbeagle":18}},{"path":"src/main/java/exceptions/TaskNotExistException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"package exceptions;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"public class TaskNotExistException extends DukeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"    public TaskNotExistException(String number) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"        super(\"Task number \" + number + \" does not exist.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"     * Gives a description of the error.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"     * @return Message on the error.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"belligerentbeagle"},"content":"    public String getMessage() {","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"belligerentbeagle"},"content":"        return super.getMessage();","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"belligerentbeagle"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"belligerentbeagle":18}},{"path":"src/main/java/model/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"package model;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"import exceptions.BadDateException;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"    protected String byString;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"belligerentbeagle"},"content":"        this.byString \u003d by;","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"belligerentbeagle"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"belligerentbeagle"},"content":"            LocalDateTime moment \u003d super.parseDateTime(by);","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"belligerentbeagle"},"content":"            this.by \u003d moment;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"belligerentbeagle"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"belligerentbeagle"},"content":"            String expectedDateFormat \u003d \"YYYY-MM-DD or YYYY/MM/DD or DD-MM-YYYY or DD/MM/YYYY\";","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"belligerentbeagle"},"content":"            String example \u003d \"2024-12-14\";","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"belligerentbeagle"},"content":"            throw new BadDateException(e.getMessage(), expectedDateFormat, example, by);","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"belligerentbeagle"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"belligerentbeagle"},"content":"     * {inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"belligerentbeagle"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"belligerentbeagle"},"content":"     * @return String representation of the deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"belligerentbeagle"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"belligerentbeagle"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"belligerentbeagle"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"belligerentbeagle"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\")) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"belligerentbeagle"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"belligerentbeagle"},"content":"     * Used to obtain the string in the format that the task would be saved in.","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"belligerentbeagle"},"content":"     * @return String representation of the deadline that is savable.","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"belligerentbeagle"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"belligerentbeagle"},"content":"    public String fileSavingString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"belligerentbeagle"},"content":"        return \"D | \" + Integer.toString(super.isDone ? 1 : 0) + \" | \" + super.description + \" | \" + byString;","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"belligerentbeagle"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"belligerentbeagle":46}},{"path":"src/main/java/model/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"package model;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"    protected String fromString;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"    protected String toString;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"belligerentbeagle"},"content":"        this.fromString \u003d from;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"belligerentbeagle"},"content":"        this.toString \u003d to;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"belligerentbeagle"},"content":"        this.from \u003d super.parseDateTime(from);","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"belligerentbeagle"},"content":"        this.to \u003d super.parseDateTime(to);","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"belligerentbeagle"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"belligerentbeagle"},"content":"     * {inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"belligerentbeagle"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"belligerentbeagle"},"content":"     * @return String representation of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"belligerentbeagle"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"belligerentbeagle"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"belligerentbeagle"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"belligerentbeagle"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\")) + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\")) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"belligerentbeagle"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"belligerentbeagle"},"content":"     * Used to obtain the string in the format that the event would be saved in.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"belligerentbeagle"},"content":"     * @return String representation of the event that is savable.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"belligerentbeagle"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"belligerentbeagle"},"content":"    public String fileSavingString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"belligerentbeagle"},"content":"        return \"E | \" + Integer.toString(super.isDone ? 1 : 0) + \" | \" + super.description + \" | \" + this.fromString + \" | \" + this.toString;","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"belligerentbeagle"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"belligerentbeagle"},"content":"// event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"belligerentbeagle"},"content":"//    ____________________________________________________________","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"belligerentbeagle"},"content":"//     Got it. I\u0027ve added this task:","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"belligerentbeagle"},"content":"//       [E][ ] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"belligerentbeagle":43}},{"path":"src/main/java/model/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"package model;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"    protected String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"belligerentbeagle"},"content":"    public LocalDateTime parseDateTime(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"belligerentbeagle"},"content":"        DateTimeFormatter[] formattersWithTime \u003d new DateTimeFormatter[] {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"belligerentbeagle"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"belligerentbeagle"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"belligerentbeagle"},"content":"        };","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"belligerentbeagle"},"content":"        DateTimeFormatter[] formattersWithoutTime \u003d new DateTimeFormatter[] {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"belligerentbeagle"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"belligerentbeagle"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"belligerentbeagle"},"content":"                DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"belligerentbeagle"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"belligerentbeagle"},"content":"        };","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"belligerentbeagle"},"content":"        for (DateTimeFormatter formatter : formattersWithTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"belligerentbeagle"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"belligerentbeagle"},"content":"                return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"belligerentbeagle"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"belligerentbeagle"},"content":"                // Continue to try the next format","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"belligerentbeagle"},"content":"        for (DateTimeFormatter formatter : formattersWithoutTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"belligerentbeagle"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"belligerentbeagle"},"content":"                return LocalDate.parse(input, formatter).atTime(0, 0);","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"belligerentbeagle"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"belligerentbeagle"},"content":"                // Continue to try the next format","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"belligerentbeagle"},"content":"        throw new DateTimeParseException(\"Invalid date/time format\", input, 0);","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"belligerentbeagle"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"belligerentbeagle"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"belligerentbeagle"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"belligerentbeagle"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"belligerentbeagle"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"belligerentbeagle"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"belligerentbeagle"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"belligerentbeagle"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"belligerentbeagle"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"belligerentbeagle"},"content":"    public abstract String fileSavingString();","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"belligerentbeagle"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"belligerentbeagle":68}},{"path":"src/main/java/model/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"package model;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"     * {inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"     * @return String representation of the todo.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"belligerentbeagle"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"belligerentbeagle"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"belligerentbeagle"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"belligerentbeagle"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"belligerentbeagle"},"content":"     * Used to obtain the string in the format that the todo would be saved in.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"belligerentbeagle"},"content":"     * @return String representation of the todo that is savable.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"belligerentbeagle"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"belligerentbeagle"},"content":"    public String fileSavingString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"belligerentbeagle"},"content":"        return \"T | \" + Integer.toString(super.isDone ? 1 : 0) + \" | \" + super.description;","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"belligerentbeagle"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"belligerentbeagle":27}},{"path":"src/main/java/service/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"package service;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"public class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"     * Obtains the user\u0027s input command.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"     * @return The user\u0027s commands from the scanner.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"    public String parse() {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"        String s;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"belligerentbeagle"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"belligerentbeagle"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"belligerentbeagle"},"content":"            s \u003d scanner.nextLine(); // Use the same Scanner object","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"belligerentbeagle"},"content":"            return s;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"belligerentbeagle"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"No input found. Exiting.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"belligerentbeagle"},"content":"            return null;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"belligerentbeagle"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"belligerentbeagle":29}},{"path":"src/main/java/service/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"package service;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"public class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"    //private service.TaskList taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"    String filePath;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"belligerentbeagle"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"belligerentbeagle"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"belligerentbeagle"},"content":"    private static boolean isCorrupt(File file) throws FileNotFoundException {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"belligerentbeagle"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"belligerentbeagle"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"belligerentbeagle"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"belligerentbeagle"},"content":"                String task[] \u003d scanner.nextLine().split(\" \\\\| \");","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"belligerentbeagle"},"content":"                String type \u003d task[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"belligerentbeagle"},"content":"                String done \u003d task[1];","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"belligerentbeagle"},"content":"                String desc \u003d task[2];","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"belligerentbeagle"},"content":"                String time1 \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"belligerentbeagle"},"content":"                String time2 \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"belligerentbeagle"},"content":"                switch (type) {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"belligerentbeagle"},"content":"                case \"T\":","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"belligerentbeagle"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"belligerentbeagle"},"content":"                case \"D\":","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"belligerentbeagle"},"content":"                    time1 \u003d task[3];","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"belligerentbeagle"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"belligerentbeagle"},"content":"                case \"E\":","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"belligerentbeagle"},"content":"                    time1 \u003d task[3];","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"belligerentbeagle"},"content":"                    time2 \u003d task[4];","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"belligerentbeagle"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"belligerentbeagle"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"belligerentbeagle"},"content":"            scanner.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"belligerentbeagle"},"content":"            return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"belligerentbeagle"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"belligerentbeagle"},"content":"            return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"belligerentbeagle"},"content":"    private static void parseTodoFile(File file, TaskList taskList) throws Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"belligerentbeagle"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"belligerentbeagle"},"content":"        Integer taskCounter \u003d 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"belligerentbeagle"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"belligerentbeagle"},"content":"            String task[] \u003d scanner.nextLine().split(\" \\\\| \");","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"belligerentbeagle"},"content":"            String type \u003d task[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"belligerentbeagle"},"content":"            String done \u003d task[1];","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"belligerentbeagle"},"content":"            String desc \u003d task[2];","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"belligerentbeagle"},"content":"            String time1 \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"belligerentbeagle"},"content":"            String time2 \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"belligerentbeagle"},"content":"            switch (type) {","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"belligerentbeagle"},"content":"            case \"D\":","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"belligerentbeagle"},"content":"                time1 \u003d task[3];","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"belligerentbeagle"},"content":"                Duke.processCommand(\"Deadline \" + desc + \" /by \" + time1, taskList, false);","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"belligerentbeagle"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"belligerentbeagle"},"content":"            case \"E\":","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"belligerentbeagle"},"content":"                time1 \u003d task[3];","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"belligerentbeagle"},"content":"                time2 \u003d task[4];","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"belligerentbeagle"},"content":"                Duke.processCommand(\"Event \" + desc + \" /from \" + time1 + \" /to \" + time2, taskList, false);","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"belligerentbeagle"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"belligerentbeagle"},"content":"            case \"T\":","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"belligerentbeagle"},"content":"                Duke.processCommand(\"Todo \" + desc, taskList, false);","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"belligerentbeagle"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"belligerentbeagle"},"content":"            if (done.equals(\"1\")) { // done","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"belligerentbeagle"},"content":"                Duke.processCommand(\"Mark \" + taskCounter.toString(), taskList, false);","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"belligerentbeagle"},"content":"            //parse each line","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"belligerentbeagle"},"content":"            taskCounter++;","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"belligerentbeagle"},"content":"        scanner.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"belligerentbeagle"},"content":"    private static boolean createFile(File file) throws Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"belligerentbeagle"},"content":"        boolean fileIsCreated \u003d file.createNewFile(); //May throw IOException","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"belligerentbeagle"},"content":"        if (fileIsCreated) {","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"belligerentbeagle"},"content":"            return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"belligerentbeagle"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"belligerentbeagle"},"content":"            throw new DukeException(\"Unable to create new file\");","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"belligerentbeagle"},"content":"    private void openStoredFile(TaskList taskList) throws Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"belligerentbeagle"},"content":"        //See if file already exists then parse it","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"belligerentbeagle"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"belligerentbeagle"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"belligerentbeagle"},"content":"            if (!file.exists()) { //Create if don\u0027t exist","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"belligerentbeagle"},"content":"                createFile(file);","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"belligerentbeagle"},"content":"            } else if (isCorrupt(file)) { //file does exist","lastModifiedDate":"2024-02-16"},{"lineNumber":102,"author":{"gitId":"belligerentbeagle"},"content":"                //file corrupt","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"belligerentbeagle"},"content":"                System.out.println(\"File Corrupt! Creating new file\");","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"belligerentbeagle"},"content":"                createFile(file);","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"belligerentbeagle"},"content":"            } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"belligerentbeagle"},"content":"                //parse current info and return.","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"belligerentbeagle"},"content":"                System.out.println(\"Found file! Parsing...\");","lastModifiedDate":"2024-02-16"},{"lineNumber":108,"author":{"gitId":"belligerentbeagle"},"content":"                parseTodoFile(file, taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"belligerentbeagle"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"Oh no!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"belligerentbeagle"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"belligerentbeagle"},"content":"     * Preload the current already-stored list of tasks from data.txt.","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"belligerentbeagle"},"content":"     * @param taskList tasklist object where the tasks would be added to.","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"belligerentbeagle"},"content":"     * @throws Exception","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"belligerentbeagle"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"belligerentbeagle"},"content":"    public void loadInfo(TaskList taskList) throws Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"belligerentbeagle"},"content":"        openStoredFile(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"belligerentbeagle"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"belligerentbeagle"},"content":"     * Update the database (duke.txt) on the most recent version of the tasklist.","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"belligerentbeagle"},"content":"     * @param taskList most updated version of the tasklist.","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"belligerentbeagle"},"content":"     * @throws RuntimeException","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"belligerentbeagle"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"belligerentbeagle"},"content":"    public void updateRecords(TaskList taskList) throws RuntimeException { //TODO: to continue, need to add delete task fn, mark, unmark, list","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"belligerentbeagle"},"content":"        assert(this.filePath !\u003d null);","lastModifiedDate":"2024-02-15"},{"lineNumber":132,"author":{"gitId":"belligerentbeagle"},"content":"        assert(taskList !\u003d null);","lastModifiedDate":"2024-02-16"},{"lineNumber":133,"author":{"gitId":"belligerentbeagle"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"belligerentbeagle"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-16"},{"lineNumber":135,"author":{"gitId":"belligerentbeagle"},"content":"            return;","lastModifiedDate":"2024-02-16"},{"lineNumber":136,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":137,"author":{"gitId":"belligerentbeagle"},"content":"        try (FileWriter writer \u003d new FileWriter(file)) { // true for append mode","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"belligerentbeagle"},"content":"            writer.write(taskList.get(0).fileSavingString());","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"belligerentbeagle"},"content":"            for (int i \u003d 1; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"belligerentbeagle"},"content":"                writer.write(\"\\n\" + taskList.get(i).fileSavingString());","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"belligerentbeagle"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"belligerentbeagle"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":147,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"belligerentbeagle"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"belligerentbeagle":148}},{"path":"src/main/java/service/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"package service;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"import model.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"public class TaskList{","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"    private ArrayList\u003cTask\u003e todos;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"        this.todos \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"belligerentbeagle"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"belligerentbeagle"},"content":"     * Obtains the task with the corresponding index number.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"belligerentbeagle"},"content":"     * @param i the index number.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"belligerentbeagle"},"content":"     * @return task with the corresponding index number.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"belligerentbeagle"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"belligerentbeagle"},"content":"    public Task get(int i) {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"belligerentbeagle"},"content":"        return todos.get(i);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"belligerentbeagle"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"belligerentbeagle"},"content":"     * Returns the task with the corresponding index number.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"belligerentbeagle"},"content":"     * @param i the index number.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"belligerentbeagle"},"content":"     * @return task that was removed.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"belligerentbeagle"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"belligerentbeagle"},"content":"    public Task remove(int i) {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"belligerentbeagle"},"content":"        return todos.remove(i);","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"belligerentbeagle"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"belligerentbeagle"},"content":"     * Returns number of items in the tasklist","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"belligerentbeagle"},"content":"     * @return number of items in the tasklist","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"belligerentbeagle"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"belligerentbeagle"},"content":"    public int size() {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"belligerentbeagle"},"content":"        return todos.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"belligerentbeagle"},"content":"    public void add(Task newTask) {","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"belligerentbeagle"},"content":"       todos.add(newTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"belligerentbeagle"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"belligerentbeagle":44}},{"path":"src/main/java/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"package ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"public class UI {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"    public UI() {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"    public String formalities(String context) {","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"        if (context.equals(\"greet\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"            this.showLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"            greet();","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"            this.showLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"belligerentbeagle"},"content":"            String greeting \u003d \" Wassup dawg, I\u0027m Snoopy\";","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"belligerentbeagle"},"content":"            return greeting;","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"belligerentbeagle"},"content":"        } else if (context.equals(\"farewell\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"belligerentbeagle"},"content":"            this.showLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\" Bye. Don\u0027t come back. jk!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"belligerentbeagle"},"content":"            this.showLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"belligerentbeagle"},"content":"            String farewell \u003d \" Bye. Don\u0027t come back. jk!\";","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"belligerentbeagle"},"content":"            return farewell;","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"belligerentbeagle"},"content":"        } else {","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"belligerentbeagle"},"content":"            throw new DukeException(\"Unknown formality context!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"belligerentbeagle"},"content":"    private static void greet() {","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"belligerentbeagle"},"content":"        System.out.println(\" Wassup dawg, I\u0027m Snoopy\");","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"belligerentbeagle"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"belligerentbeagle"},"content":"    public void showLine() {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"belligerentbeagle"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"belligerentbeagle"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"belligerentbeagle":38}},{"path":"src/main/java/view/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"package view;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"belligerentbeagle"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"belligerentbeagle"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"belligerentbeagle"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"belligerentbeagle"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"belligerentbeagle"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"belligerentbeagle"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"belligerentbeagle"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"belligerentbeagle"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"belligerentbeagle"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"belligerentbeagle"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"belligerentbeagle"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"belligerentbeagle"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"belligerentbeagle"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"belligerentbeagle"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"belligerentbeagle"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"belligerentbeagle"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"belligerentbeagle"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"belligerentbeagle"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"belligerentbeagle"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"belligerentbeagle"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"belligerentbeagle"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"belligerentbeagle"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"belligerentbeagle"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"belligerentbeagle"},"content":"    private void flip() {","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"belligerentbeagle"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"belligerentbeagle"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"belligerentbeagle"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"belligerentbeagle"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"belligerentbeagle"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"belligerentbeagle"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"belligerentbeagle"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"belligerentbeagle"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"belligerentbeagle"},"content":"        db.flip();","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"belligerentbeagle"},"content":"        return db;","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"belligerentbeagle"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"belligerentbeagle":59}},{"path":"src/main/java/view/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"package view;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"import view.DialogBox;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"belligerentbeagle"},"content":" * Controller for view.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"belligerentbeagle"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"belligerentbeagle"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"belligerentbeagle"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"belligerentbeagle"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"belligerentbeagle"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"belligerentbeagle"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"belligerentbeagle"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"belligerentbeagle"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"belligerentbeagle"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"belligerentbeagle"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"belligerentbeagle"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"belligerentbeagle"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"belligerentbeagle"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"belligerentbeagle"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"belligerentbeagle"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"belligerentbeagle"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"belligerentbeagle"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"belligerentbeagle"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"belligerentbeagle"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"belligerentbeagle"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"belligerentbeagle"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"belligerentbeagle"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"belligerentbeagle"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"belligerentbeagle"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"belligerentbeagle"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"belligerentbeagle"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"belligerentbeagle"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"belligerentbeagle"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"belligerentbeagle"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"belligerentbeagle"},"content":"        );","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"belligerentbeagle"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"belligerentbeagle"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"belligerentbeagle":55}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"belligerentbeagle"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"belligerentbeagle"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"belligerentbeagle":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"view.MainWindow\"\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"belligerentbeagle"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"belligerentbeagle"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"belligerentbeagle"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"belligerentbeagle"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"belligerentbeagle"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"belligerentbeagle":19}},{"path":"src/test/java/model/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"package model;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"    public void dateParsing_properDate_dateParsedCorrectlyForSaving(){","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"        Deadline deadline \u003d new Deadline(\"test description\", \"2024-02-01\");","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"        assertEquals(deadline.fileSavingString(), \"D | 0 | test description | 2024-02-01\");","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"    public void dateParsing_properDatetime_dateParsedCorrectlyForPrinting(){","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"belligerentbeagle"},"content":"        Deadline deadline \u003d new Deadline(\"test description\", \"2024-02-01\");","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"belligerentbeagle"},"content":"        assertEquals(deadline.toString(), \"[D][ ] test description (by: Feb 01 2024 0000)\");","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"belligerentbeagle"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"belligerentbeagle":23}},{"path":"src/test/java/model/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"package model;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"public class EventTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"    public void dateParsing_dateParsedCorrectlyForSaving(){","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"        Event event \u003d new Event(\"test description\", \"2024-02-01 1800\", \"2024-02-01 1900\");","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"        assertEquals(event.fileSavingString(), \"E | 0 | test description | 2024-02-01 1800 | 2024-02-01 1900\");","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"belligerentbeagle"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"belligerentbeagle"},"content":"    public void dateParsing_dateParsedCorrectlyForPrinting(){","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"belligerentbeagle"},"content":"        Event event \u003d new Event(\"test description\", \"2024-02-01 1800\", \"2024-02-01 1900\");","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"belligerentbeagle"},"content":"        assertEquals(event.toString(), \"[E][ ] test description (from: Feb 01 2024 1800 to: Feb 01 2024 1900)\");","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"belligerentbeagle"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"belligerentbeagle":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"todo borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"deadline return book /by 2019-12-12 1800","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"event project meeting /from 2019-12-12 1800 /to 2019-12-13 1800","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"mark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"unmark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"delete 12","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"belligerentbeagle":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"belligerentbeagle"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"belligerentbeagle":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"belligerentbeagle"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"belligerentbeagle":1,"-":37}},{"path":"text-ui-test/src/main/java/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"D | 1 | return book | 2019-12-03 0000","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"T | 1 | read book","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"T | 0 | read book","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"E | 0 | project meeting | 2024-08-06 1400 | 2024-08-06 1800","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"T | 1 | join sports club","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"T | 0 | read book","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"T | 0 | evenNewer","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"D | 0 | yestheory | 2019-12-03 0000","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"T | 0 | test","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"T | 0 | borrow book","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"T | 0 | borrow book","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"T | 0 | borrow book","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"T | 0 | borrow book","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"belligerentbeagle":13}}]
