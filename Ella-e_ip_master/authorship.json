[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"# Plaudern User Guide","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"![Screenshot of Plaudern](docs/Ui.png)","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"Plaudern is a task management application that allows users to record their upcoming tasks and update tasks\u0027 states.","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"It is designed to be simple and easy to use, and is in the form of an interactive chatbot which makes the communication more interesting.","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"## Quick Start","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"2. Download the latest `plaudern.jar` from [here](https://github.com/Ella-e/ip/releases).","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"3. Copy the file to the folder you want to use as the home folder for Plaudern.","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"4. Run the file using the command `java -jar plaudern.jar` in the terminal.","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"## Features","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"### Adding a todo task: `todo \u003ctask description\u003e`","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"Todo tasks are tasks without date to finish or start.\u003cbr\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"Examples:","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"todo read CS2103T textbook","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"Sample output:","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"[T][ ] read CS2103T textbook","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"Ella-e"},"content":"### Adding a deadline task: `deadline \u003ctask description\u003e /by \u003cyyyy-mm-dd\u003e`","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"Ella-e"},"content":"Deadline tasks are tasks with a date to finish.\u003cbr\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"Ella-e"},"content":"Examples:","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"Ella-e"},"content":"deadline submit report /by 2023-03-10","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"Ella-e"},"content":"Sample output:","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"Ella-e"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"Ella-e"},"content":"[D][ ] submit report (by: Mar 10 2023)","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"Ella-e"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"Ella-e"},"content":"### Adding an event task: `event \u003ctask description\u003e /from \u003cyyyy-mm-dd\u003e /to \u003cyyyy-mm-dd\u003e`","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"Ella-e"},"content":"Event tasks are tasks with a date to start and end.\u003cbr\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"Ella-e"},"content":"Examples:","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"Ella-e"},"content":"event finish math homework /from 2022-11-13 /to 2022-11-14","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"Ella-e"},"content":"Sample output:","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"Ella-e"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"Ella-e"},"content":"[E][ ] finish math homework (from: Nov 13 2022 to: Nov 14 2022)","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"Ella-e"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"Ella-e"},"content":"### Marking a task as done: `mark \u003ctask number\u003e`","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"Ella-e"},"content":"Mark a task as done.\u003cbr\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"Ella-e"},"content":"Examples:","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"Ella-e"},"content":"mark 1","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"Ella-e"},"content":"Sample output:","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"Ella-e"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"Ella-e"},"content":"[T][X] read CS2103T textbook","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"Ella-e"},"content":"### Unmarking a task as done: `unmark \u003ctask number\u003e`","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"Ella-e"},"content":"Unmark a task as done.\u003cbr\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"Ella-e"},"content":"Examples:","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"Ella-e"},"content":"unmark 1","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"Ella-e"},"content":"Sample output:","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":77,"author":{"gitId":"Ella-e"},"content":"Noted. I\u0027ve marked this task as undone:","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"Ella-e"},"content":"[T][ ] read CS2103T textbook","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":80,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"Ella-e"},"content":"### Deleting a task: `delete \u003ctask number\u003e`","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"Ella-e"},"content":"Delete a task from the task list.\u003cbr\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"Ella-e"},"content":"Examples:","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"Ella-e"},"content":"delete 1","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"Ella-e"},"content":"Sample output:","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"Ella-e"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"Ella-e"},"content":"[T][ ] read CS2103T textbook","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"Ella-e"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"Ella-e"},"content":"### Finding tasks by keyword: `find \u003ckeyword\u003e`","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"Ella-e"},"content":"Find tasks by keyword in the task content.\u003cbr\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"Ella-e"},"content":"Examples:","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"Ella-e"},"content":"find homework","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"Ella-e"},"content":"Sample output:","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"Ella-e"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"Ella-e"},"content":"1. [E][ ] finish math homework (from: Nov 13 2022 to: Nov 14 2022)","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"Ella-e"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"Ella-e"},"content":"List all tasks in the task list.\u003cbr\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"Ella-e"},"content":"Sample output:","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"Ella-e"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"Ella-e"},"content":"1. [T][ ] read CS2103T textbook","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"Ella-e"},"content":"2. [D][ ] submit report (by: Mar 10 2023)","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"Ella-e"},"content":"3. [E][ ] finish math homework (from: Nov 13 2022 to: Nov 14 2022)","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"Ella-e"},"content":"### Exiting the application: `bye`","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"Ella-e"},"content":"Exit the application after 2 seconds.\u003cbr\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"Ella-e"},"content":"Sample output:","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"Ella-e"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"Ella-e"},"content":"### Displaying most recent tasks upon entering the application","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"Ella-e"},"content":"When user enters the application, the 2 unmarked tasks with the most recent due will be displayed.\u003cbr\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"Ella-e"},"content":"Sample output:","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"Ella-e"},"content":"\u003d\u003dReminder\u003d\u003d","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"Ella-e"},"content":"Those tasks are due next:","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"Ella-e"},"content":"1. [D][ ] submit report (by: Mar 10 2023)","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"Ella-e"},"content":"2. [E][ ] finish math homework (from: Nov 13 2022 to: Nov 14 2022)","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"Ella-e"},"content":"### Saving the data","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"Ella-e"},"content":"The data will be saved in the hard disk in the form of a txt file automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"Ella-e"},"content":"### Loading the data","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"Ella-e"},"content":"The data will be loaded from the txt file in the hard disk when the application starts up.","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"Ella-e"},"content":"\u003e[!NOTE]","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"Ella-e"},"content":"\u003e If it is the first time the application starts up, the application will automatically create the data file for storage.","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"Ella-e"},"content":"\u003e[!CAUTION]","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"Ella-e"},"content":"\u003e DO NOT CHANGE THE DATA FILE MANUALLY: If the format of data in the data file is invalid, Plaudern will not be able to load the data and will require the user to delete the data file manually.","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"Ella-e"},"content":"## Additional notes about commands","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"Ella-e"},"content":"- Usage of the special character `|` is strictly prohibited in the command.","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"Ella-e"},"content":"- Commands are **case-insensitive**.","lastModifiedDate":"2024-03-19"},{"lineNumber":147,"author":{"gitId":"Ella-e"},"content":"- Words in `\u003cangle brackets\u003e` are the parameters to be supplied by the user.","lastModifiedDate":"2024-03-19"},{"lineNumber":148,"author":{"gitId":"Ella-e"},"content":"- `\u003ctask number\u003e` is **1-based integer index** of the task in the task list.","lastModifiedDate":"2024-03-19"},{"lineNumber":149,"author":{"gitId":"Ella-e"},"content":"- Date format: `yyyy-mm-dd`","lastModifiedDate":"2024-03-19"},{"lineNumber":150,"author":{"gitId":"Ella-e"},"content":"- `mark` and `unmark` commands can be done multiple times on the same task without causing any error.","lastModifiedDate":"2024-03-19"},{"lineNumber":151,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":152,"author":{"gitId":"Ella-e"},"content":"\u003e[!WARNING]","lastModifiedDate":"2024-03-19"},{"lineNumber":153,"author":{"gitId":"Ella-e"},"content":"\u003e - No preceding space is allowed in the command. For example, ` todo read book` is invalid.","lastModifiedDate":"2024-03-19"},{"lineNumber":154,"author":{"gitId":"Ella-e"},"content":"\u003e - No preceding space is allowed before the date in the command. For example, `deadline submit report /by  2023-03-10` is invalid.","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"Ella-e":148,"-":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"checkstyle {","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"checkstyleMain {","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"    source \u0027src/main/java\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    //@@author woojiahao-reused","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/woojiahao/ip/blob/master/build.gradle","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.google.code.gson\u0027, name: \u0027gson\u0027, version: \u00272.10.1\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    def platforms \u003d [\"win\", \"linux\", \"mac\"]","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    def javafxDependency \u003d [\"javafx-graphics\", \"javafx-controls\", \"javafx-fxml\"]","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    for (plt in platforms) {","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        for (dep in javafxDependency) {","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            runtimeOnly \"org.openjfx:$dep:$javafx.version:$plt\"","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    //@author woojiahao","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"plaudern\"","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"javafx {","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    version \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    modules \u003d [\u0027javafx.base\u0027, \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027, \u0027javafx.graphics\u0027]","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"Ella-e":8,"-":63}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"T|1|eat","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"T|0|abc","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"T|1|abc","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"T|0|read book","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"E|0|read book |2022-02-02|2024-01-01","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"T|0|tidy","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"T|0|a","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"T|0|read","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"Ella-e":8}},{"path":"data/plaudern.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"T|0|abc","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"E|1|abc sss |2022-02-02|2023-01-01","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"D|0|content |2022-02-02","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"D|1|shown |2022-02-01","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"E|0|abc |2024-01-06|2025-12-01","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"Ella-e":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"# Plaudern User Guide","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"![Screenshot of Plaudern](Ui.png)","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"Plaudern is a task management application that allows users to record their upcoming tasks and update tasks\u0027 states. ","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"It is designed to be simple and easy to use, and is in the form of an interactive chatbot which makes the communication more interesting.","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"## Quick Start","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"2. Download the latest `plaudern.jar` from [here](https://github.com/Ella-e/ip/releases).","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"3. Copy the file to the folder you want to use as the home folder for Plaudern.","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"4. Run the file using the command `java -jar plaudern.jar` in the terminal.","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"## Features","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"### Adding a todo task: `todo \u003ctask description\u003e`","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"Todo tasks are tasks without date to finish or start.\u003cbr\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"Examples: ","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"todo read CS2103T textbook","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"Sample output:","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"[T][ ] read CS2103T textbook","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"Ella-e"},"content":"### Adding a deadline task: `deadline \u003ctask description\u003e /by \u003cyyyy-mm-dd\u003e`","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"Ella-e"},"content":"Deadline tasks are tasks with a date to finish.\u003cbr\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"Ella-e"},"content":"Examples: ","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"Ella-e"},"content":"deadline submit report /by 2023-03-10","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"Ella-e"},"content":"Sample output:","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"Ella-e"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"Ella-e"},"content":"[D][ ] submit report (by: Mar 10 2023)","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"Ella-e"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"Ella-e"},"content":"### Adding an event task: `event \u003ctask description\u003e /from \u003cyyyy-mm-dd\u003e /to \u003cyyyy-mm-dd\u003e`","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"Ella-e"},"content":"Event tasks are tasks with a date to start and end.\u003cbr\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"Ella-e"},"content":"Examples:","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"Ella-e"},"content":"event finish math homework /from 2022-11-13 /to 2022-11-14","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"Ella-e"},"content":"Sample output:","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"Ella-e"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"Ella-e"},"content":"[E][ ] finish math homework (from: Nov 13 2022 to: Nov 14 2022)","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"Ella-e"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"Ella-e"},"content":"### Marking a task as done: `mark \u003ctask number\u003e`","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"Ella-e"},"content":"Mark a task as done.\u003cbr\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"Ella-e"},"content":"Examples:","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"Ella-e"},"content":"mark 1","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"Ella-e"},"content":"Sample output:","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"Ella-e"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"Ella-e"},"content":"[T][X] read CS2103T textbook","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"Ella-e"},"content":"### Unmarking a task as done: `unmark \u003ctask number\u003e`","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"Ella-e"},"content":"Unmark a task as done.\u003cbr\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"Ella-e"},"content":"Examples:","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":73,"author":{"gitId":"Ella-e"},"content":"unmark 1","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":75,"author":{"gitId":"Ella-e"},"content":"Sample output:","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"Ella-e"},"content":"Noted. I\u0027ve marked this task as undone:","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"Ella-e"},"content":"[T][ ] read CS2103T textbook","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"Ella-e"},"content":"### Deleting a task: `delete \u003ctask number\u003e`","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"Ella-e"},"content":"Delete a task from the task list.\u003cbr\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":83,"author":{"gitId":"Ella-e"},"content":"Examples:","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"Ella-e"},"content":"delete 1","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"Ella-e"},"content":"Sample output:","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"Ella-e"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"Ella-e"},"content":"[T][ ] read CS2103T textbook","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"Ella-e"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"Ella-e"},"content":"### Finding tasks by keyword: `find \u003ckeyword\u003e`","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"Ella-e"},"content":"Find tasks by keyword in the task content.\u003cbr\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"Ella-e"},"content":"Examples:","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"Ella-e"},"content":"find homework","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":100,"author":{"gitId":"Ella-e"},"content":"Sample output:","lastModifiedDate":"2024-02-20"},{"lineNumber":101,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":102,"author":{"gitId":"Ella-e"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-02-20"},{"lineNumber":103,"author":{"gitId":"Ella-e"},"content":"1. [E][ ] finish math homework (from: Nov 13 2022 to: Nov 14 2022)","lastModifiedDate":"2024-02-20"},{"lineNumber":104,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":105,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":106,"author":{"gitId":"Ella-e"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2024-02-20"},{"lineNumber":107,"author":{"gitId":"Ella-e"},"content":"List all tasks in the task list.\u003cbr\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":108,"author":{"gitId":"Ella-e"},"content":"Sample output:","lastModifiedDate":"2024-02-20"},{"lineNumber":109,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":110,"author":{"gitId":"Ella-e"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-02-20"},{"lineNumber":111,"author":{"gitId":"Ella-e"},"content":"1. [T][ ] read CS2103T textbook","lastModifiedDate":"2024-02-20"},{"lineNumber":112,"author":{"gitId":"Ella-e"},"content":"2. [D][ ] submit report (by: Mar 10 2023)","lastModifiedDate":"2024-02-20"},{"lineNumber":113,"author":{"gitId":"Ella-e"},"content":"3. [E][ ] finish math homework (from: Nov 13 2022 to: Nov 14 2022)","lastModifiedDate":"2024-02-20"},{"lineNumber":114,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":115,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":116,"author":{"gitId":"Ella-e"},"content":"### Exiting the application: `bye`","lastModifiedDate":"2024-02-20"},{"lineNumber":117,"author":{"gitId":"Ella-e"},"content":"Exit the application after 2 seconds.\u003cbr\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":118,"author":{"gitId":"Ella-e"},"content":"Sample output:","lastModifiedDate":"2024-02-20"},{"lineNumber":119,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":120,"author":{"gitId":"Ella-e"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2024-02-20"},{"lineNumber":121,"author":{"gitId":"Ella-e"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":123,"author":{"gitId":"Ella-e"},"content":"### Displaying most recent tasks upon entering the application","lastModifiedDate":"2024-02-20"},{"lineNumber":124,"author":{"gitId":"Ella-e"},"content":"When user enters the application, the 2 unmarked tasks with the most recent due will be displayed.\u003cbr\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":125,"author":{"gitId":"Ella-e"},"content":"Sample output:","lastModifiedDate":"2024-02-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":127,"author":{"gitId":"Ella-e"},"content":"\u003d\u003dReminder\u003d\u003d","lastModifiedDate":"2024-02-20"},{"lineNumber":128,"author":{"gitId":"Ella-e"},"content":"Those tasks are due next:","lastModifiedDate":"2024-02-20"},{"lineNumber":129,"author":{"gitId":"Ella-e"},"content":"1. [D][ ] submit report (by: Mar 10 2023)","lastModifiedDate":"2024-02-20"},{"lineNumber":130,"author":{"gitId":"Ella-e"},"content":"2. [E][ ] finish math homework (from: Nov 13 2022 to: Nov 14 2022)","lastModifiedDate":"2024-02-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":133,"author":{"gitId":"Ella-e"},"content":"### Saving the data","lastModifiedDate":"2024-02-20"},{"lineNumber":134,"author":{"gitId":"Ella-e"},"content":"The data will be saved in the hard disk in the form of a txt file automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-02-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":136,"author":{"gitId":"Ella-e"},"content":"### Loading the data","lastModifiedDate":"2024-02-20"},{"lineNumber":137,"author":{"gitId":"Ella-e"},"content":"The data will be loaded from the txt file in the hard disk when the application starts up.","lastModifiedDate":"2024-02-20"},{"lineNumber":138,"author":{"gitId":"Ella-e"},"content":"\u003e[!NOTE]","lastModifiedDate":"2024-02-20"},{"lineNumber":139,"author":{"gitId":"Ella-e"},"content":"\u003e If it is the first time the application starts up, the application will automatically create the data file for storage.","lastModifiedDate":"2024-02-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":141,"author":{"gitId":"Ella-e"},"content":"\u003e[!CAUTION]","lastModifiedDate":"2024-02-20"},{"lineNumber":142,"author":{"gitId":"Ella-e"},"content":"\u003e DO NOT CHANGE THE DATA FILE MANUALLY: If the format of data in the data file is invalid, Plaudern will not be able to load the data and will require the user to delete the data file manually.","lastModifiedDate":"2024-02-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":144,"author":{"gitId":"Ella-e"},"content":"## Additional notes about commands","lastModifiedDate":"2024-02-21"},{"lineNumber":145,"author":{"gitId":"Ella-e"},"content":"- Usage of the special character `|` is strictly prohibited in the command.","lastModifiedDate":"2024-02-20"},{"lineNumber":146,"author":{"gitId":"Ella-e"},"content":"- Commands are **case-insensitive**.","lastModifiedDate":"2024-02-20"},{"lineNumber":147,"author":{"gitId":"Ella-e"},"content":"- Words in `\u003cangle brackets\u003e` are the parameters to be supplied by the user.","lastModifiedDate":"2024-02-20"},{"lineNumber":148,"author":{"gitId":"Ella-e"},"content":"- `\u003ctask number\u003e` is **1-based integer index** of the task in the task list.","lastModifiedDate":"2024-02-20"},{"lineNumber":149,"author":{"gitId":"Ella-e"},"content":"- Date format: `yyyy-mm-dd`","lastModifiedDate":"2024-02-20"},{"lineNumber":150,"author":{"gitId":"Ella-e"},"content":"- `mark` and `unmark` commands can be done multiple times on the same task without causing any error.","lastModifiedDate":"2024-02-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":152,"author":{"gitId":"Ella-e"},"content":"\u003e[!WARNING]","lastModifiedDate":"2024-02-21"},{"lineNumber":153,"author":{"gitId":"Ella-e"},"content":"\u003e - No preceding space is allowed in the command. For example, ` todo read book` is invalid.","lastModifiedDate":"2024-02-21"},{"lineNumber":154,"author":{"gitId":"Ella-e"},"content":"\u003e - No preceding space is allowed before the date in the command. For example, `deadline submit report /by  2023-03-10` is invalid.","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"Ella-e":135,"-":19}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"import duke.exceptions.BaseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"import duke.ui.UI;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"import duke.utils.Parser;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":" * Main chatbot class.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"    private UI ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"     * Initializes the chatbot.","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"    public Duke() {","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"        this(\"./data/plaudern.txt\");","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"     * Initializes by loading the stored file.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"Ella-e"},"content":"     * @param filePath Path of stored file.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Ella-e"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"Ella-e"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"Ella-e"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"Ella-e"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Ella-e"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"Ella-e"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"Ella-e"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Ella-e"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Ella-e"},"content":"     * Runs the chatbot.","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Ella-e"},"content":"    public void run() {","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"Ella-e"},"content":"        System.out.println(ui.onEnter());","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"Ella-e"},"content":"        String response \u003d \"\";","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"Ella-e"},"content":"        do {","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"Ella-e"},"content":"            response \u003d getResponse(ui.getUserInput());","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"Ella-e"},"content":"        } while (!Objects.equals(response, \"Bye. Hope to see you again soon!\"","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"Ella-e"},"content":"            + \"(The window will be closed automatically in 3 seconds)\"));","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"Ella-e"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"Ella-e"},"content":"        Duke duke \u003d new Duke(\"./data/duke.txt\");","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"Ella-e"},"content":"        duke.run();","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"Ella-e"},"content":"     * Gets response from the chatbot.","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"Ella-e"},"content":"     * @param userInput Command user entered.","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"Ella-e"},"content":"     * @return Response from the chatbot.","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"Ella-e"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"Ella-e"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"Ella-e"},"content":"            // use parser to process the userInput","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"Ella-e"},"content":"            // the parser object contains all the current user input line information","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"Ella-e"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"Ella-e"},"content":"            parser.parse(userInput);","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"Ella-e"},"content":"            // continue for the functionality","lastModifiedDate":"2024-01-22"},{"lineNumber":73,"author":{"gitId":"Ella-e"},"content":"            switch (parser.getCurrentKey()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"Ella-e"},"content":"            case EXITKEY:","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"Ella-e"},"content":"                return getExitResponse(parser);","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"Ella-e"},"content":"            case DEADLINE:","lastModifiedDate":"2024-01-22"},{"lineNumber":77,"author":{"gitId":"Ella-e"},"content":"            case TODO:","lastModifiedDate":"2024-01-22"},{"lineNumber":78,"author":{"gitId":"Ella-e"},"content":"            case EVENT:","lastModifiedDate":"2024-01-22"},{"lineNumber":79,"author":{"gitId":"Ella-e"},"content":"                return getAddResponse(parser);","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"Ella-e"},"content":"            case LIST:","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"Ella-e"},"content":"                return getListResponse();","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"Ella-e"},"content":"            case MARK:","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"Ella-e"},"content":"                return getMarkResponse(parser);","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"Ella-e"},"content":"            case UNMARK:","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"Ella-e"},"content":"                return getUnMarkResponse(parser);","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"Ella-e"},"content":"            case DELETE:","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"Ella-e"},"content":"                return getDeleteResponse(parser);","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"Ella-e"},"content":"            case FIND:","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"Ella-e"},"content":"                return getFindResponse(parser);","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"Ella-e"},"content":"            default:","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"Ella-e"},"content":"                return ui.showErrorMsg(\"Invalid command\");","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"Ella-e"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"Ella-e"},"content":"        } catch (BaseException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"Ella-e"},"content":"            return ui.showErrorMsg(e.getMessage());","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"Ella-e"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"Ella-e"},"content":"            return ui.showLoadingError();","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"Ella-e"},"content":"     * Gets response for adding a task.","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"Ella-e"},"content":"     * @param parser parser object","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"Ella-e"},"content":"     * @return response for adding a task","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"Ella-e"},"content":"     * @throws IOException if the file is not found","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"Ella-e"},"content":"    public String getAddResponse(Parser parser) throws IOException {","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"Ella-e"},"content":"        Task task \u003d tasks.addTask(parser.getInputDetail(),","lastModifiedDate":"2024-02-06"},{"lineNumber":108,"author":{"gitId":"Ella-e"},"content":"            parser.getFrom(), parser.getTo(), parser.getCurrentKey());","lastModifiedDate":"2024-02-06"},{"lineNumber":109,"author":{"gitId":"Ella-e"},"content":"        storage.writeTasksToFile(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"Ella-e"},"content":"        return ui.onAddSuccess(task, tasks.getNumOfTasks());","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"Ella-e"},"content":"     * Gets list response.","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"Ella-e"},"content":"     * @return list response","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"Ella-e"},"content":"    public String getListResponse() {","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"Ella-e"},"content":"        return ui.showList(tasks);","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"Ella-e"},"content":"     * Gets response for marking a task as done.","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"Ella-e"},"content":"     * @param parser parser object","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"Ella-e"},"content":"     * @return response for marking a task as done","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"Ella-e"},"content":"     * @throws IOException if the file is not found","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"Ella-e"},"content":"    public String getMarkResponse(Parser parser) throws IOException {","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"Ella-e"},"content":"        Task markedTask \u003d tasks.markTaskById(parser.getIndex(), true);","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"Ella-e"},"content":"        storage.writeTasksToFile(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"Ella-e"},"content":"        return ui.onMarkDone(markedTask);","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"Ella-e"},"content":"     * Gets response for unmarking a task.","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"Ella-e"},"content":"     * @param parser parser object","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"Ella-e"},"content":"     * @return response for unmarking a task","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"Ella-e"},"content":"     * @throws IOException if the file is not found","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"Ella-e"},"content":"    public String getUnMarkResponse(Parser parser) throws IOException {","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"Ella-e"},"content":"        Task unMarkedTask \u003d tasks.markTaskById(parser.getIndex(), false);","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"Ella-e"},"content":"        storage.writeTasksToFile(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"Ella-e"},"content":"        return ui.onUnmarkDone(unMarkedTask);","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"Ella-e"},"content":"     * Gets response for deleting a task.","lastModifiedDate":"2024-03-19"},{"lineNumber":147,"author":{"gitId":"Ella-e"},"content":"     * @param parser parser object","lastModifiedDate":"2024-03-19"},{"lineNumber":148,"author":{"gitId":"Ella-e"},"content":"     * @return response for deleting a task","lastModifiedDate":"2024-03-19"},{"lineNumber":149,"author":{"gitId":"Ella-e"},"content":"     * @throws IOException if the file is not found","lastModifiedDate":"2024-03-19"},{"lineNumber":150,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":151,"author":{"gitId":"Ella-e"},"content":"    public String getDeleteResponse(Parser parser) throws IOException {","lastModifiedDate":"2024-03-19"},{"lineNumber":152,"author":{"gitId":"Ella-e"},"content":"        Task deletedTask \u003d tasks.deleteTaskById(parser.getIndex());","lastModifiedDate":"2024-01-29"},{"lineNumber":153,"author":{"gitId":"Ella-e"},"content":"        storage.writeTasksToFile(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":154,"author":{"gitId":"Ella-e"},"content":"        return ui.onDelete(deletedTask, tasks);","lastModifiedDate":"2024-03-19"},{"lineNumber":155,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":156,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":157,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":158,"author":{"gitId":"Ella-e"},"content":"     * Gets response for finding tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":159,"author":{"gitId":"Ella-e"},"content":"     * @param parser parser object","lastModifiedDate":"2024-03-19"},{"lineNumber":160,"author":{"gitId":"Ella-e"},"content":"     * @return response for finding tasks","lastModifiedDate":"2024-03-19"},{"lineNumber":161,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":162,"author":{"gitId":"Ella-e"},"content":"    public String getFindResponse(Parser parser) {","lastModifiedDate":"2024-03-19"},{"lineNumber":163,"author":{"gitId":"Ella-e"},"content":"        TaskList matchedTasks \u003d tasks.findTasks(parser.getInputDetail());","lastModifiedDate":"2024-03-19"},{"lineNumber":164,"author":{"gitId":"Ella-e"},"content":"        return ui.showMatchedList(matchedTasks);","lastModifiedDate":"2024-03-19"},{"lineNumber":165,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":166,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"Ella-e"},"content":"     * Gets response for exiting the chatbot.","lastModifiedDate":"2024-03-19"},{"lineNumber":169,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":170,"author":{"gitId":"Ella-e"},"content":"    public String getExitResponse(Parser parser) {","lastModifiedDate":"2024-03-19"},{"lineNumber":171,"author":{"gitId":"Ella-e"},"content":"        return ui.onExit();","lastModifiedDate":"2024-03-19"},{"lineNumber":172,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":173,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":174,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":175,"author":{"gitId":"Ella-e"},"content":"     * Gets next due tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":176,"author":{"gitId":"Ella-e"},"content":"     * @return next due tasks","lastModifiedDate":"2024-02-15"},{"lineNumber":177,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":178,"author":{"gitId":"Ella-e"},"content":"    public String getNextDueTasks() {","lastModifiedDate":"2024-02-15"},{"lineNumber":179,"author":{"gitId":"Ella-e"},"content":"        return tasks.nextDueTasksToString(2);","lastModifiedDate":"2024-02-15"},{"lineNumber":180,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Ella-e":179,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"public class Launcher {","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Ella-e":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"            stage.show();","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Ella-e":29}},{"path":"src/main/java/duke/control/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.control;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"Ella-e"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"Ella-e"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"Ella-e"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"Ella-e"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"Ella-e"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"Ella-e"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"Ella-e"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"Ella-e"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"Ella-e"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"Ella-e"},"content":"        Insets padding \u003d new Insets(10);","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"Ella-e"},"content":"        dialog.setPadding(padding);","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"Ella-e"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"Ella-e"},"content":"    private void flip() {","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"Ella-e"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"Ella-e"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"Ella-e"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"Ella-e"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"Ella-e"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"Ella-e"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"Ella-e"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"Ella-e"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"Ella-e"},"content":"        db.flip();","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"Ella-e"},"content":"        return db;","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Ella-e":65}},{"path":"src/main/java/duke/control/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.control;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"import duke.exceptions.BaseException;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"import duke.ui.UI;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"    private static final String WELCOME_MESSAGE \u003d new UI().onEnter();","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"    private static final String ERROR_MASSAGE \u003d \"Oops, some error occurs\";","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"Ella-e"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"Ella-e"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"Ella-e"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"Ella-e"},"content":"    private final Image userImage \u003d","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"Ella-e"},"content":"        new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/user.png\")));","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"Ella-e"},"content":"    private final Image dukeImage \u003d","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"Ella-e"},"content":"        new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/bot.png\")));","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"Ella-e"},"content":"     * Initializes the chatbot.","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"Ella-e"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"Ella-e"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"Ella-e"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"Ella-e"},"content":"            this.duke \u003d new Duke();","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"Ella-e"},"content":"            String welcomeString \u003d WELCOME_MESSAGE + \"\\n\" + duke.getNextDueTasks();","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"Ella-e"},"content":"            scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"Ella-e"},"content":"            // Show welcome message @A1WAYSD","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"Ella-e"},"content":"            dialogContainer.getChildren().add(","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"Ella-e"},"content":"                DialogBox.getDukeDialog(welcomeString, dukeImage)","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"Ella-e"},"content":"            );","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"Ella-e"},"content":"        } catch (BaseException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"Ella-e"},"content":"            // If there is an exception occur, exit the screen @A1WAYSD","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"Ella-e"},"content":"            dialogContainer.getChildren().add(","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"Ella-e"},"content":"                DialogBox.getDukeDialog(ERROR_MASSAGE, dukeImage)","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"Ella-e"},"content":"            );","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"Ella-e"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"Ella-e"},"content":"            pause.setOnFinished(event -\u003e System.exit(0));","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"Ella-e"},"content":"            pause.play();","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"Ella-e"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"Ella-e"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"Ella-e"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"Ella-e"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"Ella-e"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"Ella-e"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"Ella-e"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"Ella-e"},"content":"            DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"Ella-e"},"content":"            DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"Ella-e"},"content":"        );","lastModifiedDate":"2024-02-08"},{"lineNumber":76,"author":{"gitId":"Ella-e"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"Ella-e"},"content":"        if (response.equals(new UI().onExit())) {","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"Ella-e"},"content":"            // Close the window after 2 seconds @A1WAYSD","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"Ella-e"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"Ella-e"},"content":"            pause.setOnFinished(event -\u003e System.exit(0));","lastModifiedDate":"2024-02-15"},{"lineNumber":81,"author":{"gitId":"Ella-e"},"content":"            pause.play();","lastModifiedDate":"2024-02-15"},{"lineNumber":82,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":83,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Ella-e":85}},{"path":"src/main/java/duke/exceptions/BaseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":" * Base exception for this project.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"public class BaseException extends RuntimeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"     * Initializes BaseException based on the parent class RuntimeException.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"    public BaseException() {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"        super();","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"     * Initializes BaseException based on the parent class RuntimeException and message and cause given.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"     * @param message warning message.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"     * @param cause causation of the exception.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"    public BaseException(String message, Throwable cause) {","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"        super(message, cause);","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"     * Initializes BaseException based on the parent class RuntimeException and message given.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"     * @param message warning message.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"    public BaseException(String message) {","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"        super(message);","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Ella-e":31}},{"path":"src/main/java/duke/exceptions/EmptyBodyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":" * Exception thrown when the command body is empty.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"public class EmptyBodyException extends BaseException {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"     * Calls parent constructor with specific pre-defined message.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"    public EmptyBodyException() {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"        super(\"!!!ERROR: Please specify the content.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Ella-e":13}},{"path":"src/main/java/duke/exceptions/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":" * Exception thrown when the date/time format can\u0027t be recognized by the DukeDateFormator.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"public class InvalidDateTimeException extends BaseException {","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"     * Calls parent constructor with specific pre-defined message.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"    public InvalidDateTimeException() {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"        super(\"Incorrect format of date, please follow the convention: yyyy-mm-dd\");","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"     * Calls parent constructor with specific pre-defined message.","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"    public InvalidDateTimeException(String message) {","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"        super(\"Incorrect date: \" + message);","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Ella-e":20}},{"path":"src/main/java/duke/exceptions/InvalidKeyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":" * Exception thrown when the instruction keyword is unknown.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"public class InvalidKeyException extends BaseException {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"     * Calls parent constructor with specific pre-defined message.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"    public InvalidKeyException() {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"        super(\"!!!ERROR: Sorry we can\u0027t recognize your instruction, please use valid one. \");","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Ella-e":13}},{"path":"src/main/java/duke/exceptions/InvalidNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":" * Exception thrown when the index is out of bound.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"public class InvalidNumberException extends BaseException {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"     * Calls parent constructor with specific pre-defined message.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"    public InvalidNumberException() {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"        super(\"Error: Please enter a valid number.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Ella-e":13}},{"path":"src/main/java/duke/exceptions/OutOfBoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":" * Exception thrown when the index is out of bound.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"public class OutOfBoundException extends BaseException {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"     * Calls parent constructor with specific pre-defined message.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"    public OutOfBoundException() {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"        super(\"Error: Index out of bound.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Ella-e":15}},{"path":"src/main/java/duke/exceptions/WrongFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":" * Exception thrown when the instruction format is wrong.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"public class WrongFormatException extends BaseException {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"     * Calls parent constructor with specific pre-defined message.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"    public WrongFormatException(String message) {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"        super(\"!!!ERROR: Incorrect instruction format. The correct format is: \" + message);","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Ella-e":13}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"import duke.tasks.Event;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"import duke.utils.Parser;","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":" * Class represent a file and contains functions processing a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"public class Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"    private String filePath;","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"    private File file;","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"     * Creates new file object and stores it.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"     * @param filePath path to load file from.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Ella-e"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Ella-e"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"Ella-e"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Ella-e"},"content":"     * Reads tasks in a text file from the given filePath recursively.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Ella-e"},"content":"     * If the file or folder does not exist, create new folders and files based on the given filePath.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"Ella-e"},"content":"     * @return task list read from the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Ella-e"},"content":"     * @throws IOException","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Ella-e"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException, NullPointerException {","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"Ella-e"},"content":"        if (!this.file.getParentFile().exists()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"Ella-e"},"content":"            this.file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"Ella-e"},"content":"        if (!this.file.exists()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"Ella-e"},"content":"            this.file.createNewFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"Ella-e"},"content":"        return this.readFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"Ella-e"},"content":"     * Reads content of the file into task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"Ella-e"},"content":"     * @return task list read from file","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"Ella-e"},"content":"     * @throws FileNotFoundException if the file is not found","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"Ella-e"},"content":"    private ArrayList\u003cTask\u003e readFile() throws IOException {","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"Ella-e"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"Ella-e"},"content":"        Scanner s \u003d new Scanner(file); // create a Scanner using the File as the source","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"Ella-e"},"content":"        Boolean isCorrupted \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Ella-e"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"Ella-e"},"content":"            String currentTaskString \u003d s.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"Ella-e"},"content":"            Task newTask \u003d this.stringToTask(currentTaskString);","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"Ella-e"},"content":"            if (newTask \u003d\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Ella-e"},"content":"                isCorrupted \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Ella-e"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Ella-e"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Ella-e"},"content":"            taskList.add(newTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"Ella-e"},"content":"        if (isCorrupted) {","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Ella-e"},"content":"            // file corrupted, overwrite the file","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Ella-e"},"content":"            TaskList emptyTaskList \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Ella-e"},"content":"            writeTasksToFile(emptyTaskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Ella-e"},"content":"            readFile(); // re-read the file","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Ella-e"},"content":"        return taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"Ella-e"},"content":"     * Writes all the duke tasks in the task list to the file stored.","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":84,"author":{"gitId":"Ella-e"},"content":"     * @param taskList taskList to be stored.","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Ella-e"},"content":"     * @throws IOException","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"Ella-e"},"content":"    public void writeTasksToFile(TaskList taskList) throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"Ella-e"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"Ella-e"},"content":"        for (int i \u003d 0; i \u003c taskList.getNumOfTasks(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"Ella-e"},"content":"            fw.write(taskList.getTaskInfileStringFormat(i) + \"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"Ella-e"},"content":"        fw.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"Ella-e"},"content":"     * Changes task from string format to task object","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":98,"author":{"gitId":"Ella-e"},"content":"     * @param str String format of the task","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"Ella-e"},"content":"     * @return The respective task object","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"Ella-e"},"content":"    private Task stringToTask(String str) throws DateTimeParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"Ella-e"},"content":"        assert str !\u003d null : \"String should not be null\";","lastModifiedDate":"2024-02-15"},{"lineNumber":103,"author":{"gitId":"Ella-e"},"content":"        String[] strSplit \u003d str.split(\"\\\\|\");","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"Ella-e"},"content":"        if (strSplit.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"Ella-e"},"content":"            return null;","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"Ella-e"},"content":"        Boolean status \u003d strSplit[1].equals(\"1\");","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"Ella-e"},"content":"        String detail \u003d strSplit[2];","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"Ella-e"},"content":"        switch (strSplit[0]) {","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"Ella-e"},"content":"        case \"T\":","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"Ella-e"},"content":"            return new Todo(status, detail);","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"Ella-e"},"content":"        case \"D\":","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"Ella-e"},"content":"            LocalDate by \u003d Parser.formatDate(strSplit[3]);","lastModifiedDate":"2024-02-15"},{"lineNumber":114,"author":{"gitId":"Ella-e"},"content":"            return new Deadline(status, detail, by);","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"Ella-e"},"content":"        case \"E\":","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"Ella-e"},"content":"            LocalDate from \u003d Parser.formatDate(strSplit[3]);","lastModifiedDate":"2024-02-15"},{"lineNumber":117,"author":{"gitId":"Ella-e"},"content":"            LocalDate to \u003d Parser.formatDate(strSplit[4]);","lastModifiedDate":"2024-02-15"},{"lineNumber":118,"author":{"gitId":"Ella-e"},"content":"            return new Event(status, detail, from, to);","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"Ella-e"},"content":"        default:","lastModifiedDate":"2024-02-06"},{"lineNumber":120,"author":{"gitId":"Ella-e"},"content":"            return new Task(status, detail);","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Ella-e":123}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"import duke.utils.Parser;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":" * Class represent Task type Deadline.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"    private LocalDate by;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"     * Initializes a Deadline object with given params.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"     * @param status True for completed, False for not completed yet.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"     * @param detail Detail information of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"     * @param by Task end time.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"     * @throws DateTimeParseException If the end time is invalid.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"    public Deadline(Boolean status, String detail, LocalDate by) throws DateTimeParseException {","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"        super(status, detail);","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"     * Formats object to be stored in file.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"     * @return Formatted string to be stored in file.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Ella-e"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Ella-e"},"content":"    public String inFileStringFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"Ella-e"},"content":"        return \"D|\" + super.inFileStringFormat() + \"|\" + by.toString();","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"Ella-e"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"Ella-e"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"Ella-e"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + Parser.FORMATER.dateToString(this.by) + \")\";","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"Ella-e"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"Ella-e"},"content":"        return by;","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Ella-e":44}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"import duke.utils.Parser;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":" * Class represent Task type Event.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"    private LocalDate start;","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"    private LocalDate by;","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"     * Initializes an Event object with given params.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"     * @param status True for completed, False for not completed yet.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"     * @param detail Detail information of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"     * @param start  task start time.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"     * @param by     task end time.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"    public Event(Boolean status, String detail, LocalDate start, LocalDate by) {","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"        super(status, detail);","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Ella-e"},"content":"     * Formats object to be stored in file.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"Ella-e"},"content":"     * @return Formatted string to be stored in file.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Ella-e"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"Ella-e"},"content":"    public String inFileStringFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"Ella-e"},"content":"        return \"E|\" + super.inFileStringFormat() + \"|\" + start","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"Ella-e"},"content":"            + \"|\" + by;","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Ella-e"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"Ella-e"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"Ella-e"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + Parser.FORMATER.dateToString(start)","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"Ella-e"},"content":"            + \" to: \" + Parser.FORMATER.dateToString(by) + \")\";","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"Ella-e"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"Ella-e"},"content":"        return by;","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Ella-e":49}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":" * Class represents a task.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"    private Boolean isDone;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"    private String detail;","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"     * Initializes a Task object with given params.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"     * @param isDone True for completed, False for not completed yet.","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"     * @param detail Detail information of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"    public Task(Boolean isDone, String detail) {","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"    public Boolean getIsDone() {","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"        return isDone;","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"    public void setIsDone(Boolean isDone) {","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"    public String getDetail() {","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"Ella-e"},"content":"        return detail;","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Ella-e"},"content":"     * Formats object to be stored in file.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"Ella-e"},"content":"     * @return Formatted string to be stored in file.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Ella-e"},"content":"    public String inFileStringFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"Ella-e"},"content":"        String intStatus \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"Ella-e"},"content":"        return intStatus + \"|\" + this.detail;","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"Ella-e"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"Ella-e"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"Ella-e"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"Ella-e"},"content":"            return \"[X] \" + this.detail;","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"Ella-e"},"content":"        } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"Ella-e"},"content":"            return \"[ ] \" + this.detail;","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Ella-e":51}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"import duke.exceptions.EmptyBodyException;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"import duke.exceptions.InvalidDateTimeException;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"import duke.exceptions.OutOfBoundException;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"import duke.utils.KeyEnum;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":" * Class represents a list of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"public class TaskList {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"     * Initializes empty task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"     * Initializes task list with given arraylist.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"     * @param tasks Existing list of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Ella-e"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Ella-e"},"content":"     * Returns Number of tasks in the list.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"Ella-e"},"content":"     * @return Number of tasks in the list.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Ella-e"},"content":"    public Integer getNumOfTasks() {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"Ella-e"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Ella-e"},"content":"     * Returns the formatted task string to be stored in file.","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"Ella-e"},"content":"     * @param i Index of task being used.","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Ella-e"},"content":"     * @return String format of that task in file storage format.","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Ella-e"},"content":"    public String getTaskInfileStringFormat(Integer i) {","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"Ella-e"},"content":"        return this.tasks.get(i).inFileStringFormat();","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Ella-e"},"content":"    public String listTask() {","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"Ella-e"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"Ella-e"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"Ella-e"},"content":"            result.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"Ella-e"},"content":"        return result.toString();","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Ella-e"},"content":"     * Adds a task into list.","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"Ella-e"},"content":"     * @param detail     Description of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Ella-e"},"content":"     * @param from       Start date of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Ella-e"},"content":"     * @param to         Due date of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Ella-e"},"content":"     * @param currentKey Type of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Ella-e"},"content":"     * @return Added task.","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Ella-e"},"content":"     * @throws EmptyBodyException       If the command body is empty.","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Ella-e"},"content":"     * @throws InvalidDateTimeException If the due date for deadline is not in recognisable format.","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Ella-e"},"content":"    public Task addTask(String detail, LocalDate from, LocalDate to, KeyEnum currentKey)","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"Ella-e"},"content":"            throws EmptyBodyException, InvalidDateTimeException {","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"Ella-e"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"Ella-e"},"content":"        switch (currentKey) {","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"Ella-e"},"content":"        case DEADLINE:","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"Ella-e"},"content":"            task \u003d new Deadline(false, detail, to);","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"Ella-e"},"content":"        case TODO:","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"Ella-e"},"content":"            task \u003d new Todo(false, detail);","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"Ella-e"},"content":"        case EVENT:","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"Ella-e"},"content":"            task \u003d new Event(false, detail, from, to);","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"Ella-e"},"content":"        default:","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"Ella-e"},"content":"        // Throw empty body exception if the added","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"Ella-e"},"content":"        if (task \u003d\u003d null || detail.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"Ella-e"},"content":"            throw new EmptyBodyException();","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"Ella-e"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"Ella-e"},"content":"        assert tasks.size() \u003e 0 : \"Task should be added\";","lastModifiedDate":"2024-02-15"},{"lineNumber":96,"author":{"gitId":"Ella-e"},"content":"        return task;","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Ella-e"},"content":"     * Marks the status of a task.","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":102,"author":{"gitId":"Ella-e"},"content":"     * @param id     Index of task used.","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"Ella-e"},"content":"     * @param status Task to be marked True or False","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"Ella-e"},"content":"     * @return The marked task.","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"Ella-e"},"content":"     * @throws OutOfBoundException If the index is out of bound.","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"Ella-e"},"content":"    public Task markTaskById(Integer id, Boolean status) throws OutOfBoundException, IndexOutOfBoundsException {","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"Ella-e"},"content":"        // Test if the id is out of bound","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"Ella-e"},"content":"        if (id \u003e\u003d this.getNumOfTasks() || id \u003c 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"Ella-e"},"content":"            throw new OutOfBoundException();","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"Ella-e"},"content":"        this.tasks.get(id).setIsDone(status);","lastModifiedDate":"2024-02-20"},{"lineNumber":113,"author":{"gitId":"Ella-e"},"content":"        assert this.tasks.get(id).getIsDone() \u003d\u003d status : \"Task should be marked\";","lastModifiedDate":"2024-02-20"},{"lineNumber":114,"author":{"gitId":"Ella-e"},"content":"        return this.tasks.get(id);","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"Ella-e"},"content":"     * Deletes a task from list.","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":120,"author":{"gitId":"Ella-e"},"content":"     * @param id Index of task used.","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"Ella-e"},"content":"     * @return The deleted task.","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"Ella-e"},"content":"     * @throws OutOfBoundException If the index is out of bound.","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"Ella-e"},"content":"    public Task deleteTaskById(Integer id) throws OutOfBoundException, IndexOutOfBoundsException {","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"Ella-e"},"content":"        // Test if the id is out of bound","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"Ella-e"},"content":"        if (id \u003e\u003d this.getNumOfTasks() || id \u003c 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"Ella-e"},"content":"            throw new OutOfBoundException();","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"Ella-e"},"content":"        Task taskToDelete \u003d this.tasks.get(id);","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"Ella-e"},"content":"        this.tasks.remove(taskToDelete);","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"Ella-e"},"content":"        return taskToDelete;","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"Ella-e"},"content":"     * Finds matched tasks based on the word.","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":137,"author":{"gitId":"Ella-e"},"content":"     * @param word Keyword to find a match.","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"Ella-e"},"content":"     * @return Matched task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"Ella-e"},"content":"    public TaskList findTasks(String word) {","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"Ella-e"},"content":"        ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-15"},{"lineNumber":142,"author":{"gitId":"Ella-e"},"content":"        // Iterate through the task list","lastModifiedDate":"2024-02-15"},{"lineNumber":143,"author":{"gitId":"Ella-e"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"Ella-e"},"content":"            if (task.getDetail().contains(word)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"Ella-e"},"content":"                matchedTasks.add(task);","lastModifiedDate":"2024-02-15"},{"lineNumber":146,"author":{"gitId":"Ella-e"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"Ella-e"},"content":"        return new TaskList(matchedTasks);","lastModifiedDate":"2024-02-15"},{"lineNumber":149,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":151,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":152,"author":{"gitId":"Ella-e"},"content":"     * Finds the list of tasks that are due next.","lastModifiedDate":"2024-02-15"},{"lineNumber":153,"author":{"gitId":"Ella-e"},"content":"     * @param numOfTasks number of tasks to be returned","lastModifiedDate":"2024-02-15"},{"lineNumber":154,"author":{"gitId":"Ella-e"},"content":"     * @return list of task that most recent due","lastModifiedDate":"2024-02-15"},{"lineNumber":155,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":156,"author":{"gitId":"Ella-e"},"content":"    public TaskList findNextDueTasks(int numOfTasks) {","lastModifiedDate":"2024-02-15"},{"lineNumber":157,"author":{"gitId":"Ella-e"},"content":"        ArrayList\u003cTask\u003e nextTasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2024-02-15"},{"lineNumber":158,"author":{"gitId":"Ella-e"},"content":"        nextTasks.removeIf(Task::getIsDone); // remove completed tasks","lastModifiedDate":"2024-02-20"},{"lineNumber":159,"author":{"gitId":"Ella-e"},"content":"        nextTasks.sort(this::compareTaskByDate);","lastModifiedDate":"2024-03-19"},{"lineNumber":160,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":161,"author":{"gitId":"Ella-e"},"content":"        if (nextTasks.size() \u003c\u003d numOfTasks) {","lastModifiedDate":"2024-03-19"},{"lineNumber":162,"author":{"gitId":"Ella-e"},"content":"            return new TaskList(nextTasks);","lastModifiedDate":"2024-03-19"},{"lineNumber":163,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":164,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":165,"author":{"gitId":"Ella-e"},"content":"        ArrayList\u003cTask\u003e tempTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-19"},{"lineNumber":166,"author":{"gitId":"Ella-e"},"content":"        int counter \u003d numOfTasks;","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"Ella-e"},"content":"        for (Task task: nextTasks) {","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"Ella-e"},"content":"            if (counter \u003c\u003d 0) {","lastModifiedDate":"2024-03-19"},{"lineNumber":169,"author":{"gitId":"Ella-e"},"content":"                break;","lastModifiedDate":"2024-03-19"},{"lineNumber":170,"author":{"gitId":"Ella-e"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":171,"author":{"gitId":"Ella-e"},"content":"            tempTasks.add(task);","lastModifiedDate":"2024-03-19"},{"lineNumber":172,"author":{"gitId":"Ella-e"},"content":"            counter--;","lastModifiedDate":"2024-03-19"},{"lineNumber":173,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":174,"author":{"gitId":"Ella-e"},"content":"        return new TaskList(tempTasks);","lastModifiedDate":"2024-03-19"},{"lineNumber":175,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":176,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":177,"author":{"gitId":"Ella-e"},"content":"    private int compareTaskByDate(Object o1, Object o2) {","lastModifiedDate":"2024-03-19"},{"lineNumber":178,"author":{"gitId":"Ella-e"},"content":"        if (o1 instanceof Todo) {","lastModifiedDate":"2024-02-20"},{"lineNumber":179,"author":{"gitId":"Ella-e"},"content":"            return 1;","lastModifiedDate":"2024-02-15"},{"lineNumber":180,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":181,"author":{"gitId":"Ella-e"},"content":"        if (o2 instanceof Todo) {","lastModifiedDate":"2024-02-20"},{"lineNumber":182,"author":{"gitId":"Ella-e"},"content":"            return -1;","lastModifiedDate":"2024-02-15"},{"lineNumber":183,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":184,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":185,"author":{"gitId":"Ella-e"},"content":"        if (o1 instanceof Deadline \u0026\u0026 o2 instanceof Deadline) {","lastModifiedDate":"2024-03-20"},{"lineNumber":186,"author":{"gitId":"Ella-e"},"content":"            return ((Deadline) o1).getBy().compareTo(((Deadline) o2).getBy());","lastModifiedDate":"2024-02-20"},{"lineNumber":187,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":188,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":189,"author":{"gitId":"Ella-e"},"content":"        if (o1 instanceof Deadline \u0026\u0026 o2 instanceof Event) {","lastModifiedDate":"2024-03-20"},{"lineNumber":190,"author":{"gitId":"Ella-e"},"content":"            return ((Deadline) o1).getBy().compareTo(((Event) o2).getBy());","lastModifiedDate":"2024-02-20"},{"lineNumber":191,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":192,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":193,"author":{"gitId":"Ella-e"},"content":"        if (o1 instanceof Event \u0026\u0026 o2 instanceof Deadline) {","lastModifiedDate":"2024-03-20"},{"lineNumber":194,"author":{"gitId":"Ella-e"},"content":"            return ((Event) o1).getBy().compareTo(((Deadline) o2).getBy());","lastModifiedDate":"2024-02-20"},{"lineNumber":195,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":196,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":197,"author":{"gitId":"Ella-e"},"content":"        if (o1 instanceof Event \u0026\u0026 o2 instanceof Event) {","lastModifiedDate":"2024-03-20"},{"lineNumber":198,"author":{"gitId":"Ella-e"},"content":"            return ((Event) o1).getBy().compareTo(((Event) o2).getBy());","lastModifiedDate":"2024-02-20"},{"lineNumber":199,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":200,"author":{"gitId":"Ella-e"},"content":"        return 0;","lastModifiedDate":"2024-02-15"},{"lineNumber":201,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":202,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":203,"author":{"gitId":"Ella-e"},"content":"    public String nextDueTasksToString(int numOfTasks) {","lastModifiedDate":"2024-02-15"},{"lineNumber":204,"author":{"gitId":"Ella-e"},"content":"        return \"\u003d\u003dReminder\u003d\u003d\\nThose Tasks are due next:\\n\" + findNextDueTasks(numOfTasks).listTask();","lastModifiedDate":"2024-02-15"},{"lineNumber":205,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":206,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Ella-e":206}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":" * Class represent Task type Todo.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"     * Initializes a Todo object with given params.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"     * @param status True for completed, False for not completed yet.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"     * @param detail Detail information of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"    public Todo(Boolean status, String detail) {","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"        super(status, detail);","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"     * Formats object to be stored in file.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"     * @return Formatted string to be stored in file.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"    public String inFileStringFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"        return \"T|\" + super.inFileStringFormat();","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Ella-e":31}},{"path":"src/main/java/duke/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":" * Class represents UI functionalities.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"public class UI {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"    private Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"     * Displays greeting sentence.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"    public String onEnter() {","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"        return \"Hello! I\u0027m Plaudern\\nWhat can I do for you?\\n\";","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"     * Displays task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"    public String showList(TaskList taskList) {","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"        return \"Here are the tasks in your list:\\n\" + taskList.listTask();","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"     * Displays matching task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"Ella-e"},"content":"     * @param taskList List to be displayed.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Ella-e"},"content":"    public String showMatchedList(TaskList taskList) {","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"Ella-e"},"content":"        return \"Here are the matching tasks in your list:\\n\" + taskList.listTask();","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Ella-e"},"content":"     * Displays success message after add task to the list.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"Ella-e"},"content":"     * @param task  Task added.","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Ella-e"},"content":"     * @param count Number of tasks in the list after the addition.","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Ella-e"},"content":"    public String onAddSuccess(Task task, Integer count) {","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"Ella-e"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task + \"\\n\" + \"Now you have \" + count + \" tasks in the list.\";","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Ella-e"},"content":"     * Displays success message after mark task.","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"Ella-e"},"content":"     * @param task Task marked","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Ella-e"},"content":"    public String onMarkDone(Task task) {","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"Ella-e"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task;","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Ella-e"},"content":"     * Displays success message after unmark task.","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"Ella-e"},"content":"     * @param task Task unmarked.","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Ella-e"},"content":"    public String onUnmarkDone(Task task) {","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"Ella-e"},"content":"        return \"Nice! I\u0027ve unmarked this task as undone:\\n\" + task;","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Ella-e"},"content":"     * Displays success message after delete task.","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"Ella-e"},"content":"     * @param task     Task deleted.","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Ella-e"},"content":"     * @param taskList Task list after deletion.","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Ella-e"},"content":"    public String onDelete(Task task, TaskList taskList) {","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"Ella-e"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + task + \"\\n\" + \"Now you have \"","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"Ella-e"},"content":"            + taskList.getNumOfTasks() + \" tasks in the list.\";","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Ella-e"},"content":"     * Displays general error message.","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"Ella-e"},"content":"     * @param msg Error message.","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Ella-e"},"content":"    public String showErrorMsg(String msg) {","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"Ella-e"},"content":"        return msg;","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Ella-e"},"content":"     * Displays loading error.","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Ella-e"},"content":"    public String showLoadingError() {","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"Ella-e"},"content":"        return \"Error occur when initiating the resources.\";","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"Ella-e"},"content":"     * Reads one line of user input.","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":95,"author":{"gitId":"Ella-e"},"content":"     * @return User input","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Ella-e"},"content":"    public String getUserInput() {","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"Ella-e"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"Ella-e"},"content":"     * Displays exit message.","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"Ella-e"},"content":"    public String onExit() {","lastModifiedDate":"2024-02-08"},{"lineNumber":105,"author":{"gitId":"Ella-e"},"content":"        return \"Bye. Hope to see you again soon!\" + \"(The window will be closed automatically in 3 seconds)\";","lastModifiedDate":"2024-02-21"},{"lineNumber":106,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"Ella-e"},"content":"     * Displays number of tasks in the list.","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":111,"author":{"gitId":"Ella-e"},"content":"     * @param count Number of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"Ella-e"},"content":"    public String showTaskListCount(Integer count) {","lastModifiedDate":"2024-02-08"},{"lineNumber":114,"author":{"gitId":"Ella-e"},"content":"        return \"Now you have \" + count + \" tasks in the list.\";","lastModifiedDate":"2024-02-08"},{"lineNumber":115,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Ella-e":116}},{"path":"src/main/java/duke/utils/DukeDateFormater.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.utils;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":" * Date formatter","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"public class DukeDateFormater {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"     * Parses String date into LocalDate object.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"     * @param dateStr Date in String.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"     * @return Date in LocalDate type.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"    public LocalDate stringToDate(String dateStr) {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"        return LocalDate.parse(dateStr);","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"     * Parses LocalDate to String.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"     * @param date Date in LocalDate type.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"     * @return Date in String.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"    public String dateToString(LocalDate date) {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Ella-e":27}},{"path":"src/main/java/duke/utils/KeyEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.utils;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":" * Enumerate class represents command keywords.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"public enum KeyEnum {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"    EXITKEY(\"bye\"), LIST(\"list\"), MARK(\"mark\"), UNMARK(\"unmark\"),","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"        EVENT(\"event\"), DEADLINE(\"deadline\"), TODO(\"todo\"), DELETE(\"delete\"), INVALID(\"invalid\"), FIND(\"find\");","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"    private String detail;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"     * Initializes a keyword with detail.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"     * @param detail Meaning of keyword.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"    KeyEnum(String detail) {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"        return this.detail;","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Ella-e":24}},{"path":"src/main/java/duke/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.utils;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"import duke.exceptions.EmptyBodyException;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"import duke.exceptions.InvalidDateTimeException;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"import duke.exceptions.InvalidKeyException;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"import duke.exceptions.InvalidNumberException;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"import duke.exceptions.WrongFormatException;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":" * Parser to read and understand user inputs. Stores the parsed information inside the object.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"public class Parser {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"    public static final DukeDateFormater FORMATER \u003d new DukeDateFormater();","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"    private KeyEnum currentKey;","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"    private String inputDetail;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"    private LocalDate to;","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"    private LocalDate from;","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"    private Integer index;","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"    private String[] userInputSplit;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"     * Parses user input and store the information.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"     * @param userInput String user input.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"     * @throws InvalidKeyException    If the command keyword is unknown.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"     * @throws EmptyBodyException     If the command body is empty.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Ella-e"},"content":"     * @throws WrongFormatException   If the format of command is wrong.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Ella-e"},"content":"     * @throws InvalidNumberException If the number in the command is not a number.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Ella-e"},"content":"    public void parse(String userInput) throws InvalidKeyException, EmptyBodyException,","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"Ella-e"},"content":"            WrongFormatException, InvalidNumberException, DateTimeParseException, InvalidDateTimeException {","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"Ella-e"},"content":"        String userInputLowerCase \u003d userInput.toLowerCase();","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"Ella-e"},"content":"        userInputSplit \u003d userInputLowerCase.split(\" \");","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"Ella-e"},"content":"        // verify that the user input is valid","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"Ella-e"},"content":"        isValidCommand();","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"Ella-e"},"content":"        this.determineCurrentKey(userInputSplit[0]);","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"Ella-e"},"content":"        switch (currentKey) {","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"Ella-e"},"content":"        case DEADLINE:","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"Ella-e"},"content":"            parseDeadlineCommand(userInputLowerCase);","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"Ella-e"},"content":"        case TODO:","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"Ella-e"},"content":"        case FIND:","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"Ella-e"},"content":"            parseOneParameterCommand(userInputLowerCase);","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"Ella-e"},"content":"        case EVENT:","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"Ella-e"},"content":"            parseEventCommand(userInputLowerCase);","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"Ella-e"},"content":"        case MARK:","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"Ella-e"},"content":"        case UNMARK:","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"Ella-e"},"content":"        case DELETE:","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"Ella-e"},"content":"            parseIndexCommand();","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"Ella-e"},"content":"        default:","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"Ella-e"},"content":"        // check if the user input contains only empty spaces.","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"Ella-e"},"content":"        checkEmptyCommand();","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"Ella-e"},"content":"     * Checks if the user input is valid.","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"Ella-e"},"content":"    public void isValidCommand() {","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"Ella-e"},"content":"        String checkInputMsg \u003d checkSpecialCharacter(userInputSplit);","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"Ella-e"},"content":"        if (!checkInputMsg.equals(\"valid\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"Ella-e"},"content":"            throw new WrongFormatException(checkInputMsg);","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"Ella-e"},"content":"     * Parses deadline command and store the information.","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"Ella-e"},"content":"     * @param userInput String user input.","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"Ella-e"},"content":"    public void parseDeadlineCommand(String userInput) {","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"Ella-e"},"content":"        if (userInput.length() \u003c\u003d 9) {","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"Ella-e"},"content":"            throw new EmptyBodyException();","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"Ella-e"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"Ella-e"},"content":"            inputDetail \u003d userInput.substring(9, userInput.indexOf(\"/by\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"Ella-e"},"content":"            to \u003d formatDate(userInput.substring(userInput.indexOf(\"/by\") + 4));","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"Ella-e"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"Ella-e"},"content":"            throw new WrongFormatException(\"\\\"deadline content /by yyyy-mm-dd\\\"\");","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"Ella-e"},"content":"     * Parses command with one parameter and store the information.","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"Ella-e"},"content":"     * @param userInput String user input.","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"Ella-e"},"content":"    public void parseOneParameterCommand(String userInput) {","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"Ella-e"},"content":"        if (userInput.length() \u003c\u003d 5) {","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"Ella-e"},"content":"            throw new EmptyBodyException();","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"Ella-e"},"content":"        inputDetail \u003d userInput.substring(5);","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"Ella-e"},"content":"     * Parses event command and store the information.","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"Ella-e"},"content":"     * @param userInput String user input.","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"Ella-e"},"content":"    public void parseEventCommand(String userInput) {","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"Ella-e"},"content":"        if (userInput.length() \u003c\u003d 6) {","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"Ella-e"},"content":"            throw new EmptyBodyException();","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"Ella-e"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"Ella-e"},"content":"            inputDetail \u003d userInput.substring(6, userInput.indexOf(\"/from\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"Ella-e"},"content":"            from \u003d formatDate(userInput.substring(userInput.indexOf(\"/from\") + 6, userInput.indexOf(\"/to\") - 1));","lastModifiedDate":"2024-02-15"},{"lineNumber":111,"author":{"gitId":"Ella-e"},"content":"            to \u003d formatDate(userInput.substring(userInput.indexOf(\"/to\") + 4));","lastModifiedDate":"2024-02-15"},{"lineNumber":112,"author":{"gitId":"Ella-e"},"content":"            if (from.isAfter(to)) {","lastModifiedDate":"2024-02-21"},{"lineNumber":113,"author":{"gitId":"Ella-e"},"content":"                throw new InvalidDateTimeException(\"The start date should be before the end date\");","lastModifiedDate":"2024-02-21"},{"lineNumber":114,"author":{"gitId":"Ella-e"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":115,"author":{"gitId":"Ella-e"},"content":"        } catch (InvalidDateTimeException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":116,"author":{"gitId":"Ella-e"},"content":"            throw e;","lastModifiedDate":"2024-02-21"},{"lineNumber":117,"author":{"gitId":"Ella-e"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"Ella-e"},"content":"            throw new WrongFormatException(\"\\\"event content /from yyyy-mm-dd /to yyyy-mm-dd\\\"\");","lastModifiedDate":"2024-02-15"},{"lineNumber":119,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"Ella-e"},"content":"     * Parses command with one index as parameter and store the information.","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"Ella-e"},"content":"    public void parseIndexCommand() {","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"Ella-e"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"Ella-e"},"content":"            this.index \u003d Integer.parseInt(userInputSplit[1]) - 1;","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"Ella-e"},"content":"            this.inputDetail \u003d this.index.toString();","lastModifiedDate":"2024-02-20"},{"lineNumber":129,"author":{"gitId":"Ella-e"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"Ella-e"},"content":"            throw new InvalidNumberException();","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":134,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"Ella-e"},"content":"     * Checks if the user input contains no information.","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"Ella-e"},"content":"    public void checkEmptyCommand() {","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"Ella-e"},"content":"        if (!(currentKey.equals(KeyEnum.LIST) || currentKey.equals(KeyEnum.EXITKEY)) \u0026\u0026 inputDetail.trim().isEmpty()) {","lastModifiedDate":"2024-02-20"},{"lineNumber":139,"author":{"gitId":"Ella-e"},"content":"            throw new EmptyBodyException();","lastModifiedDate":"2024-02-20"},{"lineNumber":140,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":141,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":144,"author":{"gitId":"Ella-e"},"content":"     * Checks if the user input contains special character.","lastModifiedDate":"2024-02-20"},{"lineNumber":145,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":146,"author":{"gitId":"Ella-e"},"content":"     * @param userInput String user input.","lastModifiedDate":"2024-02-20"},{"lineNumber":147,"author":{"gitId":"Ella-e"},"content":"     * @return True if the user input is valid.","lastModifiedDate":"2024-02-20"},{"lineNumber":148,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":149,"author":{"gitId":"Ella-e"},"content":"    public String checkSpecialCharacter(String[] userInput) {","lastModifiedDate":"2024-02-20"},{"lineNumber":150,"author":{"gitId":"Ella-e"},"content":"        // match the special character |","lastModifiedDate":"2024-02-20"},{"lineNumber":151,"author":{"gitId":"Ella-e"},"content":"        for (String s : userInput) {","lastModifiedDate":"2024-02-20"},{"lineNumber":152,"author":{"gitId":"Ella-e"},"content":"            if (s.contains(\"|\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":153,"author":{"gitId":"Ella-e"},"content":"                return \"Should not use special character |\";","lastModifiedDate":"2024-02-20"},{"lineNumber":154,"author":{"gitId":"Ella-e"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":155,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":156,"author":{"gitId":"Ella-e"},"content":"        return \"valid\";","lastModifiedDate":"2024-02-20"},{"lineNumber":157,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":158,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":159,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":160,"author":{"gitId":"Ella-e"},"content":"     * Maps userInputKey to keys defined in the KeyEnum class.","lastModifiedDate":"2024-01-31"},{"lineNumber":161,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":162,"author":{"gitId":"Ella-e"},"content":"     * @param userInputKey String user input key.","lastModifiedDate":"2024-01-31"},{"lineNumber":163,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":164,"author":{"gitId":"Ella-e"},"content":"    public void determineCurrentKey(String userInputKey) {","lastModifiedDate":"2024-01-29"},{"lineNumber":165,"author":{"gitId":"Ella-e"},"content":"        switch (userInputKey) {","lastModifiedDate":"2024-01-29"},{"lineNumber":166,"author":{"gitId":"Ella-e"},"content":"        case \"bye\":","lastModifiedDate":"2024-01-29"},{"lineNumber":167,"author":{"gitId":"Ella-e"},"content":"            currentKey \u003d KeyEnum.EXITKEY;","lastModifiedDate":"2024-01-29"},{"lineNumber":168,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":169,"author":{"gitId":"Ella-e"},"content":"        case \"list\":","lastModifiedDate":"2024-01-29"},{"lineNumber":170,"author":{"gitId":"Ella-e"},"content":"            currentKey \u003d KeyEnum.LIST;","lastModifiedDate":"2024-01-29"},{"lineNumber":171,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":172,"author":{"gitId":"Ella-e"},"content":"        case \"mark\":","lastModifiedDate":"2024-01-29"},{"lineNumber":173,"author":{"gitId":"Ella-e"},"content":"            currentKey \u003d KeyEnum.MARK;","lastModifiedDate":"2024-01-29"},{"lineNumber":174,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":175,"author":{"gitId":"Ella-e"},"content":"        case \"unmark\":","lastModifiedDate":"2024-01-29"},{"lineNumber":176,"author":{"gitId":"Ella-e"},"content":"            currentKey \u003d KeyEnum.UNMARK;","lastModifiedDate":"2024-01-29"},{"lineNumber":177,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":178,"author":{"gitId":"Ella-e"},"content":"        case \"event\":","lastModifiedDate":"2024-01-29"},{"lineNumber":179,"author":{"gitId":"Ella-e"},"content":"            currentKey \u003d KeyEnum.EVENT;","lastModifiedDate":"2024-01-29"},{"lineNumber":180,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":181,"author":{"gitId":"Ella-e"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-29"},{"lineNumber":182,"author":{"gitId":"Ella-e"},"content":"            currentKey \u003d KeyEnum.DEADLINE;","lastModifiedDate":"2024-01-29"},{"lineNumber":183,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":184,"author":{"gitId":"Ella-e"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-29"},{"lineNumber":185,"author":{"gitId":"Ella-e"},"content":"            currentKey \u003d KeyEnum.TODO;","lastModifiedDate":"2024-01-29"},{"lineNumber":186,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":187,"author":{"gitId":"Ella-e"},"content":"        case \"delete\":","lastModifiedDate":"2024-01-29"},{"lineNumber":188,"author":{"gitId":"Ella-e"},"content":"            currentKey \u003d KeyEnum.DELETE;","lastModifiedDate":"2024-01-29"},{"lineNumber":189,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":190,"author":{"gitId":"Ella-e"},"content":"        case \"find\":","lastModifiedDate":"2024-01-31"},{"lineNumber":191,"author":{"gitId":"Ella-e"},"content":"            currentKey \u003d KeyEnum.FIND;","lastModifiedDate":"2024-01-31"},{"lineNumber":192,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-02-06"},{"lineNumber":193,"author":{"gitId":"Ella-e"},"content":"        default:","lastModifiedDate":"2024-02-06"},{"lineNumber":194,"author":{"gitId":"Ella-e"},"content":"            throw new InvalidKeyException();","lastModifiedDate":"2024-01-29"},{"lineNumber":195,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":196,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":197,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":198,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":199,"author":{"gitId":"Ella-e"},"content":"     * Changes date from string to LocalDate object.","lastModifiedDate":"2024-02-15"},{"lineNumber":200,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":201,"author":{"gitId":"Ella-e"},"content":"     * @param str date in string form","lastModifiedDate":"2024-02-15"},{"lineNumber":202,"author":{"gitId":"Ella-e"},"content":"     * @return date in LocalDate form","lastModifiedDate":"2024-02-15"},{"lineNumber":203,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":204,"author":{"gitId":"Ella-e"},"content":"    public static LocalDate formatDate(String str) {","lastModifiedDate":"2024-02-15"},{"lineNumber":205,"author":{"gitId":"Ella-e"},"content":"        LocalDate date \u003d null;","lastModifiedDate":"2024-02-15"},{"lineNumber":206,"author":{"gitId":"Ella-e"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":207,"author":{"gitId":"Ella-e"},"content":"            date \u003d FORMATER.stringToDate(str);","lastModifiedDate":"2024-02-15"},{"lineNumber":208,"author":{"gitId":"Ella-e"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":209,"author":{"gitId":"Ella-e"},"content":"            throw new InvalidDateTimeException();","lastModifiedDate":"2024-02-15"},{"lineNumber":210,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":211,"author":{"gitId":"Ella-e"},"content":"        assert date !\u003d null;","lastModifiedDate":"2024-02-15"},{"lineNumber":212,"author":{"gitId":"Ella-e"},"content":"        return date;","lastModifiedDate":"2024-02-15"},{"lineNumber":213,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":214,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":215,"author":{"gitId":"Ella-e"},"content":"    public KeyEnum getCurrentKey() {","lastModifiedDate":"2024-01-29"},{"lineNumber":216,"author":{"gitId":"Ella-e"},"content":"        return currentKey;","lastModifiedDate":"2024-01-29"},{"lineNumber":217,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":218,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":219,"author":{"gitId":"Ella-e"},"content":"    public String getInputDetail() {","lastModifiedDate":"2024-01-29"},{"lineNumber":220,"author":{"gitId":"Ella-e"},"content":"        return inputDetail;","lastModifiedDate":"2024-01-29"},{"lineNumber":221,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":222,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":223,"author":{"gitId":"Ella-e"},"content":"    public LocalDate getTo() {","lastModifiedDate":"2024-02-15"},{"lineNumber":224,"author":{"gitId":"Ella-e"},"content":"        return to;","lastModifiedDate":"2024-01-29"},{"lineNumber":225,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":226,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":227,"author":{"gitId":"Ella-e"},"content":"    public void setTo(LocalDate to) {","lastModifiedDate":"2024-02-15"},{"lineNumber":228,"author":{"gitId":"Ella-e"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-29"},{"lineNumber":229,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":230,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":231,"author":{"gitId":"Ella-e"},"content":"    public LocalDate getFrom() {","lastModifiedDate":"2024-02-15"},{"lineNumber":232,"author":{"gitId":"Ella-e"},"content":"        return from;","lastModifiedDate":"2024-01-29"},{"lineNumber":233,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":234,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":235,"author":{"gitId":"Ella-e"},"content":"    public Integer getIndex() {","lastModifiedDate":"2024-01-29"},{"lineNumber":236,"author":{"gitId":"Ella-e"},"content":"        return index;","lastModifiedDate":"2024-01-29"},{"lineNumber":237,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":238,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Ella-e":238}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Ella-e":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.control.MainWindow\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"35.0\" prefWidth\u003d\"310.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"350.0\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Ella-e":19}},{"path":"src/test/java/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"public class StorageTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"    public void load_loadFile_success() throws IOException {","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"        // read success from a valid path, NullPointerException should not be thrown","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"        String validPath \u003d \"./test_data/test_duke.txt\";","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"        Storage storage \u003d new Storage(validPath);","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"        Assertions.assertNotNull(storage.load());","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"    public void load_invalidPath_exceptionThrown() {","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"        // read fail from an invalid path, IOException should be thrown","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"        String inValidPath \u003d \"abcabcabc\";","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"        Storage storage \u003d new Storage(inValidPath);","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"        Assertions.assertThrows(NullPointerException.class, storage::load);","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Ella-e":24}},{"path":"src/test/java/duke/utils/DukeDateFormaterTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.utils;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"public class DukeDateFormaterTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"    public void stringToDate_validDate_success() {","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"        DukeDateFormater formater \u003d new DukeDateFormater();","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"        // Format date success - the string is valid","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"        LocalDate date \u003d formater.stringToDate(\"2019-12-01\");","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"        Assertions.assertEquals(\"2019-12-01\", date.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"    public void stringToDate_emptyString_exceptionThrown() {","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"        DukeDateFormater formater \u003d new DukeDateFormater();","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"        // Format date fail - the string is empty","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"        Assertions.assertThrows(DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"            LocalDate date \u003d formater.stringToDate(\"\");","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"        });","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"    public void stringToDate_largeDate_exceptionThrown() {","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"        DukeDateFormater formater \u003d new DukeDateFormater();","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"Ella-e"},"content":"        // Format date fail - the string exceeds the valid date range.","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"Ella-e"},"content":"        Assertions.assertThrows(DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Ella-e"},"content":"            LocalDate date \u003d formater.stringToDate(\"2019-12-99\");","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"Ella-e"},"content":"        });","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"Ella-e"},"content":"    public void stringToDate_wrongFormat_exceptionThrown() {","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"Ella-e"},"content":"        DukeDateFormater formater \u003d new DukeDateFormater();","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"Ella-e"},"content":"        // Format date fail - the string is not in supported date format","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"Ella-e"},"content":"        Assertions.assertThrows(DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Ella-e"},"content":"            LocalDate date \u003d formater.stringToDate(\"2019/12/01\");","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"Ella-e"},"content":"        });","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"Ella-e"},"content":"    public void dukeDateFormater_stringToDate_exceptionThrown4() {","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"Ella-e"},"content":"        DukeDateFormater formater \u003d new DukeDateFormater();","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"Ella-e"},"content":"        // Format date fail - the string contains non-numeric characters.","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"Ella-e"},"content":"        Assertions.assertThrows(DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"Ella-e"},"content":"            LocalDate date \u003d formater.stringToDate(\"abca-bc-ab\");","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"Ella-e"},"content":"        });","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Ella-e":54}},{"path":"src/test/java/duke/utils/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.utils;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"    public void checkSpecialCharacter_todo_success() {","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"        // Test for valid input for todo command.","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"        String[] input \u003d {\"todo\", \"read\", \"book\"};","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"        String result \u003d parser.checkSpecialCharacter(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"        assert result.equals(\"valid\");","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"    public void checkSpecialCharacter_deadline_success() {","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"        // Test for valid input for deadline command.","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"        String[] input2 \u003d {\"deadline\", \"read\", \"book\", \"/by\", \"2019-12-01\"};","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"        String result2 \u003d parser.checkSpecialCharacter(input2);","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"        assert result2.equals(\"valid\");","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"    public void checkSpecialCharacter_event_success() {","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"        // Test for valid input for event command.","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"        String[] input3 \u003d {\"event\", \"read\", \"book\", \"and\", \"eat\", \"/from\", \"2019-12-01\", \"/to\", \"2019-12-02\"};","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"        String result3 \u003d parser.checkSpecialCharacter(input3);","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"        assert result3.equals(\"valid\");","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"Ella-e"},"content":"    public void checkSpecialCharacter_singleSpecialCharacter_fail() {","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"Ella-e"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"Ella-e"},"content":"        // Test for invalid input when the special character is one of the input string element.","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"Ella-e"},"content":"        String[] input4 \u003d {\"todo\", \"read\", \"book\", \"|\", \"2019-12-01\"};","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"Ella-e"},"content":"        String result4 \u003d parser.checkSpecialCharacter(input4);","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"Ella-e"},"content":"        assert result4.equals(\"Should not use special character |\");","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"Ella-e"},"content":"    public void checkSpecialCharacter_inPlaceSpecialCharacter_fail() {","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"Ella-e"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"Ella-e"},"content":"        // Test for invalid input when the special character is in the middle of one input substring.","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"Ella-e"},"content":"        String[] input5 \u003d {\"todo\", \"read\", \"book\", \"|2019-12-01\"};","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"Ella-e"},"content":"        String result5 \u003d parser.checkSpecialCharacter(input5);","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"Ella-e"},"content":"        assert result5.equals(\"Should not use special character |\");","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"Ella-e"},"content":"    public void parse_todo_success() {","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"Ella-e"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"Ella-e"},"content":"        // Test for invalid input key.","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"Ella-e"},"content":"        String input \u003d \"todo read book\";","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"Ella-e"},"content":"        parser.parse(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"Ella-e"},"content":"        assert parser.getCurrentKey().equals(KeyEnum.TODO);","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"Ella-e"},"content":"    public void parse_deadline_success() {","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"Ella-e"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"Ella-e"},"content":"        // Test for invalid input key.","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"Ella-e"},"content":"        String input \u003d \"deadline read book /by 2023-01-01\";","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"Ella-e"},"content":"        parser.parse(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"Ella-e"},"content":"        assert parser.getCurrentKey().equals(KeyEnum.DEADLINE);","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"Ella-e"},"content":"    public void parse_invalidDeadlineFormat_exceptionThrown() {","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"Ella-e"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"Ella-e"},"content":"        // Test for invalid input key.","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"Ella-e"},"content":"        String input \u003d \"deadline read book /to 2023-01-01\";","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"Ella-e"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"Ella-e"},"content":"            parser.parse(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"Ella-e"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"Ella-e"},"content":"            assert e.getMessage().equals(\"!!!ERROR: Incorrect instruction format. \"","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"Ella-e"},"content":"              + \"The correct format is: \\\"deadline content /by yyyy-mm-dd\\\"\");","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"Ella-e"},"content":"    public void parse_event_success() {","lastModifiedDate":"2024-02-20"},{"lineNumber":83,"author":{"gitId":"Ella-e"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"Ella-e"},"content":"        // Test for invalid input key.","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"Ella-e"},"content":"        String input \u003d \"event read book /from 2023-01-01 /to 2023-01-02\";","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"Ella-e"},"content":"        parser.parse(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"Ella-e"},"content":"        assert parser.getCurrentKey().equals(KeyEnum.EVENT);","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"Ella-e"},"content":"    public void parse_invalidEventFormat_exceptionThrown() {","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"Ella-e"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"Ella-e"},"content":"        // Test for invalid input key.","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"Ella-e"},"content":"        String input \u003d \"event read book /from 2023-01-01\";","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"Ella-e"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"Ella-e"},"content":"            parser.parse(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"Ella-e"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"Ella-e"},"content":"            assert e.getMessage().equals(\"!!!ERROR: Incorrect instruction format. \"","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"Ella-e"},"content":"              + \"The correct format is: \\\"event content /from yyyy-mm-dd /to yyyy-mm-dd\\\"\");","lastModifiedDate":"2024-02-20"},{"lineNumber":100,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":101,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":102,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":103,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":104,"author":{"gitId":"Ella-e"},"content":"    public void parse_find_success() {","lastModifiedDate":"2024-02-20"},{"lineNumber":105,"author":{"gitId":"Ella-e"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-20"},{"lineNumber":106,"author":{"gitId":"Ella-e"},"content":"        // Test for invalid input key.","lastModifiedDate":"2024-02-20"},{"lineNumber":107,"author":{"gitId":"Ella-e"},"content":"        String input \u003d \"find read book\";","lastModifiedDate":"2024-02-20"},{"lineNumber":108,"author":{"gitId":"Ella-e"},"content":"        parser.parse(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":109,"author":{"gitId":"Ella-e"},"content":"        assert parser.getCurrentKey().equals(KeyEnum.FIND);","lastModifiedDate":"2024-02-20"},{"lineNumber":110,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":111,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":112,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":113,"author":{"gitId":"Ella-e"},"content":"    public void parse_findEmptyBody_exceptionThrown() {","lastModifiedDate":"2024-02-20"},{"lineNumber":114,"author":{"gitId":"Ella-e"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-20"},{"lineNumber":115,"author":{"gitId":"Ella-e"},"content":"        // Test for invalid input key.","lastModifiedDate":"2024-02-20"},{"lineNumber":116,"author":{"gitId":"Ella-e"},"content":"        String input \u003d \"find\";","lastModifiedDate":"2024-02-20"},{"lineNumber":117,"author":{"gitId":"Ella-e"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":118,"author":{"gitId":"Ella-e"},"content":"            parser.parse(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":119,"author":{"gitId":"Ella-e"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":120,"author":{"gitId":"Ella-e"},"content":"            assert e.getMessage().equals(\"!!!ERROR: Please specify the content.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":121,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":122,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":123,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":124,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":125,"author":{"gitId":"Ella-e"},"content":"    public void parse_mark_success() {","lastModifiedDate":"2024-02-20"},{"lineNumber":126,"author":{"gitId":"Ella-e"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-20"},{"lineNumber":127,"author":{"gitId":"Ella-e"},"content":"        // Test for invalid input key.","lastModifiedDate":"2024-02-20"},{"lineNumber":128,"author":{"gitId":"Ella-e"},"content":"        String input \u003d \"mark 1\";","lastModifiedDate":"2024-02-20"},{"lineNumber":129,"author":{"gitId":"Ella-e"},"content":"        parser.parse(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":130,"author":{"gitId":"Ella-e"},"content":"        assert parser.getCurrentKey().equals(KeyEnum.MARK);","lastModifiedDate":"2024-02-20"},{"lineNumber":131,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":132,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":133,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":134,"author":{"gitId":"Ella-e"},"content":"    public void parse_markInvalidIndex_exceptionThrown() {","lastModifiedDate":"2024-02-20"},{"lineNumber":135,"author":{"gitId":"Ella-e"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-20"},{"lineNumber":136,"author":{"gitId":"Ella-e"},"content":"        // Test for invalid input key.","lastModifiedDate":"2024-02-20"},{"lineNumber":137,"author":{"gitId":"Ella-e"},"content":"        String input \u003d \"mark 99\";","lastModifiedDate":"2024-02-20"},{"lineNumber":138,"author":{"gitId":"Ella-e"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":139,"author":{"gitId":"Ella-e"},"content":"            parser.parse(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":140,"author":{"gitId":"Ella-e"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":141,"author":{"gitId":"Ella-e"},"content":"            assert e.getMessage().equals(\"!!!ERROR: The number is not valid.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":142,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":143,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":144,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":145,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":146,"author":{"gitId":"Ella-e"},"content":"    public void parse_unmark_success() {","lastModifiedDate":"2024-02-20"},{"lineNumber":147,"author":{"gitId":"Ella-e"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-20"},{"lineNumber":148,"author":{"gitId":"Ella-e"},"content":"        // Test for invalid input key.","lastModifiedDate":"2024-02-20"},{"lineNumber":149,"author":{"gitId":"Ella-e"},"content":"        String input \u003d \"unmark 1\";","lastModifiedDate":"2024-02-20"},{"lineNumber":150,"author":{"gitId":"Ella-e"},"content":"        parser.parse(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":151,"author":{"gitId":"Ella-e"},"content":"        assert parser.getCurrentKey().equals(KeyEnum.UNMARK);","lastModifiedDate":"2024-02-20"},{"lineNumber":152,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":153,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":154,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":155,"author":{"gitId":"Ella-e"},"content":"    public void parse_unmarkInvalidIndex_exceptionThrown() {","lastModifiedDate":"2024-02-20"},{"lineNumber":156,"author":{"gitId":"Ella-e"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-20"},{"lineNumber":157,"author":{"gitId":"Ella-e"},"content":"        // Test for invalid input key.","lastModifiedDate":"2024-02-20"},{"lineNumber":158,"author":{"gitId":"Ella-e"},"content":"        String input \u003d \"unmark abc\";","lastModifiedDate":"2024-02-20"},{"lineNumber":159,"author":{"gitId":"Ella-e"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":160,"author":{"gitId":"Ella-e"},"content":"            parser.parse(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":161,"author":{"gitId":"Ella-e"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":162,"author":{"gitId":"Ella-e"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-20"},{"lineNumber":163,"author":{"gitId":"Ella-e"},"content":"            assert e.getMessage().equals(\"Error: Please enter a valid number.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":164,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":165,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":166,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":167,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":168,"author":{"gitId":"Ella-e"},"content":"    public void parse_delete_success() {","lastModifiedDate":"2024-02-20"},{"lineNumber":169,"author":{"gitId":"Ella-e"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-20"},{"lineNumber":170,"author":{"gitId":"Ella-e"},"content":"        // Test for invalid input key.","lastModifiedDate":"2024-02-20"},{"lineNumber":171,"author":{"gitId":"Ella-e"},"content":"        String input \u003d \"delete 1\";","lastModifiedDate":"2024-02-20"},{"lineNumber":172,"author":{"gitId":"Ella-e"},"content":"        parser.parse(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":173,"author":{"gitId":"Ella-e"},"content":"        assert parser.getCurrentKey().equals(KeyEnum.DELETE);","lastModifiedDate":"2024-02-20"},{"lineNumber":174,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":175,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":176,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":177,"author":{"gitId":"Ella-e"},"content":"    public void parse_deleteInvalidIndex_exceptionThrown() {","lastModifiedDate":"2024-02-20"},{"lineNumber":178,"author":{"gitId":"Ella-e"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-20"},{"lineNumber":179,"author":{"gitId":"Ella-e"},"content":"        // Test for invalid input key.","lastModifiedDate":"2024-02-20"},{"lineNumber":180,"author":{"gitId":"Ella-e"},"content":"        String input \u003d \"delete t28\";","lastModifiedDate":"2024-02-20"},{"lineNumber":181,"author":{"gitId":"Ella-e"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":182,"author":{"gitId":"Ella-e"},"content":"            parser.parse(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":183,"author":{"gitId":"Ella-e"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":184,"author":{"gitId":"Ella-e"},"content":"            assert e.getMessage().equals(\"Error: Please enter a valid number.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":185,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":186,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":187,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":188,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":189,"author":{"gitId":"Ella-e"},"content":"    public void parse_list_success() {","lastModifiedDate":"2024-02-20"},{"lineNumber":190,"author":{"gitId":"Ella-e"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-20"},{"lineNumber":191,"author":{"gitId":"Ella-e"},"content":"        // Test for invalid input key.","lastModifiedDate":"2024-02-20"},{"lineNumber":192,"author":{"gitId":"Ella-e"},"content":"        String input \u003d \"list\";","lastModifiedDate":"2024-02-20"},{"lineNumber":193,"author":{"gitId":"Ella-e"},"content":"        parser.parse(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":194,"author":{"gitId":"Ella-e"},"content":"        assert parser.getCurrentKey().equals(KeyEnum.LIST);","lastModifiedDate":"2024-02-20"},{"lineNumber":195,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":196,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"Ella-e":196}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"todo borrow book","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"mark 3","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"mark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"unmark 3","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"bye","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Ella-e":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Ella-e":1,"-":20}}]
