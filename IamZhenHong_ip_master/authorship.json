[{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"D | 0 | a | 1100","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"D | 0 | a | 1100","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"IamZhenHong":2}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"import java.io.File;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"IamZhenHong"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"IamZhenHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"IamZhenHong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"IamZhenHong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"IamZhenHong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"IamZhenHong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"IamZhenHong"},"content":"class DukeException extends Exception {","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"IamZhenHong"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":"        super(message);","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"IamZhenHong"},"content":"    private static final String FILE_PATH \u003d \"duke.txt\";","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"IamZhenHong"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"IamZhenHong"},"content":"    public Duke() {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"IamZhenHong"},"content":"        tasks \u003d loadTasksFromFile();","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"IamZhenHong"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"Hello! I\u0027m CharmBot \");","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"IamZhenHong"},"content":"    ","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"IamZhenHong"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"IamZhenHong"},"content":"        String command \u003d scanner.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"IamZhenHong"},"content":"         // Initialize tasks list here","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"IamZhenHong"},"content":"    ","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"IamZhenHong"},"content":"        while (!command.equals(\"bye\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"IamZhenHong"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"IamZhenHong"},"content":"            try {","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"IamZhenHong"},"content":"                if (command.equals(\"list\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"IamZhenHong"},"content":"                    if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"IamZhenHong"},"content":"                        System.out.println(\"You have no tasks in your list.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"IamZhenHong"},"content":"                    } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"IamZhenHong"},"content":"                        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"IamZhenHong"},"content":"                        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"IamZhenHong"},"content":"                            System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"IamZhenHong"},"content":"                        }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"IamZhenHong"},"content":"                    }","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"IamZhenHong"},"content":"                } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"IamZhenHong"},"content":"                    int taskIndex \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"IamZhenHong"},"content":"                    if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"IamZhenHong"},"content":"                        throw new DukeException(\"Invalid task index.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"IamZhenHong"},"content":"                    }","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"IamZhenHong"},"content":"                    tasks.get(taskIndex).markAsDone();","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"IamZhenHong"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"IamZhenHong"},"content":"                    System.out.println(tasks.get(taskIndex));","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"IamZhenHong"},"content":"                } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"IamZhenHong"},"content":"                    int taskIndex \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"IamZhenHong"},"content":"                    if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"IamZhenHong"},"content":"                        throw new DukeException(\"Invalid task index.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"IamZhenHong"},"content":"                    }","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"IamZhenHong"},"content":"                    tasks.get(taskIndex).markAsNotDone();","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"IamZhenHong"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"IamZhenHong"},"content":"                    System.out.println(tasks.get(taskIndex));","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"IamZhenHong"},"content":"                } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"IamZhenHong"},"content":"                    int taskIndex \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"IamZhenHong"},"content":"                    if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"IamZhenHong"},"content":"                        throw new DukeException(\"Invalid task index.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"IamZhenHong"},"content":"                    }","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"IamZhenHong"},"content":"                    Task deletedTask \u003d tasks.remove(taskIndex);","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"IamZhenHong"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"IamZhenHong"},"content":"                    System.out.println(\"  \" + deletedTask);","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"IamZhenHong"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"IamZhenHong"},"content":"                } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"IamZhenHong"},"content":"                    if (command.startsWith(\"todo\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"IamZhenHong"},"content":"                        String description \u003d command.substring(5).trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"IamZhenHong"},"content":"                        if (description.isEmpty()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"IamZhenHong"},"content":"                            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":82,"author":{"gitId":"IamZhenHong"},"content":"                        }","lastModifiedDate":"2024-02-06"},{"lineNumber":83,"author":{"gitId":"IamZhenHong"},"content":"                        tasks.add(new ToDoTask(description));","lastModifiedDate":"2024-02-06"},{"lineNumber":84,"author":{"gitId":"IamZhenHong"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"IamZhenHong"},"content":"                        System.out.println(tasks.get(tasks.size() - 1));","lastModifiedDate":"2024-02-06"},{"lineNumber":86,"author":{"gitId":"IamZhenHong"},"content":"                        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"IamZhenHong"},"content":"                    } else if (command.startsWith(\"deadline \")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"IamZhenHong"},"content":"                        String[] parts \u003d command.substring(9).split(\"/by\");","lastModifiedDate":"2024-02-05"},{"lineNumber":89,"author":{"gitId":"IamZhenHong"},"content":"                        if (parts.length !\u003d 2 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"IamZhenHong"},"content":"                            throw new DukeException(\"Invalid command format. Please use \u0027deadline \u003cdescription\u003e /by \u003ctime in hhmm format\u003e\u0027. For example, \u0027deadline Finish project /by 1800\u0027.\");","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"IamZhenHong"},"content":"                        }","lastModifiedDate":"2024-02-06"},{"lineNumber":92,"author":{"gitId":"IamZhenHong"},"content":"                        String description \u003d parts[0].trim();","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"IamZhenHong"},"content":"                        String by \u003d parts[1].trim();","lastModifiedDate":"2024-02-08"},{"lineNumber":94,"author":{"gitId":"IamZhenHong"},"content":"                        LocalTime byTime \u003d LocalTime.parse(by, DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":95,"author":{"gitId":"IamZhenHong"},"content":"                        tasks.add(new DeadlineTask(description, byTime));","lastModifiedDate":"2024-02-08"},{"lineNumber":96,"author":{"gitId":"IamZhenHong"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-05"},{"lineNumber":97,"author":{"gitId":"IamZhenHong"},"content":"                        System.out.println(tasks.get(tasks.size() - 1));","lastModifiedDate":"2024-02-06"},{"lineNumber":98,"author":{"gitId":"IamZhenHong"},"content":"                        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":99,"author":{"gitId":"IamZhenHong"},"content":"                    } else if (command.startsWith(\"event \")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":100,"author":{"gitId":"IamZhenHong"},"content":"                        String[] parts \u003d command.substring(6).split(\"/from\");","lastModifiedDate":"2024-02-05"},{"lineNumber":101,"author":{"gitId":"IamZhenHong"},"content":"                        if (parts.length !\u003d 2 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":102,"author":{"gitId":"IamZhenHong"},"content":"                            throw new DukeException(\"Invalid command format. Please use \u0027event \u003cdescription\u003e /from \u003cstart time\u003e /to \u003cend time\u003e\u0027.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":103,"author":{"gitId":"IamZhenHong"},"content":"                        }","lastModifiedDate":"2024-02-05"},{"lineNumber":104,"author":{"gitId":"IamZhenHong"},"content":"                        String description \u003d parts[0].trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":105,"author":{"gitId":"IamZhenHong"},"content":"                        String[] eventParts \u003d parts[1].split(\"/to\");","lastModifiedDate":"2024-02-05"},{"lineNumber":106,"author":{"gitId":"IamZhenHong"},"content":"                        if (eventParts.length !\u003d 2 || eventParts[0].trim().isEmpty() || eventParts[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":107,"author":{"gitId":"IamZhenHong"},"content":"                            throw new DukeException(\"Invalid command format. Please use \u0027event \u003cdescription\u003e /from \u003cstart time\u003e /to \u003cend time\u003e\u0027.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":108,"author":{"gitId":"IamZhenHong"},"content":"                        }","lastModifiedDate":"2024-02-05"},{"lineNumber":109,"author":{"gitId":"IamZhenHong"},"content":"                        String from \u003d eventParts[0].trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":110,"author":{"gitId":"IamZhenHong"},"content":"                        String to \u003d eventParts[1].trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":111,"author":{"gitId":"IamZhenHong"},"content":"                        LocalTime startTime \u003d LocalTime.parse(from, DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":112,"author":{"gitId":"IamZhenHong"},"content":"                        LocalTime endTime \u003d LocalTime.parse(to, DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":113,"author":{"gitId":"IamZhenHong"},"content":"                        tasks.add(new EventTask(description, startTime, endTime));","lastModifiedDate":"2024-02-08"},{"lineNumber":114,"author":{"gitId":"IamZhenHong"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-05"},{"lineNumber":115,"author":{"gitId":"IamZhenHong"},"content":"                        System.out.println(tasks.get(tasks.size() - 1));","lastModifiedDate":"2024-02-06"},{"lineNumber":116,"author":{"gitId":"IamZhenHong"},"content":"                        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":117,"author":{"gitId":"IamZhenHong"},"content":"                    } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":118,"author":{"gitId":"IamZhenHong"},"content":"                        throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2019-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2019-07-29"},{"lineNumber":121,"author":{"gitId":"IamZhenHong"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":122,"author":{"gitId":"IamZhenHong"},"content":"                System.out.println(\"Invalid command format. Please provide a valid task index.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":123,"author":{"gitId":"IamZhenHong"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":124,"author":{"gitId":"IamZhenHong"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-06"},{"lineNumber":125,"author":{"gitId":"IamZhenHong"},"content":"                System.out.println(\"OOPS!!! \" + e.getMessage());","lastModifiedDate":"2024-02-06"},{"lineNumber":126,"author":{"gitId":"IamZhenHong"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-06"},{"lineNumber":127,"author":{"gitId":"IamZhenHong"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":128,"author":{"gitId":"IamZhenHong"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-06"},{"lineNumber":129,"author":{"gitId":"IamZhenHong"},"content":"            command \u003d scanner.nextLine();","lastModifiedDate":"2024-02-06"},{"lineNumber":130,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":131,"author":{"gitId":"IamZhenHong"},"content":"        duke.saveTasksToFile(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":132,"author":{"gitId":"IamZhenHong"},"content":"    ","lastModifiedDate":"2024-02-07"},{"lineNumber":133,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-06"},{"lineNumber":134,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-06"},{"lineNumber":135,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-06"},{"lineNumber":136,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":137,"author":{"gitId":"IamZhenHong"},"content":"    ","lastModifiedDate":"2024-02-08"},{"lineNumber":138,"author":{"gitId":"IamZhenHong"},"content":"    ","lastModifiedDate":"2024-02-08"},{"lineNumber":139,"author":{"gitId":"IamZhenHong"},"content":"    private ArrayList\u003cTask\u003e loadTasksFromFile() {","lastModifiedDate":"2024-02-07"},{"lineNumber":140,"author":{"gitId":"IamZhenHong"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":141,"author":{"gitId":"IamZhenHong"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":142,"author":{"gitId":"IamZhenHong"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-07"},{"lineNumber":143,"author":{"gitId":"IamZhenHong"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":144,"author":{"gitId":"IamZhenHong"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-07"},{"lineNumber":145,"author":{"gitId":"IamZhenHong"},"content":"            } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":146,"author":{"gitId":"IamZhenHong"},"content":"                Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-02-07"},{"lineNumber":147,"author":{"gitId":"IamZhenHong"},"content":"                while (scanner.hasNextLine()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":148,"author":{"gitId":"IamZhenHong"},"content":"                    String line \u003d scanner.nextLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":149,"author":{"gitId":"IamZhenHong"},"content":"                    Task task \u003d parseTaskFromString(line);","lastModifiedDate":"2024-02-07"},{"lineNumber":150,"author":{"gitId":"IamZhenHong"},"content":"                    tasks.add(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":151,"author":{"gitId":"IamZhenHong"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":152,"author":{"gitId":"IamZhenHong"},"content":"                scanner.close();","lastModifiedDate":"2024-02-07"},{"lineNumber":153,"author":{"gitId":"IamZhenHong"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":154,"author":{"gitId":"IamZhenHong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":155,"author":{"gitId":"IamZhenHong"},"content":"            System.out.println(\"Error loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":156,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":157,"author":{"gitId":"IamZhenHong"},"content":"        return tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":158,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":159,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":160,"author":{"gitId":"IamZhenHong"},"content":"    private Task parseTaskFromString(String line) {","lastModifiedDate":"2024-02-07"},{"lineNumber":161,"author":{"gitId":"IamZhenHong"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-02-07"},{"lineNumber":162,"author":{"gitId":"IamZhenHong"},"content":"        String type \u003d parts[0].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":163,"author":{"gitId":"IamZhenHong"},"content":"        boolean isDone \u003d parts[1].trim().equals(\"1\"); // Assuming \"1\" represents task is done","lastModifiedDate":"2024-02-08"},{"lineNumber":164,"author":{"gitId":"IamZhenHong"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":165,"author":{"gitId":"IamZhenHong"},"content":"    ","lastModifiedDate":"2024-02-07"},{"lineNumber":166,"author":{"gitId":"IamZhenHong"},"content":"        switch (type) {","lastModifiedDate":"2024-02-07"},{"lineNumber":167,"author":{"gitId":"IamZhenHong"},"content":"            case \"D\":","lastModifiedDate":"2024-02-08"},{"lineNumber":168,"author":{"gitId":"IamZhenHong"},"content":"                String by \u003d parts[3].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":169,"author":{"gitId":"IamZhenHong"},"content":"                LocalTime byTime \u003d LocalTime.parse(by, DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":170,"author":{"gitId":"IamZhenHong"},"content":"                return new DeadlineTask(description, byTime);","lastModifiedDate":"2024-02-08"},{"lineNumber":171,"author":{"gitId":"IamZhenHong"},"content":"            case \"E\":","lastModifiedDate":"2024-02-08"},{"lineNumber":172,"author":{"gitId":"IamZhenHong"},"content":"                String from \u003d parts[3].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":173,"author":{"gitId":"IamZhenHong"},"content":"                String to \u003d parts[4].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":174,"author":{"gitId":"IamZhenHong"},"content":"                LocalTime startTime \u003d LocalTime.parse(from, DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":175,"author":{"gitId":"IamZhenHong"},"content":"                LocalTime endTime \u003d LocalTime.parse(to, DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":176,"author":{"gitId":"IamZhenHong"},"content":"                return new EventTask(description, startTime, endTime);","lastModifiedDate":"2024-02-08"},{"lineNumber":177,"author":{"gitId":"IamZhenHong"},"content":"            default:","lastModifiedDate":"2024-02-07"},{"lineNumber":178,"author":{"gitId":"IamZhenHong"},"content":"                return new ToDoTask(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":179,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":180,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":181,"author":{"gitId":"IamZhenHong"},"content":"    ","lastModifiedDate":"2024-02-07"},{"lineNumber":182,"author":{"gitId":"IamZhenHong"},"content":"    ","lastModifiedDate":"2024-02-07"},{"lineNumber":183,"author":{"gitId":"IamZhenHong"},"content":"    ","lastModifiedDate":"2024-02-08"},{"lineNumber":184,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":185,"author":{"gitId":"IamZhenHong"},"content":"    private  void saveTasksToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":186,"author":{"gitId":"IamZhenHong"},"content":"        try (PrintWriter writer \u003d new PrintWriter(FILE_PATH)) {","lastModifiedDate":"2024-02-07"},{"lineNumber":187,"author":{"gitId":"IamZhenHong"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":188,"author":{"gitId":"IamZhenHong"},"content":"                writer.println(task.toFileString());","lastModifiedDate":"2024-02-07"},{"lineNumber":189,"author":{"gitId":"IamZhenHong"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":190,"author":{"gitId":"IamZhenHong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":191,"author":{"gitId":"IamZhenHong"},"content":"            System.out.println(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":192,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":193,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":194,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":195,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":196,"author":{"gitId":"IamZhenHong"},"content":"// Task, ToDoTask, DeadlineTask, EventTask classes remain unchanged","lastModifiedDate":"2024-02-06"},{"lineNumber":197,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":198,"author":{"gitId":"IamZhenHong"},"content":"class Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":199,"author":{"gitId":"IamZhenHong"},"content":"    protected String description;","lastModifiedDate":"2024-02-05"},{"lineNumber":200,"author":{"gitId":"IamZhenHong"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-05"},{"lineNumber":201,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":202,"author":{"gitId":"IamZhenHong"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-05"},{"lineNumber":203,"author":{"gitId":"IamZhenHong"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-05"},{"lineNumber":204,"author":{"gitId":"IamZhenHong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":205,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":206,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":207,"author":{"gitId":"IamZhenHong"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-05"},{"lineNumber":208,"author":{"gitId":"IamZhenHong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-05"},{"lineNumber":209,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":210,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":211,"author":{"gitId":"IamZhenHong"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-02-05"},{"lineNumber":212,"author":{"gitId":"IamZhenHong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":213,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":214,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":215,"author":{"gitId":"IamZhenHong"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":216,"author":{"gitId":"IamZhenHong"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2024-02-07"},{"lineNumber":217,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":218,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":219,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":220,"author":{"gitId":"IamZhenHong"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":221,"author":{"gitId":"IamZhenHong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":222,"author":{"gitId":"IamZhenHong"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2024-02-05"},{"lineNumber":223,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":224,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":225,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":226,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":227,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":228,"author":{"gitId":"IamZhenHong"},"content":"class ToDoTask extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":229,"author":{"gitId":"IamZhenHong"},"content":"    public ToDoTask(String description) {","lastModifiedDate":"2024-02-05"},{"lineNumber":230,"author":{"gitId":"IamZhenHong"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":231,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":232,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":233,"author":{"gitId":"IamZhenHong"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":234,"author":{"gitId":"IamZhenHong"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":235,"author":{"gitId":"IamZhenHong"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-02-07"},{"lineNumber":236,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":237,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":238,"author":{"gitId":"IamZhenHong"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":239,"author":{"gitId":"IamZhenHong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":240,"author":{"gitId":"IamZhenHong"},"content":"        return \"[T][\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2024-02-05"},{"lineNumber":241,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":242,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":243,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":244,"author":{"gitId":"IamZhenHong"},"content":"class DeadlineTask extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":245,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":246,"author":{"gitId":"IamZhenHong"},"content":"    private LocalTime deadline;","lastModifiedDate":"2024-02-08"},{"lineNumber":247,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":248,"author":{"gitId":"IamZhenHong"},"content":"    public DeadlineTask(String description, LocalTime by) {","lastModifiedDate":"2024-02-08"},{"lineNumber":249,"author":{"gitId":"IamZhenHong"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":250,"author":{"gitId":"IamZhenHong"},"content":"        this.deadline \u003d by;","lastModifiedDate":"2024-02-08"},{"lineNumber":251,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":252,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":253,"author":{"gitId":"IamZhenHong"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":254,"author":{"gitId":"IamZhenHong"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":255,"author":{"gitId":"IamZhenHong"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + deadline.format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":256,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":257,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":258,"author":{"gitId":"IamZhenHong"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":259,"author":{"gitId":"IamZhenHong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":260,"author":{"gitId":"IamZhenHong"},"content":"        return \"[D][\" + (isDone ? \"X\" : \" \") + \"] \" + description + \" (by: \" +deadline + \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":261,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":262,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":263,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":264,"author":{"gitId":"IamZhenHong"},"content":"class EventTask extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":265,"author":{"gitId":"IamZhenHong"},"content":"    private LocalTime startTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":266,"author":{"gitId":"IamZhenHong"},"content":"    private LocalTime endTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":267,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":268,"author":{"gitId":"IamZhenHong"},"content":"    public EventTask(String description, LocalTime startTime, LocalTime endTime) {","lastModifiedDate":"2024-02-08"},{"lineNumber":269,"author":{"gitId":"IamZhenHong"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":270,"author":{"gitId":"IamZhenHong"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":271,"author":{"gitId":"IamZhenHong"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":272,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":273,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":274,"author":{"gitId":"IamZhenHong"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":275,"author":{"gitId":"IamZhenHong"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":276,"author":{"gitId":"IamZhenHong"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + startTime.format(DateTimeFormatter.ofPattern(\"HHmm\")) + \" | \" + endTime.format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":277,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":278,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":279,"author":{"gitId":"IamZhenHong"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":280,"author":{"gitId":"IamZhenHong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":281,"author":{"gitId":"IamZhenHong"},"content":"        return \"[E][\" + (isDone ? \"X\" : \" \") + \"] \" + description + \" (from: \" + startTime.format(DateTimeFormatter.ofPattern(\"HH:mm\")) + \" to: \" + endTime.format(DateTimeFormatter.ofPattern(\"HH:mm\")) + \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"IamZhenHong":271,"-":12}}]
