[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"jskimdev"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"jskimdev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"jskimdev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"jskimdev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"jskimdev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"jskimdev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"jskimdev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"jskimdev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"jskimdev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"jskimdev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"jskimdev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"jskimdev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"jskimdev"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"jskimdev"},"content":"    mainClass.set(\"graphics.Launcher\")","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"jskimdev"},"content":"    archiveBaseName \u003d \"bytetalker\"","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jskimdev":16,"-":40}},{"path":"src/main/java/bytetalker/ByteTalker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jskimdev"},"content":"package bytetalker;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jskimdev"},"content":"import bytetalker.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"jskimdev"},"content":"import bytetalker.ui.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"jskimdev"},"content":"import bytetalker.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"jskimdev"},"content":"import bytetalker.parser.Parser;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"jskimdev"},"content":"import graphics.DialogBox;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"jskimdev"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"jskimdev"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"jskimdev"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"jskimdev"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"jskimdev"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"jskimdev"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"jskimdev"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"jskimdev"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"jskimdev"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"jskimdev"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"jskimdev"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"jskimdev"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"jskimdev"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"jskimdev"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"jskimdev"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"jskimdev"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"jskimdev"},"content":" * The ByteTalker program implements a chatbot where it processes user input.","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"jskimdev"},"content":" *","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"jskimdev"},"content":" * @author Junseo Kim","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"jskimdev"},"content":" * @version 0.1","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"jskimdev"},"content":" * @since 2024-01-28","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"jskimdev"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"jskimdev"},"content":"public class ByteTalker extends Application {","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"jskimdev"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"jskimdev"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"jskimdev"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"jskimdev"},"content":"    boolean isExit \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"jskimdev"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"jskimdev"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"jskimdev"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"jskimdev"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"jskimdev"},"content":"    private Scene scene;","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"jskimdev"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"jskimdev"},"content":"    private Image byteTalker \u003d new Image(this.getClass().getResourceAsStream(\"/images/chatbot.png\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"jskimdev"},"content":"    public ByteTalker() {","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"jskimdev"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"jskimdev"},"content":"        storage \u003d new Storage(\"./data/bytetalker.ByteTalker.txt\");","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"jskimdev"},"content":"        storage.setupDirectoryAndFile();","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"jskimdev"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"jskimdev"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"jskimdev"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"jskimdev"},"content":"            ui.showFileNotFoundErrorMsg();","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"jskimdev"},"content":"            isExit \u003d true;","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"jskimdev"},"content":"    public ByteTalker(String filePath) {","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"jskimdev"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"jskimdev"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"jskimdev"},"content":"        storage.setupDirectoryAndFile();","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"jskimdev"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"jskimdev"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"jskimdev"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"jskimdev"},"content":"            ui.showFileNotFoundErrorMsg();","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"jskimdev"},"content":"            isExit \u003d true;","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"jskimdev"},"content":"     * Runs the chatbot and allows user input. User input is processed with other methods.","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"jskimdev"},"content":"    public void run() {","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"jskimdev"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"jskimdev"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"jskimdev"},"content":"            String userInputString \u003d ui.storeUserInput();","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"jskimdev"},"content":"            String[] splitMessages \u003d Parser.parse(userInputString);","lastModifiedDate":"2024-02-14"},{"lineNumber":80,"author":{"gitId":"jskimdev"},"content":"            if (userInputString.equals(\"bye\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"jskimdev"},"content":"                break;","lastModifiedDate":"2024-02-06"},{"lineNumber":82,"author":{"gitId":"jskimdev"},"content":"            } else if (userInputString.equals(\"list\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"jskimdev"},"content":"                this.ui.returnList(this.tasks.getTasks());","lastModifiedDate":"2024-02-06"},{"lineNumber":84,"author":{"gitId":"jskimdev"},"content":"            } else if (splitMessages[0].equals(\"mark\")) {","lastModifiedDate":"2024-02-14"},{"lineNumber":85,"author":{"gitId":"jskimdev"},"content":"                this.tasks.markTask(splitMessages, storage, ui);","lastModifiedDate":"2024-02-14"},{"lineNumber":86,"author":{"gitId":"jskimdev"},"content":"            } else if (splitMessages[0].equals(\"unmark\")) {","lastModifiedDate":"2024-02-14"},{"lineNumber":87,"author":{"gitId":"jskimdev"},"content":"                this.tasks.unmarkTask(splitMessages, storage, ui);","lastModifiedDate":"2024-02-14"},{"lineNumber":88,"author":{"gitId":"jskimdev"},"content":"            } else if (splitMessages[0].equals(\"delete\")) {","lastModifiedDate":"2024-02-14"},{"lineNumber":89,"author":{"gitId":"jskimdev"},"content":"                this.tasks.deleteTask(Integer.parseInt(splitMessages[1]), storage, ui);","lastModifiedDate":"2024-02-14"},{"lineNumber":90,"author":{"gitId":"jskimdev"},"content":"            } else if (splitMessages[0].equals(\"find\")) {","lastModifiedDate":"2024-02-14"},{"lineNumber":91,"author":{"gitId":"jskimdev"},"content":"                this.tasks.findTask(splitMessages, ui);","lastModifiedDate":"2024-02-14"},{"lineNumber":92,"author":{"gitId":"jskimdev"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"jskimdev"},"content":"                this.tasks.addTask(splitMessages, storage, ui);","lastModifiedDate":"2024-02-14"},{"lineNumber":94,"author":{"gitId":"jskimdev"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"jskimdev"},"content":"        ui.showBye();","lastModifiedDate":"2024-02-06"},{"lineNumber":97,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":98,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":99,"author":{"gitId":"jskimdev"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"jskimdev"},"content":"        String[] splitMessages \u003d Parser.parse(input);","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"jskimdev"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"jskimdev"},"content":"            Platform.exit();","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"jskimdev"},"content":"            return this.ui.showBye();","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"jskimdev"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"jskimdev"},"content":"            return this.ui.returnList(this.tasks.getTasks());","lastModifiedDate":"2024-02-19"},{"lineNumber":106,"author":{"gitId":"jskimdev"},"content":"        } else if (splitMessages[0].equals(\"mark\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"jskimdev"},"content":"            return this.tasks.markTask(splitMessages, storage, ui);","lastModifiedDate":"2024-02-19"},{"lineNumber":108,"author":{"gitId":"jskimdev"},"content":"        } else if (splitMessages[0].equals(\"unmark\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":109,"author":{"gitId":"jskimdev"},"content":"            return this.tasks.unmarkTask(splitMessages, storage, ui);","lastModifiedDate":"2024-02-19"},{"lineNumber":110,"author":{"gitId":"jskimdev"},"content":"        } else if (splitMessages[0].equals(\"delete\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":111,"author":{"gitId":"jskimdev"},"content":"            return this.tasks.deleteTask(Integer.parseInt(splitMessages[1]), storage, ui);","lastModifiedDate":"2024-02-19"},{"lineNumber":112,"author":{"gitId":"jskimdev"},"content":"        } else if (splitMessages[0].equals(\"find\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":113,"author":{"gitId":"jskimdev"},"content":"            return this.tasks.findTask(splitMessages, ui);","lastModifiedDate":"2024-02-19"},{"lineNumber":114,"author":{"gitId":"jskimdev"},"content":"        } else {","lastModifiedDate":"2024-02-19"},{"lineNumber":115,"author":{"gitId":"jskimdev"},"content":"            return this.tasks.addTask(splitMessages, storage, ui);","lastModifiedDate":"2024-02-19"},{"lineNumber":116,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":117,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":119,"author":{"gitId":"jskimdev"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":120,"author":{"gitId":"jskimdev"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-19"},{"lineNumber":121,"author":{"gitId":"jskimdev"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-02-19"},{"lineNumber":122,"author":{"gitId":"jskimdev"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2024-02-19"},{"lineNumber":123,"author":{"gitId":"jskimdev"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-02-19"},{"lineNumber":124,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":125,"author":{"gitId":"jskimdev"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2024-02-19"},{"lineNumber":126,"author":{"gitId":"jskimdev"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-02-19"},{"lineNumber":127,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":128,"author":{"gitId":"jskimdev"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2024-02-19"},{"lineNumber":129,"author":{"gitId":"jskimdev"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2024-02-19"},{"lineNumber":130,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":131,"author":{"gitId":"jskimdev"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-02-19"},{"lineNumber":132,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":133,"author":{"gitId":"jskimdev"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-19"},{"lineNumber":134,"author":{"gitId":"jskimdev"},"content":"        stage.show();","lastModifiedDate":"2024-02-19"},{"lineNumber":135,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":136,"author":{"gitId":"jskimdev"},"content":"        stage.setTitle(\"ByteTalker\");","lastModifiedDate":"2024-02-19"},{"lineNumber":137,"author":{"gitId":"jskimdev"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-02-19"},{"lineNumber":138,"author":{"gitId":"jskimdev"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":139,"author":{"gitId":"jskimdev"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":140,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":141,"author":{"gitId":"jskimdev"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":142,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":143,"author":{"gitId":"jskimdev"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2024-02-19"},{"lineNumber":144,"author":{"gitId":"jskimdev"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-02-19"},{"lineNumber":145,"author":{"gitId":"jskimdev"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-02-19"},{"lineNumber":146,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":147,"author":{"gitId":"jskimdev"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":148,"author":{"gitId":"jskimdev"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-02-19"},{"lineNumber":149,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":150,"author":{"gitId":"jskimdev"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-19"},{"lineNumber":151,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":152,"author":{"gitId":"jskimdev"},"content":"        userInput.setPrefWidth(340.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":153,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":154,"author":{"gitId":"jskimdev"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":155,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":156,"author":{"gitId":"jskimdev"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":157,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":158,"author":{"gitId":"jskimdev"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":159,"author":{"gitId":"jskimdev"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":160,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":161,"author":{"gitId":"jskimdev"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":162,"author":{"gitId":"jskimdev"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":163,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":164,"author":{"gitId":"jskimdev"},"content":"        //functionality","lastModifiedDate":"2024-02-19"},{"lineNumber":165,"author":{"gitId":"jskimdev"},"content":"        sendButton.setOnMouseClicked((event -\u003e {","lastModifiedDate":"2024-02-19"},{"lineNumber":166,"author":{"gitId":"jskimdev"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-19"},{"lineNumber":167,"author":{"gitId":"jskimdev"},"content":"        }));","lastModifiedDate":"2024-02-19"},{"lineNumber":168,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":169,"author":{"gitId":"jskimdev"},"content":"        userInput.setOnAction((event -\u003e {","lastModifiedDate":"2024-02-19"},{"lineNumber":170,"author":{"gitId":"jskimdev"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-19"},{"lineNumber":171,"author":{"gitId":"jskimdev"},"content":"        }));","lastModifiedDate":"2024-02-19"},{"lineNumber":172,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":173,"author":{"gitId":"jskimdev"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2024-02-19"},{"lineNumber":174,"author":{"gitId":"jskimdev"},"content":"        dialogContainer.getChildren().add(DialogBox.getByteTalkerDialog(new Label(this.ui.showWelcome()),","lastModifiedDate":"2024-02-19"},{"lineNumber":175,"author":{"gitId":"jskimdev"},"content":"                new ImageView(byteTalker)));","lastModifiedDate":"2024-02-19"},{"lineNumber":176,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":177,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":178,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":179,"author":{"gitId":"jskimdev"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2024-02-19"},{"lineNumber":180,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":181,"author":{"gitId":"jskimdev"},"content":"     * @param text String containing text to add","lastModifiedDate":"2024-02-19"},{"lineNumber":182,"author":{"gitId":"jskimdev"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2024-02-19"},{"lineNumber":183,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":184,"author":{"gitId":"jskimdev"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2024-02-19"},{"lineNumber":185,"author":{"gitId":"jskimdev"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2024-02-19"},{"lineNumber":186,"author":{"gitId":"jskimdev"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2024-02-19"},{"lineNumber":187,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":188,"author":{"gitId":"jskimdev"},"content":"        return textToAdd;","lastModifiedDate":"2024-02-19"},{"lineNumber":189,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":190,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":191,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":192,"author":{"gitId":"jskimdev"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-19"},{"lineNumber":193,"author":{"gitId":"jskimdev"},"content":"     * the dialog container. Clears teh user input after processing.","lastModifiedDate":"2024-02-19"},{"lineNumber":194,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":195,"author":{"gitId":"jskimdev"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-19"},{"lineNumber":196,"author":{"gitId":"jskimdev"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2024-02-19"},{"lineNumber":197,"author":{"gitId":"jskimdev"},"content":"        Label botText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2024-02-19"},{"lineNumber":198,"author":{"gitId":"jskimdev"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-19"},{"lineNumber":199,"author":{"gitId":"jskimdev"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2024-02-19"},{"lineNumber":200,"author":{"gitId":"jskimdev"},"content":"                DialogBox.getByteTalkerDialog(botText, new ImageView(byteTalker))","lastModifiedDate":"2024-02-19"},{"lineNumber":201,"author":{"gitId":"jskimdev"},"content":"        );","lastModifiedDate":"2024-02-19"},{"lineNumber":202,"author":{"gitId":"jskimdev"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-19"},{"lineNumber":203,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":204,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":205,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":206,"author":{"gitId":"jskimdev"},"content":"     * This is the main method which starts the chatbot by running run method.","lastModifiedDate":"2024-02-07"},{"lineNumber":207,"author":{"gitId":"jskimdev"},"content":"     * @param args Unused.","lastModifiedDate":"2024-02-07"},{"lineNumber":208,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":209,"author":{"gitId":"jskimdev"},"content":"    /*","lastModifiedDate":"2024-02-19"},{"lineNumber":210,"author":{"gitId":"jskimdev"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-06"},{"lineNumber":211,"author":{"gitId":"jskimdev"},"content":"        new ByteTalker(\"./data/bytetalker.ByteTalker.txt\").run();","lastModifiedDate":"2024-02-06"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":213,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jskimdev":212,"-":2}},{"path":"src/main/java/bytetalker/exception/ByteTalkerException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jskimdev"},"content":"package bytetalker.exception;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jskimdev"},"content":"public class ByteTalkerException {","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"jskimdev"},"content":"    public static class TodoNoTaskException extends Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"jskimdev"},"content":"        public TodoNoTaskException(String errorMessage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"jskimdev"},"content":"            super(errorMessage);","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"jskimdev"},"content":"    public static class TodoUnsupportedFormatException extends Exception {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"jskimdev"},"content":"        public TodoUnsupportedFormatException(String errorMessage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"jskimdev"},"content":"            super(errorMessage);","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"jskimdev"},"content":"    public static class DeadlineWrongFormatException extends Exception {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"jskimdev"},"content":"        public DeadlineWrongFormatException(String errorMessage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"jskimdev"},"content":"            super(errorMessage);","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"jskimdev"},"content":"    public static class DeadlineUnsupportedFormatException extends Exception {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"jskimdev"},"content":"        public DeadlineUnsupportedFormatException(String errorMessage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"jskimdev"},"content":"            super(errorMessage);","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"jskimdev"},"content":"    public static class EventWrongFormatException extends  Exception {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"jskimdev"},"content":"        public EventWrongFormatException(String errorMessages) {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"jskimdev"},"content":"            super(errorMessages);","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"jskimdev"},"content":"    public static class UnsupportedTaskException extends Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"jskimdev"},"content":"        public UnsupportedTaskException(String errorMessage) {","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"jskimdev"},"content":"            super(errorMessage);","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"jskimdev"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"jskimdev":39}},{"path":"src/main/java/bytetalker/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jskimdev"},"content":"package bytetalker.parser;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jskimdev"},"content":"import bytetalker.exception.ByteTalkerException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"jskimdev"},"content":"import bytetalker.ui.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"jskimdev"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"jskimdev"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"jskimdev"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"jskimdev"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"jskimdev"},"content":"public class Parser {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"jskimdev"},"content":"    public static String[] parse(String input) {","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"jskimdev"},"content":"        input \u003d input.strip();","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"jskimdev"},"content":"        String[] tempMessages \u003d input.split(\" \");","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"jskimdev"},"content":"        return tempMessages;","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"jskimdev"},"content":"    public static ArrayList\u003cString\u003e parseTodoInput(String[] splitMessages) throws ByteTalkerException.TodoUnsupportedFormatException {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"jskimdev"},"content":"        String tempMessage \u003d \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"jskimdev"},"content":"        for (int i \u003d 1; i \u003c splitMessages.length; i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"jskimdev"},"content":"            if (splitMessages[i].equals(\"/by\") || splitMessages[i].equals(\"/from\") || splitMessages[i].equals(\"to\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"jskimdev"},"content":"                throw new ByteTalkerException.TodoUnsupportedFormatException(\"This format is not supported for \" +","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"jskimdev"},"content":"                        \"Todo\");","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"jskimdev"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"jskimdev"},"content":"            tempMessage +\u003d splitMessages[i] + \" \";","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"jskimdev"},"content":"        ArrayList\u003cString\u003e resultMessages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"jskimdev"},"content":"        tempMessage \u003d tempMessage.strip();","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"jskimdev"},"content":"        resultMessages.add(tempMessage);","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"jskimdev"},"content":"        return resultMessages;","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"jskimdev"},"content":"    public static ArrayList\u003cString\u003e parseDeadlineInput(String[] splitMessages) throws ByteTalkerException.DeadlineUnsupportedFormatException {","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"jskimdev"},"content":"        ArrayList\u003cString\u003e messageContainer \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"jskimdev"},"content":"        String tempMessage \u003d \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"jskimdev"},"content":"        for (int i \u003d 1; i \u003c splitMessages.length; i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"jskimdev"},"content":"            if (splitMessages[i].equals(\"/from\") || splitMessages[i].equals(\"/to\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"jskimdev"},"content":"                throw new ByteTalkerException.DeadlineUnsupportedFormatException(\"This format is not supported for \" +","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"jskimdev"},"content":"                        \"Deadline\");","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"jskimdev"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"jskimdev"},"content":"            boolean isContentFilled \u003d splitMessages[i].equals(\"/by\");","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"jskimdev"},"content":"            if (isContentFilled) {","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"jskimdev"},"content":"                tempMessage \u003d tempMessage.strip();","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"jskimdev"},"content":"                messageContainer.add(tempMessage);","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"jskimdev"},"content":"                tempMessage \u003d \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"jskimdev"},"content":"            } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"jskimdev"},"content":"                tempMessage +\u003d splitMessages[i] + \" \";","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"jskimdev"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"jskimdev"},"content":"        messageContainer.add(tempMessage);","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"jskimdev"},"content":"        return messageContainer;","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"jskimdev"},"content":"    public static ArrayList\u003cString\u003e parseEventInput(String[] splitMessages) throws ByteTalkerException.EventWrongFormatException {","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"jskimdev"},"content":"        ArrayList\u003cString\u003e messageContainer \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"jskimdev"},"content":"        String tempMessage \u003d \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"jskimdev"},"content":"        for (int i \u003d 1; i \u003c splitMessages.length; i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"jskimdev"},"content":"            if (splitMessages[i].equals(\"/by\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"jskimdev"},"content":"                throw new ByteTalkerException.EventWrongFormatException(\"This is the wrong for event\");","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"jskimdev"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"jskimdev"},"content":"            boolean isContentFilled \u003d splitMessages[i].equals(\"/from\");","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"jskimdev"},"content":"            boolean isFromFilled \u003d splitMessages[i].equals(\"/to\");","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"jskimdev"},"content":"            if (isContentFilled) {","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"jskimdev"},"content":"                tempMessage \u003d tempMessage.strip();","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"jskimdev"},"content":"                messageContainer.add(tempMessage);","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"jskimdev"},"content":"                tempMessage \u003d \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"jskimdev"},"content":"            } else if (isFromFilled) {","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"jskimdev"},"content":"                tempMessage \u003d tempMessage.strip();","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"jskimdev"},"content":"                messageContainer.add(tempMessage);","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"jskimdev"},"content":"                tempMessage \u003d \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"jskimdev"},"content":"            } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"jskimdev"},"content":"                tempMessage +\u003d splitMessages[i] + \" \";","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"jskimdev"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"jskimdev"},"content":"        tempMessage \u003d tempMessage.strip();","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"jskimdev"},"content":"        messageContainer.add(tempMessage);","lastModifiedDate":"2024-02-14"},{"lineNumber":77,"author":{"gitId":"jskimdev"},"content":"        return messageContainer;","lastModifiedDate":"2024-02-14"},{"lineNumber":78,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"jskimdev"},"content":"    public static LocalDateTime parseDateTime(String dateTimeString) {","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"jskimdev"},"content":"        String cleanDateTimeString \u003d dateTimeString.strip();","lastModifiedDate":"2024-02-06"},{"lineNumber":82,"author":{"gitId":"jskimdev"},"content":"        boolean isTimeExist \u003d cleanDateTimeString.split(\" \").length \u003e 1;","lastModifiedDate":"2024-02-06"},{"lineNumber":83,"author":{"gitId":"jskimdev"},"content":"        boolean isInputFirstFormat \u003d dateTimeString.split(\"-\").length \u003e 1;","lastModifiedDate":"2024-02-06"},{"lineNumber":84,"author":{"gitId":"jskimdev"},"content":"        DateTimeFormatter inputFormatter;","lastModifiedDate":"2024-02-06"},{"lineNumber":85,"author":{"gitId":"jskimdev"},"content":"        if (!isTimeExist) {","lastModifiedDate":"2024-02-06"},{"lineNumber":86,"author":{"gitId":"jskimdev"},"content":"            cleanDateTimeString +\u003d \" 2359\";","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"jskimdev"},"content":"        if (isInputFirstFormat) {","lastModifiedDate":"2024-02-06"},{"lineNumber":90,"author":{"gitId":"jskimdev"},"content":"            inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-M-d Hmm\");","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"jskimdev"},"content":"        } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":92,"author":{"gitId":"jskimdev"},"content":"            inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy Hmm\");","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":94,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":95,"author":{"gitId":"jskimdev"},"content":"        LocalDateTime dateTime \u003d null;","lastModifiedDate":"2024-02-06"},{"lineNumber":96,"author":{"gitId":"jskimdev"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":97,"author":{"gitId":"jskimdev"},"content":"            dateTime \u003d LocalDateTime.parse(cleanDateTimeString, inputFormatter);","lastModifiedDate":"2024-02-06"},{"lineNumber":98,"author":{"gitId":"jskimdev"},"content":"            return dateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":99,"author":{"gitId":"jskimdev"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":100,"author":{"gitId":"jskimdev"},"content":"            Ui.showDateTimeParseErrorMsg(e);","lastModifiedDate":"2024-02-06"},{"lineNumber":101,"author":{"gitId":"jskimdev"},"content":"            return dateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":102,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":103,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":104,"author":{"gitId":"jskimdev"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"jskimdev":104}},{"path":"src/main/java/bytetalker/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jskimdev"},"content":"package bytetalker.storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jskimdev"},"content":"import bytetalker.parser.Parser;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"jskimdev"},"content":"import bytetalker.task.*;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"jskimdev"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"jskimdev"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"jskimdev"},"content":"import java.io.File;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"jskimdev"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"jskimdev"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"jskimdev"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"jskimdev"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"jskimdev"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"jskimdev"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"jskimdev"},"content":" * Represents utility class for storing and loading information from a file on the hard disk.","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"jskimdev"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"jskimdev"},"content":"public class Storage {","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"jskimdev"},"content":"    private static Path filePath;","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"jskimdev"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"jskimdev"},"content":"        this.filePath \u003d Path.of(filePath);","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"jskimdev"},"content":"     * Sets up directory and file to store list in hard disk. If there is no directory or file, it will create the","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"jskimdev"},"content":"     * msising one.","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"jskimdev"},"content":"    public void setupDirectoryAndFile() {","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"jskimdev"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"jskimdev"},"content":"            Path directoryPath \u003d filePath.getParent();","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"jskimdev"},"content":"            boolean directoryExists \u003d Files.exists(directoryPath);","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"jskimdev"},"content":"            boolean fileExists \u003d Files.exists(filePath);","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"jskimdev"},"content":"            if (!directoryExists) {","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"jskimdev"},"content":"                Files.createDirectory(directoryPath);","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"jskimdev"},"content":"                System.out.println(\"Directory does not exist; hence, created\");","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"jskimdev"},"content":"            } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"jskimdev"},"content":"                System.out.println(\"Directory exists\");","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"jskimdev"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"jskimdev"},"content":"            if (!fileExists) {","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"jskimdev"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"jskimdev"},"content":"                System.out.println(\"File does not exist; hence, created\");","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"jskimdev"},"content":"            } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"jskimdev"},"content":"                System.out.println(\"File exists\");","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"jskimdev"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"jskimdev"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"jskimdev"},"content":"            System.out.println(\"Failed to create a new file\");","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"jskimdev"},"content":"     * Stores the list of tasks into the hard disk.","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"jskimdev"},"content":"     * @param tasks List of tasks to be stored.","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"jskimdev"},"content":"     * @throws IOException If there is no file or directory.","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"jskimdev"},"content":"    public void storeTasks(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"jskimdev"},"content":"        ArrayList\u003cString\u003e tempTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"jskimdev"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"jskimdev"},"content":"            Task currentTask \u003d tasks.get(i);","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"jskimdev"},"content":"            boolean isTodo \u003d currentTask.getTaskType() \u003d\u003d TaskType.TODO;","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"jskimdev"},"content":"            boolean isDeadline \u003d currentTask.getTaskType() \u003d\u003d TaskType.DEADLINE;","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"jskimdev"},"content":"            boolean isEvent \u003d currentTask.getTaskType() \u003d\u003d TaskType.EVENT;","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"jskimdev"},"content":"            String done \u003d currentTask.getStatus() ? \"1\" : \"0\";","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"jskimdev"},"content":"            String temp \u003d currentTask.getTaskType().getIcon() + \" / \" + done + \" / \" + currentTask.getTask();","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"jskimdev"},"content":"            DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy Hmm\");","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"jskimdev"},"content":"            if (isDeadline) {","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"jskimdev"},"content":"                Deadline deadlineTask \u003d (Deadline) currentTask;","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"jskimdev"},"content":"                temp +\u003d \" / \" + deadlineTask.getDeadline().format(outputFormatter);","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"jskimdev"},"content":"            } else if (isEvent) {","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"jskimdev"},"content":"                Event eventTask \u003d (Event) currentTask;","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"jskimdev"},"content":"                temp +\u003d \" / \" + eventTask.getFrom().format(outputFormatter) + \" / \" + eventTask.getTo().format(outputFormatter);","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"jskimdev"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"jskimdev"},"content":"            tempTasks.add(temp);","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"jskimdev"},"content":"        Files.write(filePath, tempTasks);","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":82,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":83,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"jskimdev"},"content":"     * Loads the list of tasks from the hard disk.","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"jskimdev"},"content":"     * @return list of tasks stored in the hard disk.","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"jskimdev"},"content":"     * @throws FileNotFoundException If there is no file or directory.","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"jskimdev"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws FileNotFoundException {","lastModifiedDate":"2024-02-06"},{"lineNumber":90,"author":{"gitId":"jskimdev"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-06"},{"lineNumber":91,"author":{"gitId":"jskimdev"},"content":"        File file \u003d new File(filePath.toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":92,"author":{"gitId":"jskimdev"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2024-02-06"},{"lineNumber":93,"author":{"gitId":"jskimdev"},"content":"        int numberOfTasks \u003d 0;","lastModifiedDate":"2024-02-06"},{"lineNumber":94,"author":{"gitId":"jskimdev"},"content":"        System.out.println(\"Loading saved tasks\");","lastModifiedDate":"2024-02-06"},{"lineNumber":95,"author":{"gitId":"jskimdev"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":96,"author":{"gitId":"jskimdev"},"content":"            numberOfTasks++;","lastModifiedDate":"2024-02-06"},{"lineNumber":97,"author":{"gitId":"jskimdev"},"content":"            String[] splitMessage \u003d sc.nextLine().split(\" / \");","lastModifiedDate":"2024-02-06"},{"lineNumber":98,"author":{"gitId":"jskimdev"},"content":"            boolean isTodo \u003d splitMessage.length \u003d\u003d 3;","lastModifiedDate":"2024-02-06"},{"lineNumber":99,"author":{"gitId":"jskimdev"},"content":"            boolean isDeadline \u003d splitMessage.length \u003d\u003d 4;","lastModifiedDate":"2024-02-06"},{"lineNumber":100,"author":{"gitId":"jskimdev"},"content":"            boolean isEvent \u003d splitMessage.length \u003d\u003d 5;","lastModifiedDate":"2024-02-06"},{"lineNumber":101,"author":{"gitId":"jskimdev"},"content":"            boolean isDone \u003d splitMessage[1].equals(\"1\");","lastModifiedDate":"2024-02-06"},{"lineNumber":102,"author":{"gitId":"jskimdev"},"content":"            Task temp \u003d null;","lastModifiedDate":"2024-02-06"},{"lineNumber":103,"author":{"gitId":"jskimdev"},"content":"            if (isTodo) {","lastModifiedDate":"2024-02-06"},{"lineNumber":104,"author":{"gitId":"jskimdev"},"content":"                temp \u003d new Todo(splitMessage[2], isDone);","lastModifiedDate":"2024-02-06"},{"lineNumber":105,"author":{"gitId":"jskimdev"},"content":"            } else if (isDeadline) {","lastModifiedDate":"2024-02-06"},{"lineNumber":106,"author":{"gitId":"jskimdev"},"content":"                temp \u003d new Deadline(splitMessage[2], Parser.parseDateTime(splitMessage[3]), isDone);","lastModifiedDate":"2024-02-06"},{"lineNumber":107,"author":{"gitId":"jskimdev"},"content":"            } else if (isEvent) {","lastModifiedDate":"2024-02-06"},{"lineNumber":108,"author":{"gitId":"jskimdev"},"content":"                temp \u003d new Event(splitMessage[2], Parser.parseDateTime(splitMessage[3]),","lastModifiedDate":"2024-02-06"},{"lineNumber":109,"author":{"gitId":"jskimdev"},"content":"                        Parser.parseDateTime(splitMessage[4]), isDone);","lastModifiedDate":"2024-02-06"},{"lineNumber":110,"author":{"gitId":"jskimdev"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":111,"author":{"gitId":"jskimdev"},"content":"            tasks.add(temp);","lastModifiedDate":"2024-02-06"},{"lineNumber":112,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":113,"author":{"gitId":"jskimdev"},"content":"        if (numberOfTasks \u003d\u003d 0) {","lastModifiedDate":"2024-02-06"},{"lineNumber":114,"author":{"gitId":"jskimdev"},"content":"            System.out.println(\"No Tasks Saved\");","lastModifiedDate":"2024-02-06"},{"lineNumber":115,"author":{"gitId":"jskimdev"},"content":"        } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":116,"author":{"gitId":"jskimdev"},"content":"            System.out.println(\"Loaded saved tasks\");","lastModifiedDate":"2024-02-06"},{"lineNumber":117,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":118,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":119,"author":{"gitId":"jskimdev"},"content":"        return tasks;","lastModifiedDate":"2024-02-06"},{"lineNumber":120,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":121,"author":{"gitId":"jskimdev"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"jskimdev":121}},{"path":"src/main/java/bytetalker/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jskimdev"},"content":"package bytetalker.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jskimdev"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"jskimdev"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"jskimdev"},"content":"import java.util.Locale;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"jskimdev"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"jskimdev"},"content":" * Represents the Deadline task that the user wants to store. It contains deadline variable to store deadline time.","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"jskimdev"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"jskimdev"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"jskimdev"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"jskimdev"},"content":"    public Deadline(String task, LocalDateTime deadline) {","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"jskimdev"},"content":"        super(TaskType.DEADLINE, task);","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"jskimdev"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"jskimdev"},"content":"    public Deadline(String task, LocalDateTime deadline, boolean isDone) {","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"jskimdev"},"content":"        super(TaskType.DEADLINE, task, isDone);","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"jskimdev"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"jskimdev"},"content":"     * Creates a string to show information(task type, status, task content, deadline) about the deadline task.","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"jskimdev"},"content":"     * @return String that contains information about deadline.","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"jskimdev"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"jskimdev"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"jskimdev"},"content":"        return \"[\" + getTaskType().getIcon() + \"]\" + \"[\" + getStatusIcon() + \"] \" + getTask() + \" (by: \" + convertDeadlineToString() + \")\";","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"jskimdev"},"content":"     * Converts the deadline varialble which is LocalDateTime type to String in set output format(MMM dd yyyy h:mma)","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"jskimdev"},"content":"     * to be able to be printed.","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"jskimdev"},"content":"     * @return String of deadline variable.","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"jskimdev"},"content":"    public String convertDeadlineToString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"jskimdev"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mma\", Locale.ENGLISH);","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"jskimdev"},"content":"        String formattedDateTime \u003d this.deadline.format(outputFormatter);","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"jskimdev"},"content":"        return formattedDateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"jskimdev"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"jskimdev"},"content":"        return this.deadline;","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"jskimdev"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"jskimdev":48}},{"path":"src/main/java/bytetalker/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jskimdev"},"content":"package bytetalker.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jskimdev"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"jskimdev"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"jskimdev"},"content":"import java.util.Locale;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"jskimdev"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"jskimdev"},"content":" * Represents the Event task that the user wants to store. It contains to and from variables to store time.","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"jskimdev"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"jskimdev"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"jskimdev"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"jskimdev"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"jskimdev"},"content":"    public Event(String task, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"jskimdev"},"content":"        super(TaskType.EVENT, task);","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"jskimdev"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"jskimdev"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"jskimdev"},"content":"    public Event(String task, LocalDateTime from, LocalDateTime to, boolean isDone) {","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"jskimdev"},"content":"        super(TaskType.EVENT, task, isDone);","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"jskimdev"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"jskimdev"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"jskimdev"},"content":"     * Creates a string to show information(task type, status, task content, from, to) about the event task.","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"jskimdev"},"content":"     * @return String that contains information about task.","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"jskimdev"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"jskimdev"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"jskimdev"},"content":"        return \"[\" + getTaskType().getIcon() + \"]\" + \"[\" + getStatusIcon() + \"] \" + getTask() + \" (from: \" + convertFromToString() + \" to: \" + convertToToString() + \")\";","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"jskimdev"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"jskimdev"},"content":"        return this.from;","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"jskimdev"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"jskimdev"},"content":"        return this.to;","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"jskimdev"},"content":"     * Converts the from variable which is LocalDateTime type to String in set output format(MMM dd yyyy h:mma) to be","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"jskimdev"},"content":"     * able to be printed.","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"jskimdev"},"content":"     * @return String of from variable.","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"jskimdev"},"content":"    public String convertFromToString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"jskimdev"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mma\", Locale.ENGLISH);","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"jskimdev"},"content":"        String formattedDateTime \u003d this.from.format(outputFormatter);","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"jskimdev"},"content":"        return formattedDateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"jskimdev"},"content":"     * Converts the to variable which is LocalDateTime type to string in set output format(MMM dd yyyy h:mma) to be","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"jskimdev"},"content":"     * able to be printed.","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"jskimdev"},"content":"     * @return String of to variable.","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"jskimdev"},"content":"    public String convertToToString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"jskimdev"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mma\", Locale.ENGLISH);","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"jskimdev"},"content":"        String formattedDateTime \u003d this.to.format(outputFormatter);","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"jskimdev"},"content":"        return formattedDateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"jskimdev"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"jskimdev":67}},{"path":"src/main/java/bytetalker/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jskimdev"},"content":"package bytetalker.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jskimdev"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"jskimdev"},"content":" * Represents the task that user can type in to store in the list. It is the parent class of all types of tasks","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"jskimdev"},"content":" * supprted by the chatbot.","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"jskimdev"},"content":" *","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"jskimdev"},"content":" * @author Junseo Kim","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"jskimdev"},"content":" * @version 1.0","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"jskimdev"},"content":" * @since 2024-02-06","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"jskimdev"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"jskimdev"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"jskimdev"},"content":"    private String task;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"jskimdev"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"jskimdev"},"content":"    private TaskType taskType;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"jskimdev"},"content":"    public Task(TaskType taskType, String task) {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"jskimdev"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"jskimdev"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"jskimdev"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"jskimdev"},"content":"    public Task(TaskType taskType, String task, boolean isDone) {","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"jskimdev"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"jskimdev"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"jskimdev"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"jskimdev"},"content":"    public String getTask() {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jskimdev"},"content":"        return this.task;","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"jskimdev"},"content":"    public abstract String toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"jskimdev"},"content":"     * Returns the status icon of X or empty space depending on the status of the task.","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"jskimdev"},"content":"     * If the status is done, returns X or else empty space.","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"jskimdev"},"content":"     * @return Status icon.","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"jskimdev"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"jskimdev"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"jskimdev"},"content":"     * Sets status of the task depending on the status argument.","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"jskimdev"},"content":"     * @param status Boolean value to change the value of status variable.","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"jskimdev"},"content":"    public void setStatus(boolean status) {","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"jskimdev"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"jskimdev"},"content":"     * Returns the current state of the task.","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"jskimdev"},"content":"     * @return the current state of the task.","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"jskimdev"},"content":"    public boolean getStatus() {","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"jskimdev"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"jskimdev"},"content":"     * Returns the type of the task among the enums (Todo, Deadline, Event).","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"jskimdev"},"content":"     * @return TaskType of the task.","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"jskimdev"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"jskimdev"},"content":"        return this.taskType;","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"jskimdev"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jskimdev":69}},{"path":"src/main/java/bytetalker/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jskimdev"},"content":"package bytetalker.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jskimdev"},"content":"import bytetalker.exception.ByteTalkerException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"jskimdev"},"content":"import bytetalker.parser.Parser;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"jskimdev"},"content":"import bytetalker.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"jskimdev"},"content":"import bytetalker.ui.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"jskimdev"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"jskimdev"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"jskimdev"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"jskimdev"},"content":" * Represents a list of task and operations to process the task.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"jskimdev"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"jskimdev"},"content":"public class TaskList {","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"jskimdev"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"jskimdev"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"jskimdev"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"jskimdev"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"jskimdev"},"content":"        return this.tasks;","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"jskimdev"},"content":"     * Changes the status of the specified task as done.","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"jskimdev"},"content":"     * @param splitMessage Parsed messages of user input and processed by Parser.","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"jskimdev"},"content":"     * @param storage Utility object to store the changed list of tasks into the hard disk.","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"jskimdev"},"content":"     * @param ui Utility object to print out the message to user to inform the process of the method.","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"jskimdev"},"content":"    public String markTask(String[] splitMessage, Storage storage, Ui ui) {","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"jskimdev"},"content":"        int index \u003d Integer.parseInt(splitMessage[1]) - 1;","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"jskimdev"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"jskimdev"},"content":"            this.tasks.get(index).setStatus(true);","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"jskimdev"},"content":"            storage.storeTasks(this.tasks);","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"jskimdev"},"content":"            return ui.showMarkTaskMsg(this.tasks.get(index));","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"jskimdev"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"jskimdev"},"content":"            this.tasks.get(index).setStatus(false);","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"jskimdev"},"content":"            return ui.showStoreTaskErrorMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"jskimdev"},"content":"     * Changes the status of the specified task as undone","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"jskimdev"},"content":"     * @param splitMessage Parsed messages of user input and processed by Parser.","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"jskimdev"},"content":"     * @param storage Utility object to store the changed list of tasks into the hard disk.","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"jskimdev"},"content":"     * @param ui Utility object to print out the message to user to inform the process of the method.","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"jskimdev"},"content":"    public String unmarkTask(String[] splitMessage, Storage storage, Ui ui) {","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"jskimdev"},"content":"        int index \u003d Integer.parseInt(splitMessage[1]) - 1;","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"jskimdev"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"jskimdev"},"content":"            this.tasks.get(index).setStatus(false);","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"jskimdev"},"content":"            storage.storeTasks(this.tasks);","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"jskimdev"},"content":"            return ui.showUnmarkTaskMsg(this.tasks.get(index));","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"jskimdev"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"jskimdev"},"content":"            this.tasks.get(index).setStatus(true);","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"jskimdev"},"content":"            return ui.showStoreTaskErrorMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"jskimdev"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"jskimdev"},"content":"     * It is a general method that calls individual methods to add todo, deadline and event","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"jskimdev"},"content":"     * to the list.","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"jskimdev"},"content":"     * @param splitMessage Parsed messages of user input and processed by Parser.","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"jskimdev"},"content":"     * @param storage Utility object to store the changed list of tasks into the hard disk.","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"jskimdev"},"content":"     * @param ui Utility object to print out the message to user to inform the process of the method.","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"jskimdev"},"content":"    public String addTask(String[] splitMessage, Storage storage, Ui ui) {","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"jskimdev"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"jskimdev"},"content":"            Task task \u003d null;","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"jskimdev"},"content":"            boolean isTodo \u003d splitMessage[0].equals(\"todo\");","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"jskimdev"},"content":"            boolean isDeadline \u003d splitMessage[0].equals(\"deadline\");","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"jskimdev"},"content":"            boolean isEvent \u003d splitMessage[0].equals(\"event\");","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"jskimdev"},"content":"            if (isTodo) {","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"jskimdev"},"content":"                task \u003d addTodo(splitMessage);","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"jskimdev"},"content":"            } else if (isDeadline) {","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"jskimdev"},"content":"                task \u003d addDeadline(splitMessage);","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"jskimdev"},"content":"            } else if (isEvent) {","lastModifiedDate":"2024-02-06"},{"lineNumber":83,"author":{"gitId":"jskimdev"},"content":"                task \u003d addEvent(splitMessage);","lastModifiedDate":"2024-02-06"},{"lineNumber":84,"author":{"gitId":"jskimdev"},"content":"            } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":85,"author":{"gitId":"jskimdev"},"content":"                throw new ByteTalkerException.UnsupportedTaskException(\"This is unsupported task\");","lastModifiedDate":"2024-02-06"},{"lineNumber":86,"author":{"gitId":"jskimdev"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"jskimdev"},"content":"            try {","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"jskimdev"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"jskimdev"},"content":"                    this.tasks.add(task);","lastModifiedDate":"2024-02-06"},{"lineNumber":90,"author":{"gitId":"jskimdev"},"content":"                    storage.storeTasks(this.tasks);","lastModifiedDate":"2024-02-06"},{"lineNumber":91,"author":{"gitId":"jskimdev"},"content":"                    return ui.showAddTaskMsg(task, this.tasks.size());","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"jskimdev"},"content":"                } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"jskimdev"},"content":"                    return \"No task added\";","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"jskimdev"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"jskimdev"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":96,"author":{"gitId":"jskimdev"},"content":"                this.tasks.remove(this.tasks.size() - 1);","lastModifiedDate":"2024-02-06"},{"lineNumber":97,"author":{"gitId":"jskimdev"},"content":"                return ui.showStoreTaskErrorMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"jskimdev"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":99,"author":{"gitId":"jskimdev"},"content":"        } catch (ByteTalkerException.UnsupportedTaskException ex) {","lastModifiedDate":"2024-02-06"},{"lineNumber":100,"author":{"gitId":"jskimdev"},"content":"            String errorUnsupportedMessage \u003d ex.getMessage() + \". Please only enter the supported types of task.\";","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"jskimdev"},"content":"            return errorUnsupportedMessage;","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":103,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":104,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":105,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"jskimdev"},"content":"     * Creates a Todo object based on the user input.","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":108,"author":{"gitId":"jskimdev"},"content":"     * @param splitMessage Parsed messages of user input and processed by Parser.","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"jskimdev"},"content":"     * @return Todo object that contains the task content specified by user.","lastModifiedDate":"2024-02-07"},{"lineNumber":110,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"jskimdev"},"content":"    public Todo addTodo(String[] splitMessage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":112,"author":{"gitId":"jskimdev"},"content":"        Todo task \u003d null;","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"jskimdev"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":114,"author":{"gitId":"jskimdev"},"content":"            ArrayList\u003cString\u003e parsedTodoInputs \u003d Parser.parseTodoInput(splitMessage);","lastModifiedDate":"2024-02-07"},{"lineNumber":115,"author":{"gitId":"jskimdev"},"content":"            if (parsedTodoInputs.get(0).isEmpty()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":116,"author":{"gitId":"jskimdev"},"content":"                throw new ByteTalkerException.TodoNoTaskException(\"No Task\");","lastModifiedDate":"2024-02-07"},{"lineNumber":117,"author":{"gitId":"jskimdev"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":118,"author":{"gitId":"jskimdev"},"content":"            task \u003d new Todo(parsedTodoInputs.get(0));","lastModifiedDate":"2024-02-07"},{"lineNumber":119,"author":{"gitId":"jskimdev"},"content":"        } catch (ByteTalkerException.TodoNoTaskException ex) {","lastModifiedDate":"2024-02-06"},{"lineNumber":120,"author":{"gitId":"jskimdev"},"content":"            System.out.println(\"    \" + ex.getMessage() + \". Please enter the task, too.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":121,"author":{"gitId":"jskimdev"},"content":"        } catch (ByteTalkerException.TodoUnsupportedFormatException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":122,"author":{"gitId":"jskimdev"},"content":"            System.out.println(\"    \" + e.getMessage() + \". Please use the correct format for each task.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":123,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":124,"author":{"gitId":"jskimdev"},"content":"        return task;","lastModifiedDate":"2024-02-07"},{"lineNumber":125,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":126,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":127,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":128,"author":{"gitId":"jskimdev"},"content":"     * Creates a Deadline object based on the user input.","lastModifiedDate":"2024-02-07"},{"lineNumber":129,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":130,"author":{"gitId":"jskimdev"},"content":"     * @param splitMessage Parsed messages of user input and processed by Parser.","lastModifiedDate":"2024-02-07"},{"lineNumber":131,"author":{"gitId":"jskimdev"},"content":"     * @return Deadline object that contains the task content and deadline of the task specified by the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":132,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":133,"author":{"gitId":"jskimdev"},"content":"    public Deadline addDeadline(String[] splitMessage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":134,"author":{"gitId":"jskimdev"},"content":"        Deadline task \u003d null;","lastModifiedDate":"2024-02-07"},{"lineNumber":135,"author":{"gitId":"jskimdev"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":136,"author":{"gitId":"jskimdev"},"content":"            ArrayList\u003cString\u003e parsedDeadlineInput \u003d Parser.parseDeadlineInput(splitMessage);","lastModifiedDate":"2024-02-07"},{"lineNumber":137,"author":{"gitId":"jskimdev"},"content":"            System.out.println(parsedDeadlineInput);","lastModifiedDate":"2024-02-07"},{"lineNumber":138,"author":{"gitId":"jskimdev"},"content":"            if (parsedDeadlineInput.get(0).isEmpty() || parsedDeadlineInput.size() !\u003d 2) {","lastModifiedDate":"2024-02-07"},{"lineNumber":139,"author":{"gitId":"jskimdev"},"content":"                throw new ByteTalkerException.DeadlineWrongFormatException(\"This is wrong format for deadline\");","lastModifiedDate":"2024-02-07"},{"lineNumber":140,"author":{"gitId":"jskimdev"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":141,"author":{"gitId":"jskimdev"},"content":"            task \u003d new Deadline(parsedDeadlineInput.get(0), Parser.parseDateTime(parsedDeadlineInput.get(1)));","lastModifiedDate":"2024-02-07"},{"lineNumber":142,"author":{"gitId":"jskimdev"},"content":"        } catch (ByteTalkerException.DeadlineUnsupportedFormatException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":143,"author":{"gitId":"jskimdev"},"content":"            System.out.println(\"    \" + e.getMessage() + \". Please use the correct format for each task\");","lastModifiedDate":"2024-02-07"},{"lineNumber":144,"author":{"gitId":"jskimdev"},"content":"        } catch (ByteTalkerException.DeadlineWrongFormatException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":145,"author":{"gitId":"jskimdev"},"content":"            System.out.println(\"    \" + e.getMessage() + \". Please use the correct format for each task\");","lastModifiedDate":"2024-02-07"},{"lineNumber":146,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":147,"author":{"gitId":"jskimdev"},"content":"        return task;","lastModifiedDate":"2024-02-07"},{"lineNumber":148,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":149,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":150,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":151,"author":{"gitId":"jskimdev"},"content":"     * Creates an Event object based on the user input.","lastModifiedDate":"2024-02-07"},{"lineNumber":152,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":153,"author":{"gitId":"jskimdev"},"content":"     * @param splitMessage Parsed messages of user input and processed by Parser.","lastModifiedDate":"2024-02-07"},{"lineNumber":154,"author":{"gitId":"jskimdev"},"content":"     * @return Event object that contains the event information, from when and until when specified by the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":155,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":156,"author":{"gitId":"jskimdev"},"content":"    public Event addEvent(String[] splitMessage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":157,"author":{"gitId":"jskimdev"},"content":"        Event task \u003d null;","lastModifiedDate":"2024-02-07"},{"lineNumber":158,"author":{"gitId":"jskimdev"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":159,"author":{"gitId":"jskimdev"},"content":"            ArrayList\u003cString\u003e parsedEventInput \u003d Parser.parseEventInput(splitMessage);","lastModifiedDate":"2024-02-07"},{"lineNumber":160,"author":{"gitId":"jskimdev"},"content":"            if (parsedEventInput.size() !\u003d 3 || parsedEventInput.get(0).isEmpty()","lastModifiedDate":"2024-02-07"},{"lineNumber":161,"author":{"gitId":"jskimdev"},"content":"                    || parsedEventInput.get(1).isEmpty()","lastModifiedDate":"2024-02-07"},{"lineNumber":162,"author":{"gitId":"jskimdev"},"content":"                    || parsedEventInput.get(2).isEmpty()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":163,"author":{"gitId":"jskimdev"},"content":"                throw new ByteTalkerException.EventWrongFormatException(\"This is wrong format for event\");","lastModifiedDate":"2024-02-07"},{"lineNumber":164,"author":{"gitId":"jskimdev"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":165,"author":{"gitId":"jskimdev"},"content":"            task \u003d new Event(parsedEventInput.get(0), Parser.parseDateTime(parsedEventInput.get(1)),","lastModifiedDate":"2024-02-07"},{"lineNumber":166,"author":{"gitId":"jskimdev"},"content":"                    Parser.parseDateTime(parsedEventInput.get(2)));","lastModifiedDate":"2024-02-07"},{"lineNumber":167,"author":{"gitId":"jskimdev"},"content":"        } catch (ByteTalkerException.EventWrongFormatException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":168,"author":{"gitId":"jskimdev"},"content":"            System.out.println(\"    \" + e.getMessage() + \". Please use the correct format for each task\");","lastModifiedDate":"2024-02-07"},{"lineNumber":169,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":170,"author":{"gitId":"jskimdev"},"content":"        return task;","lastModifiedDate":"2024-02-07"},{"lineNumber":171,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":172,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":173,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":174,"author":{"gitId":"jskimdev"},"content":"     * Deletes the specified task from the list","lastModifiedDate":"2024-02-07"},{"lineNumber":175,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":176,"author":{"gitId":"jskimdev"},"content":"     * @param position Position of the task in the list","lastModifiedDate":"2024-02-07"},{"lineNumber":177,"author":{"gitId":"jskimdev"},"content":"     * @param storage Utility object to store the changed list of tasks into hard disk.","lastModifiedDate":"2024-02-07"},{"lineNumber":178,"author":{"gitId":"jskimdev"},"content":"     * @param ui Utility object to print out the message to user to inform the process of the method.","lastModifiedDate":"2024-02-07"},{"lineNumber":179,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":180,"author":{"gitId":"jskimdev"},"content":"    public String deleteTask(int position, Storage storage, Ui ui) {","lastModifiedDate":"2024-02-19"},{"lineNumber":181,"author":{"gitId":"jskimdev"},"content":"        Task task \u003d this.tasks.get(position - 1);","lastModifiedDate":"2024-02-06"},{"lineNumber":182,"author":{"gitId":"jskimdev"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":183,"author":{"gitId":"jskimdev"},"content":"            this.tasks.remove(position - 1);","lastModifiedDate":"2024-02-06"},{"lineNumber":184,"author":{"gitId":"jskimdev"},"content":"            storage.storeTasks(this.tasks);","lastModifiedDate":"2024-02-06"},{"lineNumber":185,"author":{"gitId":"jskimdev"},"content":"            return ui.showDeleteTaskMsg(task, this.tasks.size());","lastModifiedDate":"2024-02-19"},{"lineNumber":186,"author":{"gitId":"jskimdev"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":187,"author":{"gitId":"jskimdev"},"content":"            this.tasks.add(task);","lastModifiedDate":"2024-02-06"},{"lineNumber":188,"author":{"gitId":"jskimdev"},"content":"            return ui.showStoreTaskErrorMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":189,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":190,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":191,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":192,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":193,"author":{"gitId":"jskimdev"},"content":"     * Finds all the tasks with content that contains the user input.","lastModifiedDate":"2024-02-14"},{"lineNumber":194,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":195,"author":{"gitId":"jskimdev"},"content":"     * @param splitMessage Parsed messages of user input and processed by Parser.","lastModifiedDate":"2024-02-14"},{"lineNumber":196,"author":{"gitId":"jskimdev"},"content":"     * @param ui Utility object to print out the message to user to inform the process of the method.","lastModifiedDate":"2024-02-14"},{"lineNumber":197,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":198,"author":{"gitId":"jskimdev"},"content":"    public String findTask(String[] splitMessage, Ui ui) {","lastModifiedDate":"2024-02-19"},{"lineNumber":199,"author":{"gitId":"jskimdev"},"content":"        if (splitMessage.length !\u003d 2) {","lastModifiedDate":"2024-02-10"},{"lineNumber":200,"author":{"gitId":"jskimdev"},"content":"            return \"Please use the correct format\";","lastModifiedDate":"2024-02-19"},{"lineNumber":201,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":202,"author":{"gitId":"jskimdev"},"content":"        String content \u003d splitMessage[1];","lastModifiedDate":"2024-02-10"},{"lineNumber":203,"author":{"gitId":"jskimdev"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-10"},{"lineNumber":204,"author":{"gitId":"jskimdev"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2024-02-10"},{"lineNumber":205,"author":{"gitId":"jskimdev"},"content":"            Task currentTask \u003d this.tasks.get(i);","lastModifiedDate":"2024-02-10"},{"lineNumber":206,"author":{"gitId":"jskimdev"},"content":"            if (currentTask.getTask().contains(content)) {","lastModifiedDate":"2024-02-10"},{"lineNumber":207,"author":{"gitId":"jskimdev"},"content":"                foundTasks.add(currentTask);","lastModifiedDate":"2024-02-10"},{"lineNumber":208,"author":{"gitId":"jskimdev"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":209,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":210,"author":{"gitId":"jskimdev"},"content":"        return ui.displayFoundTasks(foundTasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":211,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":212,"author":{"gitId":"jskimdev"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"jskimdev":212}},{"path":"src/main/java/bytetalker/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jskimdev"},"content":"package bytetalker.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jskimdev"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"jskimdev"},"content":" * Represents the types of task supported by the chatbot.","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"jskimdev"},"content":" *","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"jskimdev"},"content":" * @author Junseo Kim","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"jskimdev"},"content":" * @version 1.0","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"jskimdev"},"content":" * @since 2024-02-06","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"jskimdev"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"jskimdev"},"content":"public enum TaskType {","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"jskimdev"},"content":"    TODO(\"T\") {},","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"jskimdev"},"content":"    DEADLINE(\"D\") {},","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"jskimdev"},"content":"    EVENT(\"E\") {};","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"jskimdev"},"content":"    TaskType(String icon) {","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"jskimdev"},"content":"        this.icon \u003d icon;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"jskimdev"},"content":"    private String icon;","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"jskimdev"},"content":"     * Returns the icon representing each type of task.","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"jskimdev"},"content":"     * @return String Icon that represents that type of task.","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"jskimdev"},"content":"    public String getIcon() {","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"jskimdev"},"content":"        return this.icon;","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"jskimdev"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"jskimdev":29}},{"path":"src/main/java/bytetalker/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jskimdev"},"content":"package bytetalker.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jskimdev"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"jskimdev"},"content":" * Represents the Todo task that the user wants to store.","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"jskimdev"},"content":" *","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"jskimdev"},"content":" * @author Junseo Kim","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"jskimdev"},"content":" * @version 0.1","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"jskimdev"},"content":" * @since 2024-02-06","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"jskimdev"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"jskimdev"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"jskimdev"},"content":"    public Todo(String task) {","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"jskimdev"},"content":"        super(TaskType.TODO, task);","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"jskimdev"},"content":"    public Todo(String task, boolean isDone) {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"jskimdev"},"content":"        super(TaskType.TODO, task, isDone);","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"jskimdev"},"content":"     * Creates a string to show information(task type, status, task content) about the todo task.","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"jskimdev"},"content":"     * @return String that contains information about task.","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"jskimdev"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"jskimdev"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"jskimdev"},"content":"        return \"[\" + getTaskType().getIcon() + \"]\" + \"[\" + getStatusIcon() + \"] \" + getTask();","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"jskimdev"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"jskimdev":28}},{"path":"src/main/java/bytetalker/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jskimdev"},"content":"package bytetalker.ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jskimdev"},"content":"import bytetalker.task.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"jskimdev"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"jskimdev"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"jskimdev"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"jskimdev"},"content":" * Deals with interactions with the user. Mainly the print statements are included in this class to control the","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"jskimdev"},"content":" * messages.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"jskimdev"},"content":" *","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"jskimdev"},"content":" * @author Junseo Kim","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"jskimdev"},"content":" * @version 0.1","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"jskimdev"},"content":" * @since 2024-02-06","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"jskimdev"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"jskimdev"},"content":"public class Ui {","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"jskimdev"},"content":"     * Prints out welcome message and command format the user can use to enter the task.","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"jskimdev"},"content":"    public String showWelcome() {","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"jskimdev"},"content":"        String welcomeMessage \u003d \"Hello! I\u0027m bytetalker.ByteTalker\\n\" + \"What can I do for you?\\n\" + \"Supported tasks \" +","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"jskimdev"},"content":"                \"are todo, deadline, and event\\n\" + \"todo {task}\\n\" + \"deadline {task} /by {date and time}\\n\" +","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"jskimdev"},"content":"                \"event {task} /from {date and time} /to {date and time}\\n\" + \"Supported date and time format are \" +","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"jskimdev"},"content":"                \"yyyy-MM-dd HHmm, and dd/MM/yyyy HHmm\";","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"jskimdev"},"content":"        return welcomeMessage;","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"jskimdev"},"content":"     * Prints out bye message.","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"jskimdev"},"content":"    public String showBye() {","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"jskimdev"},"content":"        String byeString \u003d","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"jskimdev"},"content":"                \"    Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"jskimdev"},"content":"        return byeString;","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"jskimdev"},"content":"     * Prints out error message if there is an error while changing the task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"jskimdev"},"content":"    public String showStoreTaskErrorMessage() {","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"jskimdev"},"content":"        String storeTaskErrorMessage \u003d \"Error while changing the task list\\n\" + \"Please try again\";","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"jskimdev"},"content":"        return storeTaskErrorMessage;","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"jskimdev"},"content":"     * Accepts user input and returns it.","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"jskimdev"},"content":"     * @return String User input.","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"jskimdev"},"content":"    public String storeUserInput() {","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"jskimdev"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"jskimdev"},"content":"        return sc.nextLine();","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"jskimdev"},"content":"     * Prints out the message that the task user wants is marked as done.","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"jskimdev"},"content":"     * @param task Task that user wants to mark as done.","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"jskimdev"},"content":"    public String showMarkTaskMsg(Task task) {","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"jskimdev"},"content":"        String markedTaskMessage \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + \"      \" + task.toString();","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"jskimdev"},"content":"        return markedTaskMessage;","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"jskimdev"},"content":"     * Prints out the message that the task user wants is marked as undone.","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"jskimdev"},"content":"     * @param task Task the user wants to mark as undone.","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"jskimdev"},"content":"    public String showUnmarkTaskMsg(Task task) {","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"jskimdev"},"content":"        String unmarkedTaskMessage \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\" + \"      \" + task.toString();","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"jskimdev"},"content":"        return unmarkedTaskMessage;","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"jskimdev"},"content":"     * Prints out the message that the task user wants is deleted and prints out the length of the task","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"jskimdev"},"content":"     * list.","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"jskimdev"},"content":"     * @param task Task the user wants to delete from the task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"jskimdev"},"content":"     * @param length Length of the task list after deleting the task.","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"jskimdev"},"content":"    public String showDeleteTaskMsg(Task task, int length) {","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"jskimdev"},"content":"        String deletedTaskMessage \u003d \"Got it. I\u0027ve removed this task:\" + \"\\n\" + \"        \" + task.toString() + \"\\n\" +","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"jskimdev"},"content":"                \"Now you have \" + length + \" task in the list.\";","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"jskimdev"},"content":"        return deletedTaskMessage;","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"jskimdev"},"content":"     * Prints out the message that the task user wants it added to the task list and prints out the length of the","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"jskimdev"},"content":"     * task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"jskimdev"},"content":"     * @param task Task that the user wants to add to the lsit.","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"jskimdev"},"content":"     * @param length Length of the task list after adding the task.","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"jskimdev"},"content":"    public String showAddTaskMsg(Task task, int length) {","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"jskimdev"},"content":"        String addedTaskMessage \u003d \"Got it. I\u0027ve added this task:\" + \"\\n\" + \"       \" + task.toString() + \"\\n\" + \"Now \" +","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"jskimdev"},"content":"                \"you have \" + length + \" tasks in the list.\";","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"jskimdev"},"content":"        return addedTaskMessage;","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":100,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":101,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"jskimdev"},"content":"     * Prints out the message when a file is not found in the system.","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"jskimdev"},"content":"    public String showFileNotFoundErrorMsg() {","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"jskimdev"},"content":"        return \"File is not found\";","lastModifiedDate":"2024-02-19"},{"lineNumber":106,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":107,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":108,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"jskimdev"},"content":"     * Prints out the whole list of tasks in the list.","lastModifiedDate":"2024-02-07"},{"lineNumber":110,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"jskimdev"},"content":"     * @param tasks Task list that contains all the tasks added.","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"jskimdev"},"content":"    public String returnList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":114,"author":{"gitId":"jskimdev"},"content":"        String taskListMessage \u003d \"\";","lastModifiedDate":"2024-02-19"},{"lineNumber":115,"author":{"gitId":"jskimdev"},"content":"        taskListMessage +\u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2024-02-19"},{"lineNumber":116,"author":{"gitId":"jskimdev"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-06"},{"lineNumber":117,"author":{"gitId":"jskimdev"},"content":"            taskListMessage +\u003d \"    \" + (i + 1) + \".\" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":119,"author":{"gitId":"jskimdev"},"content":"        return taskListMessage;","lastModifiedDate":"2024-02-19"},{"lineNumber":120,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":121,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":122,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":123,"author":{"gitId":"jskimdev"},"content":"     * Prints out the error message when date and time parse cannot be done.","lastModifiedDate":"2024-02-07"},{"lineNumber":124,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":125,"author":{"gitId":"jskimdev"},"content":"     * @param e Error occured while parsing date and time.","lastModifiedDate":"2024-02-07"},{"lineNumber":126,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":127,"author":{"gitId":"jskimdev"},"content":"    public static void showDateTimeParseErrorMsg(Exception e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":128,"author":{"gitId":"jskimdev"},"content":"        System.err.println(\"Unable to parse the date and time string: \" + e.getMessage());","lastModifiedDate":"2024-02-06"},{"lineNumber":129,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":130,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":131,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":132,"author":{"gitId":"jskimdev"},"content":"     * Prints out the list of tasks found based on the user input.","lastModifiedDate":"2024-02-14"},{"lineNumber":133,"author":{"gitId":"jskimdev"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":134,"author":{"gitId":"jskimdev"},"content":"     * @param foundTasks List of tasks found.","lastModifiedDate":"2024-02-14"},{"lineNumber":135,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":136,"author":{"gitId":"jskimdev"},"content":"    public String displayFoundTasks(ArrayList\u003cTask\u003e foundTasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":137,"author":{"gitId":"jskimdev"},"content":"        String foundTasksMessage \u003d \"Here are the found tasks:\\n\";","lastModifiedDate":"2024-02-19"},{"lineNumber":138,"author":{"gitId":"jskimdev"},"content":"        for (int i \u003d 0; i \u003c foundTasks.size(); i++) {","lastModifiedDate":"2024-02-10"},{"lineNumber":139,"author":{"gitId":"jskimdev"},"content":"            foundTasksMessage +\u003d (i + 1) + \".\" + foundTasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2024-02-19"},{"lineNumber":140,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":141,"author":{"gitId":"jskimdev"},"content":"        if (foundTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-10"},{"lineNumber":142,"author":{"gitId":"jskimdev"},"content":"            return \"No tasks found\";","lastModifiedDate":"2024-02-19"},{"lineNumber":143,"author":{"gitId":"jskimdev"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":144,"author":{"gitId":"jskimdev"},"content":"        return foundTasksMessage;","lastModifiedDate":"2024-02-19"},{"lineNumber":145,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":146,"author":{"gitId":"jskimdev"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"jskimdev":146}},{"path":"src/main/java/graphics/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jskimdev"},"content":"package graphics;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"jskimdev"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"jskimdev"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"jskimdev"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"jskimdev"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"jskimdev"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"jskimdev"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"jskimdev"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"jskimdev"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"jskimdev"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"jskimdev"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"jskimdev"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"jskimdev"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"jskimdev"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"jskimdev"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"jskimdev"},"content":"    private Label text;","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"jskimdev"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"jskimdev"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"jskimdev"},"content":"        text \u003d l;","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"jskimdev"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"jskimdev"},"content":"        text.setWrapText(true);","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"jskimdev"},"content":"        text.setPadding(new Insets(10));","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"jskimdev"},"content":"        this.setPadding(new Insets(8, 8, 8, 8));","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"jskimdev"},"content":"        displayPicture.setFitWidth(80.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"jskimdev"},"content":"        displayPicture.setFitHeight(80.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"jskimdev"},"content":"        Circle clip \u003d new Circle(40, 40, 40);","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"jskimdev"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"jskimdev"},"content":"        displayPicture.setPreserveRatio(true);","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"jskimdev"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"jskimdev"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"jskimdev"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"jskimdev"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"jskimdev"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"jskimdev"},"content":"    private void flip() {","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"jskimdev"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"jskimdev"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"jskimdev"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"jskimdev"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"jskimdev"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"jskimdev"},"content":"        DialogBox dialogBox \u003d new DialogBox(l, iv);","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"jskimdev"},"content":"        return dialogBox;","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"jskimdev"},"content":"    public static DialogBox getByteTalkerDialog(Label l, ImageView iv) {","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"jskimdev"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"jskimdev"},"content":"        db.flip();","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"jskimdev"},"content":"        db.setBackground(new Background(new BackgroundFill(Color.GRAY, CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"jskimdev"},"content":"        db.text.setTextFill(Color.WHITE);","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"jskimdev"},"content":"        return db;","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"jskimdev"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"jskimdev":61}},{"path":"src/main/java/graphics/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jskimdev"},"content":"package graphics;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"jskimdev"},"content":"import bytetalker.ByteTalker;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"jskimdev"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"jskimdev"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"jskimdev"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"jskimdev"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"jskimdev"},"content":"public class Launcher {","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"jskimdev"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"jskimdev"},"content":"        Application.launch(ByteTalker.class, args);","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"jskimdev"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"jskimdev":13}},{"path":"src/test/java/bytetalker/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jskimdev"},"content":"package bytetalker.parser;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"jskimdev"},"content":"import bytetalker.exception.ByteTalkerException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"jskimdev"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"jskimdev"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"jskimdev"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"jskimdev"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"jskimdev"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"jskimdev"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"jskimdev"},"content":"    public void dummyTest() {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"jskimdev"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"jskimdev"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"jskimdev"},"content":"    public void testParseDateTime_sampleInput1() {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"jskimdev"},"content":"        assertEquals(LocalDateTime.of(2019, 2, 5, 18, 00),","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"jskimdev"},"content":"                Parser.parseDateTime(\"5/2/2019 1800\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"jskimdev"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"jskimdev"},"content":"    public void testParseDateTime_sampleInput2() {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"jskimdev"},"content":"        assertEquals(LocalDateTime.of(2019, 2, 5, 18, 00),","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"jskimdev"},"content":"                Parser.parseDateTime(\"2019-2-5 1800\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"jskimdev"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"jskimdev"},"content":"    public void testParseDateTime_wrongInput() {","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"jskimdev"},"content":"        assertEquals(null,","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"jskimdev"},"content":"                        Parser.parseDateTime(\"5/2/19 1800\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"jskimdev"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"jskimdev"},"content":"    public void testParseDateTime_wrongInput2() {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"jskimdev"},"content":"        assertEquals(null, Parser.parseDateTime(\"5-2-2019 1800\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"jskimdev"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"jskimdev"},"content":"    public void testParseDateTime_wrongInput3() {","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"jskimdev"},"content":"        assertEquals(null, Parser.parseDateTime(\"5-2-2019 1800\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"jskimdev"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"jskimdev"},"content":"    public void testParseDateTime_noTime() {","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"jskimdev"},"content":"        assertEquals(LocalDateTime.of(2019, 2, 5, 23, 59),","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"jskimdev"},"content":"                Parser.parseDateTime(\"2019-2-5\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"jskimdev"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"jskimdev"},"content":"    public void testParseDateTime_wrongInput4() {","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"jskimdev"},"content":"        assertEquals(null, Parser.parseDateTime(\"10-2-5 1800\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"jskimdev"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"jskimdev"},"content":"    public void testParseDateTime_wrongInput5() {","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"jskimdev"},"content":"        assertEquals(null, Parser.parseDateTime(\"test\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"jskimdev"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"jskimdev"},"content":"    public void testParseDateTime_wrongInput6() {","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"jskimdev"},"content":"        assertEquals(null, Parser.parseDateTime(\"2019-5-50\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"jskimdev"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"jskimdev":66}},{"path":"src/test/java/bytetalker/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jskimdev"},"content":"package bytetalker.task;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"jskimdev"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"jskimdev"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"jskimdev"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"jskimdev"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"jskimdev"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"jskimdev"},"content":"    public void dummyTest() {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"jskimdev"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"jskimdev"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"jskimdev"},"content":"    public void testAddTodo_sampleInput() {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"jskimdev"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"jskimdev"},"content":"        String[] sampleMsg \u003d {\"todo\", \"read\", \"book\"};","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"jskimdev"},"content":"        assertEquals(\"read book\", tasks.addTodo(sampleMsg).getTask());","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"jskimdev"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"jskimdev"},"content":"    public void testAddTodo_emptyTask1() {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"jskimdev"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"jskimdev"},"content":"        String[] sampleMsg \u003d {\"todo\"};","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"jskimdev"},"content":"        assertEquals(null, tasks.addTodo(sampleMsg));","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"jskimdev"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"jskimdev"},"content":"    public void testAddTodo_unsupportedFormat() {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"jskimdev"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"jskimdev"},"content":"        String[] sampleMsg \u003d {\"todo\", \"return\", \"book\", \"/by\", \"Sunday\"};","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"jskimdev"},"content":"        assertEquals(null, tasks.addTodo(sampleMsg));","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"jskimdev"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"jskimdev"},"content":"    public void testAddDeadline_sampleInput() {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"jskimdev"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"jskimdev"},"content":"        String[] sampleMsg \u003d {\"deadline\", \"read\", \"book\", \"/by\", \"5/2/2019\", \"1800\"};","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"jskimdev"},"content":"        assertEquals(\"[D][ ] read book (by: Feb 05 2019 6:00PM)\", tasks.addDeadline(sampleMsg).toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"jskimdev"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"jskimdev"},"content":"    public void testAddDeadline_emptyMsg() {","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"jskimdev"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"jskimdev"},"content":"        String[] sampleMsg \u003d {\"deadline\"};","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"jskimdev"},"content":"        assertEquals(null, tasks.addDeadline(sampleMsg));","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"jskimdev"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"jskimdev"},"content":"    public void testAddDeadline_wrongFormat() {","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"jskimdev"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"jskimdev"},"content":"        String sample \u003d \"deadline read book /by 5/2/2019 1800 /from 2/3/2019\";","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"jskimdev"},"content":"        sample \u003d sample.strip();","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"jskimdev"},"content":"        String[] sampleMsg \u003d {\"deadline\", \"read\", \"book\", \"/by\", \"5/2/2019\", \"1800\", \"/from\", \"2/3/2019\"};","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"jskimdev"},"content":"        assertEquals(null, tasks.addDeadline(sampleMsg));","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"jskimdev"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"jskimdev"},"content":"    public void testAddEvent_sampleInput() {","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"jskimdev"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"jskimdev"},"content":"        String[] splitMessages \u003d {\"event\", \"midterm\", \"exam\", \"/from\", \"8/2/2024\", \"1500\", \"/to\", \"8/2/2024\", \"1800\"};","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"jskimdev"},"content":"        assertEquals(\"[E][ ] midterm exam (from: Feb 08 2024 3:00PM to: Feb 08 2024 6:00PM)\",","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"jskimdev"},"content":"                tasks.addEvent(splitMessages).toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"jskimdev"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"jskimdev"},"content":"    public void testAddEvent_emptyMsg() {","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"jskimdev"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"jskimdev"},"content":"        String[] splitMessages \u003d {\"event\"};","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"jskimdev"},"content":"        assertEquals(null, tasks.addEvent(splitMessages));","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"jskimdev"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"jskimdev"},"content":"    public void testAddEvent_wrongFormat() {","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"jskimdev"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"jskimdev"},"content":"        String[] splitMessages \u003d {\"event\", \"midterm\", \"exam\", \"/by\", \"Sunday\"};","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"jskimdev"},"content":"        assertEquals(null, tasks.addEvent(splitMessages));","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"jskimdev"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"jskimdev"},"content":"    public void testAddEvent_missingField1() {","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"jskimdev"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"jskimdev"},"content":"        String[] splitMessages \u003d {\"event\", \"midterm\", \"exam\"};","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"jskimdev"},"content":"        assertEquals(null, tasks.addEvent(splitMessages));","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"jskimdev"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"jskimdev"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"jskimdev"},"content":"    public void testAddEvent_missingField2() {","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"jskimdev"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"jskimdev"},"content":"        String[] splitMessages \u003d {\"event\", \"mideterm\", \"exam\", \"/from\", \"5-2-2024\"};","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"jskimdev"},"content":"        assertEquals(null, tasks.addEvent(splitMessages));","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"jskimdev"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"jskimdev"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"jskimdev":94}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jskimdev"},"content":"todo read book","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"jskimdev":1}}]
