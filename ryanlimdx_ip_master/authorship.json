[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"ryanlimdx"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"ryanlimdx"},"content":"checkstyle {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"ryanlimdx"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"ryanlimdx"},"content":"}","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ryanlimdx":5,"-":42}},{"path":"data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ryanlimdx"},"content":"T | 0 | run 2.4km","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ryanlimdx"},"content":"D | 1 | return book | Jun 24 2024 1800","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ryanlimdx"},"content":"E | 0 | career fair | Jun 24 2024 1300 | Jun 24 2024 1800","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ryanlimdx"},"content":"D | 0 | birthday | Jan 07 2924 0000","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ryanlimdx"},"content":"T | 0 | run","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ryanlimdx"},"content":"D | 0 | run | Aug 11 2024","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ryanlimdx"},"content":"T | 0 | start using woody!","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ryanlimdx":7}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ryanlimdx"},"content":"# Woody User Guide","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"ryanlimdx"},"content":"![img.png](woody_screenshot.png)","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"ryanlimdx"},"content":"Woody frees your mind of having to remember things you need to do. It helps you","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ryanlimdx"},"content":"track tasks such as events, deadlines and todos - All in one place!","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"ryanlimdx"},"content":"What if you want a reminder to start using Woody? Add a deadline!","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"ryanlimdx"},"content":"For example: `deadline start using woody /by 11-11-2024`","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"ryanlimdx"},"content":"This will produce the following printout to confirm that the task is successfully added","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":17,"author":{"gitId":"ryanlimdx"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"ryanlimdx"},"content":"        [D][ ] start using woody (by: Nov 11 2024)","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"ryanlimdx"},"content":"    Now you have 8 tasks in the list.","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"ryanlimdx"},"content":"_________________________________________________________________________","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"}],"authorContributionMap":{"ryanlimdx":11,"-":19}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanlimdx"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ryanlimdx"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ryanlimdx"},"content":"import java.util.List;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ryanlimdx"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ryanlimdx"},"content":"import duke.utils.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ryanlimdx"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ryanlimdx"},"content":" * The main class for the Duke chatbot application.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ryanlimdx"},"content":" * Duke is a simple chatbot designed to manage tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ryanlimdx"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ryanlimdx"},"content":"public class Duke {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ryanlimdx"},"content":"     * Keywords to terminate the Duke chatbot.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ryanlimdx"},"content":"    private static final String[] terminateKeywords \u003d {\"bye\", \"BYE\", \"Bye\"};","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ryanlimdx"},"content":"     * List of keywords that trigger the termination of the Duke chatbot.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ryanlimdx"},"content":"    private static final List\u003cString\u003e exitProgramme \u003d Arrays.asList(terminateKeywords);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"ryanlimdx"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"ryanlimdx"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ryanlimdx"},"content":"     * Constructs a Duke instance with a specified file path for task data.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ryanlimdx"},"content":"     * @param filePath The file path to load and save task data.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ryanlimdx"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"ryanlimdx"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"ryanlimdx"},"content":"            this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"ryanlimdx"},"content":"            this.tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"ryanlimdx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"ryanlimdx"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"ryanlimdx"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"ryanlimdx"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ryanlimdx"},"content":"     * Runs the Duke chatbot.","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"ryanlimdx"},"content":"     * Processes user input until termination keywords are entered","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ryanlimdx"},"content":"    public void run() {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"ryanlimdx"},"content":"        // programme start","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"ryanlimdx"},"content":"        Ui.greet();","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"ryanlimdx"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"ryanlimdx"},"content":"        String[] currInput \u003d input.nextLine().split(\" \", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"ryanlimdx"},"content":"        // programme","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"ryanlimdx"},"content":"        while (!exitProgramme.contains(currInput[0])) {","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"ryanlimdx"},"content":"            Parser.parse(this.tasks, currInput);","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"ryanlimdx"},"content":"            currInput \u003d input.nextLine().split(\" \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"ryanlimdx"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"ryanlimdx"},"content":"        // save and exit","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"ryanlimdx"},"content":"        this.storage.writeTasks(this.tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"ryanlimdx"},"content":"        Ui.goodbye();","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"ryanlimdx"},"content":"     * The main method to launch the Duke chatbot application.","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"ryanlimdx"},"content":"     * @param args Command-line arguments.","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"ryanlimdx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"ryanlimdx"},"content":"        new Duke(\"./data/data.txt\").run();","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"ryanlimdx"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ryanlimdx":72}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanlimdx"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ryanlimdx"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ryanlimdx"},"content":" * Custom exception class for Duke chatbot.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ryanlimdx"},"content":" * Extends the RuntimeException class to handle Duke-specific exceptions.","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ryanlimdx"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ryanlimdx"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ryanlimdx"},"content":"     * Exception message template for when creating a task with an empty description.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ryanlimdx"},"content":"    public static final String NON_EMPTY_DESC \u003d","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"ryanlimdx"},"content":"            \"The description of a %s cannot be empty!\";","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ryanlimdx"},"content":"     * Exception message template for an unknown command.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ryanlimdx"},"content":"     * Used when the chatbot encounters an unrecognized command.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ryanlimdx"},"content":"    public static final String UNKNOWN_CMD \u003d","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ryanlimdx"},"content":"            \"I\u0027m sorry, but I don\u0027t know what %s means :-(\";","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ryanlimdx"},"content":"     * Constructs a DukeException with a formatted error message.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ryanlimdx"},"content":"     * @param message The specific error message for the exception.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ryanlimdx"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"ryanlimdx"},"content":"        super(String.format(\"   Hmm, %s\", message));","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"ryanlimdx"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ryanlimdx":30}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanlimdx"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ryanlimdx"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ryanlimdx"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ryanlimdx"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ryanlimdx"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ryanlimdx"},"content":"import duke.utils.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ryanlimdx"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ryanlimdx"},"content":" * The Parser class handles parsing of user input for Duke chatbot.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ryanlimdx"},"content":" * It interprets user commands and executes corresponding actions.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ryanlimdx"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ryanlimdx"},"content":"public class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ryanlimdx"},"content":"     * Default constructor for the Parser class.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ryanlimdx"},"content":"    public Parser() {}","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ryanlimdx"},"content":"     * Parses the user input and executes the corresponding actions.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ryanlimdx"},"content":"     * @param userTasks The TaskList containing the user\u0027s tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ryanlimdx"},"content":"     * @param currInput The current user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ryanlimdx"},"content":"    public static void parse(TaskList userTasks, String[] currInput) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"ryanlimdx"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"ryanlimdx"},"content":"            String cmd \u003d currInput[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"ryanlimdx"},"content":"            boolean isAdded \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"ryanlimdx"},"content":"            // list tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"ryanlimdx"},"content":"            if (cmd.equals(\"list\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"ryanlimdx"},"content":"                userTasks.printTasks(false);","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ryanlimdx"},"content":"            // find tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ryanlimdx"},"content":"            } else if (cmd.equals(\"find\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ryanlimdx"},"content":"                if (currInput.length \u003c 2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ryanlimdx"},"content":"                    throw new DukeException(","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ryanlimdx"},"content":"                            String.format(DukeException.NON_EMPTY_DESC, cmd));","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ryanlimdx"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ryanlimdx"},"content":"                TaskList searchResults \u003d userTasks.searchTasks(currInput[1], userTasks);","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ryanlimdx"},"content":"                searchResults.printTasks(true);","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ryanlimdx"},"content":"            // mark tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"ryanlimdx"},"content":"            } else if (cmd.contains(\"mark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"ryanlimdx"},"content":"                if (currInput.length \u003c 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"ryanlimdx"},"content":"                    throw new DukeException(","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ryanlimdx"},"content":"                            String.format(DukeException.NON_EMPTY_DESC, cmd));","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ryanlimdx"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"ryanlimdx"},"content":"                int task \u003d Integer.parseInt(currInput[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"ryanlimdx"},"content":"                int numTasks \u003d userTasks.getSize();","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"ryanlimdx"},"content":"                if (task \u003e numTasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"ryanlimdx"},"content":"                    throw new DukeException(\"you have \" + numTasks","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"ryanlimdx"},"content":"                            + \" tasks. Please fill in a number lower than or equal to it!\"","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"ryanlimdx"},"content":"                    );","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"ryanlimdx"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"ryanlimdx"},"content":"                int taskIdx \u003d task - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"ryanlimdx"},"content":"                Task currTask \u003d userTasks.getTask(taskIdx);","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"ryanlimdx"},"content":"                if (cmd.equals(\"mark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"ryanlimdx"},"content":"                    currTask.markAsDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"ryanlimdx"},"content":"                    System.out.println(\"    Nice! I have marked this task as done: \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"ryanlimdx"},"content":"                            + \"        \" + currTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"ryanlimdx"},"content":"                } else if (cmd.equals(\"unmark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"ryanlimdx"},"content":"                    currTask.markAsUndone();","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"ryanlimdx"},"content":"                    System.out.println(\"    Ok, I\u0027ve marked this task as not done yet: \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"ryanlimdx"},"content":"                            + \"        \" + currTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"ryanlimdx"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"ryanlimdx"},"content":"            // delete tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"ryanlimdx"},"content":"            } else if (cmd.equals(\"delete\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"ryanlimdx"},"content":"                if (currInput.length \u003c 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"ryanlimdx"},"content":"                    throw new DukeException(","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"ryanlimdx"},"content":"                            String.format(DukeException.NON_EMPTY_DESC, cmd));","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"ryanlimdx"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"ryanlimdx"},"content":"                int task \u003d Integer.parseInt(currInput[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"ryanlimdx"},"content":"                int numTasks \u003d userTasks.getSize();","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"ryanlimdx"},"content":"                if (task \u003e numTasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"ryanlimdx"},"content":"                    throw new DukeException(\"you have \" + numTasks","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"ryanlimdx"},"content":"                            + \" tasks. Please fill in a number lower than or equal to it!\"","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"ryanlimdx"},"content":"                    );","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"ryanlimdx"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"ryanlimdx"},"content":"                int taskIdx \u003d task - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"ryanlimdx"},"content":"                Task delTask \u003d userTasks.rmvTask(taskIdx);","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"ryanlimdx"},"content":"                System.out.println(\"    Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"ryanlimdx"},"content":"                        + \"        \" + delTask + \"\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"ryanlimdx"},"content":"                        + \"    Now you have \" + (numTasks - 1) + \" tasks in the list.\"","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"ryanlimdx"},"content":"                );","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"ryanlimdx"},"content":"            // add tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"ryanlimdx"},"content":"            } else if (cmd.equals(\"deadline\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"ryanlimdx"},"content":"                if (currInput.length \u003c 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"ryanlimdx"},"content":"                    throw new DukeException(","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"ryanlimdx"},"content":"                            String.format(DukeException.NON_EMPTY_DESC, cmd));","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"ryanlimdx"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"ryanlimdx"},"content":"                String[] task \u003d currInput[1].split(\" /by \");","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"ryanlimdx"},"content":"                Deadline newDL \u003d new Deadline(task[0], task[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"ryanlimdx"},"content":"                userTasks.addTask(newDL);","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"ryanlimdx"},"content":"                isAdded \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"ryanlimdx"},"content":"            } else if (cmd.equals(\"event\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"ryanlimdx"},"content":"                if (currInput.length \u003c 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"ryanlimdx"},"content":"                    throw new DukeException(","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"ryanlimdx"},"content":"                            String.format(DukeException.NON_EMPTY_DESC, cmd));","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"ryanlimdx"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"ryanlimdx"},"content":"                String[] task \u003d currInput[1].split(\" /from \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"ryanlimdx"},"content":"                String[] period \u003d task[1].split(\" /to \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"ryanlimdx"},"content":"                Event newEvt \u003d new Event(task[0], period[0], period[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"ryanlimdx"},"content":"                userTasks.addTask(newEvt);","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"ryanlimdx"},"content":"                isAdded \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"ryanlimdx"},"content":"            } else if (cmd.equals(\"todo\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"ryanlimdx"},"content":"                if (currInput.length \u003c 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"ryanlimdx"},"content":"                    throw new DukeException(","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"ryanlimdx"},"content":"                            String.format(DukeException.NON_EMPTY_DESC, cmd));","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"ryanlimdx"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"ryanlimdx"},"content":"                Todo newTd \u003d new Todo(currInput[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"ryanlimdx"},"content":"                userTasks.addTask(newTd);","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"ryanlimdx"},"content":"                isAdded \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"ryanlimdx"},"content":"            // unknown commands","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"ryanlimdx"},"content":"            } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"ryanlimdx"},"content":"                throw new DukeException(String.format(DukeException.UNKNOWN_CMD, cmd));","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"ryanlimdx"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"ryanlimdx"},"content":"            // Check if task is added to add appropriate syntax.","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"ryanlimdx"},"content":"            if (isAdded) {","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"ryanlimdx"},"content":"                int numTasks \u003d userTasks.getSize();","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"ryanlimdx"},"content":"                Task addedTask \u003d userTasks.getTask(numTasks - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"ryanlimdx"},"content":"                System.out.println(\"    Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"ryanlimdx"},"content":"                        + \"        \" + addedTask + \"\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"ryanlimdx"},"content":"                        + \"    Now you have \" + numTasks + \" tasks in the list.\"","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"ryanlimdx"},"content":"                );","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"ryanlimdx"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"ryanlimdx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"ryanlimdx"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"ryanlimdx"},"content":"        } finally {","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"ryanlimdx"},"content":"            System.out.println(Ui.LINE);","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"ryanlimdx"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"ryanlimdx"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ryanlimdx":139}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanlimdx"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ryanlimdx"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ryanlimdx"},"content":"import java.io.File;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ryanlimdx"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ryanlimdx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ryanlimdx"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"ryanlimdx"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"ryanlimdx"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ryanlimdx"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ryanlimdx"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ryanlimdx"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ryanlimdx"},"content":" * The Storage class handles the loading and saving of task data for the Duke chatbot.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ryanlimdx"},"content":" * It interacts with the file system to read and write tasks from and to a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ryanlimdx"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ryanlimdx"},"content":"public class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ryanlimdx"},"content":"    private File file;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ryanlimdx"},"content":"    private String path;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ryanlimdx"},"content":"     * Constructs a Storage instance with the specified file path.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ryanlimdx"},"content":"     * @param path The file path for loading and saving tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ryanlimdx"},"content":"    public Storage(String path) {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"ryanlimdx"},"content":"        this.path \u003d path;","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"ryanlimdx"},"content":"        this.file \u003d new File(path);","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"ryanlimdx"},"content":"        // set-up infrastructure","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"ryanlimdx"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"ryanlimdx"},"content":"            File dir \u003d new File(file.getParent());","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"ryanlimdx"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"ryanlimdx"},"content":"                dir.mkdir();","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"ryanlimdx"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"ryanlimdx"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"ryanlimdx"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"ryanlimdx"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"ryanlimdx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"ryanlimdx"},"content":"            throw new DukeException(\"File unable to be created in specified directory\");","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"ryanlimdx"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ryanlimdx"},"content":"     * Loads tasks from existing file, if any.","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"ryanlimdx"},"content":"     * @return A TaskList containing the tasks loaded from the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"ryanlimdx"},"content":"     * @throws DukeException If the file is not found or there is an issue reading it.","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"ryanlimdx"},"content":"    public TaskList loadTasks() {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"ryanlimdx"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"ryanlimdx"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"ryanlimdx"},"content":"            Scanner s \u003d new Scanner(this.file);","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"ryanlimdx"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"ryanlimdx"},"content":"                String[] taskInput \u003d s.nextLine().split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"ryanlimdx"},"content":"                String cmd \u003d taskInput[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"ryanlimdx"},"content":"                if (cmd.equals(\"D\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"ryanlimdx"},"content":"                    Deadline dl \u003d new Deadline(taskInput[2], taskInput[3]);","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"ryanlimdx"},"content":"                    if (taskInput[1].equals(\"1\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"ryanlimdx"},"content":"                        dl.markAsDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"ryanlimdx"},"content":"                    }","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"ryanlimdx"},"content":"                    tasks.addTask(dl);","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"ryanlimdx"},"content":"                } else if (cmd.equals(\"E\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"ryanlimdx"},"content":"                    Event evt \u003d new Event(taskInput[2], taskInput[3], taskInput[4]);","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"ryanlimdx"},"content":"                    if (taskInput[1].equals(\"1\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"ryanlimdx"},"content":"                        evt.markAsDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"ryanlimdx"},"content":"                    }","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"ryanlimdx"},"content":"                    tasks.addTask(evt);","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"ryanlimdx"},"content":"                } else if (cmd.equals(\"T\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"ryanlimdx"},"content":"                    Todo td \u003d new Todo(taskInput[2]);","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"ryanlimdx"},"content":"                    if (taskInput[1].equals(\"1\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"ryanlimdx"},"content":"                        td.markAsDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"ryanlimdx"},"content":"                    }","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"ryanlimdx"},"content":"                    tasks.addTask(td);","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"ryanlimdx"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"ryanlimdx"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"ryanlimdx"},"content":"            s.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"ryanlimdx"},"content":"            return tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"ryanlimdx"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"ryanlimdx"},"content":"            throw new DukeException(\"File not found.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"ryanlimdx"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"ryanlimdx"},"content":"     * Writes current tasks to the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"ryanlimdx"},"content":"     * @param tasks The TaskList containing the tasks to be written.","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"ryanlimdx"},"content":"    public void writeTasks(TaskList tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"ryanlimdx"},"content":"        try (BufferedWriter reset \u003d new BufferedWriter(new FileWriter(this.path))) {","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"ryanlimdx"},"content":"            reset.write(\"\");","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"ryanlimdx"},"content":"            tasks.getTasks().forEach((task) -\u003e {","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"ryanlimdx"},"content":"                try (BufferedWriter out \u003d new BufferedWriter(","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"ryanlimdx"},"content":"                        new FileWriter(this.path, true))) {","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"ryanlimdx"},"content":"                    out.write(task.writeContent());","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"ryanlimdx"},"content":"                    out.newLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"ryanlimdx"},"content":"                } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"ryanlimdx"},"content":"                    e.printStackTrace();","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"ryanlimdx"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"ryanlimdx"},"content":"            });","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"ryanlimdx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"ryanlimdx"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"ryanlimdx"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"ryanlimdx"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ryanlimdx":109}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanlimdx"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ryanlimdx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ryanlimdx"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ryanlimdx"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ryanlimdx"},"content":" * The TaskList class represents a list of tasks in the Duke chatbot.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ryanlimdx"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ryanlimdx"},"content":"public class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ryanlimdx"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ryanlimdx"},"content":"     * Constructs a new TaskList with an empty list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ryanlimdx"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ryanlimdx"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ryanlimdx"},"content":"     * Constructs a TaskList with tasks from an existing TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ryanlimdx"},"content":"     * @param existing The existing TaskList to copy tasks from.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ryanlimdx"},"content":"    public TaskList(TaskList existing) {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"ryanlimdx"},"content":"        this.taskList \u003d existing.taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"ryanlimdx"},"content":"    // duke.TaskList actions","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ryanlimdx"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ryanlimdx"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ryanlimdx"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"ryanlimdx"},"content":"        this.taskList.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ryanlimdx"},"content":"     * Removes a task at the specified index from the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ryanlimdx"},"content":"     * @param idx The index of the task to be removed.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ryanlimdx"},"content":"     * @return The removed task.","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ryanlimdx"},"content":"     * @throws DukeException If the specified index is out of bounds.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"ryanlimdx"},"content":"    public Task rmvTask(int idx) {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"ryanlimdx"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"ryanlimdx"},"content":"            return this.taskList.remove(idx);","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"ryanlimdx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"ryanlimdx"},"content":"            throw new DukeException(\"there isn\u0027t an available task to delete.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"ryanlimdx"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"ryanlimdx"},"content":"     * Retrieves a task at the specified index from the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"ryanlimdx"},"content":"     * @param idx The index of the task to be retrieved.","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"ryanlimdx"},"content":"     * @return The retrieved task.","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"ryanlimdx"},"content":"     * @throws DukeException If the specified index is out of bounds.","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"ryanlimdx"},"content":"    public Task getTask(int idx) {","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"ryanlimdx"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"ryanlimdx"},"content":"            return this.taskList.get(idx);","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"ryanlimdx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"ryanlimdx"},"content":"            throw new DukeException(\"this task is not available/ does not exist.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"ryanlimdx"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"ryanlimdx"},"content":"     * Retrieves the entire list of tasks from the TaskList in ArrayList form.","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"ryanlimdx"},"content":"     * @return The list of tasks in an ArrayList.","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"ryanlimdx"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"ryanlimdx"},"content":"        return this.taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"ryanlimdx"},"content":"     * Retrieves the list of tasks from the TaskList that contains the search term.","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"ryanlimdx"},"content":"     * @param searchTerm The search input from the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"ryanlimdx"},"content":"     * @param currTasks The list of tasks the user currently have.","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"ryanlimdx"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"ryanlimdx"},"content":"    public TaskList searchTasks(String searchTerm, TaskList currTasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"ryanlimdx"},"content":"        TaskList searchResults \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"ryanlimdx"},"content":"        currTasks.getTasks().forEach((task) -\u003e {","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"ryanlimdx"},"content":"            if (task.getDescription().contains(searchTerm)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"ryanlimdx"},"content":"                searchResults.addTask(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"ryanlimdx"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"ryanlimdx"},"content":"        });","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"ryanlimdx"},"content":"        return searchResults;","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"ryanlimdx"},"content":"     * Retrieves the size of the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"ryanlimdx"},"content":"     * @return The size of the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"ryanlimdx"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"ryanlimdx"},"content":"        return taskList.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"ryanlimdx"},"content":"     * Prints the tasks in the TaskList with their corresponding indices.","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"ryanlimdx"},"content":"    public void printTasks(boolean isSearch) {","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"ryanlimdx"},"content":"        if (isSearch) {","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"ryanlimdx"},"content":"            System.out.println(\"    Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"ryanlimdx"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"ryanlimdx"},"content":"            System.out.println(\"    Here are the items in your list: \");","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"ryanlimdx"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"ryanlimdx"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"ryanlimdx"},"content":"            String listIdx \u003d i + 1 + \". \";","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"ryanlimdx"},"content":"            Task currTask \u003d this.taskList.get(i);","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"ryanlimdx"},"content":"            System.out.println(\"    \" + listIdx + currTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"ryanlimdx"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"ryanlimdx"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ryanlimdx":122}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanlimdx"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ryanlimdx"},"content":"import duke.utils.DateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ryanlimdx"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ryanlimdx"},"content":" * The Deadline class represents a task with keyword \u0027deadline\u0027 in the Duke chatbot.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ryanlimdx"},"content":" * It extends the Task class with additional due date information","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ryanlimdx"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ryanlimdx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ryanlimdx"},"content":"    protected DateTime by;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ryanlimdx"},"content":"     * Constructs a Deadline task with the given description and deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ryanlimdx"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ryanlimdx"},"content":"     * @param by The deadline of the task in string format.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ryanlimdx"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"ryanlimdx"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"ryanlimdx"},"content":"        this.by \u003d new DateTime(by);","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ryanlimdx"},"content":"     * Generates the formatted content of the Deadline task for storage in a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ryanlimdx"},"content":"     * @return The formatted content of the Deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ryanlimdx"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"ryanlimdx"},"content":"    public String writeContent() {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"ryanlimdx"},"content":"        return \"D |\" + (this.isDone ? \" 1 | \" : \" 0 | \") + this.getDescription()","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"ryanlimdx"},"content":"                    + \" | \" + this.by;","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ryanlimdx"},"content":"     * Generates a string representation of the Deadline task to display.","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ryanlimdx"},"content":"     * @return The string representation of the Deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ryanlimdx"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"ryanlimdx"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"ryanlimdx"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"ryanlimdx"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ryanlimdx":43}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanlimdx"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ryanlimdx"},"content":"import duke.utils.DateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ryanlimdx"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ryanlimdx"},"content":" * The Event class represents a task with a specified event period in the Duke chatbot.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ryanlimdx"},"content":" * It extends the Task class and includes information about the event period.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ryanlimdx"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ryanlimdx"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ryanlimdx"},"content":"    protected DateTime from;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ryanlimdx"},"content":"    protected DateTime to;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ryanlimdx"},"content":"     * Constructs an Event task with the given description and event period.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ryanlimdx"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ryanlimdx"},"content":"     * @param from The starting date and time of the event in string format.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ryanlimdx"},"content":"     * @param to The ending date and time of the event in string format.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ryanlimdx"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"ryanlimdx"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"ryanlimdx"},"content":"        this.from \u003d new DateTime(from);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ryanlimdx"},"content":"        this.to \u003d new DateTime(to);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ryanlimdx"},"content":"     * Generates the formatted content of the Event task for storage in a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ryanlimdx"},"content":"     * @return The formatted content of the Event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ryanlimdx"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"ryanlimdx"},"content":"    public String writeContent() {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"ryanlimdx"},"content":"        return \"E |\" + (this.isDone ? \" 1 | \" : \" 0 | \") + this.getDescription()","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"ryanlimdx"},"content":"                + \" | \" + this.from + \" | \" + this.to;","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ryanlimdx"},"content":"     * Generates a string representation of the Event task to display.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ryanlimdx"},"content":"     * @return The string representation of the Event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ryanlimdx"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"ryanlimdx"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"ryanlimdx"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"ryanlimdx"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ryanlimdx":46}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanlimdx"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ryanlimdx"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ryanlimdx"},"content":" * The Task class represents a generic task in the Duke chatbot.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ryanlimdx"},"content":" * It is an abstract class that serves as the base class for specific task types.","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ryanlimdx"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ryanlimdx"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ryanlimdx"},"content":"    protected String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ryanlimdx"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ryanlimdx"},"content":"     * Constructs a new Task with the given description.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ryanlimdx"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ryanlimdx"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ryanlimdx"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"ryanlimdx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ryanlimdx"},"content":"     * Gets the status icon representing whether the task is done or not.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ryanlimdx"},"content":"     * @return The status icon, \"[X]\" if done, \"[ ]\" if not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ryanlimdx"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"ryanlimdx"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ryanlimdx"},"content":"     * Gets the description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ryanlimdx"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ryanlimdx"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"ryanlimdx"},"content":"        return description;","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ryanlimdx"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ryanlimdx"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ryanlimdx"},"content":"        isDone \u003d true; }","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ryanlimdx"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"ryanlimdx"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"ryanlimdx"},"content":"        isDone \u003d false; }","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"ryanlimdx"},"content":"     * Abstract method to generate the formatted content of the task for writing to file.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"ryanlimdx"},"content":"     * @return The formatted content of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"ryanlimdx"},"content":"    public abstract String writeContent();","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"ryanlimdx"},"content":"     * Generates a string representation of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"ryanlimdx"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"ryanlimdx"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"ryanlimdx"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"ryanlimdx"},"content":"        return getStatusIcon() + \" \" + getDescription();","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"ryanlimdx"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ryanlimdx":67}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanlimdx"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ryanlimdx"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ryanlimdx"},"content":" * The Todo class represents a task todo in the Duke chatbot.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ryanlimdx"},"content":" * It extends the Task class.","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ryanlimdx"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ryanlimdx"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ryanlimdx"},"content":"     * Constructs a Todo task with the given description.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ryanlimdx"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ryanlimdx"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"ryanlimdx"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ryanlimdx"},"content":"     * Generates the formatted content of the Todo task for storage in a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ryanlimdx"},"content":"     * @return The formatted content of the Todo task.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ryanlimdx"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ryanlimdx"},"content":"    public String writeContent() {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ryanlimdx"},"content":"        return \"T |\" + (this.isDone ? \" 1 | \" : \" 0 | \") + this.getDescription();","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ryanlimdx"},"content":"     * Generates a string representation of the Todo task to display.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ryanlimdx"},"content":"     * @return The string representation of the Todo task.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ryanlimdx"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"ryanlimdx"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"ryanlimdx"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"ryanlimdx"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ryanlimdx":36}},{"path":"src/main/java/duke/utils/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanlimdx"},"content":"package duke.utils;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ryanlimdx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ryanlimdx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ryanlimdx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ryanlimdx"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ryanlimdx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ryanlimdx"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ryanlimdx"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ryanlimdx"},"content":" * The DateTime class handles parsing date time formats.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"ryanlimdx"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"ryanlimdx"},"content":"public class DateTime {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ryanlimdx"},"content":"    private static final String PRINT_DATE_TIME_FORMAT \u003d \"MMM dd yyyy HHmm\";","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"ryanlimdx"},"content":"    private static final String PRINT_DATE_FORMAT \u003d \"MMM dd yyyy\";","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ryanlimdx"},"content":"    private static DateTimeFormatterBuilder acceptedDateTimeFormats \u003d","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"ryanlimdx"},"content":"            new DateTimeFormatterBuilder().append(","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"ryanlimdx"},"content":"                    DateTimeFormatter.ofPattern(\"[dd/MM/yyyy HHmm]\"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ryanlimdx"},"content":"                            + \"[yyyy/MM/dd HHmm]\" + \"[dd-MM-yyyy HHmm]\"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ryanlimdx"},"content":"                            + \"[yyyy-MM-dd HHmm]\" + \"[MMM dd yyyy HHmm]\"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ryanlimdx"},"content":"                    ));","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"ryanlimdx"},"content":"    private static DateTimeFormatterBuilder acceptedDateFormats \u003d","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"ryanlimdx"},"content":"            new DateTimeFormatterBuilder().append(","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"ryanlimdx"},"content":"            DateTimeFormatter.ofPattern(\"[dd/MM/yyyy]\"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ryanlimdx"},"content":"                    + \"[yyyy/MM/dd]\" + \"[dd-MM-yyyy]\"","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ryanlimdx"},"content":"                    + \"[yyyy-MM-dd]\" + \"[MMM dd yyyy]\"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ryanlimdx"},"content":"            ));","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ryanlimdx"},"content":"    protected LocalDateTime datetime;","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"ryanlimdx"},"content":"    protected LocalDate date;","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"ryanlimdx"},"content":"     * Constructs a Datetime instance.","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"ryanlimdx"},"content":"     * @param datetime The datetime to be parsed.","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"ryanlimdx"},"content":"    public DateTime(String datetime) {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"ryanlimdx"},"content":"        String[] currInput \u003d datetime.split(\" \", 4);","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"ryanlimdx"},"content":"        // input with no time","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"ryanlimdx"},"content":"        if (currInput.length \u003d\u003d 1 || currInput.length \u003d\u003d 3) {","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"ryanlimdx"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"ryanlimdx"},"content":"                DateTimeFormatter dateTimeFormatter \u003d acceptedDateFormats.toFormatter();","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"ryanlimdx"},"content":"                this.date \u003d LocalDate.parse(datetime, dateTimeFormatter);","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"ryanlimdx"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"ryanlimdx"},"content":"                throw new DukeException(","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ryanlimdx"},"content":"                        \"wrong date format! Try the default: \u0027dd-MM-yyyy\u0027\");","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"ryanlimdx"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"ryanlimdx"},"content":"        // input with time","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"ryanlimdx"},"content":"        } else if ((currInput.length \u003d\u003d 2) || (currInput.length \u003d\u003d 4)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"ryanlimdx"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"ryanlimdx"},"content":"                DateTimeFormatter dateTimeFormatter \u003d acceptedDateTimeFormats.toFormatter();","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"ryanlimdx"},"content":"                this.datetime \u003d LocalDateTime.parse(datetime, dateTimeFormatter);","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"ryanlimdx"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"ryanlimdx"},"content":"                throw new DukeException(","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"ryanlimdx"},"content":"                        \"wrong date time format! Try the default: \u0027dd-MM-yyyy HHmm\u0027\");","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"ryanlimdx"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"ryanlimdx"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"ryanlimdx"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"ryanlimdx"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"ryanlimdx"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"ryanlimdx"},"content":"            if (datetime !\u003d null) {","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"ryanlimdx"},"content":"                return this.datetime.format(DateTimeFormatter.ofPattern(PRINT_DATE_TIME_FORMAT));","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"ryanlimdx"},"content":"            } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"ryanlimdx"},"content":"                return this.date.format(DateTimeFormatter.ofPattern(PRINT_DATE_FORMAT));","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"ryanlimdx"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"ryanlimdx"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"ryanlimdx"},"content":"            throw new DukeException(\"unable to print date!\");","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"ryanlimdx"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"ryanlimdx"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ryanlimdx":76}},{"path":"src/main/java/duke/utils/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanlimdx"},"content":"package duke.utils;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ryanlimdx"},"content":"import java.util.Random;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ryanlimdx"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ryanlimdx"},"content":" * The class for handling UI in Duke chatbot.","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ryanlimdx"},"content":" * It contains tools such as line styles.","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"ryanlimdx"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"ryanlimdx"},"content":"public class Ui {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ryanlimdx"},"content":"    public static final String LINE \u003d","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ryanlimdx"},"content":"            \"_________________________________________________________________________\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"ryanlimdx"},"content":"    private static final String[] CATCHPHRASES \u003d {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ryanlimdx"},"content":"        \"Yee-haw!\",","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ryanlimdx"},"content":"        \"So long, partner.\",","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ryanlimdx"},"content":"        \"To infinity and beyond!\",","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ryanlimdx"},"content":"        \"Reach for the sky!\",","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ryanlimdx"},"content":"        \"There\u0027s a snake in my boot!\"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ryanlimdx"},"content":"    };","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"ryanlimdx"},"content":"     * Prints a greeting to the user","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"ryanlimdx"},"content":"    public static void greet() {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"ryanlimdx"},"content":"        String greeting \u003d LINE + \"   Hello! I\u0027m Woody\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"ryanlimdx"},"content":"                + \"   What can I do for you?\\n\" + LINE;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"ryanlimdx"},"content":"        System.out.println(greeting);","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"ryanlimdx"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"ryanlimdx"},"content":"     * Prints a goodbye to the user","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"ryanlimdx"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"ryanlimdx"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"ryanlimdx"},"content":"    public static void goodbye() {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"ryanlimdx"},"content":"        Random random \u003d new Random();","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"ryanlimdx"},"content":"        System.out.println(\"   Bye! \" + CATCHPHRASES[random.nextInt(CATCHPHRASES.length)]","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ryanlimdx"},"content":"                + \"\\n\" + LINE);","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"ryanlimdx"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ryanlimdx":42}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanlimdx"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ryanlimdx"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ryanlimdx"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ryanlimdx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ryanlimdx"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ryanlimdx"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ryanlimdx"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ryanlimdx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"ryanlimdx"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ryanlimdx"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ryanlimdx"},"content":"    private String path \u003d \"./data/testFile.txt\";","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ryanlimdx"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ryanlimdx"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ryanlimdx"},"content":"    public void preTest() {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ryanlimdx"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ryanlimdx"},"content":"        taskList.addTask(new Todo(\"test\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ryanlimdx"},"content":"        this.storage \u003d new Storage(path);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"ryanlimdx"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"ryanlimdx"},"content":"    public void writeTasks_validInputs_pass() throws FileNotFoundException {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"ryanlimdx"},"content":"        storage.writeTasks(this.taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"ryanlimdx"},"content":"        File testFile \u003d new File(this.path);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"ryanlimdx"},"content":"        Scanner s \u003d new Scanner(testFile);","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"ryanlimdx"},"content":"        String writtenTask \u003d s.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"ryanlimdx"},"content":"        s.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"ryanlimdx"},"content":"        assertEquals(\"T | 0 | test\", writtenTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"ryanlimdx"},"content":"        testFile.delete();","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"ryanlimdx"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ryanlimdx":35}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanlimdx"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ryanlimdx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ryanlimdx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ryanlimdx"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ryanlimdx"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ryanlimdx"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ryanlimdx"},"content":"    public void rmvTasks_invalidInputs_exceptionThrown() {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ryanlimdx"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ryanlimdx"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"ryanlimdx"},"content":"            taskList.rmvTask(-1); // attempt to remove last task","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ryanlimdx"},"content":"            fail();","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ryanlimdx"},"content":"        } catch (DukeException e){","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ryanlimdx"},"content":"            assertEquals(\"   Hmm, there isn\u0027t an available task to delete.\"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ryanlimdx"},"content":"                    , e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ryanlimdx"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ryanlimdx"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ryanlimdx"},"content":"    public void getTasks_invalidInputs_exceptionThrown(){","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ryanlimdx"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ryanlimdx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"ryanlimdx"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"ryanlimdx"},"content":"            taskList.getTask(1); // attempt to retrieve non-existent task","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"ryanlimdx"},"content":"            fail();","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"ryanlimdx"},"content":"        } catch (DukeException e){","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"ryanlimdx"},"content":"            assertEquals(\"   Hmm, this task is not available/ does not exist.\"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"ryanlimdx"},"content":"                    , e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"ryanlimdx"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"ryanlimdx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"ryanlimdx"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ryanlimdx":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ryanlimdx"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"ryanlimdx"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"ryanlimdx"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"ryanlimdx"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"ryanlimdx"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"ryanlimdx"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"ryanlimdx"},"content":"mark 3","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"ryanlimdx"},"content":"unmark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"ryanlimdx"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"ryanlimdx"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ryanlimdx":10}}]
