[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"    mainClass.set(\"Main\")","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"    archiveBaseName \u003d \"java\"","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"    archiveFileName \u003d \"GeePeeTee.jar\"","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"Jajared":3}},{"path":"src/main/java/GeePeeTee.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"import exception.GeePeeTeeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"import parser.Parser;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":" * Represents the main class of the GeePeeTee application.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":" * This class is responsible for initializing the application and running the","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":" * main","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":" * loop of the application, which processes user input and executes the","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":" * corresponding commands.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"public class GeePeeTee {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"     * Constructs a new {@code GeePeeTee} instance with the specified file path.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"     * @param filePath The file path to be associated with the application.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"    public GeePeeTee(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"            storage \u003d new Storage(\"GeePeeTee.txt\");","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"            taskList \u003d new TaskList(storage.loadTaskList());","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"            ui.showFileNotFoundError();","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"        } catch (GeePeeTeeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"     * Runs the main loop of the application, processing user input and executing","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"     * the corresponding commands.","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"    public void run() {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"        String input \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"        Parser parser \u003d new Parser(taskList, storage, ui);","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"            System.out.println(\"\\n--------------------------------------------------\");","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"                scanner.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"                ui.showGoodbyeMessage();","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Jajared"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"Jajared"},"content":"            parser.parseInput(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"Jajared"},"content":"            System.out.println(\"--------------------------------------------------\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jajared":67}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"public class Main {","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"        new GeePeeTee(\"GeePeeTee.txt\").run();","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Jajared":5}},{"path":"src/main/java/exception/GeePeeTeeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":" * Represents exceptions specific to the GeePeeTee application.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":" * This class extends the {@link Exception} class and provides a","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":" * mechanism to handle errors that are specific to the GeePeeTee","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":" * application\u0027s operations.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":" * The class allows for the creation of {@code GeePeeTeeException} instances","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":" * with custom messages.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"public class GeePeeTeeException extends Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"     * Constructs a new {@code GeePeeTeeException} instance with the specified","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"     * error message.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"     * @param message The error message to be associated with the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"    public GeePeeTeeException(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"        super(message);","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"     * Returns the error message associated with the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"     * @return The error message associated with the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"        return super.getMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Jajared":33}},{"path":"src/main/java/exception/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package exception;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":" * Represents an exception that is thrown to indicate that an operation","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":" * involving date validation has failed due to an invalid date format or value.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":" * This class extends the {@link Exception} class, allowing","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":" * {@code InvalidDateException} to be caught and handled specifically for cases","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":" * related to date","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":" * validation failures.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"public class InvalidDateException extends Exception {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"     * Constructs a new {@code InvalidDateException} instance with the specified","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"     * error message.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"     * @param message The error message to be associated with the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"    public InvalidDateException(String message) {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"        super(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"     * Returns the error message associated with the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"     * @return The error message associated with the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"        return super.getMessage();","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Jajared":32}},{"path":"src/main/java/exception/InvalidTaskFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package exception;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":" * Represents an exception that is thrown when an attempt to create","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":" * a task fails due to an incorrectly formatted input string.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":" * This class extends the {@link Exception} class and is used to indicate errors","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":" * encountered due to incorrect formatting of task input or data. It provides a","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":" * constructor to create exception instances with a custom message that can","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":" * describe","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":" * the specific formatting issue encountered.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"public class InvalidTaskFormatException extends Exception {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"     * Constructs a new {@code InvalidTaskFormatException} instance with the","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"     * specified","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"     * error message.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"     * @param message The error message to be associated with the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"    public InvalidTaskFormatException(String message) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"        super(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"     * Returns the error message associated with the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"     * @return The error message associated with the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"        return super.getMessage();","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Jajared":34}},{"path":"src/main/java/exception/InvalidTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package exception;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":" * Represents an exception that occurs when an invalid task index is provided to","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":" * the application.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":" * This class extends {@link Exception} to provide detailed information about","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":" * the error","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":" * related to task index operations, such as accessing or modifying a task at an","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":" * index","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":" * that does not exist or is otherwise deemed invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":" * The purpose of this exception is to facilitate error handling specific to","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":" * task index","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":" * operations, enabling more precise feedback and actions to be taken when such","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":" * errors occur.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"public class InvalidTaskIndexException extends Exception {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"     * Constructs a new {@code InvalidTaskIndexException} instance with the","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"     * specified error message.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"     * @param message The error message to be associated with the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"    public InvalidTaskIndexException(String message) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"        super(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"     * Returns the error message associated with the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"     * @return The error message associated with the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"        return super.getMessage();","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Jajared":38}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package parser;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import exception.GeePeeTeeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"import exception.InvalidDateException;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"import exception.InvalidTaskFormatException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"import exception.InvalidTaskIndexException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"import task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"import task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"import task.ToDo;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":" * Represents a parser that processes user input and executes the corresponding","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":" * commands.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":" * This class is responsible for parsing user input and executing the","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":" * corresponding commands, such as adding, deleting, or marking tasks, as well","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":" * as","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":" * providing help and exiting the application.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"public class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"     * Constructs a new {@code Parser} instance with the specified task list,","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"     * storage","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"     * and user interface.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"     * @param taskList The task list to be associated with the parser.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"     * @param storage  The storage to be associated with the parser.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"     * @param ui       The user interface to be associated with the parser.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"    public Parser(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"     * Parses the user input and executes the corresponding command.","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"     * @param input The user input to be parsed and executed.","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"    public void parseInput(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"        String command \u003d input.split(\" \")[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"        switch (command) {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"        case \"help\":","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"            ui.showListOfCommands();","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"        case \"bye\":","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"        case \"list\":","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"            taskList.printList();","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Jajared"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Jajared"},"content":"        case \"mark\":","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Jajared"},"content":"            processMarkCommand(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Jajared"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Jajared"},"content":"        case \"unmark\":","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Jajared"},"content":"            processUnmarkCommand(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Jajared"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Jajared"},"content":"        case \"delete\":","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Jajared"},"content":"            processDeleteCommand(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Jajared"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Jajared"},"content":"        case \"event\":","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Jajared"},"content":"            processEventCommand(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Jajared"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Jajared"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Jajared"},"content":"            processDeadlineCommand(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Jajared"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Jajared"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Jajared"},"content":"            processToDoCommand(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Jajared"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Jajared"},"content":"        default:","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Jajared"},"content":"            ui.showErrorMessage(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Jajared"},"content":"     * Processes the mark command by attempting to mark the task at the specified","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"Jajared"},"content":"     * index.","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"Jajared"},"content":"     * @param input The user input to be processed.","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"Jajared"},"content":"     * @throws InvalidTaskIndexException If the index of the task is invalid or does","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"Jajared"},"content":"     * not exist.","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"Jajared"},"content":"     * @throws GeePeeTeeException If an error occurs while marking the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Jajared"},"content":"    private void processMarkCommand(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"Jajared"},"content":"            if (input.trim().equals(\"mark\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"Jajared"},"content":"                throw new InvalidTaskIndexException(\"The index of a task cannot be empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Jajared"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"Jajared"},"content":"            int markIndex \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"Jajared"},"content":"            if (markIndex \u003e taskList.getTaskCount()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"Jajared"},"content":"                throw new InvalidTaskIndexException(\"The index of a task cannot be greater than the number of tasks.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"Jajared"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"Jajared"},"content":"            if (markIndex \u003c\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"Jajared"},"content":"                throw new InvalidTaskIndexException(\"The index of a task cannot be 0 or negative.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"Jajared"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"Jajared"},"content":"            Task taskToMark \u003d taskList.getTask(markIndex);","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"Jajared"},"content":"            if (taskToMark \u003d\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"Jajared"},"content":"                throw new InvalidTaskIndexException(\"The task at index \" + markIndex + \" does not exist.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"Jajared"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"Jajared"},"content":"            taskToMark.markAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"Jajared"},"content":"            ui.showTaskMarked(taskToMark);","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"Jajared"},"content":"            storage.saveTaskList(taskList.getTasksList());","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"Jajared"},"content":"        } catch (GeePeeTeeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"Jajared"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"Jajared"},"content":"        } catch (InvalidTaskIndexException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"Jajared"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"Jajared"},"content":"     * Processes the unmark command by attempting to unmark the task at the","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"Jajared"},"content":"     * specified index.","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"Jajared"},"content":"     * @param input The user input to be processed.","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"Jajared"},"content":"     * @throws InvalidTaskIndexException If the index of the task is invalid or does","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"Jajared"},"content":"     * not exist.","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"Jajared"},"content":"     * @throws GeePeeTeeException If an error occurs while unmarking the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"Jajared"},"content":"    private void processUnmarkCommand(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"Jajared"},"content":"            if (input.trim().equals(\"unmark\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"Jajared"},"content":"                throw new InvalidTaskIndexException(\"The index of a task cannot be empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"Jajared"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"Jajared"},"content":"            int unmarkIndex \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"Jajared"},"content":"            if (unmarkIndex \u003e taskList.getTaskCount()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"Jajared"},"content":"                throw new InvalidTaskIndexException(\"The index of a task cannot be greater than the number of tasks.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"Jajared"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"Jajared"},"content":"            if (unmarkIndex \u003c\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"Jajared"},"content":"                throw new InvalidTaskIndexException(\"The index of a task cannot be 0 or negative.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"Jajared"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"Jajared"},"content":"            Task taskToUnmark \u003d taskList.getTask(unmarkIndex);","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"Jajared"},"content":"            if (taskToUnmark \u003d\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"Jajared"},"content":"                throw new InvalidTaskIndexException(\"The task at index \" + unmarkIndex + \" does not exist.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"Jajared"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"Jajared"},"content":"            taskToUnmark.unmarkAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"Jajared"},"content":"            ui.showTaskUnmarked(taskToUnmark);","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"Jajared"},"content":"            storage.saveTaskList(taskList.getTasksList());","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"Jajared"},"content":"        } catch (GeePeeTeeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":153,"author":{"gitId":"Jajared"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"Jajared"},"content":"        } catch (InvalidTaskIndexException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"Jajared"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":159,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-01-31"},{"lineNumber":160,"author":{"gitId":"Jajared"},"content":"     * Processes the delete command by attempting to delete the task at the","lastModifiedDate":"2024-02-03"},{"lineNumber":161,"author":{"gitId":"Jajared"},"content":"     * specified index.","lastModifiedDate":"2024-02-03"},{"lineNumber":162,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":163,"author":{"gitId":"Jajared"},"content":"     * @param input The user input to be processed.","lastModifiedDate":"2024-02-03"},{"lineNumber":164,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":165,"author":{"gitId":"Jajared"},"content":"     * @throws InvalidTaskIndexException If the index of the task is invalid or does","lastModifiedDate":"2024-02-03"},{"lineNumber":166,"author":{"gitId":"Jajared"},"content":"     * not exist.","lastModifiedDate":"2024-02-03"},{"lineNumber":167,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":168,"author":{"gitId":"Jajared"},"content":"     * @throws GeePeeTeeException If an error occurs while deleting the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":169,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":170,"author":{"gitId":"Jajared"},"content":"    private void processDeleteCommand(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":171,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":172,"author":{"gitId":"Jajared"},"content":"            if (input.trim().equals(\"delete\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":173,"author":{"gitId":"Jajared"},"content":"                throw new InvalidTaskIndexException(\"The index of a task cannot be empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":174,"author":{"gitId":"Jajared"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":175,"author":{"gitId":"Jajared"},"content":"            int deleteIndex \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":176,"author":{"gitId":"Jajared"},"content":"            if (deleteIndex \u003e taskList.getTaskCount()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":177,"author":{"gitId":"Jajared"},"content":"                throw new InvalidTaskIndexException(\"The index of a task cannot be greater than the number of tasks.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":178,"author":{"gitId":"Jajared"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":179,"author":{"gitId":"Jajared"},"content":"            if (deleteIndex \u003c\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":180,"author":{"gitId":"Jajared"},"content":"                throw new InvalidTaskIndexException(\"The index of a task cannot be 0 or negative.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":181,"author":{"gitId":"Jajared"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":182,"author":{"gitId":"Jajared"},"content":"            Task taskToDelete \u003d taskList.getTask(deleteIndex);","lastModifiedDate":"2024-01-31"},{"lineNumber":183,"author":{"gitId":"Jajared"},"content":"            if (taskToDelete \u003d\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":184,"author":{"gitId":"Jajared"},"content":"                throw new InvalidTaskIndexException(\"The task at index \" + deleteIndex + \" does not exist.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":185,"author":{"gitId":"Jajared"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":186,"author":{"gitId":"Jajared"},"content":"            taskList.removeTask(deleteIndex);","lastModifiedDate":"2024-01-31"},{"lineNumber":187,"author":{"gitId":"Jajared"},"content":"            ui.showDeleteTask(taskToDelete, taskList.getTaskCount());","lastModifiedDate":"2024-01-31"},{"lineNumber":188,"author":{"gitId":"Jajared"},"content":"            storage.saveTaskList(taskList.getTasksList());","lastModifiedDate":"2024-01-31"},{"lineNumber":189,"author":{"gitId":"Jajared"},"content":"        } catch (GeePeeTeeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":190,"author":{"gitId":"Jajared"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":191,"author":{"gitId":"Jajared"},"content":"        } catch (InvalidTaskIndexException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":192,"author":{"gitId":"Jajared"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":193,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":194,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":195,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":196,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-01-31"},{"lineNumber":197,"author":{"gitId":"Jajared"},"content":"     * Processes the event command by attempting to create and add a new event task","lastModifiedDate":"2024-02-03"},{"lineNumber":198,"author":{"gitId":"Jajared"},"content":"     * to the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":199,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":200,"author":{"gitId":"Jajared"},"content":"     * @param input The user input to be processed.","lastModifiedDate":"2024-02-03"},{"lineNumber":201,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":202,"author":{"gitId":"Jajared"},"content":"     * @throws InvalidDateException If the date of the event is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":203,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":204,"author":{"gitId":"Jajared"},"content":"     * @throws InvalidTaskFormatException If the input format of the event is","lastModifiedDate":"2024-02-03"},{"lineNumber":205,"author":{"gitId":"Jajared"},"content":"     * incorrect.","lastModifiedDate":"2024-02-03"},{"lineNumber":206,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":207,"author":{"gitId":"Jajared"},"content":"     * @throws GeePeeTeeException If an error occurs while adding the event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":208,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":209,"author":{"gitId":"Jajared"},"content":"    private void processEventCommand(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":210,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":211,"author":{"gitId":"Jajared"},"content":"            Event newEvent \u003d Event.createFromInput(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":212,"author":{"gitId":"Jajared"},"content":"            taskList.addTask(newEvent);","lastModifiedDate":"2024-01-31"},{"lineNumber":213,"author":{"gitId":"Jajared"},"content":"            ui.showAddTask(newEvent, taskList.getTaskCount());","lastModifiedDate":"2024-01-31"},{"lineNumber":214,"author":{"gitId":"Jajared"},"content":"            storage.saveTaskList(taskList.getTasksList());","lastModifiedDate":"2024-01-31"},{"lineNumber":215,"author":{"gitId":"Jajared"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":216,"author":{"gitId":"Jajared"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":217,"author":{"gitId":"Jajared"},"content":"        } catch (InvalidTaskFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":218,"author":{"gitId":"Jajared"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":219,"author":{"gitId":"Jajared"},"content":"        } catch (GeePeeTeeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":220,"author":{"gitId":"Jajared"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":221,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":222,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":223,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":224,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-01-31"},{"lineNumber":225,"author":{"gitId":"Jajared"},"content":"     * Processes the deadline command by attempting to create and add a new deadline","lastModifiedDate":"2024-02-03"},{"lineNumber":226,"author":{"gitId":"Jajared"},"content":"     * task to the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":227,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":228,"author":{"gitId":"Jajared"},"content":"     * @param input The user input to be processed.","lastModifiedDate":"2024-02-03"},{"lineNumber":229,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":230,"author":{"gitId":"Jajared"},"content":"     * @throws InvalidDateException If the date of the deadline is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":231,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":232,"author":{"gitId":"Jajared"},"content":"     * @throws InvalidTaskFormatException If the input format of the deadline is","lastModifiedDate":"2024-02-03"},{"lineNumber":233,"author":{"gitId":"Jajared"},"content":"     * incorrect.","lastModifiedDate":"2024-02-03"},{"lineNumber":234,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":235,"author":{"gitId":"Jajared"},"content":"     * @throws GeePeeTeeException If an error occurs while adding the deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":236,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":237,"author":{"gitId":"Jajared"},"content":"    private void processDeadlineCommand(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":238,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":239,"author":{"gitId":"Jajared"},"content":"            Deadline newDeadline \u003d Deadline.createFromInput(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":240,"author":{"gitId":"Jajared"},"content":"            taskList.addTask(newDeadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":241,"author":{"gitId":"Jajared"},"content":"            ui.showAddTask(newDeadline, taskList.getTaskCount());","lastModifiedDate":"2024-01-31"},{"lineNumber":242,"author":{"gitId":"Jajared"},"content":"            storage.saveTaskList(taskList.getTasksList());","lastModifiedDate":"2024-01-31"},{"lineNumber":243,"author":{"gitId":"Jajared"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":244,"author":{"gitId":"Jajared"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":245,"author":{"gitId":"Jajared"},"content":"        } catch (InvalidTaskFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":246,"author":{"gitId":"Jajared"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":247,"author":{"gitId":"Jajared"},"content":"        } catch (GeePeeTeeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":248,"author":{"gitId":"Jajared"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":249,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":250,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":251,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":252,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-01-31"},{"lineNumber":253,"author":{"gitId":"Jajared"},"content":"     * Processes the todo command by attempting to create and add a new todo task to","lastModifiedDate":"2024-02-03"},{"lineNumber":254,"author":{"gitId":"Jajared"},"content":"     * the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":255,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":256,"author":{"gitId":"Jajared"},"content":"     * @param input The user input to be processed.","lastModifiedDate":"2024-02-03"},{"lineNumber":257,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":258,"author":{"gitId":"Jajared"},"content":"     * @throws InvalidTaskFormatException If the input format of the todo is","lastModifiedDate":"2024-02-03"},{"lineNumber":259,"author":{"gitId":"Jajared"},"content":"     * incorrect.","lastModifiedDate":"2024-02-03"},{"lineNumber":260,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":261,"author":{"gitId":"Jajared"},"content":"     * @throws GeePeeTeeException If an error occurs while adding the todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":262,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":263,"author":{"gitId":"Jajared"},"content":"    private void processToDoCommand(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":264,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":265,"author":{"gitId":"Jajared"},"content":"            ToDo newToDo \u003d ToDo.createFromInput(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":266,"author":{"gitId":"Jajared"},"content":"            taskList.addTask(newToDo);","lastModifiedDate":"2024-01-31"},{"lineNumber":267,"author":{"gitId":"Jajared"},"content":"            ui.showAddTask(newToDo, taskList.getTaskCount());","lastModifiedDate":"2024-01-31"},{"lineNumber":268,"author":{"gitId":"Jajared"},"content":"            storage.saveTaskList(taskList.getTasksList());","lastModifiedDate":"2024-01-31"},{"lineNumber":269,"author":{"gitId":"Jajared"},"content":"        } catch (InvalidTaskFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":270,"author":{"gitId":"Jajared"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":271,"author":{"gitId":"Jajared"},"content":"        } catch (GeePeeTeeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":272,"author":{"gitId":"Jajared"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":273,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":274,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":275,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Jajared":275}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"import exception.GeePeeTeeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"import task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"import task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"import task.ToDo;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":" * Represents a storage class that handles the loading and saving of task lists","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":" * to","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":" * the hard disk.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":" * This class is responsible for loading and saving task lists to the hard disk,","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":" * allowing the task list to be persisted across multiple sessions of the","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":" * application.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"    public static final String BASE_PATH \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"    private String filePath;","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"     * Constructs a new {@code Storage} instance with the specified file name.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"     * @param fileName The name of the file to be associated with the storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"     * @throws FileNotFoundException If the file specified by the file name does not","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"     *                               exist and cannot be created.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"     * @throws IOException           If an I/O error occurs while creating the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"    public Storage(String fileName) throws FileNotFoundException, IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"            this.filePath \u003d BASE_PATH + \"/\" + fileName;","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"            throw new IOException();","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"     * Loads the task list from the hard disk.","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"     * @return The task list loaded from the hard disk.","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"     * @throws FileNotFoundException If the file specified by the file name does not","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Jajared"},"content":"     *                               exist and cannot be created.","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Jajared"},"content":"     * @throws GeePeeTeeException    If the file contains an invalid task type.","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Jajared"},"content":"     * @throws IOException           If an I/O error occurs while reading the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"Jajared"},"content":"    public ArrayList\u003cTask\u003e loadTaskList() throws FileNotFoundException, GeePeeTeeException, IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"Jajared"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Jajared"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"Jajared"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Jajared"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Jajared"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Jajared"},"content":"            String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Jajared"},"content":"            String type \u003d parts[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Jajared"},"content":"            boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Jajared"},"content":"            String description \u003d parts[2];","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Jajared"},"content":"            Task task;","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Jajared"},"content":"            switch (type) {","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Jajared"},"content":"            case \"T\":","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Jajared"},"content":"                task \u003d new ToDo(description);","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Jajared"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Jajared"},"content":"            case \"D\":","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Jajared"},"content":"                task \u003d new Deadline(description, LocalDate.parse(parts[3]));","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Jajared"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Jajared"},"content":"            case \"E\":","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"Jajared"},"content":"                task \u003d new Event(description, LocalDate.parse(parts[3]), LocalDate.parse(parts[4]));","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Jajared"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Jajared"},"content":"            default:","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Jajared"},"content":"                throw new GeePeeTeeException(\"File contains invalid task type.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"Jajared"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"Jajared"},"content":"            if (isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"Jajared"},"content":"                task.markAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"Jajared"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"Jajared"},"content":"            result.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Jajared"},"content":"        s.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"Jajared"},"content":"        return result;","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"Jajared"},"content":"     * Saves the task list to the hard disk.","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"Jajared"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"Jajared"},"content":"     * @param inputList The task list to be saved to the hard disk.","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"Jajared"},"content":"     * @throws GeePeeTeeException If an error occurs while saving the task list to","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"Jajared"},"content":"     *                            the","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"Jajared"},"content":"     *                            hard disk.","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"Jajared"},"content":"    public void saveTaskList(ArrayList\u003cTask\u003e inputList) throws GeePeeTeeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"Jajared"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"Jajared"},"content":"        try (FileWriter fw \u003d new FileWriter(file)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"Jajared"},"content":"            for (Task task : inputList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"Jajared"},"content":"                fw.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"Jajared"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"Jajared"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"Jajared"},"content":"            throw new GeePeeTeeException(\"Error saving the task list file.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Jajared":117}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"import exception.InvalidDateException;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"import exception.InvalidTaskFormatException;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":" * Represents a deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":" * This class extends the {@link Task} class and is used to represent tasks that","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":" * have a deadline. It provides a constructor to create a new deadline task with","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":" * a description and a deadline date.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"     * Creates a new {@code Deadline} instance with the specified description and","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"     * deadline date.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"     * @param by          The deadline date of the deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"    public static Deadline createFromInput(String input) throws InvalidTaskFormatException, InvalidDateException {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"            String[] parts \u003d input.split(\" /by \");","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"            String description \u003d parts[0].split(\"deadline \")[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"            String by \u003d parts[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"            LocalDate parsedBy \u003d LocalDate.parse(by, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"            return new Deadline(description, parsedBy);","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"            throw new InvalidTaskFormatException(","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"                    \"Invalid deadline format. Please use \u0027deadline description /by date\u0027.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"            throw new InvalidDateException(\"Invalid date format. Please use \u0027yyyy-MM-dd\u0027.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"     * Constructs a new {@code Deadline} instance with the specified description and","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"     * deadline date.","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"     * @param by          The deadline date of the deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"     * Returs the string representation of the deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"     * @return The string representation of the deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Jajared"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"Jajared"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"Jajared"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"Jajared"},"content":"     * Returns the string representation of the deadline task to be saved in the","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"Jajared"},"content":"     * hard disk.","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"Jajared"},"content":"     * @return The string representation of the deadline task to be saved in the","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"Jajared"},"content":"     * hard","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"Jajared"},"content":"     * disk.","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"Jajared"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"Jajared"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"Jajared"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by;","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jajared":79}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"import exception.InvalidDateException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"import exception.InvalidTaskFormatException;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":" * Represents an event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":" * This class extends the {@link Task} class and is used to represent tasks that","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":" * have a start and end date. It provides a constructor to create a new event","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":" * task with a description, start date and end date.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"     * Creates a new {@code Event} instance with the specified description, start","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"     * date and end date.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"     * @param from        The start date of the event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"     * @param by          The end date of the event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"    public static Event createFromInput(String input) throws InvalidTaskFormatException, InvalidDateException {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"            String[] parts \u003d input.split(\" /from | /to \");","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"            String description \u003d parts[0].split(\"event \")[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"            String at \u003d parts[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"            String by \u003d parts[2];","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"            LocalDate parsedAt \u003d LocalDate.parse(at, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"            LocalDate parsedBy \u003d LocalDate.parse(by, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"            return new Event(description, parsedAt, parsedBy);","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"            throw new InvalidTaskFormatException(","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"                    \"Invalid event format. Please use \u0027event description /from date /to date\u0027.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"            throw new InvalidDateException(\"Invalid date format. Please use \u0027yyyy-MM-dd\u0027.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"     * Constructs a new {@code Event} instance with the specified description, start","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"     * date and end date.","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"     * @param from        The start date of the event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"     * @param by          The end date of the event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"    public Event(String description, LocalDate from, LocalDate by) {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Jajared"},"content":"     * Returs the string representation of the event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"Jajared"},"content":"     * @return The string representation of the event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"Jajared"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"Jajared"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"Jajared"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" to: \"","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Jajared"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"Jajared"},"content":"     * Returns the string representation of the event task to be saved in the hard","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"Jajared"},"content":"     * disk.","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"Jajared"},"content":"     * @return The string representation of the event task to be saved in the hard","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"Jajared"},"content":"     * disk.","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"Jajared"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"Jajared"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"Jajared"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + from + \" | \" + by;","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jajared":85}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":" * Represents a task.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":" * This class is used to represent tasks that have a description and a status","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":" * indicating whether the task is done or not. It provides a constructor to","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":" * create a new task with a description.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"     * Constructs a new {@code Task} instance with the specified description.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"     * Returns the status of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"     * @return The status of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"     * Unmarks the task as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"     * Returns the string representation of the task to be saved in the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Jajared"},"content":"     * @return The string representation of the task to be saved in the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Jajared"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"Jajared"},"content":"        return (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jajared":68}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import exception.InvalidTaskFormatException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":" * Represents a to-do task.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":" * This class extends the {@link Task} class and is used to represent tasks that","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":" * have no specific deadline or start and end date. It provides a constructor to","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":" * create a new to-do task with a description.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"     * Creates a new {@code ToDo} instance with the specified description.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"    public static ToDo createFromInput(String input) throws InvalidTaskFormatException {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"            String description \u003d input.split(\"todo \")[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"            return new ToDo(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"            throw new InvalidTaskFormatException(\"Invalid todo format. Please use \u0027todo description\u0027.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"     * Constructs a new {@code ToDo} instance with the specified description.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"     * Returs the string representation of the to-do task.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"     * @return The string representation of the to-do task.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"     * Returns the string representation of the to-do task to be saved in the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"     * @return The string representation of the to-do task to be saved in the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jajared":57}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package tasklist;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":" * This class is used to represent a list of tasks. It provides methods to add,","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":" * remove and get tasks from the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"    private ArrayList\u003cTask\u003e tasksList;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"     * Constructs a new {@code TaskList} instance with an empty list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"        this.tasksList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"     * Constructs a new {@code TaskList} instance with the specified list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"     * @param tasksList The list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasksList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"        this.tasksList \u003d tasksList;","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"     * @return The number of tasks in the list","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"    public int getTaskCount() {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"        return this.tasksList.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"     * @return The list of tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"    public ArrayList\u003cTask\u003e getTasksList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"        return this.tasksList;","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"     * @param index The index of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"     * @return The task at the specified index","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"        return this.tasksList.get(index - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Jajared"},"content":"     * Prints the list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Jajared"},"content":"    public void printList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Jajared"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Jajared"},"content":"        for (int i \u003d 0; i \u003c this.tasksList.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Jajared"},"content":"            System.out.println((i + 1) + \". \" + this.tasksList.get(i));","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Jajared"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"Jajared"},"content":"     * @param task The task to be added","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Jajared"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Jajared"},"content":"        this.tasksList.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Jajared"},"content":"     * Removes a task from the list at the specified index.","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"Jajared"},"content":"     * @param index The index of the task to be removed","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Jajared"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Jajared"},"content":"        this.tasksList.remove(index - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Jajared":89}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":" * Represents the user interface of the application.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":" * This class is used to display messages to the user, such as welcome and","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":" * goodbye messages, error messages, and messages related to tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"     * Displays the welcome message to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"        String botName \u003d \"GeePeeTee\";","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"        System.out.println(\"Hello! I\u0027m \" + botName + \"\\nWhat can I do for you?\");","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"     * Displays the goodbye message to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"     * Displays an error message when loading the task list file.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"        System.out.println(\"Error loading the task list file.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"     * Displays an error message when the task list file is not found.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"    public void showFileNotFoundError() {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"        System.out.println(\"File not found.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"     * @param message The error message to be displayed","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"    public void showErrorMessage(String message) {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"        System.out.println(\"Oops! An error occurred:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"        System.out.println(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"     * Displays the task to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"     * @param task The task to be displayed","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"    public void showTaskMessage(Task task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"        System.out.println(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Jajared"},"content":"     * Displays the unmarking of a task as undone to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"Jajared"},"content":"     * @param task The task to be unmarked as undone","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"Jajared"},"content":"    public void showTaskUnmarked(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Jajared"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Jajared"},"content":"        showTaskMessage(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"Jajared"},"content":"     * Displays the marking of a task as done to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"Jajared"},"content":"     * @param task The task to be marked as done","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"Jajared"},"content":"    public void showTaskMarked(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Jajared"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Jajared"},"content":"        showTaskMessage(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"Jajared"},"content":"     * Displays the addition of a task to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"Jajared"},"content":"     * @param task The task to be added","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"Jajared"},"content":"     * @param taskCount The number of tasks in the list","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"Jajared"},"content":"    public void showAddTask(Task task, int taskCount) {","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"Jajared"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"Jajared"},"content":"        showTaskMessage(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"Jajared"},"content":"        System.out.println(getTaskCountMessage(taskCount));","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"Jajared"},"content":"     * Displays the deletion of a task to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"Jajared"},"content":"     * @param task The task to be deleted","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"Jajared"},"content":"     * @param taskCount The number of tasks in the list","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"Jajared"},"content":"    public void showDeleteTask(Task task, int taskCount) {","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"Jajared"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"Jajared"},"content":"        showTaskMessage(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"Jajared"},"content":"        System.out.println(getTaskCountMessage(taskCount));","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"Jajared"},"content":"     * Displays the list of commands available to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"Jajared"},"content":"    public void showListOfCommands() {","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"Jajared"},"content":"        System.out.println(\"Here are the available commands:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"Jajared"},"content":"        System.out.println(\"1. todo \u003cdescription\u003e: Add a todo task\");","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"Jajared"},"content":"        System.out.println(\"2. deadline \u003cdescription\u003e /by \u003cdate\u003e: Add a deadline task\");","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"Jajared"},"content":"        System.out.println(\"3. event \u003cdescription\u003e /at \u003cdate\u003e: Add an event task\");","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"Jajared"},"content":"        System.out.println(\"4. list: List all tasks\");","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"Jajared"},"content":"        System.out.println(\"5. mark \u003ctaskNumber\u003e: Mark a task as done\");","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"Jajared"},"content":"        System.out.println(\"6. unmark \u003ctaskNumber\u003e: Mark a task as not done\");","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"Jajared"},"content":"        System.out.println(\"7. delete \u003ctaskNumber\u003e: Remove a task\");","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"Jajared"},"content":"        System.out.println(\"8. bye: Exit the program\");","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"Jajared"},"content":"     * Returns the string representation of the number of tasks remaining in the","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"Jajared"},"content":"     * task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"Jajared"},"content":"     * @param taskCount The number of tasks in the list","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"Jajared"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"Jajared"},"content":"     * @return The string representation of the number of remaining tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"Jajared"},"content":"    private String getTaskCountMessage(int taskCount) {","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"Jajared"},"content":"        if (taskCount \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"Jajared"},"content":"            return \"Now you have \" + taskCount + \" task in the list.\";","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"Jajared"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"Jajared"},"content":"            return \"Now you have \" + taskCount + \" tasks in the list.\";","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Jajared":138}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"import exception.InvalidDateException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"import exception.InvalidTaskFormatException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"/*","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":" * Tests for the Event class.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"public class EventTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"     * Tests the creation of an event task from user input.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"     * The input string is in the correct format and the event task is created","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"     * successfully.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"    public void eventToString_correctFormat_correctOutput() {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"        String eventStartDate \u003d \"2024-01-01\";","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"        String eventEndDate \u003d \"2024-01-02\";","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"        String eventDescription \u003d \"Event Test\";","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"        String inputString \u003d \"event \" + eventDescription + \" /from \" + eventStartDate + \" /to \" + eventEndDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"            Event newEvent \u003d Event.createFromInput(inputString);","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"            String expected \u003d \"[E][ ] Event Test (from: Jan 01 2024 to: Jan 02 2024)\";","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"            assertEquals(expected, newEvent.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"            fail(\"An unexpected exception occurred: \" + e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"     * Tests the creation of an event task from user input.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"     * The input string is in the incorrect format and an exception is thrown.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"    public void eventToString_incorrectFormat_invalidTaskFormatExceptionThrown() {","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"        String eventStartDate \u003d \"2024-01-01\";","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"        String eventDescription \u003d \"Event Test\";","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"        // Missing end date","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"        String inputStringMissingEndDate \u003d \"event \" + eventDescription + \" /from \" + eventStartDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"        // Missing description","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"        String inputStringMissingDescription \u003d \"event /from \" + eventStartDate + \" /to \" + eventStartDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"        // Missing start date","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"        String inputStringMissingStartDate \u003d \"event \" + eventDescription + \" /to \" + eventStartDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"        String inputStringMissingPrefix \u003d eventDescription + \" /from \" + eventStartDate + \" /to \" + eventStartDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"        assertThrows(InvalidTaskFormatException.class, () -\u003e {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"            Event.createFromInput(inputStringMissingEndDate);","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"        });","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"        assertThrows(InvalidTaskFormatException.class, () -\u003e {","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"            Event.createFromInput(inputStringMissingDescription);","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"        });","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"        assertThrows(InvalidTaskFormatException.class, () -\u003e {","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Jajared"},"content":"            Event.createFromInput(inputStringMissingStartDate);","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Jajared"},"content":"        });","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Jajared"},"content":"        assertThrows(InvalidTaskFormatException.class, () -\u003e {","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Jajared"},"content":"            Event.createFromInput(inputStringMissingPrefix);","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"Jajared"},"content":"        });","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"Jajared"},"content":"     * Tests the creation of an event task from user input.","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"Jajared"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"Jajared"},"content":"     * The input string is in the correct format but the date is in an incorrect","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"Jajared"},"content":"     * format and an exception is thrown.","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"Jajared"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"Jajared"},"content":"    public void eventToString_incorrectDateFormat_invalidDateExceptionThrown() {","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"Jajared"},"content":"        String eventStartDate \u003d \"20240101\";","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"Jajared"},"content":"        String eventEndDate \u003d \"20240102\";","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"Jajared"},"content":"        String eventDescription \u003d \"Event Test\";","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"Jajared"},"content":"        String inputString \u003d \"event \" + eventDescription + \" /from \" + eventStartDate + \" /to \" + eventEndDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"Jajared"},"content":"        assertThrows(InvalidDateException.class, () -\u003e {","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"Jajared"},"content":"            Event.createFromInput(inputString);","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"Jajared"},"content":"        });","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Jajared":84}},{"path":"src/test/java/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"package ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"import task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":" * Tests for the Ui class.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"public class UiTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"    @AfterEach","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"     * Tests the display of the welcome message.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"     * The welcome message is displayed correctly.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"    public void showWelcomeMessage_correctOutput() {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"        assertEquals(\"Hello! I\u0027m GeePeeTee\\nWhat can I do for you?\\n\", outContent.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"     * Tests the display of an error message.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"     * The error message is displayed correctly.","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"    public void showErrorMessage_correctOutput() {","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"        ui.showErrorMessage(\"Test error message\");","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"        assertEquals(\"Oops! An error occurred:\\nTest error message\\n\", outContent.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"    /*","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"     * Tests the display of a task message.","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"     * A task message is displayed correctly.","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Jajared"},"content":"    public void showTaskMessage_correctOutput() {","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Jajared"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Jajared"},"content":"        Task task \u003d new Task(\"Test task\");","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Jajared"},"content":"        ui.showTaskMessage(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"Jajared"},"content":"        assertEquals(\"[ ] Test task\\n\", outContent.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Jajared":67}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jajared":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"java -classpath ..\\bin GeePeeTee \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"Jajared":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"java -classpath ../bin GeePeeTee \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"Jajared":1}}]
