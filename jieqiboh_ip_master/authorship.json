[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"T | 1 | return book","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"D | 0 | return book | Sunday","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"D | 0 | do homework | no idea :-p","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"jieqiboh":3}},{"path":"data/duketest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"T | 1 | read book","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"E | 0 | project meeting | Aug 6th 2 | 4pm","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"T | 1 | join sports club","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"jieqiboh":3}},{"path":"src/main/java/Dates.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":" * Dates class handles validation and formatting of strings in input and database format","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"public class Dates {","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"    // Looks for pattern \"dd/MM/yyyy HHmm\", used for input purposes","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"    static final Pattern DATE_INPUT_PATTERN \u003d Pattern.compile(\"^(0?[1-9]|[12][0-9]|3[01])/(0?[1-9]|1[0-2])/\" +","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"            \"(\\\\d{4}) (\\\\d{4}$)\");","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"    // Looks for pattern \"dd Month yyyy HH:mm\", used for storing in db and output purposes","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"    static final Pattern DATE_DB_PATTERN \u003d Pattern.compile(\"\\\\d{1,2} \"","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"            + \"(January|February|March|April|May|June|July|August|September|October|November|December)\" +","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"            \" \\\\d{4} \\\\d{2}:\\\\d{2}\");","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"    // Used for parsing datetime string in input format, to a datetime object","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"    static final DateTimeFormatter DATE_INPUT_FORMATTER\u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"    // Used for parsing a datetime string in db format, to a datetime object","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"    static final DateTimeFormatter DATE_DB_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy HH:mm\");","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"     * Validates an input string and returns true if it matches","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"    public static boolean isValidInputDate(String date) {","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"        Matcher matcher \u003d Dates.DATE_INPUT_PATTERN.matcher(date);","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"        return matcher.matches();","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"jieqiboh"},"content":"     * Checks that the db string date matches the db date pattern","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"jieqiboh"},"content":"     * @return True if the date String matches the pattern","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"jieqiboh"},"content":"    public static boolean isValidDbDate(String date) {","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"jieqiboh"},"content":"        Matcher matcher \u003d DATE_DB_PATTERN.matcher(date);","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"jieqiboh"},"content":"        return matcher.matches();","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"jieqiboh"},"content":"     * Creates a datetime object, using the input string formatter","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"jieqiboh"},"content":"     * @param date which is a string that has a valid input pattern","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"jieqiboh"},"content":"     * @return LocalDateTime class based on the date String","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"jieqiboh"},"content":"    public static LocalDateTime inputStr2DateTime(String date) {","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"jieqiboh"},"content":"            return LocalDateTime.parse(date, DATE_INPUT_FORMATTER);","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"jieqiboh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"Could not parse date\" + e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"jieqiboh"},"content":"        return null;","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"jieqiboh"},"content":"     * Creates a datetime object, using the db string formatter","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"jieqiboh"},"content":"     * @param date which is a string that has a valid db pattern","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"jieqiboh"},"content":"     * @return LocalDateTime class based on the date String","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"jieqiboh"},"content":"    public static LocalDateTime dbStr2DateTime(String date) {","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"jieqiboh"},"content":"            return LocalDateTime.parse(date, DATE_DB_FORMATTER);","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"jieqiboh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"Could not parse date\" + e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"jieqiboh"},"content":"        return null;","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"jieqiboh"},"content":"    public static String dateTime2DbStr(LocalDateTime datetime) {","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"jieqiboh"},"content":"            return datetime.format(Dates.DATE_DB_FORMATTER);","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"jieqiboh"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"Failed to format datetime: \" + e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"jieqiboh"},"content":"        return null;","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"jieqiboh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"jieqiboh"},"content":"        String invalidInputDate1 \u003d \"01/13/2023 1200\";","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"jieqiboh"},"content":"        String invalidInputDate2 \u003d \"01/13/2023 2401\";","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"jieqiboh"},"content":"        String validInputDate1 \u003d \"15/01/2023 1430\";","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"jieqiboh"},"content":"        String validInputDate2 \u003d \"01/01/2025 2330\";","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(Dates.isValidInputDate(validInputDate1));","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(Dates.isValidInputDate(validInputDate2));","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(Dates.isValidInputDate(invalidInputDate1));","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(Dates.isValidInputDate(invalidInputDate2));","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"jieqiboh"},"content":"        // Convert valid date strings to LocalDateTime objects","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"jieqiboh"},"content":"        LocalDateTime validDate1 \u003d inputStr2DateTime(validInputDate1);","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"jieqiboh"},"content":"        LocalDateTime validDate2 \u003d inputStr2DateTime(validInputDate2);","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"jieqiboh"},"content":"        // Convert LocalDateTime objects to string for storage in database file","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"jieqiboh"},"content":"        String validDate1Str \u003d dateTime2DbStr(validDate1);","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"jieqiboh"},"content":"        String validDate2Str \u003d dateTime2DbStr(validDate2);","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"jieqiboh"},"content":"        // return the db string format when printing","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(\"Valid date 1 as string: \" + validDate1Str);","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(\"Valid date 2 as string: \" + validDate2Str);","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"jieqiboh":104}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"    protected String by;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"     * Default constructor, isDone set to false","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"     * @param description of Deadline","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"     * @param by is the end of the deadline","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"    public Deadline(String description, Boolean isDone, String by) {","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"        super(description);","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"        this.by \u003d Dates.dateTime2DbStr(by);","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"jieqiboh"},"content":"     * Converts the database representation of Deadline to a Deadline Task","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"jieqiboh"},"content":"     * @param dbDeadline the string rep of Deadline in the database","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"jieqiboh"},"content":"     * @return Task the Deadline Task object","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"jieqiboh"},"content":"    public static Deadline db2Deadline(String dbDeadline) {","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"jieqiboh"},"content":"        // D | 0 | return book | June 6th","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"jieqiboh"},"content":"        String[] params \u003d dbDeadline.split(\" \\\\| \");","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"jieqiboh"},"content":"        Boolean isDone \u003d params[1].equals(\"1\") ? true : false; // if \"1\", means isDone","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"jieqiboh"},"content":"        String desc \u003d params[2];","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"jieqiboh"},"content":"        String by \u003d params[3];","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"jieqiboh"},"content":"        return new Deadline(desc, isDone, by);","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"jieqiboh"},"content":"     * Converts the a Deadline Task to the database representation of Deadline","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"jieqiboh"},"content":"     * @param deadlineTask the Deadline Task object","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"jieqiboh"},"content":"     * @return Task the string rep of Deadline in the database","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"jieqiboh"},"content":"    public static String deadline2Db(Deadline deadlineTask) {","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"jieqiboh"},"content":"        // D | 0 | return book | June 6th","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"jieqiboh"},"content":"        String done \u003d deadlineTask.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"jieqiboh"},"content":"        String desc \u003d deadlineTask.description;","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"jieqiboh"},"content":"        String by \u003d deadlineTask.by;","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"jieqiboh"},"content":"        return \"D\" + \" | \" + done + \" | \" + desc + \" | \" + by;","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"jieqiboh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"jieqiboh"},"content":"        String dbDeadline \u003d \"D | 0 | return book | June 6th\";","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"jieqiboh"},"content":"        Deadline deadlineTask \u003d Deadline.db2Deadline(dbDeadline);","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"jieqiboh"},"content":"        deadlineTask.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(deadlineTask);","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(Deadline.deadline2Db(deadlineTask));","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"jieqiboh"},"content":"        // Test creating a deadline with valid date","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"jieqiboh"},"content":"        String desc \u003d \"Buy Bread\";","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"jieqiboh"},"content":"        String validInputDate1 \u003d \"15/01/2023 1430\";","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"jieqiboh"},"content":"        if (Dates.isValidInputDate(validInputDate1)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"jieqiboh"},"content":"            LocalDateTime validDate1 \u003d Dates.inputStr2DateTime(validInputDate1);","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"jieqiboh"},"content":"            Deadline d \u003d new Deadline(desc, validDate1); // Create date object","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"jieqiboh"},"content":"            d.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(Deadline.deadline2Db(d));","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"jieqiboh":76}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"import java.util.Objects;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"    public static final String DBPATH \u003d \"../data/duke.txt\"; // uncommment for runtest.sh","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"//    public static final String DBPATH \u003d \"data/duke.txt\";","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"        String greeting \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"                \" Hello! I\u0027m steve\\n\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"                \" What can I do for you?\\n\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"        String goodbye \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"                        \" Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"                        \"____________________________________________________________\";","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(greeting);","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"        TaskList myTasks \u003d new TaskList();","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"        Scanner scanner \u003d new Scanner(System.in);  // Create a Scanner object","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"        String line \u003d scanner.nextLine(); // Get first input","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"        while (!Objects.equals(line, \"bye\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"            String border \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"            try {","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"                System.out.println(border);","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"jieqiboh"},"content":"                String cmd \u003d line.split(\" \")[0];","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"jieqiboh"},"content":"                String params \u003d line.substring(cmd.length()).trim();","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"jieqiboh"},"content":"                switch (cmd) {","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"jieqiboh"},"content":"                    case \"list\":","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"jieqiboh"},"content":"                        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"jieqiboh"},"content":"                        myTasks.printTasks();","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"jieqiboh"},"content":"                        break;","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"jieqiboh"},"content":"                    case \"mark\":","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"jieqiboh"},"content":"                        if (params.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"jieqiboh"},"content":"                            throw new DukeException.MarkParamsException();","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"jieqiboh"},"content":"                        }","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"jieqiboh"},"content":"                        int num \u003d Integer.valueOf(params);","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"jieqiboh"},"content":"                        myTasks.markTask(num);","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"jieqiboh"},"content":"                        Task t \u003d myTasks.getTask(num);","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"jieqiboh"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"jieqiboh"},"content":"                        System.out.println(t);","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"jieqiboh"},"content":"                        break;","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"jieqiboh"},"content":"                    case \"unmark\":","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"jieqiboh"},"content":"                        if (params.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"jieqiboh"},"content":"                            throw new DukeException.MarkParamsException();","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"jieqiboh"},"content":"                        }","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"jieqiboh"},"content":"                        num \u003d Integer.valueOf(params);","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"jieqiboh"},"content":"                        myTasks.unmarkTask(num);","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"jieqiboh"},"content":"                        t \u003d myTasks.getTask(num);","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"jieqiboh"},"content":"                        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"jieqiboh"},"content":"                        System.out.println(t);","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"jieqiboh"},"content":"                        break;","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"jieqiboh"},"content":"                    case \"delete\":","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"jieqiboh"},"content":"                        if (params.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"jieqiboh"},"content":"                            throw new DukeException.DeleteParamsException();","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"jieqiboh"},"content":"                        }","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"jieqiboh"},"content":"                        num \u003d Integer.valueOf(params);","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"jieqiboh"},"content":"                        Task toDelete \u003d myTasks.getTask(num);","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"jieqiboh"},"content":"                        myTasks.deleteTask(num);","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"jieqiboh"},"content":"                        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"jieqiboh"},"content":"                        System.out.println(toDelete);","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"jieqiboh"},"content":"                        System.out.println(\"Now you have \" + myTasks.size() + \" tasks in the list\");","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"jieqiboh"},"content":"                        break;","lastModifiedDate":"2024-01-23"},{"lineNumber":73,"author":{"gitId":"jieqiboh"},"content":"                    case \"todo\":","lastModifiedDate":"2024-01-23"},{"lineNumber":74,"author":{"gitId":"jieqiboh"},"content":"                        if (params.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":75,"author":{"gitId":"jieqiboh"},"content":"                            throw new DukeException.TodoDescriptionMissingException();","lastModifiedDate":"2024-01-23"},{"lineNumber":76,"author":{"gitId":"jieqiboh"},"content":"                        }","lastModifiedDate":"2024-01-23"},{"lineNumber":77,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":78,"author":{"gitId":"jieqiboh"},"content":"                        String desc \u003d params;","lastModifiedDate":"2024-01-23"},{"lineNumber":79,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"jieqiboh"},"content":"                        Task newTask \u003d new Todo(desc);","lastModifiedDate":"2024-01-23"},{"lineNumber":81,"author":{"gitId":"jieqiboh"},"content":"                        myTasks.addTask(newTask);","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":83,"author":{"gitId":"jieqiboh"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":84,"author":{"gitId":"jieqiboh"},"content":"                        System.out.println(newTask);","lastModifiedDate":"2024-01-23"},{"lineNumber":85,"author":{"gitId":"jieqiboh"},"content":"                        System.out.println(\"Now you have \" + myTasks.size() + \" tasks in the list\");","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"jieqiboh"},"content":"                        break;","lastModifiedDate":"2024-01-23"},{"lineNumber":87,"author":{"gitId":"jieqiboh"},"content":"                    case \"deadline\":","lastModifiedDate":"2024-01-23"},{"lineNumber":88,"author":{"gitId":"jieqiboh"},"content":"                        if (!params.contains(\"/by\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":89,"author":{"gitId":"jieqiboh"},"content":"                            throw new DukeException.DeadlineDetailsMissingException();","lastModifiedDate":"2024-01-23"},{"lineNumber":90,"author":{"gitId":"jieqiboh"},"content":"                        }","lastModifiedDate":"2024-01-23"},{"lineNumber":91,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":92,"author":{"gitId":"jieqiboh"},"content":"                        desc \u003d params.split(\"/by\")[0].trim();","lastModifiedDate":"2024-01-23"},{"lineNumber":93,"author":{"gitId":"jieqiboh"},"content":"                        String by \u003d params.split(\"/by\")[1].trim();","lastModifiedDate":"2024-01-23"},{"lineNumber":94,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":95,"author":{"gitId":"jieqiboh"},"content":"                        // Check if by is in valid date format","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"jieqiboh"},"content":"                        if (Dates.isValidInputDate(by)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"jieqiboh"},"content":"                            LocalDateTime dateObj \u003d Dates.inputStr2DateTime(by);","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"jieqiboh"},"content":"                            newTask \u003d new Deadline(desc, dateObj); // Create date object","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"jieqiboh"},"content":"                        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"jieqiboh"},"content":"                            newTask \u003d new Deadline(desc, by);","lastModifiedDate":"2024-01-23"},{"lineNumber":101,"author":{"gitId":"jieqiboh"},"content":"                        }","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"jieqiboh"},"content":"                        myTasks.addTask(newTask);","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":104,"author":{"gitId":"jieqiboh"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":105,"author":{"gitId":"jieqiboh"},"content":"                        System.out.println(newTask);","lastModifiedDate":"2024-01-23"},{"lineNumber":106,"author":{"gitId":"jieqiboh"},"content":"                        System.out.println(\"Now you have \" + myTasks.size() + \" tasks in the list\");","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"jieqiboh"},"content":"                        break;","lastModifiedDate":"2024-01-23"},{"lineNumber":108,"author":{"gitId":"jieqiboh"},"content":"                    case \"event\":","lastModifiedDate":"2024-01-23"},{"lineNumber":109,"author":{"gitId":"jieqiboh"},"content":"                        if (!params.contains(\"/from\") || !params.contains(\"/to\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":110,"author":{"gitId":"jieqiboh"},"content":"                            throw new DukeException.EventDetailsMissingException();","lastModifiedDate":"2024-01-23"},{"lineNumber":111,"author":{"gitId":"jieqiboh"},"content":"                        }","lastModifiedDate":"2024-01-23"},{"lineNumber":112,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":113,"author":{"gitId":"jieqiboh"},"content":"                        desc \u003d params.split(\"/from\")[0];","lastModifiedDate":"2024-01-23"},{"lineNumber":114,"author":{"gitId":"jieqiboh"},"content":"                        String from \u003d params.split(\"/from\")[1].split(\"/to\")[0].trim();","lastModifiedDate":"2024-01-23"},{"lineNumber":115,"author":{"gitId":"jieqiboh"},"content":"                        String to \u003d params.split(\"/to\")[1].trim();","lastModifiedDate":"2024-01-23"},{"lineNumber":116,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":117,"author":{"gitId":"jieqiboh"},"content":"                        if (Dates.isValidInputDate(from) \u0026\u0026 Dates.isValidInputDate(to)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":118,"author":{"gitId":"jieqiboh"},"content":"                            LocalDateTime dateObjFrom \u003d Dates.inputStr2DateTime(from);","lastModifiedDate":"2024-01-27"},{"lineNumber":119,"author":{"gitId":"jieqiboh"},"content":"                            LocalDateTime dateObjTo \u003d Dates.inputStr2DateTime(to);","lastModifiedDate":"2024-01-27"},{"lineNumber":120,"author":{"gitId":"jieqiboh"},"content":"                            newTask \u003d new Event(desc, dateObjFrom, dateObjTo); // Create date object","lastModifiedDate":"2024-01-27"},{"lineNumber":121,"author":{"gitId":"jieqiboh"},"content":"                        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":122,"author":{"gitId":"jieqiboh"},"content":"                            newTask \u003d new Event(desc, from, to);","lastModifiedDate":"2024-01-23"},{"lineNumber":123,"author":{"gitId":"jieqiboh"},"content":"                        }","lastModifiedDate":"2024-01-27"},{"lineNumber":124,"author":{"gitId":"jieqiboh"},"content":"                        myTasks.addTask(newTask);","lastModifiedDate":"2024-01-27"},{"lineNumber":125,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":126,"author":{"gitId":"jieqiboh"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":127,"author":{"gitId":"jieqiboh"},"content":"                        System.out.println(newTask);","lastModifiedDate":"2024-01-23"},{"lineNumber":128,"author":{"gitId":"jieqiboh"},"content":"                        System.out.println(\"Now you have \" + myTasks.size() + \" tasks in the list\");","lastModifiedDate":"2024-01-27"},{"lineNumber":129,"author":{"gitId":"jieqiboh"},"content":"                        break;","lastModifiedDate":"2024-01-27"},{"lineNumber":130,"author":{"gitId":"jieqiboh"},"content":"                    case \"clear\":","lastModifiedDate":"2024-01-27"},{"lineNumber":131,"author":{"gitId":"jieqiboh"},"content":"                        myTasks.clear();","lastModifiedDate":"2024-01-27"},{"lineNumber":132,"author":{"gitId":"jieqiboh"},"content":"                        System.out.println(\"Got it. I\u0027ve cleared the database.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":133,"author":{"gitId":"jieqiboh"},"content":"                        break;","lastModifiedDate":"2024-01-23"},{"lineNumber":134,"author":{"gitId":"jieqiboh"},"content":"                    default:","lastModifiedDate":"2024-01-23"},{"lineNumber":135,"author":{"gitId":"jieqiboh"},"content":"                        throw new DukeException.UnknownCommandException();","lastModifiedDate":"2024-01-23"},{"lineNumber":136,"author":{"gitId":"jieqiboh"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":137,"author":{"gitId":"jieqiboh"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":138,"author":{"gitId":"jieqiboh"},"content":"                System.out.println(\"DukeException: \" + e.getMessage());","lastModifiedDate":"2024-01-23"},{"lineNumber":139,"author":{"gitId":"jieqiboh"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":140,"author":{"gitId":"jieqiboh"},"content":"                System.out.println(e);","lastModifiedDate":"2024-01-27"},{"lineNumber":141,"author":{"gitId":"jieqiboh"},"content":"                System.out.println(\"An unexpected error occurred.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":142,"author":{"gitId":"jieqiboh"},"content":"            } finally {","lastModifiedDate":"2024-01-23"},{"lineNumber":143,"author":{"gitId":"jieqiboh"},"content":"                System.out.println(border);","lastModifiedDate":"2024-01-23"},{"lineNumber":144,"author":{"gitId":"jieqiboh"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":145,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":146,"author":{"gitId":"jieqiboh"},"content":"            line \u003d scanner.nextLine();","lastModifiedDate":"2024-01-23"},{"lineNumber":147,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":148,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":149,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":150,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(goodbye);","lastModifiedDate":"2024-01-22"},{"lineNumber":151,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jieqiboh":149,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"    // unknown command","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"    //  todo - no description","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"    // event - no description, no from, no to","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"    // deadline - no description, no by","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"        super(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"    // Custom exception for unknown command","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"    public static class UnknownCommandException extends DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"        public UnknownCommandException() {","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"            super(\"Unknown command. Please enter a valid command :3\");","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"    // Custom exception for unknown command","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"    public static class MarkParamsException extends DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"        public MarkParamsException() {","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"            super(\"An integer argument is expected for a mark or unmark command :3\");","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"    public static class DeleteParamsException extends DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"        public DeleteParamsException() {","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"            super(\"An integer argument is expected for a delete command.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"    // Custom exception for \"todo\" command without a description","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"    public static class TodoDescriptionMissingException extends DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"jieqiboh"},"content":"        public TodoDescriptionMissingException() {","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"jieqiboh"},"content":"            super(\"The description for a todo task cannot be empty :3\");","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"jieqiboh"},"content":"    // Custom exception for \"event\" command without a description, from, or to","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"jieqiboh"},"content":"    public static class EventDetailsMissingException extends DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"jieqiboh"},"content":"        public EventDetailsMissingException() {","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"jieqiboh"},"content":"            super(\"An event task must have a description, a \u0027from\u0027 time, and a \u0027to\u0027 time :3\");","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"jieqiboh"},"content":"    // Custom exception for \"deadline\" command without a description or by","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"jieqiboh"},"content":"    public static class DeadlineDetailsMissingException extends DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"jieqiboh"},"content":"        public DeadlineDetailsMissingException() {","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"jieqiboh"},"content":"            super(\"A deadline task must have a description and a \u0027by\u0027 time :3\");","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"jieqiboh"},"content":"    // Custom exception for getTask where index is wrong, or the entry is not of type T, E, D","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"jieqiboh"},"content":"    public static class GetTaskException extends DukeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"jieqiboh"},"content":"        public GetTaskException() {","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"jieqiboh"},"content":"            super(\"An error occurred when getting task, reinput your index!\");","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"jieqiboh":58}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"    protected String from;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"    protected String to;","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"     * Default constructor, isDone set to false","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"     * @param description of Event","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"     * @param from is the start time of event","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"     * @param to is the end time of event","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"    public Event(String description, Boolean isDone, String from, String to) {","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"        super(description);","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"        // convert From and To datetime objects to their database string representations","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"        this.from \u003d Dates.dateTime2DbStr(from);","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"        this.to \u003d Dates.dateTime2DbStr(to);","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"jieqiboh"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"jieqiboh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"jieqiboh"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"jieqiboh"},"content":"     * Converts the database representation of Event to a Event Task","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"jieqiboh"},"content":"     * @param dbEvent the string rep of Event in the database","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"jieqiboh"},"content":"     * @return Task the Event Task object","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"jieqiboh"},"content":"    public static Event db2Event(String dbEvent) {","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"jieqiboh"},"content":"        // E | 0 | project meeting | Aug 6th 2 | 4pm","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"jieqiboh"},"content":"        String[] params \u003d dbEvent.split(\" \\\\| \");","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"jieqiboh"},"content":"        Boolean isDone \u003d params[1].equals(\"1\") ? true : false; // if \"1\", means isDone","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"jieqiboh"},"content":"        String desc \u003d params[2];","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"jieqiboh"},"content":"        String from \u003d params[3];","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"jieqiboh"},"content":"        String to \u003d params[4];","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"jieqiboh"},"content":"        return new Event(desc, isDone, from, to);","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"jieqiboh"},"content":"     * Converts a Event Task to the database representation of Event","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"jieqiboh"},"content":"     * @param eventTask the Event Task object","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"jieqiboh"},"content":"     * @return Task the string rep of Event in the database","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"jieqiboh"},"content":"    public static String event2Db(Event eventTask) {","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"jieqiboh"},"content":"        // E | 0 | project meeting | Aug 6th 2 | 4pm","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"jieqiboh"},"content":"        String done \u003d eventTask.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"jieqiboh"},"content":"        String desc \u003d eventTask.description;","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"jieqiboh"},"content":"        String from \u003d eventTask.from;","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"jieqiboh"},"content":"        String to \u003d eventTask.to;","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"jieqiboh"},"content":"        return \"E\" + \" | \" + done + \" | \" + desc + \" | \" + from + \" | \" + to;","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"jieqiboh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"jieqiboh"},"content":"        String dbEvent \u003d \"E | 0 | project meeting | Aug 6th 2 | 4pm\";","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"jieqiboh"},"content":"        Event eventTask \u003d Event.db2Event(dbEvent);","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"jieqiboh"},"content":"        eventTask.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(eventTask);","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(Event.event2Db(eventTask));","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"jieqiboh"},"content":"        // Test creating an event with valid date","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"jieqiboh"},"content":"        String desc \u003d \"Buy Bread\";","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"jieqiboh"},"content":"        String validFromDate1 \u003d \"15/01/2023 1430\";","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"jieqiboh"},"content":"        String validToDate1 \u003d \"17/01/2023 2359\";","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"jieqiboh"},"content":"        if (Dates.isValidInputDate(validFromDate1) \u0026\u0026 Dates.isValidInputDate(validToDate1)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"jieqiboh"},"content":"            LocalDateTime validFromDateObj1 \u003d Dates.inputStr2DateTime(validFromDate1);","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"jieqiboh"},"content":"            LocalDateTime validToDateObj1 \u003d Dates.inputStr2DateTime(validToDate1);","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"jieqiboh"},"content":"            Event e \u003d new Event(desc, validFromDateObj1, validToDateObj1); // Create date object","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"jieqiboh"},"content":"            e.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(Event.event2Db(e));","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"jieqiboh":86}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"public class Parser {","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"jieqiboh":2}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"public class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"    protected String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"    public Task(String description, Boolean isDone) {","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"jieqiboh":33}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"import java.util.List;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"public class TaskList {","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"    private TaskListFileHandler database;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"    private String filepath \u003d Duke.DBPATH;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"    // Todo representation - 0 means not done, 1 means done","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"    // T | done? | desc","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"    // Deadline representation","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"    // D | done? | desc | by","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"    // Event representation","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"    // E | done? | desc | from | to","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"//        String projectRoot \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"//        this.filepath \u003d projectRoot + \"/data/duke.txt\";","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"        this.database \u003d new TaskListFileHandler(filepath);","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"    // Add a task to the task list","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"        // Based on task type, extract traits","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"        String dbTask \u003d TaskList.task2Db(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"            this.database.appendToFile(dbTask);","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"Failed to add task: \" + e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"jieqiboh"},"content":"    // Get a task from the task list, given its line number index","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"jieqiboh"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"jieqiboh"},"content":"            String line \u003d this.database.readLineFromFile(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"jieqiboh"},"content":"            return TaskList.db2Task(line);","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"jieqiboh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"Failed to get task: \" + e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"jieqiboh"},"content":"        return null;","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"jieqiboh"},"content":"    // Delete a task from the task list, given its index","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"jieqiboh"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"jieqiboh"},"content":"            this.database.deleteLineFromFile(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"jieqiboh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"Failed to delete task: \" + e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"jieqiboh"},"content":"     * markTask marks a task as completed by line number","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"jieqiboh"},"content":"     * @param index","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"jieqiboh"},"content":"    public void markTask(int index) {","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"jieqiboh"},"content":"            String line \u003d this.database.readLineFromFile(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"jieqiboh"},"content":"            Task t \u003d TaskList.db2Task(line);","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"jieqiboh"},"content":"            t.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"jieqiboh"},"content":"            String newDbTask \u003d TaskList.task2Db(t);","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"jieqiboh"},"content":"            this.database.writeLineToFile(index, newDbTask);","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"jieqiboh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"Failed to mark task as complete: \" + e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"jieqiboh"},"content":"     * unmarkTask unmarks a task as completed by line number","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"jieqiboh"},"content":"     * @param index","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"jieqiboh"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"jieqiboh"},"content":"            String line \u003d this.database.readLineFromFile(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"jieqiboh"},"content":"            Task t \u003d TaskList.db2Task(line);","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"jieqiboh"},"content":"            t.unmarkAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"jieqiboh"},"content":"            String newDbTask \u003d TaskList.task2Db(t);","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"jieqiboh"},"content":"            this.database.writeLineToFile(index, newDbTask);","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"jieqiboh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"Failed to unmark task as completed: \" + e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"jieqiboh"},"content":"     * Prints out the contents of the tasklist","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"jieqiboh"},"content":"    public void printTasks() {","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"jieqiboh"},"content":"            List\u003cString\u003e tasks \u003d this.database.readLinesFromFile();","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"jieqiboh"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-23"},{"lineNumber":96,"author":{"gitId":"jieqiboh"},"content":"                String line \u003d tasks.get(i);","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"jieqiboh"},"content":"                Task t \u003d db2Task(line);","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"jieqiboh"},"content":"                System.out.println((i + 1) + \". \" + t);","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"jieqiboh"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"jieqiboh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"Failed to print tasklist: \" + e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":103,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":104,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":105,"author":{"gitId":"jieqiboh"},"content":"    public int size() {","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"jieqiboh"},"content":"            return this.database.readLinesFromFile().size();","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"jieqiboh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"Failed to get size: \" + e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":111,"author":{"gitId":"jieqiboh"},"content":"        return 0;","lastModifiedDate":"2024-01-27"},{"lineNumber":112,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":113,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":114,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":115,"author":{"gitId":"jieqiboh"},"content":"     * Clears your database file","lastModifiedDate":"2024-01-27"},{"lineNumber":116,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":117,"author":{"gitId":"jieqiboh"},"content":"    public void clear() {","lastModifiedDate":"2024-01-27"},{"lineNumber":118,"author":{"gitId":"jieqiboh"},"content":"        this.database.clearFile();","lastModifiedDate":"2024-01-27"},{"lineNumber":119,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":120,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":121,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":122,"author":{"gitId":"jieqiboh"},"content":"     * Converts the database representation of a Task to the Task object","lastModifiedDate":"2024-01-27"},{"lineNumber":123,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":124,"author":{"gitId":"jieqiboh"},"content":"     * @param dbTask the string rep of the Task in the database","lastModifiedDate":"2024-01-27"},{"lineNumber":125,"author":{"gitId":"jieqiboh"},"content":"     * @return Task the Task object","lastModifiedDate":"2024-01-27"},{"lineNumber":126,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":127,"author":{"gitId":"jieqiboh"},"content":"    public static Task db2Task(String dbTask) {","lastModifiedDate":"2024-01-27"},{"lineNumber":128,"author":{"gitId":"jieqiboh"},"content":"        String[] params \u003d dbTask.split(\" \\\\| \");","lastModifiedDate":"2024-01-27"},{"lineNumber":129,"author":{"gitId":"jieqiboh"},"content":"        String type \u003d params[0];","lastModifiedDate":"2024-01-27"},{"lineNumber":130,"author":{"gitId":"jieqiboh"},"content":"        switch (type) {","lastModifiedDate":"2024-01-27"},{"lineNumber":131,"author":{"gitId":"jieqiboh"},"content":"            case \"T\": //  To do","lastModifiedDate":"2024-01-27"},{"lineNumber":132,"author":{"gitId":"jieqiboh"},"content":"                Todo todoTask \u003d Todo.db2Todo(dbTask);","lastModifiedDate":"2024-01-27"},{"lineNumber":133,"author":{"gitId":"jieqiboh"},"content":"                return todoTask;","lastModifiedDate":"2024-01-27"},{"lineNumber":134,"author":{"gitId":"jieqiboh"},"content":"            case \"D\": // Deadline","lastModifiedDate":"2024-01-27"},{"lineNumber":135,"author":{"gitId":"jieqiboh"},"content":"                Deadline deadlineTask \u003d Deadline.db2Deadline(dbTask);","lastModifiedDate":"2024-01-27"},{"lineNumber":136,"author":{"gitId":"jieqiboh"},"content":"                return deadlineTask;","lastModifiedDate":"2024-01-27"},{"lineNumber":137,"author":{"gitId":"jieqiboh"},"content":"            case \"E\": // Event","lastModifiedDate":"2024-01-27"},{"lineNumber":138,"author":{"gitId":"jieqiboh"},"content":"                Event eventTask \u003d Event.db2Event(dbTask);","lastModifiedDate":"2024-01-27"},{"lineNumber":139,"author":{"gitId":"jieqiboh"},"content":"                return eventTask;","lastModifiedDate":"2024-01-27"},{"lineNumber":140,"author":{"gitId":"jieqiboh"},"content":"            default:","lastModifiedDate":"2024-01-27"},{"lineNumber":141,"author":{"gitId":"jieqiboh"},"content":"                return null;","lastModifiedDate":"2024-01-27"},{"lineNumber":142,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":143,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":144,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":145,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":146,"author":{"gitId":"jieqiboh"},"content":"     * Converts a Task to their database representation","lastModifiedDate":"2024-01-27"},{"lineNumber":147,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":148,"author":{"gitId":"jieqiboh"},"content":"     * @param task the Task object","lastModifiedDate":"2024-01-27"},{"lineNumber":149,"author":{"gitId":"jieqiboh"},"content":"     * @return String the string rep of Task in the database","lastModifiedDate":"2024-01-27"},{"lineNumber":150,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":151,"author":{"gitId":"jieqiboh"},"content":"    public static String task2Db(Task task) {","lastModifiedDate":"2024-01-27"},{"lineNumber":152,"author":{"gitId":"jieqiboh"},"content":"        // Based on task type, extract traits","lastModifiedDate":"2024-01-27"},{"lineNumber":153,"author":{"gitId":"jieqiboh"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2024-01-27"},{"lineNumber":154,"author":{"gitId":"jieqiboh"},"content":"            Todo todoTask \u003d (Todo) task;","lastModifiedDate":"2024-01-27"},{"lineNumber":155,"author":{"gitId":"jieqiboh"},"content":"            return Todo.todo2Db(todoTask);","lastModifiedDate":"2024-01-27"},{"lineNumber":156,"author":{"gitId":"jieqiboh"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2024-01-27"},{"lineNumber":157,"author":{"gitId":"jieqiboh"},"content":"            Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2024-01-27"},{"lineNumber":158,"author":{"gitId":"jieqiboh"},"content":"            return Deadline.deadline2Db(deadlineTask);","lastModifiedDate":"2024-01-27"},{"lineNumber":159,"author":{"gitId":"jieqiboh"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-01-27"},{"lineNumber":160,"author":{"gitId":"jieqiboh"},"content":"            Event eventTask \u003d (Event) task;","lastModifiedDate":"2024-01-27"},{"lineNumber":161,"author":{"gitId":"jieqiboh"},"content":"            return Event.event2Db(eventTask);","lastModifiedDate":"2024-01-27"},{"lineNumber":162,"author":{"gitId":"jieqiboh"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":163,"author":{"gitId":"jieqiboh"},"content":"            return null;","lastModifiedDate":"2024-01-27"},{"lineNumber":164,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":165,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":166,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":167,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":168,"author":{"gitId":"jieqiboh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-23"},{"lineNumber":169,"author":{"gitId":"jieqiboh"},"content":"        TaskList testTaskList \u003d new TaskList();","lastModifiedDate":"2024-01-27"},{"lineNumber":170,"author":{"gitId":"jieqiboh"},"content":"        testTaskList.database.clearFile();","lastModifiedDate":"2024-01-27"},{"lineNumber":171,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":172,"author":{"gitId":"jieqiboh"},"content":"        // printTaskStatus","lastModifiedDate":"2024-01-27"},{"lineNumber":173,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(\"Current Task list: \");","lastModifiedDate":"2024-01-27"},{"lineNumber":174,"author":{"gitId":"jieqiboh"},"content":"        testTaskList.printTasks();","lastModifiedDate":"2024-01-27"},{"lineNumber":175,"author":{"gitId":"jieqiboh"},"content":"        System.out.println();","lastModifiedDate":"2024-01-27"},{"lineNumber":176,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":177,"author":{"gitId":"jieqiboh"},"content":"        // Get Todo Task","lastModifiedDate":"2024-01-27"},{"lineNumber":178,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(\"Successfully got todo task: \" + testTaskList.getTask(1));","lastModifiedDate":"2024-01-27"},{"lineNumber":179,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":180,"author":{"gitId":"jieqiboh"},"content":"        // Get Event Task","lastModifiedDate":"2024-01-27"},{"lineNumber":181,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(\"Successfully got event task: \" + testTaskList.getTask(2));","lastModifiedDate":"2024-01-27"},{"lineNumber":182,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":183,"author":{"gitId":"jieqiboh"},"content":"        // Get Deadline Task","lastModifiedDate":"2024-01-27"},{"lineNumber":184,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(\"Successfully got deadline task: \" + testTaskList.getTask(3));","lastModifiedDate":"2024-01-27"},{"lineNumber":185,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":186,"author":{"gitId":"jieqiboh"},"content":"        // printTasks","lastModifiedDate":"2024-01-27"},{"lineNumber":187,"author":{"gitId":"jieqiboh"},"content":"        System.out.println();","lastModifiedDate":"2024-01-27"},{"lineNumber":188,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(\"Task list before deletion: \");","lastModifiedDate":"2024-01-27"},{"lineNumber":189,"author":{"gitId":"jieqiboh"},"content":"        testTaskList.printTasks();","lastModifiedDate":"2024-01-27"},{"lineNumber":190,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":191,"author":{"gitId":"jieqiboh"},"content":"        // Delete Event Task","lastModifiedDate":"2024-01-27"},{"lineNumber":192,"author":{"gitId":"jieqiboh"},"content":"        testTaskList.deleteTask(2);","lastModifiedDate":"2024-01-27"},{"lineNumber":193,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":194,"author":{"gitId":"jieqiboh"},"content":"        // Delete Deadline Task","lastModifiedDate":"2024-01-27"},{"lineNumber":195,"author":{"gitId":"jieqiboh"},"content":"        testTaskList.deleteTask(2);","lastModifiedDate":"2024-01-27"},{"lineNumber":196,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":197,"author":{"gitId":"jieqiboh"},"content":"        // printTasks","lastModifiedDate":"2024-01-27"},{"lineNumber":198,"author":{"gitId":"jieqiboh"},"content":"        System.out.println();","lastModifiedDate":"2024-01-27"},{"lineNumber":199,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(\"Task list after deletion: \");","lastModifiedDate":"2024-01-27"},{"lineNumber":200,"author":{"gitId":"jieqiboh"},"content":"        testTaskList.printTasks();","lastModifiedDate":"2024-01-27"},{"lineNumber":201,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":202,"author":{"gitId":"jieqiboh"},"content":"        // mark task 1","lastModifiedDate":"2024-01-27"},{"lineNumber":203,"author":{"gitId":"jieqiboh"},"content":"        System.out.println();","lastModifiedDate":"2024-01-27"},{"lineNumber":204,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(\"Marking task 1\");","lastModifiedDate":"2024-01-27"},{"lineNumber":205,"author":{"gitId":"jieqiboh"},"content":"        testTaskList.markTask(1);","lastModifiedDate":"2024-01-27"},{"lineNumber":206,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":207,"author":{"gitId":"jieqiboh"},"content":"        // printTasks","lastModifiedDate":"2024-01-27"},{"lineNumber":208,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(\"Tasks after marking T1: \");","lastModifiedDate":"2024-01-27"},{"lineNumber":209,"author":{"gitId":"jieqiboh"},"content":"        testTaskList.printTasks();","lastModifiedDate":"2024-01-27"},{"lineNumber":210,"author":{"gitId":"jieqiboh"},"content":"        System.out.println();","lastModifiedDate":"2024-01-27"},{"lineNumber":211,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":212,"author":{"gitId":"jieqiboh"},"content":"        // unmark task 1","lastModifiedDate":"2024-01-27"},{"lineNumber":213,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(\"Unmarking task 1\");","lastModifiedDate":"2024-01-27"},{"lineNumber":214,"author":{"gitId":"jieqiboh"},"content":"        testTaskList.unmarkTask(1);","lastModifiedDate":"2024-01-27"},{"lineNumber":215,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":216,"author":{"gitId":"jieqiboh"},"content":"        // printTasks","lastModifiedDate":"2024-01-27"},{"lineNumber":217,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(\"Tasks after unmarking T1: \");","lastModifiedDate":"2024-01-27"},{"lineNumber":218,"author":{"gitId":"jieqiboh"},"content":"        testTaskList.printTasks();","lastModifiedDate":"2024-01-27"},{"lineNumber":219,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":220,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"jieqiboh":220}},{"path":"src/main/java/TaskListFileHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"import java.io.File;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"import java.util.List;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":" * Used by the TaskList class, and handles reading, writing and deleting from lines in the file","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"public class TaskListFileHandler {","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"    private String filepath;","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"    private File file;","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"    public TaskListFileHandler(String filepath) {","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"            File file \u003d new File(this.filepath); // Used for read and write operations to the file","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"            file.createNewFile(); // creates a new file if needed","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"Failed to create database file: \" + e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"     * Reads all lines of the file into a List\u003cString\u003e","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"     * @return List\u003cString\u003e that contains all lines of the file","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"jieqiboh"},"content":"    public List\u003cString\u003e readLinesFromFile() throws IOException  {","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"jieqiboh"},"content":"        return Files.readAllLines(Paths.get(this.filepath));","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"jieqiboh"},"content":"     * Appends text to the end of the file","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"jieqiboh"},"content":"     * @param textToAppend is text to append to end of file","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"jieqiboh"},"content":"     * @throws IOException","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"jieqiboh"},"content":"    public void appendToFile(String textToAppend) throws IOException {","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"jieqiboh"},"content":"        FileWriter fw \u003d new FileWriter(this.filepath, true); // create a FileWriter in append mode","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"jieqiboh"},"content":"        fw.write(textToAppend + \"\\n\");","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"jieqiboh"},"content":"        fw.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"jieqiboh"},"content":"     * Overwrites the content at lineNumber with newContent","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"jieqiboh"},"content":"     * @param lineNumber to be replaced","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"jieqiboh"},"content":"     * @param newContent","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"jieqiboh"},"content":"    public void writeLineToFile(int lineNumber, String newContent) throws IOException {","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"jieqiboh"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(Paths.get(filepath));","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"jieqiboh"},"content":"        if (lineNumber \u003e\u003d 1 \u0026\u0026 lineNumber \u003c\u003d lines.size()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"jieqiboh"},"content":"            lines.set(lineNumber - 1, newContent);","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"jieqiboh"},"content":"            Files.write(Paths.get(filepath), lines);","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"jieqiboh"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"Line number out of range\");","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"jieqiboh"},"content":"     * Reads a line at a specified line number","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"jieqiboh"},"content":"     * @param lineNumber to read","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"jieqiboh"},"content":"     * @return String line which was read","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"jieqiboh"},"content":"    public String readLineFromFile(int lineNumber) throws IOException {","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"jieqiboh"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(Paths.get(filepath));","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"jieqiboh"},"content":"        if (lineNumber \u003e\u003d 1 \u0026\u0026 lineNumber \u003c\u003d lines.size()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"jieqiboh"},"content":"            return lines.get(lineNumber - 1);","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"jieqiboh"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"Line number out of range\");","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"jieqiboh"},"content":"            return null;","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"jieqiboh"},"content":"     * Deletes a line at a specified line number","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"jieqiboh"},"content":"     * @param lineNumber to delete","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"jieqiboh"},"content":"    public void deleteLineFromFile(int lineNumber) throws IOException {","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"jieqiboh"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(Paths.get(filepath));","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"jieqiboh"},"content":"        if (lineNumber \u003e\u003d 1 \u0026\u0026 lineNumber \u003c\u003d lines.size()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"jieqiboh"},"content":"            lines.remove(lineNumber - 1);","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"jieqiboh"},"content":"            Files.write(Paths.get(filepath), lines);","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"jieqiboh"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"Line number out of range\");","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"jieqiboh"},"content":"     * Deletes the contents of the file","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"jieqiboh"},"content":"    public void clearFile() {","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"jieqiboh"},"content":"            Files.write(Paths.get(filepath), new byte[0]);","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"jieqiboh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"jieqiboh"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"jieqiboh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-27"},{"lineNumber":111,"author":{"gitId":"jieqiboh"},"content":"        String filePath \u003d \"data/duketest.txt\";","lastModifiedDate":"2024-01-27"},{"lineNumber":112,"author":{"gitId":"jieqiboh"},"content":"        TaskListFileHandler fileHandler \u003d new TaskListFileHandler(filePath);","lastModifiedDate":"2024-01-27"},{"lineNumber":113,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":114,"author":{"gitId":"jieqiboh"},"content":"        // Clear and init data/duke.txt","lastModifiedDate":"2024-01-27"},{"lineNumber":115,"author":{"gitId":"jieqiboh"},"content":"        fileHandler.clearFile();","lastModifiedDate":"2024-01-27"},{"lineNumber":116,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":117,"author":{"gitId":"jieqiboh"},"content":"            fileHandler.appendToFile( \"T | 1 | read book\");","lastModifiedDate":"2024-01-27"},{"lineNumber":118,"author":{"gitId":"jieqiboh"},"content":"            fileHandler.appendToFile(\"D | 0 | return book | June 6th\");","lastModifiedDate":"2024-01-27"},{"lineNumber":119,"author":{"gitId":"jieqiboh"},"content":"            fileHandler.appendToFile(\"E | 0 | project meeting | Aug 6th 2 | 4pm\");","lastModifiedDate":"2024-01-27"},{"lineNumber":120,"author":{"gitId":"jieqiboh"},"content":"            fileHandler.appendToFile( \"T | 1 | join sports club\");","lastModifiedDate":"2024-01-27"},{"lineNumber":121,"author":{"gitId":"jieqiboh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":122,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"Append to file failed: \" + e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":123,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":124,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":125,"author":{"gitId":"jieqiboh"},"content":"        // Print lines","lastModifiedDate":"2024-01-27"},{"lineNumber":126,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":127,"author":{"gitId":"jieqiboh"},"content":"            fileHandler.readLinesFromFile().forEach(System.out::println);","lastModifiedDate":"2024-01-27"},{"lineNumber":128,"author":{"gitId":"jieqiboh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":129,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"read lines from file failed: \" + e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":130,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":131,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":132,"author":{"gitId":"jieqiboh"},"content":"        // Write to line number 2","lastModifiedDate":"2024-01-27"},{"lineNumber":133,"author":{"gitId":"jieqiboh"},"content":"        System.out.println();","lastModifiedDate":"2024-01-27"},{"lineNumber":134,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(\"Writing to line number 2\");","lastModifiedDate":"2024-01-27"},{"lineNumber":135,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":136,"author":{"gitId":"jieqiboh"},"content":"            fileHandler.writeLineToFile(2, \"D | 0 | updated task | June 8th\");","lastModifiedDate":"2024-01-27"},{"lineNumber":137,"author":{"gitId":"jieqiboh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":138,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"write lines to file failed: \" + e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":139,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":140,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":141,"author":{"gitId":"jieqiboh"},"content":"        // Print lines","lastModifiedDate":"2024-01-27"},{"lineNumber":142,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":143,"author":{"gitId":"jieqiboh"},"content":"            fileHandler.readLinesFromFile().forEach(System.out::println);","lastModifiedDate":"2024-01-27"},{"lineNumber":144,"author":{"gitId":"jieqiboh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":145,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"read lines from file failed: \" + e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":146,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":147,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":148,"author":{"gitId":"jieqiboh"},"content":"        // Read from line number 3","lastModifiedDate":"2024-01-27"},{"lineNumber":149,"author":{"gitId":"jieqiboh"},"content":"        System.out.println();","lastModifiedDate":"2024-01-27"},{"lineNumber":150,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":151,"author":{"gitId":"jieqiboh"},"content":"            String line \u003d fileHandler.readLineFromFile(3);","lastModifiedDate":"2024-01-27"},{"lineNumber":152,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"Read L3: \" + line);","lastModifiedDate":"2024-01-27"},{"lineNumber":153,"author":{"gitId":"jieqiboh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":154,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"readlines failed: \" + e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":155,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":156,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":157,"author":{"gitId":"jieqiboh"},"content":"        // Delete L4","lastModifiedDate":"2024-01-27"},{"lineNumber":158,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(\"Delete from L2\");","lastModifiedDate":"2024-01-27"},{"lineNumber":159,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":160,"author":{"gitId":"jieqiboh"},"content":"            fileHandler.deleteLineFromFile(2);","lastModifiedDate":"2024-01-27"},{"lineNumber":161,"author":{"gitId":"jieqiboh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":162,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"delete lines failed: \" + e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":163,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":164,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":165,"author":{"gitId":"jieqiboh"},"content":"        // Display updated file content","lastModifiedDate":"2024-01-27"},{"lineNumber":166,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":167,"author":{"gitId":"jieqiboh"},"content":"            fileHandler.readLinesFromFile().forEach(System.out::println);","lastModifiedDate":"2024-01-27"},{"lineNumber":168,"author":{"gitId":"jieqiboh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":169,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"read lines from file failed: \" + e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":170,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":171,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":172,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"jieqiboh":172}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"     * Default constructor, isDone set to false","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"     * @param description of Todo","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"    public Todo(String description, Boolean isDone) {","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"     * Converts the database representation of Todo to a Todo Task","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"     * @param dbTodo the string rep of Todo in the database","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"     * @return Task the todo Task object","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"    public static Todo db2Todo(String dbTodo) {","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"        // T | 0 | Buy Bread","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"        String[] params \u003d dbTodo.split(\" \\\\| \");","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"        Boolean isDone \u003d params[1].equals(\"1\") ? true : false; // if \"1\", means isDone","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"        String desc \u003d params[2];","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"        return new Todo(desc, isDone);","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"jieqiboh"},"content":"     * Converts the a Todo Task to the database representation of Todo","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"jieqiboh"},"content":"     * @param taskTodo Task the todo Task object","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"jieqiboh"},"content":"     * @return Task the string rep of Todo in the database","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"jieqiboh"},"content":"    public static String todo2Db (Todo todoTask) {","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"jieqiboh"},"content":"        // T | 0 | Buy Bread","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"jieqiboh"},"content":"        String done \u003d todoTask.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"jieqiboh"},"content":"        String desc \u003d todoTask.description;","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"jieqiboh"},"content":"        return \"T\" + \" | \" + done + \" | \" + desc;","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"jieqiboh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"jieqiboh"},"content":"        String dbTodo \u003d \"T | 0 | Buy Bread\";","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"jieqiboh"},"content":"        Todo todoTask \u003d Todo.db2Todo(dbTodo);","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"jieqiboh"},"content":"        todoTask.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(todoTask);","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(Todo.todo2Db(todoTask));","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"jieqiboh":52}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"class TaskListTest {","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"    // To test:","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"    // basic add get delete mark unmark on todo, deadline and event","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"    // stuff to account for","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"    // get task that doesnt exist","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"    // delete task that doesnt exist","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"    // mark and unmark on task that doesnt exist","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"jieqiboh":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"clear","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"todo return book","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"todo","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"event project meeting 2 /from Mon 2pm","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"event project meeting 3 /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"deadline return book","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"mark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"mark 5","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"unmark 5","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"unmark","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"mark","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"delete 1","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"delete 2","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"hi","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"jieqiboh":25}},{"path":"text-ui-test/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"clear","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"event project meeting /from 01/10/2023 0000 /to 01/12/2024 2359","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"event long project meeting /from 01/05/2000 0001 /to 01/05/2020 1000","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"deadline return book /by 01/05/2020 1000","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"event project meeting 2 /from Mon 2pm /to 5pm","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"deadline return book /by today","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"mark 2","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"mark 5","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"unmark 5","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"bye","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"jieqiboh":14}},{"path":"text-ui-test/runtest2.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"then","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"    mkdir ../bin","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"fi","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"# delete output from previous run","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"if [ -e \"./ACTUAL2.TXT\" ]","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"then","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"    rm ACTUAL2.TXT","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"fi","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"then","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"    exit 1","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"fi","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"java -classpath ../bin Duke \u003c input2.txt \u003e ACTUAL2.TXT","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"# convert to UNIX format","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"cp EXPECTED2.TXT EXPECTED-UNIX2.TXT","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"dos2unix ACTUAL2.TXT EXPECTED-UNIX2.TXT","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"# compare the output to the expected output","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"diff ACTUAL2.TXT EXPECTED-UNIX2.TXT","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"then","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"jieqiboh"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"jieqiboh"},"content":"    exit 0","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"jieqiboh"},"content":"else","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"jieqiboh"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"jieqiboh"},"content":"    exit 1","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"jieqiboh"},"content":"fi","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"jieqiboh":38}}]
