[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"# Henry project template","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"3. After that, locate the `src/main/java/Henry.java` file, right-click it, and choose `Run Henry.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"tohlh":2}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"    private final String date;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"    public Deadline(String description, String date) {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"tohlh":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"    private final String from;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"    private final String to;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"tohlh":15}},{"path":"src/main/java/Henry.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"public class Henry {","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"        Task[] items \u003d new Task[100];","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"        int numOfItems \u003d 0;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"        String logo \u003d \"  _    _                       \\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"                \" | |  | |                      \\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"                \" | |__| | ___ _ __  _ __ _   _ \\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"                \" |  __  |/ _ \\\\ \u0027_ \\\\| \u0027__| | | |\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"                \" | |  | |  __/ | | | |  | |_| |\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"                \" |_|  |_|\\\\___|_| |_|_|   \\\\__, |\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"                \"                          __/ |\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"                \"                         |___/ \\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"        String greetMessage \u003d \"Hello! I\u0027m Henry\\nWhat can I do for you?\";","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"        String exitMessage \u003d \"See you again bro!\";","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"        System.out.println(logo);","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"        System.out.println(greetMessage);","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"        System.out.println();","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"        while (true) {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"            String currentMessage \u003d scanner.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"            if (currentMessage.equals(\"bye\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"                System.out.println(exitMessage);","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"            } else if (currentMessage.equals(\"list\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"tohlh"},"content":"                System.out.println(\"Here is a list of tasks:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"tohlh"},"content":"                for (int i \u003d 0; i \u003c numOfItems; i \u003d i + 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"tohlh"},"content":"                    System.out.printf(\"%d. %s\\n\", i + 1, items[i]);","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"tohlh"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"tohlh"},"content":"                System.out.println();","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"tohlh"},"content":"            } else if (currentMessage.startsWith(\"mark\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"tohlh"},"content":"                int index \u003d Integer.parseInt(currentMessage.split(\" \")[1]) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"tohlh"},"content":"                items[index].markAsDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"tohlh"},"content":"                System.out.println(\"This task is marked as done XD\");","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"tohlh"},"content":"                System.out.println(items[index]);","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"tohlh"},"content":"                System.out.println();","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"tohlh"},"content":"            } else if (currentMessage.startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"tohlh"},"content":"                int index \u003d Integer.parseInt(currentMessage.split(\" \")[1]) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"tohlh"},"content":"                items[index].unmarkAsDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"tohlh"},"content":"                System.out.println(\"This task is marked as undone :(\");","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"tohlh"},"content":"                System.out.println(items[index]);","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"tohlh"},"content":"                System.out.println();","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"tohlh"},"content":"            } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"tohlh"},"content":"                if (currentMessage.startsWith(\"todo\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"tohlh"},"content":"                    String description \u003d currentMessage.substring(5);","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"tohlh"},"content":"                    items[numOfItems] \u003d new Todo(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"tohlh"},"content":"                    numOfItems++;","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"tohlh"},"content":"                } else if (currentMessage.startsWith(\"deadline\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"tohlh"},"content":"                    String[] temp \u003d currentMessage.substring(9).split(\" /by \");","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"tohlh"},"content":"                    items[numOfItems] \u003d new Deadline(temp[0], temp[1]);","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"tohlh"},"content":"                    numOfItems++;","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"tohlh"},"content":"                } else if (currentMessage.startsWith(\"event\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"tohlh"},"content":"                    String[] temp \u003d currentMessage.substring(6).split(\" /from | /to \");","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"tohlh"},"content":"                    items[numOfItems] \u003d new Event(temp[0], temp[1], temp[2]);","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"tohlh"},"content":"                    numOfItems++;","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"tohlh"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"tohlh"},"content":"                System.out.println(\"Added this task\");","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"tohlh"},"content":"                System.out.println(items[numOfItems - 1]);","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"tohlh"},"content":"                System.out.printf(\"Now you have %d tasks in the list :(\\n\", numOfItems);","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"tohlh"},"content":"                System.out.println();","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"tohlh"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"tohlh":67}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"tohlh":26}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"class Todo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"tohlh":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"deadline return book /by Thurs 1000","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"event CS3230 exam /from 1300 /to 1500","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"mark 3","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"unmark 3","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"tohlh":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"java -classpath ..\\bin Henry \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"tohlh":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"java -classpath ../bin Henry \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"tohlh":1}}]
