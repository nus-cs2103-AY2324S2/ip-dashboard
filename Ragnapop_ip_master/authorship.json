[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Ragnapop"},"content":"# duke.Duke project template","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Ragnapop"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Ragnapop":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Ragnapop":1,"-":42}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Ragnapop"},"content":"D/1/ return book / 2019-10-15","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Ragnapop"},"content":"D/1/ return book / 2019-10-15","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Ragnapop"},"content":"D/0/ return book / 2019-10-15","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Ragnapop"},"content":"E/0/ fight/2000-01-20/2000-11-20","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Ragnapop"},"content":"D/0/ fight / 2001-11-11","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Ragnapop"},"content":"T/1/ me","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Ragnapop"},"content":"E/0/ this is a test/2019-10-15/2019-10-16","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Ragnapop":7}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ragnapop"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Ragnapop"},"content":";","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Ragnapop"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Ragnapop"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Ragnapop"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ragnapop"},"content":" * Represents a deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Ragnapop"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Ragnapop"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"Ragnapop"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ragnapop"},"content":"     * Creates an deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Ragnapop"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Ragnapop"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Ragnapop"},"content":"     * @param by due date of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Ragnapop"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"Ragnapop"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Ragnapop"},"content":"        this.by \u003d LocalDate.parse(by, DateTimeFormatter.ofPattern(\" yyyy-MM-dd\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"Ragnapop"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"Ragnapop"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"Ragnapop"},"content":"        return \"D\";","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"Ragnapop"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"Ragnapop"},"content":"    public String ToString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"Ragnapop"},"content":"        return super.ToString() + \" (by: \"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Ragnapop"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Ragnapop"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Ragnapop"},"content":"    public String toStore() {","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Ragnapop"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Ragnapop"},"content":"            return getTaskIcon() + \"/\" + \"1\" + \"/\" + description + \"/ \" + by;","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Ragnapop"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Ragnapop"},"content":"            return getTaskIcon() + \"/\" + \"0\" + \"/\" + description + \"/ \" + by;","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Ragnapop"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Ragnapop":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ragnapop"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Ragnapop"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Ragnapop"},"content":" *  * Represents the main class of the application.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ragnapop"},"content":" *","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ragnapop"},"content":" *","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Ragnapop"},"content":" * @author Loh Jin Hun","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Ragnapop"},"content":" *","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ragnapop"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Ragnapop"},"content":"     * The storage unit of the chatbot that saves and loads from the hard drive","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ragnapop"},"content":"    private static Storage storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Ragnapop"},"content":"     * The temporary storage/tasklist that has operations to add/delete tasks in the list","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Ragnapop"},"content":"    private static TaskList list;","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Ragnapop"},"content":"    private static Ui ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Ragnapop"},"content":"    private static Parser parser;","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Ragnapop"},"content":"    private static final String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Ragnapop"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Ragnapop"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Ragnapop"},"content":"        ui.intro();","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Ragnapop"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Ragnapop"},"content":"        list \u003d new TaskList(storage);// array to store tasks given","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Ragnapop"},"content":"        parser \u003d new Parser(list);","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Ragnapop"},"content":"        ui.read_commands(parser);","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Ragnapop":49,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ragnapop"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Ragnapop"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Ragnapop"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ragnapop"},"content":" * Represents an exception caused by Duke.","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ragnapop"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Ragnapop"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"Ragnapop"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"Ragnapop"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"Ragnapop"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Ragnapop":11}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ragnapop"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Ragnapop"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Ragnapop"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Ragnapop"},"content":"public class Event extends Task{","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"Ragnapop"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Ragnapop"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Ragnapop"},"content":"     * Creates an event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Ragnapop"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ragnapop"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Ragnapop"},"content":"     * @param from Start date of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Ragnapop"},"content":"     * @param to End date of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Ragnapop"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"Ragnapop"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"Ragnapop"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Ragnapop"},"content":"        this.from \u003d LocalDate.parse(from, formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Ragnapop"},"content":"        this.to \u003d LocalDate.parse(to, formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Ragnapop"},"content":"     * getter for task icon.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Ragnapop"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Ragnapop"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"Ragnapop"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"Ragnapop"},"content":"        return \"E\";","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Ragnapop"},"content":"     * returns string representation of event.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Ragnapop"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Ragnapop"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"Ragnapop"},"content":"    public String ToString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"Ragnapop"},"content":"        return super.ToString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Ragnapop"},"content":"                + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Ragnapop"},"content":"     * returns a string representation of event used to store the event on hard drive.","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Ragnapop"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Ragnapop"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Ragnapop"},"content":"    public String toStore() {","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Ragnapop"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Ragnapop"},"content":"            return getTaskIcon() + \"/\" + \"1\" + \"/\" + description + \"/\" + from + \"/\" + to;","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Ragnapop"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Ragnapop"},"content":"            return getTaskIcon() + \"/\" + \"0\" + \"/\" + description + \"/\" + from + \"/\" + to;","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"Ragnapop"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Ragnapop":56}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ragnapop"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Ragnapop"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Ragnapop"},"content":" * class for the Parser for the mainframe.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ragnapop"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ragnapop"},"content":"public class Parser {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Ragnapop"},"content":"    static TaskList list;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Ragnapop"},"content":"     * Creates a new Parser object.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Ragnapop"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Ragnapop"},"content":"     * @param list  the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Ragnapop"},"content":"     * @param storage the storage compartment of the mainframe","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ragnapop"},"content":"     * @throws DukeException If the file does not exist and cannot be created.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Ragnapop"},"content":"    public Parser(TaskList list){","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Ragnapop"},"content":"        this.list \u003d list;","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Ragnapop"},"content":"     * parses a string into information that can be read by the tasklist","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Ragnapop"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Ragnapop"},"content":"     * @param str  string to be parsed","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Ragnapop"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Ragnapop"},"content":"     * @throws DukeException If the file does not exist and cannot be created.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Ragnapop"},"content":"    public static void parse(String str) throws DukeException{","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Ragnapop"},"content":"        String[] tokens \u003d str.split(\"\\\\s+\");// split read string into individual components to read keywords","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Ragnapop"},"content":"        String identifier \u003d tokens[0];// store keywords","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Ragnapop"},"content":"        if (str.equals(\"list\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Ragnapop"},"content":"            list.printList();","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Ragnapop"},"content":"        } else if (str.equals(\"bye\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Ragnapop"},"content":"            Ui.bye();","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Ragnapop"},"content":"        } else if (identifier.equals(\"mark\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Ragnapop"},"content":"            list.markCase(tokens);","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Ragnapop"},"content":"        } else if (identifier.equals(\"unmark\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Ragnapop"},"content":"            int no \u003d Integer.parseInt(tokens[1]) - 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Ragnapop"},"content":"            list.unmarkCase(tokens);","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Ragnapop"},"content":"        } else if (identifier.equals(\"event\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Ragnapop"},"content":"            list.eventCase(str);","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Ragnapop"},"content":"            list.addTask();","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Ragnapop"},"content":"        } else if (identifier.equals(\"deadline\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Ragnapop"},"content":"            list.deadlineCase(str);","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Ragnapop"},"content":"            list.addTask();","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Ragnapop"},"content":"        } else if (identifier.equals(\"todo\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Ragnapop"},"content":"            list.todoCase(str);","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Ragnapop"},"content":"            list.addTask();","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Ragnapop"},"content":"        } else if (identifier.equals(\"delete\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Ragnapop"},"content":"            list.removeCase(tokens);","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"Ragnapop"},"content":"        } else if(identifier.equals(\"find\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"Ragnapop"},"content":"            list.findCase(str);","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"Ragnapop"},"content":"        }else {","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"Ragnapop"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"Ragnapop"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Ragnapop":62}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ragnapop"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Ragnapop"},"content":"import java.io.File;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Ragnapop"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Ragnapop"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Ragnapop"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Ragnapop"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Ragnapop"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Ragnapop"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Ragnapop"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Ragnapop"},"content":" * Represents the disk storage for the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Ragnapop"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ragnapop"},"content":"public class Storage {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Ragnapop"},"content":"    private File file;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Ragnapop"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Ragnapop"},"content":"     * Creates a new Storage object.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Ragnapop"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Ragnapop"},"content":"     * @param filePath The path to the file that stores the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Ragnapop"},"content":"     * @throws DukeException If the file does not exist and cannot be created.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Ragnapop"},"content":"    public Storage(String filePath) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Ragnapop"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Ragnapop"},"content":"        if (!this.file.exists()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Ragnapop"},"content":"            this.file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Ragnapop"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Ragnapop"},"content":"                this.file.createNewFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Ragnapop"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Ragnapop"},"content":"                throw new DukeException(\"Error creating new file\");","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Ragnapop"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Ragnapop"},"content":"     * Saves the task list to the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Ragnapop"},"content":"     * Assumption: load should be called before save.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Ragnapop"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Ragnapop"},"content":"     * @throws DukeException If there is an error writing to file.","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Ragnapop"},"content":"    public void save() throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Ragnapop"},"content":"        try{","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Ragnapop"},"content":"        FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Ragnapop"},"content":"        for(int a \u003d 0; a \u003c tasks.size(); a++ ) {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Ragnapop"},"content":"            Task task \u003d tasks.get(a);","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Ragnapop"},"content":"            String taskString \u003d task.toStore();","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Ragnapop"},"content":"            writer.write(taskString + \"\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Ragnapop"},"content":"        writer.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Ragnapop"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Ragnapop"},"content":"            throw new DukeException(\"Error saving file\");","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Ragnapop"},"content":"     * Loads the task list from the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Ragnapop"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Ragnapop"},"content":"     * @return The task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Ragnapop"},"content":"     * @throws DukeException If there is an error reading from file.","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Ragnapop"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"Ragnapop"},"content":"        try{","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"Ragnapop"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"Ragnapop"},"content":"            String str \u003d bufferedReader.readLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"Ragnapop"},"content":"            //System.out.println(str);","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"Ragnapop"},"content":"            while (str !\u003d null){","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Ragnapop"},"content":"                String[] loadtokens \u003d str.split(\"/\");","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"Ragnapop"},"content":"                //for(int a \u003d 0; a\u003c loadtokens.length; a++){System.out.println(loadtokens[a]);}","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"Ragnapop"},"content":"                String type \u003d loadtokens[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"Ragnapop"},"content":"                String status \u003d loadtokens[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"Ragnapop"},"content":"                String desc \u003d loadtokens[2];","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"Ragnapop"},"content":"                Task task;","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"Ragnapop"},"content":"                switch (type) {","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"Ragnapop"},"content":"                    case \"T\":","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"Ragnapop"},"content":"                        task \u003d new Task(desc);","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"Ragnapop"},"content":"                        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"Ragnapop"},"content":"                    case \"E\":","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"Ragnapop"},"content":"                        String to \u003d loadtokens[3];","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"Ragnapop"},"content":"                        String from \u003d loadtokens[4];","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"Ragnapop"},"content":"                        task \u003d new Event(desc, to, from);","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"Ragnapop"},"content":"                        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"Ragnapop"},"content":"                    case \"D\":","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"Ragnapop"},"content":"                        String duedate \u003d loadtokens[3];","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"Ragnapop"},"content":"                        task \u003d new Deadline(desc, duedate);","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"Ragnapop"},"content":"                        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"Ragnapop"},"content":"                    default:","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"Ragnapop"},"content":"                        throw new DukeException(\"File corrupted.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"Ragnapop"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"Ragnapop"},"content":"                if(status.equals(\"1\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"Ragnapop"},"content":"                    task.markAsDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"Ragnapop"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"Ragnapop"},"content":"                tasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"Ragnapop"},"content":"                str \u003d bufferedReader.readLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"Ragnapop"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"Ragnapop"},"content":"            bufferedReader.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"Ragnapop"},"content":"        }   catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"Ragnapop"},"content":"                throw new DukeException(\"Error loading tasks from file\");","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"Ragnapop"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"Ragnapop"},"content":"            catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"Ragnapop"},"content":"                throw new DukeException(\"Error saving file\");","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"Ragnapop"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"Ragnapop"},"content":"        return tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"Ragnapop"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Ragnapop":107}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ragnapop"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Ragnapop"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"Ragnapop"},"content":"        protected String description;","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"Ragnapop"},"content":"        protected boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"Ragnapop"},"content":"        public Task(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"Ragnapop"},"content":"            this.description \u003d description;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"Ragnapop"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"Ragnapop"},"content":"        /**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Ragnapop"},"content":"         * getter for status icon.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Ragnapop"},"content":"         *","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ragnapop"},"content":"         */","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Ragnapop"},"content":"        public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"Ragnapop"},"content":"            return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"Ragnapop"},"content":"        /**","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Ragnapop"},"content":"        * getter for task icon.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Ragnapop"},"content":"        *","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Ragnapop"},"content":"        */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Ragnapop"},"content":"        public String getTaskIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"Ragnapop"},"content":"            return \"T\";","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"Ragnapop"},"content":"        /**","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Ragnapop"},"content":"        * returns string representation of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Ragnapop"},"content":"        *","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Ragnapop"},"content":"        */","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Ragnapop"},"content":"        public String ToString(){","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"Ragnapop"},"content":"            return \"[\" + getTaskIcon() + \"] \" + \"[\" + getStatusIcon() + \"] \"+ description;","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"Ragnapop"},"content":"        /**","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Ragnapop"},"content":"        *  marks task as done.","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Ragnapop"},"content":"        *","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Ragnapop"},"content":"        */","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Ragnapop"},"content":"        public void markAsDone(){","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Ragnapop"},"content":"            isDone \u003d true;","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Ragnapop"},"content":"        /**","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Ragnapop"},"content":"        *   marks task as undone.","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Ragnapop"},"content":"        *","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Ragnapop"},"content":"        */","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Ragnapop"},"content":"        public void unmarkAsDone(){","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Ragnapop"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Ragnapop"},"content":"        /**","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Ragnapop"},"content":"        * returns a string representation of task used to store the task on hard drive.","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Ragnapop"},"content":"        *","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Ragnapop"},"content":"        */","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Ragnapop"},"content":"        public String toStore(){","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Ragnapop"},"content":"            if(isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Ragnapop"},"content":"                return getTaskIcon() + \"/\" + \"1\" + \"/\" + description;","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Ragnapop"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"Ragnapop"},"content":"                return getTaskIcon() + \"/\" + \"0\" + \"/\" + description;","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"Ragnapop"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Ragnapop"},"content":"        //...","lastModifiedDate":"2024-01-22"},{"lineNumber":62,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":63,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Ragnapop":63}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ragnapop"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Ragnapop"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Ragnapop"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ragnapop"},"content":" * Represents a task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ragnapop"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Ragnapop"},"content":"public class TaskList {","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Ragnapop"},"content":"    private static ArrayList\u003cTask\u003e list;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Ragnapop"},"content":"    private static Storage store;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Ragnapop"},"content":"     * Creates a task list based on the stored array.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Ragnapop"},"content":"     * @param store The storage used.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ragnapop"},"content":"    public TaskList(Storage store) throws DukeException{","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Ragnapop"},"content":"        this.store \u003d store;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Ragnapop"},"content":"        this.list \u003d store.load();","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Ragnapop"},"content":"     * Creates an empty task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Ragnapop"},"content":"    public TaskList() throws DukeException{","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Ragnapop"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e(100);","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Ragnapop"},"content":"     * Creates the message when task is added to tasklist.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Ragnapop"},"content":"    public static void addTask() throws DukeException{","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Ragnapop"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Ragnapop"},"content":"        System.out.println(list.get(list.size()-1).ToString());","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Ragnapop"},"content":"        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Ragnapop"},"content":"        store.save();","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Ragnapop"},"content":"     * Creates an event in the tasklist.","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Ragnapop"},"content":"     * @param str The string representation of the event.","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Ragnapop"},"content":"    public static void eventCase(String str) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Ragnapop"},"content":"        str \u003d str.replace(\"event\", \"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Ragnapop"},"content":"        //str \u003d str.replace(\"from\", \"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Ragnapop"},"content":"        //str \u003d str.replace(\"to\", \"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Ragnapop"},"content":"        String[] eventtokens \u003d str.split(\" ((/from)|(/to)) \");","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Ragnapop"},"content":"        if(eventtokens.length \u003c 1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Ragnapop"},"content":"            throw new DukeException(\"OOPS!!! The description of a event cannot be empty.\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Ragnapop"},"content":"                    \"Please give this instruction in the following format: event [description] / [event starting date] / [event ending date]\");","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Ragnapop"},"content":"        } else if(eventtokens.length \u003c 2) {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Ragnapop"},"content":"            throw new DukeException(\"OOPS!!! The beginning date of a event cannot be empty.\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Ragnapop"},"content":"                    \"Please give this instruction in the following format: event [description] / [event starting date] / [event ending date]\");","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Ragnapop"},"content":"        } else if(eventtokens.length \u003c 3) {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Ragnapop"},"content":"            throw new DukeException(\"OOPS!!! The ending date of a event cannot be empty.\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"Ragnapop"},"content":"                    \"Please give this instruction in the following format: event [description] / [event starting date] / [event ending date]\");","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"Ragnapop"},"content":"        String subject \u003d eventtokens[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Ragnapop"},"content":"        String to \u003d eventtokens[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"Ragnapop"},"content":"        String from \u003d eventtokens[2];","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"Ragnapop"},"content":"        list.add(new Event(subject, to, from));","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Ragnapop"},"content":"     * Creates an deadline in the tasklist.","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Ragnapop"},"content":"     * @param str The string representation of the deadline.","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Ragnapop"},"content":"    public static void deadlineCase(String str) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Ragnapop"},"content":"        str \u003d str.replace(\"deadline\", \"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"Ragnapop"},"content":"        //str \u003d str.replace(\"by\", \"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"Ragnapop"},"content":"        String[] deadlinetokens \u003d str.split(\"/by\");","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"Ragnapop"},"content":"        if(deadlinetokens.length \u003c 1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"Ragnapop"},"content":"            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"Ragnapop"},"content":"                    \"Please give this instruction in the following format: deadline [description] / [deadline date]\");","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"Ragnapop"},"content":"        else if(deadlinetokens.length \u003c 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"Ragnapop"},"content":"            throw new DukeException(\"OOPS!!! You must provide a deadline for this task.\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"Ragnapop"},"content":"                    \"Please give this instruction in the following format: deadline [description] / [deadline date]\");","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"Ragnapop"},"content":"        String subject \u003d deadlinetokens[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"Ragnapop"},"content":"        String deadline \u003d deadlinetokens[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"Ragnapop"},"content":"        list.add(new Deadline(subject, deadline));","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"Ragnapop"},"content":"     * Creates an todo task in the tasklist.","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"Ragnapop"},"content":"     * @param str The string representation of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"Ragnapop"},"content":"    public static void todoCase(String str) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Ragnapop"},"content":"        str \u003d str.replace(\"todo\", \"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"Ragnapop"},"content":"        int strcount \u003d str.split(\"\\\\s\").length;","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"Ragnapop"},"content":"        if(strcount \u003d\u003d 1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"Ragnapop"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty. \" +","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"Ragnapop"},"content":"                    \" Please give this instruction in the following format: todo [description]\");","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"Ragnapop"},"content":"        list.add(new Task(str));","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"Ragnapop"},"content":"     * marks a task as done.","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"Ragnapop"},"content":"     * @param  tokens The command to mark task as done.","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"Ragnapop"},"content":"    public static void markCase(String[] tokens) throws DukeException{","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"Ragnapop"},"content":"        if(tokens.length !\u003d 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"Ragnapop"},"content":"            throw new DukeException(\"please give this instruction in the following format: mark [task number]\");","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"Ragnapop"},"content":"        int no \u003d Integer.parseInt(tokens[1]) - 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"Ragnapop"},"content":"        list.get(no).markAsDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"Ragnapop"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"Ragnapop"},"content":"        System.out.println(list.get(no).ToString());","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"Ragnapop"},"content":"        store.save();","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"Ragnapop"},"content":"     * marks a task as undone.","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"Ragnapop"},"content":"     * @param  tokens The command to mark task as undone.","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"Ragnapop"},"content":"    public static void unmarkCase(String[] tokens) throws DukeException{","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"Ragnapop"},"content":"        if(tokens.length !\u003d 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"Ragnapop"},"content":"            throw new DukeException(\"please give this instruction in the following format: unmark [task number]\");","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"Ragnapop"},"content":"        int no \u003d Integer.parseInt(tokens[1]) - 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"Ragnapop"},"content":"        list.get(no).unmarkAsDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"Ragnapop"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"Ragnapop"},"content":"        System.out.println(list.get(no).ToString());","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"Ragnapop"},"content":"        store.save();","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":134,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"Ragnapop"},"content":"     * removes a task.","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"Ragnapop"},"content":"     * @param  tokens The command to remove a task.","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"Ragnapop"},"content":"    public static ArrayList\u003cTask\u003e removeCase(String[] tokens) throws DukeException{","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"Ragnapop"},"content":"        if(tokens.length !\u003d 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"Ragnapop"},"content":"            throw new DukeException(\"please give this instruction in the following format: delete [task number]\");","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":142,"author":{"gitId":"Ragnapop"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":143,"author":{"gitId":"Ragnapop"},"content":"        int no \u003d Integer.parseInt(tokens[1])-1;","lastModifiedDate":"2024-01-30"},{"lineNumber":144,"author":{"gitId":"Ragnapop"},"content":"        System.out.println(list.get(no).ToString());","lastModifiedDate":"2024-01-30"},{"lineNumber":145,"author":{"gitId":"Ragnapop"},"content":"        list.remove(no);","lastModifiedDate":"2024-01-30"},{"lineNumber":146,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":147,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":148,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":149,"author":{"gitId":"Ragnapop"},"content":"        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":150,"author":{"gitId":"Ragnapop"},"content":"        store.save();","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":152,"author":{"gitId":"Ragnapop"},"content":"        return list;","lastModifiedDate":"2024-01-30"},{"lineNumber":153,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":154,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":155,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":156,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":157,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":158,"author":{"gitId":"Ragnapop"},"content":"    public static void findCase(String str) throws DukeException{","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"Ragnapop"},"content":"        if(str.equals(\"find\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":160,"author":{"gitId":"Ragnapop"},"content":"            throw new DukeException(\"please give this instruction in the following format: find [keyword]\");","lastModifiedDate":"2024-02-01"},{"lineNumber":161,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":162,"author":{"gitId":"Ragnapop"},"content":"        String keyword \u003d str.replace(\"find\", \"\");","lastModifiedDate":"2024-02-01"},{"lineNumber":163,"author":{"gitId":"Ragnapop"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":164,"author":{"gitId":"Ragnapop"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":165,"author":{"gitId":"Ragnapop"},"content":"            int n \u003d 0;","lastModifiedDate":"2024-02-01"},{"lineNumber":166,"author":{"gitId":"Ragnapop"},"content":"            Task task \u003d list.get(i);","lastModifiedDate":"2024-02-01"},{"lineNumber":167,"author":{"gitId":"Ragnapop"},"content":"            if (task.description.contains(keyword)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":168,"author":{"gitId":"Ragnapop"},"content":"                n++;","lastModifiedDate":"2024-02-01"},{"lineNumber":169,"author":{"gitId":"Ragnapop"},"content":"                System.out.println( n + \".\" + task.ToString());","lastModifiedDate":"2024-02-01"},{"lineNumber":170,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":171,"author":{"gitId":"Ragnapop"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":172,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":173,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":174,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":175,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":176,"author":{"gitId":"Ragnapop"},"content":"     * prints the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":177,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":178,"author":{"gitId":"Ragnapop"},"content":"    public static void printList(){","lastModifiedDate":"2024-01-31"},{"lineNumber":179,"author":{"gitId":"Ragnapop"},"content":"        System.out.println(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":180,"author":{"gitId":"Ragnapop"},"content":"        for (int a \u003d 0; a \u003c list.size(); a++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":181,"author":{"gitId":"Ragnapop"},"content":"            System.out.println(a + 1 + \". \" + list.get(a).ToString());","lastModifiedDate":"2024-01-30"},{"lineNumber":182,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":183,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":184,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":185,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":186,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":187,"author":{"gitId":"Ragnapop"},"content":"     * gets the size of the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":188,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":189,"author":{"gitId":"Ragnapop"},"content":"    public int getSize(){","lastModifiedDate":"2024-01-31"},{"lineNumber":190,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":191,"author":{"gitId":"Ragnapop"},"content":"        return list.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":192,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":193,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":194,"author":{"gitId":"Ragnapop"},"content":"     * gets a specific task in the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":195,"author":{"gitId":"Ragnapop"},"content":"     * @param  n The number of the specified task in the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":196,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":197,"author":{"gitId":"Ragnapop"},"content":"    public Task getTask(int n){","lastModifiedDate":"2024-01-31"},{"lineNumber":198,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":199,"author":{"gitId":"Ragnapop"},"content":"        return list.get(n);","lastModifiedDate":"2024-01-31"},{"lineNumber":200,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":201,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":202,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":203,"author":{"gitId":"Ragnapop"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Ragnapop":203}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ragnapop"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Ragnapop"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Ragnapop"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Ragnapop"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Ragnapop"},"content":" * Represents the ui for the mainframe.","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Ragnapop"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ragnapop"},"content":"public class Ui {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Ragnapop"},"content":"final static String BINGUS_LOGO \u003d \" B   i   n   g   u   s \";","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Ragnapop"},"content":"    final static  String NAME \u003d \"Bingus\";","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Ragnapop"},"content":"     * Prints intro.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ragnapop"},"content":"    public static void intro() {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Ragnapop"},"content":"        System.out.println(\"Hello from\\n\" + BINGUS_LOGO);","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Ragnapop"},"content":"        System.out.println(\"Hello! I\u0027m \\n\" + NAME);","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Ragnapop"},"content":"        System.out.println(\"What can I do for you?\\n\");// initial introductory message","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Ragnapop"},"content":"     * Prints outro.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Ragnapop"},"content":"    public static void bye() throws DukeException{","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Ragnapop"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Ragnapop"},"content":"        System.exit(1);// if keyword is bye, exit the program","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Ragnapop"},"content":"     * gives commands to parser to process.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Ragnapop"},"content":"     * @param parser parser used to process commands.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Ragnapop"},"content":"    public static void read_commands(Parser parser) throws DukeException{","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Ragnapop"},"content":"        Scanner bfn \u003d new Scanner(","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Ragnapop"},"content":"                new InputStreamReader(System.in));// scanner to read user input","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Ragnapop"},"content":"        String str \u003d bfn.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Ragnapop"},"content":"        while (true) {","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Ragnapop"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Ragnapop"},"content":"               parser.parse(str);","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Ragnapop"},"content":"                str \u003d bfn.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Ragnapop"},"content":"            } catch(DukeException ex){","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Ragnapop"},"content":"                System.out.println(\"Exception occured: \" + ex);","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Ragnapop"},"content":"                str \u003d bfn.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Ragnapop"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Ragnapop"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Ragnapop":53}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ragnapop"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Ragnapop"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ragnapop"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ragnapop"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Ragnapop"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Ragnapop"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ragnapop"},"content":"public class EventTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Ragnapop"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Ragnapop"},"content":"    public void Event_Test_Success(){","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Ragnapop"},"content":"        assertEquals(new Event(\" this is a test\", \"2019-10-15\" , \"2019-10-16\").ToString(),\"[E] [ ]  this is a test (from: Oct 15 2019 to: Oct 16 2019)\" );","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Ragnapop"},"content":"        assertEquals(new Event(\" this is a test\", \"2019-10-15\" , \"2019-10-16\").toStore(),\"E/0/ this is a test/2019-10-15/2019-10-16\" );","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ragnapop"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Ragnapop":15}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ragnapop"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Ragnapop"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ragnapop"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Ragnapop"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Ragnapop"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Ragnapop"},"content":"public class TaskListTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Ragnapop"},"content":"    private TaskList setupThreeTasks() throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Ragnapop"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Ragnapop"},"content":"            taskList.todoCase(\"todo A\");","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ragnapop"},"content":"            taskList.todoCase(\"todo B\");","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Ragnapop"},"content":"            taskList.todoCase(\"todo C\");","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Ragnapop"},"content":"            return taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Ragnapop"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Ragnapop"},"content":"    public void addTask_normalInput_taskAdded() throws DukeException{","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Ragnapop"},"content":"        TaskList taskList \u003d this.setupThreeTasks();","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Ragnapop"},"content":"        assertEquals(3, taskList.getSize());","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Ragnapop"},"content":"        assertEquals(\" A\", taskList.getTask(0).description);","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Ragnapop"},"content":"        assertEquals(\" B\", taskList.getTask(1).description);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Ragnapop"},"content":"        assertEquals(\" C\", taskList.getTask(2).description);","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Ragnapop"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Ragnapop":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Ragnapop"},"content":"todo","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Ragnapop"},"content":"todo homework","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Ragnapop"},"content":"deadline","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Ragnapop"},"content":"deadline homework / tuesday","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Ragnapop"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Ragnapop"},"content":"delete","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Ragnapop"},"content":"delete 1","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Ragnapop"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Ragnapop"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Ragnapop"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Ragnapop"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Ragnapop"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Ragnapop":12}}]
