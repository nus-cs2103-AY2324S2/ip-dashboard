[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"# charlie.ui.Charlie project template","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"3. After that, locate the `src/main/java/charlie.ui.Charlie.java` file, right-click it, and choose `Run charlie.ui.Charlie.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ananya21":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"plugins {","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"    id \u0027java\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"    id \u0027application\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"shadowJar {","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"    archiveFileName \u003d \u0027charlie.jar\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"repositories {","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"    mavenCentral()","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"dependencies {","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"    implementation \u0027com.google.guava:guava:30.1-jre\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"javafx {","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"    version \u003d \"17\" // Use the version compatible with your JDK","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"test {","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"    useJUnitPlatform()","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"application {","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"    mainClass.set(\"charlie.Charlie\")","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":46}},{"path":"data/charlie.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"T | 1 | borrow book","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"D | 0 | 5 | return book | Sunday ","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"T | 0 | 6 | go to the zoo ","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"E | 0 | 10 | hangout | 6pm | 10pm","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"T | 0 | 10 | say bye to heather","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e C-priority","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"ananya21":9}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"# Charlie User Guide","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"### Feature-Add Todo Tasks","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"It is possible to add todo tasks, these ","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"don\u0027t require a deadline or any sort of ","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"timing information","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"You will be prompted to assign a priority ","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"to this task depending on how important it is","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"### Feature-Add Deadline Tasks","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"It is possible to add deadline tasks, these","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"don\u0027t require a time by which the deadline is","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"due","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"You will be prompted to assign a priority","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"to this task depending on how important it is","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"### Feature-Add Event Tasks","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"It is possible to add event tasks, these","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"require times by which the event starts and ends","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"You will be prompted to assign a priority","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"to this task depending on how important it is","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"### Feature-Find Keyword","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"It is possible to find tasks related to keywords,","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"this can help with prioritisation of tasks such","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"as \"study\" or \"party\"","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"### Feature-Delete Tasks","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"It is possible to delete tasks if an accident","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"occurred, such as you inputted a task you","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"don\u0027t actually have to complete","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"### Feature-List Tasks","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"It is possible to list tasks and view whether","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"or not the task has been completed and its","lastModifiedDate":"2024-02-29"},{"lineNumber":48,"author":{"gitId":"ananya21"},"content":"priority status","lastModifiedDate":"2024-02-29"},{"lineNumber":49,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"ananya21"},"content":"### Feature-Mark Tasks","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":52,"author":{"gitId":"ananya21"},"content":"It is possible to mark tasks once you finish","lastModifiedDate":"2024-02-29"},{"lineNumber":53,"author":{"gitId":"ananya21"},"content":"a task but still want to be able to look at it","lastModifiedDate":"2024-02-29"},{"lineNumber":54,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":55,"author":{"gitId":"ananya21"},"content":"### Feature-Unmark Tasks","lastModifiedDate":"2024-02-29"},{"lineNumber":56,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":57,"author":{"gitId":"ananya21"},"content":"It is possible to unmark tasks if you thought","lastModifiedDate":"2024-02-29"},{"lineNumber":58,"author":{"gitId":"ananya21"},"content":"you had finished but hadn\u0027t actually finished","lastModifiedDate":"2024-02-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"ananya21"},"content":"### `todo` - creates a todo task","lastModifiedDate":"2024-02-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":64,"author":{"gitId":"ananya21"},"content":"creates a todo task which requires no ","lastModifiedDate":"2024-02-29"},{"lineNumber":65,"author":{"gitId":"ananya21"},"content":"additional information, except for task","lastModifiedDate":"2024-02-29"},{"lineNumber":66,"author":{"gitId":"ananya21"},"content":"description, you will be subsequently ","lastModifiedDate":"2024-02-29"},{"lineNumber":67,"author":{"gitId":"ananya21"},"content":"prompted for prioritisation of the task","lastModifiedDate":"2024-02-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2024-02-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":71,"author":{"gitId":"ananya21"},"content":"`todo borrow book`","lastModifiedDate":"2024-02-29"},{"lineNumber":72,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":73,"author":{"gitId":"ananya21"},"content":"(assume prioritisation is 1)","lastModifiedDate":"2024-02-29"},{"lineNumber":74,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":75,"author":{"gitId":"ananya21"},"content":"Expected outcome:","lastModifiedDate":"2024-02-29"},{"lineNumber":76,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":77,"author":{"gitId":"ananya21"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":78,"author":{"gitId":"ananya21"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-29"},{"lineNumber":79,"author":{"gitId":"ananya21"},"content":"    [T][ ][1] borrow book","lastModifiedDate":"2024-02-29"},{"lineNumber":80,"author":{"gitId":"ananya21"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":81,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":82,"author":{"gitId":"ananya21"},"content":"### `deadline` - creates a deadline task","lastModifiedDate":"2024-02-29"},{"lineNumber":83,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":84,"author":{"gitId":"ananya21"},"content":"creates a deadline task which requires ","lastModifiedDate":"2024-02-29"},{"lineNumber":85,"author":{"gitId":"ananya21"},"content":"the task description and the time by which","lastModifiedDate":"2024-02-29"},{"lineNumber":86,"author":{"gitId":"ananya21"},"content":"the deadline is due, you will be subsequently ","lastModifiedDate":"2024-02-29"},{"lineNumber":87,"author":{"gitId":"ananya21"},"content":"prompted for prioritisation of the task","lastModifiedDate":"2024-02-29"},{"lineNumber":88,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":89,"author":{"gitId":"ananya21"},"content":"Example of usage:","lastModifiedDate":"2024-02-29"},{"lineNumber":90,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":91,"author":{"gitId":"ananya21"},"content":"`deadline party /by Sunday`","lastModifiedDate":"2024-02-29"},{"lineNumber":92,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":93,"author":{"gitId":"ananya21"},"content":"(assume prioritisation is 1)","lastModifiedDate":"2024-02-29"},{"lineNumber":94,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":95,"author":{"gitId":"ananya21"},"content":"Expected outcome:","lastModifiedDate":"2024-02-29"},{"lineNumber":96,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":97,"author":{"gitId":"ananya21"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":98,"author":{"gitId":"ananya21"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-29"},{"lineNumber":99,"author":{"gitId":"ananya21"},"content":"    [D][ ][1] party (by: Sunday)","lastModifiedDate":"2024-02-29"},{"lineNumber":100,"author":{"gitId":"ananya21"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":101,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":102,"author":{"gitId":"ananya21"},"content":"### `event` - creates an event task","lastModifiedDate":"2024-02-29"},{"lineNumber":103,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":104,"author":{"gitId":"ananya21"},"content":"creates an event task which requires a time","lastModifiedDate":"2024-02-29"},{"lineNumber":105,"author":{"gitId":"ananya21"},"content":"by which the event starts and a time by which","lastModifiedDate":"2024-02-29"},{"lineNumber":106,"author":{"gitId":"ananya21"},"content":"the event ends, you will be subsequently","lastModifiedDate":"2024-02-29"},{"lineNumber":107,"author":{"gitId":"ananya21"},"content":"prompted for prioritisation of the task","lastModifiedDate":"2024-02-29"},{"lineNumber":108,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":109,"author":{"gitId":"ananya21"},"content":"Example of usage:","lastModifiedDate":"2024-02-29"},{"lineNumber":110,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":111,"author":{"gitId":"ananya21"},"content":"`event hangout with Sara /from Mon 5pm /to Mon 10pm`","lastModifiedDate":"2024-02-29"},{"lineNumber":112,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":113,"author":{"gitId":"ananya21"},"content":"(assume prioritisation is 1)","lastModifiedDate":"2024-02-29"},{"lineNumber":114,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":115,"author":{"gitId":"ananya21"},"content":"Expected outcome:","lastModifiedDate":"2024-02-29"},{"lineNumber":116,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":117,"author":{"gitId":"ananya21"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":118,"author":{"gitId":"ananya21"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-29"},{"lineNumber":119,"author":{"gitId":"ananya21"},"content":"    [E][ ][1] hangout with Sara (from: Mon 5pm to: Mon 10pm)\"","lastModifiedDate":"2024-02-29"},{"lineNumber":120,"author":{"gitId":"ananya21"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":121,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":122,"author":{"gitId":"ananya21"},"content":"### `find` - finds tasks related to a certain keyword","lastModifiedDate":"2024-02-29"},{"lineNumber":123,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":124,"author":{"gitId":"ananya21"},"content":"finds and outputs tasks which pertain to the ","lastModifiedDate":"2024-02-29"},{"lineNumber":125,"author":{"gitId":"ananya21"},"content":"keyword inputted","lastModifiedDate":"2024-02-29"},{"lineNumber":126,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":127,"author":{"gitId":"ananya21"},"content":"Example of usage:","lastModifiedDate":"2024-02-29"},{"lineNumber":128,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":129,"author":{"gitId":"ananya21"},"content":"`find hangout`","lastModifiedDate":"2024-02-29"},{"lineNumber":130,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":131,"author":{"gitId":"ananya21"},"content":"Expected outcome:","lastModifiedDate":"2024-02-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":133,"author":{"gitId":"ananya21"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":134,"author":{"gitId":"ananya21"},"content":"Here are the matching tasks in your list","lastModifiedDate":"2024-02-29"},{"lineNumber":135,"author":{"gitId":"ananya21"},"content":"    [E][ ][1] hangout with Sara (from: Mon 5pm to: Mon 10pm)\"","lastModifiedDate":"2024-02-29"},{"lineNumber":136,"author":{"gitId":"ananya21"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":137,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":138,"author":{"gitId":"ananya21"},"content":"### `list` - lists all the tasks","lastModifiedDate":"2024-02-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":142,"author":{"gitId":"ananya21"},"content":"`list`","lastModifiedDate":"2024-02-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":146,"author":{"gitId":"ananya21"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":147,"author":{"gitId":"ananya21"},"content":"Here are the tasks in your list","lastModifiedDate":"2024-02-29"},{"lineNumber":148,"author":{"gitId":"ananya21"},"content":"    [T][ ][1] borrow book","lastModifiedDate":"2024-02-29"},{"lineNumber":149,"author":{"gitId":"ananya21"},"content":"    [D][ ][1] party (by: Sunday)","lastModifiedDate":"2024-02-29"},{"lineNumber":150,"author":{"gitId":"ananya21"},"content":"    [E][ ][1] hangout with Sara (from: Mon 5pm to: Mon 10pm)\"","lastModifiedDate":"2024-02-29"},{"lineNumber":151,"author":{"gitId":"ananya21"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":152,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":153,"author":{"gitId":"ananya21"},"content":"### `mark` - marks tasks ","lastModifiedDate":"2024-02-29"},{"lineNumber":154,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":155,"author":{"gitId":"ananya21"},"content":"use the mark command to mark tasks as completed, the mark command should be followed by","lastModifiedDate":"2024-02-29"},{"lineNumber":156,"author":{"gitId":"ananya21"},"content":"an integer specifying the task which has been completed,","lastModifiedDate":"2024-02-29"},{"lineNumber":157,"author":{"gitId":"ananya21"},"content":"using the list command in conjunction to find corresponding","lastModifiedDate":"2024-02-29"},{"lineNumber":158,"author":{"gitId":"ananya21"},"content":"tasks is a good idea","lastModifiedDate":"2024-02-29"},{"lineNumber":159,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":160,"author":{"gitId":"ananya21"},"content":"Example of usage:","lastModifiedDate":"2024-02-29"},{"lineNumber":161,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":162,"author":{"gitId":"ananya21"},"content":"`mark 1`","lastModifiedDate":"2024-02-29"},{"lineNumber":163,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":164,"author":{"gitId":"ananya21"},"content":"Expected outcome:","lastModifiedDate":"2024-02-29"},{"lineNumber":165,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":166,"author":{"gitId":"ananya21"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":167,"author":{"gitId":"ananya21"},"content":"Marked Task: \u0027borrow book\u0027","lastModifiedDate":"2024-02-29"},{"lineNumber":168,"author":{"gitId":"ananya21"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":169,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":170,"author":{"gitId":"ananya21"},"content":"### `unmark` - unmarks tasks","lastModifiedDate":"2024-02-29"},{"lineNumber":171,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":172,"author":{"gitId":"ananya21"},"content":"use the unmark command to mark tasks as uncompleted, ","lastModifiedDate":"2024-02-29"},{"lineNumber":173,"author":{"gitId":"ananya21"},"content":"the unmark command should be followed by an integer ","lastModifiedDate":"2024-02-29"},{"lineNumber":174,"author":{"gitId":"ananya21"},"content":"specifying the task which has not been completed,","lastModifiedDate":"2024-02-29"},{"lineNumber":175,"author":{"gitId":"ananya21"},"content":"using the list command in conjunction to find ","lastModifiedDate":"2024-02-29"},{"lineNumber":176,"author":{"gitId":"ananya21"},"content":"corresponding tasks is a good idea","lastModifiedDate":"2024-02-29"},{"lineNumber":177,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":178,"author":{"gitId":"ananya21"},"content":"Example of usage:","lastModifiedDate":"2024-02-29"},{"lineNumber":179,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":180,"author":{"gitId":"ananya21"},"content":"`unmark 1`","lastModifiedDate":"2024-02-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2024-02-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":184,"author":{"gitId":"ananya21"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":185,"author":{"gitId":"ananya21"},"content":"Unmarked Task: \u0027borrow book\u0027","lastModifiedDate":"2024-02-29"},{"lineNumber":186,"author":{"gitId":"ananya21"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":187,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":188,"author":{"gitId":"ananya21"},"content":"### `delete` - deletes tasks","lastModifiedDate":"2024-02-29"},{"lineNumber":189,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":190,"author":{"gitId":"ananya21"},"content":"use the delete command to delete tasks, be careful","lastModifiedDate":"2024-02-29"},{"lineNumber":191,"author":{"gitId":"ananya21"},"content":"because once deleted, it cannot be brought back","lastModifiedDate":"2024-02-29"},{"lineNumber":192,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":193,"author":{"gitId":"ananya21"},"content":"Example of usage:","lastModifiedDate":"2024-02-29"},{"lineNumber":194,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":195,"author":{"gitId":"ananya21"},"content":"`delete 1`","lastModifiedDate":"2024-02-29"},{"lineNumber":196,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":197,"author":{"gitId":"ananya21"},"content":"Expected outcome:","lastModifiedDate":"2024-02-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":199,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":200,"author":{"gitId":"ananya21"},"content":"Deleted task: \u0027borrow book\u0027","lastModifiedDate":"2024-02-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"ananya21":172,"-":29}},{"path":"src/main/java/charlie/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import charlie.models.Deadline;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import charlie.models.Event;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import charlie.models.Task;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import charlie.models.Todo;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"import charlie.storage.Storage;","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"import charlie.storage.TaskList;","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"    private String fullCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"    private String response;","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"    private Integer priorityNumber;","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"     * constructor for AddCommand","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"     * @param fullCommand the user command in its full string form","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"    public AddCommand(String fullCommand, Integer priorityNumber) {","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"        assert fullCommand !\u003d null \u0026\u0026 !fullCommand.trim().isEmpty() : \"Full command must not be null or empty\";","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"        this.priorityNumber \u003d priorityNumber;","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"     * executes an add command, the method decides between tasks to-do, event and deadline, and","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"     * saves the tasks to storage","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"     * @param taskList - task list loaded at the start of the program.","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"     * @param storage  - class responsible for adding and loading tasks from and into the file","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"     * @throws CharlieException","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"    public String execute(TaskList taskList, Storage storage) throws CharlieException {","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"        assert taskList !\u003d null \u0026\u0026 storage !\u003d null : \"TaskList and Storage must not be null\";","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"        if (fullCommand.startsWith(\"todo\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"            this.response \u003d handleTodo(taskList.getTasks(), fullCommand);","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"        } else if (fullCommand.startsWith(\"event\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"            this.response \u003d handleEvent(taskList.getTasks(), fullCommand);","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"        } else if (fullCommand.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"            this.response \u003d handleDeadline(taskList.getTasks(), fullCommand);","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"        isExit \u003d false;","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"ananya21"},"content":"        return this.response;","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"ananya21"},"content":"     * adds the to-do task to the current task list, and returns intended generated output","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"ananya21"},"content":"     * @param taskList task list loaded at the start of the program.","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"ananya21"},"content":"     * @param input to-do string which specifies the task saved","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"ananya21"},"content":"     * @throws CharlieException","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"ananya21"},"content":"    private String handleTodo(ArrayList\u003cTask\u003e taskList, String input) throws CharlieException {","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"ananya21"},"content":"        assert input !\u003d null \u0026\u0026 !input.trim().equals(\"todo\") : \"Input for todo must not be empty\";","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"ananya21"},"content":"        if (input.trim().equals(\"todo\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"ananya21"},"content":"            throw new CharlieException(\"Sorry, the description of a todo cannot be empty.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"ananya21"},"content":"        String description \u003d input.substring(5);","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"ananya21"},"content":"        Todo todo \u003d new Todo(description, priorityNumber);","lastModifiedDate":"2024-02-29"},{"lineNumber":64,"author":{"gitId":"ananya21"},"content":"        taskList.add(todo);","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"ananya21"},"content":"        return generateResponse(todo, taskList.size());","lastModifiedDate":"2024-02-29"},{"lineNumber":66,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"ananya21"},"content":"     * adds the deadline task to the current task list, and returns intended generated output","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"ananya21"},"content":"     * @param taskList task list loaded at the start of the program.","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"ananya21"},"content":"     * @param input to-do string which specifies the task saved","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"ananya21"},"content":"     * @throws CharlieException","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"ananya21"},"content":"    private String handleDeadline(ArrayList\u003cTask\u003e taskList, String input) throws CharlieException {","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"ananya21"},"content":"        assert input !\u003d null \u0026\u0026 input.trim().length() \u003e 9 : \"Input for deadline must be properly formatted\";","lastModifiedDate":"2024-02-28"},{"lineNumber":76,"author":{"gitId":"ananya21"},"content":"        String[] parts \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"ananya21"},"content":"        if (parts.length \u003c 2 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"ananya21"},"content":"            throw new CharlieException(\"Sorry, the description of a deadline \"","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"ananya21"},"content":"                    + \"cannot be empty and must include a /by time.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"ananya21"},"content":"        Deadline deadline \u003d new Deadline(parts[0], priorityNumber, parts[1]);","lastModifiedDate":"2024-02-29"},{"lineNumber":82,"author":{"gitId":"ananya21"},"content":"        taskList.add(deadline);","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"ananya21"},"content":"        return generateResponse(deadline, taskList.size());","lastModifiedDate":"2024-02-29"},{"lineNumber":84,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"ananya21"},"content":"     * adds the event task to the current task list, and returns intended generated output","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"ananya21"},"content":"     * @param taskList task list loaded at the start of the program.","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"ananya21"},"content":"     * @param input to-do string which specifies the task saved","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"ananya21"},"content":"     * @throws CharlieException","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"ananya21"},"content":"    private String handleEvent(ArrayList\u003cTask\u003e taskList, String input) throws CharlieException {","lastModifiedDate":"2024-02-24"},{"lineNumber":93,"author":{"gitId":"ananya21"},"content":"        assert input !\u003d null \u0026\u0026 input.trim().length() \u003e 6 : \"Input for event must be properly formatted\";","lastModifiedDate":"2024-02-28"},{"lineNumber":94,"author":{"gitId":"ananya21"},"content":"        String[] parts \u003d input.substring(6).split(\" /from \");","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"ananya21"},"content":"        if (parts.length \u003c 2 || parts[0].trim().isEmpty() || !parts[1].contains(\" /to \")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"ananya21"},"content":"            throw new CharlieException(\"Sorry, the description of an event cannot be empty \"","lastModifiedDate":"2024-02-24"},{"lineNumber":97,"author":{"gitId":"ananya21"},"content":"                    + \"and must include start /from and /to end times.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":98,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"ananya21"},"content":"        String[] timeParts \u003d parts[1].split(\" /to \");","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"ananya21"},"content":"        Event event \u003d new Event(parts[0], priorityNumber, timeParts[0], timeParts[1]);","lastModifiedDate":"2024-02-29"},{"lineNumber":101,"author":{"gitId":"ananya21"},"content":"        taskList.add(event);","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"ananya21"},"content":"        return generateResponse(event, taskList.size());","lastModifiedDate":"2024-02-29"},{"lineNumber":103,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":104,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":105,"author":{"gitId":"ananya21"},"content":"    private String generateResponse(Task task, int size) {","lastModifiedDate":"2024-02-28"},{"lineNumber":106,"author":{"gitId":"ananya21"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + task + \"Now you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2024-02-28"},{"lineNumber":107,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":109,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":109}},{"path":"src/main/java/charlie/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import charlie.storage.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import charlie.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"    protected boolean isExit;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"     * Abstract execute method that aims to perform actions for a specific command.","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"     * Needs to be overridden in sub-classes.","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"     * @param taskList - task list loaded at the start of the program.","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"     * @param storage - class responsible for adding and loading tasks from and into the file","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"     * @throws CharlieException","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"    public abstract String execute(TaskList taskList, Storage storage) throws CharlieException;","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"     * getter method for the boolean value, which decides if the program exits or not, used in ExitCommand","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"     * @return isExit","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"        return isExit;","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":27}},{"path":"src/main/java/charlie/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import charlie.models.Task;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import charlie.storage.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import charlie.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"    private Integer index;","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"     * constructor for DeleteCommand","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"     * @param index index of list item to be removed","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"    public DeleteCommand(Integer index) {","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"        assert index !\u003d null : \"Task number to be deleted has to be specified\";","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"     * executes a delete command, the finds the task to be deleted within taskList, deletes the","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"     * task and saves the new taskList to storage","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"     * @param taskList - task list loaded at the start of the program.","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"     * @param storage  - class responsible for adding and loading tasks from and into the file","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"     * @throws CharlieException","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    public String execute(TaskList taskList, Storage storage) throws CharlieException {","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"        assert taskList !\u003d null \u0026\u0026 storage !\u003d null : \"TaskList and Storage must not be null\";","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"        Task taskToBeDeleted \u003d taskList.getTasks().get(index - 1);","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"        taskList.getTasks().remove(index - 1);","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"        String response \u003d \"Deleted task: \u0027\" + taskToBeDeleted.getDescription();","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"        isExit \u003d false;","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"        return response;","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":38}},{"path":"src/main/java/charlie/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.storage.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import charlie.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"     * turns isExit to true, which effectively terminates the program","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"     * @param taskList - task list loaded at the start of the program.","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"     * @param storage  - class responsible for adding and loading tasks from and into the file","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"        assert taskList !\u003d null \u0026\u0026 storage !\u003d null : \"TaskList and Storage must not be null\";","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"        isExit \u003d true;","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"        return \"See you later!\";","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":19}},{"path":"src/main/java/charlie/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import charlie.models.Task;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import charlie.storage.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import charlie.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"    private String keyword;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"     * constructor for FindCommand","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"     * @param keyword word to be searched in list of tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"     * executes a find command,","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"     * @param taskList - task list loaded at the start of the program.","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"     * @param storage  - class responsible for adding and loading tasks from and into the file","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"     * @throws CharlieException","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    public String execute(TaskList taskList, Storage storage) throws CharlieException {","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"        assert taskList !\u003d null \u0026\u0026 storage !\u003d null : \"TaskList and Storage must not be null\";","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d findMatchingTasks(taskList.getTasks(), keyword);","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"            String response \u003d \"No tasks found with the keyword: \" + keyword;","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"            return response;","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"        } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"            StringBuilder responseBuild \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"                Task task \u003d matchingTasks.get(i);","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"                responseBuild.append(i + 1).append(\".\").append(task).append(\"\\n\");","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"            return responseBuild.toString();","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"    private ArrayList\u003cTask\u003e findMatchingTasks(ArrayList\u003cTask\u003e tasks, String keyword) {","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"ananya21"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"ananya21"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"ananya21"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"ananya21"},"content":"            }","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"ananya21"},"content":"        return matchingTasks;","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":56}},{"path":"src/main/java/charlie/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.storage.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import charlie.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"     * executes the List command, which prints out all the tasks in taskList","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"     * @param taskList - task list loaded at the start of the program.","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"     * @param storage  - class responsible for adding and loading tasks from and into the file","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"        assert taskList !\u003d null \u0026\u0026 storage !\u003d null : \"TaskList and Storage must not be null\";","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"        StringBuilder responseBuild \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"        for (int i \u003d 0; i \u003c taskList.getTasks().size(); i++) {","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"            responseBuild.append(i + 1).append(\".\").append(taskList.getTasks().get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"        isExit \u003d false;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"        return responseBuild.toString();","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":22}},{"path":"src/main/java/charlie/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import charlie.models.Task;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import charlie.storage.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import charlie.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"// unmark command","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"    private Integer index;","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"     * constructor for MarkCommand","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"     * @param index index of list item to be marked or unmarked","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"    public MarkCommand(Integer index) {","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"        assert index !\u003d null : \"Task number to be marked has to be specified\";","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"     * executes the mark command which effectively marks tasks as completed or uncompleted","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"     * @param taskList - task list loaded at the start of the program.","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"     * @param storage  - class responsible for adding and loading tasks from and into the file","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"     * @throws CharlieException","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"    public String execute(TaskList taskList, Storage storage) throws CharlieException {","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"        assert taskList !\u003d null \u0026\u0026 storage !\u003d null : \"TaskList and Storage must not be null\";","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"        Task taskToBeMarked \u003d taskList.getTasks().get(index - 1);","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"        taskToBeMarked.markAsDone();","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"        String response \u003d \"Marked task: \u0027\" + taskToBeMarked.getDescription();","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"        isExit \u003d false;","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"        return response;","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":39}},{"path":"src/main/java/charlie/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.commands;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import charlie.models.Task;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import charlie.storage.Storage;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import charlie.storage.TaskList;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"// unmark command","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"    private Integer index;","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"     * constructor for MarkCommand","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"     * @param index index of list item to be marked or unmarked","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"    public UnmarkCommand(Integer index) {","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"        assert index !\u003d null : \"Task number to be marked has to be specified\";","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"     * executes the mark command which effectively marks tasks as completed or uncompleted","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"     * @param taskList - task list loaded at the start of the program.","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"     * @param storage  - class responsible for adding and loading tasks from and into the file","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"     * @throws CharlieException","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"    public String execute(TaskList taskList, Storage storage) throws CharlieException {","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"        assert taskList !\u003d null \u0026\u0026 storage !\u003d null : \"TaskList and Storage must not be null\";","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"        Task taskToBeUnmarked \u003d taskList.getTasks().get(index - 1);","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"        taskToBeUnmarked.markAsNotDone();","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"        String response \u003d \"Unmarked task: \u0027\" + taskToBeUnmarked.getDescription();","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"        isExit \u003d false;","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"        return response;","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ananya21":39}},{"path":"src/main/java/charlie/exceptions/CharlieException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.exceptions;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"public class CharlieException extends Exception {","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"    public CharlieException(String message) {","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"        super(message);","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":7}},{"path":"src/main/java/charlie/models/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.models;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"    protected String byString;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"     * constructor for task Deadline","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"     * @param description description of task deadline in string form","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"     * @param byString time by which the task deadline is due, is in ISO_LOCAL_DATE format (yyyy-MM-dd)","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"    public Deadline(String description, Integer priorityNumber, String byString) {","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"        super(description, priorityNumber);","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"        // Assert that description is not null or empty","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"Description cannot be null or empty\";","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"        // Assert that byString is not null","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"        assert byString !\u003d null : \"byString cannot be null\";","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"        // handle the case where it\u0027s not a date","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"        String datePattern \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}\";","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"        if (byString.matches(datePattern)) {","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"            this.by \u003d LocalDate.parse(byString); // Assumes input is in ISO_LOCAL_DATE format (yyyy-MM-dd)","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"            assert this.by !\u003d null : \"Date parsing failed when it should have succeeded\";","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"        } else {","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"            this.byString \u003d byString;","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"     * @return description string for deadline event","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"    public String toString() {","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"        if (by !\u003d null) {","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"            // `by` is set, so format it using DateTimeFormatter","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"        } else {","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"            // `by` is not set, meaning `byString` did not represent a date in the expected format","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"            // In this case, simply return the `byString` without attempting to format it as a date","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + byString + \")\";","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"    public String getBy() {","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"        return this.byString;","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":51}},{"path":"src/main/java/charlie/models/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.models;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"    protected String startsAt;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"    protected String endsAt;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"     * constructor for task Event","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"     * @param description description of task Event in string form","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"     * @param startsAt time by which the event starts","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"     * @param endsAt time by which the event ends","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"    public Event(String description, Integer priorityNumber,String startsAt, String endsAt) {","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"        super(description, priorityNumber);","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"        // Assert that description, startsAt, and endsAt are not null","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"Description cannot be null or empty\";","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"        assert startsAt !\u003d null \u0026\u0026 !startsAt.trim().isEmpty() : \"Start time cannot be null or empty\";","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"        assert endsAt !\u003d null \u0026\u0026 !endsAt.trim().isEmpty() : \"End time cannot be null or empty\";","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"        this.startsAt \u003d startsAt;","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"        this.endsAt \u003d endsAt;","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"    public String getStartsAt() {","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"        return startsAt;","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    public String getEndsAt() {","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"        return endsAt;","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"     * @return description string for task event","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startsAt + \" to: \" + endsAt + \")\";","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"ananya21":41}},{"path":"src/main/java/charlie/models/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.models;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"public class Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"    protected String description;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"    protected Integer priorityNumber;","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"     * constructor for tasks","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"     * @param description contains information in the form of a string about the task","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"    public Task(String description, Integer priorityNumber) {","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"Description cannot be null or empty\";","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"        this.priorityNumber \u003d priorityNumber;","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"     * prints the current status of task","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"     * @return the status of the task (whether it is completed or not","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"    public Integer getPriority() {","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"        return this.priorityNumber;","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"     * marks a task as done","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"        assert isDone : \"Task should be marked as done\";","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"     * marks a task as not done","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"        assert !isDone : \"Task should be marked as not done\";","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"ananya21"},"content":"     * @return whether or not the task has been successfully completed","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"ananya21"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"ananya21"},"content":"        return isDone;","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"ananya21"},"content":"     * @return the description of task","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"ananya21"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"ananya21"},"content":"        return description;","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"ananya21"},"content":"     * @return returns the description of task and the status icon of","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"ananya21"},"content":"     * whether or not it has been completed","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"ananya21"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"ananya21"},"content":"        return getStatusIcon() + \" [\" + priorityNumber.toString() + \"] \" + description;","lastModifiedDate":"2024-02-29"},{"lineNumber":68,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ananya21":69}},{"path":"src/main/java/charlie/models/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.models;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"    public Todo(String description, Integer priorityNumber) {","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"        super(description, priorityNumber);","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"Description cannot be null or empty\";","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"     * @return string containing information about to-Do task","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"ananya21":15}},{"path":"src/main/java/charlie/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.parser;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import charlie.commands.AddCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import charlie.commands.Command;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import charlie.commands.DeleteCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import charlie.commands.ExitCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import charlie.commands.FindCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import charlie.commands.ListCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"import charlie.commands.MarkCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"import charlie.commands.UnmarkCommand;","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"public class Parser {","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"    public static Command parse(String fullCommand) throws CharlieException {","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"        boolean addCommand \u003d fullCommand.startsWith(\"todo\") || fullCommand.startsWith(\"event\")","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"                || fullCommand.startsWith(\"deadline\");","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"        if (fullCommand.startsWith(\"delete\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"            return initiateDelete(fullCommand);","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"        } else if (addCommand) {","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"            return initiateAddCommand(fullCommand);","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"        } else if (fullCommand.startsWith(\"list\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"            return initiateList();","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"        } else if (fullCommand.startsWith(\"bye\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"            return initiateExit();","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"        } else if (fullCommand.startsWith(\"mark\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"            return initiateMark(fullCommand);","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"        } else if (fullCommand.startsWith(\"unmark\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"            return initiateUnmark(fullCommand);","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"        } else if (fullCommand.startsWith(\"find\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"            return initiateFind(fullCommand);","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"        } else {","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"            throw new CharlieException(\"Sorry, unknown command, try again!\");","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"    private static Command initiateDelete(String fullCommand) throws CharlieException {","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"        String[] words \u003d fullCommand.split(\" \");","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"        assert words.length \u003e 1 : \"Delete command format is incorrect\";","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"        return new DeleteCommand(Integer.valueOf(words[1]));","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"    private static Command initiateAddCommand(String fullCommand) {","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"        String[] words \u003d fullCommand.split(\" \");","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"        String priorityString \u003d words[words.length-1];","lastModifiedDate":"2024-02-29"},{"lineNumber":48,"author":{"gitId":"ananya21"},"content":"        Integer priorityNumber \u003d Integer.parseInt(priorityString);","lastModifiedDate":"2024-02-29"},{"lineNumber":49,"author":{"gitId":"ananya21"},"content":"        String actualCommand \u003d fullCommand.substring(0, fullCommand.length()-2);","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"ananya21"},"content":"        return new AddCommand(actualCommand, priorityNumber);","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"ananya21"},"content":"    private static Command initiateList() {","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"ananya21"},"content":"        return new ListCommand();","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"ananya21"},"content":"    private static Command initiateExit() {","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"ananya21"},"content":"        return new ExitCommand();","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"ananya21"},"content":"    private static Command initiateMark(String fullCommand) throws CharlieException {","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"ananya21"},"content":"        String[] words \u003d fullCommand.split(\" \");","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"ananya21"},"content":"        assert words.length \u003e 1 : \"Mark command format is incorrect\";","lastModifiedDate":"2024-02-28"},{"lineNumber":63,"author":{"gitId":"ananya21"},"content":"        return new MarkCommand(Integer.valueOf(words[1]));","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":65,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"ananya21"},"content":"    private static Command initiateUnmark(String fullCommand) throws CharlieException {","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"ananya21"},"content":"        String[] words \u003d fullCommand.split(\" \");","lastModifiedDate":"2024-02-28"},{"lineNumber":68,"author":{"gitId":"ananya21"},"content":"        assert words.length \u003e 1 : \"Unmark command format is incorrect\";","lastModifiedDate":"2024-02-28"},{"lineNumber":69,"author":{"gitId":"ananya21"},"content":"        return new UnmarkCommand(Integer.valueOf(words[1]));","lastModifiedDate":"2024-02-28"},{"lineNumber":70,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":71,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":72,"author":{"gitId":"ananya21"},"content":"    private static Command initiateFind(String fullCommand) throws CharlieException {","lastModifiedDate":"2024-02-28"},{"lineNumber":73,"author":{"gitId":"ananya21"},"content":"        String[] words \u003d fullCommand.split(\" \");","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"ananya21"},"content":"        assert words.length \u003e 1 : \"Find command format is incorrect\";","lastModifiedDate":"2024-02-28"},{"lineNumber":75,"author":{"gitId":"ananya21"},"content":"        return new FindCommand(words[1]);","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":77}},{"path":"src/main/java/charlie/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"import charlie.models.Deadline;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"import charlie.models.Event;","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"import charlie.models.Task;","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"import charlie.models.Todo;","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"public class Storage {","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"    private String filePath;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"     * creates a storage file (storage space) within which the list of tasks / user input can be saved","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"     * @param filePath path within the current directory by which the storage file should be saved","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.trim().isEmpty() : \"filePath cannot be null or empty\";","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"     * loads tasks using the given filePath","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"     * @return tasks loaded from the filePath","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"     * @throws CharlieException","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws CharlieException {","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"            String line;","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"                try {","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"                    loadedTasks.add(parseTaskFromFile(line));","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"                    throw new CharlieException(\"Found a corrupted task in save file, skipping: \" + line);","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"                }","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"ananya21"},"content":"            reader.close();","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"ananya21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"ananya21"},"content":"            throw new CharlieException(\"No saved tasks found, starting with an empty list.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"ananya21"},"content":"        return loadedTasks;","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"ananya21"},"content":"     * The parseTaskFromFile method converts a single line of text into a specific Task object","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"ananya21"},"content":"     * (to-Do, Deadline, or Event) based on the line\u0027s format, throwing an exception for unrecognized","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"ananya21"},"content":"     * task types","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"ananya21"},"content":"     * @param line line read from the storage file","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"ananya21"},"content":"     * @return the task object","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"ananya21"},"content":"     * @throws IllegalArgumentException","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"ananya21"},"content":"    private Task parseTaskFromFile(String line) throws IllegalArgumentException {","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"ananya21"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"ananya21"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"ananya21"},"content":"        switch (parts[0]) {","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"ananya21"},"content":"            case \"T\":","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"ananya21"},"content":"                task \u003d new Todo(parts[3], Integer.parseInt(parts[2]));","lastModifiedDate":"2024-02-29"},{"lineNumber":70,"author":{"gitId":"ananya21"},"content":"                break;","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"ananya21"},"content":"            case \"D\":","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"ananya21"},"content":"                task \u003d new Deadline(parts[3], Integer.parseInt(parts[2]), parts[4]);","lastModifiedDate":"2024-02-29"},{"lineNumber":73,"author":{"gitId":"ananya21"},"content":"                break;","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"ananya21"},"content":"            case \"E\":","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"ananya21"},"content":"                task \u003d new Event(parts[3], Integer.parseInt(parts[2]), parts[4], parts[5]);","lastModifiedDate":"2024-02-29"},{"lineNumber":76,"author":{"gitId":"ananya21"},"content":"                break;","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"ananya21"},"content":"            default:","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"ananya21"},"content":"                throw new IllegalArgumentException(\"Invalid task type in file.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"ananya21"},"content":"        if (parts[1].equals(\"1\")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"ananya21"},"content":"            task.markAsDone();","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"ananya21"},"content":"        return task;","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"ananya21"},"content":"     * saves the list of tasks to the storage file","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"ananya21"},"content":"     * @param taskList lists of tasks to be saved","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"ananya21"},"content":"     * @throws CharlieException","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"ananya21"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e taskList) throws CharlieException {","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"ananya21"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"ananya21"},"content":"            Files.createDirectories(Paths.get(\"./data\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"ananya21"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"ananya21"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"ananya21"},"content":"                writer.write(taskToFileFormat(task));","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"ananya21"},"content":"                writer.newLine();","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"ananya21"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"ananya21"},"content":"            writer.close();","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"ananya21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"ananya21"},"content":"            throw new CharlieException(\"An error occurred while saving tasks to disk.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":109,"author":{"gitId":"ananya21"},"content":"     * converts tasks to format required to be written within files","lastModifiedDate":"2024-02-23"},{"lineNumber":110,"author":{"gitId":"ananya21"},"content":"     * @param task task to be converted into format for saving within the file","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"ananya21"},"content":"     * @return string of how the task should appear in file format","lastModifiedDate":"2024-02-23"},{"lineNumber":112,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":113,"author":{"gitId":"ananya21"},"content":"    private String taskToFileFormat(Task task) {","lastModifiedDate":"2024-02-23"},{"lineNumber":114,"author":{"gitId":"ananya21"},"content":"        String type \u003d task instanceof Todo ? \"T\"","lastModifiedDate":"2024-02-24"},{"lineNumber":115,"author":{"gitId":"ananya21"},"content":"                : task instanceof Deadline ? \"D\"","lastModifiedDate":"2024-02-24"},{"lineNumber":116,"author":{"gitId":"ananya21"},"content":"                : task instanceof Event ? \"E\"","lastModifiedDate":"2024-02-24"},{"lineNumber":117,"author":{"gitId":"ananya21"},"content":"                : \"\";","lastModifiedDate":"2024-02-24"},{"lineNumber":118,"author":{"gitId":"ananya21"},"content":"        int done \u003d task.isDone() ? 1 : 0;","lastModifiedDate":"2024-02-23"},{"lineNumber":119,"author":{"gitId":"ananya21"},"content":"        int priority \u003d task.getPriority();","lastModifiedDate":"2024-02-29"},{"lineNumber":120,"author":{"gitId":"ananya21"},"content":"        String details \u003d task.getDescription();","lastModifiedDate":"2024-02-23"},{"lineNumber":121,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":122,"author":{"gitId":"ananya21"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2024-02-23"},{"lineNumber":123,"author":{"gitId":"ananya21"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-02-23"},{"lineNumber":124,"author":{"gitId":"ananya21"},"content":"            details +\u003d \" | \" + deadline.getBy();","lastModifiedDate":"2024-02-23"},{"lineNumber":125,"author":{"gitId":"ananya21"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-02-23"},{"lineNumber":126,"author":{"gitId":"ananya21"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2024-02-23"},{"lineNumber":127,"author":{"gitId":"ananya21"},"content":"            details +\u003d \" | \" + event.getStartsAt() + \" | \" + event.getEndsAt();","lastModifiedDate":"2024-02-23"},{"lineNumber":128,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":129,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":130,"author":{"gitId":"ananya21"},"content":"        return String.join(\" | \", type, String.valueOf(done), String.valueOf(priority), details);","lastModifiedDate":"2024-02-29"},{"lineNumber":131,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":132,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":132}},{"path":"src/main/java/charlie/storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.models.Task;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"public class TaskList {","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"        return tasks;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":22}},{"path":"src/main/java/charlie/ui/Charlie.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.ui;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"import charlie.commands.Command;","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"import charlie.parser.Parser;","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"import charlie.storage.Storage;","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"import charlie.storage.TaskList;","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"public class Charlie extends Application {","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"    private String fullCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"    private boolean priorityCommand \u003d false;","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"    private String priorityTaskCommand;","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"    private void initDuke(String filePath) {","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"        } catch (CharlieException exception) {","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"            exception.printStackTrace(); // Or handle it appropriately","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"        initDuke(\"./data/charlie.txt\");","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"        // Step 1. Setting up required components","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"        ScrollPane scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"        VBox dialogContainer \u003d new VBox();","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"ananya21"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"ananya21"},"content":"        TextField userInput \u003d new TextField();","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"ananya21"},"content":"        Button sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"ananya21"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"ananya21"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"ananya21"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"ananya21"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"ananya21"},"content":"        stage.show();","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"ananya21"},"content":"        stage.setTitle(\"charlie.ui.Duke\");","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"ananya21"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"ananya21"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"ananya21"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"ananya21"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"ananya21"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"ananya21"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"ananya21"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"ananya21"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"ananya21"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"ananya21"},"content":"        //You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"ananya21"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"ananya21"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"ananya21"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"ananya21"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"ananya21"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"ananya21"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-24"},{"lineNumber":85,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":86,"author":{"gitId":"ananya21"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2024-02-24"},{"lineNumber":87,"author":{"gitId":"ananya21"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-24"},{"lineNumber":88,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":89,"author":{"gitId":"ananya21"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":90,"author":{"gitId":"ananya21"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2024-02-24"},{"lineNumber":91,"author":{"gitId":"ananya21"},"content":"            try {","lastModifiedDate":"2024-02-24"},{"lineNumber":92,"author":{"gitId":"ananya21"},"content":"                handleUserInput(userInput, dialogContainer);","lastModifiedDate":"2024-02-24"},{"lineNumber":93,"author":{"gitId":"ananya21"},"content":"            } catch (CharlieException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":94,"author":{"gitId":"ananya21"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-02-24"},{"lineNumber":95,"author":{"gitId":"ananya21"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":96,"author":{"gitId":"ananya21"},"content":"        });","lastModifiedDate":"2024-02-24"},{"lineNumber":97,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":98,"author":{"gitId":"ananya21"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2024-02-24"},{"lineNumber":99,"author":{"gitId":"ananya21"},"content":"            try {","lastModifiedDate":"2024-02-24"},{"lineNumber":100,"author":{"gitId":"ananya21"},"content":"                handleUserInput(userInput, dialogContainer);","lastModifiedDate":"2024-02-24"},{"lineNumber":101,"author":{"gitId":"ananya21"},"content":"            } catch (CharlieException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":102,"author":{"gitId":"ananya21"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-02-24"},{"lineNumber":103,"author":{"gitId":"ananya21"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":104,"author":{"gitId":"ananya21"},"content":"        });","lastModifiedDate":"2024-02-24"},{"lineNumber":105,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":106,"author":{"gitId":"ananya21"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2024-02-24"},{"lineNumber":107,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":108,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":109,"author":{"gitId":"ananya21"},"content":"     * Iteration 1:","lastModifiedDate":"2024-02-24"},{"lineNumber":110,"author":{"gitId":"ananya21"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2024-02-24"},{"lineNumber":111,"author":{"gitId":"ananya21"},"content":"     * @param text String containing text to add","lastModifiedDate":"2024-02-24"},{"lineNumber":112,"author":{"gitId":"ananya21"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2024-02-24"},{"lineNumber":113,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":114,"author":{"gitId":"ananya21"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2024-02-24"},{"lineNumber":115,"author":{"gitId":"ananya21"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2024-02-24"},{"lineNumber":116,"author":{"gitId":"ananya21"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2024-02-24"},{"lineNumber":117,"author":{"gitId":"ananya21"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2024-02-24"},{"lineNumber":118,"author":{"gitId":"ananya21"},"content":"        return textToAdd;","lastModifiedDate":"2024-02-24"},{"lineNumber":119,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":120,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":121,"author":{"gitId":"ananya21"},"content":"    private void handleUserInput(TextField userInput, VBox dialogContainer) throws CharlieException {","lastModifiedDate":"2024-02-24"},{"lineNumber":122,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":123,"author":{"gitId":"ananya21"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-29"},{"lineNumber":124,"author":{"gitId":"ananya21"},"content":"        boolean isAddCommand \u003d input.startsWith(\"todo\") || input.startsWith(\"deadline\")","lastModifiedDate":"2024-02-29"},{"lineNumber":125,"author":{"gitId":"ananya21"},"content":"                || input.startsWith(\"event\");","lastModifiedDate":"2024-02-29"},{"lineNumber":126,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":127,"author":{"gitId":"ananya21"},"content":"        if (isAddCommand) {","lastModifiedDate":"2024-02-29"},{"lineNumber":128,"author":{"gitId":"ananya21"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-29"},{"lineNumber":129,"author":{"gitId":"ananya21"},"content":"                    DialogBox.getUserDialog(input, user),","lastModifiedDate":"2024-02-29"},{"lineNumber":130,"author":{"gitId":"ananya21"},"content":"                    DialogBox.getDukeDialog(\"Assign this task a priority: \", duke)","lastModifiedDate":"2024-02-29"},{"lineNumber":131,"author":{"gitId":"ananya21"},"content":"            );","lastModifiedDate":"2024-02-29"},{"lineNumber":132,"author":{"gitId":"ananya21"},"content":"            setPriority(true,input);","lastModifiedDate":"2024-02-29"},{"lineNumber":133,"author":{"gitId":"ananya21"},"content":"            userInput.clear();","lastModifiedDate":"2024-02-29"},{"lineNumber":134,"author":{"gitId":"ananya21"},"content":"        } else if (this.priorityCommand \u0026 this.priorityTaskCommand !\u003d null) {","lastModifiedDate":"2024-02-29"},{"lineNumber":135,"author":{"gitId":"ananya21"},"content":"            if (isNumeric(input)) {","lastModifiedDate":"2024-02-29"},{"lineNumber":136,"author":{"gitId":"ananya21"},"content":"                String fullPriorityCommand \u003d this.priorityTaskCommand + \" \" + input;","lastModifiedDate":"2024-02-29"},{"lineNumber":137,"author":{"gitId":"ananya21"},"content":"                String response \u003d \"Assigned the task this priority \" + input;","lastModifiedDate":"2024-02-29"},{"lineNumber":138,"author":{"gitId":"ananya21"},"content":"                dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-29"},{"lineNumber":139,"author":{"gitId":"ananya21"},"content":"                        DialogBox.getUserDialog(input, user),","lastModifiedDate":"2024-02-29"},{"lineNumber":140,"author":{"gitId":"ananya21"},"content":"                        DialogBox.getDukeDialog(response, duke),","lastModifiedDate":"2024-02-29"},{"lineNumber":141,"author":{"gitId":"ananya21"},"content":"                        DialogBox.getDukeDialog(getResponse(fullPriorityCommand), duke)","lastModifiedDate":"2024-02-29"},{"lineNumber":142,"author":{"gitId":"ananya21"},"content":"                );","lastModifiedDate":"2024-02-29"},{"lineNumber":143,"author":{"gitId":"ananya21"},"content":"                userInput.clear();","lastModifiedDate":"2024-02-29"},{"lineNumber":144,"author":{"gitId":"ananya21"},"content":"                setPriority(false, null);","lastModifiedDate":"2024-02-29"},{"lineNumber":145,"author":{"gitId":"ananya21"},"content":"            } else {","lastModifiedDate":"2024-02-29"},{"lineNumber":146,"author":{"gitId":"ananya21"},"content":"                throw new CharlieException(\"Priority should be a number\");","lastModifiedDate":"2024-02-29"},{"lineNumber":147,"author":{"gitId":"ananya21"},"content":"            }","lastModifiedDate":"2024-02-29"},{"lineNumber":148,"author":{"gitId":"ananya21"},"content":"        } else {","lastModifiedDate":"2024-02-29"},{"lineNumber":149,"author":{"gitId":"ananya21"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-24"},{"lineNumber":150,"author":{"gitId":"ananya21"},"content":"                    DialogBox.getUserDialog(input, user),","lastModifiedDate":"2024-02-29"},{"lineNumber":151,"author":{"gitId":"ananya21"},"content":"                    DialogBox.getDukeDialog(getResponse(input), duke)","lastModifiedDate":"2024-02-29"},{"lineNumber":152,"author":{"gitId":"ananya21"},"content":"            );","lastModifiedDate":"2024-02-24"},{"lineNumber":153,"author":{"gitId":"ananya21"},"content":"            userInput.clear();","lastModifiedDate":"2024-02-24"},{"lineNumber":154,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":155,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":156,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":157,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":158,"author":{"gitId":"ananya21"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":159,"author":{"gitId":"ananya21"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2024-02-24"},{"lineNumber":160,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":161,"author":{"gitId":"ananya21"},"content":"    public String getResponse(String input) throws CharlieException {","lastModifiedDate":"2024-02-24"},{"lineNumber":162,"author":{"gitId":"ananya21"},"content":"        String fullCommand \u003d input;","lastModifiedDate":"2024-02-24"},{"lineNumber":163,"author":{"gitId":"ananya21"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":164,"author":{"gitId":"ananya21"},"content":"            Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-02-24"},{"lineNumber":165,"author":{"gitId":"ananya21"},"content":"            String response \u003d c.execute(tasks, storage);","lastModifiedDate":"2024-02-24"},{"lineNumber":166,"author":{"gitId":"ananya21"},"content":"            return response;","lastModifiedDate":"2024-02-24"},{"lineNumber":167,"author":{"gitId":"ananya21"},"content":"        } catch (CharlieException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":168,"author":{"gitId":"ananya21"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-24"},{"lineNumber":169,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":170,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":171,"author":{"gitId":"ananya21"},"content":"    private void setPriority(boolean priorityCommand, String priorityTaskCommand) {","lastModifiedDate":"2024-02-29"},{"lineNumber":172,"author":{"gitId":"ananya21"},"content":"        this.priorityCommand \u003d priorityCommand;","lastModifiedDate":"2024-02-29"},{"lineNumber":173,"author":{"gitId":"ananya21"},"content":"        this.priorityTaskCommand \u003d priorityTaskCommand;","lastModifiedDate":"2024-02-29"},{"lineNumber":174,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":175,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":176,"author":{"gitId":"ananya21"},"content":"    private static boolean isNumeric(String str) {","lastModifiedDate":"2024-02-29"},{"lineNumber":177,"author":{"gitId":"ananya21"},"content":"        try {","lastModifiedDate":"2024-02-29"},{"lineNumber":178,"author":{"gitId":"ananya21"},"content":"            Double.parseDouble(str);","lastModifiedDate":"2024-02-29"},{"lineNumber":179,"author":{"gitId":"ananya21"},"content":"            return true;","lastModifiedDate":"2024-02-29"},{"lineNumber":180,"author":{"gitId":"ananya21"},"content":"        } catch(NumberFormatException e){","lastModifiedDate":"2024-02-29"},{"lineNumber":181,"author":{"gitId":"ananya21"},"content":"            return false;","lastModifiedDate":"2024-02-29"},{"lineNumber":182,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":183,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":184,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":185,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"ananya21":185}},{"path":"src/main/java/charlie/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.ui;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"    private Label text;","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"    @FXML","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"    @FXML","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"    private void flip() {","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"ananya21"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"ananya21"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"ananya21"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"ananya21"},"content":"        db.flip();","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"ananya21"},"content":"        return db;","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"ananya21":56}},{"path":"src/main/java/charlie/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.ui;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"public class Launcher {","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"        Application.launch(Charlie.class, args);","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"ananya21":13}},{"path":"src/main/java/charlie/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.ui;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":" * Controller for charlie.ui.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"    @FXML","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"    @FXML","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"    @FXML","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"    @FXML","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"    private Charlie duke;","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/charlie.ui.Duke.png\"));","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    @FXML","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"    public void setDuke(Charlie d) {","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"        this.duke \u003d d;","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing charlie.ui.Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"    @FXML","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"    private void handleUserInput() throws CharlieException {","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"ananya21"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"ananya21"},"content":"        );","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"ananya21"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"ananya21":52}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"ananya21":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"charlie.ui.MainWindow\"\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"            \u003cFont name\u003d\"System Italic\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"            \u003cFont name\u003d\"Bodoni 72 Bold\" size\u003d\"20.0\" /\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"ananya21":26}},{"path":"src/test/java/charlie/commands/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.commands;  //same package as the class being tested","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.models.*;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import charlie.storage.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import charlie.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"public class AddCommandTest {","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    @AfterEach","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"    public void testAddTodoTask() throws CharlieException {","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"        Command command \u003d new AddCommand(\"todo borrow book\", 2);","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"        Task todoTask \u003d new Todo(\"todo borrow book\", 3);","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"        tasks.add(todoTask);","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"        TaskList tasklist \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"        storage \u003d new Storage(\"./data/charlie.txt\");","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"        String response \u003d command.execute(tasklist, storage);","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"        String expectedResponse \u003d \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"                \"  [T][ ] borrow book\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"                \"Now you have 1 tasks in the list.\";","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"ananya21"},"content":"            // Check if the actual response contains the expected text","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"ananya21"},"content":"        assertTrue(response.contains(\"Got it. I\u0027ve added this task:\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"ananya21"},"content":"        assertTrue(response.contains(\"[T][ ] borrow book\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"ananya21"},"content":"        assertTrue(response.contains(\"tasks in the list.\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"ananya21"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"ananya21"},"content":"    public void testAddDeadlineTask() throws CharlieException {","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"ananya21"},"content":"        Command command \u003d new AddCommand(\"deadline return book /by 2019-10-15\", 3);","lastModifiedDate":"2024-02-29"},{"lineNumber":59,"author":{"gitId":"ananya21"},"content":"        Task deadlineTask \u003d new Deadline(\"return book\", 5, \"2019-10-15\");","lastModifiedDate":"2024-02-29"},{"lineNumber":60,"author":{"gitId":"ananya21"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"ananya21"},"content":"        tasks.add(deadlineTask);","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"ananya21"},"content":"        TaskList tasklist \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"ananya21"},"content":"        storage \u003d new Storage(\"./data/charlie.txt\");","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"ananya21"},"content":"        String response \u003d command.execute(tasklist, storage);","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"ananya21"},"content":"        String expectedResponse \u003d \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"ananya21"},"content":"                \"  [D][ ] return book (by: Oct 15 2019)\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"ananya21"},"content":"                \"Now you have 2 tasks in the list.\";","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"ananya21"},"content":"        // Check if the actual response contains the expected text","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"ananya21"},"content":"        assertTrue(response.contains(\"Got it. I\u0027ve added this task:\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"ananya21"},"content":"        assertTrue(response.contains(\"[D][ ] return book (by: Oct 15 2019)\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"ananya21"},"content":"        assertTrue(response.contains(\"tasks in the list.\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":76}},{"path":"src/test/java/charlie/commands/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import charlie.storage.*;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"    @AfterEach","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"    public void testDeleteTask() throws CharlieException {","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"        Command command \u003d new DeleteCommand(1);","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"        storage \u003d new Storage(\"./data/charlie.txt\");","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"        TaskList tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"        String response \u003d command.execute(tasks, storage);","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"        String expectedResponse \u003d \"Deleted task: \u0027todo borrow book\u0027\";","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"        // Check if the actual response contains the expected text","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"        assertTrue(response.contains(\"Deleted task:\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":43}},{"path":"src/test/java/charlie/commands/ExitCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import charlie.storage.*;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"public class ExitCommandTest {","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"    @AfterEach","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"    public void testDeleteTask() throws CharlieException {","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"        Command command \u003d new ExitCommand();","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"        storage \u003d new Storage(\"./data/charlie.txt\");","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"        String response \u003d command.execute(tasks, storage);","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"        String expectedResponse \u003d \"See you later!\";","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"        // Check if the actual response contains the expected text","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"        assertTrue(response.equals(\"See you later!\"));","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":43}},{"path":"src/test/java/charlie/commands/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import charlie.storage.*;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"public class ListCommandTest {","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"    @AfterEach","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"    public void testDeleteTask() throws CharlieException {","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"        Command command \u003d new ListCommand();","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"        storage \u003d new Storage(\"./data/charlie.txt\");","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"        TaskList tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"        String response \u003d command.execute(tasks, storage);","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"        String expectedResponse \u003d \"Here are the tasks in your list:\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"                \"1.[T][ ] borrow book\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"        // Check if the actual response contains the expected text","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"        assertTrue(response.contains(\"Here are the tasks in your list:\\n\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":42}},{"path":"src/test/java/charlie/commands/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import charlie.storage.*;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"public class MarkCommandTest {","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"    @AfterEach","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"    public void testMarkTask() throws CharlieException {","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"        Command command \u003d new MarkCommand(1);","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"        storage \u003d new Storage(\"./data/charlie.txt\");","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"        TaskList tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"        String response \u003d command.execute(tasks, storage);","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"        String expectedResponse \u003d \"Marked task: \u0027borrow book\";","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"        // Check if the actual response contains the expected text","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"        assertTrue(response.contains(\"Marked task: \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":43}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"todo borrow book","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"list","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"ananya21":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"REM run the program, feed charlie.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e add-gradle-support","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"java -classpath ..\\bin charlie.ui.Charlie \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"ananya21":5}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"# run the program, feed Charlie.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e add-gradle-support","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"java -classpath ../bin Charlie \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"ananya21":5}}]
