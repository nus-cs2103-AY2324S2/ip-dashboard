[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"jeong-jaeho"},"content":"    mainClass.set(\"linus.Linus\")","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"jeong-jaeho"},"content":"    archiveFileName \u003d \u0027linus.jar\u0027","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":38,"jeong-jaeho":2}},{"path":"data/linus.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jeong-jaeho"},"content":"D | 0 | read | 2019-10-10","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"jeong-jaeho":1}},{"path":"src/main/java/linus/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeong-jaeho"},"content":"package linus;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"jeong-jaeho"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"jeong-jaeho"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"jeong-jaeho"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"jeong-jaeho"},"content":" * Represents a deadline task with a By date.","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"jeong-jaeho"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"jeong-jaeho"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"jeong-jaeho"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"jeong-jaeho"},"content":"     * Constructs a deadline task.","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"jeong-jaeho"},"content":"     * @param description Description of deadline task.","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"jeong-jaeho"},"content":"     * @param by Completion date of the task.","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"jeong-jaeho"},"content":"     * @param isDone Whether the task is completed or not.","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"jeong-jaeho"},"content":"    public Deadline(String description, LocalDate by, boolean isDone) {","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"jeong-jaeho"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"jeong-jaeho"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"jeong-jaeho"},"content":"     * Returns the output or String representation of the Deadline Task.","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"jeong-jaeho"},"content":"     * @return String representation of the deadline task.","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"jeong-jaeho"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"jeong-jaeho"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"jeong-jaeho"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatDeadlineDate() + \")\";","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"jeong-jaeho"},"content":"     * Returns the By date.","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"jeong-jaeho"},"content":"     * @return By date.","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"jeong-jaeho"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"jeong-jaeho"},"content":"        return this.by;","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"jeong-jaeho"},"content":"     * Formats the deadline date into Month Day Year format.","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"jeong-jaeho"},"content":"     * @return Formatted String representation of By date.","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"jeong-jaeho"},"content":"    private String formatDeadlineDate() {","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"jeong-jaeho"},"content":"        return by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"jeong-jaeho"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jeong-jaeho":51}},{"path":"src/main/java/linus/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeong-jaeho"},"content":"package linus;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"jeong-jaeho"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"jeong-jaeho"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"jeong-jaeho"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"jeong-jaeho"},"content":" * Represents the event task.","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"jeong-jaeho"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"jeong-jaeho"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"jeong-jaeho"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"jeong-jaeho"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"jeong-jaeho"},"content":"     * Constructs an event task.","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"jeong-jaeho"},"content":"     * @param description Description of the event.","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"jeong-jaeho"},"content":"     * @param from From date.","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"jeong-jaeho"},"content":"     * @param to To date.","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"jeong-jaeho"},"content":"     * @param isDone Whether the event is completed or not.","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"jeong-jaeho"},"content":"    public Event(String description, LocalDate from, LocalDate to, boolean isDone) {","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"jeong-jaeho"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"jeong-jaeho"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"jeong-jaeho"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"jeong-jaeho"},"content":"     * Decides the output or String representation.","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"jeong-jaeho"},"content":"     * @return String representation of the event task.","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"jeong-jaeho"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"jeong-jaeho"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"jeong-jaeho"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formatEventDate(from) + \" to: \" + formatEventDate(to) + \")\";","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"jeong-jaeho"},"content":"     * Returns the date event starts.","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"jeong-jaeho"},"content":"     * @return From date.","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"jeong-jaeho"},"content":"    public LocalDate getFrom() {","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"jeong-jaeho"},"content":"        return this.from;","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"jeong-jaeho"},"content":"     * Returns the date event ends.","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"jeong-jaeho"},"content":"     * @return To date.","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"jeong-jaeho"},"content":"    public LocalDate getTo() {","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"jeong-jaeho"},"content":"        return this.to;","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"jeong-jaeho"},"content":"     * Formats the event date into Month Day Year format.","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"jeong-jaeho"},"content":"     * @param dateTime Event date.","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"jeong-jaeho"},"content":"     * @return Formatted String representation of By date.","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"jeong-jaeho"},"content":"    private String formatEventDate(LocalDate dateTime) {","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"jeong-jaeho"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"jeong-jaeho"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jeong-jaeho":64}},{"path":"src/main/java/linus/Linus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeong-jaeho"},"content":"package linus;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"jeong-jaeho"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"jeong-jaeho"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"jeong-jaeho"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"jeong-jaeho"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jeong-jaeho"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"jeong-jaeho"},"content":" * Main class for running Linus chatbot.","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"jeong-jaeho"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"jeong-jaeho"},"content":"public class Linus {","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"jeong-jaeho"},"content":"     * Carries out the main execution of the app.","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"jeong-jaeho"},"content":"     * @param args Group of arguments taken.","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"jeong-jaeho"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"jeong-jaeho"},"content":"        System.out.println(\"Hello! I\u0027m Linus!\\nWhat can I do for you?\\n\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"jeong-jaeho"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"jeong-jaeho"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"jeong-jaeho"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"jeong-jaeho"},"content":"        ui.showMessage(\"Hello! I\u0027m Linus!\\nWhat can I do for you?\\n\\n\");","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"jeong-jaeho"},"content":"        ArrayList\u003cTask\u003e loadedTaskList \u003d storage.loadTasksFromFile(); // Load list of tasks from file","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"jeong-jaeho"},"content":"        taskList.addAll(loadedTaskList);","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"jeong-jaeho"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"jeong-jaeho"},"content":"        // while loop to repeat printing of multiple Scanner inputs","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"jeong-jaeho"},"content":"        // adapted with help of AI","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"jeong-jaeho"},"content":"        while (true) {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"jeong-jaeho"},"content":"            String input \u003d ui.getUserInput(scanner);","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"jeong-jaeho"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"jeong-jaeho"},"content":"                // Check if the user wants to exit.","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"jeong-jaeho"},"content":"                // When comparing strings for equality, you should use the equals() method, not the \u003d\u003d operator.","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"jeong-jaeho"},"content":"                if (input.equals(\"bye\")) { // exit chat","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"jeong-jaeho"},"content":"                    ui.showMessage(\"Bye. It\u0027s been a pleasure chatting with you!\");","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"jeong-jaeho"},"content":"                    ArrayList\u003cTask\u003e currUpdatedTaskList \u003d taskList.getAllTasks();","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"jeong-jaeho"},"content":"                    storage.saveTasksToFile(currUpdatedTaskList); // Save tasks to file before exiting","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"jeong-jaeho"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"jeong-jaeho"},"content":"                } else if (input.equals(\"list\")) { // list tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"jeong-jaeho"},"content":"                    ui.showMessage(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"jeong-jaeho"},"content":"                    for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"jeong-jaeho"},"content":"                        ui.showMessage(i + \". \" + taskList.getTask(i));","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"jeong-jaeho"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"jeong-jaeho"},"content":"                } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"jeong-jaeho"},"content":"                    String keyword \u003d input.substring(5).trim();","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"jeong-jaeho"},"content":"                    ui.findTasks(taskList, keyword);","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"jeong-jaeho"},"content":"                } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"jeong-jaeho"},"content":"                    int indexOfTask \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"jeong-jaeho"},"content":"                    Task currTask \u003d taskList.getTask(indexOfTask);","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"jeong-jaeho"},"content":"                    currTask.markAsDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"jeong-jaeho"},"content":"                    ui.showMessage(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"jeong-jaeho"},"content":"                    ui.showMessage(currTask.toString());","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"jeong-jaeho"},"content":"                } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"jeong-jaeho"},"content":"                    int indexOfTask \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"jeong-jaeho"},"content":"                    Task currTask \u003d taskList.getTask(indexOfTask);","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"jeong-jaeho"},"content":"                    currTask.markAsNotDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"jeong-jaeho"},"content":"                    ui.showMessage(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"jeong-jaeho"},"content":"                    ui.showMessage(currTask.toString());","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"jeong-jaeho"},"content":"                } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"jeong-jaeho"},"content":"                    // Check if the input string is long enough","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"jeong-jaeho"},"content":"                    if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"jeong-jaeho"},"content":"                        throw new LinusException(\"Please specify the description of the todo task, \" +","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"jeong-jaeho"},"content":"                                \"starting from one whitespace away from the keyword \u0027todo\u0027\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"jeong-jaeho"},"content":"                                \" (e.g. todo borrow book)\");","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"jeong-jaeho"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"jeong-jaeho"},"content":"                    String description \u003d input.substring(5);","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"jeong-jaeho"},"content":"                    if (description.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"jeong-jaeho"},"content":"                        throw new LinusException(\"Please specify the description of the todo task, \" +","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"jeong-jaeho"},"content":"                                \"starting from one whitespace away from the keyword \u0027todo\u0027\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"jeong-jaeho"},"content":"                                \" (e.g. todo borrow book)\");","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"jeong-jaeho"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"jeong-jaeho"},"content":"                    Task todo \u003d new Todo(description, false);","lastModifiedDate":"2024-02-14"},{"lineNumber":81,"author":{"gitId":"jeong-jaeho"},"content":"                    taskList.addTask(todo);","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"jeong-jaeho"},"content":"                    ui.showMessage(\"Got it. I\u0027ve added this task: \\n\" + todo);","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"jeong-jaeho"},"content":"                    ui.showMessage(\"Now you have \" + taskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"jeong-jaeho"},"content":"                } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"jeong-jaeho"},"content":"                    String[] substrings \u003d input.split(\" /by \");","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"jeong-jaeho"},"content":"                    if (substrings[0].length() \u003c\u003d 9) {","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"jeong-jaeho"},"content":"                        throw new LinusException(\"Please specify the description of the deadline task \" +","lastModifiedDate":"2024-02-18"},{"lineNumber":89,"author":{"gitId":"jeong-jaeho"},"content":"                                \"(e.g. deadline return book /by 2019-10-15)\");","lastModifiedDate":"2024-02-18"},{"lineNumber":90,"author":{"gitId":"jeong-jaeho"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"jeong-jaeho"},"content":"                    String description \u003d substrings[0].substring(9);","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"jeong-jaeho"},"content":"                    if (description.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"jeong-jaeho"},"content":"                        throw new LinusException(\"Please specify the description of the deadline task \" +","lastModifiedDate":"2024-02-18"},{"lineNumber":96,"author":{"gitId":"jeong-jaeho"},"content":"                                \"(e.g. deadline return book /by 2019-10-15)\");","lastModifiedDate":"2024-02-18"},{"lineNumber":97,"author":{"gitId":"jeong-jaeho"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"jeong-jaeho"},"content":"                    if (!input.contains(\" /by \") || substrings[1].isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"jeong-jaeho"},"content":"                        throw new LinusException(\"Please state the deadline period \" +","lastModifiedDate":"2024-02-18"},{"lineNumber":101,"author":{"gitId":"jeong-jaeho"},"content":"                                \"(e.g. deadline return book /by 2019-10-15)\");","lastModifiedDate":"2024-02-18"},{"lineNumber":102,"author":{"gitId":"jeong-jaeho"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"jeong-jaeho"},"content":"                    try {","lastModifiedDate":"2024-02-18"},{"lineNumber":105,"author":{"gitId":"jeong-jaeho"},"content":"                        LocalDate by \u003d LocalDate.parse(substrings[1]);","lastModifiedDate":"2024-02-18"},{"lineNumber":106,"author":{"gitId":"jeong-jaeho"},"content":"                        Task deadline \u003d new Deadline(description, by, false);","lastModifiedDate":"2024-02-14"},{"lineNumber":107,"author":{"gitId":"jeong-jaeho"},"content":"                        taskList.addTask(deadline);","lastModifiedDate":"2024-02-18"},{"lineNumber":108,"author":{"gitId":"jeong-jaeho"},"content":"                        ui.showMessage(\"Got it. I\u0027ve added this task: \\n\" + deadline);","lastModifiedDate":"2024-02-18"},{"lineNumber":109,"author":{"gitId":"jeong-jaeho"},"content":"                        ui.showMessage(\"Now you have \" + taskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":110,"author":{"gitId":"jeong-jaeho"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":111,"author":{"gitId":"jeong-jaeho"},"content":"                        throw new LinusException(\"Invalid date format. Please use the format yyyy-MM-dd (e.g. 2019-10-15)\");","lastModifiedDate":"2024-02-18"},{"lineNumber":112,"author":{"gitId":"jeong-jaeho"},"content":"                    }","lastModifiedDate":"2024-02-18"},{"lineNumber":113,"author":{"gitId":"jeong-jaeho"},"content":"                } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"jeong-jaeho"},"content":"                    if (!input.contains(\" /from \") || !input.contains(\" /to \")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"jeong-jaeho"},"content":"                        throw new LinusException(\"Please state the event period by using \" +","lastModifiedDate":"2024-02-18"},{"lineNumber":116,"author":{"gitId":"jeong-jaeho"},"content":"                                \" /from and /to with correct spacing (eg. event team meeting /from 2019-10-15 /to 2019-10-16)\");","lastModifiedDate":"2024-02-18"},{"lineNumber":117,"author":{"gitId":"jeong-jaeho"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"jeong-jaeho"},"content":"                    String[] substrings \u003d input.split(\" /from \");","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"jeong-jaeho"},"content":"                    String description \u003d substrings[0].substring(6);","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"jeong-jaeho"},"content":"                    String[] substrings2 \u003d substrings[1].split(\" /to \");","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"jeong-jaeho"},"content":"                    if (substrings2.length \u003c 2 || description.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"jeong-jaeho"},"content":"                        throw new LinusException(\"Please specify the description of the deadline task \" +","lastModifiedDate":"2024-02-18"},{"lineNumber":125,"author":{"gitId":"jeong-jaeho"},"content":"                                \"(eg. event team meeting /from 2019-10-15 /to 2019-10-16)\");","lastModifiedDate":"2024-02-18"},{"lineNumber":126,"author":{"gitId":"jeong-jaeho"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"jeong-jaeho"},"content":"                    try {","lastModifiedDate":"2024-02-18"},{"lineNumber":129,"author":{"gitId":"jeong-jaeho"},"content":"                        LocalDate from \u003d LocalDate.parse(substrings2[0]);","lastModifiedDate":"2024-02-18"},{"lineNumber":130,"author":{"gitId":"jeong-jaeho"},"content":"                        LocalDate to \u003d LocalDate.parse(substrings2[1]);","lastModifiedDate":"2024-02-18"},{"lineNumber":131,"author":{"gitId":"jeong-jaeho"},"content":"                        Task event \u003d new Event(description, from, to, false);","lastModifiedDate":"2024-02-14"},{"lineNumber":132,"author":{"gitId":"jeong-jaeho"},"content":"                        taskList.addTask(event);","lastModifiedDate":"2024-02-18"},{"lineNumber":133,"author":{"gitId":"jeong-jaeho"},"content":"                        ui.showMessage(\"Got it. I\u0027ve added this task: \\n\" + event);","lastModifiedDate":"2024-02-18"},{"lineNumber":134,"author":{"gitId":"jeong-jaeho"},"content":"                        ui.showMessage(\"Now you have \" + taskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":135,"author":{"gitId":"jeong-jaeho"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":136,"author":{"gitId":"jeong-jaeho"},"content":"                        throw new LinusException(\"Invalid date format. Please use the format yyyy-MM-dd (e.g. 2019-10-15)\");","lastModifiedDate":"2024-02-18"},{"lineNumber":137,"author":{"gitId":"jeong-jaeho"},"content":"                    }","lastModifiedDate":"2024-02-18"},{"lineNumber":138,"author":{"gitId":"jeong-jaeho"},"content":"                } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"jeong-jaeho"},"content":"                    if (input.length() \u003c\u003d 7) {","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"jeong-jaeho"},"content":"                        throw new LinusException(\"Please state the index of the task you want to delete with correct spacing\" +","lastModifiedDate":"2024-02-18"},{"lineNumber":141,"author":{"gitId":"jeong-jaeho"},"content":"                                \" (e.g. delete 3)\");","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"jeong-jaeho"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"jeong-jaeho"},"content":"                    int indexOfTask \u003d Integer.parseInt(input.substring(7).trim());","lastModifiedDate":"2024-02-18"},{"lineNumber":145,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"jeong-jaeho"},"content":"                    if (indexOfTask \u003c 0 || indexOfTask \u003e\u003d taskList.getSize()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":147,"author":{"gitId":"jeong-jaeho"},"content":"                        throw new LinusException(\"The task index is out of range.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":148,"author":{"gitId":"jeong-jaeho"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"jeong-jaeho"},"content":"                    taskList.removeTask(indexOfTask);","lastModifiedDate":"2024-02-18"},{"lineNumber":151,"author":{"gitId":"jeong-jaeho"},"content":"                    System.out.println(\"Now you have \" + taskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":152,"author":{"gitId":"jeong-jaeho"},"content":"                } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"jeong-jaeho"},"content":"                    throw new LinusException(\"Please give commands that start with any of the following:\" +","lastModifiedDate":"2024-02-18"},{"lineNumber":154,"author":{"gitId":"jeong-jaeho"},"content":"                            \" [todo, deadline, event, mark, unmark, list, bye, delete]\");","lastModifiedDate":"2024-02-01"},{"lineNumber":155,"author":{"gitId":"jeong-jaeho"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"jeong-jaeho"},"content":"            } catch (LinusException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":157,"author":{"gitId":"jeong-jaeho"},"content":"                ui.showMessage(e.getMessage());","lastModifiedDate":"2024-02-18"},{"lineNumber":158,"author":{"gitId":"jeong-jaeho"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"jeong-jaeho"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":160,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":161,"author":{"gitId":"jeong-jaeho"},"content":"        scanner.close();","lastModifiedDate":"2024-02-18"},{"lineNumber":162,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":163,"author":{"gitId":"jeong-jaeho"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jeong-jaeho":163}},{"path":"src/main/java/linus/LinusException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeong-jaeho"},"content":"package linus;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"jeong-jaeho"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"jeong-jaeho"},"content":" * Represents the exception class specific to Linus class.","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"jeong-jaeho"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"jeong-jaeho"},"content":"public class LinusException extends Exception {","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"jeong-jaeho"},"content":"     * Prints out the error message specified.","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"jeong-jaeho"},"content":"     * @param message Error message to be printed.","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"jeong-jaeho"},"content":"    public LinusException(String message) {","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"jeong-jaeho"},"content":"        super(message);","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"jeong-jaeho"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"jeong-jaeho":15}},{"path":"src/main/java/linus/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeong-jaeho"},"content":"package linus;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"jeong-jaeho"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"jeong-jaeho"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"jeong-jaeho"},"content":" * Parses String.","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"jeong-jaeho"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"jeong-jaeho"},"content":"public class Parser {","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"jeong-jaeho"},"content":"     * Parses each input String line from stored data and returns relevant tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"jeong-jaeho"},"content":"     * @param line String line to be parsed into a Task.","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"jeong-jaeho"},"content":"     * @return Task object taken from stored data.","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"jeong-jaeho"},"content":"    public static Task parseTask(String line) {","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"jeong-jaeho"},"content":"        String[] splitParts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"jeong-jaeho"},"content":"        String taskType \u003d splitParts[0];","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"jeong-jaeho"},"content":"        boolean isDone \u003d splitParts[1].equals(\"1\");","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"jeong-jaeho"},"content":"        String description \u003d splitParts[2];","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"jeong-jaeho"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"jeong-jaeho"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"jeong-jaeho"},"content":"        case \"T\":","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"jeong-jaeho"},"content":"            task \u003d new Todo(description, isDone);","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"jeong-jaeho"},"content":"            break;","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"jeong-jaeho"},"content":"        case \"D\":","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"jeong-jaeho"},"content":"            LocalDate byDate \u003d LocalDate.parse(splitParts[3]);","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"jeong-jaeho"},"content":"            task \u003d new Deadline(description, byDate, isDone);","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"jeong-jaeho"},"content":"            break;","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"jeong-jaeho"},"content":"        case \"E\": // Event format in File is E | (isDone) | (Name) | (From) | (To)","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"jeong-jaeho"},"content":"            LocalDate fromDate \u003d LocalDate.parse(splitParts[3]);","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"jeong-jaeho"},"content":"            LocalDate toDate \u003d LocalDate.parse(splitParts[4]);","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"jeong-jaeho"},"content":"            task \u003d new Event(description, fromDate, toDate, isDone);","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"jeong-jaeho"},"content":"            break;","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"jeong-jaeho"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"jeong-jaeho"},"content":"        return task;","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"jeong-jaeho"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"jeong-jaeho":39}},{"path":"src/main/java/linus/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeong-jaeho"},"content":"package linus;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"jeong-jaeho"},"content":"import java.io.File;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"jeong-jaeho"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"jeong-jaeho"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"jeong-jaeho"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"jeong-jaeho"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"jeong-jaeho"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"jeong-jaeho"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"jeong-jaeho"},"content":" * Deals with loading and saving tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"jeong-jaeho"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"jeong-jaeho"},"content":"public class Storage {","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"jeong-jaeho"},"content":"    // Adapted from @HusseinSafwan02 and AI","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"jeong-jaeho"},"content":"    private static final String FILE_PATH \u003d \"./data/linus.txt\";","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"jeong-jaeho"},"content":"    private static final String DIRECTORY_PATH \u003d \"./data\";","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"jeong-jaeho"},"content":"     * Loads tasks from stored data file.","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"jeong-jaeho"},"content":"     * @return List of tasks loaded from data file.","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"jeong-jaeho"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromFile() {","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"jeong-jaeho"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"jeong-jaeho"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"jeong-jaeho"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"jeong-jaeho"},"content":"            if (file.exists()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"jeong-jaeho"},"content":"                Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"jeong-jaeho"},"content":"                while (scanner.hasNextLine()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"jeong-jaeho"},"content":"                    String line \u003d scanner.nextLine();","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"jeong-jaeho"},"content":"                    Task task \u003d Parser.parseTask(line);","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"jeong-jaeho"},"content":"                    if (task !\u003d null) {","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"jeong-jaeho"},"content":"                        tasks.add(task);","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"jeong-jaeho"},"content":"                    }","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"jeong-jaeho"},"content":"                }","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"jeong-jaeho"},"content":"                scanner.close();","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"jeong-jaeho"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"jeong-jaeho"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"jeong-jaeho"},"content":"            System.out.println(\"File not found. Creating a new file!\");","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"jeong-jaeho"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"jeong-jaeho"},"content":"        return tasks;","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"jeong-jaeho"},"content":"     * Saves tasks to stored data file.","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"jeong-jaeho"},"content":"     * @param tasks Tasks to be stored.","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"jeong-jaeho"},"content":"    public void saveTasksToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"jeong-jaeho"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"jeong-jaeho"},"content":"            File directory \u003d new File(DIRECTORY_PATH);","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"jeong-jaeho"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"jeong-jaeho"},"content":"                directory.mkdirs(); // Create directory if it doesn\u0027t exist","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"jeong-jaeho"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"jeong-jaeho"},"content":"            FileWriter writer \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"jeong-jaeho"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"jeong-jaeho"},"content":"                writer.write(taskToFileString(task) + \"\\n\");","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"jeong-jaeho"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"jeong-jaeho"},"content":"            writer.close();","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"jeong-jaeho"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"jeong-jaeho"},"content":"            System.out.println(\"Error saving tasks to the file: \" + e.getMessage());","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"jeong-jaeho"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":75,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":76,"author":{"gitId":"jeong-jaeho"},"content":"     * Converts tasks to the format required to be stored into data.","lastModifiedDate":"2024-02-21"},{"lineNumber":77,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":78,"author":{"gitId":"jeong-jaeho"},"content":"     * @param task Task to be converted.","lastModifiedDate":"2024-02-21"},{"lineNumber":79,"author":{"gitId":"jeong-jaeho"},"content":"     * @return String representation of the converted Task within data file.","lastModifiedDate":"2024-02-21"},{"lineNumber":80,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":81,"author":{"gitId":"jeong-jaeho"},"content":"    public String taskToFileString(Task task) {","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"jeong-jaeho"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"jeong-jaeho"},"content":"            return \"T | \" + (task.isDone() ? \"1\" : \"0\") + \" | \" + task.getDescription();","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"jeong-jaeho"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2024-02-14"},{"lineNumber":85,"author":{"gitId":"jeong-jaeho"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-02-14"},{"lineNumber":86,"author":{"gitId":"jeong-jaeho"},"content":"            return \"D | \" + (task.isDone() ? \"1\" : \"0\") + \" | \" + task.getDescription() + \" | \" + deadline.getBy();","lastModifiedDate":"2024-02-14"},{"lineNumber":87,"author":{"gitId":"jeong-jaeho"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-02-14"},{"lineNumber":88,"author":{"gitId":"jeong-jaeho"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2024-02-14"},{"lineNumber":89,"author":{"gitId":"jeong-jaeho"},"content":"            return \"E | \" + (task.isDone() ? \"1\" : \"0\") + \" | \" + task.getDescription() + \" | \" + event.getFrom() + \" | \" + event.getTo();","lastModifiedDate":"2024-02-14"},{"lineNumber":90,"author":{"gitId":"jeong-jaeho"},"content":"        } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":91,"author":{"gitId":"jeong-jaeho"},"content":"            throw new IllegalArgumentException(\"Invalid task type!\");","lastModifiedDate":"2024-02-14"},{"lineNumber":92,"author":{"gitId":"jeong-jaeho"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":93,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":94,"author":{"gitId":"jeong-jaeho"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"jeong-jaeho":94}},{"path":"src/main/java/linus/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeong-jaeho"},"content":"package linus;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"jeong-jaeho"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"jeong-jaeho"},"content":" * Represents tasks within the app.","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"jeong-jaeho"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"jeong-jaeho"},"content":"public class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jeong-jaeho"},"content":"    protected String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jeong-jaeho"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"jeong-jaeho"},"content":"     * Constructs a task.","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"jeong-jaeho"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"jeong-jaeho"},"content":"     * @param isDone Whether the task is completed or not.","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"jeong-jaeho"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"jeong-jaeho"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"jeong-jaeho"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"jeong-jaeho"},"content":"     * Returns an icon to show if the task is completed or not.","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"jeong-jaeho"},"content":"     * @return X (yes) or blank (no).","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"jeong-jaeho"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"jeong-jaeho"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"jeong-jaeho"},"content":"     * Marks the task as completed.","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"jeong-jaeho"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"jeong-jaeho"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"jeong-jaeho"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"jeong-jaeho"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"jeong-jaeho"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"jeong-jaeho"},"content":"     * Returns description of the task in String format.","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"jeong-jaeho"},"content":"     * @return String representation of the task\u0027s description.","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"jeong-jaeho"},"content":"    // instead of toString(), express description as String explicitly","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"jeong-jaeho"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"jeong-jaeho"},"content":"        return this.description;","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"jeong-jaeho"},"content":"     * Returns whether the task is done or not.","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"jeong-jaeho"},"content":"     * @return Whether the task is done or not.","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"jeong-jaeho"},"content":"    public Boolean isDone() {","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"jeong-jaeho"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"jeong-jaeho"},"content":"     * Returns the String representation of how the task is to be output.","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"jeong-jaeho"},"content":"     * @return String representation of how the task is to be output.","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"jeong-jaeho"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"jeong-jaeho"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"jeong-jaeho"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"jeong-jaeho"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jeong-jaeho":72}},{"path":"src/main/java/linus/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeong-jaeho"},"content":"package linus;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"jeong-jaeho"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"jeong-jaeho"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"jeong-jaeho"},"content":" * Represents the ArrayList of Tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"jeong-jaeho"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"jeong-jaeho"},"content":"public class TaskList {","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"jeong-jaeho"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"jeong-jaeho"},"content":"     * Constructs a TaskList.","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"jeong-jaeho"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"jeong-jaeho"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"jeong-jaeho"},"content":"     * Adds Task into TaskList.","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"jeong-jaeho"},"content":"     * @param task The Task to be added.","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"jeong-jaeho"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"jeong-jaeho"},"content":"        this.taskList.add(task);","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"jeong-jaeho"},"content":"     * Removes Task at the input index within TaskList.","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"jeong-jaeho"},"content":"     * @param index Index of the Task to be removed.","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"jeong-jaeho"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"jeong-jaeho"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"jeong-jaeho"},"content":"     * Returns the Task at the specified index within TaskList.","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"jeong-jaeho"},"content":"     * @param index Index within TaskList of the Task to be retrieved.","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"jeong-jaeho"},"content":"     * @return Task to be retrieved.","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"jeong-jaeho"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"jeong-jaeho"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"jeong-jaeho"},"content":"     * Returns the number of Tasks in TaskList.","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"jeong-jaeho"},"content":"     * @return Number of Tasks in TaskList.","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"jeong-jaeho"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"jeong-jaeho"},"content":"        return this.taskList.size();","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"jeong-jaeho"},"content":"     * Adds all Tasks in input TaskList into the current iterated TaskList.","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"jeong-jaeho"},"content":"     * @param taskList TaskList containing Tasks to be added.","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"jeong-jaeho"},"content":"    // rename needed below","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"jeong-jaeho"},"content":"    public void addAll(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"jeong-jaeho"},"content":"        this.taskList.addAll(taskList);","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"jeong-jaeho"},"content":"     * Returns TaskList containing all Tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"jeong-jaeho"},"content":"     * @return TaskList containing all Tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"jeong-jaeho"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"jeong-jaeho"},"content":"        return this.taskList;","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":74,"author":{"gitId":"jeong-jaeho"},"content":"    public ArrayList\u003cTask\u003e findMatchingTasks(String findKeyword) {","lastModifiedDate":"2024-02-21"},{"lineNumber":75,"author":{"gitId":"jeong-jaeho"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-21"},{"lineNumber":76,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":77,"author":{"gitId":"jeong-jaeho"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-02-21"},{"lineNumber":78,"author":{"gitId":"jeong-jaeho"},"content":"            if (task.getDescription().contains(findKeyword)) {","lastModifiedDate":"2024-02-21"},{"lineNumber":79,"author":{"gitId":"jeong-jaeho"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-02-21"},{"lineNumber":80,"author":{"gitId":"jeong-jaeho"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":81,"author":{"gitId":"jeong-jaeho"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":82,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":83,"author":{"gitId":"jeong-jaeho"},"content":"        return matchingTasks;","lastModifiedDate":"2024-02-21"},{"lineNumber":84,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":85,"author":{"gitId":"jeong-jaeho"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"jeong-jaeho":85}},{"path":"src/main/java/linus/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeong-jaeho"},"content":"package linus;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"jeong-jaeho"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"jeong-jaeho"},"content":" * Represents the Todo Task.","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"jeong-jaeho"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"jeong-jaeho"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"jeong-jaeho"},"content":"     * Constructs a Todo Task.","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"jeong-jaeho"},"content":"     * @param name Name of the task.","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"jeong-jaeho"},"content":"     * @param isDone Whether the task is completed or not.","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"jeong-jaeho"},"content":"    public Todo(String name, Boolean isDone) {","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"jeong-jaeho"},"content":"        super(name, isDone);","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"jeong-jaeho"},"content":"     * Returns the output or String representation of the Todo Task.","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"jeong-jaeho"},"content":"     * @return String representation of the Todo task.","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"jeong-jaeho"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"jeong-jaeho"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"jeong-jaeho"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"jeong-jaeho"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jeong-jaeho":26}},{"path":"src/main/java/linus/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeong-jaeho"},"content":"package linus;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"jeong-jaeho"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"jeong-jaeho"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"jeong-jaeho"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"jeong-jaeho"},"content":" * Represents all the interactions with the user.","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"jeong-jaeho"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"jeong-jaeho"},"content":"public class Ui {","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"jeong-jaeho"},"content":"     * Returns the next line of user input read from the Scanner.","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"jeong-jaeho"},"content":"     * @param scanner Scanner object to read input.","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"jeong-jaeho"},"content":"     * @return Next line\u0027s String representation.","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"jeong-jaeho"},"content":"    public String getUserInput(Scanner scanner) {","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"jeong-jaeho"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"jeong-jaeho"},"content":"     * Prints out the input String message.","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"jeong-jaeho"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"jeong-jaeho"},"content":"     * @param message Input String message to be printed out.","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"jeong-jaeho"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"jeong-jaeho"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"jeong-jaeho"},"content":"    public void findTasks(TaskList taskList, String keyword) {","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"jeong-jaeho"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d taskList.findMatchingTasks(keyword);","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"jeong-jaeho"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"jeong-jaeho"},"content":"            showMessage(\"No matching tasks found.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"jeong-jaeho"},"content":"        } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"jeong-jaeho"},"content":"            showMessage(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"jeong-jaeho"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"jeong-jaeho"},"content":"                showMessage(i + \". \" + matchingTasks.get(i));","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"jeong-jaeho"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"jeong-jaeho"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"jeong-jaeho"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"jeong-jaeho":42}},{"path":"src/test/java/linus/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeong-jaeho"},"content":"package linus;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"jeong-jaeho"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"jeong-jaeho"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"jeong-jaeho"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"jeong-jaeho"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"jeong-jaeho"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"jeong-jaeho"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"jeong-jaeho"},"content":" * Tests for the Parser class.","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"jeong-jaeho"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"jeong-jaeho"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"jeong-jaeho"},"content":"    // Adapted from AI and @quelinxiao","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"jeong-jaeho"},"content":"    // test the method parseTask of Parser class","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"jeong-jaeho"},"content":"     * Tests whether parseTask works for valid Todo line from stored data.","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"jeong-jaeho"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"jeong-jaeho"},"content":"    public void testParseTaskTodo() {","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"jeong-jaeho"},"content":"        String todoLine \u003d \"T | 1 | Finish homework\";","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"jeong-jaeho"},"content":"        Task todoTask \u003d Parser.parseTask(todoLine);","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"jeong-jaeho"},"content":"        assertTrue(todoTask instanceof Todo);","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"jeong-jaeho"},"content":"        assertEquals(\"Finish homework\", todoTask.getDescription());","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"jeong-jaeho"},"content":"        assertTrue(todoTask.isDone());","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"jeong-jaeho"},"content":"     * Tests whether parseTask works for valid Event line from stored data.","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"jeong-jaeho"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"jeong-jaeho"},"content":"    public void testParseTaskEvent() {","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"jeong-jaeho"},"content":"        String eventLine \u003d \"E | 0 | Project Linus | 2024-01-15 | 2024-02-29\";","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"jeong-jaeho"},"content":"        Task eventTask \u003d Parser.parseTask(eventLine);","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"jeong-jaeho"},"content":"        assertTrue(eventTask instanceof Event);","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"jeong-jaeho"},"content":"        assertEquals(\"Project Linus\", eventTask.getDescription());","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"jeong-jaeho"},"content":"        assertFalse(eventTask.isDone());","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"jeong-jaeho"},"content":"        assertEquals(LocalDate.parse(\"2024-01-15\"), ((Event) eventTask).getFrom());","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"jeong-jaeho"},"content":"        assertEquals(LocalDate.parse(\"2024-02-29\"), ((Event) eventTask).getTo());","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"jeong-jaeho"},"content":"     * Tests whether parseTask works for valid Deadline line from stored data.","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"jeong-jaeho"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"jeong-jaeho"},"content":"    public void testParseTaskDeadline() {","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"jeong-jaeho"},"content":"        String deadlineLine \u003d \"D | 0 | Finish Project Linus | 2024-02-29\";","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"jeong-jaeho"},"content":"        Task deadlineTask \u003d Parser.parseTask(deadlineLine);","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"jeong-jaeho"},"content":"        assertTrue(deadlineTask instanceof Deadline);","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"jeong-jaeho"},"content":"        assertEquals(\"Finish Project Linus\", deadlineTask.getDescription());","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"jeong-jaeho"},"content":"        assertFalse(deadlineTask.isDone());","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"jeong-jaeho"},"content":"        assertEquals(LocalDate.parse(\"2024-02-29\"), ((Deadline) deadlineTask).getBy());","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"jeong-jaeho"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"jeong-jaeho":59}},{"path":"src/test/java/linus/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeong-jaeho"},"content":"package linus;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"jeong-jaeho"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"jeong-jaeho"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"jeong-jaeho"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"jeong-jaeho"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"jeong-jaeho"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"jeong-jaeho"},"content":" * Tests the Storage class.","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"jeong-jaeho"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"jeong-jaeho"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"jeong-jaeho"},"content":"    // testing the taskToFileString method in Storage.java","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"jeong-jaeho"},"content":"     * Tests whether taskToFileString method correctly converts Todo Task into File String.","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"jeong-jaeho"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"jeong-jaeho"},"content":"    public void testTaskToFileStringTodo() {","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"jeong-jaeho"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"jeong-jaeho"},"content":"        Task todoTask \u003d new Todo(\"Finish homework\", false);","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"jeong-jaeho"},"content":"        String expectedOutput \u003d \"T | 0 | Finish homework\";","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"jeong-jaeho"},"content":"        String actualOutput \u003d storage.taskToFileString(todoTask);","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"jeong-jaeho"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"jeong-jaeho"},"content":"     * Tests whether taskToFileString method correctly converts Deadline Task into File String.","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"jeong-jaeho"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"jeong-jaeho"},"content":"    public void testTaskToFileStringDeadline() {","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"jeong-jaeho"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"jeong-jaeho"},"content":"        LocalDate byDate \u003d LocalDate.parse(\"2024-02-29\");","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"jeong-jaeho"},"content":"        Task deadlineTask \u003d new Deadline(\"Finish Project Linus\", byDate, false);","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"jeong-jaeho"},"content":"        String expectedOutput \u003d \"D | 0 | Finish Project Linus | 2024-02-29\";","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"jeong-jaeho"},"content":"        String actualOutput \u003d storage.taskToFileString(deadlineTask);","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"jeong-jaeho"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"jeong-jaeho"},"content":"     * Tests whether taskToFileString method correctly converts Event Task into File String.","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"jeong-jaeho"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"jeong-jaeho"},"content":"    public void testTaskToFileStringEvent() {","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"jeong-jaeho"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"jeong-jaeho"},"content":"        LocalDate fromDate \u003d LocalDate.parse(\"2024-01-15\");","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"jeong-jaeho"},"content":"        LocalDate toDate \u003d LocalDate.parse(\"2024-02-29\");","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"jeong-jaeho"},"content":"        Task eventTask \u003d new Event(\"Project Linus\", fromDate, toDate, false);","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"jeong-jaeho"},"content":"        String expectedOutput \u003d \"E | 0 | Project Linus | 2024-01-15 | 2024-02-29\";","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"jeong-jaeho"},"content":"        String actualOutput \u003d storage.taskToFileString(eventTask);","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"jeong-jaeho"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"jeong-jaeho"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"jeong-jaeho"},"content":"     * Tests whether taskToFileString method correctly throws exception for invalid task input.","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"jeong-jaeho"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"jeong-jaeho"},"content":"    // Adapted from AI","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"jeong-jaeho"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"jeong-jaeho"},"content":"    public void testTaskToFileStringWrongTask() {","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"jeong-jaeho"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"jeong-jaeho"},"content":"        Task wrongTask \u003d new Task(\"Wrong task\", false);","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"jeong-jaeho"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"jeong-jaeho"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e storage.taskToFileString(wrongTask));","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"jeong-jaeho"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"jeong-jaeho"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"jeong-jaeho":72}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jeong-jaeho"},"content":"todo finish lecture videos","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jeong-jaeho"},"content":"todo borrow book","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jeong-jaeho"},"content":"list","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jeong-jaeho"},"content":"deadline return book /by Monday","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jeong-jaeho"},"content":"event team meeting /from Wed 6pm /to 8pm","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jeong-jaeho"},"content":"bye","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jeong-jaeho":6}}]
