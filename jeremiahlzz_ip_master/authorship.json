[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"# Zero bot","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"This is a project created from the Duke project template (for a greenfield Java project).","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":"## Acknowledgements","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":"Followed checkstyle implementation at:","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":"https://github.com/nus-cs2103-AY2021S2/forum/issues/93","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"jeremiahlzz":5,"-":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":"    testImplementation \"org.mockito:mockito-inline:3.11.2\"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"jeremiahlzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"jeremiahlzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"jeremiahlzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"jeremiahlzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"jeremiahlzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"jeremiahlzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"jeremiahlzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"jeremiahlzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"jeremiahlzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"jeremiahlzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"jeremiahlzz"},"content":"    mainClass.set(\"Main\")","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"jeremiahlzz"},"content":"    archiveBaseName.set(\"zero\")","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"jeremiahlzz"},"content":"    archiveClassifier.set(null)","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"jeremiahlzz"},"content":"    archiveVersion.set(\"0.2\")","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"jeremiahlzz"},"content":"checkstyle {","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"jeremiahlzz"},"content":"    toolVersion \u003d \u002710.3.3\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"jeremiahlzz"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jeremiahlzz":25,"-":39}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"import controller.Zero;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":" * Class containing the {@code main} method","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":"public class Main {","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":"        Application.launch(Zero.class, args);","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jeremiahlzz":11}},{"path":"src/main/java/controller/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package controller;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":"import java.util.Hashtable;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":" * Parser class for parsing user inputs in the Zero bot.","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":"public class Parser {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jeremiahlzz"},"content":"    private static DateTimeFormatter dtfInput \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"    public static void setDateTimeFormat(DateTimeFormatter dtf) {","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":"        dtfInput \u003d dtf;","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"jeremiahlzz"},"content":"     * Parses input string in the form of \"[cmd] [index/name] [args...]\".","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"jeremiahlzz"},"content":"     * \u003cp\u003e[args...] are in the form of \"/[arg name] [value]\". For example:","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"jeremiahlzz"},"content":"     * \u003cblockquote\u003e\u003cpre\u003e\"/from 20/3/23\"\u003c/pre\u003e\u003c/blockquote\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":"     * @param input String to parse.","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"jeremiahlzz"},"content":"     * @return {@code Hashtable\u003cKey, Value\u003e} with minimally 1 key, \"cmd\".","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"jeremiahlzz"},"content":"    static Hashtable\u003cString, String\u003e parseInput(String input) {","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jeremiahlzz"},"content":"        String[] tokens \u003d input.split(\" \");","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jeremiahlzz"},"content":"        Hashtable\u003cString, String\u003e result \u003d new Hashtable\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jeremiahlzz"},"content":"        result.put(\"cmd\", tokens[0]);","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jeremiahlzz"},"content":"        String type \u003d \"name\";","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jeremiahlzz"},"content":"        StringBuilder arg \u003d new StringBuilder();","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jeremiahlzz"},"content":"        for (int i \u003d 1; i \u003c tokens.length; i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jeremiahlzz"},"content":"            if (tokens[i].startsWith(\"/\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jeremiahlzz"},"content":"                result.put(type, arg.toString().trim());","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jeremiahlzz"},"content":"                type \u003d tokens[i];","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jeremiahlzz"},"content":"                arg.setLength(0);","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"jeremiahlzz"},"content":"            } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jeremiahlzz"},"content":"                if (tokens[i] !\u003d null) {","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"jeremiahlzz"},"content":"                    arg.append(\" \").append(tokens[i]);","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"jeremiahlzz"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"jeremiahlzz"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"jeremiahlzz"},"content":"        result.put(type, arg.toString().trim());","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"jeremiahlzz"},"content":"        return result;","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"jeremiahlzz"},"content":"     * Parses the input string in 1-based indexing and returns an int in 0-based indexing.","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"jeremiahlzz"},"content":"     * @param index String to parse with 1-based indexing.","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"jeremiahlzz"},"content":"     * @return {@code int} with 0-based indexing.","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"jeremiahlzz"},"content":"     * @throws NumberFormatException If the string does not contain a parsable integer.","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"jeremiahlzz"},"content":"    static int parseIndex(String index) throws NumberFormatException {","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"jeremiahlzz"},"content":"        return Integer.parseInt(index) - 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"jeremiahlzz"},"content":"     * Checks if the string is null, empty or filled with blank spaces","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"jeremiahlzz"},"content":"     * @param s String to verify.","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"jeremiahlzz"},"content":"     * @throws IllegalArgumentException If the string is null, empty or filled with blank spaces.","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"jeremiahlzz"},"content":"    static void checkNullOrEmpty(String s) throws IllegalArgumentException {","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"jeremiahlzz"},"content":"        if (s \u003d\u003d null | s.isEmpty() | s.isBlank()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"jeremiahlzz"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"jeremiahlzz"},"content":"     * Parses the input string and returns a {@code LocalDateTime} object.","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"jeremiahlzz"},"content":"     * @param s String to parse, in the form specified in {@link controller.Parser#dtfInput} ","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"jeremiahlzz"},"content":"     *     of type {@code DateTimeFormatter}.","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"jeremiahlzz"},"content":"     * @return {@code LocalDateTime} object.","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"jeremiahlzz"},"content":"     * @throws NullPointerException If the string is null.","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"jeremiahlzz"},"content":"     * @throws DateTimeParseException If the string cannot be parsed.","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"jeremiahlzz"},"content":"    static LocalDateTime parseDateTime(String s) throws NullPointerException, DateTimeParseException {","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"jeremiahlzz"},"content":"        return LocalDateTime.parse(s, dtfInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"jeremiahlzz"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jeremiahlzz":85}},{"path":"src/main/java/controller/Zero.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package controller;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":"import java.util.Hashtable;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"import model.Command;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":"import model.Deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":"import model.Event;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":"import model.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":"import model.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"jeremiahlzz"},"content":"import model.ToDo;","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"jeremiahlzz"},"content":"import view.MainWindow;","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"jeremiahlzz"},"content":"import view.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":" * Main control class for running the Zero bot.","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"jeremiahlzz"},"content":" * ","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"jeremiahlzz"},"content":" * \u003cp\u003eThe bot starts a JavaFX {@link Application} UI and exits when the UI window is closed.","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"jeremiahlzz"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"jeremiahlzz"},"content":"public class Zero extends Application {","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"jeremiahlzz"},"content":"    private static final String NAME_STRING \u003d \"Zero\";","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"jeremiahlzz"},"content":"    private static final String SAVE_FILE_PATH \u003d \"data/save.ser\";","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jeremiahlzz"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER_INPUT \u003d","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"jeremiahlzz"},"content":"            DateTimeFormatter.ofPattern(\"d/M/uu HHmm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"jeremiahlzz"},"content":"    private static final String DATE_TIME_INPUT_FORMAT \u003d \"dd/mm/yy HHMM\"; // For display to users","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jeremiahlzz"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER_OUTPUT \u003d","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"jeremiahlzz"},"content":"            DateTimeFormatter.ofPattern(\"EEE, d MMM uuuu, hh:mm a\");","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"jeremiahlzz"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"jeremiahlzz"},"content":"     * Initializes the {@code Zero} application with the following:","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"jeremiahlzz"},"content":"     * \u003cul\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"jeremiahlzz"},"content":"     * \u003cli\u003e{@link controller.Parser#dtfInput} {@code LocalDateTime} format for user inputs.\u003c/li\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"jeremiahlzz"},"content":"     * \u003cli\u003e{@link model.Deadline#dtf} {@code LocalDateTime} format for output.\u003c/li\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"jeremiahlzz"},"content":"     * \u003cli\u003e{@link model.Event#dtf} {@code LocalDateTime} format for output.\u003c/li\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"jeremiahlzz"},"content":"     * \u003cli\u003e{@link model.Storage} Loads the save file.\u003c/li\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"jeremiahlzz"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"jeremiahlzz"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"jeremiahlzz"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"jeremiahlzz"},"content":"    public void init() throws IOException {","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"jeremiahlzz"},"content":"        // Set Date Time formats for relevant classes","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"jeremiahlzz"},"content":"        Parser.setDateTimeFormat(DATE_TIME_FORMATTER_INPUT);","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"jeremiahlzz"},"content":"        Deadline.setDateTimeFormat(DATE_TIME_FORMATTER_OUTPUT);","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"jeremiahlzz"},"content":"        Event.setDateTimeFormat(DATE_TIME_FORMATTER_OUTPUT);","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"jeremiahlzz"},"content":"        ","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"jeremiahlzz"},"content":"        storage \u003d new Storage(SAVE_FILE_PATH);","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"jeremiahlzz"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"jeremiahlzz"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"jeremiahlzz"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"jeremiahlzz"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"jeremiahlzz"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"jeremiahlzz"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"jeremiahlzz"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"jeremiahlzz"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"jeremiahlzz"},"content":"            MainWindow mwController \u003d fxmlLoader.\u003cMainWindow\u003egetController();","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"jeremiahlzz"},"content":"            mwController.setZero(this);","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"jeremiahlzz"},"content":"            mwController.showGreet(Ui.showGreet(NAME_STRING));","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"jeremiahlzz"},"content":"            stage.show();","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"jeremiahlzz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"jeremiahlzz"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"jeremiahlzz"},"content":"     * Returns a response {@code String} from the Zero bot according to the user input.","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"jeremiahlzz"},"content":"     * @param input User input.","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"jeremiahlzz"},"content":"     * @return Zero bot\u0027s response to the user input.","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"jeremiahlzz"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"jeremiahlzz"},"content":"    public String getResponse(String input) throws IOException {","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"jeremiahlzz"},"content":"        if (input.isBlank()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"jeremiahlzz"},"content":"            return Ui.showEmptyCommand();","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"jeremiahlzz"},"content":"        Hashtable\u003cString, String\u003e inputDict \u003d Parser.parseInput(input);","lastModifiedDate":"2024-02-10"},{"lineNumber":92,"author":{"gitId":"jeremiahlzz"},"content":"        String cmd \u003d inputDict.get(\"cmd\");","lastModifiedDate":"2024-02-10"},{"lineNumber":93,"author":{"gitId":"jeremiahlzz"},"content":"        Command c;","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":95,"author":{"gitId":"jeremiahlzz"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"jeremiahlzz"},"content":"            c \u003d Command.valueOf(cmd.toUpperCase());","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"jeremiahlzz"},"content":"        } catch (IllegalArgumentException | NullPointerException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"jeremiahlzz"},"content":"            // Command not recognised, wait for next user command","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"jeremiahlzz"},"content":"            return Ui.showInvalidCommand(cmd);","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"jeremiahlzz"},"content":"        ","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"jeremiahlzz"},"content":"        switch (c) {","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"jeremiahlzz"},"content":"        case EXIT:","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"jeremiahlzz"},"content":"            // Fallthrough","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"jeremiahlzz"},"content":"        case BYE:","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"jeremiahlzz"},"content":"            return Ui.showBye();","lastModifiedDate":"2024-02-10"},{"lineNumber":107,"author":{"gitId":"jeremiahlzz"},"content":"        case LIST:","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"jeremiahlzz"},"content":"            return Ui.showTasks(storage.getTaskList());","lastModifiedDate":"2024-02-10"},{"lineNumber":109,"author":{"gitId":"jeremiahlzz"},"content":"        case MARK:","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"jeremiahlzz"},"content":"            return executeMarkCommand(inputDict);","lastModifiedDate":"2024-02-19"},{"lineNumber":111,"author":{"gitId":"jeremiahlzz"},"content":"        case UNMARK:","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"jeremiahlzz"},"content":"            return executeUnmarkCommand(inputDict);","lastModifiedDate":"2024-02-19"},{"lineNumber":113,"author":{"gitId":"jeremiahlzz"},"content":"        case DELETE:","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"jeremiahlzz"},"content":"            return executeDeleteCommand(inputDict);","lastModifiedDate":"2024-02-19"},{"lineNumber":115,"author":{"gitId":"jeremiahlzz"},"content":"        case TODO:","lastModifiedDate":"2024-02-19"},{"lineNumber":116,"author":{"gitId":"jeremiahlzz"},"content":"            return executeToDoCommand(inputDict);","lastModifiedDate":"2024-02-19"},{"lineNumber":117,"author":{"gitId":"jeremiahlzz"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"jeremiahlzz"},"content":"            return executeDeadlineCommand(inputDict);","lastModifiedDate":"2024-02-19"},{"lineNumber":119,"author":{"gitId":"jeremiahlzz"},"content":"        case EVENT:","lastModifiedDate":"2024-02-19"},{"lineNumber":120,"author":{"gitId":"jeremiahlzz"},"content":"            return executeEventCommand(inputDict);","lastModifiedDate":"2024-02-19"},{"lineNumber":121,"author":{"gitId":"jeremiahlzz"},"content":"        case FIND:","lastModifiedDate":"2024-02-19"},{"lineNumber":122,"author":{"gitId":"jeremiahlzz"},"content":"            return executeFindCommand(inputDict);","lastModifiedDate":"2024-02-19"},{"lineNumber":123,"author":{"gitId":"jeremiahlzz"},"content":"        default:","lastModifiedDate":"2024-02-19"},{"lineNumber":124,"author":{"gitId":"jeremiahlzz"},"content":"            // For debugging purposes","lastModifiedDate":"2024-02-19"},{"lineNumber":125,"author":{"gitId":"jeremiahlzz"},"content":"            return \"Command(Enum) not yet implemented in switch case.\";","lastModifiedDate":"2024-02-19"},{"lineNumber":126,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":127,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":128,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":129,"author":{"gitId":"jeremiahlzz"},"content":"    private String executeFindCommand(Hashtable\u003cString, String\u003e inputDict) {","lastModifiedDate":"2024-02-19"},{"lineNumber":130,"author":{"gitId":"jeremiahlzz"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"jeremiahlzz"},"content":"            String s \u003d inputDict.get(\"name\");","lastModifiedDate":"2024-02-19"},{"lineNumber":132,"author":{"gitId":"jeremiahlzz"},"content":"            Parser.checkNullOrEmpty(s);","lastModifiedDate":"2024-02-19"},{"lineNumber":133,"author":{"gitId":"jeremiahlzz"},"content":"            return Ui.showAllMatchingTasks(storage.getTaskList().match(s));","lastModifiedDate":"2024-02-19"},{"lineNumber":134,"author":{"gitId":"jeremiahlzz"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":135,"author":{"gitId":"jeremiahlzz"},"content":"            return Ui.showMissingFindArgError();","lastModifiedDate":"2024-02-19"},{"lineNumber":136,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":137,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":138,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":139,"author":{"gitId":"jeremiahlzz"},"content":"    private String executeEventCommand(Hashtable\u003cString, String\u003e inputDict) throws IOException {","lastModifiedDate":"2024-02-19"},{"lineNumber":140,"author":{"gitId":"jeremiahlzz"},"content":"        String error \u003d \"/from\";","lastModifiedDate":"2024-02-19"},{"lineNumber":141,"author":{"gitId":"jeremiahlzz"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":142,"author":{"gitId":"jeremiahlzz"},"content":"            String s \u003d inputDict.get(\"name\");","lastModifiedDate":"2024-02-10"},{"lineNumber":143,"author":{"gitId":"jeremiahlzz"},"content":"            Parser.checkNullOrEmpty(s);","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"jeremiahlzz"},"content":"            LocalDateTime from \u003d Parser.parseDateTime(inputDict.get(\"/from\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":145,"author":{"gitId":"jeremiahlzz"},"content":"            error \u003d \"/to\"; // [from] date successfully parsed, change possible error to [to]","lastModifiedDate":"2024-02-19"},{"lineNumber":146,"author":{"gitId":"jeremiahlzz"},"content":"            LocalDateTime to \u003d Parser.parseDateTime(inputDict.get(\"/to\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":147,"author":{"gitId":"jeremiahlzz"},"content":"            Task t \u003d storage.getTaskList().addTask(s, from, to);","lastModifiedDate":"2024-02-19"},{"lineNumber":148,"author":{"gitId":"jeremiahlzz"},"content":"            assert t instanceof Event : \" Event command did not create an Event Task\";","lastModifiedDate":"2024-02-19"},{"lineNumber":149,"author":{"gitId":"jeremiahlzz"},"content":"            storage.saveTaskList();","lastModifiedDate":"2024-02-03"},{"lineNumber":150,"author":{"gitId":"jeremiahlzz"},"content":"            return Ui.showAddTaskDone(t, storage.getTaskList().size());","lastModifiedDate":"2024-02-10"},{"lineNumber":151,"author":{"gitId":"jeremiahlzz"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":152,"author":{"gitId":"jeremiahlzz"},"content":"            return Ui.showMissingTaskNameError();","lastModifiedDate":"2024-02-10"},{"lineNumber":153,"author":{"gitId":"jeremiahlzz"},"content":"        } catch (NullPointerException | DateTimeParseException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":154,"author":{"gitId":"jeremiahlzz"},"content":"            assert error \u003d\u003d \"/from\" || error \u003d\u003d \"/to\" : \" Invalid error type\";","lastModifiedDate":"2024-02-19"},{"lineNumber":155,"author":{"gitId":"jeremiahlzz"},"content":"            return Ui.showDateTimeParseError(DATE_TIME_INPUT_FORMAT, \"Deadline\", error);","lastModifiedDate":"2024-02-19"},{"lineNumber":156,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":157,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":158,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":159,"author":{"gitId":"jeremiahlzz"},"content":"    private String executeDeadlineCommand(Hashtable\u003cString, String\u003e inputDict) throws IOException {","lastModifiedDate":"2024-02-19"},{"lineNumber":160,"author":{"gitId":"jeremiahlzz"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":161,"author":{"gitId":"jeremiahlzz"},"content":"            String s \u003d inputDict.get(\"name\");","lastModifiedDate":"2024-02-10"},{"lineNumber":162,"author":{"gitId":"jeremiahlzz"},"content":"            Parser.checkNullOrEmpty(s);","lastModifiedDate":"2024-02-03"},{"lineNumber":163,"author":{"gitId":"jeremiahlzz"},"content":"            LocalDateTime by \u003d Parser.parseDateTime(inputDict.get(\"/by\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":164,"author":{"gitId":"jeremiahlzz"},"content":"            Task t \u003d storage.getTaskList().addTask(s, by);","lastModifiedDate":"2024-02-03"},{"lineNumber":165,"author":{"gitId":"jeremiahlzz"},"content":"            assert t instanceof Deadline : \" Deadline command did not create a Deadline Task\";","lastModifiedDate":"2024-02-19"},{"lineNumber":166,"author":{"gitId":"jeremiahlzz"},"content":"            storage.saveTaskList();","lastModifiedDate":"2024-02-03"},{"lineNumber":167,"author":{"gitId":"jeremiahlzz"},"content":"            return Ui.showAddTaskDone(t, storage.getTaskList().size());","lastModifiedDate":"2024-02-10"},{"lineNumber":168,"author":{"gitId":"jeremiahlzz"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":169,"author":{"gitId":"jeremiahlzz"},"content":"            return Ui.showMissingTaskNameError();","lastModifiedDate":"2024-02-10"},{"lineNumber":170,"author":{"gitId":"jeremiahlzz"},"content":"        } catch (NullPointerException | DateTimeParseException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":171,"author":{"gitId":"jeremiahlzz"},"content":"            return Ui.showDateTimeParseError(DATE_TIME_INPUT_FORMAT, \"Deadline\", \"BY DATE\");","lastModifiedDate":"2024-02-10"},{"lineNumber":172,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":173,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":174,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":175,"author":{"gitId":"jeremiahlzz"},"content":"    private String executeToDoCommand(Hashtable\u003cString, String\u003e inputDict) throws IOException {","lastModifiedDate":"2024-02-19"},{"lineNumber":176,"author":{"gitId":"jeremiahlzz"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":177,"author":{"gitId":"jeremiahlzz"},"content":"            String s \u003d inputDict.get(\"name\");","lastModifiedDate":"2024-02-10"},{"lineNumber":178,"author":{"gitId":"jeremiahlzz"},"content":"            Parser.checkNullOrEmpty(s);","lastModifiedDate":"2024-02-03"},{"lineNumber":179,"author":{"gitId":"jeremiahlzz"},"content":"            Task t \u003d storage.getTaskList().addTask(s);","lastModifiedDate":"2024-02-19"},{"lineNumber":180,"author":{"gitId":"jeremiahlzz"},"content":"            assert t instanceof ToDo : \" ToDo command did not create a ToDo Task\";","lastModifiedDate":"2024-02-19"},{"lineNumber":181,"author":{"gitId":"jeremiahlzz"},"content":"            storage.saveTaskList();","lastModifiedDate":"2024-02-03"},{"lineNumber":182,"author":{"gitId":"jeremiahlzz"},"content":"            return Ui.showAddTaskDone(t, storage.getTaskList().size());","lastModifiedDate":"2024-02-10"},{"lineNumber":183,"author":{"gitId":"jeremiahlzz"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":184,"author":{"gitId":"jeremiahlzz"},"content":"            return Ui.showMissingTaskNameError();","lastModifiedDate":"2024-02-10"},{"lineNumber":185,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":186,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":187,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":188,"author":{"gitId":"jeremiahlzz"},"content":"    private String executeDeleteCommand(Hashtable\u003cString, String\u003e inputDict) throws IOException {","lastModifiedDate":"2024-02-19"},{"lineNumber":189,"author":{"gitId":"jeremiahlzz"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":190,"author":{"gitId":"jeremiahlzz"},"content":"            int idx \u003d Parser.parseIndex(inputDict.get(\"name\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":191,"author":{"gitId":"jeremiahlzz"},"content":"            Task t \u003d storage.getTaskList().deleteTask(idx);","lastModifiedDate":"2024-02-19"},{"lineNumber":192,"author":{"gitId":"jeremiahlzz"},"content":"            storage.saveTaskList();","lastModifiedDate":"2024-02-19"},{"lineNumber":193,"author":{"gitId":"jeremiahlzz"},"content":"            return Ui.showDeleteDone(t, storage.getTaskList().size());","lastModifiedDate":"2024-02-19"},{"lineNumber":194,"author":{"gitId":"jeremiahlzz"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":195,"author":{"gitId":"jeremiahlzz"},"content":"            return Ui.showIndexParseError();","lastModifiedDate":"2024-02-19"},{"lineNumber":196,"author":{"gitId":"jeremiahlzz"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":197,"author":{"gitId":"jeremiahlzz"},"content":"            return Ui.showIndexOutOfBoundsError(storage.getTaskList().size());","lastModifiedDate":"2024-02-19"},{"lineNumber":198,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":199,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":200,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":201,"author":{"gitId":"jeremiahlzz"},"content":"    private String executeUnmarkCommand(Hashtable\u003cString, String\u003e inputDict) throws IOException {","lastModifiedDate":"2024-02-19"},{"lineNumber":202,"author":{"gitId":"jeremiahlzz"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":203,"author":{"gitId":"jeremiahlzz"},"content":"            int idx \u003d Parser.parseIndex(inputDict.get(\"name\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":204,"author":{"gitId":"jeremiahlzz"},"content":"            Task t \u003d storage.getTaskList().unmark(idx);","lastModifiedDate":"2024-02-19"},{"lineNumber":205,"author":{"gitId":"jeremiahlzz"},"content":"            storage.saveTaskList();","lastModifiedDate":"2024-02-19"},{"lineNumber":206,"author":{"gitId":"jeremiahlzz"},"content":"            return Ui.showUnmarkDone(t);","lastModifiedDate":"2024-02-19"},{"lineNumber":207,"author":{"gitId":"jeremiahlzz"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":208,"author":{"gitId":"jeremiahlzz"},"content":"            return Ui.showIndexParseError();","lastModifiedDate":"2024-02-19"},{"lineNumber":209,"author":{"gitId":"jeremiahlzz"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":210,"author":{"gitId":"jeremiahlzz"},"content":"            return Ui.showIndexOutOfBoundsError(storage.getTaskList().size());","lastModifiedDate":"2024-02-19"},{"lineNumber":211,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":212,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":213,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":214,"author":{"gitId":"jeremiahlzz"},"content":"    private String executeMarkCommand(Hashtable\u003cString, String\u003e inputDict) throws IOException {","lastModifiedDate":"2024-02-19"},{"lineNumber":215,"author":{"gitId":"jeremiahlzz"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":216,"author":{"gitId":"jeremiahlzz"},"content":"            int idx \u003d Parser.parseIndex(inputDict.get(\"name\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":217,"author":{"gitId":"jeremiahlzz"},"content":"            Task t \u003d storage.getTaskList().mark(idx);","lastModifiedDate":"2024-02-19"},{"lineNumber":218,"author":{"gitId":"jeremiahlzz"},"content":"            storage.saveTaskList();","lastModifiedDate":"2024-02-19"},{"lineNumber":219,"author":{"gitId":"jeremiahlzz"},"content":"            return Ui.showMarkDone(t);","lastModifiedDate":"2024-02-19"},{"lineNumber":220,"author":{"gitId":"jeremiahlzz"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":221,"author":{"gitId":"jeremiahlzz"},"content":"            return Ui.showIndexParseError();","lastModifiedDate":"2024-02-19"},{"lineNumber":222,"author":{"gitId":"jeremiahlzz"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":223,"author":{"gitId":"jeremiahlzz"},"content":"            return Ui.showIndexOutOfBoundsError(storage.getTaskList().size());","lastModifiedDate":"2024-02-19"},{"lineNumber":224,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":225,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":226,"author":{"gitId":"jeremiahlzz"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"jeremiahlzz":226}},{"path":"src/main/java/model/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package model;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":" * Commands that are available for use in Zero.","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":"public enum Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":"    EXIT,","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":"    BYE,","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":"    LIST,","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":"    MARK,","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":"    UNMARK,","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jeremiahlzz"},"content":"    DELETE,","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":"    TODO,","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"    DEADLINE,","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":"    EVENT,","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":"    FIND","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jeremiahlzz":17}},{"path":"src/main/java/model/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package model;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":" * The {@code Deadline} class represents deadline tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":" * ","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":" * \u003cp\u003e This is an immutable class.","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":" * ","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":" * \u003cp\u003e Contains:","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"jeremiahlzz"},"content":" * \u003cul\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":" * \u003cli\u003ea {@code String} name.\u003c/li\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":" * \u003cli\u003ea {@code boolean} done state.\u003c/li\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":" * \u003cli\u003ea {@code LocalDateTime} deadline.\u003c/li\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":"public class Deadline implements Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"jeremiahlzz"},"content":"    private static DateTimeFormatter dtfOutput \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"jeremiahlzz"},"content":"    private final String name;","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"jeremiahlzz"},"content":"    private final boolean isDone;","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"jeremiahlzz"},"content":"     * Creates a new {@code Deadline} object, with {@code done} set to {@code false} by default.","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"jeremiahlzz"},"content":"     * @param name Name of the deadline task.","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"jeremiahlzz"},"content":"     * @param deadline {@code LocalDateTime} object representing the deadline.","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"jeremiahlzz"},"content":"    public Deadline(String name, LocalDateTime deadline) {","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"jeremiahlzz"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"jeremiahlzz"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"jeremiahlzz"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"jeremiahlzz"},"content":"    private Deadline(String name, boolean done, LocalDateTime deadline) {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"jeremiahlzz"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"jeremiahlzz"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"jeremiahlzz"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"jeremiahlzz"},"content":"    public static void setDateTimeFormat(DateTimeFormatter dtf) {","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"jeremiahlzz"},"content":"        dtfOutput \u003d dtf;","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"jeremiahlzz"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"jeremiahlzz"},"content":"     * @return {@code Deadline} object with {@code done} set as {@code true}.","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"jeremiahlzz"},"content":"    public Deadline mark() {","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"jeremiahlzz"},"content":"        return new Deadline(name, true, deadline);","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"jeremiahlzz"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"jeremiahlzz"},"content":"     * @return {@code Deadline} object with {@code done} set as {@code false}.","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"jeremiahlzz"},"content":"    public Deadline unmark() {","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"jeremiahlzz"},"content":"        return new Deadline(name, false, deadline);","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"jeremiahlzz"},"content":"    public boolean nameContains(String s) {","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"jeremiahlzz"},"content":"        return name.contains(s);","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"jeremiahlzz"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"jeremiahlzz"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"jeremiahlzz"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"jeremiahlzz"},"content":"        String d \u003d this.isDone ? \"X\" : \" \";","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"jeremiahlzz"},"content":"        return String.format(\"[D][%s] %s (by: %s)\", d, name, deadline.format(dtfOutput));","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"jeremiahlzz"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"jeremiahlzz":77}},{"path":"src/main/java/model/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package model;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":" * The {@code Event} class represents event tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":" * ","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":" * \u003cp\u003e This is an immutable class.","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":" * ","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":" * \u003cp\u003e Contains:","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"jeremiahlzz"},"content":" * \u003cul\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":" * \u003cli\u003ea {@code String} name.\u003c/li\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":" * \u003cli\u003ea {@code boolean} done state.\u003c/li\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":" * \u003cli\u003ea {@code LocalDateTime} start date.\u003c/li\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":" * \u003cli\u003ea {@code LocalDateTime} end date.\u003c/li\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"jeremiahlzz"},"content":"public class Event implements Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"jeremiahlzz"},"content":"    private static DateTimeFormatter dtfOutput \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"jeremiahlzz"},"content":"    private final String name;","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":"    private final boolean isDone;","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":"    private final LocalDateTime startDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"jeremiahlzz"},"content":"    private final LocalDateTime endDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"jeremiahlzz"},"content":"     * Creates a new {@code Event} object, with {@code done} set to {@code false} by default.","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"jeremiahlzz"},"content":"     * @param name Name of the event task.","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"jeremiahlzz"},"content":"     * @param startDate {@code LocalDateTime} object representing the start of the event.","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"jeremiahlzz"},"content":"     * @param endDate {@code LocalDateTime} object representing the end of the event.","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"jeremiahlzz"},"content":"    public Event(String name, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"jeremiahlzz"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"jeremiahlzz"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"jeremiahlzz"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"jeremiahlzz"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"jeremiahlzz"},"content":"    private Event(String name, boolean done, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"jeremiahlzz"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"jeremiahlzz"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"jeremiahlzz"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"jeremiahlzz"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"jeremiahlzz"},"content":"    public static void setDateTimeFormat(DateTimeFormatter dtf) {","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"jeremiahlzz"},"content":"        dtfOutput \u003d dtf;","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"jeremiahlzz"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"jeremiahlzz"},"content":"     * @return {@code Event} object with {@code done} set as {@code true}.","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"jeremiahlzz"},"content":"    public Event mark() {","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"jeremiahlzz"},"content":"        return new Event(name, true, startDate, endDate);","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"jeremiahlzz"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"jeremiahlzz"},"content":"     * @return {@code Event} object with {@code done} set as {@code false}.","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"jeremiahlzz"},"content":"    public Event unmark() {","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"jeremiahlzz"},"content":"        return new Event(name, false, startDate, endDate);","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"jeremiahlzz"},"content":"    public boolean nameContains(String s) {","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"jeremiahlzz"},"content":"        return name.contains(s);","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"jeremiahlzz"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"jeremiahlzz"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"jeremiahlzz"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"jeremiahlzz"},"content":"        String d \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"jeremiahlzz"},"content":"        return String.format(\"[E][%s] %s (from: %s) (to: %s)\", d, name,","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"jeremiahlzz"},"content":"                startDate.format(dtfOutput), endDate.format(dtfOutput));","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"jeremiahlzz"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"jeremiahlzz":83}},{"path":"src/main/java/model/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package model;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"import java.io.File;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"jeremiahlzz"},"content":" * Main storage class for running the Zero bot.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":" * ","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":" * \u003cp\u003eHandles saves and writes to the save file, as well as keeping track of all tasks in a {@code TaskList}.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":"public class Storage {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":"    private File saveFile;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"jeremiahlzz"},"content":"     * Initializes the {@code Storage} instance with the {@code TaskList} in the save file.","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":"     * \u003cp\u003eCreates a new empty {@code TaskList} if the save file is not found, or an error occurs","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":"     *  while loading the save file.","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"jeremiahlzz"},"content":"     * @param filePath The {@code String} path of the save file.","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"jeremiahlzz"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"jeremiahlzz"},"content":"    public Storage(String filePath) throws IOException {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"jeremiahlzz"},"content":"        saveFile \u003d new File(filePath);","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jeremiahlzz"},"content":"        // Attempt to load TaskList from save file","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jeremiahlzz"},"content":"        if (saveFile.exists()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jeremiahlzz"},"content":"            try {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jeremiahlzz"},"content":"                FileInputStream fis \u003d new FileInputStream(saveFile);","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jeremiahlzz"},"content":"                ObjectInputStream ois \u003d new ObjectInputStream(fis);","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jeremiahlzz"},"content":"                tasks \u003d (TaskList) ois.readObject();","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jeremiahlzz"},"content":"                saveTaskList(); // Rewrite task data as readObject deletes save data","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"jeremiahlzz"},"content":"                ois.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jeremiahlzz"},"content":"                fis.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"jeremiahlzz"},"content":"            } catch (IOException | ClassNotFoundException | ClassCastException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"jeremiahlzz"},"content":"                // Read failed due to corrupt data","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"jeremiahlzz"},"content":"                tasks \u003d new TaskList();","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"jeremiahlzz"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"jeremiahlzz"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"jeremiahlzz"},"content":"            // Create the necessary directories and file","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"jeremiahlzz"},"content":"            saveFile.getParentFile().mkdirs();","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"jeremiahlzz"},"content":"            saveFile.createNewFile(); // Throws Exception if unable to create, terminate the program","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"jeremiahlzz"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"jeremiahlzz"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"jeremiahlzz"},"content":"        return tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"jeremiahlzz"},"content":"     * Saves the current {@code TaskList} into the save file.","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"jeremiahlzz"},"content":"     * \u003cp\u003e Reopens and closes the ObjectOutputStream each time the method is called","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"jeremiahlzz"},"content":"     *  to override the file and update properly.","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"jeremiahlzz"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"jeremiahlzz"},"content":"    public void saveTaskList() throws IOException {","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"jeremiahlzz"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"jeremiahlzz"},"content":"            FileOutputStream fos \u003d new FileOutputStream(saveFile);","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"jeremiahlzz"},"content":"            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"jeremiahlzz"},"content":"            oos.writeObject(tasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"jeremiahlzz"},"content":"            oos.flush();","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"jeremiahlzz"},"content":"            oos.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"jeremiahlzz"},"content":"            fos.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"jeremiahlzz"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"jeremiahlzz"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"jeremiahlzz"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jeremiahlzz":77}},{"path":"src/main/java/model/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package model;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":" * The {@code Task} interface represents the basic functionality of a task.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":" * ","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":" * \u003cp\u003eEach {@code Task} is able to be set as complete or incomplete.","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":"public interface Task extends Serializable {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"jeremiahlzz"},"content":"     * Marks the task as complete.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"     * @return {@code Task} object with mark set as complete.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":"    public Task mark();","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"jeremiahlzz"},"content":"     * Marks the task as incomplete.","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"jeremiahlzz"},"content":"     * @return {@code Task} object with mark set as incomplete.","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":"    public Task unmark();","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"jeremiahlzz"},"content":"    public boolean nameContains(String s);","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"jeremiahlzz"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"jeremiahlzz":26}},{"path":"src/main/java/model/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package model;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":" * The {@code TaskList} class represents a list of tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":" * ","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":" * \u003cp\u003e This class inherits {@code Serializable} for storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"jeremiahlzz"},"content":" * ","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":" * \u003cp\u003e Contains an {@code ArrayList\u003cTask\u003e}.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"jeremiahlzz"},"content":"     * Creates a new empty {@code TaskList}.","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"jeremiahlzz"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"jeremiahlzz"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"jeremiahlzz"},"content":"     * Creates a {@code TaskList} populated with tasks in the {@code ArrayList} supplied.","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"jeremiahlzz"},"content":"     * @param tasks Tasks to populate the {@code TaskList}","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"jeremiahlzz"},"content":"    private TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"jeremiahlzz"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jeremiahlzz"},"content":"    public int size() {","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"jeremiahlzz"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"jeremiahlzz"},"content":"     * Adds a {@code ToDo}, {@code Deadline} or {@code Event} task.","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"jeremiahlzz"},"content":"     * \u003cp\u003e If {@code 0 LocalDateTime} is provided, creates a {@code ToDo} task.","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"jeremiahlzz"},"content":"     * \u003cp\u003e If {@code 1 LocalDateTime} is provided, creates a {@code Deadline} task.","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"jeremiahlzz"},"content":"     * \u003cp\u003e If {@code \u003e\u003d2 LocalDateTime} are provided, creates an {@code Event} task.","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"jeremiahlzz"},"content":"     * Ignores any LocalDateTime supplied after 2.","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"jeremiahlzz"},"content":"     * @param name Name of the deadline task.","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"jeremiahlzz"},"content":"     * @param dateTimes {@code LocalDateTime} objects representing the task.","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"jeremiahlzz"},"content":"     * @return The task added to this {@code TaskList}.","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"jeremiahlzz"},"content":"    public Task addTask(String name, LocalDateTime ... dateTimes) {","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"jeremiahlzz"},"content":"        Task t;","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"jeremiahlzz"},"content":"        if (dateTimes.length \u003d\u003d 0) {","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"jeremiahlzz"},"content":"            t \u003d new ToDo(name);","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"jeremiahlzz"},"content":"        } else if (dateTimes.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"jeremiahlzz"},"content":"            t \u003d new Deadline(name, dateTimes[0]);","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"jeremiahlzz"},"content":"        } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"jeremiahlzz"},"content":"            t \u003d new Event(name, dateTimes[0], dateTimes[1]);","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"jeremiahlzz"},"content":"        tasks.add(t);","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"jeremiahlzz"},"content":"        return t;","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"jeremiahlzz"},"content":"    public Task deleteTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"jeremiahlzz"},"content":"        return tasks.remove(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"jeremiahlzz"},"content":"    public Task mark(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"jeremiahlzz"},"content":"        Task t \u003d tasks.get(index).mark();","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"jeremiahlzz"},"content":"        tasks.set(index, t);","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"jeremiahlzz"},"content":"        return t;","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"jeremiahlzz"},"content":"    public Task unmark(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"jeremiahlzz"},"content":"        Task t \u003d tasks.get(index).unmark();","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"jeremiahlzz"},"content":"        tasks.set(index, t);","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"jeremiahlzz"},"content":"        return t;","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"jeremiahlzz"},"content":"    public TaskList match(String s) {","lastModifiedDate":"2024-02-06"},{"lineNumber":82,"author":{"gitId":"jeremiahlzz"},"content":"        return tasks.stream()","lastModifiedDate":"2024-02-20"},{"lineNumber":83,"author":{"gitId":"jeremiahlzz"},"content":"                .filter(t -\u003e t.nameContains(s))","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"jeremiahlzz"},"content":"                .collect(Collectors.collectingAndThen(","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"jeremiahlzz"},"content":"                        Collectors.toCollection(ArrayList::new), TaskList::new));","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"jeremiahlzz"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"jeremiahlzz"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"jeremiahlzz"},"content":"        if (tasks.size() \u003e 0) {","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"jeremiahlzz"},"content":"            s.append(\"1.\").append(tasks.get(0));","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"jeremiahlzz"},"content":"        for (int i \u003d 1; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"jeremiahlzz"},"content":"            s.append(\"\\n\").append(i + 1).append(\".\").append(tasks.get(i));","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"jeremiahlzz"},"content":"        return s.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"jeremiahlzz"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jeremiahlzz":98}},{"path":"src/main/java/model/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package model;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":" * The {@code ToDo} class represents \"To Do\" tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":" * ","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":" * \u003cp\u003e This is an immutable class.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":" * ","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":" * \u003cp\u003e Contains:","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":" * \u003cul\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":" * \u003cli\u003ea {@code String} name.\u003c/li\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":" * \u003cli\u003ea {@code boolean} done state.\u003c/li\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"jeremiahlzz"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"public class ToDo implements Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":"    private final String name;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":"    private final boolean isDone;","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"jeremiahlzz"},"content":"     * Creates a new {@code ToDo} object, with {@code done} set to {@code false} by default.","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"jeremiahlzz"},"content":"     * @param name Name of the \"To Do\" task.","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":"    public ToDo(String name) {","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"jeremiahlzz"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"jeremiahlzz"},"content":"    private ToDo(String name, boolean done) {","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"jeremiahlzz"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"jeremiahlzz"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"jeremiahlzz"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"jeremiahlzz"},"content":"     * @return {@code ToDo} object with {@code done} set as {@code true}.","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"jeremiahlzz"},"content":"    public ToDo mark() {","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"jeremiahlzz"},"content":"        return new ToDo(name, true);","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"jeremiahlzz"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"jeremiahlzz"},"content":"     * @return {@code ToDo} object with {@code done} set as {@code false}.","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"jeremiahlzz"},"content":"    public ToDo unmark() {","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"jeremiahlzz"},"content":"        return new ToDo(name, false);","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"jeremiahlzz"},"content":"    public boolean nameContains(String s) {","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"jeremiahlzz"},"content":"        return name.contains(s);","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"jeremiahlzz"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"jeremiahlzz"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"jeremiahlzz"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"jeremiahlzz"},"content":"        String d \u003d this.isDone ? \"X\" : \" \";","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"jeremiahlzz"},"content":"        return String.format(\"[T][%s] %s\", d, name);","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"jeremiahlzz"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"jeremiahlzz":63}},{"path":"src/main/java/view/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package view;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"//@@author jeremiahlzz-reused","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private void flip() {","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static DialogBox getZeroDialog(String text, Image img) {","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        db.flip();","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return db;","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"jeremiahlzz":16,"-":49}},{"path":"src/main/java/view/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package view;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":"import controller.Zero;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.animation.FadeTransition;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"//@@author jeremiahlzz-reused","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Zero zero;","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Images free from: https://www.irasutoya.com/","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/gal_o_man.png\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Image zeroImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/otaku_girl_fashion.png\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setZero(Zero zero) {","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.zero \u003d zero;","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void showGreet(String s) {","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().add(DialogBox.getZeroDialog(s, zeroImage));","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private void handleUserInput() throws IOException {","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String response \u003d zero.getResponse(input);","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                DialogBox.getZeroDialog(response, zeroImage)","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (response.equals(Ui.showBye())) {","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            // Close the application after some time","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            FadeTransition fadeToExit \u003d new FadeTransition(Duration.seconds(2.5), dialogContainer);","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            fadeToExit.setToValue(0.2);","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            fadeToExit.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fadeToExit.play();","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"jeremiahlzz":16,"-":61}},{"path":"src/main/java/view/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package view;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"jeremiahlzz"},"content":"import model.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"import model.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":" * Stores and returns text replies.","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":"public class Ui {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":"     * Returns a generic error message with the detail message string of the exception into the UI.","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"jeremiahlzz"},"content":"     * \u003cp\u003eInforms the user that an unexpected error was encountered.","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"     * @param e Exception with detail message string.","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":"    public static String showError(Exception e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":"        return String.format(\"Error Detected: %s\", e.getMessage());","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"jeremiahlzz"},"content":"     * Returns an error message with the user\u0027s input into the UI.","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":"     * \u003cp\u003eInforms the user that the command entered is not a valid command.","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"jeremiahlzz"},"content":"     * @param cmd Invalid user input.","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"jeremiahlzz"},"content":"    public static String showInvalidCommand(String cmd) {","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"jeremiahlzz"},"content":"        return String.format(\"I don\u0027t understand what you mean by \\\"%s\\\"\\nPlease request something like:\\n\"","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"jeremiahlzz"},"content":"                + \"  bye, list, mark, delete, todo, deadline, event.\", cmd);","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jeremiahlzz"},"content":"    public static String showEmptyCommand() {","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"jeremiahlzz"},"content":"        return \"      \\u2571\\u007c\\u3001\\n\"","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"jeremiahlzz"},"content":"                + \"    \\u0028\\u02da\\u02ce\\u0020\\u3002\\u0037\\n\"","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"jeremiahlzz"},"content":"                + \"     \\u007c\\u3001\\u02dc\\u3035\\n\"","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"jeremiahlzz"},"content":"                + \"    \\u3058\\u3057\\u02cd\\u002c\\u0029\\u30ce\";","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"jeremiahlzz"},"content":"     * Returns a greeting with the bot\u0027s name.","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"jeremiahlzz"},"content":"     * @param name Name of the bot.","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"jeremiahlzz"},"content":"    public static String showGreet(String name) {","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"jeremiahlzz"},"content":"        return String.format(\"Hello! I\u0027m %s.\\nWhat can I do for you?\", name);","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"jeremiahlzz"},"content":"     * Returns a goodbye message.","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"jeremiahlzz"},"content":"    public static String showBye() {","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"jeremiahlzz"},"content":"        return String.format(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"jeremiahlzz"},"content":"     * Returns the tasks in the format:","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"jeremiahlzz"},"content":"     * \u003cblockquote\u003e\u003cpre\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"jeremiahlzz"},"content":"     *  1.","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"jeremiahlzz"},"content":"     *  2.","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"jeremiahlzz"},"content":"     *  3.","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"jeremiahlzz"},"content":"     * \u003c/pre\u003e\u003c/blockquote\u003e\u003cp\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"jeremiahlzz"},"content":"     * if there are tasks in the supplied {@code TaskList}. Else, prints a no tasks message into the UI.","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"jeremiahlzz"},"content":"     * @param tasks {@code TaskList} object to print.","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"jeremiahlzz"},"content":"    public static String showTasks(TaskList tasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"jeremiahlzz"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"jeremiahlzz"},"content":"            return String.format(\"There are currently no tasks in your list.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"jeremiahlzz"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"jeremiahlzz"},"content":"            return String.format(\"Here are the tasks in your list:\\n%s\", tasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"jeremiahlzz"},"content":"     * Returns an error message into the UI.","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"jeremiahlzz"},"content":"     * \u003cp\u003eInforms the user that the task selected does not exist.","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"jeremiahlzz"},"content":"     * @param nTasks Number of tasks in the {@code TaskList}.","lastModifiedDate":"2024-02-09"},{"lineNumber":80,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"jeremiahlzz"},"content":"    public static String showIndexOutOfBoundsError(int nTasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"jeremiahlzz"},"content":"        return String.format(\"Task selected does not exist.\\nTask number must be between 1 to %d.\", nTasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":86,"author":{"gitId":"jeremiahlzz"},"content":"     * Returns an error message into the UI.","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-09"},{"lineNumber":88,"author":{"gitId":"jeremiahlzz"},"content":"     * \u003cp\u003eInforms the user that the task number entered contains illegal characters that could not be parsed.","lastModifiedDate":"2024-02-09"},{"lineNumber":89,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":90,"author":{"gitId":"jeremiahlzz"},"content":"    public static String showIndexParseError() {","lastModifiedDate":"2024-02-10"},{"lineNumber":91,"author":{"gitId":"jeremiahlzz"},"content":"        return String.format(\"Please enter a valid task number!\\nOnly numerical letters [0-9] accepted.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":92,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"jeremiahlzz"},"content":"    public static String showMarkDone(Task t) {","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"jeremiahlzz"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done:\\n  %s\", t);","lastModifiedDate":"2024-02-10"},{"lineNumber":96,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"jeremiahlzz"},"content":"    public static String showUnmarkDone(Task t) {","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"jeremiahlzz"},"content":"        return String.format(\"OK, I\u0027ve marked this task as not done yet:\\n  %s\", t);","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"jeremiahlzz"},"content":"    public static String showDeleteDone(Task t, int nTasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"jeremiahlzz"},"content":"        return String.format(\"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have %d task(s) in the list.\",","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"jeremiahlzz"},"content":"                t, nTasks);","lastModifiedDate":"2024-02-06"},{"lineNumber":105,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"jeremiahlzz"},"content":"    public static String showMissingTaskNameError() {","lastModifiedDate":"2024-02-10"},{"lineNumber":108,"author":{"gitId":"jeremiahlzz"},"content":"        return String.format(\"Please enter a NAME for your task!\");","lastModifiedDate":"2024-02-10"},{"lineNumber":109,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"jeremiahlzz"},"content":"    public static String showAddTaskDone(Task t, int nTasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":112,"author":{"gitId":"jeremiahlzz"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d task(s) in the list.\",","lastModifiedDate":"2024-02-10"},{"lineNumber":113,"author":{"gitId":"jeremiahlzz"},"content":"                t, nTasks);","lastModifiedDate":"2024-02-06"},{"lineNumber":114,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"jeremiahlzz"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":117,"author":{"gitId":"jeremiahlzz"},"content":"     * Returns an error message into the UI.","lastModifiedDate":"2024-02-10"},{"lineNumber":118,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-09"},{"lineNumber":119,"author":{"gitId":"jeremiahlzz"},"content":"     * \u003cp\u003e Informs the user that the input date and time in a field is in the wrong format.","lastModifiedDate":"2024-02-09"},{"lineNumber":120,"author":{"gitId":"jeremiahlzz"},"content":"     * ","lastModifiedDate":"2024-02-09"},{"lineNumber":121,"author":{"gitId":"jeremiahlzz"},"content":"     * @param format Date and time format the user should follow.","lastModifiedDate":"2024-02-09"},{"lineNumber":122,"author":{"gitId":"jeremiahlzz"},"content":"     * @param taskType Type of task - Deadline / Event / etc.","lastModifiedDate":"2024-02-09"},{"lineNumber":123,"author":{"gitId":"jeremiahlzz"},"content":"     * @param dateType The field the error was encountered in - By / To / From.","lastModifiedDate":"2024-02-09"},{"lineNumber":124,"author":{"gitId":"jeremiahlzz"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":125,"author":{"gitId":"jeremiahlzz"},"content":"    public static String showDateTimeParseError(String format, String taskType, String dateType) {","lastModifiedDate":"2024-02-10"},{"lineNumber":126,"author":{"gitId":"jeremiahlzz"},"content":"        return String.format(\"Please enter a valid DATE and TIME (%s)\\nfor your %s task\u0027s [%s] date.\",","lastModifiedDate":"2024-02-20"},{"lineNumber":127,"author":{"gitId":"jeremiahlzz"},"content":"                format, taskType, dateType);","lastModifiedDate":"2024-02-20"},{"lineNumber":128,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"jeremiahlzz"},"content":"    public static String showAllMatchingTasks(TaskList tasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":131,"author":{"gitId":"jeremiahlzz"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-06"},{"lineNumber":132,"author":{"gitId":"jeremiahlzz"},"content":"            return String.format(\"No matching tasks found.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":133,"author":{"gitId":"jeremiahlzz"},"content":"        } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":134,"author":{"gitId":"jeremiahlzz"},"content":"            return String.format(\"Here are the matching tasks in your list:\\n%s\", tasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":135,"author":{"gitId":"jeremiahlzz"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":136,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":137,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":138,"author":{"gitId":"jeremiahlzz"},"content":"    public static String showMissingFindArgError() {","lastModifiedDate":"2024-02-10"},{"lineNumber":139,"author":{"gitId":"jeremiahlzz"},"content":"        return String.format(\"Please enter a TEXT to find the Task!\");","lastModifiedDate":"2024-02-10"},{"lineNumber":140,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":141,"author":{"gitId":"jeremiahlzz"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jeremiahlzz":141}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"jeremiahlzz"},"content":"\u003c!--","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"  @@author jeremiahlzz-reused","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":"  Reused from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":"  with minor modifications","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":"--\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"jeremiahlzz"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"jeremiahlzz"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"jeremiahlzz"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"jeremiahlzz"},"content":"\u003c!--","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"jeremiahlzz"},"content":"  @@author","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":"--\u003e","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"jeremiahlzz":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"jeremiahlzz"},"content":"\u003c!--","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"  @@author jeremiahlzz-reused","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":"  Reused from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":"  with minor modifications","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":"--\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"view.MainWindow\"\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"jeremiahlzz"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"jeremiahlzz"},"content":"      \u003c/content\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"jeremiahlzz"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"jeremiahlzz"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":"\u003c!--","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"jeremiahlzz"},"content":"  @@author","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"jeremiahlzz"},"content":"--\u003e","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"jeremiahlzz":26}},{"path":"src/test/java/controller/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package controller;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":"import java.util.Hashtable;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"jeremiahlzz"},"content":"    public void parseInput_deadlineTaskInput_success() {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":"        Hashtable\u003cString, String\u003e dict \u003d Parser.parseInput(\"deadline testinput /by 21/2/23 1300\");","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"        assertAll(\"test\",","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":"            () -\u003e assertEquals(\"deadline\", dict.get(\"cmd\")),","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":"            () -\u003e assertEquals(\"testinput\", dict.get(\"name\")),","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":"            () -\u003e assertEquals(\"21/2/23 1300\", dict.get(\"/by\"))","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":"        );","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"jeremiahlzz"},"content":"    public void parseInput_randomArgsInput_success() {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":"        Hashtable\u003cString, String\u003e dict \u003d Parser.parseInput(\"notACommand qwerty /hi 1237654 /bye /weeee 9ifef\");","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":"        assertAll(\"test\",","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"jeremiahlzz"},"content":"            () -\u003e assertEquals(\"notACommand\", dict.get(\"cmd\")),","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"jeremiahlzz"},"content":"            () -\u003e assertEquals(\"qwerty\", dict.get(\"name\")),","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"jeremiahlzz"},"content":"            () -\u003e assertEquals(\"1237654\", dict.get(\"/hi\")),","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"jeremiahlzz"},"content":"            () -\u003e assertEquals(\"\", dict.get(\"/bye\")),","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"jeremiahlzz"},"content":"            () -\u003e assertEquals(\"9ifef\", dict.get(\"/weeee\"))","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"jeremiahlzz"},"content":"        );","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"jeremiahlzz"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"jeremiahlzz":32}},{"path":"src/test/java/model/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"package model;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"jeremiahlzz"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"jeremiahlzz"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"jeremiahlzz"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"jeremiahlzz"},"content":"    public void init() {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"jeremiahlzz"},"content":"    public void toString_emptyTaskList_success() {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":"        assertEquals(\"\", tasks.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"jeremiahlzz"},"content":"    public void addTask_addToDoTask_success() {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"jeremiahlzz"},"content":"        assertAll(\"add ToDo task tests\",","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"jeremiahlzz"},"content":"            () -\u003e assertTrue(tasks.addTask(\"ToDo test\") instanceof ToDo,","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"jeremiahlzz"},"content":"                    \"Task added is not an instance of ToDo.class\"),","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"jeremiahlzz"},"content":"            () -\u003e assertEquals(1, tasks.size(), \"Task was not added\")","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"jeremiahlzz"},"content":"        );","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"jeremiahlzz"},"content":"    public void addTask_addDeadlineTask_success() {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"jeremiahlzz"},"content":"        LocalDateTime ldt \u003d mock(LocalDateTime.class);","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"jeremiahlzz"},"content":"        assertAll(\"add Deadline task tests\",","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"jeremiahlzz"},"content":"            () -\u003e assertTrue(tasks.addTask(\"Deadline test\", ldt) instanceof Deadline,","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"jeremiahlzz"},"content":"                    \"Task added is not an instance of Deadline.class\"),","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"jeremiahlzz"},"content":"            () -\u003e assertEquals(1, tasks.size(), \"Task was not added\")","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"jeremiahlzz"},"content":"        );","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"jeremiahlzz"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"jeremiahlzz"},"content":"    public void addTask_addEventTask_success() {","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"jeremiahlzz"},"content":"        LocalDateTime ldt1 \u003d mock(LocalDateTime.class);","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"jeremiahlzz"},"content":"        LocalDateTime ldt2 \u003d mock(LocalDateTime.class);","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"jeremiahlzz"},"content":"        assertAll(\"add ToDo task tests\",","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"jeremiahlzz"},"content":"            () -\u003e assertTrue(tasks.addTask(\"Event test\", ldt1, ldt2) instanceof Event,","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"jeremiahlzz"},"content":"                    \"Task added is not an instance of Event.class\"),","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"jeremiahlzz"},"content":"            () -\u003e assertEquals(1, tasks.size(), \"Task was not added\")","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"jeremiahlzz"},"content":"        );","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"jeremiahlzz"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"jeremiahlzz"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"jeremiahlzz":55}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jeremiahlzz"},"content":"todo read book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"jeremiahlzz"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"jeremiahlzz"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"jeremiahlzz"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"jeremiahlzz"},"content":"todo join sports club","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"jeremiahlzz"},"content":"mark 4","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"jeremiahlzz"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"jeremiahlzz"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"jeremiahlzz"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"jeremiahlzz"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"jeremiahlzz"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"jeremiahlzz":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jeremiahlzz"},"content":"java -classpath ..\\bin Zero \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"jeremiahlzz"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"jeremiahlzz"},"content":"pause","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"jeremiahlzz":3,"-":20}}]
