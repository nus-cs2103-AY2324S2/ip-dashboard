[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"    private String endDate;","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"    public Deadline(String name, String endDate) {","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"        super(name);","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"        return String.format(\"[D]%s %s (by: %s)\", (super.status ? \"[X]\" : \"[ ]\"), super.name, this.endDate);","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"alfaloo":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"    private String startDate;","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"    private String endDate;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"    public Event(String name, String startDate, String endDate) {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"        super(name);","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"        return String.format(\"[E]%s %s (from: %s to: %s)\", (super.status ? \"[X]\" : \"[ ]\"), super.name, this.startDate, this.endDate);","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"alfaloo":15}},{"path":"src/main/java/Lulu.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"import exceptions.*;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import java.util.*;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"public class Lulu {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"    private enum Commands {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"        LIST,","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"        MARK,","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"        UNMARK,","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"        DELETE,","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"        TODO,","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"        DEADLINE,","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"        EVENT;","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"    private List\u003cTask\u003e items;","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"    public Lulu() {","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"        this.items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"    public void start() {","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"        print(\"Hello! I\u0027m Lulu \\n\\tWhat can I do for you?\");","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"    public void exit() {","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"        print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"    public void respond() {","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"        while (true) {","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"            String input \u003d scanner.nextLine().strip();","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"            String firstWord \u003d input.split(\" \")[0];","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"            try {","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"                if (input.toLowerCase().equals(\"bye\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"                    break;","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"                } else if (input.toLowerCase().equals(\"list\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"                    manageTasks(Commands.LIST, input);","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"                } else if (firstWord.equals(\"mark\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"                    manageTasks(Commands.MARK, input);","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"                } else if (firstWord.equals(\"unmark\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"                    manageTasks(Commands.UNMARK, input);","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"                } else if (firstWord.equals(\"delete\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"                    manageTasks(Commands.DELETE, input);","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"                } else if (firstWord.equals(\"todo\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"                    addTasks(Commands.TODO, input);","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"                } else if (firstWord.equals(\"deadline\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"                    addTasks(Commands.DEADLINE, input);","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"                } else if (firstWord.equals(\"event\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"                    addTasks(Commands.EVENT, input);","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"                } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"                    throw new InvalidCommandException();","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"                print(\"Sorry, I dont think I quite understood what you meant...\");","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"    public void manageTasks(Commands command, String input) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"        switch (command) {","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"            case LIST:","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"                list();","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"            case MARK:","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"                mark(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"            case UNMARK:","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"                unmark(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"            case DELETE:","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"                delete(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"            default:","lastModifiedDate":"2024-01-23"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2024-01-23"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"    public void addTasks(Commands command, String input) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"        switch (command) {","lastModifiedDate":"2024-01-23"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"            case TODO:","lastModifiedDate":"2024-01-23"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"                todo(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"            case DEADLINE:","lastModifiedDate":"2024-01-23"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"                deadline(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"            case EVENT:","lastModifiedDate":"2024-01-23"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"                event(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"            default:","lastModifiedDate":"2024-01-23"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2024-01-23"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"    public void list() {","lastModifiedDate":"2024-01-23"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"        print(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"        for (int i \u003d 0; i \u003c this.items.size(); i++) {","lastModifiedDate":"2024-01-23"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"            String output \u003d (i + 1) + \".\" + this.items.get(i);","lastModifiedDate":"2024-01-23"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"            print(output);","lastModifiedDate":"2024-01-23"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":102,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"    public void mark(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"        if (input.length() \u003c\u003d 4) {","lastModifiedDate":"2024-01-23"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":"            print(\"I didn\u0027t quite understand, could you complete your command with appropriate arguments?\");","lastModifiedDate":"2024-01-23"},{"lineNumber":106,"author":{"gitId":"alfaloo"},"content":"            return;","lastModifiedDate":"2024-01-23"},{"lineNumber":107,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":108,"author":{"gitId":"alfaloo"},"content":"        int index \u003d Integer.valueOf(input.substring(5).strip()) - 1;","lastModifiedDate":"2024-01-22"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":"        if (index \u003e\u003d this.items.size() || index \u003c 0) {","lastModifiedDate":"2024-01-22"},{"lineNumber":110,"author":{"gitId":"alfaloo"},"content":"            print(\"Oops! You did not give a valid index.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":111,"author":{"gitId":"alfaloo"},"content":"            return;","lastModifiedDate":"2024-01-23"},{"lineNumber":112,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":113,"author":{"gitId":"alfaloo"},"content":"        Task task \u003d this.items.get(index);","lastModifiedDate":"2024-01-22"},{"lineNumber":114,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":115,"author":{"gitId":"alfaloo"},"content":"            task.updateStatus(true);","lastModifiedDate":"2024-01-22"},{"lineNumber":116,"author":{"gitId":"alfaloo"},"content":"            print(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":117,"author":{"gitId":"alfaloo"},"content":"            print(task);","lastModifiedDate":"2024-01-22"},{"lineNumber":118,"author":{"gitId":"alfaloo"},"content":"        } catch (InvalidStatusUpdateException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":119,"author":{"gitId":"alfaloo"},"content":"            print(\"This task was already marked!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":120,"author":{"gitId":"alfaloo"},"content":"            print(task);","lastModifiedDate":"2024-01-23"},{"lineNumber":121,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":122,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":123,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":124,"author":{"gitId":"alfaloo"},"content":"    public void unmark(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":125,"author":{"gitId":"alfaloo"},"content":"        if (input.length() \u003c\u003d 6) {","lastModifiedDate":"2024-01-23"},{"lineNumber":126,"author":{"gitId":"alfaloo"},"content":"            print(\"I didn\u0027t quite understand, could you complete your command with appropriate arguments?\");","lastModifiedDate":"2024-01-23"},{"lineNumber":127,"author":{"gitId":"alfaloo"},"content":"            return;","lastModifiedDate":"2024-01-23"},{"lineNumber":128,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":129,"author":{"gitId":"alfaloo"},"content":"        int index \u003d Integer.valueOf(input.substring(7).strip()) - 1;","lastModifiedDate":"2024-01-22"},{"lineNumber":130,"author":{"gitId":"alfaloo"},"content":"        if (index \u003e\u003d this.items.size() || index \u003c 0) {","lastModifiedDate":"2024-01-22"},{"lineNumber":131,"author":{"gitId":"alfaloo"},"content":"            print(\"Oops! You did not give a valid index.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":132,"author":{"gitId":"alfaloo"},"content":"            return;","lastModifiedDate":"2024-01-23"},{"lineNumber":133,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":134,"author":{"gitId":"alfaloo"},"content":"        Task task \u003d this.items.get(index);","lastModifiedDate":"2024-01-22"},{"lineNumber":135,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":136,"author":{"gitId":"alfaloo"},"content":"            task.updateStatus(false);","lastModifiedDate":"2024-01-22"},{"lineNumber":137,"author":{"gitId":"alfaloo"},"content":"            print(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":138,"author":{"gitId":"alfaloo"},"content":"            print(task);","lastModifiedDate":"2024-01-22"},{"lineNumber":139,"author":{"gitId":"alfaloo"},"content":"        } catch (InvalidStatusUpdateException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":140,"author":{"gitId":"alfaloo"},"content":"            print(\"This task was already unmarked!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":141,"author":{"gitId":"alfaloo"},"content":"            print(task);","lastModifiedDate":"2024-01-23"},{"lineNumber":142,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":143,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":144,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":145,"author":{"gitId":"alfaloo"},"content":"    public void delete(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":146,"author":{"gitId":"alfaloo"},"content":"        if (input.length() \u003c\u003d 6) {","lastModifiedDate":"2024-01-23"},{"lineNumber":147,"author":{"gitId":"alfaloo"},"content":"            print(\"I didn\u0027t quite understand, could you complete your command with appropriate arguments?\");","lastModifiedDate":"2024-01-23"},{"lineNumber":148,"author":{"gitId":"alfaloo"},"content":"            return;","lastModifiedDate":"2024-01-23"},{"lineNumber":149,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":150,"author":{"gitId":"alfaloo"},"content":"        int index \u003d Integer.valueOf(input.substring(6).strip()) - 1;","lastModifiedDate":"2024-01-23"},{"lineNumber":151,"author":{"gitId":"alfaloo"},"content":"        if (index \u003e\u003d this.items.size() || index \u003c 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":152,"author":{"gitId":"alfaloo"},"content":"            print(\"Oops! You did not give a valid index.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":153,"author":{"gitId":"alfaloo"},"content":"            return;","lastModifiedDate":"2024-01-23"},{"lineNumber":154,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":155,"author":{"gitId":"alfaloo"},"content":"        Task task \u003d this.items.remove(index);","lastModifiedDate":"2024-01-23"},{"lineNumber":156,"author":{"gitId":"alfaloo"},"content":"        print(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":157,"author":{"gitId":"alfaloo"},"content":"        print(\"\\t\" + task);","lastModifiedDate":"2024-01-23"},{"lineNumber":158,"author":{"gitId":"alfaloo"},"content":"        print(String.format(\"Now you have %d tasks in the list.\", this.items.size()));","lastModifiedDate":"2024-01-23"},{"lineNumber":159,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":160,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":161,"author":{"gitId":"alfaloo"},"content":"    public void todo(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":162,"author":{"gitId":"alfaloo"},"content":"        if (input.length() \u003c\u003d 4) {","lastModifiedDate":"2024-01-23"},{"lineNumber":163,"author":{"gitId":"alfaloo"},"content":"            print(\"I didn\u0027t quite understand, could you complete your command with appropriate arguments?\");","lastModifiedDate":"2024-01-23"},{"lineNumber":164,"author":{"gitId":"alfaloo"},"content":"            return;","lastModifiedDate":"2024-01-23"},{"lineNumber":165,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":166,"author":{"gitId":"alfaloo"},"content":"        String name \u003d input.substring(5).strip();","lastModifiedDate":"2024-01-22"},{"lineNumber":167,"author":{"gitId":"alfaloo"},"content":"        Todo todo \u003d new Todo(name);","lastModifiedDate":"2024-01-22"},{"lineNumber":168,"author":{"gitId":"alfaloo"},"content":"        this.items.add(todo);","lastModifiedDate":"2024-01-22"},{"lineNumber":169,"author":{"gitId":"alfaloo"},"content":"        print(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":170,"author":{"gitId":"alfaloo"},"content":"        print(\"\\t\" + todo);","lastModifiedDate":"2024-01-22"},{"lineNumber":171,"author":{"gitId":"alfaloo"},"content":"        print(String.format(\"Now you have %d tasks in the list.\", this.items.size()));","lastModifiedDate":"2024-01-22"},{"lineNumber":172,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":173,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":174,"author":{"gitId":"alfaloo"},"content":"    public void deadline(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":175,"author":{"gitId":"alfaloo"},"content":"        if (input.length() \u003c\u003d 8) {","lastModifiedDate":"2024-01-23"},{"lineNumber":176,"author":{"gitId":"alfaloo"},"content":"            print(\"I didn\u0027t quite understand, could you complete your command with appropriate arguments?\");","lastModifiedDate":"2024-01-23"},{"lineNumber":177,"author":{"gitId":"alfaloo"},"content":"            return;","lastModifiedDate":"2024-01-23"},{"lineNumber":178,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":179,"author":{"gitId":"alfaloo"},"content":"        int indexBy \u003d input.indexOf(\u0027/\u0027);","lastModifiedDate":"2024-01-22"},{"lineNumber":180,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":181,"author":{"gitId":"alfaloo"},"content":"            if (!input.substring(indexBy + 1).split(\" \")[0].equals(\"by\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":182,"author":{"gitId":"alfaloo"},"content":"                throw new InvalidSlashParameterException();","lastModifiedDate":"2024-01-23"},{"lineNumber":183,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":184,"author":{"gitId":"alfaloo"},"content":"            String name \u003d input.substring(9, indexBy).strip();","lastModifiedDate":"2024-01-22"},{"lineNumber":185,"author":{"gitId":"alfaloo"},"content":"            String by \u003d input.substring(indexBy + 3).strip();","lastModifiedDate":"2024-01-22"},{"lineNumber":186,"author":{"gitId":"alfaloo"},"content":"            Deadline deadline \u003d new Deadline(name, by);","lastModifiedDate":"2024-01-22"},{"lineNumber":187,"author":{"gitId":"alfaloo"},"content":"            this.items.add(deadline);","lastModifiedDate":"2024-01-22"},{"lineNumber":188,"author":{"gitId":"alfaloo"},"content":"            print(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":189,"author":{"gitId":"alfaloo"},"content":"            print(\"\\t\" + deadline);","lastModifiedDate":"2024-01-22"},{"lineNumber":190,"author":{"gitId":"alfaloo"},"content":"            print(String.format(\"Now you have %d tasks in the list.\", this.items.size()));","lastModifiedDate":"2024-01-22"},{"lineNumber":191,"author":{"gitId":"alfaloo"},"content":"        } catch (InvalidSlashParameterException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":192,"author":{"gitId":"alfaloo"},"content":"            print(\"Sorry, when would you like the deadline to be until?\");","lastModifiedDate":"2024-01-23"},{"lineNumber":193,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":194,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":195,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":196,"author":{"gitId":"alfaloo"},"content":"    public void event(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":197,"author":{"gitId":"alfaloo"},"content":"        if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2024-01-23"},{"lineNumber":198,"author":{"gitId":"alfaloo"},"content":"            print(\"I didn\u0027t quite understand, could you complete your command with appropriate arguments?\");","lastModifiedDate":"2024-01-23"},{"lineNumber":199,"author":{"gitId":"alfaloo"},"content":"            return;","lastModifiedDate":"2024-01-23"},{"lineNumber":200,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":201,"author":{"gitId":"alfaloo"},"content":"        int indexFrom \u003d input.indexOf(\u0027/\u0027);","lastModifiedDate":"2024-01-22"},{"lineNumber":202,"author":{"gitId":"alfaloo"},"content":"        int indexTo \u003d input.indexOf(\u0027/\u0027, indexFrom + 1);","lastModifiedDate":"2024-01-22"},{"lineNumber":203,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":204,"author":{"gitId":"alfaloo"},"content":"            if (!input.substring(indexFrom + 1).split(\" \")[0].equals(\"from\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":205,"author":{"gitId":"alfaloo"},"content":"                throw new InvalidSlashParameterException();","lastModifiedDate":"2024-01-23"},{"lineNumber":206,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":207,"author":{"gitId":"alfaloo"},"content":"            if (!input.substring(indexTo + 1).split(\" \")[0].equals(\"to\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":208,"author":{"gitId":"alfaloo"},"content":"                throw new InvalidSlashParameterException();","lastModifiedDate":"2024-01-23"},{"lineNumber":209,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":210,"author":{"gitId":"alfaloo"},"content":"            String name \u003d input.substring(6, indexFrom).strip();","lastModifiedDate":"2024-01-22"},{"lineNumber":211,"author":{"gitId":"alfaloo"},"content":"            String from \u003d input.substring(indexFrom + 5, indexTo).strip();","lastModifiedDate":"2024-01-22"},{"lineNumber":212,"author":{"gitId":"alfaloo"},"content":"            String to \u003d input.substring(indexTo + 3).strip();","lastModifiedDate":"2024-01-22"},{"lineNumber":213,"author":{"gitId":"alfaloo"},"content":"            Event event \u003d new Event(name, from, to);","lastModifiedDate":"2024-01-22"},{"lineNumber":214,"author":{"gitId":"alfaloo"},"content":"            this.items.add(event);","lastModifiedDate":"2024-01-22"},{"lineNumber":215,"author":{"gitId":"alfaloo"},"content":"            print(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":216,"author":{"gitId":"alfaloo"},"content":"            print(\"\\t\" + event);","lastModifiedDate":"2024-01-22"},{"lineNumber":217,"author":{"gitId":"alfaloo"},"content":"            print(String.format(\"Now you have %d tasks in the list.\", this.items.size()));","lastModifiedDate":"2024-01-22"},{"lineNumber":218,"author":{"gitId":"alfaloo"},"content":"        } catch (InvalidSlashParameterException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":219,"author":{"gitId":"alfaloo"},"content":"            print(\"Sorry, when would you like the event to begin and end?\");","lastModifiedDate":"2024-01-23"},{"lineNumber":220,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":221,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":222,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":223,"author":{"gitId":"alfaloo"},"content":"    public void print(Object text) {","lastModifiedDate":"2024-01-22"},{"lineNumber":224,"author":{"gitId":"alfaloo"},"content":"        System.out.println(\"\\t\" + text.toString());","lastModifiedDate":"2024-01-22"},{"lineNumber":225,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":226,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":227,"author":{"gitId":"alfaloo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-22"},{"lineNumber":228,"author":{"gitId":"alfaloo"},"content":"        Lulu chatbot \u003d new Lulu();","lastModifiedDate":"2024-01-22"},{"lineNumber":229,"author":{"gitId":"alfaloo"},"content":"        chatbot.start();","lastModifiedDate":"2024-01-22"},{"lineNumber":230,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":231,"author":{"gitId":"alfaloo"},"content":"            chatbot.respond();","lastModifiedDate":"2024-01-22"},{"lineNumber":232,"author":{"gitId":"alfaloo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":233,"author":{"gitId":"alfaloo"},"content":"            System.out.println(\"Error detected\");","lastModifiedDate":"2024-01-23"},{"lineNumber":234,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":235,"author":{"gitId":"alfaloo"},"content":"        chatbot.exit();","lastModifiedDate":"2024-01-22"},{"lineNumber":236,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":237,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"alfaloo":237}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"import exceptions.InvalidStatusUpdateException;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"    protected String name;","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"    protected boolean status;","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"    public Task(String name) {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"        this.status \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"    public void updateStatus(boolean status) throws InvalidStatusUpdateException {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"        if (this.status \u003d\u003d status) {","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"            throw new InvalidStatusUpdateException();","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"    public String getName() {","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"        return this.name;","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    public boolean getStatus() {","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"        return this.status;","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"        return \"[T]\" + (this.status ? \"[X] \" : \"[ ] \") + this.name;","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"alfaloo":32}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"    public Todo(String name) {","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"        super(name);","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"        return \"[T]\" + (super.status ? \"[X] \" : \"[ ] \") + super.name;","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"alfaloo":10}},{"path":"src/main/java/exceptions/IncompleteInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package exceptions;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"public class IncompleteInputException extends LuluException{","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"    public IncompleteInputException() {","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"        super(\"Missing arguments after command prompt\");","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"alfaloo":7}},{"path":"src/main/java/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package exceptions;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"public class InvalidCommandException extends LuluException {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"        super(\"Could not decipher input string\");","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"alfaloo":7}},{"path":"src/main/java/exceptions/InvalidSlashParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package exceptions;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"public class InvalidSlashParameterException extends LuluException {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"    public InvalidSlashParameterException() {","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"        super(\"Could not decipher command after slash\");","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"alfaloo":7}},{"path":"src/main/java/exceptions/InvalidStatusUpdateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package exceptions;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"public class InvalidStatusUpdateException extends LuluException {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"    public InvalidStatusUpdateException() {","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"        super(\"Status was already updated to desired value\");","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"alfaloo":7}},{"path":"src/main/java/exceptions/LuluException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package exceptions;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"public class LuluException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"    public LuluException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"        super(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"alfaloo":7}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"alfaloo":4}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"java -classpath ../bin Lulu \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"alfaloo":1,"-":37}}]
