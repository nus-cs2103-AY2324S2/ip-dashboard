[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"jxunze"},"content":"    mainClass.set(\"Iris\")","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"jxunze"},"content":"    archiveBaseName \u003d \"iris\"","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jxunze":2,"-":40}},{"path":"src/main/java/Commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package Commands;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"import Exceptions.InvalidInputException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"import TaskList.Tasks.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"import TaskList.Tasks.Deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"import Storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":" * Represents a command to add a deadline to the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":" * A \u003ccode\u003eAddDeadlineCommand\u003c/code\u003e object corresponds to a command with a description and a deadline","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":" * e.g., \u003ccode\u003e\"deadline return book /by 2020-12-12 1800\"\u003c/code\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"public class AddDeadlineCommand extends Command{","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"    private final Task deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"     * Constructs an AddDeadlineCommand object with a description and a deadline.","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"     * @param deadlineName the description of the deadline","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"     * @param by the deadline of the task","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"     * @throws InvalidInputException if the input is invalid","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"    public AddDeadlineCommand(String deadlineName, LocalDateTime by) throws InvalidInputException {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"        this.deadline \u003d new Deadline(deadlineName, by);","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"jxunze"},"content":"     * Executes the command to add a deadline to the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"jxunze"},"content":"     * @return a string representing the result of executing the command","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"jxunze"},"content":"     * @throws IOException if an I/O error occurs","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"jxunze"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"jxunze"},"content":"    public String execute() throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"jxunze"},"content":"        this.taskList.addTask(this.deadline);","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"jxunze"},"content":"        return \"I have added this task:\\n\" + this.deadline + \"\\n\" +","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"jxunze"},"content":"                \"Now you have \" + this.taskList.size() + \" tasks in your list.\";","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jxunze":42}},{"path":"src/main/java/Commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package Commands;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"import Exceptions.InvalidInputException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"import TaskList.Tasks.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"import TaskList.Tasks.Event;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"import Storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":" * Represents a command to add an event to the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":" * A \u003ccode\u003eAddEventCommand\u003c/code\u003e object corresponds to a command with a description, a start time and an end time","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":" * e.g., \u003ccode\u003e\"event project meeting /from 2020-12-12 1800 /to 2020-12-12 2000\"\u003c/code\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"public class AddEventCommand extends Command{","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"    private final Task event;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"     * Constructs an AddEventCommand object with a description, a start time and an end time.","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"     * @param eventName the description of the event","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"     * @param start the start time of the event","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"     * @param end the end time of the event","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"     * @throws InvalidInputException if the input is invalid","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"    public AddEventCommand(String eventName, LocalDateTime start, LocalDateTime end) throws InvalidInputException {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"        this.event \u003d new Event(eventName, start, end);","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"jxunze"},"content":"     * Executes the command to add an event to the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"jxunze"},"content":"     * @return a string representing the result of executing the command","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"jxunze"},"content":"     * @throws IOException if an I/O error occurs","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"jxunze"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"jxunze"},"content":"    public String execute() throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"jxunze"},"content":"        this.taskList.addTask(this.event);","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"jxunze"},"content":"        return \"I have added this task:\\n\" + this.event + \"\\n\" +","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"jxunze"},"content":"                \"Now you have \" + this.taskList.size() + \" tasks in your list.\";","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jxunze":44}},{"path":"src/main/java/Commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package Commands;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"import Exceptions.InvalidInputException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"import TaskList.Tasks.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"import TaskList.Tasks.ToDo;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"import Storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":" * Represents a command to add a todo to the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":" * A \u003ccode\u003eAddTodoCommand\u003c/code\u003e object corresponds to a command with a description","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":" * e.g., \u003ccode\u003e\"todo read book\"\u003c/code\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"public class AddTodoCommand extends Command{","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"    private final Task todo;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"     * Constructs an AddTodoCommand object with a description.","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"     * @param input the description of the todo","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"    public AddTodoCommand(String input) {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"        this.todo \u003d new ToDo(input);","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"     * Executes the command to add a todo to the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"jxunze"},"content":"     * @return a string representing the result of executing the command","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"jxunze"},"content":"     * @throws IOException if an I/O error occurs","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"jxunze"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"jxunze"},"content":"    public String execute() throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"jxunze"},"content":"        this.taskList.addTask(this.todo);","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"jxunze"},"content":"        return \"I have added this task:\\n\" + this.todo + \"\\n\" +","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"jxunze"},"content":"                \"Now you have \" + this.taskList.size() + \" tasks in your list.\";","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jxunze":40}},{"path":"src/main/java/Commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package Commands;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":" * Represents a command to exit the program.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":" * A \u003ccode\u003eByeCommand\u003c/code\u003e object corresponds to a command with no input","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":" * e.g., \u003ccode\u003e\"bye\"\u003c/code\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"public class ByeCommand extends Command{","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":"     * Executes the command to exit the program.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":"     * @return a string representing the result of executing the command","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"    public String execute() {","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"        return \"Bye! Hope to see you again.\";","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"     * Returns true if the command is an exit command.","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"     * @param command the command to be checked","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"     * @return true if the command is an exit command","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"    public static boolean isExit(Command command) {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"        return command instanceof ByeCommand; // instanceof returns false if it is null","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jxunze":30}},{"path":"src/main/java/Commands/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package Commands;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":" * Represents a command to clear the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":" * A \u003ccode\u003eClearCommand\u003c/code\u003e object corresponds to a command with no input","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":" * e.g., \u003ccode\u003e\"clear\"\u003c/code\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"public class ClearCommand extends Command{","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":"     * Executes the command to clear the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":"     * @return a string representing the result of executing the command","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"     * @throws IOException if an I/O error occurs","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"    public String execute() throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"        this.taskList.clear();","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"        return \"Cleared your cache!\";","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jxunze":23}},{"path":"src/main/java/Commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package Commands;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"import Storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"import TaskList.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"import TaskList.Tasks.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":" * Represents a command to be executed.","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":" * A \u003ccode\u003eCommand\u003c/code\u003e object corresponds to a command with a description and a deadline","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":" * e.g., \u003ccode\u003e\"deadline return book /by 2020-12-12 1800\"\u003c/code\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"    protected TaskList taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"     * Sets the task list to be used by the command.","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"     * @param taskList the task list to be used by the command","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"    public void setData(TaskList taskList) {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"     * Executes the command to be executed.","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"     * @return a string representing the result of executing the command","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"jxunze"},"content":"     * @throws IOException if an I/O error occurs","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"jxunze"},"content":"    abstract public String execute() throws IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jxunze":33}},{"path":"src/main/java/Commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package Commands;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"import Exceptions.InvalidInputException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"import TaskList.Tasks.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"import TaskList.Tasks.ToDo;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"import Storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":" * A \u003ccode\u003eDeleteCommand\u003c/code\u003e object corresponds to a command with an index","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":" * e.g., \u003ccode\u003e\"delete 1\"\u003c/code\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"    int index;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"     * Constructs a DeleteCommand object with an index.","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"     * @param index the index of the task to be deleted","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"     * Executes the command to delete a task from the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"jxunze"},"content":"     * @return a string representing the result of executing the command","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"jxunze"},"content":"     * @throws IOException if an I/O error occurs","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"jxunze"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"jxunze"},"content":"    public String execute() throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"jxunze"},"content":"        Task toBeDeleted \u003d this.taskList.getTask(this.index);","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"jxunze"},"content":"        this.taskList.delete(this.index);","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"jxunze"},"content":"        String outputString \u003d \"I have removed the following task:\\n\" + toBeDeleted.toString()+\"\\nNow you have \"+ this.taskList.size() + \" tasks in your list.\";","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"jxunze"},"content":"        return outputString;","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jxunze":40}},{"path":"src/main/java/Commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package Commands;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"    private String keyword;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"    public String execute() {","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":"            if (taskList.getTask(i).getDescription().contains(keyword)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"                output.append((i+1) + \". \" + taskList.getTask(i).toString() + \"\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"        return output.toString();","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"jxunze":21}},{"path":"src/main/java/Commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package Commands;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":" * Represents a command to be executed.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":" * A \u003ccode\u003eCommand\u003c/code\u003e object corresponds to a command with a description and a deadline","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":" * e.g., \u003ccode\u003e\"deadline return book /by 2020-12-12 1800\"\u003c/code\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"public class InvalidCommand extends Command{","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"    String errorMessage;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":"     * Constructs an InvalidCommand object with an error message.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":"     * @param errorMessage the error message to be displayed","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"    public InvalidCommand(String errorMessage) {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"     * Executes the command to be executed.","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"     * @return a string representing the result of executing the command","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"    public String execute() {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"        return this.errorMessage;","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jxunze":30}},{"path":"src/main/java/Commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package Commands;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"import Exceptions.InvalidInputException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"import TaskList.Tasks.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"import TaskList.Tasks.Event;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"import Storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":" * A \u003ccode\u003eListCommand\u003c/code\u003e object corresponds to a command with no input","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":" * e.g., \u003ccode\u003e\"list\"\u003c/code\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"     * Executes the command to list all tasks in the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"     * @return a string representing the result of executing the command","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"     * @throws IOException if an I/O error occurs","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"    public String execute() throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are your tasks:\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"            output.append((i+1) + \". \" + taskList.getTask(i).toString() + \"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"jxunze"},"content":"        return output.toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jxunze":32}},{"path":"src/main/java/Commands/MarkCompletedCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package Commands;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":" * Represents a command to mark a task as completed.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":" * A \u003ccode\u003eMarkCompletedCommand\u003c/code\u003e object corresponds to a command with an index","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":" * e.g., \u003ccode\u003e\"mark 1\"\u003c/code\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"public class MarkCompletedCommand extends Command{","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"    int index;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":"    public MarkCompletedCommand(int index) {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"     * Executes the command to mark a task as completed.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"     * @return a string representing the result of executing the command","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"     * @throws IOException if an I/O error occurs","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"    public String execute() throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"        this.taskList.getTask(this.index).markCompleted();","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"        String outputString \u003d \"I\u0027ve marked this task as completed:\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"                + this.taskList.getTask(this.index).toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"        return outputString.toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jxunze":29}},{"path":"src/main/java/Commands/MarkUncompletedCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package Commands;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":" * Represents a command to mark a task as uncompleted.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":" * A \u003ccode\u003eMarkUncompletedCommand\u003c/code\u003e object corresponds to a command with an index","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":" * e.g., \u003ccode\u003e\"unmark 1\"\u003c/code\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"public class MarkUncompletedCommand extends Command{","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"    int index;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":"    public MarkUncompletedCommand(int index) {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"     * Executes the command to mark a task as uncompleted.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"     * @return a string representing the result of executing the command","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"     * @throws IOException if an I/O error occurs","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"    public String execute() throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"        this.taskList.getTask(this.index).markUncompleted();","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"        String outputString \u003d \"I\u0027ve marked this task as uncompleted:\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"                + this.taskList.getTask(this.index).toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"        return outputString.toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jxunze":29}},{"path":"src/main/java/Exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package Exceptions;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"    public InvalidInputException(String errorMessage) {","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"        return super.getMessage();","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"jxunze":12}},{"path":"src/main/java/Iris.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"import Commands.ByeCommand;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"import Commands.Command;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"import Exceptions.InvalidInputException;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"import Storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"import TaskList.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"import UI.IrisUI;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"import Parser.Parser;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"import java.io.*;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"public class Iris {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":"    private IrisUI ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"    public void start() {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"            this.ui \u003d new IrisUI();","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"            this.storage \u003d new Storage();","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"            storage.loadCache(this.taskList);","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"            ui.helloMessage();","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"            ui.showInitFailedMessage();","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"jxunze"},"content":"    /** Runs the program until termination.  */","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"jxunze"},"content":"    public void run() {","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"jxunze"},"content":"        start();","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"jxunze"},"content":"        runCommandLoopUntilExitCommand();","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"jxunze"},"content":"    private void runCommandLoopUntilExitCommand() {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"jxunze"},"content":"        Command command;","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"jxunze"},"content":"        do {","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"jxunze"},"content":"            String userCommandText \u003d ui.getUserCommand();","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"jxunze"},"content":"            command \u003d new Parser().parseCommand(userCommandText);","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"jxunze"},"content":"            String result \u003d executeCommand(command);","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"jxunze"},"content":"            ui.printWithDelimiter(result);","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"jxunze"},"content":"        } while (!ByeCommand.isExit(command));","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"jxunze"},"content":"    private String executeCommand(Command command) {","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"jxunze"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"jxunze"},"content":"            command.setData(this.taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"jxunze"},"content":"            String result \u003d command.execute();","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"jxunze"},"content":"            this.storage.saveToCache(this.taskList);","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"jxunze"},"content":"            return result;","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"jxunze"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"jxunze"},"content":"            ui.printWithDelimiter(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"jxunze"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":57,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":58,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"jxunze"},"content":"    public static void main(String[] args) throws IOException, InvalidInputException {","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"jxunze"},"content":"        Iris iris \u003d new Iris();","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"jxunze"},"content":"        iris.run();","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"jxunze":63}},{"path":"src/main/java/Parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package Parser;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"import java.text.ParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"import Commands.*;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"import Exceptions.InvalidInputException;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"import TaskList.Tasks.Deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"import TaskList.Tasks.Event;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"import static Utils.StringUtils.parseDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":"import static Utils.StringUtils.parseDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":" * This class contains utility methods for parsing user input into commands.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"public class Parser {","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"    public static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"    public static final Pattern List_INDEX_ARGS_FORMAT \u003d Pattern.compile(\"(?\u003ctargetIndex\u003e.+)\");","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"     * Parses user input into a command.","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"     * @param userInput User input to be parsed.","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"     * @return Command object.","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"    public Command parseCommand(String userInput) {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"jxunze"},"content":"            return new InvalidCommand(\"Invalid command!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"jxunze"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"jxunze"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"jxunze"},"content":"        switch (commandWord) {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"jxunze"},"content":"            case AddTodoCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"jxunze"},"content":"                return new AddTodoCommand(arguments);","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"jxunze"},"content":"            case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"jxunze"},"content":"                return prepareDelete(arguments);","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"jxunze"},"content":"            case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"jxunze"},"content":"                return new ClearCommand();","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"jxunze"},"content":"            case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"jxunze"},"content":"                return new ByeCommand();","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"jxunze"},"content":"            case ListCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"jxunze"},"content":"                return new ListCommand();","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"jxunze"},"content":"            case AddDeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"jxunze"},"content":"                return prepareDeadline(arguments);","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"jxunze"},"content":"            case AddEventCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"jxunze"},"content":"                return prepareEvent(arguments);","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"jxunze"},"content":"            case MarkCompletedCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"jxunze"},"content":"                return prepareMarkCompleted(arguments);","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"jxunze"},"content":"            case MarkUncompletedCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"jxunze"},"content":"                return prepareMarkUncompleted(arguments);","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"jxunze"},"content":"                case FindCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"jxunze"},"content":"                return new FindCommand(arguments);","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"jxunze"},"content":"            default:","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"jxunze"},"content":"                return new InvalidCommand(\"Invalid command!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"jxunze"},"content":"    private Command prepareDelete(String args) {","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"jxunze"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"jxunze"},"content":"            final int targetIndex \u003d parseArgsAsDisplayedIndex(args)-1;","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"jxunze"},"content":"            return new DeleteCommand(targetIndex);","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"jxunze"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"jxunze"},"content":"            return new InvalidCommand(\"Could not parse command.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"jxunze"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"jxunze"},"content":"            return new InvalidCommand(\"Could not parse command.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"jxunze"},"content":"    private Command prepareMarkCompleted(String args) {","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"jxunze"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"jxunze"},"content":"            final int targetIndex \u003d parseArgsAsDisplayedIndex(args)-1;","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"jxunze"},"content":"            return new MarkCompletedCommand(targetIndex);","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"jxunze"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"jxunze"},"content":"            return new InvalidCommand(\"Could not parse command.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"jxunze"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"jxunze"},"content":"            return new InvalidCommand(\"Could not parse command.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"jxunze"},"content":"    private Command prepareMarkUncompleted(String args) {","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"jxunze"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"jxunze"},"content":"            final int targetIndex \u003d parseArgsAsDisplayedIndex(args)-1;","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"jxunze"},"content":"            return new MarkUncompletedCommand(targetIndex);","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"jxunze"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"jxunze"},"content":"            return new InvalidCommand(\"Could not parse command.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"jxunze"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"jxunze"},"content":"            return new InvalidCommand(\"Could not parse command.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"jxunze"},"content":"    private Command prepareEvent(String args) {","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"jxunze"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"jxunze"},"content":"            String regex \u003d \"(.*?)\\\\s*/from\\\\s+(.+)\\\\s*/to\\\\s+(.+)\";","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"jxunze"},"content":"            Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"jxunze"},"content":"            Matcher matcher \u003d pattern.matcher(args.trim());","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"jxunze"},"content":"            if (matcher.find()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"jxunze"},"content":"                String eventName \u003d matcher.group(1);","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"jxunze"},"content":"                return new AddEventCommand(eventName, parseDateTime(matcher.group(2).trim()), parseDateTime(matcher.group(3).trim()));","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"jxunze"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"jxunze"},"content":"                return new InvalidCommand(\"Invalid input for event. Input your event as such:\\nevent \u003cname_of_event\u003e /from \u003cstart_time\u003e /to \u003cend_time\u003e\");","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"jxunze"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"jxunze"},"content":"        } catch (Exception e){","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"jxunze"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"jxunze"},"content":"    private Command prepareDeadline(String args) {","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"jxunze"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"jxunze"},"content":"            String regex \u003d \"\\\\s+(\\\\S+(?:\\\\s+\\\\S+)*)\\\\s*/by\\\\s+(.+)\";","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"jxunze"},"content":"            Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"jxunze"},"content":"            Matcher matcher \u003d pattern.matcher(args);","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"jxunze"},"content":"            if (matcher.find()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"jxunze"},"content":"                String taskName \u003d matcher.group(1);","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"jxunze"},"content":"                LocalDateTime deadline\u003d parseDateTime(matcher.group(2));","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"jxunze"},"content":"                return new AddDeadlineCommand(taskName, deadline);","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"jxunze"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"jxunze"},"content":"                return new InvalidCommand(\"Invalid input for deadline. Input your deadline as such:\\ndeadline \u003cname_of_deadline\u003e /by \u003cdue_date\u003e\");","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"jxunze"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"jxunze"},"content":"        } catch (Exception e){","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"jxunze"},"content":"            return new InvalidCommand(\"Invalid input for deadline. Input your deadline as such:\\ndeadline \u003cname_of_deadline\u003e /by \u003cdue_date\u003e\");","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":136,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"jxunze"},"content":"    private int parseArgsAsDisplayedIndex(String args) throws ParseException, NumberFormatException {","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"jxunze"},"content":"        final Matcher matcher \u003d List_INDEX_ARGS_FORMAT.matcher(args.trim());","lastModifiedDate":"2024-01-29"},{"lineNumber":140,"author":{"gitId":"jxunze"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"jxunze"},"content":"            throw new ParseException(\"Could not find index number to parse\");","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"jxunze"},"content":"        return Integer.parseInt(matcher.group(\"targetIndex\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":145,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":146,"author":{"gitId":"jxunze"},"content":"    public static class ParseException extends Exception {","lastModifiedDate":"2024-01-29"},{"lineNumber":147,"author":{"gitId":"jxunze"},"content":"        ParseException(String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":148,"author":{"gitId":"jxunze"},"content":"            super(message);","lastModifiedDate":"2024-01-29"},{"lineNumber":149,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":150,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":151,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jxunze":151}},{"path":"src/main/java/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"import Commands.Command;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"import Parser.Parser;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"import TaskList.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":" * Represents a storage to store and load tasks from a file.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":" * A \u003ccode\u003eStorage\u003c/code\u003e object corresponds to a storage with a file path","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":" * e.g., \u003ccode\u003e\"./cache.txt\"\u003c/code\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"public class Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"    private final String filePath \u003d \"./cache.txt\";","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"    public Storage() {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"     * @param cachedTasks the task list to be loaded with tasks from the file","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"     * @return the task list loaded with tasks from the file","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"     * @throws IOException if an I/O error occurs","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"    public TaskList loadCache(TaskList cachedTasks) throws IOException {","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"        File f \u003d new File(this.filePath); // create a File for the given file path","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"jxunze"},"content":"        if (f.exists() \u0026\u0026 !f.isDirectory()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"jxunze"},"content":"            Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"jxunze"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"jxunze"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"jxunze"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"jxunze"},"content":"                String[] str \u003d line.split(\" \");","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"jxunze"},"content":"                switch (str[0]) {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"jxunze"},"content":"                    case \"completed\":","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"jxunze"},"content":"                        for (int i \u003d 1; i \u003c str.length; i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"jxunze"},"content":"                            cachedTasks.getTask(Integer.parseInt(str[i])).markCompleted();","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"jxunze"},"content":"                        }","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"jxunze"},"content":"                        break;","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"jxunze"},"content":"                    default:","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"jxunze"},"content":"                        Command command \u003d parser.parseCommand(line);","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"jxunze"},"content":"                        command.setData(cachedTasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"jxunze"},"content":"                        command.execute();","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"jxunze"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"jxunze"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"jxunze"},"content":"        return cachedTasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"jxunze"},"content":"     * Saves tasks to the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"jxunze"},"content":"     * @param cachedTasks the task list to be saved to the file","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"jxunze"},"content":"     * @throws IOException if an I/O error occurs","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"jxunze"},"content":"    public void saveToCache(TaskList cachedTasks) throws IOException {","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"jxunze"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"jxunze"},"content":"        for (int i \u003d 0; i \u003c cachedTasks.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"jxunze"},"content":"            fw.write(cachedTasks.getTask(i).save()+ \"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"jxunze"},"content":"        fw.write(\"completed\");","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"jxunze"},"content":"        for (int i \u003d 0; i \u003c cachedTasks.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"jxunze"},"content":"            if (cachedTasks.getTask(i).isCompleted()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"jxunze"},"content":"                fw.write(\" \" + i);","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"jxunze"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"jxunze"},"content":"        fw.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jxunze":70}},{"path":"src/main/java/TaskList/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"import TaskList.Tasks.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":" * A \u003ccode\u003eTaskList\u003c/code\u003e object corresponds to a list of tasks","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":" * e.g., \u003ccode\u003ecachedTasks\u003c/code\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":"public class TaskList {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":"    private List\u003cTask\u003e cachedTasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"        this.cachedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"    private List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"        return this.cachedTasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"    public void clear() { this.cachedTasks.clear();}","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"    public int size() { return this.cachedTasks.size();}","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"        this.cachedTasks.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"    public void markTask(int index) {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"        this.cachedTasks.get(index).markCompleted();","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"jxunze"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"jxunze"},"content":"        this.cachedTasks.get(index).markUncompleted();","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"jxunze"},"content":"    public void delete(int index) {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"jxunze"},"content":"        this.cachedTasks.remove(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"jxunze"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"jxunze"},"content":"        return this.cachedTasks.get(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jxunze":39}},{"path":"src/main/java/TaskList/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package TaskList.Tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"import Exceptions.InvalidInputException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"import static Utils.StringUtils.formatDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"import static Utils.StringUtils.parseDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":" * Represents a deadline task.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":" * A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to a task with a description and a deadline","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":" * e.g., \u003ccode\u003e\"deadline return book /by 2-12-2019 1800\"\u003c/code\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"    LocalDateTime by;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"        return \"[D]\" + super.toString() + \" (by: \"+ formatDateTime(this.by)+\")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"    public String save() {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"        return \"deadline \" + super.description + \" /by \" + formatDateTime(this.by);","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jxunze":30}},{"path":"src/main/java/TaskList/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package TaskList.Tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"import Exceptions.InvalidInputException;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"import static Utils.StringUtils.formatDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"import static Utils.StringUtils.parseDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":" * Represents an event task.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":" * A \u003ccode\u003eEvent\u003c/code\u003e object corresponds to a task with a description and a time period","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":" * e.g., \u003ccode\u003e\"event project meeting /from 2-12-2019 1800 /to 2-12-2019 2000\"\u003c/code\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"public class Event extends Task{","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"    LocalDateTime from;","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"    LocalDateTime to;","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formatDateTime(this.from) + \" to: \" + formatDateTime(this.to) + \")\";","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"jxunze"},"content":"    public String save() {","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"jxunze"},"content":"        return \"event \" + super.description + \" /from \" + formatDateTime(this.from) + \" /to \" + formatDateTime(this.to);","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"jxunze":33}},{"path":"src/main/java/TaskList/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package TaskList.Tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":" * Represents a task.","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":" * A \u003ccode\u003eTask\u003c/code\u003e object corresponds to a task with a description and a completion status","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":" * e.g., \u003ccode\u003e\"[X] return book\"\u003c/code\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"    protected String description;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"    private boolean completed;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"    public Task(String task) {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"        this.description \u003d task;","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":"        this.completed \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"        return description;","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"    public void markCompleted() {","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"        this.completed \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"    public void markUncompleted() {","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"        this.completed \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"    public boolean isCompleted() { return this.completed; }","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"    abstract public String save();","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"jxunze"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"jxunze"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"jxunze"},"content":"        sb.append(\"[\");","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"jxunze"},"content":"        if (this.completed) {","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"jxunze"},"content":"            sb.append(\"X\");","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"jxunze"},"content":"        } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"jxunze"},"content":"            sb.append(\" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"jxunze"},"content":"        sb.append(\"]\");","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"jxunze"},"content":"        sb.append(\" \" + this.description);","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"jxunze"},"content":"        return sb.toString();","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"jxunze":42}},{"path":"src/main/java/TaskList/Tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package TaskList.Tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"import Exceptions.InvalidInputException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":" * Represents a todo task.","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":" * A \u003ccode\u003eToDo\u003c/code\u003e object corresponds to a task with a description","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":" * e.g., \u003ccode\u003e\"todo read book\"\u003c/code\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":"public class ToDo extends Task{","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"    public String save() {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"        return \"todo \" + super.description;","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jxunze":25}},{"path":"src/main/java/UI/IrisUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package UI;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"import TaskList.Tasks.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"public class IrisUI {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"    private final Scanner reader;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"    private final String INDENT \u003d \"    \";","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"    private final String CHATDELIMITER \u003d INDENT + \"_____________________\";","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":"    private static final String COMMENT_LINE_FORMAT_REGEX \u003d \"#.*\";","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":"    private final PrintStream out;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":"    public IrisUI() {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"        this.reader \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"        this.out \u003d System.out;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"    public void helloMessage(){","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"        this.printWithDelimiter(\"Hello I am Iris.\\nWhat can I do for you?\");","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"    private boolean shouldIgnore(String rawInputLine) {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"        return rawInputLine.trim().isEmpty() || isCommentLine(rawInputLine);","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"    public String getUserCommand() {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"        String fullInputLine \u003d reader.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"        // silently consume all ignored lines","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"        while (shouldIgnore(fullInputLine)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"jxunze"},"content":"            fullInputLine \u003d this.reader.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"jxunze"},"content":"        return fullInputLine;","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"jxunze"},"content":"    private boolean isCommentLine(String rawInputLine) {","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"jxunze"},"content":"        return rawInputLine.trim().matches(COMMENT_LINE_FORMAT_REGEX);","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"jxunze"},"content":"    public void printWithDelimiter(String output) {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"jxunze"},"content":"        this.out.println(this.CHATDELIMITER);","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"jxunze"},"content":"        this.out.println(this.indent(output));","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"jxunze"},"content":"        this.out.println(this.CHATDELIMITER);","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"jxunze"},"content":"    private String indent(String str) {","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"jxunze"},"content":"        String[] lines \u003d str.split(\"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"jxunze"},"content":"        StringBuilder indentedString \u003d new StringBuilder();","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"jxunze"},"content":"        for (String line : lines) {","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"jxunze"},"content":"            String indentedLine \u003d this.INDENT + line;","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"jxunze"},"content":"            indentedString.append(indentedLine).append(\"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"jxunze"},"content":"        return indentedString.toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"jxunze"},"content":"    public void showInitFailedMessage() {","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"jxunze"},"content":"        this.printWithDelimiter(\"Unable to read cache\");","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jxunze":57}},{"path":"src/main/java/Utils/StringUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package Utils;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":" * This class contains utility methods for parsing and formatting date and time strings.","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"public class StringUtils {","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":"     * This method parses a string into a LocalDateTime object.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":"     * @param dateString String to be parsed.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":"     * @return LocalDateTime object.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"    public static LocalDateTime parseDateTime(String dateString) {","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"        DateTimeFormatter formatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"        if (dateString.length() \u003e 10) {","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"            formatter \u003d DateTimeFormatter.ofPattern(\"d-M-yyyy HHmm\");","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"            return LocalDateTime.parse(dateString, formatter);","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"            formatter \u003d DateTimeFormatter.ofPattern(\"d-M-yyyy\");","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"            return LocalDate.parse(dateString, formatter).atStartOfDay();","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"     * This method formats a LocalDateTime object into a string.","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"     * @param dateTime LocalDateTime object to be formatted.","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"jxunze"},"content":"     * @return Formatted string.","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"jxunze"},"content":"    public static String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"jxunze"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"jxunze":35}},{"path":"src/test/java/TaskList/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"import Utils.StringUtils;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"public class TaskListTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"    TaskList taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"    public TaskListTest() {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"            this.taskList.addTask(new TaskStub(i));","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"    public void getTaskTest_success() {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"        assertEquals(\"[ ] TaskStub0\", this.taskList.getTask(0).toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"        assertEquals(\"[ ] TaskStub2\", this.taskList.getTask(2).toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"        assertEquals(\"[ ] TaskStub5\", this.taskList.getTask(5).toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"        assertEquals(\"[ ] TaskStub7\", this.taskList.getTask(7).toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"    public void getTaskTest_error() {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"            this.taskList.getTask(12);","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"        });","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"jxunze"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"jxunze"},"content":"    public void taskSizeTest_success() {","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"jxunze"},"content":"       assertEquals(this.taskList.size(), 10);","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"jxunze"},"content":"       this.taskList.clear();","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"jxunze"},"content":"        assertEquals(this.taskList.size(), 0);","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jxunze":37}},{"path":"src/test/java/TaskList/TaskStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"import TaskList.Tasks.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"public class TaskStub extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"    int index;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"    public TaskStub(int index){","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"        super(\"TaskStub\");","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"    public String save(){","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":"       return \"TaskStub\";","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"        return super.toString() + this.index;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jxunze":19}},{"path":"src/test/java/Utils/StringUtilsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package Utils;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"import Parser.Parser;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"import java.text.ParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"public class StringUtilsTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":"    public void parseDateTime_success() {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":"        assertEquals(StringUtils.parseDateTime(\"24-05-2018 1900\").toString(), \"2018-05-24T19:00\");","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":"        assertEquals(StringUtils.parseDateTime(\"30-05-2024 0100\").toString(), \"2024-05-30T01:00\");","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"        assertEquals(StringUtils.parseDateTime(\"24-05-2018\").toString(), \"2018-05-24T00:00\");","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"    public void formatDateTime_success() {","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2018, 5, 24, 19, 0);","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"        assertEquals(StringUtils.formatDateTime(dateTime), \"24-05-2018 1900\");","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"    public void parseDateTime_error_invalidFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"        assertThrows(java.time.format.DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"            StringUtils.parseDateTime(\"24-May-2018 1900\");","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"        });","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"jxunze"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"jxunze"},"content":"    public void parseDateTime_error_nullInput() {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"jxunze"},"content":"        assertThrows(java.lang.NullPointerException.class, () -\u003e {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"jxunze"},"content":"            StringUtils.parseDateTime(null);","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"jxunze"},"content":"        });","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jxunze":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"clear","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"deadline return book /by 02-02-2024","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"event project meeting /from 03-02-2024 1400 /to 03-02-2024 1600","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"todo wash dishes","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"mark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"mark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"unmark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":"mark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":"mark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"event coldplay concert /from 03-02-2024 1900 /to 03-02-2024 2100","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"deadline CS2109S assignment /by 05-02-2024 2359","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"mark 5","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"jxunze":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"java -classpath ..\\bin Iris \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jxunze":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"#if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java ../src/main/java/Exceptions/*.java ../src/main/java/Tasks/*.java","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"#then","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"#    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"#    exit 1","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"#fi","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin $(find ../src/main/java -name \u0027*.java\u0027)","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"java -classpath ../bin Iris \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jxunze":8,"-":36}}]
