[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"# DukeYarr","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"```","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"Ahoy from","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":" _  _   __    ____  ____ ","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"( \\/ ) /__\\  (  _ \\(  _ \\","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":" \\  / /(__)\\  )   / )   /","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":" (__)(__)(__)(_)\\_)(_)\\_)","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":" ```","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"Have you ever felt:","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"- *Dangerously* forgetful?","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"- Bored of speaking plain English?","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"- Tired of minimalist app interfaces?","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"If you answered yes to any of the above, then DukeYarr is perfect for you! DukeYarr can be your swashbuckling assistant on the high seas of productivity.","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"## Getting Started with DukeYarr","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"To get acquainted with him:","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"1. download the most recent release from [here](https://github.com/H4mes/ip/releases/tag/v0.1);","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"2. run `java -jar duke.jar` from your terminal","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"3. add your tasks","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"4. get chummy with your new favourite scallywag :pirate_flag:","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"All this for the low, low price of **FREE**!","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"## Features","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"DukeYarr continues to grow more capable each day and is able to:","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"- [X] Handle To-dos","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"- [X] Handle Deadlines and Events ","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"- [X] Be operated with a GUI interface","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"- [ ] Accomodate flexible command formats","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"## Customisability","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"For enthusiastic programmers, DukeYarr is highly customisable with easily extended packages and classes. Here\u0027s a snippet of the `Task` class for example:","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"```java","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"public class Task {  ","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"    protected String description;  ","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"    protected boolean isDone;  ","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"  ","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"H4mes"},"content":"    public Task(String description) {  ","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"H4mes"},"content":"        this.description \u003d description;  ","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"H4mes"},"content":"        this.isDone \u003d false;  ","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"H4mes"},"content":"    }  ","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"H4mes"},"content":"  ","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"H4mes"},"content":"    public String toString() {  ","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"H4mes"},"content":"        return (isDone ? \"[X] \" + description : \"[ ] \" + description); //mark done task with X  ","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"H4mes"},"content":"    }  ","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"H4mes"},"content":"  ","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"H4mes"},"content":"\tpublic void markAsDone() {  ","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"H4mes"},"content":"        isDone \u003d true;  ","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"H4mes"},"content":"##","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"H4mes"},"content":"What are you waiting for? Download DukeYarr now and join our other happy users!","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"H4mes"},"content":"\u003e The ~~One Piece~~ Productivity! The ~~One Piece~~ Productivity is real! â€“ Edward Newgate","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"H4mes":50,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"H4mes"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"H4mes"},"content":"checkstyle {","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"H4mes"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"H4mes"},"content":"    archiveBaseName \u003d \"yarr\"","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"H4mes"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":42,"H4mes":20}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"    @FXML","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"    @FXML","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"     * Constructs a DialogBox with the specified text and image.","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"     * @param text a String representing the text to be displayed in the dialog box","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"     * @param img an Image object representing the image to be displayed in the dialog box","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"H4mes"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"H4mes"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"H4mes"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"H4mes"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"H4mes"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"H4mes"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"H4mes"},"content":"    private void flip() {","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"H4mes"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"H4mes"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"H4mes"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"H4mes"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"H4mes"},"content":"     * Returns a DialogBox object representing the user\u0027s input with the specified text and image.","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"H4mes"},"content":"     * @param text a String representing the text to be displayed in the dialog box","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"H4mes"},"content":"     * @param img an Image object representing the image to be displayed in the dialog box","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"H4mes"},"content":"     * @return a DialogBox object representing a user dialog with the specified text and image","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"H4mes"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"H4mes"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"H4mes"},"content":"     * Returns a DialogBox object representing the Bot\u0027s dialog with the specified text and image.","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"H4mes"},"content":"     * @param text a String representing the text to be displayed in the dialog box","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"H4mes"},"content":"     * @param img an Image object representing the image to be displayed in the dialog box","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"H4mes"},"content":"     * @return a DialogBox object representing a bot dialog with the specified text and image","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"H4mes"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"H4mes"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"H4mes"},"content":"        db.flip();","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"H4mes"},"content":"        return db;","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"H4mes":81}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":" * Duke is a simple chatbot application that allows users to manage tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":" * It provides a CLI for users to interact with.","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":" * Users can add, delete, mark as done, find and list tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":" * Tasks are stored in a file on the hard disk and loaded on startup.","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":" * If there is no file to read from, Duke creates the necessary directory and file.","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"    /** Filepath for reading and writing data. */","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"    /** Ui object for handling printing to screen. */","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"    /** TaskList object for storing and handling tasks. */","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"    /** Storage object for handling reading and writing to the hard disk. */","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"    /** Boolean to check if the program should exit. */","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"    private boolean isExit;","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"     * Constructor for Duke class. Instantiates Ui and Storage.","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"     * Loads TaskList from filepath or makes relevant directory and file if required.","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"    public Duke() {","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"        String filePath \u003d FILE_PATH;","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"H4mes"},"content":"            ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003cTask\u003e(storage.loadData());","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"H4mes"},"content":"            tasks \u003d new TaskList(temp);","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"H4mes"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"H4mes"},"content":"            //System.out.println(\"Couldn\u0027t read from file\");","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"H4mes"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"H4mes"},"content":"     * Method to generate a response to user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"H4mes"},"content":"    protected String getResponse(String input) {","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"H4mes"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"H4mes"},"content":"            Command c \u003d Parser.handleInput(input);","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"H4mes"},"content":"            isExit \u003d c.isExit();","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"H4mes"},"content":"            return c.execute(this.tasks, this.storage, this.ui);","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"H4mes"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"H4mes"},"content":"            return ui.printMessage(e.getMessage());","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"H4mes"},"content":"     * Method to check if the program should exit.","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"H4mes"},"content":"     * @return boolean representing whether the program should exit","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"H4mes"},"content":"    protected boolean isExit() {","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"H4mes"},"content":"        return isExit;","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"H4mes":65,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"public class Launcher {","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"     * Main method to launch the application.","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"     * @param args an array of command-line arguments for the application (not used here)","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"H4mes":17}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"     * The Duke object to be used in the application.","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"     * Starts the application.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"     * @param stage a Stage object representing the primary stage for the application","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"            stage.show();","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"H4mes":38}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"    @FXML","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"    @FXML","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"    @FXML","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"    @FXML","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/UserImg.png\"));","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/YarrImg.png\"));","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"    @FXML","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"H4mes"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"H4mes"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"H4mes"},"content":"    @FXML","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"H4mes"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"H4mes"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"H4mes"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"H4mes"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"H4mes"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"H4mes"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"H4mes"},"content":"        );","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"H4mes"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"H4mes"},"content":"        if (duke.isExit()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"H4mes"},"content":"            System.exit(0);","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"H4mes":55}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"import duke.command.ToggleMarkCommand;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":" * Parses user input and returns corresponding Command objects for execution.","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"public class Parser {","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"    private static final String patternBye \u003d \"^bye\";","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"    private static final String patternList \u003d \"^list\";","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"    private static final String patternMark \u003d \"^mark \\\\d+\";","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"    private static final String patternUnmark \u003d \"^unmark \\\\d+\";","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"    private static final String patternDelete \u003d \"^delete \\\\d+\";","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"    private static final String patternTodo \u003d \"^todo .+\";","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"    private static final String patternDeadline \u003d \"^deadline .+ \\\\/by .+\";","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"    private static final String patternEvent \u003d \"^event .+ \\\\/from .+ \\\\/to .+\";","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"    private static final String patternFind \u003d \"^find \\\\S+$\";","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"    public Parser() {","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"        //do nothing","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"H4mes"},"content":"     * Helper function that checks if a string matches a regex pattern.","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"H4mes"},"content":"     * @param input a String taken from the command line user input","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"H4mes"},"content":"     * @param pattern a String defining the regex pattern of a specific command type","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"H4mes"},"content":"     * @return a boolean value signifying if the input matches the regex pattern","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"H4mes"},"content":"    private static boolean matchesPattern(String input, String pattern) {","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"H4mes"},"content":"        Pattern p \u003d Pattern.compile(pattern);","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"H4mes"},"content":"        Matcher m \u003d p.matcher(input);","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"H4mes"},"content":"        return m.matches();","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"H4mes"},"content":"     *  Method that handles user input and returns an appropriate Command object","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"H4mes"},"content":"     *  to be executed in the main program.","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"H4mes"},"content":"     * @param input a String taken from the user\u0027s command line input","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"H4mes"},"content":"     * @return a Command object corresponding to the user\u0027s input","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"H4mes"},"content":"     * @throws IllegalArgumentException if user input format is unrecognised","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"H4mes"},"content":"    public static Command handleInput(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"H4mes"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"H4mes"},"content":"            if (matchesPattern(input, patternBye)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"H4mes"},"content":"                return new ExitCommand();","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"H4mes"},"content":"            } else if (matchesPattern(input, patternList)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"H4mes"},"content":"                return new ListCommand();","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"H4mes"},"content":"            } else if (matchesPattern(input, patternMark)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"H4mes"},"content":"                String[] wordArray \u003d input.split(\" \", 0);","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"H4mes"},"content":"                Integer index \u003d Integer.parseInt(wordArray[1]);","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"H4mes"},"content":"                return new ToggleMarkCommand(index, true);","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"H4mes"},"content":"            } else if (matchesPattern(input, patternUnmark)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"H4mes"},"content":"                String[] wordArray \u003d input.split(\" \", 0);","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"H4mes"},"content":"                Integer index \u003d Integer.parseInt(wordArray[1]);","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"H4mes"},"content":"                return new ToggleMarkCommand(index, false);","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"H4mes"},"content":"            } else if (matchesPattern(input, patternDelete)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"H4mes"},"content":"                String[] wordArray \u003d input.split(\" \", 0);","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"H4mes"},"content":"                Integer index \u003d Integer.parseInt(wordArray[1]);","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"H4mes"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"H4mes"},"content":"            } else if (matchesPattern(input, patternTodo)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"H4mes"},"content":"                String tempString \u003d input.substring(5).trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":80,"author":{"gitId":"H4mes"},"content":"                Todo todo \u003d new Todo(tempString);","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"H4mes"},"content":"                return new AddCommand(todo);","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"H4mes"},"content":"            } else if (matchesPattern(input, patternDeadline)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"H4mes"},"content":"                String tempString \u003d input.substring(9).trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"H4mes"},"content":"                String[] tempArray \u003d tempString.split(\"/by\", 0);","lastModifiedDate":"2024-02-09"},{"lineNumber":85,"author":{"gitId":"H4mes"},"content":"                if (tempArray.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-09"},{"lineNumber":86,"author":{"gitId":"H4mes"},"content":"                    throw new IllegalArgumentException(\"Blunder! \"","lastModifiedDate":"2024-02-09"},{"lineNumber":87,"author":{"gitId":"H4mes"},"content":"                            + \"Declare yer deadline as such: \u0027deadline * /by *\u0027, ye scurvy dog!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":88,"author":{"gitId":"H4mes"},"content":"                }","lastModifiedDate":"2024-02-09"},{"lineNumber":89,"author":{"gitId":"H4mes"},"content":"                String description \u003d tempArray[0].trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":90,"author":{"gitId":"H4mes"},"content":"                LocalDateTime by \u003d parseDate(tempArray[1].trim());","lastModifiedDate":"2024-02-09"},{"lineNumber":91,"author":{"gitId":"H4mes"},"content":"                Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-09"},{"lineNumber":92,"author":{"gitId":"H4mes"},"content":"                return new AddCommand(deadline);","lastModifiedDate":"2024-02-09"},{"lineNumber":93,"author":{"gitId":"H4mes"},"content":"            } else if (matchesPattern(input, patternEvent)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"H4mes"},"content":"                String tempString \u003d input.substring(6).trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":95,"author":{"gitId":"H4mes"},"content":"                String[] tempArray \u003d tempString.split(\"/from\", 0);","lastModifiedDate":"2024-02-09"},{"lineNumber":96,"author":{"gitId":"H4mes"},"content":"                if (tempArray.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-09"},{"lineNumber":97,"author":{"gitId":"H4mes"},"content":"                    throw new IllegalArgumentException(\"Blunder! \"","lastModifiedDate":"2024-02-09"},{"lineNumber":98,"author":{"gitId":"H4mes"},"content":"                            + \"Declare yer event as such: \u0027event * /from * /to *\u0027, \"","lastModifiedDate":"2024-02-24"},{"lineNumber":99,"author":{"gitId":"H4mes"},"content":"                            + \"ye scurvy dog!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"H4mes"},"content":"                }","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"H4mes"},"content":"                String description \u003d tempArray[0].trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"H4mes"},"content":"                tempString \u003d tempArray[1].trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"H4mes"},"content":"                tempArray \u003d tempString.split(\"/to\", 0);","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"H4mes"},"content":"                if (tempArray.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-09"},{"lineNumber":105,"author":{"gitId":"H4mes"},"content":"                    throw new IllegalArgumentException(\"Blunder! \"","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"H4mes"},"content":"                            + \"Declare yer event as such: \u0027event * /from * /to *\u0027, \"","lastModifiedDate":"2024-02-24"},{"lineNumber":107,"author":{"gitId":"H4mes"},"content":"                            + \"ye scurvy dog!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"H4mes"},"content":"                }","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"H4mes"},"content":"                LocalDateTime from \u003d parseDate(tempArray[0].trim());","lastModifiedDate":"2024-02-09"},{"lineNumber":110,"author":{"gitId":"H4mes"},"content":"                LocalDateTime to \u003d parseDate(tempArray[1].trim());","lastModifiedDate":"2024-02-09"},{"lineNumber":111,"author":{"gitId":"H4mes"},"content":"                Event event \u003d new Event(description, from, to);","lastModifiedDate":"2024-02-09"},{"lineNumber":112,"author":{"gitId":"H4mes"},"content":"                return new AddCommand(event);","lastModifiedDate":"2024-02-09"},{"lineNumber":113,"author":{"gitId":"H4mes"},"content":"            } else if (matchesPattern(input, patternFind)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":114,"author":{"gitId":"H4mes"},"content":"                String[] wordArray \u003d input.split(\" \", 0);","lastModifiedDate":"2024-02-09"},{"lineNumber":115,"author":{"gitId":"H4mes"},"content":"                String keyword \u003d wordArray[1];","lastModifiedDate":"2024-02-09"},{"lineNumber":116,"author":{"gitId":"H4mes"},"content":"                return new FindCommand(keyword);","lastModifiedDate":"2024-02-09"},{"lineNumber":117,"author":{"gitId":"H4mes"},"content":"            } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":118,"author":{"gitId":"H4mes"},"content":"                throw new IllegalArgumentException(\"Arrr, me apologies! I cannot fathom that.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":119,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":120,"author":{"gitId":"H4mes"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":121,"author":{"gitId":"H4mes"},"content":"            throw new IllegalArgumentException(\"Blunder! \"","lastModifiedDate":"2024-02-09"},{"lineNumber":122,"author":{"gitId":"H4mes"},"content":"                    + \"I be searchin\u0027 the seas but couldn\u0027t spy the task ye named, me heartie!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":123,"author":{"gitId":"H4mes"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":124,"author":{"gitId":"H4mes"},"content":"            throw new IllegalArgumentException(\"Blunder! \"","lastModifiedDate":"2024-02-09"},{"lineNumber":125,"author":{"gitId":"H4mes"},"content":"                    + \"Declare yer dates as dd/MM/yyyy HHmm, ye scurvy dog!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":126,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":127,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":128,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":129,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":130,"author":{"gitId":"H4mes"},"content":"     * Helper function to convert a String input into a LocalDateTime object.","lastModifiedDate":"2024-02-09"},{"lineNumber":131,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":132,"author":{"gitId":"H4mes"},"content":"     * @param input a String representing a date in the format dd/MM/yyyy HHmm","lastModifiedDate":"2024-02-09"},{"lineNumber":133,"author":{"gitId":"H4mes"},"content":"     * @return a corresponding LocalDateTime object","lastModifiedDate":"2024-02-09"},{"lineNumber":134,"author":{"gitId":"H4mes"},"content":"     * @throws IllegalArgumentException if date String not in the correct format","lastModifiedDate":"2024-02-09"},{"lineNumber":135,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":136,"author":{"gitId":"H4mes"},"content":"    public static LocalDateTime parseDate(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":137,"author":{"gitId":"H4mes"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-09"},{"lineNumber":138,"author":{"gitId":"H4mes"},"content":"        LocalDateTime time;","lastModifiedDate":"2024-02-09"},{"lineNumber":139,"author":{"gitId":"H4mes"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":140,"author":{"gitId":"H4mes"},"content":"            time \u003d LocalDateTime.parse(input, dateTimeFormatter);","lastModifiedDate":"2024-02-09"},{"lineNumber":141,"author":{"gitId":"H4mes"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":142,"author":{"gitId":"H4mes"},"content":"            throw new IllegalArgumentException(\"Blunder! \"","lastModifiedDate":"2024-02-09"},{"lineNumber":143,"author":{"gitId":"H4mes"},"content":"                    + \"The date format ye provided be as tangled as a ship\u0027s riggin\u0027.\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":144,"author":{"gitId":"H4mes"},"content":"                    + \"Write yer dates in the format dd/MM/yyyy HHmm or dd/MM/yyyy\");","lastModifiedDate":"2024-02-09"},{"lineNumber":145,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":146,"author":{"gitId":"H4mes"},"content":"        return time;","lastModifiedDate":"2024-02-09"},{"lineNumber":147,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":148,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"H4mes":148}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"import java.io.File;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"import java.text.ParseException;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":" * Reads and writes task list data to file on the hard disk.","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"public class Storage {","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"    //CHECKSTYLE.OFF:","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"    protected final String filePath;","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"    //CHECKSTYLE.ON:","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"     * Constructs a new Storage object with the specified filePath value.","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"     * @param filePath a String representing the filepath where data should be read and written to","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"H4mes"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"H4mes"},"content":"     * Method to read existing data from file and populate task list.","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"H4mes"},"content":"     * Creates missing directory and file as required using relative filepath.","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"H4mes"},"content":"     * @return an ArrayList object containing the read tasks from the filepath","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"H4mes"},"content":"    public ArrayList\u003cTask\u003e loadData() {","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"H4mes"},"content":"        try (Scanner dataScanner \u003d new Scanner(new File(filePath))) {","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"H4mes"},"content":"            int lineNum \u003d 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"H4mes"},"content":"            ArrayList\u003cInteger\u003e corruptedLines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"H4mes"},"content":"            while (dataScanner.hasNextLine()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"H4mes"},"content":"                try {","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"H4mes"},"content":"                    String line \u003d dataScanner.nextLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"H4mes"},"content":"                    String[] data \u003d line.split(\"\\\\|\", 0);","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"H4mes"},"content":"                    String taskType \u003d data[0].trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"H4mes"},"content":"                    String taskComplete \u003d data[1].trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"H4mes"},"content":"                    String taskDescription \u003d data[2].trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"H4mes"},"content":"                    switch (taskType) {","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"H4mes"},"content":"                    case \"T\":","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"H4mes"},"content":"                        //Check correct number of fields","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"H4mes"},"content":"                        if (data.length !\u003d 3) {","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"H4mes"},"content":"                            throw new ParseException(\"Todo does not have 3 data fields.\",","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"H4mes"},"content":"                                    lineNum);","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"H4mes"},"content":"                        }","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"H4mes"},"content":"                        Todo todo \u003d new Todo(taskDescription);","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"H4mes"},"content":"                        //Check completion status is a string \"1\" or \"0\"","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"H4mes"},"content":"                        if (taskComplete.equals(\"0\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"H4mes"},"content":"                            todo.markAsNotDone();","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"H4mes"},"content":"                        } else if (taskComplete.equals(\"1\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"H4mes"},"content":"                            todo.markAsDone();","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"H4mes"},"content":"                        } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"H4mes"},"content":"                            throw new ParseException(\"Task completion data is corrupted.\",","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"H4mes"},"content":"                                    lineNum);","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"H4mes"},"content":"                        }","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"H4mes"},"content":"                        tasks.add(todo);","lastModifiedDate":"2024-02-09"},{"lineNumber":80,"author":{"gitId":"H4mes"},"content":"                        break;","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"H4mes"},"content":"                    case \"D\":","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"H4mes"},"content":"                        //Check correct number of fields","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"H4mes"},"content":"                        if (data.length !\u003d 4) {","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"H4mes"},"content":"                            throw new ParseException(\"Deadline does not have 4 data fields.\",","lastModifiedDate":"2024-02-09"},{"lineNumber":85,"author":{"gitId":"H4mes"},"content":"                                    lineNum);","lastModifiedDate":"2024-02-09"},{"lineNumber":86,"author":{"gitId":"H4mes"},"content":"                        }","lastModifiedDate":"2024-02-09"},{"lineNumber":87,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":88,"author":{"gitId":"H4mes"},"content":"                        LocalDateTime deadlineBy \u003d Parser.parseDate(data[3].trim());","lastModifiedDate":"2024-02-09"},{"lineNumber":89,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":90,"author":{"gitId":"H4mes"},"content":"                        Deadline deadline \u003d new Deadline(taskDescription, deadlineBy);","lastModifiedDate":"2024-02-09"},{"lineNumber":91,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":92,"author":{"gitId":"H4mes"},"content":"                        //Check completion status is a string \"1\" or \"0\"","lastModifiedDate":"2024-02-09"},{"lineNumber":93,"author":{"gitId":"H4mes"},"content":"                        if (taskComplete.equals(\"0\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"H4mes"},"content":"                            deadline.markAsNotDone();","lastModifiedDate":"2024-02-09"},{"lineNumber":95,"author":{"gitId":"H4mes"},"content":"                        } else if (taskComplete.equals(\"1\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":96,"author":{"gitId":"H4mes"},"content":"                            deadline.markAsDone();","lastModifiedDate":"2024-02-09"},{"lineNumber":97,"author":{"gitId":"H4mes"},"content":"                        } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":98,"author":{"gitId":"H4mes"},"content":"                            throw new ParseException(\"Task completion data is corrupted.\",","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"H4mes"},"content":"                                    lineNum);","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"H4mes"},"content":"                        }","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"H4mes"},"content":"                        tasks.add(deadline);","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"H4mes"},"content":"                        break;","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"H4mes"},"content":"                    case \"E\":","lastModifiedDate":"2024-02-09"},{"lineNumber":105,"author":{"gitId":"H4mes"},"content":"                        //Check correct number of fields","lastModifiedDate":"2024-02-10"},{"lineNumber":106,"author":{"gitId":"H4mes"},"content":"                        if (data.length !\u003d 5) {","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"H4mes"},"content":"                            throw new ParseException(\"Event does not have 5 data fields.\",","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"H4mes"},"content":"                                    lineNum);","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"H4mes"},"content":"                        }","lastModifiedDate":"2024-02-09"},{"lineNumber":110,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":111,"author":{"gitId":"H4mes"},"content":"                        LocalDateTime eventFrom \u003d Parser.parseDate(data[3].trim());","lastModifiedDate":"2024-02-09"},{"lineNumber":112,"author":{"gitId":"H4mes"},"content":"                        LocalDateTime eventTo \u003d Parser.parseDate(data[4].trim());","lastModifiedDate":"2024-02-09"},{"lineNumber":113,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":114,"author":{"gitId":"H4mes"},"content":"                        Event event \u003d new Event(taskDescription, eventFrom, eventTo);","lastModifiedDate":"2024-02-09"},{"lineNumber":115,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":116,"author":{"gitId":"H4mes"},"content":"                        //Check completion status is a string \"1\" or \"0\"","lastModifiedDate":"2024-02-09"},{"lineNumber":117,"author":{"gitId":"H4mes"},"content":"                        if (taskComplete.equals(\"0\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":118,"author":{"gitId":"H4mes"},"content":"                            event.markAsNotDone();","lastModifiedDate":"2024-02-09"},{"lineNumber":119,"author":{"gitId":"H4mes"},"content":"                        } else if (taskComplete.equals(\"1\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":120,"author":{"gitId":"H4mes"},"content":"                            event.markAsDone();","lastModifiedDate":"2024-02-09"},{"lineNumber":121,"author":{"gitId":"H4mes"},"content":"                        } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":122,"author":{"gitId":"H4mes"},"content":"                            throw new ParseException(\"Task completion data is corrupted.\",","lastModifiedDate":"2024-02-09"},{"lineNumber":123,"author":{"gitId":"H4mes"},"content":"                                    lineNum);","lastModifiedDate":"2024-02-09"},{"lineNumber":124,"author":{"gitId":"H4mes"},"content":"                        }","lastModifiedDate":"2024-02-09"},{"lineNumber":125,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":126,"author":{"gitId":"H4mes"},"content":"                        tasks.add(event);","lastModifiedDate":"2024-02-09"},{"lineNumber":127,"author":{"gitId":"H4mes"},"content":"                        break;","lastModifiedDate":"2024-02-09"},{"lineNumber":128,"author":{"gitId":"H4mes"},"content":"                    default:","lastModifiedDate":"2024-02-09"},{"lineNumber":129,"author":{"gitId":"H4mes"},"content":"                        throw new ParseException(\"Task type data is corrupted.\",","lastModifiedDate":"2024-02-09"},{"lineNumber":130,"author":{"gitId":"H4mes"},"content":"                                lineNum);","lastModifiedDate":"2024-02-09"},{"lineNumber":131,"author":{"gitId":"H4mes"},"content":"                    }","lastModifiedDate":"2024-02-09"},{"lineNumber":132,"author":{"gitId":"H4mes"},"content":"                } catch (ParseException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":133,"author":{"gitId":"H4mes"},"content":"                    corruptedLines.add(lineNum);","lastModifiedDate":"2024-02-09"},{"lineNumber":134,"author":{"gitId":"H4mes"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-02-09"},{"lineNumber":135,"author":{"gitId":"H4mes"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":136,"author":{"gitId":"H4mes"},"content":"                    corruptedLines.add(lineNum);","lastModifiedDate":"2024-02-09"},{"lineNumber":137,"author":{"gitId":"H4mes"},"content":"                    System.out.println(\"Line \" + lineNum + \": \" + e.getMessage());","lastModifiedDate":"2024-02-09"},{"lineNumber":138,"author":{"gitId":"H4mes"},"content":"                } finally {","lastModifiedDate":"2024-02-09"},{"lineNumber":139,"author":{"gitId":"H4mes"},"content":"                    lineNum +\u003d 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":140,"author":{"gitId":"H4mes"},"content":"                }","lastModifiedDate":"2024-02-09"},{"lineNumber":141,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":142,"author":{"gitId":"H4mes"},"content":"            if (corruptedLines.size() \u003e 0) {","lastModifiedDate":"2024-02-09"},{"lineNumber":143,"author":{"gitId":"H4mes"},"content":"                removeCorruptedData(corruptedLines);","lastModifiedDate":"2024-02-09"},{"lineNumber":144,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":145,"author":{"gitId":"H4mes"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":146,"author":{"gitId":"H4mes"},"content":"            System.out.println(\"File not found: \" + filePath);","lastModifiedDate":"2024-02-10"},{"lineNumber":147,"author":{"gitId":"H4mes"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-02-10"},{"lineNumber":148,"author":{"gitId":"H4mes"},"content":"            Path directoryPath \u003d Paths.get(file.getParent());","lastModifiedDate":"2024-02-09"},{"lineNumber":149,"author":{"gitId":"H4mes"},"content":"            if (!Files.exists(directoryPath)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":150,"author":{"gitId":"H4mes"},"content":"                try {","lastModifiedDate":"2024-02-09"},{"lineNumber":151,"author":{"gitId":"H4mes"},"content":"                    Files.createDirectories(directoryPath);","lastModifiedDate":"2024-02-09"},{"lineNumber":152,"author":{"gitId":"H4mes"},"content":"                    System.out.println(\"Created missing directory: \" + directoryPath);","lastModifiedDate":"2024-02-09"},{"lineNumber":153,"author":{"gitId":"H4mes"},"content":"                } catch (IOException err) {","lastModifiedDate":"2024-02-09"},{"lineNumber":154,"author":{"gitId":"H4mes"},"content":"                    System.out.println(\"Error creating directory: \" + directoryPath);","lastModifiedDate":"2024-02-09"},{"lineNumber":155,"author":{"gitId":"H4mes"},"content":"                    err.printStackTrace();","lastModifiedDate":"2024-02-09"},{"lineNumber":156,"author":{"gitId":"H4mes"},"content":"                }","lastModifiedDate":"2024-02-09"},{"lineNumber":157,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":158,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":159,"author":{"gitId":"H4mes"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":160,"author":{"gitId":"H4mes"},"content":"                try {","lastModifiedDate":"2024-02-09"},{"lineNumber":161,"author":{"gitId":"H4mes"},"content":"                    file.createNewFile();","lastModifiedDate":"2024-02-09"},{"lineNumber":162,"author":{"gitId":"H4mes"},"content":"                    System.out.println(\"Created missing file: \" + file);","lastModifiedDate":"2024-02-09"},{"lineNumber":163,"author":{"gitId":"H4mes"},"content":"                } catch (IOException err) {","lastModifiedDate":"2024-02-09"},{"lineNumber":164,"author":{"gitId":"H4mes"},"content":"                    System.out.println(\"Error creating file: \" + file);","lastModifiedDate":"2024-02-09"},{"lineNumber":165,"author":{"gitId":"H4mes"},"content":"                    err.printStackTrace();","lastModifiedDate":"2024-02-09"},{"lineNumber":166,"author":{"gitId":"H4mes"},"content":"                }","lastModifiedDate":"2024-02-09"},{"lineNumber":167,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":168,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":169,"author":{"gitId":"H4mes"},"content":"        return tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":170,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":171,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":172,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":173,"author":{"gitId":"H4mes"},"content":"     * Helper function for loadData() to delete corrupted data lines from the","lastModifiedDate":"2024-02-09"},{"lineNumber":174,"author":{"gitId":"H4mes"},"content":"     * .txt data file by line number.","lastModifiedDate":"2024-02-09"},{"lineNumber":175,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":176,"author":{"gitId":"H4mes"},"content":"     * @param indexes an ArrayList of Integer objects signifying corrupted","lastModifiedDate":"2024-02-09"},{"lineNumber":177,"author":{"gitId":"H4mes"},"content":"     *                file lines (1-based indexing) to be deleted","lastModifiedDate":"2024-02-09"},{"lineNumber":178,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":179,"author":{"gitId":"H4mes"},"content":"    private void removeCorruptedData(ArrayList\u003cInteger\u003e indexes) {","lastModifiedDate":"2024-02-10"},{"lineNumber":180,"author":{"gitId":"H4mes"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-09"},{"lineNumber":181,"author":{"gitId":"H4mes"},"content":"        Collections.sort(indexes);","lastModifiedDate":"2024-02-09"},{"lineNumber":182,"author":{"gitId":"H4mes"},"content":"        int offset \u003d 0;","lastModifiedDate":"2024-02-09"},{"lineNumber":183,"author":{"gitId":"H4mes"},"content":"        try (Scanner dataScanner \u003d new Scanner(new File(filePath))) {","lastModifiedDate":"2024-02-10"},{"lineNumber":184,"author":{"gitId":"H4mes"},"content":"            int lineNum \u003d 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":185,"author":{"gitId":"H4mes"},"content":"            while (dataScanner.hasNextLine()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":186,"author":{"gitId":"H4mes"},"content":"                String line \u003d dataScanner.nextLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":187,"author":{"gitId":"H4mes"},"content":"                if (lineNum !\u003d indexes.get(offset)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":188,"author":{"gitId":"H4mes"},"content":"                    lines.add(line);","lastModifiedDate":"2024-02-09"},{"lineNumber":189,"author":{"gitId":"H4mes"},"content":"                } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":190,"author":{"gitId":"H4mes"},"content":"                    System.out.println(\"Removing entry: \" + line);","lastModifiedDate":"2024-02-09"},{"lineNumber":191,"author":{"gitId":"H4mes"},"content":"                    if (offset \u003c indexes.size() - 1) {","lastModifiedDate":"2024-02-09"},{"lineNumber":192,"author":{"gitId":"H4mes"},"content":"                        offset +\u003d 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":193,"author":{"gitId":"H4mes"},"content":"                    }","lastModifiedDate":"2024-02-09"},{"lineNumber":194,"author":{"gitId":"H4mes"},"content":"                }","lastModifiedDate":"2024-02-09"},{"lineNumber":195,"author":{"gitId":"H4mes"},"content":"                lineNum +\u003d 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":196,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":197,"author":{"gitId":"H4mes"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":198,"author":{"gitId":"H4mes"},"content":"            System.out.println(\"File not found: \" + filePath);","lastModifiedDate":"2024-02-10"},{"lineNumber":199,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":200,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":201,"author":{"gitId":"H4mes"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2024-02-10"},{"lineNumber":202,"author":{"gitId":"H4mes"},"content":"            for (String line : lines) {","lastModifiedDate":"2024-02-09"},{"lineNumber":203,"author":{"gitId":"H4mes"},"content":"                bw.write(line);","lastModifiedDate":"2024-02-09"},{"lineNumber":204,"author":{"gitId":"H4mes"},"content":"                bw.newLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":205,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":206,"author":{"gitId":"H4mes"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":207,"author":{"gitId":"H4mes"},"content":"            System.out.println(\"Error writing to file: \" + filePath);","lastModifiedDate":"2024-02-10"},{"lineNumber":208,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":209,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":210,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":211,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":212,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":213,"author":{"gitId":"H4mes"},"content":"     * Solution below adapted from https://www.baeldung.com/java-write-to-file","lastModifiedDate":"2024-02-09"},{"lineNumber":214,"author":{"gitId":"H4mes"},"content":"     * Helper function that appends the input Task data as a string to the file at the","lastModifiedDate":"2024-02-09"},{"lineNumber":215,"author":{"gitId":"H4mes"},"content":"     * FILE_PATH and starts a new line.","lastModifiedDate":"2024-02-09"},{"lineNumber":216,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":217,"author":{"gitId":"H4mes"},"content":"     * @param task a Task object signifying the Task to be appended to the file","lastModifiedDate":"2024-02-09"},{"lineNumber":218,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":219,"author":{"gitId":"H4mes"},"content":"    public void appendTaskToFile(Task task) {","lastModifiedDate":"2024-02-09"},{"lineNumber":220,"author":{"gitId":"H4mes"},"content":"        String line \u003d task.getData();","lastModifiedDate":"2024-02-09"},{"lineNumber":221,"author":{"gitId":"H4mes"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(filePath, true))) {","lastModifiedDate":"2024-02-10"},{"lineNumber":222,"author":{"gitId":"H4mes"},"content":"            bw.write(line);","lastModifiedDate":"2024-02-09"},{"lineNumber":223,"author":{"gitId":"H4mes"},"content":"            bw.newLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":224,"author":{"gitId":"H4mes"},"content":"            this.tasks.add(task);","lastModifiedDate":"2024-02-24"},{"lineNumber":225,"author":{"gitId":"H4mes"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":226,"author":{"gitId":"H4mes"},"content":"            System.out.println(\"Error writing to file: \" + filePath);","lastModifiedDate":"2024-02-10"},{"lineNumber":227,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":228,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":229,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":230,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":231,"author":{"gitId":"H4mes"},"content":"     * Helper function that overwrites the original file data using the updated ArrayList data.","lastModifiedDate":"2024-02-09"},{"lineNumber":232,"author":{"gitId":"H4mes"},"content":"     * Called after changes to the list are made by marking, unmarking and deleting tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":233,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":234,"author":{"gitId":"H4mes"},"content":"     * @param newTasks an ArrayList object containing Task objects from the current task list","lastModifiedDate":"2024-02-09"},{"lineNumber":235,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":236,"author":{"gitId":"H4mes"},"content":"    public void saveTaskListToFile(ArrayList\u003cTask\u003e newTasks) {","lastModifiedDate":"2024-02-09"},{"lineNumber":237,"author":{"gitId":"H4mes"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2024-02-10"},{"lineNumber":238,"author":{"gitId":"H4mes"},"content":"            for (Task task : newTasks) {","lastModifiedDate":"2024-02-09"},{"lineNumber":239,"author":{"gitId":"H4mes"},"content":"                bw.write(task.getData());","lastModifiedDate":"2024-02-09"},{"lineNumber":240,"author":{"gitId":"H4mes"},"content":"                bw.newLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":241,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":242,"author":{"gitId":"H4mes"},"content":"            ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003cTask\u003e(newTasks);","lastModifiedDate":"2024-02-24"},{"lineNumber":243,"author":{"gitId":"H4mes"},"content":"            tasks \u003d temp;","lastModifiedDate":"2024-02-24"},{"lineNumber":244,"author":{"gitId":"H4mes"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":245,"author":{"gitId":"H4mes"},"content":"            System.out.println(\"Error writing to file: \" + filePath);","lastModifiedDate":"2024-02-10"},{"lineNumber":246,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":247,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":248,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"H4mes":248}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":" * The TaskList class represents a collection of tasks and provides methods","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":" * to manage and manipulate those tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"public class TaskList {","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"     * Constructs a TaskList and instantiates tasks as an empty ArrayList.","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"     * Constructs a TaskList and instantiates tasks using the provided input ArrayList.","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"     * @param loadedTasks an ArrayList object containing Task objects to populate the task list","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"    public TaskList(ArrayList\u003cTask\u003e loadedTasks) {","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"        this.tasks \u003d loadedTasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"     * A method to add the provided task to the task list.","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"     * @param task a Task object to be added to the task list","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"H4mes"},"content":"     * A method to remove a task at the specified index (1-indexing) from the task list.","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"H4mes"},"content":"     * @param taskNum an int representing the 1-indexed location of the task to be deleted","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"H4mes"},"content":"    public void deleteTask(int taskNum) {","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"H4mes"},"content":"        if (taskNum \u003e tasks.size() || taskNum \u003c 1) {","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"H4mes"},"content":"            throw new IllegalArgumentException(\"Blunder! Ye only be havin\u0027 \" + tasks.size()","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"H4mes"},"content":"                    + \" tasks on the chart, matey!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"H4mes"},"content":"        tasks.remove(taskNum - 1);","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"H4mes"},"content":"     * Method to print all current tasks in the task list.","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"H4mes"},"content":"    public void listTasks() {","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"H4mes"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"H4mes"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"H4mes"},"content":"     * Method to mark a task at the specified 1-indexed index.","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"H4mes"},"content":"     * @param taskNum an int representing the 1-indexed location of the task in the task list","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"H4mes"},"content":"    public void markTask(int taskNum) {","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"H4mes"},"content":"        if (taskNum \u003e tasks.size() || taskNum \u003c 1) {","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"H4mes"},"content":"            throw new IllegalArgumentException(\"Blunder! Ye only be havin\u0027 \" + tasks.size()","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"H4mes"},"content":"                    + \" tasks on the chart, matey!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"H4mes"},"content":"        tasks.get(taskNum - 1).markAsDone();","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"H4mes"},"content":"     * Method to unmark a task at the specified 1-index.","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"H4mes"},"content":"     * @param taskNum an int representing the 1-indexed location of the task in the task list","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":80,"author":{"gitId":"H4mes"},"content":"    public void unmarkTask(int taskNum) {","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"H4mes"},"content":"        if (taskNum \u003e tasks.size() || taskNum \u003c 1) {","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"H4mes"},"content":"            throw new IllegalArgumentException(\"Blunder! Ye only be havin\u0027 \" + tasks.size()","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"H4mes"},"content":"                    + \" tasks on the chart, matey!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":85,"author":{"gitId":"H4mes"},"content":"        tasks.get(taskNum - 1).markAsNotDone();","lastModifiedDate":"2024-02-09"},{"lineNumber":86,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":87,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":88,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":89,"author":{"gitId":"H4mes"},"content":"     * Method to get the String describing a task at the specified 1-index.","lastModifiedDate":"2024-02-09"},{"lineNumber":90,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":91,"author":{"gitId":"H4mes"},"content":"     * @param taskNum an int representing the 1-indexed location of the task in the task list","lastModifiedDate":"2024-02-09"},{"lineNumber":92,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":93,"author":{"gitId":"H4mes"},"content":"    public String printTask(int taskNum) {","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"H4mes"},"content":"        if (taskNum \u003e tasks.size() || taskNum \u003c 1) {","lastModifiedDate":"2024-02-24"},{"lineNumber":95,"author":{"gitId":"H4mes"},"content":"            throw new IllegalArgumentException(\"Blunder! Ye only be havin\u0027 \" + tasks.size()","lastModifiedDate":"2024-02-24"},{"lineNumber":96,"author":{"gitId":"H4mes"},"content":"                    + \" tasks on the chart, matey!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":97,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":98,"author":{"gitId":"H4mes"},"content":"        return tasks.get(taskNum - 1).toString();","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"H4mes"},"content":"     * Method to get the current number of tasks in the task list.","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"H4mes"},"content":"    public int getTaskCount() {","lastModifiedDate":"2024-02-09"},{"lineNumber":105,"author":{"gitId":"H4mes"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-24"},{"lineNumber":106,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"H4mes"},"content":"     * Method to return the current task list as an ArrayList object.","lastModifiedDate":"2024-02-09"},{"lineNumber":110,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":111,"author":{"gitId":"H4mes"},"content":"     * @return an ArrayList object from the current task list","lastModifiedDate":"2024-02-09"},{"lineNumber":112,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":113,"author":{"gitId":"H4mes"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-09"},{"lineNumber":114,"author":{"gitId":"H4mes"},"content":"        return tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":115,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":116,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":117,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":118,"author":{"gitId":"H4mes"},"content":"     * Method to find case-insensitive matches in the task list with the keyword input.","lastModifiedDate":"2024-02-09"},{"lineNumber":119,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":120,"author":{"gitId":"H4mes"},"content":"     * @param keyword a String representing the keyword to be searched for","lastModifiedDate":"2024-02-09"},{"lineNumber":121,"author":{"gitId":"H4mes"},"content":"     * @return an ArrayList containing all matches found with the keyword","lastModifiedDate":"2024-02-09"},{"lineNumber":122,"author":{"gitId":"H4mes"},"content":"     * @throws NoSuchElementException if there are no matches found in the task list","lastModifiedDate":"2024-02-09"},{"lineNumber":123,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":124,"author":{"gitId":"H4mes"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) throws NoSuchElementException {","lastModifiedDate":"2024-02-09"},{"lineNumber":125,"author":{"gitId":"H4mes"},"content":"        ArrayList\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-09"},{"lineNumber":126,"author":{"gitId":"H4mes"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-09"},{"lineNumber":127,"author":{"gitId":"H4mes"},"content":"            if (task.toString().toLowerCase().contains(keyword)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":128,"author":{"gitId":"H4mes"},"content":"                matches.add(task);","lastModifiedDate":"2024-02-09"},{"lineNumber":129,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":130,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":131,"author":{"gitId":"H4mes"},"content":"        if (matches.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-09"},{"lineNumber":132,"author":{"gitId":"H4mes"},"content":"            throw new NoSuchElementException(\"Avast! I be not spyin\u0027 that task on me list, matey.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":133,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":134,"author":{"gitId":"H4mes"},"content":"        return matches;","lastModifiedDate":"2024-02-09"},{"lineNumber":135,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":136,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"H4mes":136}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":" * The TaskList class handles the printing of messages to the console","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":" * and provides methods to print strings in consistent format.","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"public class Ui {","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"    private static final String logo \u003d \" _  _   __    ____  ____ \\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"            + \"( \\\\/ ) /__\\\\  (  _ \\\\(  _ \\\\\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"            + \" \\\\  / /(__)\\\\  )   / )   /\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"            + \" (__)(__)(__)(_)\\\\_)(_)\\\\_)\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"    private static final int dividerLength \u003d 90;","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"    private static final char dividerChar \u003d 0x2500;","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"     * Constructs a new Ui object.","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"     * This constructor does not require any parameters.","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"    public Ui() {","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"        //do nothing","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"     * Method to print section dividers to the console.","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"    public void printDivider() {","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"        for (int i \u003d 0; i \u003c dividerLength; i++) {","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"            System.out.print(dividerChar);","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"        System.out.println();","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"H4mes"},"content":"     * Method to print the logo and welcome message at program startup.","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"H4mes"},"content":"    public String showWelcome() {","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"H4mes"},"content":"        System.out.println(logo);","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"H4mes"},"content":"        printDivider();","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"H4mes"},"content":"        System.out.println(\"Ahoy! I be Yarr \\nWhat be yer command, me heartie?\");","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"H4mes"},"content":"        printDivider();","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"H4mes"},"content":"        return \"Ahoy! I be Yarr \\nWhat be yer command, me heartie?\";","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"H4mes"},"content":"     * Method that takes a string and prints it with section dividers above and below.","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"H4mes"},"content":"     * @param message a String representing the message to be printed","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"H4mes"},"content":"    public String printMessage(String message) {","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"H4mes"},"content":"        printDivider();","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"H4mes"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"H4mes"},"content":"        printDivider();","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"H4mes"},"content":"        return message;","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"H4mes"},"content":"     * Method that prints an ArrayList of Task objects and message as a numbered sequence of Strings.","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"H4mes"},"content":"     * @param message a String containing the message to be printed before the list","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"H4mes"},"content":"     * @param tasks an ArrayList of Task objects to be printed as a numbered list","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"H4mes"},"content":"    public String displayList(String message, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"H4mes"},"content":"        String response \u003d \"\";","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"H4mes"},"content":"        printDivider();","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"H4mes"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"H4mes"},"content":"        response +\u003d message + \"\\n\";","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"H4mes"},"content":"        int count \u003d 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"H4mes"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"H4mes"},"content":"            System.out.println(count + \".\" + task.toString());","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"H4mes"},"content":"            response +\u003d count + \".\" + task.toString() + \"\\n\";","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"H4mes"},"content":"            count +\u003d 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"H4mes"},"content":"        printDivider();","lastModifiedDate":"2024-02-09"},{"lineNumber":80,"author":{"gitId":"H4mes"},"content":"        return response;","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"H4mes":82}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke.command;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":" * This class extends the Command class and overrides the execute method to perform","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":" * the addition operation.","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"    protected Task task;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"     * Constructs new AddCommand object with a specified task to be added at execution.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"     * @param task the task to be added when executed","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"     * Adds specified task to the task list and saves to hard disk.","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"     * @param tasks The TaskList object on which the command will operate","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"     * @param storage The Storage object that will read and write to files","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"     * @param ui The Ui object that handles displaying messages","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"        super.tasks \u003d tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"        super.storage \u003d storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"        super.ui \u003d ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"        super.tasks.addTask(this.task);","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"H4mes"},"content":"        super.storage.appendTaskToFile(this.task);","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"H4mes"},"content":"        String message \u003d \"I\u0027ve appended this to yer list:\\n\" + this.task.toString();","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"H4mes"},"content":"        return super.ui.printMessage(message);","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"H4mes":43}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke.command;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":" * Represents a command to be executed by the Duke chatbot.","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":" * This is an abstract class that serves as the base class for all commands.","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"    protected TaskList tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"    protected Storage storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"    protected Ui ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"     * Constructs a new Command object.","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"     * This constructor does not require any parameters.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"    public Command() {","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"        //do nothing","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"     * Abstract method that executes the command, performing operations on the provided","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"     * TaskList, Storage, and Ui objects.","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"     * @param tasks The TaskList object on which the command will operate","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"     * @param storage The Storage object that will read and write to files","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"     * @param ui The Ui object that handles displaying messages","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"     * @return Returns a String message to be displayed to the user","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"    public abstract String execute(TaskList tasks, Storage storage, Ui ui);","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"     * Method returns false by default to keep the chatbot loop running.","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"     * Overridden methods should return true to end the program.","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"H4mes"},"content":"     * @return Returns false","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"H4mes"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"H4mes"},"content":"        return false;","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"H4mes":44}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke.command;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":" * This class extends the Command class and overrides the execute method to perform","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":" * the deletion operation.","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"    protected int index;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"     * Constructs new DeleteCommand object with a specified index of the task to be deleted.","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"     * @param index the 1-indexed number of the task to be deleted when executed","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"     * Method that deletes the task from the current task list","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"     * within the program and on the hard disk.","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"     * @param tasks The TaskList object on which the command will operate","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"     * @param storage The Storage object that will read and write to files","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"     * @param ui The Ui object that handles displaying messages","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"        super.tasks \u003d tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"        super.storage \u003d storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"        super.ui \u003d ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"        String tempTask \u003d super.tasks.printTask(index);","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"        super.tasks.deleteTask(index);","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"H4mes"},"content":"        super.storage.saveTaskListToFile(super.tasks.getTasks());","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"H4mes"},"content":"        String message \u003d \"As ye command, this one has walked the plank:\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"H4mes"},"content":"                + tempTask + \"\\nOnly \"","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"H4mes"},"content":"                + super.tasks.getTaskCount() + \" tasks remain, captain!\";","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"H4mes"},"content":"        return super.ui.printMessage(message);","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"H4mes":45}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke.command;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":" * Represents a command to exit the Duke chatbot program.","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":" * This class extends the Command class and overrides the execute method to print a closing message.","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":" * Also overrides the isExit() method to exit the program loop.","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"     * Constructs a new ExitCommand object.","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"     * This constructor does not require any parameters.","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"    public ExitCommand() {","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"        //do nothing","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"     * Method that prints a message signalling the closing of the program.","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"     * @param tasks The TaskList object on which the command will operate","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"     * @param storage The Storage object that will read and write to files","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"     * @param ui The Ui object that handles displaying messages","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"        super.tasks \u003d tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"        super.storage \u003d storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"        super.ui \u003d ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"        return ui.printMessage(\"Fair winds to ye, me hearty! \"","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"                + \"May the tide carry ye safely until our paths cross again.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"     * Method that returns the boolean value if the main loop should be exited.","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"H4mes"},"content":"     * @return Returns true","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"H4mes"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"H4mes"},"content":"        return true;","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"H4mes":46}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke.command;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":" * Represents a command to find all tasks with a matching keyword in the current task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":" * This class extends the Command class and overrides the execute method to print a list of tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"    protected String keyword;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"     * Constructs FindCommand object storing specified keyword to be searched when executed.","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"     * @param keyword a String representing a keyword to be matched with the task list","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"     * Searches task list for case-insensitive matches with the specified keyword.","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"     * @param tasks The TaskList object on which the command will operate","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"     * @param storage The Storage object that will read and write to files","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"     * @param ui The Ui object that handles displaying messages","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"        super.tasks \u003d tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"        super.storage \u003d storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"        super.ui \u003d ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"            return super.ui.displayList(\"Land ho! I\u0027ve spied these tasks over yonder!\",","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"H4mes"},"content":"                    super.tasks.findTasks(this.keyword));","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"H4mes"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"H4mes"},"content":"            return super.ui.printMessage(e.getMessage());","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"H4mes":44}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke.command;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":" * This class extends the Command class and overrides the execute method to print a list of tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"     * Constructs a new ListCommand object.","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"     * This constructor does not require any parameters.","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"    public ListCommand() {","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"        //do nothing","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"     * Method that lists the task from the current task list.","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"     * @param tasks The TaskList object on which the command will operate","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"     * @param storage The Storage object that will read and write to files","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"     * @param ui The Ui object that handles displaying messages","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"        super.tasks \u003d tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"        super.storage \u003d storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"        super.ui \u003d ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"        return super.ui.displayList(\"Behold, yer roster of endeavors!\", super.tasks.getTasks());","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"H4mes":34}},{"path":"src/main/java/duke/command/ToggleMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke.command;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":" * Represents a command to mark or unmark a specific tasks in the task list.","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":" * This class extends the Command class and overrides the execute method to","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":" * mark or unmark a specific task.","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"public class ToggleMarkCommand extends Command {","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"    protected int index;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"     * Constructs a command that controls if a task at the specified index","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"     * should be marked or unmarked.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"     * @param index an int representing the 1-indexed location of the task","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"     * @param isDone a boolean representing if a task is to be marked as completed or incomplete","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"    public ToggleMarkCommand(int index, boolean isDone) {","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"     * Method that executes the mark/unmark action on the task depending on the isDone variable.","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"     * @param tasks The TaskList object on which the command will operate","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"     * @param storage The Storage object that will read and write to files","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"     * @param ui The Ui object that handles displaying messages","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"        super.tasks \u003d tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"        super.storage \u003d storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"H4mes"},"content":"        super.ui \u003d ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"H4mes"},"content":"        String message;","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"H4mes"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"H4mes"},"content":"            super.tasks.markTask(index);","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"H4mes"},"content":"            message \u003d \"X marks the spot. I\u0027ve crossed this task of yer list, me heartie!\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"H4mes"},"content":"                    + super.tasks.printTask(index);","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"H4mes"},"content":"        } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"H4mes"},"content":"            super.tasks.unmarkTask(index);","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"H4mes"},"content":"            message \u003d \"The winds be shiftin\u0027, and I be lettin\u0027 \"","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"H4mes"},"content":"                    + \"this task sail with the breeze unmarked.\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"H4mes"},"content":"                    + super.tasks.printTask(index);","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"H4mes"},"content":"        super.storage.saveTaskListToFile(super.tasks.getTasks());","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"H4mes"},"content":"        return super.ui.printMessage(message);","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"H4mes":54}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke.task;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":" * Represents a task with a description, completion status and deadline.","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":" * This class provides methods to retrieve information about the task","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":" * to either be read or save to the hard disk.","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"    protected DateTimeFormatter dataFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"    protected DateTimeFormatter stringFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"     * Constructs a new Deadline object with the specified description and deadline.","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"     * @param description a String representing the description of the deadline task","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"     * @param by a LocalDateTime representing the deadline for the task","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"        super(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(stringFormat) + \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"    public String getData() {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"        return \"D | \" + super.getData() + \" | \" + by.format(dataFormat);","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"H4mes":36}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke.task;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":" * Represents a task with a description, completion status. start time and end time.","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":" * This class provides methods to retrieve information about the task","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":" * to either be read or save to the hard disk.","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"    protected DateTimeFormatter dataFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"    protected DateTimeFormatter stringFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"     * Constructs a new Event object with the specified description, start time and end time.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"     * @param description a String representing the description of the event task","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"     * @param start a LocalDateTime representing the start of the task","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"     * @param end a LocalDateTime representing the end of the task","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"        super(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start.format(stringFormat)","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"                + \" to: \" + end.format(stringFormat) + \")\";","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"    public String getData() {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"        return \"E | \" + super.getData() + \" | \" + start.format(dataFormat)","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"H4mes"},"content":"                + \" | \" + end.format(dataFormat);","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"H4mes":41}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke.task;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":" * Represents a task with a description and a completion status.","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":" * This class provides methods to retrieve information about the task","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":" * to either be read or save to the hard disk.","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"public class Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"    protected String description;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"     * Constructs a new Task with the specified description.","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"     * Sets the default isDone value to false.","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"     * @param description a String for the task\u0027s description","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"     * A method to print the task\u0027s details as a string to the console.","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"     * @return a String displaying if the task is completed and its description","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"        return (isDone ? \"[X] \" + description : \"[ ] \" + description); //mark done task with X","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"     * A method to mark the task as completed.","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"H4mes"},"content":"     * A method to mark the task as incomplete.","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"H4mes"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"H4mes"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"H4mes"},"content":"     * A method that returns a string containing the task\u0027s data to be saved to the hard disk.","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"H4mes"},"content":"     * @return a String containing the task\u0027s data formatted to be saved onto the hard disk","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"H4mes"},"content":"    public String getData() {","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"H4mes"},"content":"        return (isDone ? \"1 | \" + description : \"0 | \" + description);","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"H4mes":54}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke.task;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":" * Represents a task with a description and a completion status.","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":" * This class provides methods to retrieve information about the task","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":" * to either be read or save to the hard disk.","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"     * Constructs a new Todo object with the specified description.","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"     * @param description a String representing the task description","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"        super(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"    public String getData() {","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"        return \"T | \" + super.getData();","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"H4mes":28}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"-Infinity\" minWidth\u003d\"388.0\" maxWidth\u003d\"-Infinity\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"H4mes":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"        \u003cButton fx:id\u003d\"sendButton\" alignment\u003d\"CENTER\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"H4mes":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"    public void parseDate_correctFormat_success() {","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"        String input1 \u003d \"09/02/2024 1800\";","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"        LocalDateTime expectedDate \u003d LocalDateTime.of(2024, 2, 9, 18, 00);","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"        LocalDateTime testDate \u003d Parser.parseDate(input1);","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"        assertEquals(testDate, expectedDate);","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"H4mes":17}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"package duke.task;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"public class EventTest {","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"    public void getData_success() {","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"        LocalDateTime testFrom \u003d LocalDateTime.of(2024, 2, 9, 18, 00);","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"        LocalDateTime testTo \u003d LocalDateTime.of(2024, 2, 10, 9, 00);","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"        Event event \u003d new Event(\"Test Event\", testFrom, testTo);","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"        String expectedData \u003d \"E | 0 | Test Event | 09/02/2024 1800 | 10/02/2024 0900\";","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"        assertEquals(event.getData(), expectedData);","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"H4mes":18}}]
