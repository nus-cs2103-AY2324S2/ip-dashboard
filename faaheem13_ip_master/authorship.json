[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"faaheem13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"faaheem13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"faaheem13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"faaheem13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"faaheem13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"faaheem13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"faaheem13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"faaheem13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"faaheem13"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"faaheem13"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"faaheem13":17,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":" T | 1 | read book","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":" D | 0 | return book /by 2024-08-24 18:00","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":" E | 0 | ph /from 2024-08-22 18:00 /to 2024-08-23 18:00","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"faaheem13":3}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":" T | 1 | read book","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":" D | 0 | return book /by 2024-08-13 18:00","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":" T | 0 | meet friends","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"faaheem13":3}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"faaheem13"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"faaheem13"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"faaheem13"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"faaheem13"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"faaheem13"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"faaheem13"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"faaheem13"},"content":"     * Creates a dialog box with specified text and image.","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"faaheem13"},"content":"     * @param text The message text to be displayed in the dialog box.","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"faaheem13"},"content":"     * @param img The image representing the speaker.","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"faaheem13"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"faaheem13"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"faaheem13"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"faaheem13"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"faaheem13"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"faaheem13"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"faaheem13"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"faaheem13"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"faaheem13"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"faaheem13"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"faaheem13"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"faaheem13"},"content":"    private void flip() {","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"faaheem13"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"faaheem13"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"faaheem13"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"faaheem13"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"faaheem13"},"content":"     * Creates and returns a DialogBox for the user\u0027s dialog.","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"faaheem13"},"content":"     * This method initializes a DialogBox with the specified text and image,","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"faaheem13"},"content":"     * representing the user\u0027s part of the conversation.","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"faaheem13"},"content":"     * The dialog box is not flipped, indicating it\u0027s the user speaking.","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"faaheem13"},"content":"     * @param text The text message to be displayed in the user\u0027s dialog box.","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"faaheem13"},"content":"     * @param img The image representing the user.","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"faaheem13"},"content":"     * @return A DialogBox instance configured for displaying the user\u0027s dialog.","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"faaheem13"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"faaheem13"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":72,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"faaheem13"},"content":"     * Creates and returns a DialogBox for Duke\u0027s dialog.","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"faaheem13"},"content":"     * This method initializes a DialogBox with the specified text and image,","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"faaheem13"},"content":"     * representing Duke\u0027s response in the conversation.","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"faaheem13"},"content":"     * The dialog box is flipped (image on the left, text on the right) to indicate","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"faaheem13"},"content":"     * that the response is from Duke, differentiating it from the user\u0027s dialog.","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"faaheem13"},"content":"     * @param text The text message to be displayed in Duke\u0027s dialog box.","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"faaheem13"},"content":"     * @param img The image representing Duke.","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"faaheem13"},"content":"     * @return A DialogBox instance configured for displaying Duke\u0027s dialog, with a flipped layout","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"faaheem13"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"faaheem13"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"faaheem13"},"content":"        db.flip();","lastModifiedDate":"2024-02-21"},{"lineNumber":86,"author":{"gitId":"faaheem13"},"content":"        return db;","lastModifiedDate":"2024-02-21"},{"lineNumber":87,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":88,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"faaheem13":88}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":" * Represents the main class for the Duke application.","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":" * This class initializes the application, loads existing tasks from storage, and processes user commands.","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":"public class Duke {","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"faaheem13"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"faaheem13"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"faaheem13"},"content":"     * Constructs a new Duke application instance. Initializes the UI, storage, and task list components.","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"faaheem13"},"content":"     * Tries to loadFromFile any existing tasks from storage; if unsuccessful, starts with an empty task list.","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"faaheem13"},"content":"    public Duke() {","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"faaheem13"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"faaheem13"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"faaheem13"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"faaheem13"},"content":"            tasks \u003d new TaskList(storage.loadFromFile());","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"faaheem13"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"faaheem13"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"faaheem13"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"faaheem13"},"content":"     * Starts the Duke application. Enters a loop to read and execute commands until the user issues the \u0027bye\u0027 command.","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"faaheem13"},"content":"    public void run() {","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"faaheem13"},"content":"        System.out.println(ui.showHello());","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"faaheem13"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"faaheem13"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"faaheem13"},"content":"            try {","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"faaheem13"},"content":"                String[] fullCommand \u003d Parser.parse(ui.readCommand());","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"faaheem13"},"content":"                String command \u003d fullCommand[0];","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"faaheem13"},"content":"                if (command.equals(\"bye\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"faaheem13"},"content":"                    System.out.println(ui.showBye());","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"faaheem13"},"content":"                    isExit \u003d true;","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"faaheem13"},"content":"                    break;","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"faaheem13"},"content":"                } else if (command.equals(\"list\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"faaheem13"},"content":"                    System.out.println(ui.showList(tasks));","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"faaheem13"},"content":"                } else if (command.equals(\"mark\") || command.equals(\"unmark\") || command.equals(\"todo\")","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"faaheem13"},"content":"                        || command.equals(\"deadline\") || command.equals(\"event\") || command.equals(\"delete\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"faaheem13"},"content":"                    if (fullCommand.length \u003e 1) {","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"faaheem13"},"content":"                        if (command.equals(\"mark\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"faaheem13"},"content":"                            int indexToMark \u003d Integer.parseInt(fullCommand[1]) - 1;","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"faaheem13"},"content":"                            Task task \u003d tasks.getTasks().get(indexToMark);","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"faaheem13"},"content":"                            task.markComplete();","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"faaheem13"},"content":"                            System.out.println(ui.showTask(\" Nice! I\u0027ve marked this task as done:\", task));","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"faaheem13"},"content":"                            storage.saveToFile(tasks.getTasks());","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"faaheem13"},"content":"                        } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"faaheem13"},"content":"                            int indexToUnmark \u003d Integer.parseInt(fullCommand[1]) - 1;","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"faaheem13"},"content":"                            Task task \u003d tasks.getTasks().get(indexToUnmark);","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"faaheem13"},"content":"                            task.markIncomplete();","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"faaheem13"},"content":"                            System.out.println(ui.showTask(\" OK, I\u0027ve marked this task as not done yet:\", task));","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"faaheem13"},"content":"                            storage.saveToFile(tasks.getTasks());","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"faaheem13"},"content":"                        } else if (command.equals(\"todo\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"faaheem13"},"content":"                            Task task \u003d new ToDo(fullCommand[1]);","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"faaheem13"},"content":"                            int initialSize \u003d tasks.getSize();","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"faaheem13"},"content":"                            tasks.addTask(task);","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"faaheem13"},"content":"                            assert tasks.getSize() \u003d\u003d initialSize + 1 : \"Task list size should increase by 1 after adding a task\";","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"faaheem13"},"content":"                            System.out.println(ui.showTaskWithNum(\" Got it. I\u0027ve added this task:\\n  \", task, tasks));","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"faaheem13"},"content":"                            storage.saveToFile(tasks.getTasks()); // Save after adding new task","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"faaheem13"},"content":"                        } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"faaheem13"},"content":"                            Task task \u003d new Deadline(fullCommand[1]);","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"faaheem13"},"content":"                            int initialSize \u003d tasks.getSize();","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"faaheem13"},"content":"                            tasks.addTask(task);","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"faaheem13"},"content":"                            assert tasks.getSize() \u003d\u003d initialSize + 1 : \"Task list size should increase by 1 after adding a task\";","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"faaheem13"},"content":"                            System.out.println(ui.showTaskWithNum(\"Got it. I\u0027ve added this task:\\n\", task, tasks));","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"faaheem13"},"content":"                            storage.saveToFile(tasks.getTasks()); // Save after adding new task","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"faaheem13"},"content":"                        } else if (command.equals(\"event\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"faaheem13"},"content":"                            Task task \u003d new Event(fullCommand[1]);","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"faaheem13"},"content":"                            int initialSize \u003d tasks.getSize();","lastModifiedDate":"2024-02-24"},{"lineNumber":88,"author":{"gitId":"faaheem13"},"content":"                            tasks.addTask(task);","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"faaheem13"},"content":"                            assert tasks.getSize() \u003d\u003d initialSize + 1 : \"Task list size should increase by 1 after adding a task\";","lastModifiedDate":"2024-02-24"},{"lineNumber":90,"author":{"gitId":"faaheem13"},"content":"                            System.out.println(ui.showTaskWithNum(\"Got it. I\u0027ve added this task:\\n\", task, tasks));","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"faaheem13"},"content":"                            storage.saveToFile(tasks.getTasks()); // Save after adding new task","lastModifiedDate":"2024-02-10"},{"lineNumber":92,"author":{"gitId":"faaheem13"},"content":"                        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"faaheem13"},"content":"                            int initialSize \u003d tasks.getSize();","lastModifiedDate":"2024-02-24"},{"lineNumber":94,"author":{"gitId":"faaheem13"},"content":"                            int deleteIndex \u003d Integer.parseInt(fullCommand[1]) - 1;","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"faaheem13"},"content":"                            Task deletedTask \u003d tasks.deleteTask(deleteIndex);","lastModifiedDate":"2024-02-10"},{"lineNumber":96,"author":{"gitId":"faaheem13"},"content":"                            assert tasks.getSize() \u003d\u003d initialSize + 1 : \"Task list size should increase by 1 after adding a task\";","lastModifiedDate":"2024-02-24"},{"lineNumber":97,"author":{"gitId":"faaheem13"},"content":"                            String msg \u003d \" Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"faaheem13"},"content":"                            System.out.println(ui.showTaskWithNum(msg, deletedTask, tasks));","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"faaheem13"},"content":"                            storage.saveToFile(tasks.getTasks());","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"faaheem13"},"content":"                        }","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"faaheem13"},"content":"                    } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"faaheem13"},"content":"                        throw new DukeException(\"____________________________________________________________\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":104,"author":{"gitId":"faaheem13"},"content":"                                + \" OOPS! Your Only Friend cannot take in an empty \"","lastModifiedDate":"2024-02-16"},{"lineNumber":105,"author":{"gitId":"faaheem13"},"content":"                                + command + \"\\n Make sure \" + command + \"has a description!\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":106,"author":{"gitId":"faaheem13"},"content":"                                + \"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-16"},{"lineNumber":107,"author":{"gitId":"faaheem13"},"content":"                    }","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"faaheem13"},"content":"                } else if (command.equals(\"find\")) {","lastModifiedDate":"2024-02-17"},{"lineNumber":110,"author":{"gitId":"faaheem13"},"content":"                    if (fullCommand.length \u003c 2) {","lastModifiedDate":"2024-02-17"},{"lineNumber":111,"author":{"gitId":"faaheem13"},"content":"                        throw new DukeException(\"OOPS! Please make sure you enter a keyword\");","lastModifiedDate":"2024-02-17"},{"lineNumber":112,"author":{"gitId":"faaheem13"},"content":"                    }","lastModifiedDate":"2024-02-17"},{"lineNumber":113,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":114,"author":{"gitId":"faaheem13"},"content":"                    String keyword \u003d fullCommand[1];","lastModifiedDate":"2024-02-17"},{"lineNumber":115,"author":{"gitId":"faaheem13"},"content":"                    TaskList foundTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2024-02-17"},{"lineNumber":116,"author":{"gitId":"faaheem13"},"content":"                    System.out.println(ui.showMatchingList(foundTasks));","lastModifiedDate":"2024-02-23"},{"lineNumber":117,"author":{"gitId":"faaheem13"},"content":"                } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"faaheem13"},"content":"                    throw new DukeException(\" OOPS! Turns out Your Only Friend does not know what that is :(\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":119,"author":{"gitId":"faaheem13"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"faaheem13"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":121,"author":{"gitId":"faaheem13"},"content":"                System.out.println(ui.showError(e.getMessage()));","lastModifiedDate":"2024-02-23"},{"lineNumber":122,"author":{"gitId":"faaheem13"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":124,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":127,"author":{"gitId":"faaheem13"},"content":"     * Processes the user input and returns a response based on the command given. The method supports","lastModifiedDate":"2024-02-24"},{"lineNumber":128,"author":{"gitId":"faaheem13"},"content":"     * various commands such as \"bye\", \"list\", \"mark\", \"unmark\", \"todo\", \"deadline\", \"event\", \"delete\", and \"find\".","lastModifiedDate":"2024-02-24"},{"lineNumber":129,"author":{"gitId":"faaheem13"},"content":"     * It handles each command by performing the corresponding actions, such as","lastModifiedDate":"2024-02-24"},{"lineNumber":130,"author":{"gitId":"faaheem13"},"content":"     * adding a task, marking a task as complete, listing tasks, or finding tasks based on keywords.","lastModifiedDate":"2024-02-24"},{"lineNumber":131,"author":{"gitId":"faaheem13"},"content":"     * For commands that modify the task list, changes are saved to the storage file.","lastModifiedDate":"2024-02-24"},{"lineNumber":132,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":133,"author":{"gitId":"faaheem13"},"content":"     * @param input The full user input command.","lastModifiedDate":"2024-02-24"},{"lineNumber":134,"author":{"gitId":"faaheem13"},"content":"     * @return A string response to be displayed to the user. This response could be a confirmation of the action taken,","lastModifiedDate":"2024-02-24"},{"lineNumber":135,"author":{"gitId":"faaheem13"},"content":"     *         a list of tasks, a message indicating an error, or any other feedback related to the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":136,"author":{"gitId":"faaheem13"},"content":"     * @throws DukeException If the command is invalid, lacks necessary details, or if any other error occurs during the","lastModifiedDate":"2024-02-24"},{"lineNumber":137,"author":{"gitId":"faaheem13"},"content":"     *         processing of the command. The exception contains a message that is suitable for display to the user.","lastModifiedDate":"2024-02-24"},{"lineNumber":138,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":139,"author":{"gitId":"faaheem13"},"content":"    String getResponse(String input) {","lastModifiedDate":"2024-02-23"},{"lineNumber":140,"author":{"gitId":"faaheem13"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":141,"author":{"gitId":"faaheem13"},"content":"            String[] fullCommand \u003d Parser.parse(input.trim().toLowerCase());","lastModifiedDate":"2024-02-23"},{"lineNumber":142,"author":{"gitId":"faaheem13"},"content":"            String command \u003d fullCommand[0];","lastModifiedDate":"2024-02-23"},{"lineNumber":143,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":144,"author":{"gitId":"faaheem13"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":145,"author":{"gitId":"faaheem13"},"content":"                return ui.showBye();","lastModifiedDate":"2024-02-23"},{"lineNumber":146,"author":{"gitId":"faaheem13"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":147,"author":{"gitId":"faaheem13"},"content":"                return ui.showList(tasks);","lastModifiedDate":"2024-02-23"},{"lineNumber":148,"author":{"gitId":"faaheem13"},"content":"            } else if (command.equals(\"help\")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":149,"author":{"gitId":"faaheem13"},"content":"                ui.showHelpPopup();","lastModifiedDate":"2024-02-24"},{"lineNumber":150,"author":{"gitId":"faaheem13"},"content":"                return \"Please look at the pop-up window!\";","lastModifiedDate":"2024-02-24"},{"lineNumber":151,"author":{"gitId":"faaheem13"},"content":"            } else if (command.equals(\"mark\") || command.equals(\"unmark\") || command.equals(\"todo\")","lastModifiedDate":"2024-02-23"},{"lineNumber":152,"author":{"gitId":"faaheem13"},"content":"                    || command.equals(\"deadline\") || command.equals(\"event\") || command.equals(\"delete\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":153,"author":{"gitId":"faaheem13"},"content":"                if (fullCommand.length \u003e 1) {","lastModifiedDate":"2024-02-23"},{"lineNumber":154,"author":{"gitId":"faaheem13"},"content":"                    if (command.equals(\"mark\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":155,"author":{"gitId":"faaheem13"},"content":"                        int indexToMark \u003d Integer.parseInt(fullCommand[1]) - 1;","lastModifiedDate":"2024-02-23"},{"lineNumber":156,"author":{"gitId":"faaheem13"},"content":"                        Task task \u003d tasks.getTasks().get(indexToMark);","lastModifiedDate":"2024-02-23"},{"lineNumber":157,"author":{"gitId":"faaheem13"},"content":"                        task.markComplete();","lastModifiedDate":"2024-02-23"},{"lineNumber":158,"author":{"gitId":"faaheem13"},"content":"                        storage.saveToFile(tasks.getTasks());","lastModifiedDate":"2024-02-23"},{"lineNumber":159,"author":{"gitId":"faaheem13"},"content":"                        return ui.showTask(\" Nice! I\u0027ve marked this task as done:\", task);","lastModifiedDate":"2024-02-23"},{"lineNumber":160,"author":{"gitId":"faaheem13"},"content":"                    } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":161,"author":{"gitId":"faaheem13"},"content":"                        int indexToUnmark \u003d Integer.parseInt(fullCommand[1]) - 1;","lastModifiedDate":"2024-02-23"},{"lineNumber":162,"author":{"gitId":"faaheem13"},"content":"                        Task task \u003d tasks.getTasks().get(indexToUnmark);","lastModifiedDate":"2024-02-23"},{"lineNumber":163,"author":{"gitId":"faaheem13"},"content":"                        task.markIncomplete();","lastModifiedDate":"2024-02-23"},{"lineNumber":164,"author":{"gitId":"faaheem13"},"content":"                        storage.saveToFile(tasks.getTasks());","lastModifiedDate":"2024-02-23"},{"lineNumber":165,"author":{"gitId":"faaheem13"},"content":"                        return ui.showTask(\" OK, I\u0027ve marked this task as not done yet:\", task);","lastModifiedDate":"2024-02-23"},{"lineNumber":166,"author":{"gitId":"faaheem13"},"content":"                    } else if (command.equals(\"todo\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":167,"author":{"gitId":"faaheem13"},"content":"                        Task task \u003d new ToDo(fullCommand[1]);","lastModifiedDate":"2024-02-23"},{"lineNumber":168,"author":{"gitId":"faaheem13"},"content":"                        tasks.addTask(task);","lastModifiedDate":"2024-02-23"},{"lineNumber":169,"author":{"gitId":"faaheem13"},"content":"                        storage.saveToFile(tasks.getTasks()); // Save after adding new task","lastModifiedDate":"2024-02-23"},{"lineNumber":170,"author":{"gitId":"faaheem13"},"content":"                        return ui.showTaskWithNum(\" Got it. I\u0027ve added this task:\\n  \", task, tasks);","lastModifiedDate":"2024-02-23"},{"lineNumber":171,"author":{"gitId":"faaheem13"},"content":"                    } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":172,"author":{"gitId":"faaheem13"},"content":"                        Task task \u003d new Deadline(fullCommand[1]);","lastModifiedDate":"2024-02-23"},{"lineNumber":173,"author":{"gitId":"faaheem13"},"content":"                        tasks.addTask(task);","lastModifiedDate":"2024-02-23"},{"lineNumber":174,"author":{"gitId":"faaheem13"},"content":"                        storage.saveToFile(tasks.getTasks()); // Save after adding new task","lastModifiedDate":"2024-02-23"},{"lineNumber":175,"author":{"gitId":"faaheem13"},"content":"                        return ui.showTaskWithNum(\"Got it. I\u0027ve added this task:\\n\", task, tasks);","lastModifiedDate":"2024-02-23"},{"lineNumber":176,"author":{"gitId":"faaheem13"},"content":"                    } else if (command.equals(\"event\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":177,"author":{"gitId":"faaheem13"},"content":"                        Task task \u003d new Event(fullCommand[1]);","lastModifiedDate":"2024-02-23"},{"lineNumber":178,"author":{"gitId":"faaheem13"},"content":"                        tasks.addTask(task);","lastModifiedDate":"2024-02-23"},{"lineNumber":179,"author":{"gitId":"faaheem13"},"content":"                        storage.saveToFile(tasks.getTasks()); // Save after adding new task","lastModifiedDate":"2024-02-23"},{"lineNumber":180,"author":{"gitId":"faaheem13"},"content":"                        return ui.showTaskWithNum(\"Got it. I\u0027ve added this task:\\n\", task, tasks);","lastModifiedDate":"2024-02-23"},{"lineNumber":181,"author":{"gitId":"faaheem13"},"content":"                    } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":182,"author":{"gitId":"faaheem13"},"content":"                        int deleteIndex \u003d Integer.parseInt(fullCommand[1]) - 1;","lastModifiedDate":"2024-02-23"},{"lineNumber":183,"author":{"gitId":"faaheem13"},"content":"                        Task deletedTask \u003d tasks.deleteTask(deleteIndex);","lastModifiedDate":"2024-02-23"},{"lineNumber":184,"author":{"gitId":"faaheem13"},"content":"                        storage.saveToFile(tasks.getTasks());","lastModifiedDate":"2024-02-23"},{"lineNumber":185,"author":{"gitId":"faaheem13"},"content":"                        return ui.showTaskWithNum(\" Noted. I\u0027ve removed this task:\\n\", deletedTask, tasks);","lastModifiedDate":"2024-02-23"},{"lineNumber":186,"author":{"gitId":"faaheem13"},"content":"                    }","lastModifiedDate":"2024-02-23"},{"lineNumber":187,"author":{"gitId":"faaheem13"},"content":"                } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":188,"author":{"gitId":"faaheem13"},"content":"                    throw new DukeException(\"____________________________________________________________\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":189,"author":{"gitId":"faaheem13"},"content":"                            + \" OOPS! Your Only Friend cannot take in an empty \"","lastModifiedDate":"2024-02-23"},{"lineNumber":190,"author":{"gitId":"faaheem13"},"content":"                            + command + \"\\n Make sure \" + command + \"has a description!\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":191,"author":{"gitId":"faaheem13"},"content":"                            + \"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":192,"author":{"gitId":"faaheem13"},"content":"                }","lastModifiedDate":"2024-02-23"},{"lineNumber":193,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":194,"author":{"gitId":"faaheem13"},"content":"            } else if (command.equals(\"find\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":195,"author":{"gitId":"faaheem13"},"content":"                if (fullCommand.length \u003c 2) {","lastModifiedDate":"2024-02-23"},{"lineNumber":196,"author":{"gitId":"faaheem13"},"content":"                    throw new DukeException(\"OOPS! Please make sure you enter a keyword\");","lastModifiedDate":"2024-02-23"},{"lineNumber":197,"author":{"gitId":"faaheem13"},"content":"                }","lastModifiedDate":"2024-02-23"},{"lineNumber":198,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":199,"author":{"gitId":"faaheem13"},"content":"                String keyword \u003d fullCommand[1];","lastModifiedDate":"2024-02-23"},{"lineNumber":200,"author":{"gitId":"faaheem13"},"content":"                TaskList foundTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2024-02-23"},{"lineNumber":201,"author":{"gitId":"faaheem13"},"content":"                return ui.showMatchingList(foundTasks);","lastModifiedDate":"2024-02-23"},{"lineNumber":202,"author":{"gitId":"faaheem13"},"content":"            } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":203,"author":{"gitId":"faaheem13"},"content":"                throw new DukeException(\" OOPS! Turns out Your Only Friend does not know what that is :(\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":204,"author":{"gitId":"faaheem13"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":205,"author":{"gitId":"faaheem13"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":206,"author":{"gitId":"faaheem13"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":207,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":208,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":209,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":210,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":211,"author":{"gitId":"faaheem13"},"content":"     * Serves as the entry point of the application.","lastModifiedDate":"2024-02-21"},{"lineNumber":212,"author":{"gitId":"faaheem13"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2024-02-24"},{"lineNumber":213,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":214,"author":{"gitId":"faaheem13"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-10"},{"lineNumber":215,"author":{"gitId":"faaheem13"},"content":"        new Duke().run();","lastModifiedDate":"2024-02-10"},{"lineNumber":216,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"faaheem13":216,"-":1}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":" * The Launcher class serves as a workaround to classpath issues when launching a JavaFX application.","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":" * This class specifically acts as the entry point to the application, invoking the JavaFX Application\u0027s","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":" * launch method with the Main class as an argument. This approach facilitates the proper handling of","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":" * JavaFX runtime components and resources, ensuring the application starts smoothly without encountering","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":" * classpath-related errors.","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":" *","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":" * Use this class to start the Duke application when running from environments where direct execution","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":" * of the JavaFX Application class may lead to classpath or module path issues.","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"public class Launcher {","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":"     * The main method that serves as the entry point of the application.","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":"     * It delegates the application startup to the JavaFX framework by calling","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":"     * Application.launch with the Main class specified, which initiates the JavaFX","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":"     * application lifecycle.","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"faaheem13"},"content":"     * @param args Command line arguments passed to the application. These are not","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"faaheem13"},"content":"     *             used directly by the Launcher but are forwarded to the JavaFX","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"faaheem13"},"content":"     *             application.","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"faaheem13"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"faaheem13"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"faaheem13":29}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":"     * Starts and displays the primary stage of the application, loading the GUI from FXML.","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"faaheem13"},"content":"     * @param stage The primary stage for this application.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"faaheem13"},"content":"     * @throws IOException If the FXML file cannot be loaded.","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"faaheem13"},"content":"    @Override","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"faaheem13"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"faaheem13"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"faaheem13"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"faaheem13"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"faaheem13"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"faaheem13"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"faaheem13"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"faaheem13"},"content":"            stage.show();","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"faaheem13"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"faaheem13"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"faaheem13":37}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"faaheem13"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"faaheem13"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"faaheem13"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"faaheem13"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"faaheem13"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"faaheem13"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"faaheem13"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"faaheem13"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"faaheem13"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"faaheem13"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaOnlyFriend.png\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"faaheem13"},"content":"     * Initializes the controller class. This method is automatically called after the FXML file has been loaded.","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"faaheem13"},"content":"     * It sets up the initial configuration of the GUI components,","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"faaheem13"},"content":"     * particularly the scroll pane and the dialog container.","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"faaheem13"},"content":"     * A welcome message is displayed in the dialog container as part of the initialization process to greet the user","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"faaheem13"},"content":"     * when the application starts.","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"faaheem13"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"faaheem13"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"faaheem13"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"faaheem13"},"content":"        String welcomeMessage \u003d ui.showHello();","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"faaheem13"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(welcomeMessage, dukeImage));","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"faaheem13"},"content":"     * Sets the Duke instance for this window controller. This method allows the main application class to pass","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"faaheem13"},"content":"     * a reference to the Duke logic controller, enabling interaction between the GUI components and the application logic.","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"faaheem13"},"content":"     * @param d The Duke instance to be used by this controller.","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"faaheem13"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"faaheem13"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"faaheem13"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"faaheem13"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"faaheem13"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"faaheem13"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"faaheem13"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"faaheem13"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"faaheem13"},"content":"        if (ui.showBye().equals(response)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"faaheem13"},"content":"            dialogContainer.getChildren().add(","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"faaheem13"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"faaheem13"},"content":"            );","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"faaheem13"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1)); // Delay for 1 second","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"faaheem13"},"content":"            delay.setOnFinished(event -\u003e {","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"faaheem13"},"content":"                Stage stage \u003d (Stage) dialogContainer.getScene().getWindow();","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"faaheem13"},"content":"                stage.close();","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"faaheem13"},"content":"            });","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"faaheem13"},"content":"            delay.play();","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"faaheem13"},"content":"        } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"faaheem13"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"faaheem13"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"faaheem13"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"faaheem13"},"content":"            );","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"faaheem13"},"content":"            userInput.clear();","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"faaheem13":83}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke.exception;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":" * Represents exceptions specific to Duke application. This exception is thrown when the","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":" * application encounters an issue specific to its logic, such as invalid user input.","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"        super(message);","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"faaheem13":12}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke.parser;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":" * Provides utility methods for parsing user input into commands and arguments for the Duke application.","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"public class Parser {","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"    public static String[] parse(String userInput) {","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"        return userInput.trim().split(\" \", 2);","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"faaheem13":12}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke.storage;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"import java.io.File;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":" * Manages the loading and saving of tasks to a file.","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":" * This class provides functionality to loadFromFile tasks from a specified file","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":" * upon startup and save tasks into the same file.","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"faaheem13"},"content":"public class Storage {","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"faaheem13"},"content":"    private String filePath;","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"faaheem13"},"content":"     * Constructs a new Storage object to handle data persistence.","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"faaheem13"},"content":"     * The file path for loading and saving tasks is set upon construction.","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"faaheem13"},"content":"    public Storage() {","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"faaheem13"},"content":"        this.filePath \u003d \"./data/tasks.txt\";","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"faaheem13"},"content":"     * Loads tasks from the file specified by the filePath.","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"faaheem13"},"content":"     * Parses the task data from the file and creates a corresponding list of Task objects.","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"faaheem13"},"content":"     * @return An ArrayList of Task objects loaded from the file.","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"faaheem13"},"content":"     * @throws DukeException if the file cannot be found or the data format is incorrect.","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"faaheem13"},"content":"    public ArrayList\u003cTask\u003e loadFromFile() throws DukeException {","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"faaheem13"},"content":"        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"faaheem13"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"faaheem13"},"content":"            File directory \u003d new File(\"./data/\");","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"faaheem13"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"faaheem13"},"content":"                directory.mkdirs();","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"faaheem13"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"faaheem13"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"faaheem13"},"content":"            Scanner whatToDo \u003d new Scanner(file);","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"faaheem13"},"content":"            while (whatToDo.hasNext()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"faaheem13"},"content":"                String readText \u003d whatToDo.nextLine();","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"faaheem13"},"content":"                char taskType \u003d readText.charAt(1);","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"faaheem13"},"content":"                char doneOrNot \u003d readText.charAt(5);","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"faaheem13"},"content":"                String description \u003d readText.substring(9);","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"faaheem13"},"content":"                Task task \u003d null;","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"faaheem13"},"content":"                if (taskType \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"faaheem13"},"content":"                    task \u003d new ToDo(description);","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"faaheem13"},"content":"                    listOfTasks.add(task);","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"faaheem13"},"content":"                } else if (taskType \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"faaheem13"},"content":"                    try {","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"faaheem13"},"content":"                        task \u003d new Deadline(description);","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"faaheem13"},"content":"                        listOfTasks.add(task);","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"faaheem13"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"faaheem13"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"faaheem13"},"content":"                    }","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"faaheem13"},"content":"                } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"faaheem13"},"content":"                    try {","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"faaheem13"},"content":"                        task \u003d new Event(description);","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"faaheem13"},"content":"                        listOfTasks.add(task);","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"faaheem13"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"faaheem13"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"faaheem13"},"content":"                    }","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"faaheem13"},"content":"                }","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"faaheem13"},"content":"                if (doneOrNot \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"faaheem13"},"content":"                    task.markComplete();","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"faaheem13"},"content":"                }","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"faaheem13"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"faaheem13"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"faaheem13"},"content":"            throw new DukeException(\" No Saved Tasks Found. Let\u0027s start with an empty list!\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"faaheem13"},"content":"        return listOfTasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":91,"author":{"gitId":"faaheem13"},"content":"     * Saves the current list of tasks to the file specified by the filePath.","lastModifiedDate":"2024-02-16"},{"lineNumber":92,"author":{"gitId":"faaheem13"},"content":"     * Converts the list of Task objects into a string representation that can be saved to a file.","lastModifiedDate":"2024-02-16"},{"lineNumber":93,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":94,"author":{"gitId":"faaheem13"},"content":"     * @param listOfTasks The list of Task objects to be saved.","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"faaheem13"},"content":"     * @throws DukeException if there is an error saving the data to the file.","lastModifiedDate":"2024-02-16"},{"lineNumber":96,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":97,"author":{"gitId":"faaheem13"},"content":"    public void saveToFile(ArrayList\u003cTask\u003e listOfTasks) throws DukeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"faaheem13"},"content":"        String toSave \u003d \"\";","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"faaheem13"},"content":"        for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"faaheem13"},"content":"            toSave +\u003d listOfTasks.get(i).toSave() + \"\\n\";","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"faaheem13"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":105,"author":{"gitId":"faaheem13"},"content":"            FileWriter file \u003d new FileWriter(this.filePath);","lastModifiedDate":"2024-02-10"},{"lineNumber":106,"author":{"gitId":"faaheem13"},"content":"            file.write(toSave);","lastModifiedDate":"2024-02-10"},{"lineNumber":107,"author":{"gitId":"faaheem13"},"content":"            file.close();","lastModifiedDate":"2024-02-10"},{"lineNumber":108,"author":{"gitId":"faaheem13"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":109,"author":{"gitId":"faaheem13"},"content":"            throw new DukeException(\" Error while saving, please try again!\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":110,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":111,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":112,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"faaheem13":112}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke.task;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":" * Represents a deadline task in the Duke application. A deadline task has a specific due date and time.","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":" * This class extends the Task abstract class, providing implementations for the deadline specific functionalities.","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"    private String deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"    private LocalDateTime deadlineDateFormat;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":"     * Constructs a Deadline task with the specified description, which includes the due date and time.","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":"     * The due date and time should follow the format \"yyyy-MM-dd HH:mm\".","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"faaheem13"},"content":"     * @param description The task description including the deadline in \"description /by yyyy-MM-dd HH:mm\" format.","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"faaheem13"},"content":"     * @throws DukeException If the deadline date and time are not in the correct format or are missing.","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"faaheem13"},"content":"    public Deadline(String description) throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"faaheem13"},"content":"        this.fullTaskDescription \u003d description;","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"faaheem13"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"faaheem13"},"content":"            String[] command \u003d description.split(\" /by \");","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"faaheem13"},"content":"            if (command.length \u003c\u003d 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"faaheem13"},"content":"                throw new DukeException(\" OOPS! Your Only Friend cannot take in a deadline entry with no time :(\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"faaheem13"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"faaheem13"},"content":"            this.deadlineDateFormat \u003d LocalDateTime.parse(command[1], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"faaheem13"},"content":"            this.description \u003d command[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"faaheem13"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"faaheem13"},"content":"            throw new DukeException(\" OOPS! Please enter deadline in a valid format (yyyy-mm-dd HH:mm). :(\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"faaheem13"},"content":"     * Returns a string representation of the Deadline task, including its status, description, and deadline.","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"faaheem13"},"content":"     * @return A formatted string representing the Deadline task.","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"faaheem13"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"faaheem13"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"faaheem13"},"content":"        return \" [D]\" + super.toString() + this.description + \" (by: \"","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"faaheem13"},"content":"                + deadlineDateFormat.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"faaheem13"},"content":"     * Returns a string representation of the Deadline task for saving to a file, including its type, status,","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"faaheem13"},"content":"     * description, and deadline.","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"faaheem13"},"content":"     * @return A formatted string suitable for saving the Deadline task to a file.","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"faaheem13"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"faaheem13"},"content":"    public String toSave() {","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"faaheem13"},"content":"        return \" D\" + (super.getStatusIcon().equals(\"X\") ? \" | 1 | \" : \" | 0 | \") + this.fullTaskDescription;","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"faaheem13":61}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke.task;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":" * Represents an event task with a start and end datetime.","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":" * This class extends the Task abstract class, providing implementations for the event specific functionalities.","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":"     * Constructs a new Event instance with the specified description, including the start and end datetime.","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"faaheem13"},"content":"     * @param description The event description in the format \"event_description /from start_datetime /to end_datetime\".","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"faaheem13"},"content":"     * @throws DukeException If the datetime format is invalid or the description format is incorrect/missing","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"faaheem13"},"content":"    public Event(String description) throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"faaheem13"},"content":"        this.fullTaskDescription \u003d description;","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"faaheem13"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"faaheem13"},"content":"            String[] command \u003d description.split(\" /from \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"faaheem13"},"content":"            if (command.length \u003c\u003d 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"faaheem13"},"content":"                throw new DukeException(\" OOPS! Your Only Friend cannot take in an event entry with no timeline :(\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"faaheem13"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"faaheem13"},"content":"            String timeline \u003d command[1];","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"faaheem13"},"content":"            String[] eventDates \u003d timeline.split(\" /to \");","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"faaheem13"},"content":"            if (eventDates.length \u003c\u003d 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"faaheem13"},"content":"                throw new DukeException(\" OOPS! Your Only Friend cannot take in an event entry with no timeline :(\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"faaheem13"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"faaheem13"},"content":"            this.from \u003d LocalDateTime.parse(eventDates[0], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"faaheem13"},"content":"            this.to \u003d LocalDateTime.parse(eventDates[1], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"faaheem13"},"content":"            this.description \u003d command[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"faaheem13"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"faaheem13"},"content":"            throw new DukeException(\" OOPS! Please enter deadline in a valid format (yyyy-mm-dd HH:mm). :(\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"faaheem13"},"content":"     * Returns a string representation of the event task, including its status, description, and datetime range.","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"faaheem13"},"content":"     * @return A string representation of the event task.","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"faaheem13"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"faaheem13"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"faaheem13"},"content":"        return \" [E]\" + super.toString() + this.description + \" (from: \"","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"faaheem13"},"content":"                + this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"))","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"faaheem13"},"content":"                + \" to: \" + this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"faaheem13"},"content":"     * Returns a string representation of the event task suitable for saving to a file.","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"faaheem13"},"content":"     * The saved format includes the task type, status, description, and datetime range.","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"faaheem13"},"content":"     * @return A string suitable for saving the event task to a file.","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"faaheem13"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"faaheem13"},"content":"    public String toSave() {","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"faaheem13"},"content":"        return \" E\" + (super.getStatusIcon().equals(\"X\") ? \" | 1 | \" : \" | 0 | \") + this.fullTaskDescription;","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"faaheem13":70}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke.task;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":" * Represents an abstract task in the Duke application. This class is a base for various types of tasks.","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"    protected String fullTaskDescription; //include timeline","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"    protected String description;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"    //    public Task(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"    //        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"    //        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"    //    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":"     * Returns a string representation of the task\u0027s completion status.","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":"     * @return A string \"X\" if the task is completed, otherwise a space.","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"faaheem13"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"faaheem13"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"faaheem13"},"content":"     * Marks this task as complete.","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"faaheem13"},"content":"    public void markComplete() {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"faaheem13"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"faaheem13"},"content":"     * Marks this task as incomplete.","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"faaheem13"},"content":"    public void markIncomplete() {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"faaheem13"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"faaheem13"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"faaheem13"},"content":"     * @return A string representation of the task showing its completion status.","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"faaheem13"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"faaheem13"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"faaheem13"},"content":"        String str;","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"faaheem13"},"content":"        str \u003d \"[\" + this.getStatusIcon() + \"] \";","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"faaheem13"},"content":"        return str;","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"faaheem13"},"content":"     * Returns a string representation of the task for saving to a file.","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"faaheem13"},"content":"     * @return A string suitable for saving the task to a file.","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"faaheem13"},"content":"    public abstract String toSave();","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"faaheem13":57}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke.task;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":" * Represents a to-do task without any specific deadline or time frame.","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":" * This class extends the Task abstract class, providing implementations for the to-do specific functionalities.","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"     * Constructs a new ToDo instance with the specified description.","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":"     * Returns a string representation of the to-do task, including its status and description.","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"faaheem13"},"content":"     * @return A string representation of the to-do task.","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"faaheem13"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"faaheem13"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"faaheem13"},"content":"        return \" [T]\" + super.toString() + this.description;","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"faaheem13"},"content":"     * Returns a string representation of the to-do task suitable for saving to a file.","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"faaheem13"},"content":"     * The saved format includes the task type, status, and description.","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"faaheem13"},"content":"     * @return A string suitable for saving the to-do task to a file.","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"faaheem13"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"faaheem13"},"content":"    public String toSave() {","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"faaheem13"},"content":"        return \" T\" + (super.getStatusIcon().equals(\"X\") ? \" | 1 | \" : \" | 0 | \") + this.description;","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"faaheem13":38}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke.tasklist;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":" * Represents the list of tasks in the Duke application. It encapsulates an ArrayList of Task","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":" * objects and provides methods to manipulate this list, such as adding or deleting tasks.","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"public class TaskList {","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"     * Initializes an empty TaskList.","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"faaheem13"},"content":"     * Initializes a TaskList with a pre-defined list of tasks.","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"faaheem13"},"content":"     * @param tasks An ArrayList of Task objects to be included in the TaskList.","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"faaheem13"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"faaheem13"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"faaheem13"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"faaheem13"},"content":"     * @param task The Task object to be added.","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"faaheem13"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"faaheem13"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"faaheem13"},"content":"     * Deletes a task from the TaskList based on the given index.","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"faaheem13"},"content":"     * @param index The index of the task in the TaskList to be deleted.","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"faaheem13"},"content":"     * @return The Task object that was deleted.","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"faaheem13"},"content":"     * @throws DukeException If the index is out of bounds (i.e., if no task exists at the given index).","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"faaheem13"},"content":"    public Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"faaheem13"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"faaheem13"},"content":"            throw new DukeException(\" OOPS! Your Only Friend could not find that index.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"faaheem13"},"content":"        Task deletedTask \u003d tasks.get(index);","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"faaheem13"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"faaheem13"},"content":"        return deletedTask;","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"faaheem13"},"content":"     * Finds and returns tasks from TaskList that contains the keyword.","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"faaheem13"},"content":"     * @param keyword The keyword to search for","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"faaheem13"},"content":"     * @return The list of tasks with the keyword in it.","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"faaheem13"},"content":"    public TaskList findTasks(String keyword) {","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"faaheem13"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"faaheem13"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"faaheem13"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"faaheem13"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"faaheem13"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"faaheem13"},"content":"        return new TaskList(matchingTasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"faaheem13"},"content":"     * Retrieves the list of tasks.","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"faaheem13"},"content":"     * @return An ArrayList containing the tasks.","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"faaheem13"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"faaheem13"},"content":"        return tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":78,"author":{"gitId":"faaheem13"},"content":"     * Gets the number of tasks in the TaskList.","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"faaheem13"},"content":"     * @return The size of the TaskList.","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":81,"author":{"gitId":"faaheem13"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"faaheem13"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"faaheem13":85}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke.ui;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":" * Handles the user interface of the Duke application. It is responsible for","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":" * all the interactions with the user, including taking input and showing","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":" * messages to the user.","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":"public class Ui {","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"faaheem13"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"faaheem13"},"content":"    private final String break_line \u003d \"_____________________________________________________\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"faaheem13"},"content":"     * Initializes a Ui instance with a new Scanner object to read user input.","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"faaheem13"},"content":"    public Ui() {","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"faaheem13"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"faaheem13"},"content":"     * Displays the welcome message to the user.","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"faaheem13"},"content":"     * @return Welcome message","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"faaheem13"},"content":"    public String showHello() {","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"faaheem13"},"content":"        return break_line","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"faaheem13"},"content":"                + \" Hello! I\u0027m Your Only Friend\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"faaheem13"},"content":"                + \" What can I do for you?\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"faaheem13"},"content":"                + \"\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"faaheem13"},"content":"                + \" If you need to know what commands to use:\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"faaheem13"},"content":"                + \" Write \u0027help\u0027 and Your Only Friend will help you out!\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"faaheem13"},"content":"                + break_line;","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"faaheem13"},"content":"     * Displays the goodbye message to the user.","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"faaheem13"},"content":"     * @return goodbye message","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"faaheem13"},"content":"    public String showBye() {","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"faaheem13"},"content":"        return break_line","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"faaheem13"},"content":"                + \" Bye. Hope to see you again soon!\\n - Your Only Friend\\n\"","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"faaheem13"},"content":"                + break_line;","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"faaheem13"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"faaheem13"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"faaheem13"},"content":"     * @return error message","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"faaheem13"},"content":"    public String showError(String message) {","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"faaheem13"},"content":"        return break_line + message + break_line;","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":67,"author":{"gitId":"faaheem13"},"content":"     * Reads a command from the user.","lastModifiedDate":"2024-02-16"},{"lineNumber":68,"author":{"gitId":"faaheem13"},"content":"     * @return The user\u0027s command as a trimmed, lowercase string.","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"faaheem13"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"faaheem13"},"content":"        return scanner.nextLine().trim().toLowerCase();","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"faaheem13"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2024-02-16"},{"lineNumber":76,"author":{"gitId":"faaheem13"},"content":"     * @param tasks The TaskList containing the tasks to be displayed.","lastModifiedDate":"2024-02-16"},{"lineNumber":77,"author":{"gitId":"faaheem13"},"content":"     * @return String representation of the list of tasks","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"faaheem13"},"content":"    public String showList(TaskList tasks) {","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"faaheem13"},"content":"        String str1 \u003d break_line + \" Here are the tasks in your list:\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"faaheem13"},"content":"        String str2 \u003d \"\";","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"faaheem13"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"faaheem13"},"content":"            str2 +\u003d \" \" + i + \".\" + tasks.getTasks().get(i - 1).toString() + \"\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"faaheem13"},"content":"        String str_out \u003d str1 + str2 + break_line;","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"faaheem13"},"content":"        return str_out;","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":88,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":90,"author":{"gitId":"faaheem13"},"content":"     * Displays a specific task to the user along with a custom message.","lastModifiedDate":"2024-02-16"},{"lineNumber":91,"author":{"gitId":"faaheem13"},"content":"     * @param msg The message to be displayed above the task.","lastModifiedDate":"2024-02-16"},{"lineNumber":92,"author":{"gitId":"faaheem13"},"content":"     * @param task The task to be displayed.","lastModifiedDate":"2024-02-16"},{"lineNumber":93,"author":{"gitId":"faaheem13"},"content":"     * @return String representation of task","lastModifiedDate":"2024-02-24"},{"lineNumber":94,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"faaheem13"},"content":"    public String showTask(String msg, Task task) {","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"faaheem13"},"content":"        return break_line + msg + \"\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"faaheem13"},"content":"                + task.toString()","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"faaheem13"},"content":"                + break_line;","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":102,"author":{"gitId":"faaheem13"},"content":"     * Displays a specific task to the user along with a custom message, and","lastModifiedDate":"2024-02-16"},{"lineNumber":103,"author":{"gitId":"faaheem13"},"content":"     * shows the total number of tasks in the list.","lastModifiedDate":"2024-02-16"},{"lineNumber":104,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"faaheem13"},"content":"     * @param msg   The message to be displayed above the task.","lastModifiedDate":"2024-02-16"},{"lineNumber":106,"author":{"gitId":"faaheem13"},"content":"     * @param task  The task to be displayed.","lastModifiedDate":"2024-02-16"},{"lineNumber":107,"author":{"gitId":"faaheem13"},"content":"     * @param tasks The TaskList to count the total number of tasks from.","lastModifiedDate":"2024-02-16"},{"lineNumber":108,"author":{"gitId":"faaheem13"},"content":"     * @return task and total tasks\u0027 string representation","lastModifiedDate":"2024-02-24"},{"lineNumber":109,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":110,"author":{"gitId":"faaheem13"},"content":"    public String showTaskWithNum(String msg, Task task, TaskList tasks) {","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"faaheem13"},"content":"        return break_line + msg + \"\\n\" + task.toString() + \"\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":112,"author":{"gitId":"faaheem13"},"content":"                + \"Now you have \" + tasks.getSize()","lastModifiedDate":"2024-02-23"},{"lineNumber":113,"author":{"gitId":"faaheem13"},"content":"                + (tasks.getSize() \u003c\u003d 1 ? \" task in the list.\" : \" tasks in the list.\\n\")","lastModifiedDate":"2024-02-23"},{"lineNumber":114,"author":{"gitId":"faaheem13"},"content":"                + break_line;","lastModifiedDate":"2024-02-23"},{"lineNumber":115,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":116,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":117,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":118,"author":{"gitId":"faaheem13"},"content":"     * Displays list of tasks which includes the keyword for \"finding tasks\".","lastModifiedDate":"2024-02-17"},{"lineNumber":119,"author":{"gitId":"faaheem13"},"content":"     * @param tasks","lastModifiedDate":"2024-02-17"},{"lineNumber":120,"author":{"gitId":"faaheem13"},"content":"     * @return String representation of tasks with the keyword","lastModifiedDate":"2024-02-24"},{"lineNumber":121,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":122,"author":{"gitId":"faaheem13"},"content":"    public String showMatchingList(TaskList tasks) {","lastModifiedDate":"2024-02-23"},{"lineNumber":123,"author":{"gitId":"faaheem13"},"content":"        String str \u003d \"\";","lastModifiedDate":"2024-02-23"},{"lineNumber":124,"author":{"gitId":"faaheem13"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {","lastModifiedDate":"2024-02-17"},{"lineNumber":125,"author":{"gitId":"faaheem13"},"content":"            str +\u003d \" \" + i + \".\" + tasks.getTasks().get(i - 1).toString() + \"\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":126,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":127,"author":{"gitId":"faaheem13"},"content":"        return break_line + \" Here are the matching tasks in your list:\\n\" + str + break_line;","lastModifiedDate":"2024-02-23"},{"lineNumber":128,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":129,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":130,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":131,"author":{"gitId":"faaheem13"},"content":"     * Displays list of commands to help out user","lastModifiedDate":"2024-02-24"},{"lineNumber":132,"author":{"gitId":"faaheem13"},"content":"     * @return A list of commands and what they do.","lastModifiedDate":"2024-02-24"},{"lineNumber":133,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":134,"author":{"gitId":"faaheem13"},"content":"    public String showHelp() {","lastModifiedDate":"2024-02-24"},{"lineNumber":135,"author":{"gitId":"faaheem13"},"content":"        return \" Small Guide: \\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":136,"author":{"gitId":"faaheem13"},"content":"                + \" \u0027bye\u0027       : exits the application \\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":137,"author":{"gitId":"faaheem13"},"content":"                + \" \u0027deadline\u0027  : to create deadline task, format \u003d \u0027deadline description /by yyyy-MM-dd HH:mm\u0027\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":138,"author":{"gitId":"faaheem13"},"content":"                + \" \u0027delete\u0027    : to remove a task at a certain index, format \u003d \u0027delete index\u0027\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":139,"author":{"gitId":"faaheem13"},"content":"                + \" \u0027event\u0027     : to create event task, format \u003d \u0027event description /from yyyy-MM-dd HH:mm \"","lastModifiedDate":"2024-02-24"},{"lineNumber":140,"author":{"gitId":"faaheem13"},"content":"                + \"/to yyyy-MM-dd HH:mm\u0027\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":141,"author":{"gitId":"faaheem13"},"content":"                + \" \u0027find\u0027      : to search for a keyword in task descriptions, format \u003d \u0027find keyword\u0027\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":142,"author":{"gitId":"faaheem13"},"content":"                + \" \u0027mark\u0027      : to mark a task at a certain index as complete, format \u003d \u0027mark index\u0027\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":143,"author":{"gitId":"faaheem13"},"content":"                + \" \u0027todo\u0027      : to create a todo task with no particular time constraint, format \u003d \u0027todo description\u0027\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":144,"author":{"gitId":"faaheem13"},"content":"                + \" \u0027unmark\u0027    : to unmark a task at a certain index as incomplete, format \u003d \u0027unmark index\u0027\\n\";","lastModifiedDate":"2024-02-24"},{"lineNumber":145,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":146,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":147,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":148,"author":{"gitId":"faaheem13"},"content":"     * Displays help in a new window.","lastModifiedDate":"2024-02-24"},{"lineNumber":149,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":150,"author":{"gitId":"faaheem13"},"content":"    public void showHelpPopup() {","lastModifiedDate":"2024-02-24"},{"lineNumber":151,"author":{"gitId":"faaheem13"},"content":"        String helpText \u003d showHelp();","lastModifiedDate":"2024-02-24"},{"lineNumber":152,"author":{"gitId":"faaheem13"},"content":"        TextArea textArea \u003d new TextArea(helpText);","lastModifiedDate":"2024-02-24"},{"lineNumber":153,"author":{"gitId":"faaheem13"},"content":"        textArea.setEditable(false);","lastModifiedDate":"2024-02-24"},{"lineNumber":154,"author":{"gitId":"faaheem13"},"content":"        textArea.setWrapText(true);","lastModifiedDate":"2024-02-24"},{"lineNumber":155,"author":{"gitId":"faaheem13"},"content":"        Stage helpStage \u003d new Stage();","lastModifiedDate":"2024-02-24"},{"lineNumber":156,"author":{"gitId":"faaheem13"},"content":"        helpStage.setTitle(\"Help\");","lastModifiedDate":"2024-02-24"},{"lineNumber":157,"author":{"gitId":"faaheem13"},"content":"        helpStage.setScene(new Scene(textArea, 675, 200));","lastModifiedDate":"2024-02-24"},{"lineNumber":158,"author":{"gitId":"faaheem13"},"content":"        helpStage.show();","lastModifiedDate":"2024-02-24"},{"lineNumber":159,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":160,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-24"},{"lineNumber":161,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"faaheem13":161}},{"path":"src/main/resources/text/Help.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"Small Guide: ","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"                \u0027bye\u0027\t\t: exits the application \\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"                \u0027deadline\u0027 \t: to create deadline task, format \u003d \u0027deadline description /by yyyy-MM-dd HH:mm\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"                \u0027delete\u0027 \t: to remove a task at a certain index, format \u003d \u0027delete index\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"                \u0027event\u0027 \t: to create event task, format \u003d \u0027event description /from yyyy-MM-dd HH:mm /to yyyy-MM-dd HH:mm\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"                \u0027find\u0027 \t\t: to search for a keyword in task descriptions, format \u003d \u0027find keyword\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"                \u0027mark\u0027\t \t: to mark a task at a certain index as complete, format \u003d \u0027mark index\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"                \u0027todo\u0027 \t\t: to create a todo task with no particular time constraint, format \u003d \u0027todo description\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"                \u0027unmark\u0027 \t: to unmark a task at a certain index as incomplete, format \u003d \u0027unmark index\u0027","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"faaheem13":9}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"faaheem13":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"faaheem13":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"public class DukeTest {","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"    public void addTask_increaseListSize() {","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"        Task todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"faaheem13":20}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke.task;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"    void deadlineConstructor_throwsExceptionOnInvalidDate() {","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"        String input \u003d \"submit report /by invalid-date\";","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e new Deadline(input));","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":"        String expectedMessage \u003d \" OOPS! Please enter deadline in a valid format (yyyy-mm-dd HH:mm). :(\";","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":"        assertTrue(actualMessage.contains(expectedMessage));","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"faaheem13":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"todo borrow book","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"deadline submit assign /by 2pm","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"list","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"mark 1","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"list","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"event PHight night /from 2pm /to 6pm","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"list","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"bye","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"faaheem13":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"del ACTUAL.TXT","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"faaheem13":1,"-":20}}]
