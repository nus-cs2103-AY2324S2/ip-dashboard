[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"# duke.main.Duke project template","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"3. After that, locate the `src/main/java/duke.main.Duke.java` file, right-click it, and choose `Run duke.main.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sindhurajain":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"sindhurajain"},"content":"    mainClass.set(\"duke.main.Duke\")","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sindhurajain":15,"-":41}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import duke.main.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"import duke.main.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"import duke.main.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":" * Represents a command that can be executed.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"public class Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"     * Executes the command given the TaskList, Ui, and Storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"     * @param tasks TaskList that contains the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"     * @param ui Ui that deals with user interactions.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"     * @param storage Storage used to load and save tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"     * @throws DukeException If there is an error executing the command.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"     * Checks if command is an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"     * @return True if the command is an exit command, false otherwise.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"sindhurajain":32}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import duke.main.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"import duke.main.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"import duke.main.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":" * Represents a command to add a deadline task to the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"    private String description;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"    private String by;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"     * Constructs a DeadlineCommand with a description and a deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"     * @param by Deadline of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"    public DeadlineCommand(String description, String by) {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"     * Executes the DeadlineCommand by creating a new Deadline task, adding it to the task list,","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"     * displaying the task response using Ui, and saving the updated task list using Storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"     * @param tasks TaskList that contains the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"     * @param ui Ui that deals with user interactions.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"     * @param storage Storage used to load and save tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"     * @throws DukeException If there is an error executing the command.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"        Deadline deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"        deadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"        tasks.add(deadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"sindhurajain"},"content":"        ui.taskResponse(deadline, tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"        storage.saveList(tasks.getTasks());","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"sindhurajain":44}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import duke.main.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"import duke.main.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"import duke.main.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":" * Represents a command to add a deadline task to the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"    private int zeroItem;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"     * Constructs a DeleteCommand given the task number to be deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"     * @param oneItem One-indexed task number to be deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"    public DeleteCommand(int oneItem) {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"        this.zeroItem \u003d oneItem - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"     * Executes the DeleteCommand by deleting the given task","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"     * from the task list, displaying the deleted response using Ui,","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"     * and saving the updated task list using Storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"     * @param tasks TaskList that contains the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"     * @param ui Ui that deals with user interactions.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"     * @param storage Storage used to load and save tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"     * @throws DukeException If asked to delete a task with task number 0","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"     * or task number greater than the size of the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"        int taskNumber \u003d zeroItem + 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e tasks.getSize() || tasks.get(taskNumber - 1) \u003d\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"            throw new DukeException(\"Error! Task number \u0027\" + taskNumber + \"\u0027 does not exist.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"sindhurajain"},"content":"        Task description \u003d tasks.get(zeroItem);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"        tasks.deleteTask(zeroItem);","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"sindhurajain"},"content":"        ui.deleteResponse(description, tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"sindhurajain"},"content":"        storage.saveList(tasks.getTasks());","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"sindhurajain":46}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import duke.main.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"import duke.main.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"import duke.main.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":" * Represents a command to add an event task to the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"    private String description;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"    private String startTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"    private String endTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"     * Constructs an EventCommand given the description, start time, and end time.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"     * @param startTime Start time of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"     * @param endTime End time of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"    public EventCommand(String description, String startTime, String endTime) {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"     * Executes the EventCommand by creating a new Event task,","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"     * adding it to the task list, displaying the task response","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"     * using Ui, and saving the updated task list using Storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"     * @param tasks TaskList that contains the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"     * @param ui Ui that deals with user interactions.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"     * @param storage Storage used to load and save tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"     * @throws DukeException If there is an error executing the command.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"sindhurajain"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"        Event event;","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"sindhurajain"},"content":"        event \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"sindhurajain"},"content":"        tasks.add(event);","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"sindhurajain"},"content":"        ui.taskResponse(event, tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"sindhurajain"},"content":"        storage.saveList(tasks.getTasks());","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"sindhurajain":48}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"import duke.main.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import duke.main.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"import duke.main.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":" * Represents a command to exit the chat.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"     * Executes the ExitCommand by displaying a goodbye message using Ui.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"     * @param tasks TaskList that contains the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"     * @param ui Ui that deals with user interactions.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"     * @param storage Storage used to load and save tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"        ui.sayBye();","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"     * @return True as ExitCommand is an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"        return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"sindhurajain":32}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"import duke.main.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import duke.main.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"import duke.main.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":" * Represents a command to find tasks containing a given word.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"    private String findWord;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"     * Constructs a FindCommand instance with the given word to search for.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"     * @param findWord Word to search for in tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"    public FindCommand(String findWord) {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"        this.findWord \u003d findWord;","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"     * Executes FindCommand to search for tasks containing the given word.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"     * @param tasks TaskList that contains the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"     * @param ui Ui that deals with user interactions.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"     * @param storage Storage used to load and save tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"        ui.findTasks(findWord, tasks.getTasks());","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"sindhurajain":33}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"import duke.main.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import duke.main.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"import duke.main.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":" * Represents a command to list the tasks in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"     * Executes the ListCommand by listing the tasks in the task list using Ui.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"     * @param tasks TaskList that contains the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"     * @param ui Ui that deals with user interactions.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"     * @param storage Storage used to load and save tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"        ui.displayList(tasks.getTasks());","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"sindhurajain":22}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import duke.main.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"import duke.main.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"import duke.main.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"    private int zeroItem;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"     * Constructs a MarkCommand to mark the task with the","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"     * given task number as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"     * @param oneItem The one-indexed task number to be marked as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"    public MarkCommand(int oneItem) {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"        this.zeroItem \u003d oneItem - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"     * Executes the MarkCommand by marking the task with","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"     * the given task number as done in the task list,","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"     * displaying the completion message, and saving","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"     * the updated task list using Storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"     * @param tasks askList that contains the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"     * @param ui Ui that deals with user interactions.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"     * @param storage Storage used to load and save tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"     * @throws DukeException If asked to delete a task with task number 0","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"     * or task number greater than the size of the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"        int oneItem \u003d zeroItem + 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"        if (oneItem \u003c 1 || oneItem \u003e tasks.getSize() || tasks.get(oneItem - 1) \u003d\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"            throw new DukeException(\"Error! Task number \u0027\" + oneItem + \"\u0027 does not exist.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"        tasks.markAsDone(zeroItem);","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"sindhurajain"},"content":"        ui.printToScreen(\"Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"sindhurajain"},"content":"                tasks.get(zeroItem));","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"sindhurajain"},"content":"        storage.saveList(tasks.getTasks());","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"sindhurajain":47}},{"path":"src/main/java/duke/command/OnCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import duke.main.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"import duke.main.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"import duke.main.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":" * Represents a command to display tasks from the task list that happen on a given date.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"public class OnCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"    private LocalDate targetDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"     * Constructs an OnCommand with the given target date.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"     * @param targetDate Target date for which the tasks from the task list will be displayed.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"    public OnCommand(LocalDate targetDate) {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"        this.targetDate \u003d targetDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"     * Executes the OnCommand by displaying tasks from","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"     * the task list that happen on a given date using Ui.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"     * @param tasks TaskList that contains the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"     * @param ui Ui that deals with user interactions.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"     * @param storage Storage used to load and save tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"        ui.displayTasksOn(targetDate, tasks.getTasks());","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"sindhurajain":37}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import duke.main.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"import duke.main.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"import duke.main.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":" * Represents a command to add a to-do task to the task list .","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"    private String description;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"     * Constructs a ToDoCommand with the given description.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"    public ToDoCommand(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"     * Executes the ToDoCommand by creating a new to-do task,","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"     * adding it to the task list, displaying the response using Ui,","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"     * and saving the updated task list using Storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"     * @param tasks TaskList that contains the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"     * @param ui Ui that deals with user interactions.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"     * @param storage Storage used to load and save tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"     * @throws DukeException If there is an error executing the command.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"        tasks.add(todo);","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"        ui.taskResponse(todo, tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"        storage.saveList(tasks.getTasks());","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"sindhurajain":43}},{"path":"src/main/java/duke/command/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import duke.main.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"import duke.main.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"import duke.main.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":" * Represents a command to unmark a task as done in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"public class UnMarkCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"    private int zeroItem;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"     * Constructs an UnMarkCommand to unmark the task with the","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"     * given task number as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"     * @param oneItem The one-indexed task number to be unmarked as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"    public UnMarkCommand(int oneItem) {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"        this.zeroItem \u003d oneItem - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"     * Executes the UnMarkCommand by unmarking the task with","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"     * the given task number as done in the task list,","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"     * displaying the completion message, and saving","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"     * the updated task list using Storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"     * @param tasks TaskList that contains the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"     * @param ui Ui that deals with user interactions.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"     * @param storage Storage used to load and save tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"     * @throws DukeException If asked to delete a task with task number 0","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"     * or task number greater than the size of the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"        int oneItem \u003d zeroItem + 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"        if (oneItem \u003c 1 || oneItem \u003e tasks.getSize() || tasks.get(oneItem - 1) \u003d\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"            throw new DukeException(\"Error! Task number \u0027\" + oneItem + \"\u0027 does not exist.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"        tasks.unMarkAsDone(zeroItem);","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"sindhurajain"},"content":"        ui.printToScreen(\"OK, I\u0027ve marked this task as not done yet:\\n\" + tasks.get(zeroItem) + \"\\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"sindhurajain"},"content":"        storage.saveList(tasks.getTasks());","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"sindhurajain":46}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.exception;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":" * Represents exceptions specific to duke and inherits from the Exception class.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"     * Constructs a DukeException with the given error message.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"     * @param message Error message for the exception.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"        super(message);","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"sindhurajain":18}},{"path":"src/main/java/duke/main/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.main;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":" * Represents a dialog box in the GUI.","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"sindhurajain"},"content":"     * Constructs a DialogBox with the given text and image.","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"sindhurajain"},"content":"     * @param text Text content of the dialog box.","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"sindhurajain"},"content":"     * @param img Image to be displayed in the dialog box.","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"sindhurajain"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"sindhurajain"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"sindhurajain"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"sindhurajain"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"sindhurajain"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"sindhurajain"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"sindhurajain"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"sindhurajain"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"sindhurajain"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"sindhurajain"},"content":"        setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"sindhurajain"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"sindhurajain"},"content":"        StackPane dialogTextPane \u003d (StackPane) this.getChildren().get(0);","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"sindhurajain"},"content":"        dialogTextPane.setBackground(new Background(new BackgroundFill(Color.LIGHTBLUE, new CornerRadii(10), null)));","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"sindhurajain"},"content":"        Insets padding \u003d new Insets(0, 20, 0, 20); // Adjust the values as needed","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"sindhurajain"},"content":"        dialogTextPane.setPadding(padding);","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"sindhurajain"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"sindhurajain"},"content":"    private void flip() {","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"sindhurajain"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"sindhurajain"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"sindhurajain"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"sindhurajain"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":76,"author":{"gitId":"sindhurajain"},"content":"     * Creates and returns a user dialog box with the given text and image.","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"sindhurajain"},"content":"     * @param text Text content of the user dialog.","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"sindhurajain"},"content":"     * @param img Image to be displayed for the user dialog.","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"sindhurajain"},"content":"     * @return DialogBox representing the user dialog.","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"sindhurajain"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"sindhurajain"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"sindhurajain"},"content":"     * Creates and returns a flipped dialog box with the given text and image.","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"sindhurajain"},"content":"     * @param text Text content of dialog.","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"sindhurajain"},"content":"     * @param img Image to be displayed for dialog.","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"sindhurajain"},"content":"     * @return DialogBox representing dialog.","lastModifiedDate":"2024-02-08"},{"lineNumber":92,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"sindhurajain"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-08"},{"lineNumber":94,"author":{"gitId":"sindhurajain"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-08"},{"lineNumber":95,"author":{"gitId":"sindhurajain"},"content":"        db.flip();","lastModifiedDate":"2024-02-08"},{"lineNumber":96,"author":{"gitId":"sindhurajain"},"content":"        return db;","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":98,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"sindhurajain":98}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.main;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":" * Represents the main class for the chat application.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"    private static final String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"     * Generates a response to user input.","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"    String getResponse(String input) {","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"        if (!isExit) {","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"            try {","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"                ui.repeat();","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"                Command c \u003d Parser.parse(input);","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"                return ui.getAnswer();","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"                return e.getMessage();","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"        } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"            return \"\";","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"     * Constructs a Duke object.","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"     * Initialises the storage, user interface and task list.","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"    Duke() {","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"sindhurajain"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"            tasks \u003d new TaskList(storage.loadList());","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"sindhurajain"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"sindhurajain"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"sindhurajain"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"sindhurajain":46,"-":2}},{"path":"src/main/java/duke/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.main;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"public class Launcher {","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"sindhurajain":12}},{"path":"src/main/java/duke/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.main;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"     * Starts the application by loading the main window.","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"     * @param stage Stage for the application.","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"            stage.show();","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"sindhurajain":36}},{"path":"src/main/java/duke/main/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.main;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"     * Displays a greeting message when the MainWindow is initialised.","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"    private void sayHi() {","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"        String greetingMessage \u003d \"Hello! I\u0027m myChats\\n\" + \"What can I do for you?\";","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(greetingMessage, dukeImage));","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"     * Initialises the MainWindow controller.","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"sindhurajain"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"sindhurajain"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"sindhurajain"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"sindhurajain"},"content":"        sayHi();","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"sindhurajain"},"content":"     * Sets the Duke object for the MainWindow controller.","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"sindhurajain"},"content":"     * @param d Duke object to be set.","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"sindhurajain"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"sindhurajain"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"sindhurajain"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"sindhurajain"},"content":"     * the reply and then appends them to the dialog container.","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"sindhurajain"},"content":"     * Clears the user input after processing.","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"sindhurajain"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"sindhurajain"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"sindhurajain"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"sindhurajain"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"sindhurajain"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"sindhurajain"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"sindhurajain"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"sindhurajain"},"content":"        );","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"sindhurajain"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"sindhurajain":74}},{"path":"src/main/java/duke/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.main;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"import duke.command.ToDoCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"import duke.command.UnMarkCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"import duke.command.OnCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":" * Parses user input and makes sense of user commands.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"public class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"     static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"        if (userInput.equals(\"bye\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"        } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"        } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"            int num \u003d parseTaskNumber(userInput, \"mark\");","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"            return new MarkCommand(num);","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"        } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"            int num \u003d parseTaskNumber(userInput, \"unmark\");","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"            return new UnMarkCommand(num);","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"        } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"            String todo \u003d userInput.replace(\"todo\", \"\").trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"            processEmptyDescription(todo, \"todo\");","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"            return new ToDoCommand(todo);","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"sindhurajain"},"content":"        } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"            String[] deadline \u003d parseDeadlineInput(userInput, \"deadline\");","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"sindhurajain"},"content":"            return new DeadlineCommand(deadline[0], deadline[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"sindhurajain"},"content":"        } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"sindhurajain"},"content":"            String[] event \u003d parseEventInput(userInput, \"event\");","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"sindhurajain"},"content":"            return new EventCommand(event[0], event[1], event[2]);","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"sindhurajain"},"content":"        } else if(userInput.startsWith(\"delete\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"sindhurajain"},"content":"            int num \u003d parseTaskNumber(userInput, \"delete\");","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"sindhurajain"},"content":"            return new DeleteCommand(num);","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"sindhurajain"},"content":"        } else if (userInput.startsWith(\"on\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"sindhurajain"},"content":"            String dateInput \u003d userInput.replace(\"on\", \"\").trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"sindhurajain"},"content":"            processEmptyDescription(dateInput, \"on\");","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"sindhurajain"},"content":"            LocalDate targetDate \u003d parseOnDateTime(dateInput);","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"sindhurajain"},"content":"            return new OnCommand(targetDate);","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"sindhurajain"},"content":"        } else if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"sindhurajain"},"content":"            String findWord \u003d userInput.replace(\"find\", \"\").trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"sindhurajain"},"content":"            processEmptyDescription(findWord, \"find\");","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"sindhurajain"},"content":"            return new FindCommand(findWord);","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"sindhurajain"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"sindhurajain"},"content":"            throw new DukeException(\"Error! I don\u0027t know what that means. Types of tasks are limited to ToDos, Deadlines and Events.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"sindhurajain"},"content":"     * Extracts the task number from the user input, which is a command, and validates it.","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"sindhurajain"},"content":"     * @param input User input, which is a command containing the task number.","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"sindhurajain"},"content":"     * @param command Type of task.","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"sindhurajain"},"content":"     * @return Parsed and validated one-indexed task number.","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"sindhurajain"},"content":"     * @throws DukeException If the task number is empty or invalid.","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"sindhurajain"},"content":"    private static int parseTaskNumber(String input, String command) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"sindhurajain"},"content":"        String taskNumString \u003d input.replace(command, \"\").trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"sindhurajain"},"content":"        if (taskNumString.isEmpty() || !taskNumString.matches(\"\\\\d+\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"sindhurajain"},"content":"            throw new DukeException(\"Error! Please provide a valid task number after \u0027\" + command + \"\u0027.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"sindhurajain"},"content":"        int taskNumber \u003d Integer.parseInt(taskNumString);","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"sindhurajain"},"content":"        return taskNumber;","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"sindhurajain"},"content":"     * Processes and validates that the description is not empty.","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"sindhurajain"},"content":"     * @param description Description to be checked.","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"sindhurajain"},"content":"     * @param task Type of task.","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"sindhurajain"},"content":"     * @throws DukeException If the description is empty.","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"sindhurajain"},"content":"    private static void processEmptyDescription(String description, String task) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"sindhurajain"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"sindhurajain"},"content":"            throw new DukeException(\"Error! The description of a \" + task + \" cannot be empty.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":91,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":92,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":93,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"sindhurajain"},"content":"    private static LocalDate parseOnDateTime(String dateInput) throws DukeException {","lastModifiedDate":"2024-02-09"},{"lineNumber":95,"author":{"gitId":"sindhurajain"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":96,"author":{"gitId":"sindhurajain"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-02-09"},{"lineNumber":97,"author":{"gitId":"sindhurajain"},"content":"            return LocalDate.parse(dateInput, formatter);","lastModifiedDate":"2024-02-09"},{"lineNumber":98,"author":{"gitId":"sindhurajain"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"sindhurajain"},"content":"            throw new DukeException(\"Error! Please provide a valid date format (MMM dd yyyy).\");","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"sindhurajain"},"content":"     * Parses a string input of format \"yyyy-MM-dd HHmm\" into a LocalDateTime object.","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"sindhurajain"},"content":"     * @param input String input representing a date and time in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"sindhurajain"},"content":"     * @return LocalDateTime object parsed from the input.","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"sindhurajain"},"content":"     * @throws DukeException If the input date and time is not in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"sindhurajain"},"content":"    private static LocalDateTime parseDateTimeInput(String input) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"sindhurajain"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"sindhurajain"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"sindhurajain"},"content":"            return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"sindhurajain"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"sindhurajain"},"content":"            throw new DukeException(\"Error! Please provide a valid date and time format (yyyy-MM-dd HHmm).\");","lastModifiedDate":"2024-02-09"},{"lineNumber":116,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"sindhurajain"},"content":"     * Parses and validates the user input for deadline tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"sindhurajain"},"content":"     * @param input User input containing the description and deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"sindhurajain"},"content":"     * @param command Type of task.","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"sindhurajain"},"content":"     * @return Array containing the parsed description and deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"sindhurajain"},"content":"     * @throws DukeException If the input is invalid or has wrong formatting.","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"sindhurajain"},"content":"    private static String[] parseDeadlineInput(String input, String command) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"sindhurajain"},"content":"        String[] deadlineInput \u003d input.replace(command, \"\").trim().split(\" /by \");","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"sindhurajain"},"content":"        if (deadlineInput.length !\u003d 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"sindhurajain"},"content":"            throw new DukeException(\"Error! Please provide a valid description and deadline after \u0027\" + command + \"\u0027.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":132,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"sindhurajain"},"content":"        String description \u003d deadlineInput[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"sindhurajain"},"content":"        LocalDateTime by \u003d parseDateTimeInput(deadlineInput[1].trim());","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"sindhurajain"},"content":"        processEmptyDescription(description, \"deadline\");","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"sindhurajain"},"content":"        return new String[]{description, by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))};","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"sindhurajain"},"content":"     * Parses and validates the user input for event tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"sindhurajain"},"content":"     * @param input User input for event tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"sindhurajain"},"content":"     * @param command Type of task.","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"sindhurajain"},"content":"     * @return Array containing the parsed description, start time, and end time of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"sindhurajain"},"content":"     * @throws DukeException If the input is invalid or has wrong formatting.","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"sindhurajain"},"content":"    private static String[] parseEventInput(String input, String command) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"sindhurajain"},"content":"        String[] eventInput \u003d input.replace(command, \"\").trim().split(\" /from \");","lastModifiedDate":"2024-02-01"},{"lineNumber":152,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"sindhurajain"},"content":"        if (eventInput.length !\u003d 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"sindhurajain"},"content":"            throw new DukeException(\"Error! Please provide a valid description, start time, and end time after \u0027\" + command + \"\u0027.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":155,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":157,"author":{"gitId":"sindhurajain"},"content":"        String description \u003d eventInput[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":158,"author":{"gitId":"sindhurajain"},"content":"        String[] timeInput \u003d eventInput[1].split(\" /to \");","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":160,"author":{"gitId":"sindhurajain"},"content":"        if (timeInput.length !\u003d 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":161,"author":{"gitId":"sindhurajain"},"content":"            throw new DukeException(\"Error! Please provide a valid start time and end time after \u0027/from\u0027 and \u0027/to\u0027.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":162,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":163,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":164,"author":{"gitId":"sindhurajain"},"content":"        LocalDateTime startTime \u003d parseDateTimeInput(timeInput[0].trim());","lastModifiedDate":"2024-02-01"},{"lineNumber":165,"author":{"gitId":"sindhurajain"},"content":"        LocalDateTime endTime \u003d parseDateTimeInput(timeInput[1].trim());","lastModifiedDate":"2024-02-01"},{"lineNumber":166,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":167,"author":{"gitId":"sindhurajain"},"content":"        processEmptyDescription(description, \"event\");","lastModifiedDate":"2024-02-01"},{"lineNumber":168,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":169,"author":{"gitId":"sindhurajain"},"content":"        return new String[]{description, startTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")), endTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))};","lastModifiedDate":"2024-02-01"},{"lineNumber":170,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":171,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"sindhurajain":171}},{"path":"src/main/java/duke/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.main;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":" * Loads tasks from the file and saves tasks in the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"public class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"    private String filePath;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"     * Constructs a Storage instance with the given file path.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"     * @param filePath File path for storing and loading tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"    Storage(String filePath) {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"     * Loads the task list from the file given by the file path.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"     * @return ArrayList of Task objects loaded from the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"     * @throws DukeException If an error occurs during the loading","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"     * process or the file has an incorrect format.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"    ArrayList\u003cTask\u003e loadList() throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"sindhurajain"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"sindhurajain"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"sindhurajain"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"sindhurajain"},"content":"                return tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"sindhurajain"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"sindhurajain"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"sindhurajain"},"content":"            String input;","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"sindhurajain"},"content":"            while ((input \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"sindhurajain"},"content":"                String[] splitInput \u003d input.split(\" \\\\| \");","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"sindhurajain"},"content":"                Task task;","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"sindhurajain"},"content":"                if (splitInput[0].equals(\"T\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"sindhurajain"},"content":"                    task \u003d new Todo(splitInput[2]);","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"sindhurajain"},"content":"                } else if (splitInput[0].equals(\"D\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"sindhurajain"},"content":"                    task \u003d new Deadline(splitInput[2], splitInput[3]);","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"sindhurajain"},"content":"                } else if (splitInput[0].equals(\"E\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"sindhurajain"},"content":"                    task \u003d new Event(splitInput[2], splitInput[3], splitInput[4]);","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"sindhurajain"},"content":"                } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"sindhurajain"},"content":"                    throw new DukeException(\"Error! Incorrect duke.txt format: unexpected task type.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"sindhurajain"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"sindhurajain"},"content":"                if (Integer.parseInt(splitInput[1]) \u003d\u003d 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"sindhurajain"},"content":"                    task.markAsDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"sindhurajain"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"sindhurajain"},"content":"                tasks.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"sindhurajain"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"sindhurajain"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"sindhurajain"},"content":"            throw new DukeException(\"Error! An IOException occurred.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"sindhurajain"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"sindhurajain"},"content":"            throw new DukeException(\"Error! Incorrect duke.txt format: unexpected value. Value should be 1 for done or 0 for not done.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"sindhurajain"},"content":"        return tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"sindhurajain"},"content":"    ","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"sindhurajain"},"content":"     * Saves the given list of tasks to the file in the given filePath.","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"sindhurajain"},"content":"     * @param list ArrayList of Task objects to be saved.","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"sindhurajain"},"content":"     * @throws DukeException If an IOException occurs.","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"sindhurajain"},"content":"    public void saveList(ArrayList\u003cTask\u003e list) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"sindhurajain"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"sindhurajain"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"sindhurajain"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"sindhurajain"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(file));","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"sindhurajain"},"content":"            for (Task l : list) {","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"sindhurajain"},"content":"                bw.append(l.toFileString()).append(\"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"sindhurajain"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"sindhurajain"},"content":"            bw.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"sindhurajain"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"sindhurajain"},"content":"            throw new DukeException(\"An IOException occurred.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":91,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"sindhurajain":93}},{"path":"src/main/java/duke/main/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.main;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"public class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"     * Constructs a TaskList with the given ArrayList of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"     * @param tasks ArrayList of tasks to create the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"        return tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"    public Task get(int zeroItem) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"        return tasks.get(zeroItem);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"sindhurajain"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"sindhurajain"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"sindhurajain"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"sindhurajain"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"sindhurajain"},"content":"     * Marks a task as done based on the given zero-indexed task number.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"sindhurajain"},"content":"     * @param num The zero-indexed task index to mark as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"sindhurajain"},"content":"    public void markAsDone(int num) {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"sindhurajain"},"content":"        tasks.get(num).markAsDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"sindhurajain"},"content":"     * Marks a task as not done based on the given zero-indexed task number.","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"sindhurajain"},"content":"     * @param num The zero-indexed task index to mark as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"sindhurajain"},"content":"     public void unMarkAsDone(int num) {","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"sindhurajain"},"content":"        tasks.get(num).unMarkAsDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"sindhurajain"},"content":"     * Deletes a task from the TaskList based on the given zero-indexed task number.","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"sindhurajain"},"content":"     * @param item The zero-indexed task number to be deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"sindhurajain"},"content":"     * @throws DukeException If asked to delete a task with one-indexed task number","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"sindhurajain"},"content":"     * of 0 or if one-indexed task number is greater than the size of the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"sindhurajain"},"content":"     public void deleteTask(int item) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"sindhurajain"},"content":"        if (item \u003e\u003d 0 \u0026\u0026 item \u003c tasks.size() \u0026\u0026 tasks.get(item) !\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"sindhurajain"},"content":"            tasks.remove(item);","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"sindhurajain"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"sindhurajain"},"content":"            int oneItem \u003d item + 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"sindhurajain"},"content":"            throw new DukeException(\"Error! Task number \u0027\" + oneItem + \"\u0027 does not exist.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"sindhurajain":84}},{"path":"src/main/java/duke/main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.main;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":" * Handles user interactions.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"public class Ui {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"    private StringBuilder answer;","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"     * Constructs a Ui instance.","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"     * Initialises the answer StringBuilder used for displaying messages to the user.","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"    public Ui() {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"        answer \u003d new StringBuilder();","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"     * Clears the content stored in the answer StringBuilder.","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"     * Resets the answer StringBuilder to an empty state.","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"    void repeat() {","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"        answer.setLength(0);","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"     * Retrieves content stored in the answer StringBuilder.","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"     * @return Content of the answer StringBuilder as a string.","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"    String getAnswer() {","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"        return answer.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"sindhurajain"},"content":"     * Displays an exit message.","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"sindhurajain"},"content":"    public void sayBye() {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"sindhurajain"},"content":"        answer.append(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"sindhurajain"},"content":"     * Displays the current list of items with their respective indexes,","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"sindhurajain"},"content":"     * skipping null or uninitialised elements in the list.","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"sindhurajain"},"content":"     * @param tasks ArrayList of tasks to be displayed.","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"sindhurajain"},"content":"    public void displayList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"sindhurajain"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"sindhurajain"},"content":"            if (tasks.get(i) !\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"sindhurajain"},"content":"                String task \u003d String.format(\"%d. %s\\n\", i + 1, tasks.get(i));","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"sindhurajain"},"content":"                answer.append(task);","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"sindhurajain"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"sindhurajain"},"content":"     * Prints out the response, specific to the type of task,","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"sindhurajain"},"content":"     * after adding the task to the list","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"sindhurajain"},"content":"     * @param task  Task that is added to the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"sindhurajain"},"content":"     * @param tasks TaskList containing the list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"sindhurajain"},"content":"    public void taskResponse(Task task, TaskList tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"sindhurajain"},"content":"         int numTasks \u003d tasks.getSize();","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"sindhurajain"},"content":"         answer.append(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"sindhurajain"},"content":"         answer.append(\"\\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"sindhurajain"},"content":"         answer.append(task);","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"sindhurajain"},"content":"         answer.append(\"\\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"sindhurajain"},"content":"         if (numTasks \u003d\u003d 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"sindhurajain"},"content":"             answer.append(\"Now you have \" + numTasks + \" task in the list.\");","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"sindhurajain"},"content":"         }","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"sindhurajain"},"content":"         if (numTasks !\u003d 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"sindhurajain"},"content":"             answer.append(\"Now you have \" + numTasks + \" tasks in the list.\");","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"sindhurajain"},"content":"         }","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"sindhurajain"},"content":"     * Displays the response message after deleting a task if the deletion is successful.","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"sindhurajain"},"content":"     * @param task Task that has been deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"sindhurajain"},"content":"     * @param tasks TaskList containing the list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"sindhurajain"},"content":"    public void deleteResponse(Task task, TaskList tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"sindhurajain"},"content":"        int numTasks \u003d tasks.getSize();","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"sindhurajain"},"content":"        answer.append(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-08"},{"lineNumber":95,"author":{"gitId":"sindhurajain"},"content":"        answer.append(\"\\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":96,"author":{"gitId":"sindhurajain"},"content":"        answer.append(task);","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"sindhurajain"},"content":"        answer.append(\"\\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":98,"author":{"gitId":"sindhurajain"},"content":"        if (numTasks \u003d\u003d 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"sindhurajain"},"content":"            answer.append(\"Now you have \" + numTasks + \" task in the list.\");","lastModifiedDate":"2024-02-08"},{"lineNumber":100,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"sindhurajain"},"content":"        if (numTasks !\u003d 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"sindhurajain"},"content":"            answer.append(\"Now you have \" + numTasks + \" tasks in the list.\");","lastModifiedDate":"2024-02-08"},{"lineNumber":103,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"sindhurajain"},"content":"     * Displays tasks that occur on the given target date.","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"sindhurajain"},"content":"     * @param targetDate Target date to display tasks for.","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"sindhurajain"},"content":"     * @param tasks ArrayList of tasks to search for tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"sindhurajain"},"content":"     * that occur on the given target date.","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"sindhurajain"},"content":"    public void displayTasksOn(LocalDate targetDate, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"sindhurajain"},"content":"        answer.append(\"Tasks on \" + targetDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \":\");","lastModifiedDate":"2024-02-09"},{"lineNumber":115,"author":{"gitId":"sindhurajain"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"sindhurajain"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"sindhurajain"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"sindhurajain"},"content":"                if (deadline.getBy().toLocalDate().equals(targetDate)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"sindhurajain"},"content":"                    answer.append(\"\\n\" + deadline);","lastModifiedDate":"2024-02-08"},{"lineNumber":120,"author":{"gitId":"sindhurajain"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"sindhurajain"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"sindhurajain"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"sindhurajain"},"content":"                if (event.getStartTime().toLocalDate().equals(targetDate)","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"sindhurajain"},"content":"                        || event.getEndTime().toLocalDate().equals(targetDate)","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"sindhurajain"},"content":"                        || (targetDate.isAfter(event.getStartTime().toLocalDate())","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"sindhurajain"},"content":"                        \u0026\u0026 targetDate.isBefore(event.getEndTime().toLocalDate()))) {","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"sindhurajain"},"content":"                    answer.append(\"\\n\" + event);","lastModifiedDate":"2024-02-08"},{"lineNumber":128,"author":{"gitId":"sindhurajain"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"sindhurajain"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"sindhurajain"},"content":"     * Finds tasks containing a given word and displays the matching tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"sindhurajain"},"content":"     * @param findWord Word to search for in task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"sindhurajain"},"content":"     * @param tasks ArrayList of tasks to search within.","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"sindhurajain"},"content":"    public void findTasks(String findWord, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"sindhurajain"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"sindhurajain"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"sindhurajain"},"content":"            if (task.getDescription().contains(findWord)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"sindhurajain"},"content":"                foundTasks.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"sindhurajain"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"sindhurajain"},"content":"        answer.append(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-09"},{"lineNumber":147,"author":{"gitId":"sindhurajain"},"content":"        for (int i \u003d 0; i \u003c foundTasks.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"sindhurajain"},"content":"            if (foundTasks.get(i) !\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"sindhurajain"},"content":"                String foundTask \u003d String.format(\"%d. %s\\n\", i + 1, foundTasks.get(i));","lastModifiedDate":"2024-02-08"},{"lineNumber":150,"author":{"gitId":"sindhurajain"},"content":"                answer.append(foundTask);","lastModifiedDate":"2024-02-08"},{"lineNumber":151,"author":{"gitId":"sindhurajain"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":153,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":154,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":155,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":156,"author":{"gitId":"sindhurajain"},"content":"     * Appends the given message to the answer StringBuilder.","lastModifiedDate":"2024-02-08"},{"lineNumber":157,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":158,"author":{"gitId":"sindhurajain"},"content":"     * @param message Message to be appended to the screen.","lastModifiedDate":"2024-02-08"},{"lineNumber":159,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":160,"author":{"gitId":"sindhurajain"},"content":"    public void printToScreen(String message) {","lastModifiedDate":"2024-02-08"},{"lineNumber":161,"author":{"gitId":"sindhurajain"},"content":"        answer.append(message);","lastModifiedDate":"2024-02-08"},{"lineNumber":162,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":163,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"sindhurajain":163}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"     * Constructs a Deadline object with the given description and deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"     * @param by Deadline of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"        this.by \u003d parseDateTime(by);","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"     * Parses the date and time from the given string that is of \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"     * @param dateTimeString The string representation of the date and time in","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"     * \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"     * @return The parsed LocalDateTime object.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"    private LocalDateTime parseDateTime(String dateTimeString) {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"        return LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"        return by;","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"sindhurajain"},"content":"     * Returns a formatted string representation of the deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"sindhurajain"},"content":"     * @return Formatted string representation of the deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"sindhurajain"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"sindhurajain"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"sindhurajain"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"sindhurajain"},"content":"     * Converts the task into a string format suitable for writing to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"sindhurajain"},"content":"     * @return Formatted string for writing to a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"sindhurajain"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"sindhurajain"},"content":"        return String.format(\"D | %d | %s | %s\", isDone ? 1 : 0, description,","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"sindhurajain"},"content":"                by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"sindhurajain":61}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":" * Represents a task that occurs within a specified date and time range.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"     * Constructs an Event object with the given description, start time, and end time.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"     * @param startTime Start time of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"     * @param endTime End time of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"        this.startTime \u003d parseDateTime(startTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"        this.endTime \u003d parseDateTime(endTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"        return startTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"        return endTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"     * Parses the date and time from the given date and time string of format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"     * @param dateTimeString String representation of date and time in format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"     * @return Parsed LocalDateTime object.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"    private LocalDateTime parseDateTime(String dateTimeString) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"sindhurajain"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"        return LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"sindhurajain"},"content":"     * Returns a formatted string representation of the event task\".","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"sindhurajain"},"content":"     * @return Formatted string representation of the event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"sindhurajain"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"sindhurajain"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"sindhurajain"},"content":"                super.toString(),","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"sindhurajain"},"content":"                startTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")),","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"sindhurajain"},"content":"                endTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")));","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"sindhurajain"},"content":"     * Converts the event task into a string format suitable for writing to a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"sindhurajain"},"content":"     * @return Formatted string for writing to a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"sindhurajain"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"sindhurajain"},"content":"        return String.format(\"E | %d | %s | %s | %s\",","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"sindhurajain"},"content":"                isDone ? 1 : 0,","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"sindhurajain"},"content":"                description,","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"sindhurajain"},"content":"                startTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")),","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"sindhurajain"},"content":"                endTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")));","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"sindhurajain":70}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":" * Represents a task with a description and completion status.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"    protected String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"     * Constructor for a Task object with the given description and default completion status to be not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"        return this.description;","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"     * Gets the status icon representing whether or not the task has been completed.","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"     * @return The status icon (\"X\" if done, \" \" if not done).","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"     * Marks the task as done by setting the completion status to true.","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"     * Marks the task as not done by setting the completion status to false.","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"sindhurajain"},"content":"    public void unMarkAsDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"sindhurajain"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"sindhurajain"},"content":"     * Returns a string representation of the task in the format \"[status icon] description\".","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"sindhurajain"},"content":"     * @return String representation of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"sindhurajain"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"sindhurajain"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"sindhurajain"},"content":"     * Converts the task into a string format suitable for writing to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"sindhurajain"},"content":"     * @return Formatted string for writing to a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"sindhurajain"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"sindhurajain"},"content":"        return String.format(\"duke.task.Task | %d | %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"sindhurajain":66}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":" * Represents a task with a description and without a date or time attached to it.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"     * Constructs a to-do instance with the given description.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"     * @param description Description of the to-do task.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"     * Converts the task into a string format suitable for writing to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"     * @return Formatted string for writing to a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"        return String.format(\"T | %d | %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"     * Returns a formatted string representation of the to-do task.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"     * @return Formatted string representation of the to-do task.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"sindhurajain":36}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"dialog-box\"\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"        \u003cStackPane styleClass\u003d\"dialog-text-pane\"\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"                \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"            \u003c/children\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"60.0\" fitWidth\u003d\"60.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"            \u003cclip\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"                \u003cCircle radius\u003d\"30.0\" centerX\u003d\"30.0\" centerY\u003d\"30.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"            \u003c/clip\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"                \u003cInsets top\u003d\"10.0\" right\u003d\"10.0\" bottom\u003d\"10.0\" left\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"sindhurajain":29}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.main.MainWindow\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"sindhurajain":19}},{"path":"src/test/java/duke/main/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.main;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"import duke.command.OnCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"import duke.command.ToDoCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"import duke.command.UnMarkCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"    void parserTest() throws DukeException  {","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"        assertTrue(Parser.parse(\"deadline return book /by 2019-10-15 1800\") instanceof DeadlineCommand, \"deadline parser passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"        assertTrue(Parser.parse(\"delete 50\") instanceof DeleteCommand, \"delete parser passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"        assertTrue(Parser.parse(\"event write essay /from 2019-10-15 1800 /to 2019-10-17 2000\") instanceof EventCommand, \"event parser passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"        assertTrue(Parser.parse(\"bye\") instanceof ExitCommand, \"exit parser passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"        assertTrue(Parser.parse(\"list\") instanceof ListCommand, \"list parser passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"        assertTrue(Parser.parse(\"mark 1\") instanceof MarkCommand, \"mark parser passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"        assertTrue(Parser.parse(\"on Oct 15 2019\") instanceof OnCommand, \"on parser passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"        assertTrue(Parser.parse(\"on Oct 17 2019\") instanceof OnCommand, \"on parser passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"        assertTrue(Parser.parse(\"todo go to school\") instanceof ToDoCommand, \"todo parser passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"        assertTrue(Parser.parse(\"unmark 20\") instanceof UnMarkCommand, \"unmark parser passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"sindhurajain":32}},{"path":"src/test/java/duke/main/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.main;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"    //test add, getSize, get, deleteTask","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"    void add() {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"        TaskList list \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(0, list.getSize(), \"getSize() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"        Todo firstTask \u003d new Todo(\"go to school\");","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"        list.add(firstTask);","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(1, list.getSize(), \"add() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(firstTask, list.get(0), \"add() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"        Todo secondTask \u003d new Todo(\"go home\");","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"        list.add(secondTask);","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(2, list.getSize(), \"add() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(secondTask, list.get(1), \"add() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"    void getSize() {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"        TaskList list \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(0, list.getSize(), \"getSize() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"        list.add(new Todo(\"go to school\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(1, list.getSize(), \"getSize() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"        list.add(new Todo(\"go home\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(2, list.getSize(), \"getSize() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"    void get() {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"        TaskList list \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"sindhurajain"},"content":"        Todo firstTask \u003d new Todo(\"go to school\");","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"        list.add(firstTask);","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(firstTask, list.get(0), \"get() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"sindhurajain"},"content":"        Todo secondTask \u003d new Todo(\"go home\");","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"sindhurajain"},"content":"        list.add(secondTask);","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(secondTask, list.get(1), \"get() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"sindhurajain"},"content":"        Todo thirdTask \u003d new Todo(\"eat dinner\");","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"sindhurajain"},"content":"        list.add(thirdTask);","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(thirdTask, list.get(2), \"get() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"sindhurajain"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"sindhurajain"},"content":"    void delete() throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"sindhurajain"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"sindhurajain"},"content":"        TaskList list \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(0, list.getSize(), \"getSize() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"sindhurajain"},"content":"        Todo firstTask \u003d new Todo(\"go to school\");","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"sindhurajain"},"content":"        list.add(firstTask);","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(1, list.getSize(), \"add() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"sindhurajain"},"content":"        list.deleteTask(0);","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(0, list.getSize(), \"deleteTask() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"sindhurajain"},"content":"        Todo secondTask \u003d new Todo(\"go home\");","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"sindhurajain"},"content":"        list.add(secondTask);","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"sindhurajain"},"content":"        Todo thirdTask \u003d new Todo(\"eat dinner\");","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"sindhurajain"},"content":"        list.add(thirdTask);","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(2, list.getSize(), \"add() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"sindhurajain"},"content":"        list.deleteTask(0);","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(1, list.getSize(), \"deleteTask() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"sindhurajain"},"content":"        list.deleteTask(0);","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(0, list.getSize(), \"deleteTask() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"sindhurajain":72}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"    void deadlineTest() {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"        Deadline output \u003d new Deadline(\"reach home\", \"2023-10-09 2200\");","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(\"[D][ ] reach home (by: Oct 09 2023 22:00)\", output.toString(), \"toString() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(\"D | 0 | reach home | 2023-10-09 2200\", output.toFileString(), \"toFileString() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"        output.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(\"[D][X] reach home (by: Oct 09 2023 22:00)\", output.toString(), \"markAsDone() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(\"D | 1 | reach home | 2023-10-09 2200\", output.toFileString(), \"markAsDone() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"        output.unMarkAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(\"[D][ ] reach home (by: Oct 09 2023 22:00)\", output.toString(), \"unMarkAsDone() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(\"D | 0 | reach home | 2023-10-09 2200\", output.toFileString(), \"unMarkAsDone() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"sindhurajain":18}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"public class EventTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"    void eventTest() {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"        Event output \u003d new Event(\"go to the library\", \"2019-10-15 1800\", \"2019-10-17 2000\");","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(\"[E][ ] go to the library (from: Oct 15 2019 18:00 to: Oct 17 2019 20:00)\", output.toString(), \"toString() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(\"E | 0 | go to the library | 2019-10-15 1800 | 2019-10-17 2000\", output.toFileString(), \"toFileString() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"        output.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(\"[E][X] go to the library (from: Oct 15 2019 18:00 to: Oct 17 2019 20:00)\", output.toString(), \"markAsDone() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(\"E | 1 | go to the library | 2019-10-15 1800 | 2019-10-17 2000\", output.toFileString(), \"markAsDone() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"        output.unMarkAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(\"[E][ ] go to the library (from: Oct 15 2019 18:00 to: Oct 17 2019 20:00)\", output.toString(), \"unMarkAsDone() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(\"E | 0 | go to the library | 2019-10-15 1800 | 2019-10-17 2000\", output.toFileString(), \"unMarkAsDone() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"sindhurajain":18}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"    void todoTest() {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"        Todo output \u003d new Todo(\"study\");","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(\"[T][ ] study\", output.toString(), \"toString() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(\"T | 0 | study\", output.toFileString(), \"toFileString() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"        output.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(\"[T][X] study\", output.toString(), \"markAsDone() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(\"T | 1 | study\", output.toFileString(), \"markAsDone() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"        output.unMarkAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(\"[T][ ] study\", output.toString(), \"unMarkAsDone() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(\"T | 0 | study\", output.toFileString(), \"unMarkAsDone() passed\");","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"sindhurajain":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"todo read book","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"todo join sports club","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"mark 4","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"todo borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"sindhurajain":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"java -classpath ..\\bin duke.main.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sindhurajain":1,"-":20}}]
