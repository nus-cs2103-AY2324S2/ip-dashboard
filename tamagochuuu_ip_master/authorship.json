[{"path":"list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"[D][ ] fbffhiuy (by Dec 12 1212)","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"tamagochuuu":1}},{"path":"src/main/java/AlreadyDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":" * Contains information on the AlreadyDoneException class.","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":" * @author Tee Chu Jie","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"tamagochuuu"},"content":"public class AlreadyDoneException extends DukeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"tamagochuuu"},"content":"     * The constructor for an AlreadyDoneException object.","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"tamagochuuu"},"content":"     * @param message Handled by the super constructor.","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"tamagochuuu"},"content":"    public AlreadyDoneException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"tamagochuuu"},"content":"            super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"tamagochuuu"},"content":"     * Checks if the task was done. If task was done, throws exception.","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"tamagochuuu"},"content":"     * @param task the task to be checked","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"tamagochuuu"},"content":"     * @throws AlreadyDoneException the exception that will be thrown if task was already done.","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"tamagochuuu"},"content":"    public static void validate(Task task) throws AlreadyDoneException {","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"tamagochuuu"},"content":"        if (task.isDone) {","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"tamagochuuu"},"content":"            throw new AlreadyDoneException(\"Task Already Marked As Done\");","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"tamagochuuu"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"tamagochuuu":28}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"import java.sql.ClientInfoStatus;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"tamagochuuu"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"tamagochuuu"},"content":" * Contains information for the creation of Deadline objects.","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"tamagochuuu"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"tamagochuuu"},"content":" * @author Tee Chu Jie","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"tamagochuuu"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"tamagochuuu"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"tamagochuuu"},"content":"     * The deadline of the Deadline object to be created.","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"tamagochuuu"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"tamagochuuu"},"content":"     * The constructor for a Deadline object.","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"tamagochuuu"},"content":"     * @param description The description of the Deadline object to be created.","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"tamagochuuu"},"content":"     *                    Handled by the super constructor in the Task class.","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"tamagochuuu"},"content":"     * @param by The deadline of the Deadline object.","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"tamagochuuu"},"content":"//    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"tamagochuuu"},"content":"//        super(description);","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"tamagochuuu"},"content":"//        this.by \u003d by;","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"tamagochuuu"},"content":"//    }","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"tamagochuuu"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"tamagochuuu"},"content":"        super(description);","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"tamagochuuu"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"tamagochuuu"},"content":"            this.by \u003d LocalDate.parse(by, DateTimeFormatter.ofPattern(\"d/MM/yyyy\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"tamagochuuu"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(ex);","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"tamagochuuu"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"tamagochuuu"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"tamagochuuu"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"tamagochuuu"},"content":"     * Converts the Deadline object into a human-readable String to be displayed to the user.","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"tamagochuuu"},"content":"     * @return String object that represents the Deadline object.","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"tamagochuuu"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"tamagochuuu"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"tamagochuuu"},"content":"        return \"[D]\" + super.toString() + \" (by \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"tamagochuuu"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"tamagochuuu":52}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"tamagochuuu"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"tamagochuuu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"tamagochuuu"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"tamagochuuu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"tamagochuuu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"tamagochuuu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"tamagochuuu"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"tamagochuuu"},"content":"import java.util.List;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"tamagochuuu"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"tamagochuuu"},"content":" * The main class of Mitsuki the Chat bot.","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"tamagochuuu"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"tamagochuuu"},"content":" * @author Tee Chu jie","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"tamagochuuu"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"tamagochuuu"},"content":"     * A list of commands that can be given to Mitsuki.","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"tamagochuuu"},"content":"     static ArrayList\u003cString\u003e commands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"tamagochuuu"},"content":"     * Initiating the scanner for user input.","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"tamagochuuu"},"content":"    static Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"tamagochuuu"},"content":"     * Initiating the user\u0027s todo list.","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"tamagochuuu"},"content":"    static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"tamagochuuu"},"content":"        // Greeting the user.","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"Hello! My name is Mitsuki, nice to meet you!\\n\"","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"tamagochuuu"},"content":"                + \"What can I do for you today?\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"tamagochuuu"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"tamagochuuu"},"content":"            list \u003d get(\"list.txt\");","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(\"I have loaded your previously saved list for you. :)\");","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"tamagochuuu"},"content":"        } catch(FileNotFoundException ex) {","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(\"No saved list found. A new list will be used!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"tamagochuuu"},"content":"            File saveFile \u003d new File(\"list.txt\");","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"tamagochuuu"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"tamagochuuu"},"content":"                saveFile.createNewFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"tamagochuuu"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"tamagochuuu"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"tamagochuuu"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"tamagochuuu"},"content":"        // Adding the commands to the list of commands Mitsuki can execute.","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"tamagochuuu"},"content":"        commands.add(\"help\");","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"tamagochuuu"},"content":"        commands.add(\"list\");","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"tamagochuuu"},"content":"        commands.add(\"todo\");","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"tamagochuuu"},"content":"        commands.add(\"deadline\");","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"tamagochuuu"},"content":"        commands.add(\"event\");","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"tamagochuuu"},"content":"        commands.add(\"mark\");","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"tamagochuuu"},"content":"        commands.add(\"unmark\");","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"tamagochuuu"},"content":"        commands.add(\"delete\");","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"tamagochuuu"},"content":"        commands.add(\"bye\");","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"tamagochuuu"},"content":"        // Initiating the \u0027command\u0027 variable.","lastModifiedDate":"2024-01-24"},{"lineNumber":68,"author":{"gitId":"tamagochuuu"},"content":"        String command \u003d \"nil\";","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"tamagochuuu"},"content":"        // The loop that takes in user input and determine what to do.","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"tamagochuuu"},"content":"        while (!command.equals(null)) {","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"tamagochuuu"},"content":"            // Taking in next user input.","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"tamagochuuu"},"content":"            command \u003d scan.next();","lastModifiedDate":"2024-01-23"},{"lineNumber":74,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"tamagochuuu"},"content":"            // Making sure user is giving a valid command.","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"tamagochuuu"},"content":"            try {","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"tamagochuuu"},"content":"                DukeException.validate(command);","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"tamagochuuu"},"content":"            } catch(DukeException ex) {","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"tamagochuuu"},"content":"                System.out.println(\"Sorry, I am unable to do that at the current moment.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"tamagochuuu"},"content":"                System.out.println(\"Please type \u0027help\u0027 for a list of commands you can give me! :)\");","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"tamagochuuu"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":82,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"tamagochuuu"},"content":"            // Calling the method based on what the user input is.","lastModifiedDate":"2024-01-24"},{"lineNumber":84,"author":{"gitId":"tamagochuuu"},"content":"            switch (command) {","lastModifiedDate":"2024-01-23"},{"lineNumber":85,"author":{"gitId":"tamagochuuu"},"content":"                case \"help\":","lastModifiedDate":"2024-01-24"},{"lineNumber":86,"author":{"gitId":"tamagochuuu"},"content":"                    help();","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"tamagochuuu"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":89,"author":{"gitId":"tamagochuuu"},"content":"                case \"deadline\":","lastModifiedDate":"2024-01-24"},{"lineNumber":90,"author":{"gitId":"tamagochuuu"},"content":"                    deadline();","lastModifiedDate":"2024-01-24"},{"lineNumber":91,"author":{"gitId":"tamagochuuu"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":93,"author":{"gitId":"tamagochuuu"},"content":"                case \"todo\":","lastModifiedDate":"2024-01-24"},{"lineNumber":94,"author":{"gitId":"tamagochuuu"},"content":"                    todo();","lastModifiedDate":"2024-01-24"},{"lineNumber":95,"author":{"gitId":"tamagochuuu"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":96,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":97,"author":{"gitId":"tamagochuuu"},"content":"                case \"event\":","lastModifiedDate":"2024-01-24"},{"lineNumber":98,"author":{"gitId":"tamagochuuu"},"content":"                    event();","lastModifiedDate":"2024-01-24"},{"lineNumber":99,"author":{"gitId":"tamagochuuu"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":100,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":101,"author":{"gitId":"tamagochuuu"},"content":"                case \"list\":","lastModifiedDate":"2024-01-24"},{"lineNumber":102,"author":{"gitId":"tamagochuuu"},"content":"                    list();","lastModifiedDate":"2024-01-24"},{"lineNumber":103,"author":{"gitId":"tamagochuuu"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":104,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":105,"author":{"gitId":"tamagochuuu"},"content":"                case \"mark\":","lastModifiedDate":"2024-01-24"},{"lineNumber":106,"author":{"gitId":"tamagochuuu"},"content":"                    mark();","lastModifiedDate":"2024-01-24"},{"lineNumber":107,"author":{"gitId":"tamagochuuu"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":108,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":109,"author":{"gitId":"tamagochuuu"},"content":"                case \"unmark\":","lastModifiedDate":"2024-01-24"},{"lineNumber":110,"author":{"gitId":"tamagochuuu"},"content":"                    unmark();","lastModifiedDate":"2024-01-24"},{"lineNumber":111,"author":{"gitId":"tamagochuuu"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":112,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":113,"author":{"gitId":"tamagochuuu"},"content":"                case \"delete\":","lastModifiedDate":"2024-01-24"},{"lineNumber":114,"author":{"gitId":"tamagochuuu"},"content":"                    delete();","lastModifiedDate":"2024-01-24"},{"lineNumber":115,"author":{"gitId":"tamagochuuu"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":116,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":117,"author":{"gitId":"tamagochuuu"},"content":"                case \"bye\":","lastModifiedDate":"2024-01-24"},{"lineNumber":118,"author":{"gitId":"tamagochuuu"},"content":"                    try {","lastModifiedDate":"2024-01-28"},{"lineNumber":119,"author":{"gitId":"tamagochuuu"},"content":"                        save(\"list.txt\");","lastModifiedDate":"2024-01-28"},{"lineNumber":120,"author":{"gitId":"tamagochuuu"},"content":"                    } catch(IOException ex) {","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"tamagochuuu"},"content":"                        System.out.println(\"Something went wrong: \" + ex.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"tamagochuuu"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"tamagochuuu"},"content":"                    bye();","lastModifiedDate":"2024-01-24"},{"lineNumber":124,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":125,"author":{"gitId":"tamagochuuu"},"content":"                default:","lastModifiedDate":"2024-01-24"},{"lineNumber":126,"author":{"gitId":"tamagochuuu"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":127,"author":{"gitId":"tamagochuuu"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":128,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":129,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":130,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":131,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":132,"author":{"gitId":"tamagochuuu"},"content":"     * Lists all the commands the user can give Mitsuki.","lastModifiedDate":"2024-01-24"},{"lineNumber":133,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":134,"author":{"gitId":"tamagochuuu"},"content":"    public static void help() {","lastModifiedDate":"2024-01-24"},{"lineNumber":135,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"Here is a list of commands you can give me:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":136,"author":{"gitId":"tamagochuuu"},"content":"        for (int i \u003d 0; i \u003c commands.size(); i++) {","lastModifiedDate":"2024-01-24"},{"lineNumber":137,"author":{"gitId":"tamagochuuu"},"content":"            int j \u003d i + 1;","lastModifiedDate":"2024-01-24"},{"lineNumber":138,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(j + \". \" + commands.get(i));","lastModifiedDate":"2024-01-24"},{"lineNumber":139,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":140,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":141,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":142,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":143,"author":{"gitId":"tamagochuuu"},"content":"     * Adds a deadline item to the user\u0027s list.","lastModifiedDate":"2024-01-24"},{"lineNumber":144,"author":{"gitId":"tamagochuuu"},"content":"     * Uses \u0027/\u0027 to separate the deadline from the task.","lastModifiedDate":"2024-01-24"},{"lineNumber":145,"author":{"gitId":"tamagochuuu"},"content":"     * E.g. \u0027deadline Return book /By Sunday 2pm\u0027 adds the task","lastModifiedDate":"2024-01-24"},{"lineNumber":146,"author":{"gitId":"tamagochuuu"},"content":"     *      [D][ ] Return book (By Sunday 2pm)","lastModifiedDate":"2024-01-24"},{"lineNumber":147,"author":{"gitId":"tamagochuuu"},"content":"     *      to the user\u0027s list","lastModifiedDate":"2024-01-24"},{"lineNumber":148,"author":{"gitId":"tamagochuuu"},"content":"     * Throws an exception if empty task description or no deadline is given.","lastModifiedDate":"2024-01-24"},{"lineNumber":149,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":150,"author":{"gitId":"tamagochuuu"},"content":"    public static void deadline() {","lastModifiedDate":"2024-01-24"},{"lineNumber":151,"author":{"gitId":"tamagochuuu"},"content":"        String fullString \u003d scan.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":152,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":153,"author":{"gitId":"tamagochuuu"},"content":"        int endOfDesc \u003d fullString.indexOf(\"/by\");","lastModifiedDate":"2024-02-19"},{"lineNumber":154,"author":{"gitId":"tamagochuuu"},"content":"        String description \u003d fullString.substring(1, endOfDesc - 1);","lastModifiedDate":"2024-02-19"},{"lineNumber":155,"author":{"gitId":"tamagochuuu"},"content":"        String deadline \u003d fullString.substring(endOfDesc + 4);","lastModifiedDate":"2024-02-19"},{"lineNumber":156,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":157,"author":{"gitId":"tamagochuuu"},"content":"        String[] tokens \u003d {description, deadline};","lastModifiedDate":"2024-02-19"},{"lineNumber":158,"author":{"gitId":"tamagochuuu"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":159,"author":{"gitId":"tamagochuuu"},"content":"            EmptyTaskException.timedValidate(tokens);","lastModifiedDate":"2024-01-24"},{"lineNumber":160,"author":{"gitId":"tamagochuuu"},"content":"            MissingDeadlineException.validate(tokens);","lastModifiedDate":"2024-01-24"},{"lineNumber":161,"author":{"gitId":"tamagochuuu"},"content":"        } catch(EmptyTaskException ex) {","lastModifiedDate":"2024-01-24"},{"lineNumber":162,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(\"Please give a description for your deadline item. Try again!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":163,"author":{"gitId":"tamagochuuu"},"content":"            return;","lastModifiedDate":"2024-01-24"},{"lineNumber":164,"author":{"gitId":"tamagochuuu"},"content":"        } catch(MissingDeadlineException ex) {","lastModifiedDate":"2024-01-24"},{"lineNumber":165,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(\"Please give a deadline for your deadline item. Try again! XD\");","lastModifiedDate":"2024-01-24"},{"lineNumber":166,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(\"E.g. Type \u0027deadline return book /by 12/20/2024\u0027 to add the task \u0027return book\u0027 \" +","lastModifiedDate":"2024-02-19"},{"lineNumber":167,"author":{"gitId":"tamagochuuu"},"content":"                    \"\\nwith a deadline of \u002720 Dec 2024\u0027 to your list.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":168,"author":{"gitId":"tamagochuuu"},"content":"            return;","lastModifiedDate":"2024-01-24"},{"lineNumber":169,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":170,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":171,"author":{"gitId":"tamagochuuu"},"content":"        Task task \u003d new Deadline(description, deadline);","lastModifiedDate":"2024-02-19"},{"lineNumber":172,"author":{"gitId":"tamagochuuu"},"content":"        list.add(task);","lastModifiedDate":"2024-01-23"},{"lineNumber":173,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"OK, I have added the task \u0027\" + description + \"\u0027 to your list! :)\");","lastModifiedDate":"2024-02-19"},{"lineNumber":174,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"Now you have \" + list.size() + \" task(s) in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":175,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":176,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":177,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":178,"author":{"gitId":"tamagochuuu"},"content":"     * Adds a todo item to the user\u0027s list.","lastModifiedDate":"2024-01-24"},{"lineNumber":179,"author":{"gitId":"tamagochuuu"},"content":"     * E.g. \u0027todo Go running\u0027 adds the task","lastModifiedDate":"2024-01-24"},{"lineNumber":180,"author":{"gitId":"tamagochuuu"},"content":"     *      [T][ ] Go running","lastModifiedDate":"2024-01-24"},{"lineNumber":181,"author":{"gitId":"tamagochuuu"},"content":"     *      to the user\u0027s list.","lastModifiedDate":"2024-01-24"},{"lineNumber":182,"author":{"gitId":"tamagochuuu"},"content":"     * Throws an exception if empty task description is given.","lastModifiedDate":"2024-01-24"},{"lineNumber":183,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":184,"author":{"gitId":"tamagochuuu"},"content":"    public static void todo() {","lastModifiedDate":"2024-01-24"},{"lineNumber":185,"author":{"gitId":"tamagochuuu"},"content":"        String description1 \u003d scan.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":186,"author":{"gitId":"tamagochuuu"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":187,"author":{"gitId":"tamagochuuu"},"content":"            EmptyTaskException.validate(description1);","lastModifiedDate":"2024-01-24"},{"lineNumber":188,"author":{"gitId":"tamagochuuu"},"content":"        } catch(EmptyTaskException ex) {","lastModifiedDate":"2024-01-24"},{"lineNumber":189,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(\"Please give a description for your todo item. Try again!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":190,"author":{"gitId":"tamagochuuu"},"content":"            return;","lastModifiedDate":"2024-01-24"},{"lineNumber":191,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":192,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":193,"author":{"gitId":"tamagochuuu"},"content":"        String trimmed1 \u003d description1.trim();","lastModifiedDate":"2024-01-24"},{"lineNumber":194,"author":{"gitId":"tamagochuuu"},"content":"        Task task1 \u003d new Todo(trimmed1);","lastModifiedDate":"2024-01-24"},{"lineNumber":195,"author":{"gitId":"tamagochuuu"},"content":"        list.add(task1);","lastModifiedDate":"2024-01-24"},{"lineNumber":196,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"OK, I have added the task \u0027\" + trimmed1 + \"\u0027 to your list! :)\");","lastModifiedDate":"2024-01-24"},{"lineNumber":197,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"Now you have \" + list.size() + \" task(s) in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":198,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":199,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":200,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":201,"author":{"gitId":"tamagochuuu"},"content":"     * Adds an event item to the user\u0027s list.","lastModifiedDate":"2024-01-24"},{"lineNumber":202,"author":{"gitId":"tamagochuuu"},"content":"     * Uses \u0027/\u0027 to take in the timing of the event.","lastModifiedDate":"2024-01-24"},{"lineNumber":203,"author":{"gitId":"tamagochuuu"},"content":"     * E.g. \u0027event Party /From Friday 8pm /to 11pm\u0027 adds the task","lastModifiedDate":"2024-01-24"},{"lineNumber":204,"author":{"gitId":"tamagochuuu"},"content":"     *      [E][ ] Party (From Friday 8pm to 11pm)","lastModifiedDate":"2024-01-24"},{"lineNumber":205,"author":{"gitId":"tamagochuuu"},"content":"     *      to the user\u0027s list.","lastModifiedDate":"2024-01-24"},{"lineNumber":206,"author":{"gitId":"tamagochuuu"},"content":"     * Throws an exception if no task description, or no event start or end timing is given.","lastModifiedDate":"2024-01-24"},{"lineNumber":207,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":208,"author":{"gitId":"tamagochuuu"},"content":"    public static void event() {","lastModifiedDate":"2024-01-24"},{"lineNumber":209,"author":{"gitId":"tamagochuuu"},"content":"        String fullString1 \u003d scan.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":210,"author":{"gitId":"tamagochuuu"},"content":"        String[] tokens1 \u003d fullString1.split(\"/\");","lastModifiedDate":"2024-01-24"},{"lineNumber":211,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":212,"author":{"gitId":"tamagochuuu"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":213,"author":{"gitId":"tamagochuuu"},"content":"            EmptyTaskException.timedValidate(tokens1);","lastModifiedDate":"2024-01-24"},{"lineNumber":214,"author":{"gitId":"tamagochuuu"},"content":"            MissingEventTimingException.validate(tokens1);","lastModifiedDate":"2024-01-24"},{"lineNumber":215,"author":{"gitId":"tamagochuuu"},"content":"        } catch(EmptyTaskException ex) {","lastModifiedDate":"2024-01-24"},{"lineNumber":216,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(\"Please give a description for your event item. Try again!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":217,"author":{"gitId":"tamagochuuu"},"content":"            return;","lastModifiedDate":"2024-01-24"},{"lineNumber":218,"author":{"gitId":"tamagochuuu"},"content":"        } catch(MissingEventTimingException ex) {","lastModifiedDate":"2024-01-24"},{"lineNumber":219,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(\"Please give a time period for your event item. Try again! XD\");","lastModifiedDate":"2024-01-24"},{"lineNumber":220,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(\"E.g. Type \u0027event meeting /From Monday 10am /to 12pm\u0027 to add the task \u0027meeting\u0027 \\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":221,"author":{"gitId":"tamagochuuu"},"content":"                    \"with a time period \u0027From Monday 10am to 12pm\u0027 to your list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":222,"author":{"gitId":"tamagochuuu"},"content":"            return;","lastModifiedDate":"2024-01-24"},{"lineNumber":223,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":224,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":225,"author":{"gitId":"tamagochuuu"},"content":"        String description2 \u003d tokens1[0];","lastModifiedDate":"2024-01-24"},{"lineNumber":226,"author":{"gitId":"tamagochuuu"},"content":"        String trimmed2 \u003d description2.trim();","lastModifiedDate":"2024-01-24"},{"lineNumber":227,"author":{"gitId":"tamagochuuu"},"content":"        String from \u003d tokens1[1];","lastModifiedDate":"2024-01-24"},{"lineNumber":228,"author":{"gitId":"tamagochuuu"},"content":"        String to \u003d tokens1[2];","lastModifiedDate":"2024-01-24"},{"lineNumber":229,"author":{"gitId":"tamagochuuu"},"content":"        String toTrimmed \u003d to.trim();","lastModifiedDate":"2024-01-24"},{"lineNumber":230,"author":{"gitId":"tamagochuuu"},"content":"        Task task2 \u003d new Event(trimmed2, from, toTrimmed);","lastModifiedDate":"2024-01-24"},{"lineNumber":231,"author":{"gitId":"tamagochuuu"},"content":"        list.add(task2);","lastModifiedDate":"2024-01-24"},{"lineNumber":232,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"OK, I have added the task \u0027\" + trimmed2 + \"\u0027 to your list! :)\");","lastModifiedDate":"2024-01-24"},{"lineNumber":233,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"Now you have \" + list.size() + \" task(s) in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":234,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":235,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":236,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":237,"author":{"gitId":"tamagochuuu"},"content":"     * Displays the user\u0027s current todo list.","lastModifiedDate":"2024-01-24"},{"lineNumber":238,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":239,"author":{"gitId":"tamagochuuu"},"content":"    public static void list() {","lastModifiedDate":"2024-01-24"},{"lineNumber":240,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"Here are the items in your list:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":241,"author":{"gitId":"tamagochuuu"},"content":"        int i \u003d 0;","lastModifiedDate":"2024-01-23"},{"lineNumber":242,"author":{"gitId":"tamagochuuu"},"content":"        int j \u003d 1;","lastModifiedDate":"2024-01-23"},{"lineNumber":243,"author":{"gitId":"tamagochuuu"},"content":"        while (i \u003c list.size()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":244,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(j + \". \" + list.get(i).toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":245,"author":{"gitId":"tamagochuuu"},"content":"            i++;","lastModifiedDate":"2024-01-23"},{"lineNumber":246,"author":{"gitId":"tamagochuuu"},"content":"            j++;","lastModifiedDate":"2024-01-23"},{"lineNumber":247,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":248,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":249,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":250,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":251,"author":{"gitId":"tamagochuuu"},"content":"     * Marks an item on the user\u0027s todo list as done.","lastModifiedDate":"2024-01-24"},{"lineNumber":252,"author":{"gitId":"tamagochuuu"},"content":"     * E.g. \u0027mark 3\u0027 marks the 3rd item on the list as done.","lastModifiedDate":"2024-01-24"},{"lineNumber":253,"author":{"gitId":"tamagochuuu"},"content":"     * Informs user that the task is marked as done, and also displays the task.","lastModifiedDate":"2024-01-24"},{"lineNumber":254,"author":{"gitId":"tamagochuuu"},"content":"     * If task was already marked as done, exception is thrown and user is informed that they","lastModifiedDate":"2024-01-24"},{"lineNumber":255,"author":{"gitId":"tamagochuuu"},"content":"     * had already completed the task.","lastModifiedDate":"2024-01-24"},{"lineNumber":256,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":257,"author":{"gitId":"tamagochuuu"},"content":"    public static void mark() {","lastModifiedDate":"2024-01-24"},{"lineNumber":258,"author":{"gitId":"tamagochuuu"},"content":"        int index \u003d scan.nextInt();","lastModifiedDate":"2024-01-23"},{"lineNumber":259,"author":{"gitId":"tamagochuuu"},"content":"        Task theTask \u003d list.get(index - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":260,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":261,"author":{"gitId":"tamagochuuu"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":262,"author":{"gitId":"tamagochuuu"},"content":"            AlreadyDoneException.validate(theTask);","lastModifiedDate":"2024-01-24"},{"lineNumber":263,"author":{"gitId":"tamagochuuu"},"content":"        } catch(AlreadyDoneException ex) {","lastModifiedDate":"2024-01-24"},{"lineNumber":264,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(\"You have already completed this task! :D\");","lastModifiedDate":"2024-01-24"},{"lineNumber":265,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(theTask);","lastModifiedDate":"2024-01-24"},{"lineNumber":266,"author":{"gitId":"tamagochuuu"},"content":"            return;","lastModifiedDate":"2024-01-24"},{"lineNumber":267,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":268,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":269,"author":{"gitId":"tamagochuuu"},"content":"        theTask.markAsDone();","lastModifiedDate":"2024-01-24"},{"lineNumber":270,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"Ok, I have marked this task as done. :D\\n\" + theTask);","lastModifiedDate":"2024-01-24"},{"lineNumber":271,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":272,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":273,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":274,"author":{"gitId":"tamagochuuu"},"content":"     * Marks an item on the user\u0027s todo list as not done.","lastModifiedDate":"2024-01-24"},{"lineNumber":275,"author":{"gitId":"tamagochuuu"},"content":"     * E.g. \u0027unmark 3\u0027 marks the 3rd item on the list as not done.","lastModifiedDate":"2024-01-24"},{"lineNumber":276,"author":{"gitId":"tamagochuuu"},"content":"     * Informs user that the task is marked as not done, and also displays the task.","lastModifiedDate":"2024-01-24"},{"lineNumber":277,"author":{"gitId":"tamagochuuu"},"content":"     * If task was already marked as not done, exception is thrown and user is informed that they","lastModifiedDate":"2024-01-24"},{"lineNumber":278,"author":{"gitId":"tamagochuuu"},"content":"     * had not yet completed the task.","lastModifiedDate":"2024-01-24"},{"lineNumber":279,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":280,"author":{"gitId":"tamagochuuu"},"content":"    public static void unmark() {","lastModifiedDate":"2024-01-24"},{"lineNumber":281,"author":{"gitId":"tamagochuuu"},"content":"        int index1 \u003d scan.nextInt();","lastModifiedDate":"2024-01-23"},{"lineNumber":282,"author":{"gitId":"tamagochuuu"},"content":"        Task aTask \u003d list.get(index1 - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":283,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":284,"author":{"gitId":"tamagochuuu"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":285,"author":{"gitId":"tamagochuuu"},"content":"            WasNotDoneException.validate(aTask);","lastModifiedDate":"2024-01-24"},{"lineNumber":286,"author":{"gitId":"tamagochuuu"},"content":"        } catch(WasNotDoneException ex) {","lastModifiedDate":"2024-01-24"},{"lineNumber":287,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(\"You had not completed this task! :O\");","lastModifiedDate":"2024-01-24"},{"lineNumber":288,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(aTask);","lastModifiedDate":"2024-01-24"},{"lineNumber":289,"author":{"gitId":"tamagochuuu"},"content":"            return;","lastModifiedDate":"2024-01-24"},{"lineNumber":290,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":291,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":292,"author":{"gitId":"tamagochuuu"},"content":"        aTask.markAsNotDone();","lastModifiedDate":"2024-01-24"},{"lineNumber":293,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"Ok, I have marked this task as not done yet. :O\\n\" + aTask);","lastModifiedDate":"2024-01-24"},{"lineNumber":294,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":295,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":296,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":297,"author":{"gitId":"tamagochuuu"},"content":"     * Deletes an item from the user\u0027s todo list.","lastModifiedDate":"2024-01-24"},{"lineNumber":298,"author":{"gitId":"tamagochuuu"},"content":"     * E.g. \u0027delete 3\u0027 deletes the 3rd item on the list.","lastModifiedDate":"2024-01-24"},{"lineNumber":299,"author":{"gitId":"tamagochuuu"},"content":"     * Informs user that the task is deleted, and also displays the deleted task.","lastModifiedDate":"2024-01-24"},{"lineNumber":300,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":301,"author":{"gitId":"tamagochuuu"},"content":"    public static void delete() {","lastModifiedDate":"2024-01-24"},{"lineNumber":302,"author":{"gitId":"tamagochuuu"},"content":"        int index2 \u003d scan.nextInt();","lastModifiedDate":"2024-01-24"},{"lineNumber":303,"author":{"gitId":"tamagochuuu"},"content":"        Task goneTask \u003d list.get(index2 - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":304,"author":{"gitId":"tamagochuuu"},"content":"        list.remove(goneTask);","lastModifiedDate":"2024-01-24"},{"lineNumber":305,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":306,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"Alright, I have removed the following task from your list:\\n\" + goneTask);","lastModifiedDate":"2024-01-24"},{"lineNumber":307,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"Now you have \" + list.size() + \" task(s) in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":308,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":309,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":310,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":311,"author":{"gitId":"tamagochuuu"},"content":"     * Saves the user\u0027s list as a text file in the hard disk.","lastModifiedDate":"2024-01-28"},{"lineNumber":312,"author":{"gitId":"tamagochuuu"},"content":"     * @param fileName the file name of the file to be saved.","lastModifiedDate":"2024-01-28"},{"lineNumber":313,"author":{"gitId":"tamagochuuu"},"content":"     * @throws IOException if file cannot be created.","lastModifiedDate":"2024-01-28"},{"lineNumber":314,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":315,"author":{"gitId":"tamagochuuu"},"content":"    public static void save(String fileName) throws IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":316,"author":{"gitId":"tamagochuuu"},"content":"        File list \u003d new File(fileName);","lastModifiedDate":"2024-01-28"},{"lineNumber":317,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":318,"author":{"gitId":"tamagochuuu"},"content":"        FileWriter saver \u003d new FileWriter(list);","lastModifiedDate":"2024-01-28"},{"lineNumber":319,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":320,"author":{"gitId":"tamagochuuu"},"content":"        for (int i \u003d 0; i \u003c Duke.list.size(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":321,"author":{"gitId":"tamagochuuu"},"content":"            saver.write(Duke.list.get(i).toString() + System.lineSeparator());","lastModifiedDate":"2024-01-28"},{"lineNumber":322,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":323,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":324,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"I have saved your list for your future reference. :D\");","lastModifiedDate":"2024-01-28"},{"lineNumber":325,"author":{"gitId":"tamagochuuu"},"content":"        saver.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":326,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":327,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":328,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":329,"author":{"gitId":"tamagochuuu"},"content":"     * Retrieves the saved list file from the hard disk.","lastModifiedDate":"2024-01-28"},{"lineNumber":330,"author":{"gitId":"tamagochuuu"},"content":"     * @param fileName the file name of the file to be loaded.","lastModifiedDate":"2024-01-28"},{"lineNumber":331,"author":{"gitId":"tamagochuuu"},"content":"     * @return an array list of tasks that the user previously added.","lastModifiedDate":"2024-01-28"},{"lineNumber":332,"author":{"gitId":"tamagochuuu"},"content":"     * @throws FileNotFoundException if file does not exist yet.","lastModifiedDate":"2024-01-28"},{"lineNumber":333,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":334,"author":{"gitId":"tamagochuuu"},"content":"    public static ArrayList\u003cTask\u003e get(String fileName) throws FileNotFoundException {","lastModifiedDate":"2024-01-28"},{"lineNumber":335,"author":{"gitId":"tamagochuuu"},"content":"        File list \u003d new File(fileName);","lastModifiedDate":"2024-01-28"},{"lineNumber":336,"author":{"gitId":"tamagochuuu"},"content":"        Scanner scanner \u003d new Scanner(list);","lastModifiedDate":"2024-01-28"},{"lineNumber":337,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":338,"author":{"gitId":"tamagochuuu"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":339,"author":{"gitId":"tamagochuuu"},"content":"            String fullString \u003d scanner.nextLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":340,"author":{"gitId":"tamagochuuu"},"content":"            if (fullString.contains(\"[T]\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":341,"author":{"gitId":"tamagochuuu"},"content":"                String description \u003d fullString.substring(7);","lastModifiedDate":"2024-01-28"},{"lineNumber":342,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":343,"author":{"gitId":"tamagochuuu"},"content":"                Task nextTask \u003d new Todo(description);","lastModifiedDate":"2024-01-28"},{"lineNumber":344,"author":{"gitId":"tamagochuuu"},"content":"                Duke.list.add(nextTask);","lastModifiedDate":"2024-01-28"},{"lineNumber":345,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":346,"author":{"gitId":"tamagochuuu"},"content":"            } else if (fullString.contains(\"[D]\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":347,"author":{"gitId":"tamagochuuu"},"content":"                int descriptionEnd \u003d fullString.indexOf(\u0027(\u0027);","lastModifiedDate":"2024-01-28"},{"lineNumber":348,"author":{"gitId":"tamagochuuu"},"content":"                int deadlineEnd \u003d fullString.indexOf(\u0027)\u0027);","lastModifiedDate":"2024-01-28"},{"lineNumber":349,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":350,"author":{"gitId":"tamagochuuu"},"content":"                String description \u003d fullString.substring(7, descriptionEnd - 1);","lastModifiedDate":"2024-01-28"},{"lineNumber":351,"author":{"gitId":"tamagochuuu"},"content":"                String deadline \u003d fullString.substring(descriptionEnd + 4, deadlineEnd);","lastModifiedDate":"2024-02-19"},{"lineNumber":352,"author":{"gitId":"tamagochuuu"},"content":"                LocalDate processedDeadline \u003d LocalDate.parse(deadline, DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":353,"author":{"gitId":"tamagochuuu"},"content":"                Task nextTask \u003d new Deadline(description, processedDeadline);","lastModifiedDate":"2024-02-19"},{"lineNumber":354,"author":{"gitId":"tamagochuuu"},"content":"                Duke.list.add(nextTask);","lastModifiedDate":"2024-01-28"},{"lineNumber":355,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":356,"author":{"gitId":"tamagochuuu"},"content":"            } else if (fullString.contains(\"[E]\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":357,"author":{"gitId":"tamagochuuu"},"content":"                int descriptionEnd \u003d fullString.indexOf(\u0027(\u0027);","lastModifiedDate":"2024-01-28"},{"lineNumber":358,"author":{"gitId":"tamagochuuu"},"content":"                int startTimeEnd \u003d fullString.indexOf(\"to\");","lastModifiedDate":"2024-01-28"},{"lineNumber":359,"author":{"gitId":"tamagochuuu"},"content":"                int endTimeEnd \u003d fullString.indexOf(\u0027)\u0027);","lastModifiedDate":"2024-01-28"},{"lineNumber":360,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":361,"author":{"gitId":"tamagochuuu"},"content":"                String description \u003d fullString.substring(7, descriptionEnd - 2);","lastModifiedDate":"2024-01-28"},{"lineNumber":362,"author":{"gitId":"tamagochuuu"},"content":"                String startTime \u003d fullString.substring(descriptionEnd + 1, startTimeEnd - 1);","lastModifiedDate":"2024-01-28"},{"lineNumber":363,"author":{"gitId":"tamagochuuu"},"content":"                String endTime \u003d fullString.substring(startTimeEnd - 1, endTimeEnd);","lastModifiedDate":"2024-01-28"},{"lineNumber":364,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":365,"author":{"gitId":"tamagochuuu"},"content":"                Task nextTask \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2024-01-28"},{"lineNumber":366,"author":{"gitId":"tamagochuuu"},"content":"                Duke.list.add(nextTask);","lastModifiedDate":"2024-01-28"},{"lineNumber":367,"author":{"gitId":"tamagochuuu"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":368,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":369,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":370,"author":{"gitId":"tamagochuuu"},"content":"        return Duke.list;","lastModifiedDate":"2024-01-28"},{"lineNumber":371,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":372,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":373,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":374,"author":{"gitId":"tamagochuuu"},"content":"     * Says goodbye to Mitsuki and exits the Chat bot.","lastModifiedDate":"2024-01-24"},{"lineNumber":375,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":376,"author":{"gitId":"tamagochuuu"},"content":"    public static void bye() {","lastModifiedDate":"2024-01-24"},{"lineNumber":377,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"Bye! Hope to see you again soon!\\n\");","lastModifiedDate":"2024-01-24"},{"lineNumber":378,"author":{"gitId":"tamagochuuu"},"content":"        scan.close();","lastModifiedDate":"2024-01-24"},{"lineNumber":379,"author":{"gitId":"tamagochuuu"},"content":"        System.exit(0);","lastModifiedDate":"2024-01-24"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"tamagochuuu":377,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":" * Contains information on the DukeException class.","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":" * @author Tee Chu Jie","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"tamagochuuu"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"tamagochuuu"},"content":"     * The constructor for a DukeException object.","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"tamagochuuu"},"content":"     * @param message Handled by the super constructor.","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"tamagochuuu"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"tamagochuuu"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"tamagochuuu"},"content":"     * Checks if a command is valid for the Chat Bot.","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"tamagochuuu"},"content":"     * @param command The command to be checked.","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"tamagochuuu"},"content":"     * @throws DukeException The exception that will be thrown if command is invalid.","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"tamagochuuu"},"content":"    public static void validate(String command) throws DukeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"tamagochuuu"},"content":"        if (!Duke.commands.contains(command)) {","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"tamagochuuu"},"content":"            throw new DukeException(\"Invalid Command Given\");","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"tamagochuuu"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"tamagochuuu":28}},{"path":"src/main/java/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":" * Contains information on the EmptyTaskException class.","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":" * @author Tee Chu Jie","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"tamagochuuu"},"content":"public class EmptyTaskException extends DukeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"tamagochuuu"},"content":"     * The constructor for an EmptyTaskException object.","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"tamagochuuu"},"content":"     * @param message Handled by the super constructor.","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"tamagochuuu"},"content":"    public EmptyTaskException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"tamagochuuu"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"tamagochuuu"},"content":"     * Checks if a todo task\u0027s description is empty. Throws exception if it is.","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"tamagochuuu"},"content":"     * @param description the task\u0027s description.","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"tamagochuuu"},"content":"     * @throws EmptyTaskException the exception that will be thrown if no task description is given.","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"tamagochuuu"},"content":"    public static void validate(String description) throws EmptyTaskException {","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"tamagochuuu"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"tamagochuuu"},"content":"            throw new EmptyTaskException(\"Empty Task Given\");","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"tamagochuuu"},"content":"     * Checks if a deadline or event task\u0027s description is empty. Throws exception if it is.","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"tamagochuuu"},"content":"     * @param tokens The array of strings containing the components of the task.","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"tamagochuuu"},"content":"     * @throws EmptyTaskException the exception that will be thrown if no task description is given.","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"tamagochuuu"},"content":"    public static void timedValidate(String[] tokens) throws EmptyTaskException {","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"tamagochuuu"},"content":"        if (tokens[0].isBlank()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"tamagochuuu"},"content":"            throw new EmptyTaskException(\"Empty Task Given\");","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"tamagochuuu"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"tamagochuuu":39}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":" * Contains information for the creation of Event objects.","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":" * @author Tee Chu Jie","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"tamagochuuu"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"tamagochuuu"},"content":"     * The time when the event starts.","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"tamagochuuu"},"content":"    protected String from;","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"tamagochuuu"},"content":"     * The time when the event ends.","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"tamagochuuu"},"content":"    protected String to;","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"tamagochuuu"},"content":"     * The constructor for an Event object.","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"tamagochuuu"},"content":"     * @param description The description of the Event object to be created.","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"tamagochuuu"},"content":"     *                    Handled by the super constructor in the Task class.","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"tamagochuuu"},"content":"     * @param from The time when the event starts.","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"tamagochuuu"},"content":"     * @param to The time when the event ends.","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"tamagochuuu"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"tamagochuuu"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"tamagochuuu"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"tamagochuuu"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"tamagochuuu"},"content":"     * Converts the Event object into a human-readable String to be displayed to the user.","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"tamagochuuu"},"content":"     * @return String object that represents the Event object.","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"tamagochuuu"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"tamagochuuu"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"tamagochuuu"},"content":"        return \"[E]\" + super.toString() + \" (\" + from + to + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"tamagochuuu"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"tamagochuuu":40}},{"path":"src/main/java/MissingDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":" * Contains information on the MissingDeadlineException class.","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":" * @author Tee Chu Jie","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"tamagochuuu"},"content":"public class MissingDeadlineException extends DukeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"tamagochuuu"},"content":"     * The constructor for a MissingDeadlineException object.","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"tamagochuuu"},"content":"     * @param message Handled by the super constructor.","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"tamagochuuu"},"content":"    public MissingDeadlineException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"tamagochuuu"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"tamagochuuu"},"content":"     * Checks if a deadline task\u0027s deadline is given. Throws exception if it is not.","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"tamagochuuu"},"content":"     * @param tokens The array of strings containing the components of the task.","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"tamagochuuu"},"content":"     * @throws MissingDeadlineException the exception that will be thrown if no deadline is given.","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"tamagochuuu"},"content":"    public static void validate(String[] tokens) throws MissingDeadlineException {","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"tamagochuuu"},"content":"        if (tokens.length !\u003d 2) {","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"tamagochuuu"},"content":"            throw new MissingDeadlineException(\"No Deadline Given\");","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"tamagochuuu"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"tamagochuuu":27}},{"path":"src/main/java/MissingEventTimingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":" * Contains information on the MissingEventTimingException class.","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":" * @author Tee Chu Jie","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"tamagochuuu"},"content":"public class MissingEventTimingException extends DukeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"tamagochuuu"},"content":"     * The constructor for a MissingEventTimingException object.","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"tamagochuuu"},"content":"     * @param message Handled by the super constructor.","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"tamagochuuu"},"content":"    public MissingEventTimingException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"tamagochuuu"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"tamagochuuu"},"content":"     * Checks if an event task\u0027s start and end timings are given. Throws exception either one is not.","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"tamagochuuu"},"content":"     * @param tokens The array of strings containing the components of the task.","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"tamagochuuu"},"content":"     * @throws MissingEventTimingException the exception that will be thrown if","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"tamagochuuu"},"content":"     *          either event start or end timing is not given.","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"tamagochuuu"},"content":"    public static void validate(String[] tokens) throws MissingEventTimingException {","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"tamagochuuu"},"content":"        if (tokens.length !\u003d 3) {","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"tamagochuuu"},"content":"            throw new MissingEventTimingException(\"No Event Timing Given\");","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"tamagochuuu"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"tamagochuuu":28}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":" * Contains information for the creation of Task objects.","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":" * @author Tee Chu Jie","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"tamagochuuu"},"content":"public class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"tamagochuuu"},"content":"     * The description of the Task object to be created.","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"tamagochuuu"},"content":"    protected String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"tamagochuuu"},"content":"     * The completion status of the task.","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"tamagochuuu"},"content":"     * When set to true, the task is completed.","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"tamagochuuu"},"content":"     * When set to false, the task is incomplete.","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"tamagochuuu"},"content":"     * All task objects are incomplete when created.","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"tamagochuuu"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"tamagochuuu"},"content":"     * The constructor for a Task object.","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"tamagochuuu"},"content":"     * @param description The description for the Task object to be created.","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"tamagochuuu"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"tamagochuuu"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"tamagochuuu"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"tamagochuuu"},"content":"     * Returns an icon \u0027X\u0027 if task is incomplete.","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"tamagochuuu"},"content":"     * Returns an icon \u0027 \u0027 if task is complete.","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"tamagochuuu"},"content":"     * @return String","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"tamagochuuu"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"tamagochuuu"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"tamagochuuu"},"content":"     * Marks a task as complete by setting \u0027isDone\u0027 to true.","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"tamagochuuu"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"tamagochuuu"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"tamagochuuu"},"content":"     * Marks a task as incomplete by setting \u0027isDone\u0027 to false.","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"tamagochuuu"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"tamagochuuu"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"tamagochuuu"},"content":"     * Converts the Task object into a human-readable String to be displayed to the user.","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"tamagochuuu"},"content":"     * @return String object that represents the Task object.","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"tamagochuuu"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"tamagochuuu"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"tamagochuuu"},"content":"        String status \u003d this.getStatusIcon();","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"tamagochuuu"},"content":"        return \"[\"+ status + \"] \" + description;","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"tamagochuuu"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"tamagochuuu":62}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":" * Contains information for the creation of Todo objects.","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":" * @author Tee Chu Jie","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"tamagochuuu"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"tamagochuuu"},"content":"     * The constructor for a Todo object.","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"tamagochuuu"},"content":"     * @param description The description of the todo object to be created.","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"tamagochuuu"},"content":"     *                    Handled by the super constructor in the Task class.","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"tamagochuuu"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"tamagochuuu"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"tamagochuuu"},"content":"     * Converts the Todo object into a human-readable String to be displayed to the user.","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"tamagochuuu"},"content":"     * @return String object that represents the Todo object.","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"tamagochuuu"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"tamagochuuu"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"tamagochuuu"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"tamagochuuu"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"tamagochuuu":25}},{"path":"src/main/java/WasNotDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":" * Contains information on the WasNotDoneException class.","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":" * @author Tee Chu Jie","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"tamagochuuu"},"content":"public class WasNotDoneException extends DukeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"tamagochuuu"},"content":"     * The constructor for a WasNotDoneException object.","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"tamagochuuu"},"content":"     * @param message Handled by the super constructor.","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"tamagochuuu"},"content":"    public WasNotDoneException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"tamagochuuu"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"tamagochuuu"},"content":"     * Checks if the task was done. If task was not done yet, throws exception.","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"tamagochuuu"},"content":"     * @param task the task to be checked","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"tamagochuuu"},"content":"     * @throws WasNotDoneException the exception that will be thrown if task was not done yet.","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"tamagochuuu"},"content":"    public static void validate(Task task) throws WasNotDoneException {","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"tamagochuuu"},"content":"        if (!task.isDone) {","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"tamagochuuu"},"content":"            throw new WasNotDoneException(\"Task Was Not Done\");","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"tamagochuuu"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"tamagochuuu":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"todo taijutsu practice","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":"deadline submit mission report /By Friday 12pm","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":"event gemaki match /From Thursday 10am /to 12pm","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"tamagochuuu":5}}]
