[{"path":"src/main/java/anita/Database.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meowwtama"},"content":"package anita;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"meowwtama"},"content":"import java.io.File;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"meowwtama"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"meowwtama"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"meowwtama"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"meowwtama"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"meowwtama"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"meowwtama"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"meowwtama"},"content":"public class Database {","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"meowwtama"},"content":"    private File myFile;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"meowwtama"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"meowwtama"},"content":"    public Database(String filePath, Duke duke) {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"meowwtama"},"content":"        myFile \u003d new File(filePath);","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"meowwtama"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"meowwtama"},"content":"    public void createFile() {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"meowwtama"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"meowwtama"},"content":"            myFile.createNewFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"meowwtama"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"meowwtama"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"meowwtama"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"meowwtama"},"content":"    public void writeFile(String msg) {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"meowwtama"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"meowwtama"},"content":"            FileWriter myWritter \u003d new FileWriter(myFile, true);","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"meowwtama"},"content":"            myWritter.write(msg + \"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"meowwtama"},"content":"            myWritter.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"meowwtama"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"meowwtama"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"meowwtama"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"meowwtama"},"content":"    public ArrayList\u003cString\u003e readFile() {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"meowwtama"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"meowwtama"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"meowwtama"},"content":"            Scanner myReader \u003d new Scanner(myFile);","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"meowwtama"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"meowwtama"},"content":"                data.add(myReader.nextLine());","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"meowwtama"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"meowwtama"},"content":"            clearFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"meowwtama"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"meowwtama"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"meowwtama"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"meowwtama"},"content":"        return data;","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"meowwtama"},"content":"    public void loadData(ArrayList\u003cString\u003e data) {","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"meowwtama"},"content":"        Parser commandParser \u003d new Parser();","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"meowwtama"},"content":"        for (String i : data) {","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"meowwtama"},"content":"            String[] tokens \u003d i.split(\"/\");","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"meowwtama"},"content":"            String command \u003d tokens[0].split(\" \")[0];","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"meowwtama"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"meowwtama"},"content":"                duke.addingTask(command, i);","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"meowwtama"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"meowwtama"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"meowwtama"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"meowwtama"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"meowwtama"},"content":"    public void deleteLine(int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"meowwtama"},"content":"        ArrayList\u003cString\u003e data \u003d readFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"meowwtama"},"content":"        data.remove(index-1);","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"meowwtama"},"content":"        clearFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"meowwtama"},"content":"        for (String i : data) {","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"meowwtama"},"content":"            writeFile(i);","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"meowwtama"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"meowwtama"},"content":"    public void clearFile() {","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"meowwtama"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"meowwtama"},"content":"            PrintWriter pw \u003d new PrintWriter(myFile);","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"meowwtama"},"content":"            pw.print(\"\");","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"meowwtama"},"content":"            pw.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"meowwtama"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"meowwtama"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"meowwtama"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"meowwtama"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"meowwtama":84}},{"path":"src/main/java/anita/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meowwtama"},"content":"package anita;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"meowwtama"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"meowwtama"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"meowwtama"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"meowwtama"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"meowwtama"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"meowwtama"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"meowwtama"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"meowwtama"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"meowwtama"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"meowwtama"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"meowwtama"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"meowwtama":19}},{"path":"src/main/java/anita/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meowwtama"},"content":"package anita;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"meowwtama"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"meowwtama"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"meowwtama"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"meowwtama"},"content":"    protected static boolean initialize \u003d true;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"meowwtama"},"content":"    private Database database;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"meowwtama"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"meowwtama"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"meowwtama"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"meowwtama"},"content":"        database \u003d new Database(filePath, this);","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"meowwtama"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"meowwtama"},"content":"        taskList \u003d new TaskList(database);","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"meowwtama"},"content":"        database.createFile();","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"meowwtama"},"content":"        database.loadData(database.readFile());","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"meowwtama"},"content":"        initialize \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"meowwtama"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"meowwtama"},"content":"     * Main driver code for executing commands.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"meowwtama"},"content":"     * If user command is not valid, throws the respective exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"meowwtama"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"meowwtama"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"meowwtama"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"meowwtama"},"content":"    public void run() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"meowwtama"},"content":"        ui.greet();","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"meowwtama"},"content":"        taskList.listTask();","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"meowwtama"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"meowwtama"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"meowwtama"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"meowwtama"},"content":"        while (isRunning) {","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"meowwtama"},"content":"            String description \u003d br.readLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"meowwtama"},"content":"            String command \u003d parser.parseCommand(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"meowwtama"},"content":"            ui.line();","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"meowwtama"},"content":"            try {","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"meowwtama"},"content":"                switch (command) {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"meowwtama"},"content":"                case \"bye\":","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"meowwtama"},"content":"                    isRunning \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"meowwtama"},"content":"                    ui.bye();","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"meowwtama"},"content":"                    break;","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"meowwtama"},"content":"                case \"list\":","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"meowwtama"},"content":"                    taskList.listTask();","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"meowwtama"},"content":"                    break;","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"meowwtama"},"content":"                case \"mark\":","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"meowwtama"},"content":"                    taskList.setDone(parser.indexParser(description));","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"meowwtama"},"content":"                    break;","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"meowwtama"},"content":"                case \"unmark\":","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"meowwtama"},"content":"                    taskList.setNotDone(parser.indexParser(description));","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"meowwtama"},"content":"                    break;","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"meowwtama"},"content":"                case \"delete\":","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"meowwtama"},"content":"                    taskList.removeTask(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"meowwtama"},"content":"                    break;","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"meowwtama"},"content":"                default:","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"meowwtama"},"content":"                    addingTask(command, description);","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"meowwtama"},"content":"                    break;","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"meowwtama"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"meowwtama"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"meowwtama"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"meowwtama"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"meowwtama"},"content":"            ui.line();","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"meowwtama"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"meowwtama"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"meowwtama"},"content":"     * Checks for the type of task to be added to the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"meowwtama"},"content":"     * Runs the correct parser and add task function.","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"meowwtama"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"meowwtama"},"content":"     * @param command Command representing the type of task to be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"meowwtama"},"content":"     * @param description The details of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"meowwtama"},"content":"     * @throws Exception If command is not valid.","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"meowwtama"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"meowwtama"},"content":"    public void addingTask(String command, String description) throws Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"meowwtama"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"meowwtama"},"content":"        switch (command) {","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"meowwtama"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"meowwtama"},"content":"            String[] parsedTodo \u003d parser.todoParser(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"meowwtama"},"content":"            database.writeFile(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"meowwtama"},"content":"            taskList.addTask(new Todo(parsedTodo[0]));","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"meowwtama"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"meowwtama"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"meowwtama"},"content":"            String[] parsedDeadline \u003d parser.deadlineParser(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"meowwtama"},"content":"            database.writeFile(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"meowwtama"},"content":"            taskList.addTask(new Deadline(parsedDeadline[0], parsedDeadline[1]));","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"meowwtama"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"meowwtama"},"content":"        case \"event\":","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"meowwtama"},"content":"            String[] parsedEvent \u003d parser.eventParser(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"meowwtama"},"content":"            database.writeFile(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"meowwtama"},"content":"            taskList.addTask(new Event(parsedEvent[0], parsedEvent[1], parsedEvent[2]));","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"meowwtama"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"meowwtama"},"content":"        default:","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"meowwtama"},"content":"            throw new IllegalArgumentException(\"Please enter a valid command.\");","lastModifiedDate":"2024-01-26"},{"lineNumber":99,"author":{"gitId":"meowwtama"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":101,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"meowwtama"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"meowwtama"},"content":"        new Duke(\"./data/saved-data\").run();","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"meowwtama":104,"-":2}},{"path":"src/main/java/anita/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meowwtama"},"content":"package anita;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"meowwtama"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"meowwtama"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"meowwtama"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"meowwtama"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"meowwtama"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"meowwtama"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"meowwtama"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"meowwtama"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"meowwtama"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"meowwtama"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"meowwtama"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"meowwtama"},"content":"        return \"[E]\" + super.toString() + \" (from \" + from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"meowwtama"},"content":"                + \" to \" + to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\" ;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"meowwtama"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"meowwtama":20}},{"path":"src/main/java/anita/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meowwtama"},"content":"package anita;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"meowwtama"},"content":"public class Parser {","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"meowwtama"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"meowwtama"},"content":"    public Parser() {","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"meowwtama"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"meowwtama"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"meowwtama"},"content":"     * Takes in the raw user input and returns the command.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"meowwtama"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"meowwtama"},"content":"     * @param description The raw user input.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"meowwtama"},"content":"     * @return Command or action to be done.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"meowwtama"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"meowwtama"},"content":"    public String parseCommand(String description) {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"meowwtama"},"content":"        String[] tokens \u003d description.split(\"/\", 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"meowwtama"},"content":"        String command \u003d tokens[0].split(\" \")[0];","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"meowwtama"},"content":"        return command;","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"meowwtama"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"meowwtama"},"content":"     * Used for specific commands where an index is expected.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"meowwtama"},"content":"     * Parses the String input into an int and returns it.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"meowwtama"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"meowwtama"},"content":"     * @param description The raw user input.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"meowwtama"},"content":"     * @return Index specified by the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"meowwtama"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"meowwtama"},"content":"    public int indexParser(String description) {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"meowwtama"},"content":"        String[] tokens \u003d description.split(\"/\", 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"meowwtama"},"content":"        return Integer.parseInt(tokens[0].split(\" \")[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"meowwtama"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"meowwtama"},"content":"     * Custom parser for the Todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"meowwtama"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"meowwtama"},"content":"     * @param description The raw user input.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"meowwtama"},"content":"     * @return A String[] containing parts of the user input to be used for instantiation.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"meowwtama"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"meowwtama"},"content":"    public String[] todoParser(String description) {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"meowwtama"},"content":"        String[] tokens \u003d description.split(\" \");","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"meowwtama"},"content":"        String[] res \u003d new String[1];","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"meowwtama"},"content":"        String taskName \u003d \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"meowwtama"},"content":"        if (tokens.length \u003d\u003d 1)","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"meowwtama"},"content":"            throw new ArrayIndexOutOfBoundsException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"meowwtama"},"content":"        for (int i \u003d 1; i \u003c tokens.length; i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"meowwtama"},"content":"            taskName +\u003d tokens[i] + \" \";","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"meowwtama"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"meowwtama"},"content":"        res[0] \u003d taskName;","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"meowwtama"},"content":"        return res;","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"meowwtama"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"meowwtama"},"content":"     * Custom parser for the Deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"meowwtama"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"meowwtama"},"content":"     * @param description The raw user input.","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"meowwtama"},"content":"     * @return A String[] containing parts of the user input to be used for instantiation.","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"meowwtama"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"meowwtama"},"content":"    public String[] deadlineParser(String description) {","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"meowwtama"},"content":"        String[] tokens \u003d description.split(\"/\", 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"meowwtama"},"content":"        String[] tokens2 \u003d tokens[0].split(\" \", 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"meowwtama"},"content":"        String[] res \u003d new String[2];","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"meowwtama"},"content":"        String taskName \u003d \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"meowwtama"},"content":"        if (tokens2.length \u003d\u003d 1)","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"meowwtama"},"content":"            throw new ArrayIndexOutOfBoundsException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"meowwtama"},"content":"        for (int i \u003d 1; i \u003c tokens2.length; i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"meowwtama"},"content":"            taskName +\u003d tokens2[i] + \" \";","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"meowwtama"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"meowwtama"},"content":"        res[0] \u003d taskName;","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"meowwtama"},"content":"        res[1] \u003d tokens[1].split(\" \")[1];","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"meowwtama"},"content":"        return res;","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"meowwtama"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"meowwtama"},"content":"     * Custom parser for the Event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"meowwtama"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"meowwtama"},"content":"     * @param description The raw user input.","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"meowwtama"},"content":"     * @return A String[] containing parts of the user input to be used for instantiation.","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"meowwtama"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"meowwtama"},"content":"    public String[] eventParser(String description) {","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"meowwtama"},"content":"        String[] tokens \u003d description.split(\"/\", 3);","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"meowwtama"},"content":"        String[] tokens2 \u003d tokens[0].split(\" \", 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"meowwtama"},"content":"        String[] res \u003d new String[2];","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"meowwtama"},"content":"        String taskName \u003d \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"meowwtama"},"content":"        if (tokens2.length \u003d\u003d 1)","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"meowwtama"},"content":"            throw new ArrayIndexOutOfBoundsException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"meowwtama"},"content":"        for (int i \u003d 1; i \u003c tokens2.length; i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"meowwtama"},"content":"            taskName +\u003d tokens2[i] + \" \";","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"meowwtama"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"meowwtama"},"content":"        res[0] \u003d taskName;","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"meowwtama"},"content":"        res[1] \u003d tokens[1].split(\" \")[1];","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"meowwtama"},"content":"        res[2] \u003d tokens[2].split(\" \")[1];","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"meowwtama"},"content":"        return res;","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"meowwtama"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"meowwtama":99}},{"path":"src/main/java/anita/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meowwtama"},"content":"package anita;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"meowwtama"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"meowwtama"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"meowwtama"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"meowwtama"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"meowwtama"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"meowwtama"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"meowwtama"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"meowwtama"},"content":"     * Checks if the task is completed and returns an icon representing the state.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"meowwtama"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"meowwtama"},"content":"     * @return \u0027X\u0027 if task is completed else \" \".","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"meowwtama"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"meowwtama"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"meowwtama"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"meowwtama"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"meowwtama"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"meowwtama"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"meowwtama"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"meowwtama":25}},{"path":"src/main/java/anita/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meowwtama"},"content":"package anita;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"meowwtama"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"meowwtama"},"content":"public class TaskList {","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"meowwtama"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"meowwtama"},"content":"    private Database database;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"meowwtama"},"content":"    protected ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"meowwtama"},"content":"    public TaskList(Database database) {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"meowwtama"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"meowwtama"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"meowwtama"},"content":"        this.database \u003d database;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"meowwtama"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"meowwtama"},"content":"     * Returns the Task located at the index - 1 position in the ArrayList taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"meowwtama"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"meowwtama"},"content":"     * @param index Index of the item to be retrieved.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"meowwtama"},"content":"     * @return Task to be retrieved.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"meowwtama"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"meowwtama"},"content":"    public Task get(int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"meowwtama"},"content":"        return taskList.get(index -1);","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"meowwtama"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"meowwtama"},"content":"     * Sets the Task \"done\" status to true.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"meowwtama"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"meowwtama"},"content":"     * @param index Index of the task to be set to \"done\".","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"meowwtama"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"meowwtama"},"content":"    public void setDone(int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"meowwtama"},"content":"        Task curr \u003d taskList.get(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"meowwtama"},"content":"        curr.isDone \u003d true;","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"meowwtama"},"content":"        ui.setDoneMessage(curr);","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"meowwtama"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"meowwtama"},"content":"     * Sets the Task \"done\" status to false.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"meowwtama"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"meowwtama"},"content":"     * @param index Index of the task to be set to not \"done\".","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"meowwtama"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"meowwtama"},"content":"    public void setNotDone(int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"meowwtama"},"content":"        Task curr \u003d taskList.get(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"meowwtama"},"content":"        curr.isDone \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"meowwtama"},"content":"        ui.setNotDoneMessage(curr);","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"meowwtama"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"meowwtama"},"content":"     * Adds the task into the ArrayList taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"meowwtama"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"meowwtama"},"content":"     * @param task Task to be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"meowwtama"},"content":"     * @throws ArrayIndexOutOfBoundsException If the index is not within the available range.","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"meowwtama"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"meowwtama"},"content":"    public void addTask(Task task) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"meowwtama"},"content":"        taskList.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"meowwtama"},"content":"        if (!Duke.initialize) {","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"meowwtama"},"content":"            ui.addTask(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"meowwtama"},"content":"            getNumberOfTasks();","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"meowwtama"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"meowwtama"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"meowwtama"},"content":"     * Removes the task from the ArrayList taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"meowwtama"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"meowwtama"},"content":"     * @param description Raw user input.","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"meowwtama"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"meowwtama"},"content":"    public void removeTask(String description) {","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"meowwtama"},"content":"        String[] tokens \u003d description.split(\" \");","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"meowwtama"},"content":"        if (tokens.length \u003d\u003d 1)","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"meowwtama"},"content":"            throw new ArrayIndexOutOfBoundsException(\"Please enter the index of the task to be deleted.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"meowwtama"},"content":"        int index \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"meowwtama"},"content":"        Task curr \u003d taskList.remove(index-1);","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"meowwtama"},"content":"        database.deleteLine(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"meowwtama"},"content":"        ui.removeTaskMessage(curr);","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"meowwtama"},"content":"        getNumberOfTasks();","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"meowwtama"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"meowwtama"},"content":"     * Iterates through the taskList and prints out each task in it.","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"meowwtama"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"meowwtama"},"content":"    public void listTask() {","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"meowwtama"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"meowwtama"},"content":"            ui.listTaskMessage(i+1, taskList.get(i));","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"meowwtama"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"meowwtama"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"meowwtama"},"content":"     * Prints out the number of tasks in the taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"meowwtama"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"meowwtama"},"content":"    public void getNumberOfTasks() {","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"meowwtama"},"content":"        ui.getNumberOfTasksMessage(taskList.size());","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"meowwtama"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"meowwtama":93}},{"path":"src/main/java/anita/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meowwtama"},"content":"package anita;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"meowwtama"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"meowwtama"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"meowwtama"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"meowwtama"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"meowwtama"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"meowwtama"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"meowwtama"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"meowwtama":12}},{"path":"src/main/java/anita/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meowwtama"},"content":"package anita;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"meowwtama"},"content":"public class Ui {","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"meowwtama"},"content":"    public void greet() {","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"meowwtama"},"content":"        String logo \u003d \"$$\\\\      $$\\\\  $$$$$$\\\\  $$\\\\   $$\\\\       $$\\\\      $$\\\\ $$$$$$\\\\ $$\\\\   $$\\\\ \\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"meowwtama"},"content":"                + \"$$$\\\\    $$$ |$$  __$$\\\\ $$ |  $$ |      $$ | $\\\\  $$ |\\\\_$$  _|$$$\\\\  $$ | \\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"meowwtama"},"content":"                + \"$$$$\\\\  $$$$ |$$ /  $$ |\\\\$$\\\\ $$  |      $$ |$$$\\\\ $$ |  $$ |  $$$$\\\\ $$ | \\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"meowwtama"},"content":"                + \"$$\\\\$$\\\\$$ $$ |$$$$$$$$ | \\\\$$$$  /       $$ $$ $$\\\\$$ |  $$ |  $$ $$\\\\$$ | \\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"meowwtama"},"content":"                + \"$$ \\\\$$$  $$ |$$  __$$ | $$  $$\u003c        $$$$  _$$$$ |  $$ |  $$ \\\\$$$$ | \\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"meowwtama"},"content":"                + \"$$ |\\\\$  /$$ |$$ |  $$ |$$  /\\\\$$\\\\       $$$  / \\\\$$$ |  $$ |  $$ |\\\\$$$ | \\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"meowwtama"},"content":"                + \"$$ | \\\\_/ $$ |$$ |  $$ |$$ /  $$ |      $$  /   \\\\$$ |$$$$$$\\\\ $$ | \\\\$$ | \\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"meowwtama"},"content":"                + \"\\\\__|     \\\\__|\\\\__|  \\\\__|\\\\__|  \\\\__|      \\\\__/     \\\\__|\\\\______|\\\\__|  \\\\__| \\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"meowwtama"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"meowwtama"},"content":"        line();","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"meowwtama"},"content":"        System.out.println(\"Hello! I\u0027m Anita MaxWynn\");","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"meowwtama"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"meowwtama"},"content":"        line();","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"meowwtama"},"content":"    public void bye() {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"meowwtama"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"meowwtama"},"content":"    public void line() {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"meowwtama"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"meowwtama"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"meowwtama"},"content":"        System.out.println(\"Yer task has been added: \\n  \" + task);","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"meowwtama"},"content":"    public void setDoneMessage(Task task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"meowwtama"},"content":"        System.out.println(\"Cha Ching! Task Completed.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"meowwtama"},"content":"        System.out.println(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"meowwtama"},"content":"    public void setNotDoneMessage(Task task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"meowwtama"},"content":"        System.out.println(\"$$$ Task Incomplete :(\");","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"meowwtama"},"content":"        System.out.println(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"meowwtama"},"content":"    public void removeTaskMessage(Task task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"meowwtama"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"meowwtama"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"meowwtama"},"content":"    public void listTaskMessage(int index, Task task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"meowwtama"},"content":"        System.out.println(index + \". \" + task);","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"meowwtama"},"content":"    public void getNumberOfTasksMessage(int size) {","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"meowwtama"},"content":"        System.out.println(\"Now you have \" + size + \" task(s) in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"meowwtama"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"meowwtama":53}},{"path":"src/test/java/anita/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meowwtama"},"content":"package anita;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"meowwtama"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"meowwtama"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"meowwtama"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"meowwtama"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"meowwtama"},"content":"    public void parseCommand_success() throws Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"meowwtama"},"content":"        assertEquals(\"todo\", new Parser().parseCommand(\"todo ligma\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"meowwtama"},"content":"        assertEquals(\"event\", new Parser().parseCommand(\"event project meeting /from Mon 2pm /to 4pm\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"meowwtama"},"content":"        assertEquals(\"deadline\", new Parser().parseCommand(\"deadline return book /by Sunday\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"meowwtama"},"content":"        assertEquals(\"delete\", new Parser().parseCommand(\"delete 69\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"meowwtama"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"meowwtama"},"content":"    public void indexParser_success() throws Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"meowwtama"},"content":"        assertEquals(2, new Parser().indexParser(\"delete 2\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"meowwtama"},"content":"        assertEquals(3, new Parser().indexParser(\"delete 3\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"meowwtama"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"meowwtama":24}},{"path":"src/test/java/anita/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meowwtama"},"content":"package anita;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"meowwtama"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"meowwtama"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"meowwtama"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"meowwtama"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"meowwtama"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"meowwtama"},"content":"    public void todoString_Success() throws Exception{","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"meowwtama"},"content":"        assertEquals(\"[T][ ] max win\", new Todo(\"max win\").toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"meowwtama"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"meowwtama"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"meowwtama":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"meowwtama"},"content":"todo borrow book","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"meowwtama"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"meowwtama"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"meowwtama"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"meowwtama"},"content":"todo","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"meowwtama"},"content":"blah","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"meowwtama"},"content":"list","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"meowwtama"},"content":"delete 3","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"meowwtama":8}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"meowwtama"},"content":"if [ ! -d \"/Users/jx/Desktop/cs2103t/ip/text-ui-test/bin\" ]","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"meowwtama"},"content":"    mkdir /Users/jx/Desktop/cs2103t/ip/text-ui-test/bin","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"meowwtama"},"content":"if ! javac -cp /Users/jx/Desktop/cs2103t/ip/src/main/java -Xlint:none -d /Users/jx/Desktop/cs2103t/ip/text-ui-test/bin /Users/jx/Desktop/cs2103t/ip/src/main/java/*.java","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"meowwtama"},"content":"java -classpath /Users/jx/Desktop/cs2103t/ip/text-ui-test/bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"meowwtama":4,"-":34}}]
