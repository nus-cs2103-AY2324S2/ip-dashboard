[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"alvinnzz"},"content":"    mainClass.set(\"Duke.Duke\")","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"alvinnzz":1,"-":41}},{"path":"src/main/java/Duke/Commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"package Duke.Commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"import Duke.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":" * Represents an abstract command class.","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"alvinnzz"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":"     * Abstract method to perform action for a command.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":"     * @throws  DukeException throws an exception when error arise in execute.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":"    public abstract void execute() throws DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"alvinnzz"},"content":"     * Abstract method to check if command is exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"alvinnzz"},"content":"     * @return boolean whether command is the exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"alvinnzz"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"alvinnzz"},"content":"     * Get the task name of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"alvinnzz"},"content":"     * @param commandWord The command word of the input.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"alvinnzz"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"alvinnzz"},"content":"     * @return String The name of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"alvinnzz"},"content":"     * @throws DukeException throws an exception when input or commandWord is not valid.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"alvinnzz"},"content":"    public static String getTaskName(String commandWord, String input) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"alvinnzz"},"content":"        if (commandWord.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"alvinnzz"},"content":"            if (input.length() \u003c 6) {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"alvinnzz"},"content":"                throw new DukeException(\"Please enter a task name for Duke.Tasks.Todo!! \u003e.\u003c\");","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"alvinnzz"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"alvinnzz"},"content":"            String taskName \u003d input.substring(5);","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"alvinnzz"},"content":"            return taskName;","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"alvinnzz"},"content":"        } else if (commandWord.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"alvinnzz"},"content":"            int endIndex \u003d input.indexOf(\"/by\");","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"alvinnzz"},"content":"            if (input.length() \u003c 10 || endIndex \u003d\u003d -1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"alvinnzz"},"content":"                throw new DukeException(\"Please enter a task name for Duke.Tasks.Deadline!! \u003e.\u003c\");","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"alvinnzz"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"alvinnzz"},"content":"            String taskName \u003d input.substring(9, endIndex);","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"alvinnzz"},"content":"            return taskName;","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"alvinnzz"},"content":"        } else if (commandWord.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"alvinnzz"},"content":"            int endIndex \u003d input.indexOf(\"/from\");","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"alvinnzz"},"content":"            if (input.length() \u003c 7 || endIndex \u003d\u003d -1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"alvinnzz"},"content":"                throw new DukeException(\"Please enter a task name for Duke.Tasks.Event!! \u003e.\u003c\");","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"alvinnzz"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"alvinnzz"},"content":"            String taskName \u003d input.substring(6, endIndex);","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"alvinnzz"},"content":"            return taskName;","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"alvinnzz"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"alvinnzz"},"content":"            throw new DukeException(\"Please use one of the 3 tasks!! \u003e.\u003c\");","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"alvinnzz"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"alvinnzz"},"content":"     * Get the starting date of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"alvinnzz"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"alvinnzz"},"content":"     * @return String The start date of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"alvinnzz"},"content":"     * @throws DukeException throws an exception when input is not valid.","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"alvinnzz"},"content":"    public static String getStartDate(String input) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"alvinnzz"},"content":"        int startIndex \u003d input.indexOf(\"/from\") + 6;","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"alvinnzz"},"content":"        int endIndex \u003d input.indexOf(\"/to\");","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"alvinnzz"},"content":"        if (startIndex \u003d\u003d input.length() || startIndex \u003d\u003d 5) {","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"alvinnzz"},"content":"            throw new DukeException(\"Please use the keyword /from for your event! \u003e.\u003c\");","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"alvinnzz"},"content":"        } else if (startIndex \u003e input.length()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"alvinnzz"},"content":"            throw new DukeException(\"Please enter a start date for your event! \u003e.\u003c\");","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"alvinnzz"},"content":"        } else if (endIndex \u003d\u003d -1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"alvinnzz"},"content":"            throw new DukeException(\"Please use the keyword /to for your event! \u003e.\u003c\");","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"alvinnzz"},"content":"        } else if (startIndex \u003e endIndex) {","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"alvinnzz"},"content":"            throw new DukeException(\"Please enter an end date for your event! \u003e.\u003c\");","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"alvinnzz"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"alvinnzz"},"content":"        return input.substring(startIndex, endIndex);","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"alvinnzz"},"content":"     * Get the ending date of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"alvinnzz"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"alvinnzz"},"content":"     * @return String The end date of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"alvinnzz"},"content":"     * @throws DukeException throws an exception when input is not valid.","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"alvinnzz"},"content":"    public static String getEndDate(String task, String input) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"alvinnzz"},"content":"        String startWord \u003d task.equalsIgnoreCase(\"deadline\") ? \"/by\" : \"/to\";","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"alvinnzz"},"content":"        int startIndex \u003d input.indexOf(startWord) + startWord.length() + 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"alvinnzz"},"content":"        if (startIndex \u003e input.length()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"alvinnzz"},"content":"            throw new DukeException(String.format(\"Please enter an end date for your %s!\", task));","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"alvinnzz"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"alvinnzz"},"content":"        return input.substring(startIndex);","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"alvinnzz":95}},{"path":"src/main/java/Duke/Commands/CreateDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"package Duke.Commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"import Duke.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"import Duke.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":"import Duke.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alvinnzz"},"content":"import Duke.Tasks.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":"import Duke.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":" * Represents a command to create a deadline task.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":"public class CreateDeadlineCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"alvinnzz"},"content":"    Ui ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"alvinnzz"},"content":"    TaskList taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"alvinnzz"},"content":"    Storage storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"alvinnzz"},"content":"    String input;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"alvinnzz"},"content":"     * Constructor for the DeadlineCommand class.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"alvinnzz"},"content":"     * @param ui The Ui object to interact with user.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"alvinnzz"},"content":"     * @param taskList The taskList object to record the tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"alvinnzz"},"content":"     * @param storage The Storage object to save and load information.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"alvinnzz"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"alvinnzz"},"content":"    public CreateDeadlineCommand(Ui ui, TaskList taskList, Storage storage, String input) {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"alvinnzz"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"alvinnzz"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"alvinnzz"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"alvinnzz"},"content":"        this.input \u003d input;","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"alvinnzz"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"alvinnzz"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"alvinnzz"},"content":"        Task addedTask \u003d null;","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"alvinnzz"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"alvinnzz"},"content":"        String commandWord \u003d inputArr[0];","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"alvinnzz"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"alvinnzz"},"content":"            addedTask \u003d new Deadline(getTaskName(commandWord, this.input), getEndDate(commandWord, input));","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"alvinnzz"},"content":"            taskList.addTask(addedTask);","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"alvinnzz"},"content":"            this.ui.printAddMessage(taskList.size(), addedTask);","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"alvinnzz"},"content":"        } catch (DateTimeException dte) {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"alvinnzz"},"content":"            this.ui.printDateErrorMessage(\"Please follow the format for date and time (d/M/yyyy HHmm).\");","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"alvinnzz"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"alvinnzz"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"alvinnzz"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"alvinnzz"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"alvinnzz":54}},{"path":"src/main/java/Duke/Commands/CreateEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"package Duke.Commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"import Duke.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"import Duke.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":"import Duke.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alvinnzz"},"content":"import Duke.Tasks.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":"import Duke.Tasks.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":"import Duke.Tasks.Todo;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":"import Duke.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":" * Represents a command to create an event task.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"alvinnzz"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"alvinnzz"},"content":"public class CreateEventCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"alvinnzz"},"content":"    Ui ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"alvinnzz"},"content":"    TaskList taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"alvinnzz"},"content":"    Storage storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"alvinnzz"},"content":"    String input;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"alvinnzz"},"content":"     * Constructor for the CreateEventCommand class.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"alvinnzz"},"content":"     * @param ui The Ui object to interact with user.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"alvinnzz"},"content":"     * @param taskList The taskList object to record the tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"alvinnzz"},"content":"     * @param storage The Storage object to save and load information.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"alvinnzz"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"alvinnzz"},"content":"    public CreateEventCommand(Ui ui, TaskList taskList, Storage storage, String input) {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"alvinnzz"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"alvinnzz"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"alvinnzz"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"alvinnzz"},"content":"        this.input \u003d input;","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"alvinnzz"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"alvinnzz"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"alvinnzz"},"content":"        Task addedTask \u003d null;","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"alvinnzz"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"alvinnzz"},"content":"        String commandWord \u003d inputArr[0];","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"alvinnzz"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"alvinnzz"},"content":"            addedTask \u003d new Event(getTaskName(commandWord, this.input),","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"alvinnzz"},"content":"                    getStartDate(this.input), getEndDate(commandWord, input));","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"alvinnzz"},"content":"            taskList.addTask(addedTask);","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"alvinnzz"},"content":"            this.ui.printAddMessage(taskList.size(), addedTask);","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"alvinnzz"},"content":"        } catch (DateTimeException dte) {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"alvinnzz"},"content":"            this.ui.printDateErrorMessage(\"Please follow the format for date and time (d/M/yyyy HHmm).\");","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"alvinnzz"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"alvinnzz"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"alvinnzz"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"alvinnzz"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"alvinnzz":57}},{"path":"src/main/java/Duke/Commands/CreateTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"package Duke.Commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"import Duke.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"import Duke.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":"import Duke.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alvinnzz"},"content":"import Duke.Tasks.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":"import Duke.Tasks.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":"import Duke.Tasks.Todo;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":"import Duke.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":" * Represents a command to create a Todo task.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"alvinnzz"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"alvinnzz"},"content":"public class CreateTodoCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"alvinnzz"},"content":"    Ui ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"alvinnzz"},"content":"    TaskList taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"alvinnzz"},"content":"    Storage storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"alvinnzz"},"content":"    String input;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"alvinnzz"},"content":"     * Constructor for the CreateTodoCommand class.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"alvinnzz"},"content":"     * @param ui The Ui object to interact with user.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"alvinnzz"},"content":"     * @param taskList The taskList object to record the tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"alvinnzz"},"content":"     * @param storage The Storage object to save and load information.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"alvinnzz"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"alvinnzz"},"content":"    public CreateTodoCommand(Ui ui, TaskList taskList, Storage storage, String input) {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"alvinnzz"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"alvinnzz"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"alvinnzz"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"alvinnzz"},"content":"        this.input \u003d input;","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"alvinnzz"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"alvinnzz"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"alvinnzz"},"content":"        Task addedTask \u003d null;","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"alvinnzz"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"alvinnzz"},"content":"        String commandWord \u003d inputArr[0];","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"alvinnzz"},"content":"        addedTask \u003d new Todo(getTaskName(commandWord, this.input));","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"alvinnzz"},"content":"        taskList.addTask(addedTask);","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"alvinnzz"},"content":"        this.ui.printAddMessage(taskList.size(), addedTask);","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"alvinnzz"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"alvinnzz"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"alvinnzz"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"alvinnzz":52}},{"path":"src/main/java/Duke/Commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"package Duke.Commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"import Duke.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"import Duke.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":"import Duke.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alvinnzz"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":"import Duke.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":" * Represents a command to delete a task.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":"    Ui ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":"    TaskList taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":"    Storage storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"alvinnzz"},"content":"    int indexToDelete;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"alvinnzz"},"content":"     * Constructor for the DeleteCommand class.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"alvinnzz"},"content":"     * @param ui The Ui object to interact with user.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"alvinnzz"},"content":"     * @param taskList The taskList object to record the tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"alvinnzz"},"content":"     * @param storage The Storage object to save and load information.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"alvinnzz"},"content":"     * @param indexToDelete The index of task to be deleted.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"alvinnzz"},"content":"    public DeleteCommand(Ui ui, TaskList taskList, Storage storage, int indexToDelete) {","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"alvinnzz"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"alvinnzz"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"alvinnzz"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"alvinnzz"},"content":"        this.indexToDelete \u003d indexToDelete;","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"alvinnzz"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"alvinnzz"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"alvinnzz"},"content":"        if (taskList.size() \u003c this.indexToDelete) {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"alvinnzz"},"content":"            throw new DukeException(\"Invalid task index to delete!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"alvinnzz"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"alvinnzz"},"content":"        Task taskToBeDeleted \u003d taskList.getTask(this.indexToDelete - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"alvinnzz"},"content":"        taskList.deleteTask(this.indexToDelete - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"alvinnzz"},"content":"        this.ui.printDeleteMessage(this.taskList.size(), taskToBeDeleted);","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"alvinnzz"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"alvinnzz"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"alvinnzz"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"alvinnzz":45}},{"path":"src/main/java/Duke/Commands/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"package Duke.Commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"import Duke.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"import Duke.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":"import Duke.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alvinnzz"},"content":"import Duke.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":" * Represents a command to print an error.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":"public class ErrorCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":"    Ui ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":"    TaskList taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":"    Storage storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":"    String error;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"alvinnzz"},"content":"     * Constructor for the ErrorCommand class.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"alvinnzz"},"content":"     * @param ui The Ui object to interact with user.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"alvinnzz"},"content":"     * @param taskList The taskList object to record the tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"alvinnzz"},"content":"     * @param storage The Storage object to save and load information.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"alvinnzz"},"content":"     * @param error The error message to be printed.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"alvinnzz"},"content":"    public ErrorCommand(Ui ui, TaskList taskList, Storage storage, String error) {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"alvinnzz"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"alvinnzz"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"alvinnzz"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"alvinnzz"},"content":"        this.error \u003d error;","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"alvinnzz"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"alvinnzz"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"alvinnzz"},"content":"        this.ui.printErrorMessage(this.error);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"alvinnzz"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"alvinnzz"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"alvinnzz"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"alvinnzz":39}},{"path":"src/main/java/Duke/Commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"package Duke.Commands;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"import Duke.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"import Duke.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":"import Duke.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"alvinnzz"},"content":"import Duke.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":" * Represent a command to find tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":"    Ui ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":"    TaskList taskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":"    Storage storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":"    String input;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"alvinnzz"},"content":"     * Constructor for a command to find tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"alvinnzz"},"content":"     * @param ui The Ui object to interact with user.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"alvinnzz"},"content":"     * @param taskList The taskList containing tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"alvinnzz"},"content":"     * @param storage The Storage object that saves and loads information.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"alvinnzz"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"alvinnzz"},"content":"    public FindCommand(Ui ui, TaskList taskList, Storage storage, String input) {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"alvinnzz"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"alvinnzz"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"alvinnzz"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"alvinnzz"},"content":"        this.input \u003d input;","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"alvinnzz"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"alvinnzz"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"alvinnzz"},"content":"        if (this.input.length() \u003c 6) {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"alvinnzz"},"content":"            throw new DukeException(\"Invalid input, please enter the task you want to search\");","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"alvinnzz"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"alvinnzz"},"content":"        String keyWord \u003d this.input.substring(5);","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"alvinnzz"},"content":"        this.ui.printFoundTasks(this.taskList, keyWord);","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"alvinnzz"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"alvinnzz"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"alvinnzz"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"alvinnzz":44}},{"path":"src/main/java/Duke/Commands/GoodbyeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"package Duke.Commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"import Duke.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"import Duke.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":"import Duke.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alvinnzz"},"content":"import Duke.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":" * Represents a command to exit the chatBot.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":"public class GoodbyeCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":"    Ui ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":"    TaskList taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"alvinnzz"},"content":"    Storage storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"alvinnzz"},"content":"     * Constructor for the GoodbyeCommand class.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"alvinnzz"},"content":"     * @param ui The Ui object to interact with user.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"alvinnzz"},"content":"     * @param taskList The taskList object to record the tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"alvinnzz"},"content":"     * @param storage The Storage object to save and load information.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"alvinnzz"},"content":"    public GoodbyeCommand(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"alvinnzz"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"alvinnzz"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"alvinnzz"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"alvinnzz"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"alvinnzz"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"alvinnzz"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"alvinnzz"},"content":"            this.storage.save(this.taskList);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"alvinnzz"},"content":"        } catch (IOException error) {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"alvinnzz"},"content":"            this.ui.printErrorMessage(error.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"alvinnzz"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"alvinnzz"},"content":"        this.ui.sayGoodbye();","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"alvinnzz"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"alvinnzz"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"alvinnzz"},"content":"        return true;","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"alvinnzz":43}},{"path":"src/main/java/Duke/Commands/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"package Duke.Commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"import Duke.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"import Duke.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":"import Duke.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alvinnzz"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":"import Duke.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":"public class MarkDoneCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":"    Ui ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":"    TaskList taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":"    Storage storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"alvinnzz"},"content":"    int indexToMark;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"alvinnzz"},"content":"     * Constructor for the MarkDoneCommand class.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"alvinnzz"},"content":"     * @param ui The Ui object to interact with user.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"alvinnzz"},"content":"     * @param taskList The taskList object to record the tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"alvinnzz"},"content":"     * @param storage The Storage object to save and load information.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"alvinnzz"},"content":"     * @param indexToMark The index of task to be mark done.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"alvinnzz"},"content":"    public MarkDoneCommand(Ui ui, TaskList taskList, Storage storage, int indexToMark) {","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"alvinnzz"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"alvinnzz"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"alvinnzz"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"alvinnzz"},"content":"        this.indexToMark \u003d indexToMark;","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"alvinnzz"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"alvinnzz"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"alvinnzz"},"content":"        if (this.indexToMark \u003c 1 || this.indexToMark \u003e this.taskList.size()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"alvinnzz"},"content":"            throw new DukeException(\"Invalid task number entered.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"alvinnzz"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"alvinnzz"},"content":"        this.taskList.setAsDone(this.indexToMark - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"alvinnzz"},"content":"        Task targetTask \u003d taskList.getTask(this.indexToMark - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"alvinnzz"},"content":"        this.ui.printMarkDoneMessage(targetTask, this.indexToMark);","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"alvinnzz"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"alvinnzz"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"alvinnzz"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"alvinnzz":45}},{"path":"src/main/java/Duke/Commands/MarkUndoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"package Duke.Commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"import Duke.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"import Duke.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":"import Duke.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alvinnzz"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":"import Duke.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":" * Represents a command to mark a task as not done.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":"public class MarkUndoneCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":"    Ui ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":"    TaskList taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":"    Storage storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"alvinnzz"},"content":"    int indexToUnmark;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"alvinnzz"},"content":"     * Constructor for the MarkUndoneCommand class.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"alvinnzz"},"content":"     * @param ui The Ui object to interact with user.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"alvinnzz"},"content":"     * @param taskList The taskList object to record the tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"alvinnzz"},"content":"     * @param storage The Storage object to save and load information.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"alvinnzz"},"content":"     * @param indexToUnmark The index of task to be mark undone.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"alvinnzz"},"content":"    public MarkUndoneCommand(Ui ui, TaskList taskList, Storage storage, int indexToUnmark) {","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"alvinnzz"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"alvinnzz"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"alvinnzz"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"alvinnzz"},"content":"        this.indexToUnmark \u003d indexToUnmark;","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"alvinnzz"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"alvinnzz"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"alvinnzz"},"content":"        if (this.indexToUnmark \u003c 1 || this.indexToUnmark \u003e this.taskList.size()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"alvinnzz"},"content":"            throw new DukeException(\"Invalid task number entered.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"alvinnzz"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"alvinnzz"},"content":"        taskList.setAsNotDone(this.indexToUnmark - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"alvinnzz"},"content":"        Task targetTask \u003d taskList.getTask(this.indexToUnmark - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"alvinnzz"},"content":"        this.ui.printMarkUndoneMessage(targetTask, indexToUnmark);","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"alvinnzz"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"alvinnzz"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"alvinnzz"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"alvinnzz":45}},{"path":"src/main/java/Duke/Commands/PrintListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"package Duke.Commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"import Duke.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"import Duke.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":"import Duke.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alvinnzz"},"content":"import Duke.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":" * Represents a command to print all task in taskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":"public class PrintListCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":"    Ui ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":"    TaskList taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":"    Storage storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"alvinnzz"},"content":"     * Constructor for the PrintListCommand class.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"alvinnzz"},"content":"     * @param ui The Ui object to interact with user.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"alvinnzz"},"content":"     * @param taskList The taskList object to record the tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"alvinnzz"},"content":"     * @param storage The Storage object to save and load information.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"alvinnzz"},"content":"    public PrintListCommand(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"alvinnzz"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"alvinnzz"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"alvinnzz"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"alvinnzz"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"alvinnzz"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"alvinnzz"},"content":"        this.ui.printList(this.taskList);","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"alvinnzz"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"alvinnzz"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"alvinnzz"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"alvinnzz":36}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"package Duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"import Duke.Commands.Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alvinnzz"},"content":" * Represents a ChatBot class.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":"public class Duke {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":"    TaskList taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":"    private String filePath \u003d \"Duke/taskList.txt\";","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":"     * Constructor for the ChatBot class.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"alvinnzz"},"content":"     * @param filePath The filepath to the file that contains recorded tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"alvinnzz"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"alvinnzz"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"alvinnzz"},"content":"        this.taskList \u003d this.storage.load();","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"alvinnzz"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"alvinnzz"},"content":"     * Run the ChatBot to interact with user.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"alvinnzz"},"content":"    public void run() {","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"alvinnzz"},"content":"        this.ui.sayHello();","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"alvinnzz"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"alvinnzz"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"alvinnzz"},"content":"            try {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"alvinnzz"},"content":"                String fullCommand \u003d this.ui.readCommand();","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"alvinnzz"},"content":"                Command c \u003d Parser.parse(fullCommand, this.ui,this.taskList, this.storage);","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"alvinnzz"},"content":"                c.execute();","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"alvinnzz"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"alvinnzz"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"alvinnzz"},"content":"                this.ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"alvinnzz"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"alvinnzz"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"alvinnzz"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"alvinnzz"},"content":"        new Duke(\"./taskList.txt\").run();","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"alvinnzz":46}},{"path":"src/main/java/Duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"package Duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":" * Represents the Duke Exception class to throw errors.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alvinnzz"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":"     * Constructor for the Duke Exception class.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":"     * @param errorMessage Message to display to user.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"alvinnzz":15}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"package Duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"import Duke.Commands.*;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alvinnzz"},"content":" * Represent a parser class that handles user commands.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":"public class Parser {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":"     * An enum to store the specific commands which the user can use.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":"    enum CommandWords {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":"        TODO,","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":"        DEADLINE,","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":"        EVENT,","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"alvinnzz"},"content":"        BYE,","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"alvinnzz"},"content":"        DELETE,","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"alvinnzz"},"content":"        LIST,","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"alvinnzz"},"content":"        MARK,","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"alvinnzz"},"content":"        UNMARK,","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"alvinnzz"},"content":"        FIND","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"alvinnzz"},"content":"     * Read user input to return a command to be executed.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"alvinnzz"},"content":"     * @param input Input by the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"alvinnzz"},"content":"     * @param ui Ui object to interact with user.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"alvinnzz"},"content":"     * @param taskList TaskList object that records the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"alvinnzz"},"content":"     * @param storage Storage object that saves and loads information.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"alvinnzz"},"content":"     * @return Command A specific command to execute a certain action.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"alvinnzz"},"content":"    public static Command parse(String input, Ui ui, TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"alvinnzz"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"alvinnzz"},"content":"            String[] inputs \u003d input.split(\" \");","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"alvinnzz"},"content":"            CommandWords commandWord \u003d CommandWords.valueOf(inputs[0].toUpperCase());","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"alvinnzz"},"content":"            switch (commandWord) {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"alvinnzz"},"content":"            case BYE:","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"alvinnzz"},"content":"                return new GoodbyeCommand(ui, taskList, storage);","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"alvinnzz"},"content":"            case DELETE:","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"alvinnzz"},"content":"                return new DeleteCommand(ui, taskList, storage, Integer.parseInt(inputs[inputs.length - 1]));","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"alvinnzz"},"content":"            case LIST:","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"alvinnzz"},"content":"                return new PrintListCommand(ui, taskList, storage);","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"alvinnzz"},"content":"            case MARK:","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"alvinnzz"},"content":"                return new MarkDoneCommand(ui, taskList, storage, Integer.parseInt(inputs[inputs.length - 1]));","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"alvinnzz"},"content":"            case UNMARK:","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"alvinnzz"},"content":"                return new MarkUndoneCommand(ui, taskList, storage, Integer.parseInt(inputs[inputs.length - 1]));","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"alvinnzz"},"content":"            case TODO:","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"alvinnzz"},"content":"                return new CreateTodoCommand(ui, taskList, storage, input);","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"alvinnzz"},"content":"            case EVENT:","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"alvinnzz"},"content":"                return new CreateEventCommand(ui, taskList, storage, input);","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"alvinnzz"},"content":"            case DEADLINE:","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"alvinnzz"},"content":"                return new CreateDeadlineCommand(ui, taskList, storage, input);","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"alvinnzz"},"content":"            case FIND:","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"alvinnzz"},"content":"                return new FindCommand(ui, taskList, storage, input);","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"alvinnzz"},"content":"            default:","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"alvinnzz"},"content":"                return new ErrorCommand(ui, taskList, storage, \"Please use the correct command Word!\u003e.\u003c\");","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"alvinnzz"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"alvinnzz"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"alvinnzz"},"content":"            return new ErrorCommand(ui, taskList, storage, \"Please use the correct command Word!\u003e.\u003c\");","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"alvinnzz"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"alvinnzz":63}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"package Duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"import java.io.*;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alvinnzz"},"content":" * Represent a Storage class that saves and loads information.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":"public class Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":"    String filepath;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":"     * Constructor for the Storage class.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":"     * @param filepath The filepath to the file that contains recorded tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"alvinnzz"},"content":"    public Storage(String filepath){","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"alvinnzz"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"alvinnzz"},"content":"     * Load the taskList from the filePath.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"alvinnzz"},"content":"     * @return TaskList The TaskList object to be loaded from the filePath.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"alvinnzz"},"content":"    public TaskList load() {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"alvinnzz"},"content":"        try{","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"alvinnzz"},"content":"            FileInputStream file \u003d new FileInputStream(filepath);","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"alvinnzz"},"content":"            ObjectInputStream input \u003d new ObjectInputStream(file);","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"alvinnzz"},"content":"            TaskList taskList \u003d (TaskList) input.readObject();","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"alvinnzz"},"content":"            input.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"alvinnzz"},"content":"            return taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"alvinnzz"},"content":"        } catch (IOException | ClassNotFoundException error) {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"alvinnzz"},"content":"            // return empty TaskList on exceptions","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"alvinnzz"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"alvinnzz"},"content":"            return taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"alvinnzz"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"alvinnzz"},"content":"     * Save the taskList object into the filePath.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"alvinnzz"},"content":"     * @param taskList The TaskList object to be saved.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"alvinnzz"},"content":"    public void save(TaskList taskList) throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"alvinnzz"},"content":"        FileOutputStream file \u003d new FileOutputStream(filepath);","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"alvinnzz"},"content":"        ObjectOutputStream output \u003d new ObjectOutputStream(file);","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"alvinnzz"},"content":"        output.writeObject(taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"alvinnzz"},"content":"        output.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"alvinnzz":50}},{"path":"src/main/java/Duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"package Duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":" * Represent a TaskList class to record tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":"    protected ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":"     * Constructor for the TaskList class.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"alvinnzz"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"alvinnzz"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"alvinnzz"},"content":"     * Constructor for the TaskList class.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"alvinnzz"},"content":"     * @param taskList An ArrayList containing tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"alvinnzz"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"alvinnzz"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"alvinnzz"},"content":"     * Return the size of the TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"alvinnzz"},"content":"     * @return int The size of the TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"alvinnzz"},"content":"    public int size() {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"alvinnzz"},"content":"        return this.taskList.size();","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"alvinnzz"},"content":"     * Get the task from the TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"alvinnzz"},"content":"     * @param index Index of the wanted task.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"alvinnzz"},"content":"     * @return Task The wanted task from the TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"alvinnzz"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"alvinnzz"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"alvinnzz"},"content":"     * Add task to TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"alvinnzz"},"content":"     * @param task Task to be added to TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"alvinnzz"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"alvinnzz"},"content":"        this.taskList.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"alvinnzz"},"content":"     * Delete task from TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"alvinnzz"},"content":"     * @param index Index of the task tobe deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"alvinnzz"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"alvinnzz"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"alvinnzz"},"content":"     * Set task as done in the TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"alvinnzz"},"content":"     * @param index Index of task to be set as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"alvinnzz"},"content":"    public void setAsDone(int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"alvinnzz"},"content":"        this.taskList.get(index).setAsDone();","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"alvinnzz"},"content":"     * Set task as not done in the TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"alvinnzz"},"content":"     * @param index Index of task to be set as not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"alvinnzz"},"content":"    public void setAsNotDone(int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"alvinnzz"},"content":"        this.taskList.get(index).setAsNotDone();","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"alvinnzz":84}},{"path":"src/main/java/Duke/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"package Duke.Tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":" * Represent a deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":"    protected LocalDateTime dueDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":"     * Constructor for the deadline class","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"alvinnzz"},"content":"     * @param description Description of the deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"alvinnzz"},"content":"     * @param by End date for the deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"alvinnzz"},"content":"    public Deadline(String description, String by) throws DateTimeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"alvinnzz"},"content":"        super(description, \u0027D\u0027);","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"alvinnzz"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"alvinnzz"},"content":"        LocalDateTime dueDateParsed \u003d LocalDateTime.parse(by.trim(), formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"alvinnzz"},"content":"        this.dueDate \u003d dueDateParsed;","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"alvinnzz"},"content":"     * Convert by date from LocalDateTime to String","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"alvinnzz"},"content":"     * @return String By date of the deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"alvinnzz"},"content":"    public String dateInWords() {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"alvinnzz"},"content":"        String dayWeek \u003d dueDate.getDayOfWeek().toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"alvinnzz"},"content":"        int dayMonth \u003d dueDate.getDayOfMonth();","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"alvinnzz"},"content":"        String month \u003d dueDate.getMonth().toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"alvinnzz"},"content":"        int year \u003d dueDate.getYear();","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"alvinnzz"},"content":"        return dayWeek + \" \" + dayMonth + \" \" + month + \" \" +year;","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"alvinnzz"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"alvinnzz"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"alvinnzz"},"content":"        String str \u003d String.format(","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"alvinnzz"},"content":"                super.toString() + \" (%s)\", this.dateInWords());","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"alvinnzz"},"content":"        return str;","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"alvinnzz":45}},{"path":"src/main/java/Duke/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"package Duke.Tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":" * Represent an event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":"     * Constructor for the event class","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"alvinnzz"},"content":"     * @param description Description of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"alvinnzz"},"content":"     * @param from Start date of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"alvinnzz"},"content":"     * @param to End date of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"alvinnzz"},"content":"    public Event(String description, String from, String to) throws DateTimeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"alvinnzz"},"content":"        super(description, \u0027E\u0027);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"alvinnzz"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"alvinnzz"},"content":"        LocalDateTime fromParsed \u003d LocalDateTime.parse(from.trim(), formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"alvinnzz"},"content":"        LocalDateTime toParsed \u003d LocalDateTime.parse(to.trim(), formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"alvinnzz"},"content":"        this.from \u003d fromParsed;","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"alvinnzz"},"content":"        this.to \u003d toParsed;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"alvinnzz"},"content":"     * Convert from date from LocalDateTime to String","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"alvinnzz"},"content":"     * @return String From date of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"alvinnzz"},"content":"    public String fromDateInWords() {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"alvinnzz"},"content":"        String dayWeek \u003d from.getDayOfWeek().toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"alvinnzz"},"content":"        int dayMonth \u003d from.getDayOfMonth();","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"alvinnzz"},"content":"        String month \u003d from.getMonth().toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"alvinnzz"},"content":"        int year \u003d from.getYear();","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"alvinnzz"},"content":"        return dayWeek + \" \" + dayMonth + \" \" + month + \" \" +year;","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"alvinnzz"},"content":"     * Convert to date from LocalDateTime to String","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"alvinnzz"},"content":"     * @return String To date of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"alvinnzz"},"content":"    public String toDateInWords() {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"alvinnzz"},"content":"        String dayWeek \u003d to.getDayOfWeek().toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"alvinnzz"},"content":"        int dayMonth \u003d to.getDayOfMonth();","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"alvinnzz"},"content":"        String month \u003d to.getMonth().toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"alvinnzz"},"content":"        int year \u003d to.getYear();","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"alvinnzz"},"content":"        return dayWeek + \" \" + dayMonth + \" \" + month + \" \" + year;","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"alvinnzz"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"alvinnzz"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"alvinnzz"},"content":"        String str \u003d String.format(","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"alvinnzz"},"content":"                super.toString() + \" (from %s to %s)\", this.fromDateInWords(), this.toDateInWords());","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"alvinnzz"},"content":"        return str;","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"alvinnzz":62}},{"path":"src/main/java/Duke/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"package Duke.Tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alvinnzz"},"content":" * Represents a task the user wants to record.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":"public class Task implements Serializable {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":"    protected String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":"    protected Character taskType;","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":"     * Constructor for task.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"alvinnzz"},"content":"     * @param description Description of task.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"alvinnzz"},"content":"     * @param taskType Type of Task.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"alvinnzz"},"content":"    public Task(String description, Character taskType) {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"alvinnzz"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"alvinnzz"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"alvinnzz"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"alvinnzz"},"content":"     * Get the status icon of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"alvinnzz"},"content":"     * @return String A status icon.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"alvinnzz"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"alvinnzz"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"alvinnzz"},"content":"     * Get the description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"alvinnzz"},"content":"     * @return String Description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"alvinnzz"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"alvinnzz"},"content":"        return description;","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"alvinnzz"},"content":"     * Set the task as not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"alvinnzz"},"content":"    public void setAsNotDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"alvinnzz"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"alvinnzz"},"content":"     * Set the task as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"alvinnzz"},"content":"    public void setAsDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"alvinnzz"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"alvinnzz"},"content":"     * Get the type of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"alvinnzz"},"content":"     * @return Character Type of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"alvinnzz"},"content":"    public Character getTaskType(){","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"alvinnzz"},"content":"        return this.taskType;","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"alvinnzz"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"alvinnzz"},"content":"    public String toString(){","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"alvinnzz"},"content":"        return this.description;","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"alvinnzz":70}},{"path":"src/main/java/Duke/Tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"package Duke.Tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":" * Represent a Todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alvinnzz"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":"     * Constructor for the deadline class","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":"     * @param description Description of the Todo.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":"    public Todo(String description){","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":"        super(description, \u0027T\u0027);","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"alvinnzz":15}},{"path":"src/main/java/Duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"package Duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alvinnzz"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":" * Represent Ui class to interact with user.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":"public class Ui {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":"    protected Scanner sc;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":"     * Constructor for the Ui class.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":"    public Ui() {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"alvinnzz"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"alvinnzz"},"content":"     * Gets input entered by user.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"alvinnzz"},"content":"     * @return String Input entered by user.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"alvinnzz"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"alvinnzz"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"alvinnzz"},"content":"     * Prints greeting message to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"alvinnzz"},"content":"    public void sayHello() {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"alvinnzz"},"content":"        String greetMessage \u003d String.format(","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"alvinnzz"},"content":"                \"____________________________________________________________\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"alvinnzz"},"content":"                        \" Hello! I\u0027m Corgi!\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"alvinnzz"},"content":"                        \" What can I do for you?\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"alvinnzz"},"content":"                        \"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"alvinnzz"},"content":"        System.out.println(greetMessage);","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"alvinnzz"},"content":"     * Prints goodbye message to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"alvinnzz"},"content":"    public void sayGoodbye() {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"alvinnzz"},"content":"        String exitMessage \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"alvinnzz"},"content":"                \" Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"alvinnzz"},"content":"                \"____________________________________________________________\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"alvinnzz"},"content":"        System.out.println(exitMessage);","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"alvinnzz"},"content":"     * Prints add task message to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"alvinnzz"},"content":"     * @param sizeOfTaskList Size of TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"alvinnzz"},"content":"     * @param addedTask Task to be added to TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"alvinnzz"},"content":"    public void printAddMessage(int sizeOfTaskList, Task addedTask) {","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"alvinnzz"},"content":"        String message \u003d String.format(","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"alvinnzz"},"content":"                \"____________________________________________________________\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"alvinnzz"},"content":"                        \" Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"alvinnzz"},"content":"                        \"  [%s][%s] %s\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"alvinnzz"},"content":"                        \" Now you have %d tasks in the list.\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"alvinnzz"},"content":"                        \"____________________________________________________________\\n\",","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"alvinnzz"},"content":"                addedTask.getTaskType(), addedTask.getStatusIcon(),","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"alvinnzz"},"content":"                addedTask.toString(), sizeOfTaskList);","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"alvinnzz"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"alvinnzz"},"content":"     * Prints delete task message to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"alvinnzz"},"content":"     * @param sizeOfTaskList Size of TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"alvinnzz"},"content":"     * @param deletedTask Task to be deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"alvinnzz"},"content":"    public void printDeleteMessage(int sizeOfTaskList, Task deletedTask) {","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"alvinnzz"},"content":"        String deleteMessage \u003d String.format(","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"alvinnzz"},"content":"                \"____________________________________________________________\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"alvinnzz"},"content":"                        \" Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"alvinnzz"},"content":"                        \"  [%s][%s] %s\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"alvinnzz"},"content":"                        \" Now you have %d tasks in the list.\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"alvinnzz"},"content":"                        \"____________________________________________________________\\n\",","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"alvinnzz"},"content":"                deletedTask.getTaskType(), deletedTask.getStatusIcon(),","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"alvinnzz"},"content":"                deletedTask.toString(), sizeOfTaskList);","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"alvinnzz"},"content":"        System.out.println(deleteMessage);","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"alvinnzz"},"content":"     * Prints print list message to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"alvinnzz"},"content":"     * @param taskList TaskList to be printed.","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"alvinnzz"},"content":"    public void printList(TaskList taskList) {","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"alvinnzz"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"alvinnzz"},"content":"                \" Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"alvinnzz"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"alvinnzz"},"content":"            String currentTask \u003d String.format(\"%d.[%s][%s] %s\",","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"alvinnzz"},"content":"                    i + 1, taskList.getTask(i).getTaskType(),","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"alvinnzz"},"content":"                    taskList.getTask(i).getStatusIcon(), taskList.getTask(i).toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"alvinnzz"},"content":"            System.out.println(currentTask);","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"alvinnzz"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"alvinnzz"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"alvinnzz"},"content":"     * Prints mark task as done message to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"alvinnzz"},"content":"     * @param taskToBeMarked Task to be marked.","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"alvinnzz"},"content":"     * @param taskNumber Index of the task to be marked.","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"alvinnzz"},"content":"    public void printMarkDoneMessage(Task taskToBeMarked, int taskNumber) {","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"alvinnzz"},"content":"        String message \u003d String.format(","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"alvinnzz"},"content":"                \"____________________________________________________________\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"alvinnzz"},"content":"                        \" Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"alvinnzz"},"content":"                        \"  [%s][%s] %s\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"alvinnzz"},"content":"                        \"____________________________________________________________\\n\",","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"alvinnzz"},"content":"                taskToBeMarked.getTaskType(), taskToBeMarked.getStatusIcon(),","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"alvinnzz"},"content":"                taskToBeMarked.getDescription());","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"alvinnzz"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-03"},{"lineNumber":118,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"alvinnzz"},"content":"     * Prints mark task as not done message to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"alvinnzz"},"content":"     * @param taskToBeUnmarked Task to be unmarked.","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"alvinnzz"},"content":"     * @param taskNumber Index of the task to be unmarked.","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"alvinnzz"},"content":"    public void printMarkUndoneMessage(Task taskToBeUnmarked, int taskNumber) {","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"alvinnzz"},"content":"        String message \u003d String.format(","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"alvinnzz"},"content":"                \"____________________________________________________________\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"alvinnzz"},"content":"                        \" OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"alvinnzz"},"content":"                        \"  [%s][%s] %s\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"alvinnzz"},"content":"                        \"____________________________________________________________\\n\",","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"alvinnzz"},"content":"                taskToBeUnmarked.getTaskType(), taskToBeUnmarked.getStatusIcon(),","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"alvinnzz"},"content":"                taskToBeUnmarked.getDescription());","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"alvinnzz"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":138,"author":{"gitId":"alvinnzz"},"content":"     * Prints error message to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":140,"author":{"gitId":"alvinnzz"},"content":"     * @param message Error message for user.","lastModifiedDate":"2024-02-03"},{"lineNumber":141,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":142,"author":{"gitId":"alvinnzz"},"content":"    public void printErrorMessage(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":143,"author":{"gitId":"alvinnzz"},"content":"        String errorMessage \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"alvinnzz"},"content":"                message + \"\\n____________________________________________________________\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"alvinnzz"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2024-02-03"},{"lineNumber":146,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":147,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":148,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":149,"author":{"gitId":"alvinnzz"},"content":"     * Prints date time error message to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":150,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":151,"author":{"gitId":"alvinnzz"},"content":"     * @param message Error message for user.","lastModifiedDate":"2024-02-03"},{"lineNumber":152,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":153,"author":{"gitId":"alvinnzz"},"content":"    public void printDateErrorMessage(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":154,"author":{"gitId":"alvinnzz"},"content":"        String errorMessage \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":155,"author":{"gitId":"alvinnzz"},"content":"                message + \"\\n____________________________________________________________\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":156,"author":{"gitId":"alvinnzz"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2024-02-03"},{"lineNumber":157,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":158,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":159,"author":{"gitId":"alvinnzz"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":160,"author":{"gitId":"alvinnzz"},"content":"     * Find tasks by a given string.","lastModifiedDate":"2024-02-04"},{"lineNumber":161,"author":{"gitId":"alvinnzz"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":162,"author":{"gitId":"alvinnzz"},"content":"     * @param taskList","lastModifiedDate":"2024-02-04"},{"lineNumber":163,"author":{"gitId":"alvinnzz"},"content":"     * @param keyWord","lastModifiedDate":"2024-02-04"},{"lineNumber":164,"author":{"gitId":"alvinnzz"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":165,"author":{"gitId":"alvinnzz"},"content":"    public void printFoundTasks(TaskList taskList, String keyWord) {","lastModifiedDate":"2024-02-04"},{"lineNumber":166,"author":{"gitId":"alvinnzz"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-02-04"},{"lineNumber":167,"author":{"gitId":"alvinnzz"},"content":"                \" Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":168,"author":{"gitId":"alvinnzz"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-02-04"},{"lineNumber":169,"author":{"gitId":"alvinnzz"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":170,"author":{"gitId":"alvinnzz"},"content":"            if (!taskList.getTask(i).getDescription().contains(keyWord)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":171,"author":{"gitId":"alvinnzz"},"content":"                continue;","lastModifiedDate":"2024-02-04"},{"lineNumber":172,"author":{"gitId":"alvinnzz"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":173,"author":{"gitId":"alvinnzz"},"content":"            String currentTask \u003d String.format(\"%d.[%s][%s] %s\",","lastModifiedDate":"2024-02-04"},{"lineNumber":174,"author":{"gitId":"alvinnzz"},"content":"                    count + 1, taskList.getTask(i).getTaskType(),","lastModifiedDate":"2024-02-04"},{"lineNumber":175,"author":{"gitId":"alvinnzz"},"content":"                    taskList.getTask(i).getStatusIcon(), taskList.getTask(i).toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":176,"author":{"gitId":"alvinnzz"},"content":"            System.out.println(currentTask);","lastModifiedDate":"2024-02-04"},{"lineNumber":177,"author":{"gitId":"alvinnzz"},"content":"            count++;","lastModifiedDate":"2024-02-04"},{"lineNumber":178,"author":{"gitId":"alvinnzz"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":179,"author":{"gitId":"alvinnzz"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":180,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":181,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":182,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-02-03"},{"lineNumber":183,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"alvinnzz":183}},{"path":"src/test/java/Duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"package Duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":"    public void EmptyStorageLoadTest() {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":"        Storage storage \u003d new Storage(\"./taskList.txt\");","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":"        TaskList t1 \u003d storage.load();","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":"        assertEquals(t1.size(), new TaskList().size());","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"alvinnzz":15}},{"path":"src/test/java/Duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"package Duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"import Duke.Tasks.Todo;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"alvinnzz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alvinnzz"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alvinnzz"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"alvinnzz"},"content":"    public void EmptyListTest() {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"alvinnzz"},"content":"        TaskList t1 \u003d new TaskList();","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"alvinnzz"},"content":"        TaskList t2 \u003d new TaskList();","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"alvinnzz"},"content":"        assertEquals(t1.size(),t2.size());","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"alvinnzz"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"alvinnzz"},"content":"    public void AddToListTest() {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"alvinnzz"},"content":"        TaskList t1 \u003d new TaskList();","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"alvinnzz"},"content":"        int sizeBeforeAdd \u003d t1.size();","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"alvinnzz"},"content":"        t1.addTask(new Todo(\"Search for internships!\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"alvinnzz"},"content":"        int sizeAfterAdd \u003d t1.size();","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"alvinnzz"},"content":"        assertEquals(sizeBeforeAdd + 1, sizeAfterAdd);","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"alvinnzz"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"alvinnzz"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"alvinnzz"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"alvinnzz":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alvinnzz"},"content":"todo homework","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"alvinnzz"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"alvinnzz"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"alvinnzz":3}}]
