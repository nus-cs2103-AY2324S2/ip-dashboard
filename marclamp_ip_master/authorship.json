[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"# Chaterpillar Chatbot Project","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"This is a project for a greenfield Java project in CS2103.","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"Given below are instructions on how to use it.","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"## Setting up in IntelliJ","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` ","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"   to close the existing project first)","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"2. Open the project into IntelliJ as follows:","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"   2. Select the project directory, and click `OK`.","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"   3. If there are any further prompts, accept the defaults.","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"4. After that, locate the `src/main/java/Chaterpillar.java` file, right-click it, and choose `Run Chaterpillar.main()`","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"   (if the code editor is showing compile errors, try restarting the IDE). ","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"                        .    .","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"                         )  (","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"   _ _ _ _ _ _ _ _ _ _ _(.--.)","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":" {{ { { { { { { { { { { ( \u0027v\u0027)","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"  \u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e`--\u0027\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"  ","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"Hello! I\u0027m Chaterpillar.","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"What can I do for you?","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"marclamp":22,"-":9}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"    mainClass.set(\"chaterpillar.launcher.Launcher\")","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"    archiveBaseName \u003d \"chaterpillar\"","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"checkstyle {","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"marclamp":22,"-":40}},{"path":"data/history.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"D|true|submit screenshot|8/Feb/2024 02:10 PM","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"T|false|read book","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"T|false|borrow book","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"E|false|return book|18/Feb/2024 03:00 PM|18/Feb/2024 05:00 PM","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"T|false|add functionality to work with other DateTime formats","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"D|false|submit report|21/Feb/2024","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"D|true|helpme|20/Feb/2024","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"T|false|update README doc","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"D|false|submit final report|25/Feb/2024 09:00 PM","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"E|false|CCA training|20/Feb/2024 04:00 PM|20/Feb/2024 07:00 PM","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"T|false|booking","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"marclamp":11}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"# Chaterpillar User Guide","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"![Ui.png](Ui.png)","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"Chaterpillar is a friendly chatbot-style assistance application. ","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"Chat with it, and it will help you track the different tasks you have on hand. :D","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"## Features","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"### Adding To-Do Tasks","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"Adds a task to be done, with no specific duration or deadline, into your list of tasks.","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"Format: `todo {task name}`\\","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"Example: `todo update README doc`","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"Chaterpillar will let you know if the task is successfully added :)","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"[T][ ] update README doc","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"Now you have 1 task(s) in the list.","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"### Adding Deadlines","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"Adds a task with a specific deadline, into your list of tasks.","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"Format: `deadline {task name} /by {due date [and time]}`","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"* Time is optional, default value of 00:00 AM will be assigned but not shown.","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"* Date/Time can be entered in a variety of common inputs, e.g. `4 Feb`, `04/02`, ","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"`04/02/2024`, `4 Feb 6 PM`, `4/Feb/2024 1600`, ...","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"Examples: ","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"* `deadline submit final report /by 25 Feb 9 PM`","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"* `deadline finish task /by 25/02/2024 2100`","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"Chaterpillar will let you know if the task is successfully added :)","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"[D][ ] submit final report (by: 25/Feb/2024 09:00 PM)","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"Now you have 2 task(s) in the list.","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"### Adding Events","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"Adds a task with a specific duration, into your list of tasks.","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"Format: `event {task name} /from {start date} /to {end date}`","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"* Time is optional, default value of 00:00 AM will be assigned but not shown.","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"* Date/Time can be entered in a variety of common inputs, e.g. `4 Feb`, `04/02`,","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"  `04/02/2024`, `4 Feb 6 PM`, `4/Feb/2024 1600`, ...","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"Example: `event CCA training /from 20 Feb 5 PM /to 20 Feb 7 PM`","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"Chaterpillar will let you know if the task is successfully added :)","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"[E][ ] CCA training (from: 20/Feb/2024 05:00 PM to: 20/Feb/2024 07:00 PM)","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"Now you have 3 task(s) in the list.","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"### Listing All Tasks","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"Lists all the tasks you have in your list currently.","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"Format: `list`","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"marclamp"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"marclamp"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"marclamp"},"content":"1. [T][ ] update README doc","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"marclamp"},"content":"2. [D][ ] submit final report (by: 25/Feb/2024 09:00 PM)","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"marclamp"},"content":"3. [E][ ] CCA training (from: 20/Feb/2024 05:00 PM to: 20/Feb/2024 07:00 PM)","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"marclamp"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"marclamp"},"content":"### Getting the Tasks for Today","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"marclamp"},"content":"Lists all the task you have today.","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"marclamp"},"content":"Format: `today`","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"marclamp"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"marclamp"},"content":"For 20/Feb/2024,","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"marclamp"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"marclamp"},"content":"1. [E][ ] CCA training (from: 20/Feb/2024 05:00 PM to: 20/Feb/2024 07:00 PM)","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"marclamp"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"marclamp"},"content":"### Finding a Task with a Specific Keyword","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"marclamp"},"content":"Chaterpillar will find a task that matches or contains the","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"marclamp"},"content":"keyword provided.","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"marclamp"},"content":"* Only the name is searched.","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"marclamp"},"content":"* Fuzzy matching, e.g. `make booking` will be matched with `book`","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"marclamp"},"content":"Format: `find {keyword}`","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":98,"author":{"gitId":"marclamp"},"content":"Example: `find doc`","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":100,"author":{"gitId":"marclamp"},"content":"Chaterpillar will list all the tasks that matches the keyword provided.","lastModifiedDate":"2024-02-20"},{"lineNumber":101,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":102,"author":{"gitId":"marclamp"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":103,"author":{"gitId":"marclamp"},"content":"Here are the items that match the keyword (doc):","lastModifiedDate":"2024-02-20"},{"lineNumber":104,"author":{"gitId":"marclamp"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-02-20"},{"lineNumber":105,"author":{"gitId":"marclamp"},"content":"1. [T][ ] update README doc","lastModifiedDate":"2024-02-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":107,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":108,"author":{"gitId":"marclamp"},"content":"### Marking and Unmarking a Task","lastModifiedDate":"2024-02-20"},{"lineNumber":109,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":110,"author":{"gitId":"marclamp"},"content":"Chaterpillar will help you mark or unmark a task as done or undone respectively.","lastModifiedDate":"2024-02-20"},{"lineNumber":111,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":112,"author":{"gitId":"marclamp"},"content":"Format: ","lastModifiedDate":"2024-02-20"},{"lineNumber":113,"author":{"gitId":"marclamp"},"content":"* `mark {index}`","lastModifiedDate":"2024-02-20"},{"lineNumber":114,"author":{"gitId":"marclamp"},"content":"* `unmark {index}`","lastModifiedDate":"2024-02-20"},{"lineNumber":115,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":116,"author":{"gitId":"marclamp"},"content":"Example: ","lastModifiedDate":"2024-02-20"},{"lineNumber":117,"author":{"gitId":"marclamp"},"content":"* `mark 1`","lastModifiedDate":"2024-02-20"},{"lineNumber":118,"author":{"gitId":"marclamp"},"content":"* `unmark 2`","lastModifiedDate":"2024-02-20"},{"lineNumber":119,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":120,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":121,"author":{"gitId":"marclamp"},"content":"Chaterpillar will let you know if the task is successfully marked/unmarked :)","lastModifiedDate":"2024-02-20"},{"lineNumber":122,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":124,"author":{"gitId":"marclamp"},"content":"Nice! I \u0027ve marked this task as done:","lastModifiedDate":"2024-02-20"},{"lineNumber":125,"author":{"gitId":"marclamp"},"content":"[T][X] update README doc","lastModifiedDate":"2024-02-20"},{"lineNumber":126,"author":{"gitId":"marclamp"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":127,"author":{"gitId":"marclamp"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":128,"author":{"gitId":"marclamp"},"content":"Ok, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-02-20"},{"lineNumber":129,"author":{"gitId":"marclamp"},"content":"[D][ ] submit final report (by: 25/Feb/2024 09:00 PM)","lastModifiedDate":"2024-02-20"},{"lineNumber":130,"author":{"gitId":"marclamp"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":131,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":132,"author":{"gitId":"marclamp"},"content":"### Updating a Task\u0027s Details","lastModifiedDate":"2024-02-20"},{"lineNumber":133,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":134,"author":{"gitId":"marclamp"},"content":"Chaterpillar can help you update a task\u0027s details","lastModifiedDate":"2024-02-20"},{"lineNumber":135,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":136,"author":{"gitId":"marclamp"},"content":"Format: `update {index} [/name {new name}] [/date {new date}] ","lastModifiedDate":"2024-02-20"},{"lineNumber":137,"author":{"gitId":"marclamp"},"content":"        [/start {new start date}] [/end {new end date}]`","lastModifiedDate":"2024-02-20"},{"lineNumber":138,"author":{"gitId":"marclamp"},"content":"* Updates the task at the specified `index`. The index refers to the ","lastModifiedDate":"2024-02-20"},{"lineNumber":139,"author":{"gitId":"marclamp"},"content":"index number displayed in the full task list. The index **must be a ","lastModifiedDate":"2024-02-20"},{"lineNumber":140,"author":{"gitId":"marclamp"},"content":"positive index** and within the number of tasks, i.e. 1, 2, 3...","lastModifiedDate":"2024-02-20"},{"lineNumber":141,"author":{"gitId":"marclamp"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2024-02-20"},{"lineNumber":142,"author":{"gitId":"marclamp"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2024-02-20"},{"lineNumber":143,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":144,"author":{"gitId":"marclamp"},"content":"Example: ","lastModifiedDate":"2024-02-20"},{"lineNumber":145,"author":{"gitId":"marclamp"},"content":"* `update 2 /name submit report /date 21 Feb`","lastModifiedDate":"2024-02-20"},{"lineNumber":146,"author":{"gitId":"marclamp"},"content":"* `update 3 /start 22/02 1600`","lastModifiedDate":"2024-02-20"},{"lineNumber":147,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":148,"author":{"gitId":"marclamp"},"content":"_The task details have to correspond with the type of task being updated,","lastModifiedDate":"2024-02-20"},{"lineNumber":149,"author":{"gitId":"marclamp"},"content":"otherwise it Chaterpillar will not be able to help you._","lastModifiedDate":"2024-02-20"},{"lineNumber":150,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":151,"author":{"gitId":"marclamp"},"content":"Chaterpillar will let you know if the task is successfully updated :)","lastModifiedDate":"2024-02-20"},{"lineNumber":152,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":153,"author":{"gitId":"marclamp"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":154,"author":{"gitId":"marclamp"},"content":"Okay! I have updated the following task:","lastModifiedDate":"2024-02-20"},{"lineNumber":155,"author":{"gitId":"marclamp"},"content":"2. [D][ ] submit report (by: 21/Feb/2024)","lastModifiedDate":"2024-02-20"},{"lineNumber":156,"author":{"gitId":"marclamp"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":157,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":158,"author":{"gitId":"marclamp"},"content":"### Help ","lastModifiedDate":"2024-02-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":160,"author":{"gitId":"marclamp"},"content":"Chaterpillar will provide you a list of commands it accepts.","lastModifiedDate":"2024-02-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":162,"author":{"gitId":"marclamp"},"content":"Format: `help`","lastModifiedDate":"2024-02-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":164,"author":{"gitId":"marclamp"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-02-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":166,"author":{"gitId":"marclamp"},"content":"## Command summary","lastModifiedDate":"2024-02-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":168,"author":{"gitId":"marclamp"},"content":"| Action                | Format, Examples                                                                                                                                             |","lastModifiedDate":"2024-02-20"},{"lineNumber":169,"author":{"gitId":"marclamp"},"content":"|-----------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-02-20"},{"lineNumber":170,"author":{"gitId":"marclamp"},"content":"| **Add To-Do Task**    | `todo {task name}` `todo update README doc`                                                                                                                  |","lastModifiedDate":"2024-02-20"},{"lineNumber":171,"author":{"gitId":"marclamp"},"content":"| **Add Deadline Task** | `deadline {task name} /by {due date [and time]}` \u003cbr\u003e e.g. `deadline submit final report /by 25 Feb 9 PM`                                                    |","lastModifiedDate":"2024-02-20"},{"lineNumber":172,"author":{"gitId":"marclamp"},"content":"| **Add Event Task**    | `event {task name} /from {start date} /to {end date}` \u003cbr\u003e e.g. `event CCA training /from 20 Feb 5 PM /to 20 Feb 7 PM`                                       |","lastModifiedDate":"2024-02-20"},{"lineNumber":173,"author":{"gitId":"marclamp"},"content":"| **Mark**              | `mark {index}` e.g., `mark 1`                                                                                                                                |","lastModifiedDate":"2024-02-20"},{"lineNumber":174,"author":{"gitId":"marclamp"},"content":"| **Unmark**            | `unmark {index}` e.g. `unmark 2`                                                                                                                             |","lastModifiedDate":"2024-02-20"},{"lineNumber":175,"author":{"gitId":"marclamp"},"content":"| **Update**            | `update {index} [/name {new name}] [/date {new date}] [/start {new start date}] [/end {new end date}]` \u003cbr\u003e e.g. `update 2 /name submit report /date 21 Feb` |","lastModifiedDate":"2024-02-20"},{"lineNumber":176,"author":{"gitId":"marclamp"},"content":"| **List**              | `list`                                                                                                                                                       |","lastModifiedDate":"2024-02-20"},{"lineNumber":177,"author":{"gitId":"marclamp"},"content":"| **Find**              | `find {keyword}` e.g., `find book`                                                                                                                           |","lastModifiedDate":"2024-02-20"},{"lineNumber":178,"author":{"gitId":"marclamp"},"content":"| **Help**              | `help`                                                                                                                                                       |","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"marclamp":162,"-":16}},{"path":"src/main/java/chaterpillar/Chaterpillar.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import chaterpillar.commands.Command;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import chaterpillar.exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import chaterpillar.parser.Parser;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import chaterpillar.storage.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import chaterpillar.tasks.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"import chaterpillar.ui.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":" * Main class for Chaterpillar chatbot.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":" * @author marclamp","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"public class Chaterpillar {","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"    private static final String GREETING_MESSAGE \u003d \"Hello! I\u0027m Chaterpillar!\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"                                                   + \"What can I do for you?\";","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"    private final Ui ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"     * Basic constructor for this class","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"     * @throws ChaterpillarException custom \u003ccode\u003eException\u003c/code\u003e for this application.","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"    public Chaterpillar() throws ChaterpillarException {","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"        tasks \u003d storage.loadFromFile();","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"     * Returns basic greeting message.","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"     * @return message","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"    public static String greet() {","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"        return GREETING_MESSAGE;","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"     * Returns the appropriate response from a given input, tagged with exit status.","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"     * @param input command from user.","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"     * @return response of the chatbot and exit status.","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"     * @throws ChaterpillarException custom \u003ccode\u003eException\u003c/code\u003e for this application.","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"    public Pair\u003cString, Boolean\u003e getResponse(String input) throws ChaterpillarException {","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"        String response \u003d command.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"        boolean hasExited \u003d command.hasExited();","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"        return new Pair\u003c\u003e(response, hasExited);","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"marclamp":56}},{"path":"src/main/java/chaterpillar/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.commands;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import chaterpillar.exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import chaterpillar.storage.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import chaterpillar.tasks.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import chaterpillar.ui.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":" * Abstract class for specific \u003ccode\u003eCommand\u003c/code\u003e objects,","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":" * such as ExitCommand or TaskCommand.","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":" *","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":" * @author marclamp","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"     * Executes the command (determined in the specific \u003ccode\u003eCommand\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"     * classes).","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"     * @param ui object that handles the UI of this application.","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"     * @param storage object that is used for storage.","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"     * @return reply from the ChatBot.","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"     * @throws ChaterpillarException custom \u003ccode\u003eException\u003c/code\u003e for this application.","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage)","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"            throws ChaterpillarException;","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"     * Returns the exit status after the execution of a command.","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"     * @return \u003ccode\u003eboolean\u003c/code\u003e which is default false.","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"    public boolean hasExited() {","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"        return false;","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":36}},{"path":"src/main/java/chaterpillar/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.commands;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import chaterpillar.exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import chaterpillar.storage.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import chaterpillar.tasks.Task;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import chaterpillar.tasks.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import chaterpillar.ui.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":" * \u003ccode\u003eCommand\u003c/code\u003e to delete the item in the \u003ccode\u003eTaskList\u003c/code\u003e\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":" * object which contains the list of tasks, at the specified index.","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":" * @author marclamp","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"    private final int index;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"     * Constructor for this class.","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"     * @param index the index of the item to be deleted.","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"     * Deletes a task at the specified index.","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e object for the list of tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"     * @param ui \u003ccode\u003eUi\u003c/code\u003e object that handles the UI of this application.","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e object that is used for storage.","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"     * @return reply from the ChatBot.","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"     * @throws ChaterpillarException if no number detected, or number","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"     *     specified does not exist in the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws ChaterpillarException {","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"            Task task \u003d tasks.deleteTaskAtIndex(index);","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"            storage.saveAllToFile(tasks);","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"            String output \u003d","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"                    \"I have deleted this task for you: \\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"                    + task.toString() + \"\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"                    + \"Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"            ui.echo(output);","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"            return output;","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(\"Sorry, there is no number detected.\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"                                            + \"The correct way to use the command is: delete number\");","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(\"Sorry, the item does not exist in the list.\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"                                            + \"The correct way to use the command is: delete number\");","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":57}},{"path":"src/main/java/chaterpillar/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.commands;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import chaterpillar.storage.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import chaterpillar.tasks.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import chaterpillar.ui.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":" * \u003ccode\u003eCommand\u003c/code\u003e to exit the program.","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":" * @author marclamp","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"     * Exits the program.","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"     * @param ui object that handles the UI of this application.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"     * @param storage object that is used for storage.","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"     * @return exit message from the ChatBot","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"        String output \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"        ui.echo(output);","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"        return output;","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"     * Indicates that the \u003ccode\u003eCommand\u003c/code\u003e has exited the application.","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"     * Overrides the method to return \u003ccode\u003etrue\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"    public boolean hasExited() {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"        return true;","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":39}},{"path":"src/main/java/chaterpillar/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.commands;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import chaterpillar.exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import chaterpillar.storage.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import chaterpillar.tasks.Task;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import chaterpillar.tasks.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import chaterpillar.ui.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":" * \u003ccode\u003eCommand\u003c/code\u003e to find all tasks containing the search word.","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":" * @author marclamp","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    private final String keyword;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"     * Constructor for this class","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"     * @param keyword to be searched and matched","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"     * Finds all tasks in the list that contains the matching word/phrase","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"     * @param ui UI for this application.","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"     * @param storage storage for this application.","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"     * @return reply from the ChatBot.","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"     * @throws ChaterpillarException if empty search keyword.","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws ChaterpillarException {","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"        if (this.keyword.trim().isEmpty()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(\"Word/phrase to be search cannot be empty!\");","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"        TaskList newList \u003d new TaskList();","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"        for (Task task : tasks.getTasks()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"            if (task.containsInName(this.keyword)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"                newList.addTask(task);","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"        if (newList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"            String output \u003d \"There are no items that match your search.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"            ui.echo(output);","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"            return output;","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"        } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"            String output \u003d \"Here are the items that match the keyword (\" + this.keyword + \"): \\n\";","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"            return output + new ListCommand(newList).execute(newList, ui, storage);","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"marclamp":57}},{"path":"src/main/java/chaterpillar/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.commands;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import chaterpillar.storage.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import chaterpillar.tasks.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import chaterpillar.ui.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":" * \u003ccode\u003eCommand\u003c/code\u003e to print out the help message.","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":" * @author marclamp","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"    private static final String HELP_MESSAGE \u003d \"Hi! Here are the list of commands I recognise: \\n\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"                                               + \"\u0027list\u0027 - lists the tasks registered in the list\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"                                               + \"\u0027today\u0027 - lists the tasks for today\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"                                               + \"\u0027find\u0027 - finds the tasks containing the keyword specified\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"                                               + \"\u0027todo\u0027 - adds an item that has no due date\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"                                               + \"\u0027deadline\u0027 - adds an item with a due date\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"                                               + \"\u0027event\u0027 - adds an item that has a duration\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"                                               + \"\u0027mark\u0027 - marks the task as completed\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"                                               + \"\u0027unmark\u0027 - marks the task as not completed\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"                                               + \"\u0027update\u0027 - updates the task details\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"                                               + \"\u0027help\u0027 - opens the list of commands available\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"                                               + \"\u0027bye\u0027 - exits the chatbot\";","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"     * Prints out the commands that the application accepts.","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"     * @param ui object that handles the UI of this application.","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"     * @param storage object that is used for storage.","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"     * @return help message from the ChatBot.","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"        ui.echo(HELP_MESSAGE);","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"        return HELP_MESSAGE;","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":39}},{"path":"src/main/java/chaterpillar/commands/ListAllCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.commands;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import chaterpillar.storage.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import chaterpillar.tasks.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import chaterpillar.ui.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":" * \u003ccode\u003eCommand\u003c/code\u003e specifically to print all the tasks","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":" * present in the list of tasks currently.","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":" * @author marclamp","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"public class ListAllCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"     * Prints all the tasks in the list currently.","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"     * @param ui object that handles the UI of this application.","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"     * @param storage object that is used for storage.","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"     * @return reply from the ChatBot.","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"        return new ListCommand(tasks).execute(tasks, ui, storage);","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":26}},{"path":"src/main/java/chaterpillar/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.commands;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import chaterpillar.storage.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import chaterpillar.tasks.Task;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import chaterpillar.tasks.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import chaterpillar.ui.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":" * \u003ccode\u003eCommand\u003c/code\u003e to list out the list of tasks given","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":" * as a parameter in its construction, used in \u003ccode\u003eListAllCommand\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":" * \u003ccode\u003eTasksByDateCommand\u003c/code\u003e, and \u003ccode\u003eTasksByTodayCommand\u003c/code\u003e.","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":" * @author marclamp","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"     * Constructor for this class.","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"     * @param tasks list of tasks to be printed.","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"    public ListCommand(TaskList tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"     * Prints all the tasks in a specified list of tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"     * @param ui object that handles the UI of this application.","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"     * @param storage object that is used for storage.","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"     * @return reply from the ChatBot.","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are the tasks in your list: \\n\");","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"        int i \u003d 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"        for (Task eachTask : this.tasks.getTasks()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"            output.append(i++)","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"                    .append(\". \")","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"                    .append(eachTask)","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"                    .append(\"\\n\");","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"        ui.echo(output.toString());","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"        return output.toString();","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":49}},{"path":"src/main/java/chaterpillar/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.commands;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import chaterpillar.exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import chaterpillar.storage.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import chaterpillar.tasks.Task;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import chaterpillar.tasks.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import chaterpillar.ui.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":" * \u003ccode\u003eCommand\u003c/code\u003e to mark a task at a specified index as completed.","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":" * @author marclamp","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    private final int index;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"     * Constructor for this class","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"     * @param index the index of the item to be marked.","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"     * Marks the item at the specified index.","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"     * @param ui object that handles the UI of this application.","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"     * @param storage object that is used for storage.","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"     * @return reply from the ChatBot.","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"     * @throws ChaterpillarException if there is an error writing to file.","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws ChaterpillarException {","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"        if (index \u003e tasks.size()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"                    \"Sorry! That item does not exist in the list.\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"                    + \"You currently have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"        Task currTask \u003d tasks.get(index - 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"        currTask.mark();","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"        storage.saveAllToFile(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"        String output \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + currTask;","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"        ui.echo(output);","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"        return output;","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":51}},{"path":"src/main/java/chaterpillar/commands/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.commands;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import chaterpillar.exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import chaterpillar.storage.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import chaterpillar.tasks.Task;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import chaterpillar.tasks.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import chaterpillar.ui.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":" * \u003ccode\u003eCommand\u003c/code\u003e to add a task to the list of tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":" * @author marclamp","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"public class TaskCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    private final Task task;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"     * Constructor for this class.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"     * @param task the \u003ccode\u003eTask\u003c/code\u003e to be added to the list.","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"    public TaskCommand(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"     * Adds the task to the list of tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"     * @param ui object that handles the UI of this application.","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"     * @param storage object that is used for storage.","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"     * @return reply from the ChatBot.","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"     * @throws ChaterpillarException if there are errors writing to the file.","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws ChaterpillarException {","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"        tasks.addTask(this.task);","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"        storage.saveAllToFile(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"        String output \u003d","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"                \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"                + \"Now you have \" + tasks.size() + \" task(s) in the list.\";","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"        ui.echo(output);","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"        return output;","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":46}},{"path":"src/main/java/chaterpillar/commands/TasksDueByDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.commands;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import chaterpillar.datetime.DateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import chaterpillar.exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import chaterpillar.storage.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import chaterpillar.tasks.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import chaterpillar.ui.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":" * \u003ccode\u003eCommand\u003c/code\u003e to list all tasks on a specified date.","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":" * @author marclamp","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"public class TasksDueByDateCommand extends Command {","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    private final DateTime date;","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"     * Constructor for when class is invoked with a String for the date specified.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"     * @param date displays the list of tasks on this date.","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"     * @throws ChaterpillarException if date string provided is invalid","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"    public TasksDueByDateCommand(String date) throws ChaterpillarException {","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"        this.date \u003d new DateTime(date);","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"     * Overloaded Constructor for when class is invoked with a DateTime","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"     * object for the date specified.","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"     * @param date displays the list of tasks on this date.","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"    public TasksDueByDateCommand(DateTime date) {","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"     * Lists the tasks that fall on or within the specified date.","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"     * @param ui object that handles the UI of this application.","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"     * @param storage object that is used for storage.","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"     * @return reply from the ChatBot.","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"        TaskList tasksNew \u003d tasks.getTasksOnDate(this.date);","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"        String output \u003d String.format(\"For %s,\\n\", this.date);","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"        if (tasksNew.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"            output +\u003d \"Congrats! You have no tasks for today. :)\";","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"            ui.echo(output);","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"            return output;","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"            return output + new ListCommand(tasksNew).execute(tasks, ui, storage);","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":57}},{"path":"src/main/java/chaterpillar/commands/TasksTodayCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.commands;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import chaterpillar.datetime.DateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":" * \u003ccode\u003eCommand\u003c/code\u003e to list all the tasks that belongs to","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":" * the specified date.","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":" * @author marclamp","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"public class TasksTodayCommand extends TasksDueByDateCommand {","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"     * Constructor for this class.","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"    public TasksTodayCommand() {","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"        super(new DateTime(LocalDate.now()));","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":21}},{"path":"src/main/java/chaterpillar/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.commands;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import chaterpillar.exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import chaterpillar.storage.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import chaterpillar.tasks.Task;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import chaterpillar.tasks.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import chaterpillar.ui.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":" * \u003ccode\u003eCommand\u003c/code\u003e to unmark a task at a specified index as not completed.","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":" * @author marclamp","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    private final int index;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"     * Constructor for this class","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"     * @param index the index of the item to be unmarked.","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"     * Un-marks the task at the specified index.","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"     * @param ui object that handles the UI of this application.","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"     * @param storage object that is used for storage.","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"     * @return reply from the ChatBot.","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"     * @throws ChaterpillarException if there is an error writing to file.","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws ChaterpillarException {","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"        if (index \u003e tasks.size()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"                    \"Sorry! That item does not exist in the list.\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"                    + \"You currently have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"        Task currTask \u003d tasks.get(index - 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"        currTask.unmark();","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"        storage.saveAllToFile(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"        String output \u003d","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"                \"Ok, I\u0027ve marked this task as not done yet:\\n\" + currTask;","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"        ui.echo(output);","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"        return output;","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":50}},{"path":"src/main/java/chaterpillar/commands/UnrecognisedCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.commands;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import chaterpillar.storage.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import chaterpillar.tasks.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import chaterpillar.ui.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":" * \u003ccode\u003eCommand\u003c/code\u003e to display message when the input is unrecognised.","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":" * @author marclamp","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"public class UnrecognisedCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"    private static final String UNRECOGNISED_MESSAGE \u003d \"Oops, I have no idea what that means.\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"                                                       + \"Use \u0027help\u0027 for a list of commands I recognise.\";","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"     * Prints out a reply and a help message when the input is unrecognised.","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"     * @param ui object that handles the UI of this application.","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"     * @param storage object that is used for storage.","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"     * @return unrecognised input message from the ChatBot.","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"        ui.echo(UNRECOGNISED_MESSAGE);","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"        return UNRECOGNISED_MESSAGE;","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":28}},{"path":"src/main/java/chaterpillar/commands/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.commands;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import chaterpillar.exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import chaterpillar.storage.Storage;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import chaterpillar.tasks.Task;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import chaterpillar.tasks.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import chaterpillar.ui.Ui;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":" * \u003ccode\u003eCommand\u003c/code\u003e to update a task from the list of tasks.","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":" * @author marclamp","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    private final int index;","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"    private final String updatedName;","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"    private final String updatedDate;","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"    private final String updatedStartDate;","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"    private final String updatedEndDate;","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"     * Basic constructor to create the object for this class.","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"     * @param index of the \u003ccode\u003eTask\u003c/code\u003e in the list to be updated","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"     * @param updatedName the updated name of the task","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"     * @param updatedDate the updated date of the task","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"     * @param updatedStartDate the updated start date of the task","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"     * @param updatedEndDate the updated end date of the task","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"    public UpdateCommand(int index, String updatedName, String updatedDate,","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"                         String updatedStartDate, String updatedEndDate) {","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"        this.updatedName \u003d updatedName;","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"        this.updatedDate \u003d updatedDate;","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"        this.updatedStartDate \u003d updatedStartDate;","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"        this.updatedEndDate \u003d updatedEndDate;","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"        assert index \u003e 0;","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"     * Updates the details of the \u003ccode\u003eTask\u003c/code\u003e accordingly.","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"     * @param ui object that handles the UI of this application.","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"     * @param storage object that is used for storage.","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"     * @return reply from the ChatBot.","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"     * @throws ChaterpillarException if there are any mismatch in the detail.","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"     *     to be updated and the type of \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws ChaterpillarException {","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"        task.updateName(updatedName);","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"        task.updateDate(updatedDate);","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"        task.updateStartDate(updatedStartDate);","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"        task.updateEndDate(updatedEndDate);","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"        storage.saveAllToFile(tasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"        String output \u003d","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"                \"Okay! I have updated the following task: \\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"                + (index + 1) + \". \" + task;","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"        ui.echo(output);","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"        return output;","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"marclamp":67}},{"path":"src/main/java/chaterpillar/datetime/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.datetime;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import java.time.Year;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import java.time.YearMonth;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"import java.time.temporal.TemporalAccessor;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"import chaterpillar.exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":" * Custom date and time class for handling dates within this application.","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":" * @author marclamp","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"public class DateTime {","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"    private boolean hasOnlyDate;","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"    private boolean hasOnlyTime;","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"     * Constructor for this class.","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"     * @param date date and time in accepted formats.","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"     * @throws ChaterpillarException if the string provided is in the","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"     *     invalid/unaccepted format.","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"    public DateTime(String date) throws ChaterpillarException {","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"        this.hasOnlyDate \u003d false;","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"        this.hasOnlyTime \u003d false;","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"        this.dateTime \u003d parseDateTime(date);","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"     * Overloaded Constructor to accept a \u003ccode\u003eLocalDateTime\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"     * object.","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"     * @param date date and time in \u003ccode\u003eLocalDateTime\u003c/code\u003e object","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"    public DateTime(LocalDate date) {","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"        this.hasOnlyDate \u003d true;","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"        this.hasOnlyTime \u003d false;","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"        this.dateTime \u003d date.atTime(0, 0);","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"     * Parses the string of date and/or time to a","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"     * \u003ccode\u003eLocalDateTime\u003c/code\u003e object.","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"     * @param str \u003ccode\u003eString\u003c/code\u003e of date and/or time","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"     * @return \u003ccode\u003eLocalDateTime\u003c/code\u003e object","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"     * @throws ChaterpillarException if the string provided is in the","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"     *     invalid/unaccepted format.","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"    public LocalDateTime parseDateTime(String str) throws ChaterpillarException {","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"        /* Solution adapted from:","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"            https://www.baeldung.com/java-datetimeformatter","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"            Specifically, how to use DateTimeFormatterBuilder and appending patterns.","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"         */","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"        DateTimeFormatterBuilder dateTimeFormatterBuilder \u003d","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"marclamp"},"content":"                new DateTimeFormatterBuilder()","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/M/uuuu HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-M-uuuu HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d M uuuu HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMM/uuuu HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMM-uuuu HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMM uuuu HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMMM/uuuu HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMMM-uuuu HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMMM uuuu HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/M HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-M HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d M HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMM HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMM HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":82,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMM HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":83,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMMM HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":84,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMMM HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":85,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMMM HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":86,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/M/uuuu h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-M-uuuu h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d M uuuu h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":90,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMM/uuuu h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":91,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMM-uuuu h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":92,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMM uuuu h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":93,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMMM/uuuu h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":94,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMMM-uuuu h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":95,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMMM uuuu h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":96,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/M h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":97,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-M h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":98,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d M h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":99,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMM h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":100,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMM h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":101,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMM h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":102,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMMM h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":103,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMMM h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":104,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMMM h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":105,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":106,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/M/uuuu h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":107,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-M-uuuu h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":108,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d M uuuu h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":109,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMM/uuuu h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":110,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMM-uuuu h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":111,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMM uuuu h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":112,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMMM/uuuu h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":113,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMMM-uuuu h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":114,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMMM uuuu h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":115,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/M h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":116,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-M h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":117,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d M h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":118,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMM h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":119,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMM h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":120,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMM h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":121,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMMM h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":122,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMMM h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":123,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMMM h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":124,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":125,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/M/uuuu]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":126,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-M-uuuu]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":127,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d M uuuu]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":128,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMM/uuuu]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":129,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMM-uuuu]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":130,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMM uuuu]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":131,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMMM/uuuu]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":132,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMMM-uuuu]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":133,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMMM uuuu]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":134,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/M]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":135,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-M]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":136,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d M]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":137,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMM]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":138,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMM]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":139,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMM]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":140,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMMM]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":141,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMMM]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":142,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMMM]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":143,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":144,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":145,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[HH:mm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":146,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[h:mm a]\")","lastModifiedDate":"2024-02-09"},{"lineNumber":147,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":148,"author":{"gitId":"marclamp"},"content":"                        .parseDefaulting(ChronoField.YEAR, Year.now().getValue());","lastModifiedDate":"2024-02-06"},{"lineNumber":149,"author":{"gitId":"marclamp"},"content":"        DateTimeFormatter dateTimeFormatter \u003d dateTimeFormatterBuilder.toFormatter();","lastModifiedDate":"2024-02-06"},{"lineNumber":150,"author":{"gitId":"marclamp"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":151,"author":{"gitId":"marclamp"},"content":"            return getDate(str.trim(), dateTimeFormatter);","lastModifiedDate":"2024-02-06"},{"lineNumber":152,"author":{"gitId":"marclamp"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":153,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(","lastModifiedDate":"2024-02-07"},{"lineNumber":154,"author":{"gitId":"marclamp"},"content":"                    \"Invalid date format! I accept quite a number of common date format, \"","lastModifiedDate":"2024-02-09"},{"lineNumber":155,"author":{"gitId":"marclamp"},"content":"                    + \"but here is one you can use: DD/MM/YYY HH:MM\");","lastModifiedDate":"2024-02-09"},{"lineNumber":156,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":157,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":158,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":159,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":160,"author":{"gitId":"marclamp"},"content":"     * Gets the date and/or time from String with default values.","lastModifiedDate":"2024-02-09"},{"lineNumber":161,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":162,"author":{"gitId":"marclamp"},"content":"     * @param s \u003ccode\u003eString\u003c/code\u003e of Date and/or Time","lastModifiedDate":"2024-02-06"},{"lineNumber":163,"author":{"gitId":"marclamp"},"content":"     * @param format \u003ccode\u003eDateTimeFormatter\u003c/code\u003e object","lastModifiedDate":"2024-02-06"},{"lineNumber":164,"author":{"gitId":"marclamp"},"content":"     * @return \u003ccode\u003eLocalDateTime\u003c/code\u003e object","lastModifiedDate":"2024-02-06"},{"lineNumber":165,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":166,"author":{"gitId":"marclamp"},"content":"    private LocalDateTime getDate(String s, DateTimeFormatter format)","lastModifiedDate":"2024-02-09"},{"lineNumber":167,"author":{"gitId":"marclamp"},"content":"            throws ChaterpillarException {","lastModifiedDate":"2024-02-10"},{"lineNumber":168,"author":{"gitId":"marclamp"},"content":"        assert !s.isBlank() : \"DateTime String should not be blank\";","lastModifiedDate":"2024-02-17"},{"lineNumber":169,"author":{"gitId":"marclamp"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":170,"author":{"gitId":"marclamp"},"content":"            TemporalAccessor dt \u003d format.parseBest(s, LocalDateTime::from,","lastModifiedDate":"2024-02-15"},{"lineNumber":171,"author":{"gitId":"marclamp"},"content":"                    LocalDate::from, LocalTime::from, YearMonth::from);","lastModifiedDate":"2024-02-15"},{"lineNumber":172,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":173,"author":{"gitId":"marclamp"},"content":"            if (dt instanceof LocalDate) {","lastModifiedDate":"2024-02-06"},{"lineNumber":174,"author":{"gitId":"marclamp"},"content":"                hasOnlyDate \u003d true;","lastModifiedDate":"2024-02-14"},{"lineNumber":175,"author":{"gitId":"marclamp"},"content":"                return ((LocalDate) dt).atStartOfDay();","lastModifiedDate":"2024-02-06"},{"lineNumber":176,"author":{"gitId":"marclamp"},"content":"            } else if (dt instanceof LocalTime) {","lastModifiedDate":"2024-02-06"},{"lineNumber":177,"author":{"gitId":"marclamp"},"content":"                return ((LocalTime) dt).atDate(LocalDate.now());","lastModifiedDate":"2024-02-06"},{"lineNumber":178,"author":{"gitId":"marclamp"},"content":"            } else if (dt instanceof YearMonth) {","lastModifiedDate":"2024-02-06"},{"lineNumber":179,"author":{"gitId":"marclamp"},"content":"                hasOnlyDate \u003d true;","lastModifiedDate":"2024-02-14"},{"lineNumber":180,"author":{"gitId":"marclamp"},"content":"                return ((YearMonth) dt).atDay(1).atStartOfDay();","lastModifiedDate":"2024-02-06"},{"lineNumber":181,"author":{"gitId":"marclamp"},"content":"            } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":182,"author":{"gitId":"marclamp"},"content":"                return LocalDateTime.from(dt);","lastModifiedDate":"2024-02-06"},{"lineNumber":183,"author":{"gitId":"marclamp"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":184,"author":{"gitId":"marclamp"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":185,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(\"Error in parsing string for date/time.\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":186,"author":{"gitId":"marclamp"},"content":"                                            + \"I accept quite a number of common date format, \\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":187,"author":{"gitId":"marclamp"},"content":"                                            + \"but here is one you can use: DD/MM/YYY HH:MM\");","lastModifiedDate":"2024-02-20"},{"lineNumber":188,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":189,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":190,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":191,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":192,"author":{"gitId":"marclamp"},"content":"     * Checks if the current \u003ccode\u003eDateTime\u003c/code\u003e object has the","lastModifiedDate":"2024-02-09"},{"lineNumber":193,"author":{"gitId":"marclamp"},"content":"     * same date as the \u003ccode\u003eDateTim\u003c/code\u003e provided.","lastModifiedDate":"2024-02-09"},{"lineNumber":194,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":195,"author":{"gitId":"marclamp"},"content":"     * @param date to check if it has the same date as current","lastModifiedDate":"2024-02-09"},{"lineNumber":196,"author":{"gitId":"marclamp"},"content":"     *     \u003ccode\u003eDateTime\u003c/code\u003e object.","lastModifiedDate":"2024-02-09"},{"lineNumber":197,"author":{"gitId":"marclamp"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e\u003e if the 2 \u003ccode\u003eDateTime\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":198,"author":{"gitId":"marclamp"},"content":"     *     objects has the same date.","lastModifiedDate":"2024-02-09"},{"lineNumber":199,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":200,"author":{"gitId":"marclamp"},"content":"    public boolean isSameDay(DateTime date) {","lastModifiedDate":"2024-02-09"},{"lineNumber":201,"author":{"gitId":"marclamp"},"content":"        return this.dateTime.toLocalDate().isEqual(date.dateTime.toLocalDate());","lastModifiedDate":"2024-02-09"},{"lineNumber":202,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":203,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":204,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":205,"author":{"gitId":"marclamp"},"content":"     * Checks if the current \u003ccode\u003eDateTime\u003c/code\u003e object is within","lastModifiedDate":"2024-02-09"},{"lineNumber":206,"author":{"gitId":"marclamp"},"content":"     * the range of dates provided.","lastModifiedDate":"2024-02-09"},{"lineNumber":207,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":208,"author":{"gitId":"marclamp"},"content":"     * @param dtStart start of the period (inclusive)","lastModifiedDate":"2024-02-09"},{"lineNumber":209,"author":{"gitId":"marclamp"},"content":"     * @param dtEnd end of the period (inclusive)","lastModifiedDate":"2024-02-09"},{"lineNumber":210,"author":{"gitId":"marclamp"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e if it is within the date","lastModifiedDate":"2024-02-09"},{"lineNumber":211,"author":{"gitId":"marclamp"},"content":"     *     and \u003ccode\u003efalse\u003c/code\u003e if it is not.","lastModifiedDate":"2024-02-09"},{"lineNumber":212,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":213,"author":{"gitId":"marclamp"},"content":"    public boolean isWithinDate(DateTime dtStart, DateTime dtEnd) {","lastModifiedDate":"2024-02-07"},{"lineNumber":214,"author":{"gitId":"marclamp"},"content":"        boolean isAfterStartDate \u003d dateTime.toLocalDate().isAfter(dtStart.dateTime.toLocalDate());","lastModifiedDate":"2024-02-15"},{"lineNumber":215,"author":{"gitId":"marclamp"},"content":"        boolean isBeforeEndDate \u003d dateTime.toLocalDate().isBefore(dtEnd.dateTime.toLocalDate());","lastModifiedDate":"2024-02-15"},{"lineNumber":216,"author":{"gitId":"marclamp"},"content":"        boolean isEqualStartDate \u003d dateTime.toLocalDate().isEqual(dtStart.dateTime.toLocalDate());","lastModifiedDate":"2024-02-15"},{"lineNumber":217,"author":{"gitId":"marclamp"},"content":"        boolean isEqualEndDate \u003d dateTime.toLocalDate().isEqual(dtEnd.dateTime.toLocalDate());","lastModifiedDate":"2024-02-15"},{"lineNumber":218,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":219,"author":{"gitId":"marclamp"},"content":"        if (isAfterStartDate \u0026\u0026 isBeforeEndDate) {","lastModifiedDate":"2024-02-15"},{"lineNumber":220,"author":{"gitId":"marclamp"},"content":"            return true;","lastModifiedDate":"2024-02-06"},{"lineNumber":221,"author":{"gitId":"marclamp"},"content":"        } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":222,"author":{"gitId":"marclamp"},"content":"            return isEqualStartDate || isEqualEndDate;","lastModifiedDate":"2024-02-15"},{"lineNumber":223,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":224,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":225,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":226,"author":{"gitId":"marclamp"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":227,"author":{"gitId":"marclamp"},"content":"        if (hasOnlyDate) {","lastModifiedDate":"2024-02-14"},{"lineNumber":228,"author":{"gitId":"marclamp"},"content":"            return this.dateTime.format(DateTimeFormatter.ofPattern(\"d/MMM/yyyy\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":229,"author":{"gitId":"marclamp"},"content":"        } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":230,"author":{"gitId":"marclamp"},"content":"            return this.dateTime.format(DateTimeFormatter.ofPattern(\"d/MMM/yyyy hh:mm a\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":231,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":232,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":233,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"marclamp":233}},{"path":"src/main/java/chaterpillar/exceptions/ChaterpillarException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.exceptions;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":" * Custom \u003ccode\u003eException\u003c/code\u003e class for error handling.","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":" * @author marclamp","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"public class ChaterpillarException extends Exception {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"    public ChaterpillarException(String message) {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"        super(message);","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":12}},{"path":"src/main/java/chaterpillar/launcher/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.launcher;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"import javafx.scene.paint.Paint;","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":" * Represents a dialog box consisting of an ImageView to represent","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":" * the speaker\u0027s face and a label containing text from the speaker.","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"    private Label help;","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"    @FXML","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"    private VBox messageBox;","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"     * Basic constructor for this class","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"     * @param text to be placed in the \u003ccode\u003eLabel\u003c/code\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"     * @param img to be placed in the \u003ccode\u003eImageView\u003c/code\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"    private void flip() {","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"        setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"        messageBox.setBackground(","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"                new Background(new BackgroundFill(Paint.valueOf(\"MINTCREAM\"),","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"                        new CornerRadii(10), null)));","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"marclamp"},"content":"     * Gets a \u003ccode\u003eDialogBox\u003c/code\u003e designed for the user.","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"marclamp"},"content":"     * @param text to be placed in the \u003ccode\u003eLabel\u003c/code\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"marclamp"},"content":"     * @param img to be placed in the \u003ccode\u003eImageView\u003c/code\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"marclamp"},"content":"     * @return \u003ccode\u003eDialogBox\u003c/code\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":75,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"marclamp"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-14"},{"lineNumber":77,"author":{"gitId":"marclamp"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"marclamp"},"content":"        db.messageBox.setBackground(","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"marclamp"},"content":"                new Background(new BackgroundFill(Paint.valueOf(\"AZURE\"),","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"marclamp"},"content":"                        new CornerRadii(10), null)));","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"marclamp"},"content":"        return db;","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":85,"author":{"gitId":"marclamp"},"content":"     * Gets a \u003ccode\u003eDialogBox\u003c/code\u003e designed for the ChatBot.","lastModifiedDate":"2024-02-14"},{"lineNumber":86,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":87,"author":{"gitId":"marclamp"},"content":"     * @param text to be placed in the \u003ccode\u003eLabel\u003c/code\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":88,"author":{"gitId":"marclamp"},"content":"     * @param img to be placed in the \u003ccode\u003eImageView\u003c/code\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":89,"author":{"gitId":"marclamp"},"content":"     * @return \u003ccode\u003eDialogBox\u003c/code\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":90,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":91,"author":{"gitId":"marclamp"},"content":"    public static DialogBox getChaterpillarDialog(String text, Image img) {","lastModifiedDate":"2024-02-14"},{"lineNumber":92,"author":{"gitId":"marclamp"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-14"},{"lineNumber":93,"author":{"gitId":"marclamp"},"content":"        db.flip();","lastModifiedDate":"2024-02-14"},{"lineNumber":94,"author":{"gitId":"marclamp"},"content":"        return db;","lastModifiedDate":"2024-02-14"},{"lineNumber":95,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":96,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":97,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":98,"author":{"gitId":"marclamp"},"content":"     * Gets a default start \u003ccode\u003eDialogBox\u003c/code\u003e designed for the ChatBot.","lastModifiedDate":"2024-02-14"},{"lineNumber":99,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":100,"author":{"gitId":"marclamp"},"content":"     * @param text to be placed in the \u003ccode\u003eLabel\u003c/code\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":101,"author":{"gitId":"marclamp"},"content":"     * @param img to be placed in the \u003ccode\u003eImageView\u003c/code\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":102,"author":{"gitId":"marclamp"},"content":"     * @return \u003ccode\u003eDialogBox\u003c/code\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":103,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":104,"author":{"gitId":"marclamp"},"content":"    public static DialogBox getInitialiseChaterpillarDialog(String text, Image img) {","lastModifiedDate":"2024-02-14"},{"lineNumber":105,"author":{"gitId":"marclamp"},"content":"        var db \u003d getChaterpillarDialog(text, img);","lastModifiedDate":"2024-02-14"},{"lineNumber":106,"author":{"gitId":"marclamp"},"content":"        db.help.setText(\"\u0027help\u0027 for commands\");","lastModifiedDate":"2024-02-14"},{"lineNumber":107,"author":{"gitId":"marclamp"},"content":"        return db;","lastModifiedDate":"2024-02-14"},{"lineNumber":108,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":109,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":110,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":111,"author":{"gitId":"marclamp"},"content":"     * Gets a \u003ccode\u003eDialogBox\u003c/code\u003e designed for ChatBot Exceptions.","lastModifiedDate":"2024-02-14"},{"lineNumber":112,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":113,"author":{"gitId":"marclamp"},"content":"     * @param text to be placed in the \u003ccode\u003eLabel\u003c/code\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":114,"author":{"gitId":"marclamp"},"content":"     * @param img to be placed in the \u003ccode\u003eImageView\u003c/code\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":115,"author":{"gitId":"marclamp"},"content":"     * @return \u003ccode\u003eDialogBox\u003c/code\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":116,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":117,"author":{"gitId":"marclamp"},"content":"    public static DialogBox getExceptionDialog(String text, Image img) {","lastModifiedDate":"2024-02-14"},{"lineNumber":118,"author":{"gitId":"marclamp"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-14"},{"lineNumber":119,"author":{"gitId":"marclamp"},"content":"        db.flip();","lastModifiedDate":"2024-02-14"},{"lineNumber":120,"author":{"gitId":"marclamp"},"content":"        db.messageBox.setBackground(new Background(","lastModifiedDate":"2024-02-20"},{"lineNumber":121,"author":{"gitId":"marclamp"},"content":"                new BackgroundFill(Paint.valueOf(\"LIGHTPINK\"),","lastModifiedDate":"2024-02-20"},{"lineNumber":122,"author":{"gitId":"marclamp"},"content":"                        new CornerRadii(10), null)));","lastModifiedDate":"2024-02-20"},{"lineNumber":123,"author":{"gitId":"marclamp"},"content":"        return db;","lastModifiedDate":"2024-02-14"},{"lineNumber":124,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":125,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"marclamp":125}},{"path":"src/main/java/chaterpillar/launcher/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.launcher;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"public class Launcher {","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"marclamp":12}},{"path":"src/main/java/chaterpillar/launcher/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.launcher;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import chaterpillar.Chaterpillar;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import chaterpillar.exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":" * A GUI for Chaterpillar using FXML.","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"    private static final String CHATERPILLAR_IMAGE \u003d \"/images/chaterpillar.png\";","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"    private final Image chaterpillarImage \u003d new Image(this.getClass().getResourceAsStream(CHATERPILLAR_IMAGE));","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"    private final Chaterpillar chaterpillar \u003d new Chaterpillar();","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"    public Main() throws ChaterpillarException {","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"    public void start(Stage stage) throws ChaterpillarException {","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"            stage.setTitle(\"Chaterpillar\");","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"            stage.getIcons().add(chaterpillarImage);","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setChaterpillar(chaterpillar);","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"            stage.show();","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(\"IO error in setting up GUI \\n\" + e.getMessage());","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"marclamp":41}},{"path":"src/main/java/chaterpillar/launcher/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.launcher;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import chaterpillar.Chaterpillar;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import chaterpillar.exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"    /* Image by \u003ca href\u003d\"https://www.freepik.com/free-vector/hand-drawn-cartoon-caterpillar-","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"       illustration_41965142.htm#query\u003dcaterpillar%20with%20glasses%20cartoon\u0026position\u003d3\u0026from_view\u003dsearch\u0026track\u003d","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"       ais\u0026uuid\u003d1c52d891-0773-4104-ae03-207651165b78\"\u003eFreepik\u003c/a\u003e */","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"    private static final String CHATERPILLAR_IMAGE \u003d \"/images/chaterpillar.png\";","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"    private static final String USER_IMAGE \u003d \"/images/user.png\";","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"    private final Image chaterpillarImage \u003d new Image(this.getClass().getResourceAsStream(CHATERPILLAR_IMAGE));","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(USER_IMAGE));","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"    private Chaterpillar chaterpillar;","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"     * Initialises the main window, binds the scroll pane to be dynamic","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"     * and adds the first dialog box with the greeting message.","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"                DialogBox.getInitialiseChaterpillarDialog(Chaterpillar.greet(), chaterpillarImage)","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"        );","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"     * Sets the chaterpillar object.","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"     * @param chaterpillar the chatbot.","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"    public void setChaterpillar(Chaterpillar chaterpillar) {","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"        this.chaterpillar \u003d chaterpillar;","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"     * Creates two dialog boxes, one echoing user input and the other","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"     * containing Chaterpillar\u0027s reply and then appends them to","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"marclamp"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"            Pair\u003cString, Boolean\u003e pair \u003d chaterpillar.getResponse(input);","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"marclamp"},"content":"            String response \u003d pair.getKey();","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"marclamp"},"content":"            boolean hasExited \u003d pair.getValue();","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"marclamp"},"content":"            assert !response.isBlank() : \"Response should not be blank\";","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"marclamp"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"marclamp"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-14"},{"lineNumber":75,"author":{"gitId":"marclamp"},"content":"                    DialogBox.getChaterpillarDialog(response, chaterpillarImage));","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"marclamp"},"content":"            if (hasExited) {","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"marclamp"},"content":"                PauseTransition delay \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"marclamp"},"content":"                delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"marclamp"},"content":"                delay.play();","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"marclamp"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":82,"author":{"gitId":"marclamp"},"content":"        } catch (ChaterpillarException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"marclamp"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"marclamp"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-14"},{"lineNumber":85,"author":{"gitId":"marclamp"},"content":"                    DialogBox.getExceptionDialog(e.getMessage(), chaterpillarImage));","lastModifiedDate":"2024-02-14"},{"lineNumber":86,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":87,"author":{"gitId":"marclamp"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-14"},{"lineNumber":88,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":89,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-14"},{"lineNumber":90,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":91,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"marclamp":91}},{"path":"src/main/java/chaterpillar/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.parser;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import chaterpillar.commands.Command;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import chaterpillar.commands.DeleteCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import chaterpillar.commands.ExitCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"import chaterpillar.commands.FindCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"import chaterpillar.commands.HelpCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"import chaterpillar.commands.ListAllCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"import chaterpillar.commands.MarkCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"import chaterpillar.commands.TaskCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"import chaterpillar.commands.TasksTodayCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"import chaterpillar.commands.UnmarkCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"import chaterpillar.commands.UnrecognisedCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"import chaterpillar.commands.UpdateCommand;","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"import chaterpillar.exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"import chaterpillar.tasks.DeadlineTask;","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"import chaterpillar.tasks.EventTask;","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"import chaterpillar.tasks.Task;","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"import chaterpillar.tasks.TodoTask;","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":" * Utility class for parsing inputs by the user.","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":" * @author marclamp","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"public class Parser {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"     * Generates \u003ccode\u003eTask\u003c/code\u003e object from one line of \u003ccode\u003eString\u003c/code\u003e from a file.","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"     * @param str line describing task, loaded from file","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"     * @return \u003ccode\u003eTask\u003c/code\u003e object.","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"     * @throws ChaterpillarException if there are any errors in any of the line.","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"    public static Task parseFromFile(String str) throws ChaterpillarException {","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"            String[] eachLine \u003d str.split(\"\\\\|\");","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"            String taskType \u003d eachLine[0];","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"            boolean isMarked \u003d Boolean.parseBoolean(eachLine[1]);","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"            String taskName \u003d eachLine[2];","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"            switch (taskType) {","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"            case \"T\": {","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"                return new TodoTask(taskName, isMarked);","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"            case \"D\": {","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"                String dueDate \u003d eachLine[3];","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"                return new DeadlineTask(taskName, isMarked, dueDate);","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"            case \"E\": {","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"                String startDate \u003d eachLine[3];","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"                String endDate \u003d eachLine[4];","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"                return new EventTask(taskName, isMarked, startDate, endDate);","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"            default:","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"                throw new ChaterpillarException(","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"                        \"Error in type of task of this line: \\n\" + str);","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(\"Error in formatting of this line: \\n\" + str);","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"     * Parses the string read from the input of the user.","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"marclamp"},"content":"     * Outputs the respective \u003ccode\u003eCommand\u003c/code\u003e object.","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"marclamp"},"content":"     * @param input command to be parsed","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"marclamp"},"content":"     * @return \u003ccode\u003eCommand\u003c/code\u003e objects corresponding to","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"marclamp"},"content":"     *     the instructions of the parsed line.","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"marclamp"},"content":"     * @throws ChaterpillarException if there are any commands typed","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"marclamp"},"content":"     *     wrongly or if there are missing components in the command.","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"marclamp"},"content":"    public static Command parse(String input) throws ChaterpillarException {","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"marclamp"},"content":"        String[] inputSplit \u003d input.split(\" \");","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"marclamp"},"content":"        int taskIndex;","lastModifiedDate":"2024-02-14"},{"lineNumber":79,"author":{"gitId":"marclamp"},"content":"        String[] tempInputArgs;","lastModifiedDate":"2024-02-14"},{"lineNumber":80,"author":{"gitId":"marclamp"},"content":"        Task currTask;","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"marclamp"},"content":"        switch (inputSplit[0]) {","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"marclamp"},"content":"        case \"list\":","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"marclamp"},"content":"            return new ListAllCommand();","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"marclamp"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"marclamp"},"content":"            taskIndex \u003d Integer.parseInt(inputSplit[1]);","lastModifiedDate":"2024-02-14"},{"lineNumber":87,"author":{"gitId":"marclamp"},"content":"            return new MarkCommand(taskIndex);","lastModifiedDate":"2024-02-14"},{"lineNumber":88,"author":{"gitId":"marclamp"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"marclamp"},"content":"            taskIndex \u003d Integer.parseInt(inputSplit[1]);","lastModifiedDate":"2024-02-14"},{"lineNumber":90,"author":{"gitId":"marclamp"},"content":"            return new UnmarkCommand(taskIndex);","lastModifiedDate":"2024-02-14"},{"lineNumber":91,"author":{"gitId":"marclamp"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"marclamp"},"content":"            currTask \u003d generateTodoTaskFromString(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"marclamp"},"content":"            return new TaskCommand(currTask);","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"marclamp"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"marclamp"},"content":"            tempInputArgs \u003d input.split(\"/\");","lastModifiedDate":"2024-02-14"},{"lineNumber":96,"author":{"gitId":"marclamp"},"content":"            currTask \u003d generateDeadlineTaskFromString(tempInputArgs);","lastModifiedDate":"2024-02-15"},{"lineNumber":97,"author":{"gitId":"marclamp"},"content":"            return new TaskCommand(currTask);","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"marclamp"},"content":"        case \"event\":","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"marclamp"},"content":"            tempInputArgs \u003d input.split(\"/\");","lastModifiedDate":"2024-02-14"},{"lineNumber":100,"author":{"gitId":"marclamp"},"content":"            currTask \u003d generateEventTaskFromString(tempInputArgs);","lastModifiedDate":"2024-02-15"},{"lineNumber":101,"author":{"gitId":"marclamp"},"content":"            return new TaskCommand(currTask);","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"marclamp"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"marclamp"},"content":"            tempInputArgs \u003d input.split(\" \");","lastModifiedDate":"2024-02-14"},{"lineNumber":104,"author":{"gitId":"marclamp"},"content":"            return handleDeleteFromInput(tempInputArgs);","lastModifiedDate":"2024-02-15"},{"lineNumber":105,"author":{"gitId":"marclamp"},"content":"        case \"update\":","lastModifiedDate":"2024-02-17"},{"lineNumber":106,"author":{"gitId":"marclamp"},"content":"            return handleUpdateFromInput(input);","lastModifiedDate":"2024-02-17"},{"lineNumber":107,"author":{"gitId":"marclamp"},"content":"        case \"find\":","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"marclamp"},"content":"            String keyword \u003d input.substring(5);","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"marclamp"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2024-02-09"},{"lineNumber":110,"author":{"gitId":"marclamp"},"content":"        case \"today\":","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"marclamp"},"content":"            return new TasksTodayCommand();","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"marclamp"},"content":"        case \"help\":","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"marclamp"},"content":"            return new HelpCommand();","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"marclamp"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-07"},{"lineNumber":115,"author":{"gitId":"marclamp"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-02-07"},{"lineNumber":116,"author":{"gitId":"marclamp"},"content":"        default:","lastModifiedDate":"2024-02-07"},{"lineNumber":117,"author":{"gitId":"marclamp"},"content":"            return new UnrecognisedCommand();","lastModifiedDate":"2024-02-07"},{"lineNumber":118,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":119,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":120,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":121,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":122,"author":{"gitId":"marclamp"},"content":"     * Generates a \u003ccode\u003eTodoTask\u003c/code\u003e from a String input.","lastModifiedDate":"2024-02-15"},{"lineNumber":123,"author":{"gitId":"marclamp"},"content":"     * Private helper method for \u003ccode\u003eparse()\u003c/code\u003e method.","lastModifiedDate":"2024-02-15"},{"lineNumber":124,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":125,"author":{"gitId":"marclamp"},"content":"     * @param input input string","lastModifiedDate":"2024-02-20"},{"lineNumber":126,"author":{"gitId":"marclamp"},"content":"     * @return \u003ccode\u003eTodoTask\u003c/code\u003e according to input specification.","lastModifiedDate":"2024-02-15"},{"lineNumber":127,"author":{"gitId":"marclamp"},"content":"     * @throws ChaterpillarException if name of task is empty.","lastModifiedDate":"2024-02-15"},{"lineNumber":128,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":129,"author":{"gitId":"marclamp"},"content":"    private static Task generateTodoTaskFromString(String input) throws ChaterpillarException {","lastModifiedDate":"2024-02-20"},{"lineNumber":130,"author":{"gitId":"marclamp"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":131,"author":{"gitId":"marclamp"},"content":"            String taskName \u003d input.substring(5);","lastModifiedDate":"2024-02-20"},{"lineNumber":132,"author":{"gitId":"marclamp"},"content":"            return new TodoTask(taskName);","lastModifiedDate":"2024-02-15"},{"lineNumber":133,"author":{"gitId":"marclamp"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":134,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(\"Sorry, the taskName of the task todo cannot be empty.\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":135,"author":{"gitId":"marclamp"},"content":"                                            + \"The way to use the command is as such: todo taskname\");","lastModifiedDate":"2024-02-20"},{"lineNumber":136,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":137,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":138,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":139,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":140,"author":{"gitId":"marclamp"},"content":"     * Generates a \u003ccode\u003eDeadlineTask\u003c/code\u003e from a String input.","lastModifiedDate":"2024-02-15"},{"lineNumber":141,"author":{"gitId":"marclamp"},"content":"     * Private helper method for \u003ccode\u003eparse()\u003c/code\u003e method.","lastModifiedDate":"2024-02-15"},{"lineNumber":142,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":143,"author":{"gitId":"marclamp"},"content":"     * @param tempInputArgs input arguments","lastModifiedDate":"2024-02-15"},{"lineNumber":144,"author":{"gitId":"marclamp"},"content":"     * @return \u003ccode\u003eDeadlineTask\u003c/code\u003e according to input specification.","lastModifiedDate":"2024-02-15"},{"lineNumber":145,"author":{"gitId":"marclamp"},"content":"     * @throws ChaterpillarException if command or date is in the wrong format.","lastModifiedDate":"2024-02-15"},{"lineNumber":146,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":147,"author":{"gitId":"marclamp"},"content":"    private static Task generateDeadlineTaskFromString(String[] tempInputArgs) throws ChaterpillarException {","lastModifiedDate":"2024-02-15"},{"lineNumber":148,"author":{"gitId":"marclamp"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":149,"author":{"gitId":"marclamp"},"content":"            String taskName \u003d tempInputArgs[0].substring(9);","lastModifiedDate":"2024-02-15"},{"lineNumber":150,"author":{"gitId":"marclamp"},"content":"            String date \u003d tempInputArgs[1].substring(3);","lastModifiedDate":"2024-02-15"},{"lineNumber":151,"author":{"gitId":"marclamp"},"content":"            return new DeadlineTask(taskName, date);","lastModifiedDate":"2024-02-15"},{"lineNumber":152,"author":{"gitId":"marclamp"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":153,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(\"Sorry, this command is in the wrong format.\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":154,"author":{"gitId":"marclamp"},"content":"                                            + \"The way to use the command is: deadline taskname /by date_and_time\");","lastModifiedDate":"2024-02-20"},{"lineNumber":155,"author":{"gitId":"marclamp"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":156,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(\"Unable to add task, wrong date/time format!\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":157,"author":{"gitId":"marclamp"},"content":"                                            + \"Suggested format: DD/MM/YYYY HH:MM AM/PM\");","lastModifiedDate":"2024-03-06"},{"lineNumber":158,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":159,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":160,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":161,"author":{"gitId":"marclamp"},"content":"    private static Task generateEventTaskFromString(String[] tempInputArgs) throws ChaterpillarException {","lastModifiedDate":"2024-02-15"},{"lineNumber":162,"author":{"gitId":"marclamp"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":163,"author":{"gitId":"marclamp"},"content":"            String taskName \u003d tempInputArgs[0].substring(6);","lastModifiedDate":"2024-02-15"},{"lineNumber":164,"author":{"gitId":"marclamp"},"content":"            String date1 \u003d tempInputArgs[1].substring(5);","lastModifiedDate":"2024-02-15"},{"lineNumber":165,"author":{"gitId":"marclamp"},"content":"            String date2 \u003d tempInputArgs[2].substring(3);","lastModifiedDate":"2024-02-15"},{"lineNumber":166,"author":{"gitId":"marclamp"},"content":"            return new EventTask(taskName, date1, date2);","lastModifiedDate":"2024-02-15"},{"lineNumber":167,"author":{"gitId":"marclamp"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":168,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(\"Sorry, this command is in the wrong format.\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":169,"author":{"gitId":"marclamp"},"content":"                                            + \"The way to use the command is: event taskname\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":170,"author":{"gitId":"marclamp"},"content":"                                            + \"/from date_and_time /to date_and_time\");","lastModifiedDate":"2024-02-20"},{"lineNumber":171,"author":{"gitId":"marclamp"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":172,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(\"Unable to add task, wrong date/time format!\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":173,"author":{"gitId":"marclamp"},"content":"                                            + \"Suggested format: DD/MM/YYYY HH:MM AM/PM\");","lastModifiedDate":"2024-03-06"},{"lineNumber":174,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":175,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":176,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":177,"author":{"gitId":"marclamp"},"content":"    private static DeleteCommand handleDeleteFromInput(String[] tempInputArgs) throws ChaterpillarException {","lastModifiedDate":"2024-02-15"},{"lineNumber":178,"author":{"gitId":"marclamp"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":179,"author":{"gitId":"marclamp"},"content":"            int index \u003d Integer.parseInt(tempInputArgs[1]) - 1;","lastModifiedDate":"2024-02-15"},{"lineNumber":180,"author":{"gitId":"marclamp"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2024-02-15"},{"lineNumber":181,"author":{"gitId":"marclamp"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":182,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(\"Sorry, there is no number detected.\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":183,"author":{"gitId":"marclamp"},"content":"                                            + \"The correct way to use the command is: delete number\");","lastModifiedDate":"2024-02-20"},{"lineNumber":184,"author":{"gitId":"marclamp"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":185,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(\"Sorry, the format for this command is wrong.\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":186,"author":{"gitId":"marclamp"},"content":"                                            + \"The correct way to use the command is: delete number\");","lastModifiedDate":"2024-02-20"},{"lineNumber":187,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":188,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":189,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":190,"author":{"gitId":"marclamp"},"content":"    private static UpdateCommand handleUpdateFromInput(String input) throws ChaterpillarException {","lastModifiedDate":"2024-02-17"},{"lineNumber":191,"author":{"gitId":"marclamp"},"content":"        if (input.substring(6).isBlank()) {","lastModifiedDate":"2024-02-20"},{"lineNumber":192,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(\"Nothing to update?\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":193,"author":{"gitId":"marclamp"},"content":"                                            + \"You can use the following tags:\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":194,"author":{"gitId":"marclamp"},"content":"                                            + \"/name - to update the name of the task\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":195,"author":{"gitId":"marclamp"},"content":"                                            + \"/date - to update the date of the task\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":196,"author":{"gitId":"marclamp"},"content":"                                            + \"/start - to update the start date of the task\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":197,"author":{"gitId":"marclamp"},"content":"                                            + \"/end - to update the end date of the task\\n\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":198,"author":{"gitId":"marclamp"},"content":"                                            + \"e.g. update 3 /name new name of task /date new date\");","lastModifiedDate":"2024-02-20"},{"lineNumber":199,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":200,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":201,"author":{"gitId":"marclamp"},"content":"        String[] tempInputArgs;","lastModifiedDate":"2024-02-17"},{"lineNumber":202,"author":{"gitId":"marclamp"},"content":"        int index;","lastModifiedDate":"2024-02-17"},{"lineNumber":203,"author":{"gitId":"marclamp"},"content":"        String updatedName \u003d \"\";","lastModifiedDate":"2024-02-17"},{"lineNumber":204,"author":{"gitId":"marclamp"},"content":"        String updatedDate \u003d \"\";","lastModifiedDate":"2024-02-17"},{"lineNumber":205,"author":{"gitId":"marclamp"},"content":"        String updatedStartDate \u003d \"\";","lastModifiedDate":"2024-02-17"},{"lineNumber":206,"author":{"gitId":"marclamp"},"content":"        String updatedEndDate \u003d \"\";","lastModifiedDate":"2024-02-17"},{"lineNumber":207,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":208,"author":{"gitId":"marclamp"},"content":"        tempInputArgs \u003d input.split(\" \");","lastModifiedDate":"2024-02-17"},{"lineNumber":209,"author":{"gitId":"marclamp"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":210,"author":{"gitId":"marclamp"},"content":"            index \u003d Integer.parseInt(tempInputArgs[1]) - 1;","lastModifiedDate":"2024-02-17"},{"lineNumber":211,"author":{"gitId":"marclamp"},"content":"            if (index \u003c 0) {","lastModifiedDate":"2024-03-05"},{"lineNumber":212,"author":{"gitId":"marclamp"},"content":"                throw new ChaterpillarException(\"Index should not be less than 1.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":213,"author":{"gitId":"marclamp"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":214,"author":{"gitId":"marclamp"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":215,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(\"Invalid update command! Missing index of item to update.\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":216,"author":{"gitId":"marclamp"},"content":"                                            + \"The command should be as such:\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":217,"author":{"gitId":"marclamp"},"content":"                                            + \"update 3 ...\");","lastModifiedDate":"2024-02-20"},{"lineNumber":218,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":219,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":220,"author":{"gitId":"marclamp"},"content":"        tempInputArgs \u003d input.split(\"/name\");","lastModifiedDate":"2024-02-17"},{"lineNumber":221,"author":{"gitId":"marclamp"},"content":"        if (tempInputArgs.length \u003e 1) {","lastModifiedDate":"2024-02-17"},{"lineNumber":222,"author":{"gitId":"marclamp"},"content":"            updatedName \u003d parseUpdateArgs(tempInputArgs);","lastModifiedDate":"2024-02-17"},{"lineNumber":223,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":224,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":225,"author":{"gitId":"marclamp"},"content":"        tempInputArgs \u003d input.split(\"/date\");","lastModifiedDate":"2024-02-17"},{"lineNumber":226,"author":{"gitId":"marclamp"},"content":"        if (tempInputArgs.length \u003e 1) {","lastModifiedDate":"2024-02-17"},{"lineNumber":227,"author":{"gitId":"marclamp"},"content":"            updatedDate \u003d parseUpdateArgs(tempInputArgs);","lastModifiedDate":"2024-02-17"},{"lineNumber":228,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":229,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":230,"author":{"gitId":"marclamp"},"content":"        tempInputArgs \u003d input.split(\"/start\");","lastModifiedDate":"2024-02-17"},{"lineNumber":231,"author":{"gitId":"marclamp"},"content":"        if (tempInputArgs.length \u003e 1) {","lastModifiedDate":"2024-02-17"},{"lineNumber":232,"author":{"gitId":"marclamp"},"content":"            updatedStartDate \u003d parseUpdateArgs(tempInputArgs);","lastModifiedDate":"2024-02-17"},{"lineNumber":233,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":234,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":235,"author":{"gitId":"marclamp"},"content":"        tempInputArgs \u003d input.split(\"/end\");","lastModifiedDate":"2024-02-17"},{"lineNumber":236,"author":{"gitId":"marclamp"},"content":"        if (tempInputArgs.length \u003e 1) {","lastModifiedDate":"2024-02-17"},{"lineNumber":237,"author":{"gitId":"marclamp"},"content":"            updatedEndDate \u003d parseUpdateArgs(tempInputArgs);","lastModifiedDate":"2024-02-17"},{"lineNumber":238,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":239,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":240,"author":{"gitId":"marclamp"},"content":"        return new UpdateCommand(index, updatedName, updatedDate, updatedStartDate, updatedEndDate);","lastModifiedDate":"2024-02-17"},{"lineNumber":241,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":242,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":243,"author":{"gitId":"marclamp"},"content":"    private static String parseUpdateArgs(String[] tempInputArgs) throws ChaterpillarException {","lastModifiedDate":"2024-02-17"},{"lineNumber":244,"author":{"gitId":"marclamp"},"content":"        String output \u003d tempInputArgs[1].split(\" /\")[0].trim();","lastModifiedDate":"2024-02-17"},{"lineNumber":245,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":246,"author":{"gitId":"marclamp"},"content":"        if (output.isBlank()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":247,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(\"Invalid update command! You can use the following tags:\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":248,"author":{"gitId":"marclamp"},"content":"                                            + \"/name - to update the name of the task\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":249,"author":{"gitId":"marclamp"},"content":"                                            + \"/date - to update the date of the task\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":250,"author":{"gitId":"marclamp"},"content":"                                            + \"/start - to update the start date of the task\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":251,"author":{"gitId":"marclamp"},"content":"                                            + \"/end - to update the end date of the task\\n\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":252,"author":{"gitId":"marclamp"},"content":"                                            + \"e.g. update 3 /name new name of task /date new date\");","lastModifiedDate":"2024-02-20"},{"lineNumber":253,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":254,"author":{"gitId":"marclamp"},"content":"        return output;","lastModifiedDate":"2024-02-17"},{"lineNumber":255,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":256,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":256}},{"path":"src/main/java/chaterpillar/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import java.nio.charset.Charset;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"import chaterpillar.exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"import chaterpillar.parser.Parser;","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"import chaterpillar.tasks.Task;","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"import chaterpillar.tasks.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":" * Custom \u003ccode\u003eStorage\u003c/code\u003e for file reading/writing pero\u003dsona.","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":" * @author marclamp","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"public class Storage {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"    public static final String CHATBOT_PATH_NAME \u003d \"./data\";","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"    public static final String CHATBOT_FILE_NAME \u003d \"history.txt\";","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"     * Gets the path of the file that stores the list of tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"     * Creates the directory if it is not found.","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"     * Creates the file if it does not exist.","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"     * @return \u003ccode\u003ePath\u003c/code\u003e of the file","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"     * @throws ChaterpillarException if the path string cannot be converted","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"     *     to a path, or if the parent directory does not exist, or if an","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"     *     I/O error occurred.","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"    public static Path getHistoryFilePath() throws ChaterpillarException {","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"            Path chatbotDataFilePath \u003d Paths.get(CHATBOT_PATH_NAME);","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"            if (!Files.exists(chatbotDataFilePath)) {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"                Files.createDirectory(chatbotDataFilePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"            Path chatbotFilePath \u003d chatbotDataFilePath.resolve(CHATBOT_FILE_NAME);","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"            if (!Files.exists(chatbotFilePath)) {","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"                Files.createFile(chatbotFilePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"            return chatbotFilePath;","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"        } catch (InvalidPathException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(\"Error: path string cannot be converted to a Path\");","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(\"Error in I/O or the parent directory does not exist.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"     * Loads the contents of the file and inputs it into the listOfTasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"     * @return An \u003ccode\u003eArrayList\u003c/code\u003e of \u003ccode\u003etasks.Task\u003c/code\u003e objects.","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"     * @throws ChaterpillarException if there is an error opening the file,","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"     *     or when the formatting of a line is in the wrong format.","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"    public TaskList loadFromFile() throws ChaterpillarException {","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"        Path path \u003d getHistoryFilePath();","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"        try (BufferedReader reader \u003d Files.newBufferedReader(path)) {","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"marclamp"},"content":"            String str;","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"            while ((str \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"marclamp"},"content":"                Task task \u003d Parser.parseFromFile(str);","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"marclamp"},"content":"                newList.add(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"marclamp"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"marclamp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(\"Error in opening the file.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"marclamp"},"content":"        return new TaskList(newList);","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"marclamp"},"content":"     * Saves the entire list of Tasks into the file, by first clearing its contents.","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":81,"author":{"gitId":"marclamp"},"content":"     * @throws ChaterpillarException if there are errors writing to the file.","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"marclamp"},"content":"    public void saveAllToFile(TaskList tasks) throws ChaterpillarException {","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"marclamp"},"content":"        Path path \u003d getHistoryFilePath();","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"marclamp"},"content":"        try (BufferedWriter writer \u003d Files.newBufferedWriter(path, Charset.defaultCharset())) {","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"marclamp"},"content":"            writer.write(\"\"); // clears the file","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"marclamp"},"content":"            StringBuilder strBdr \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"marclamp"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"marclamp"},"content":"                String str \u003d task.formatStringForSaving();","lastModifiedDate":"2024-02-14"},{"lineNumber":90,"author":{"gitId":"marclamp"},"content":"                strBdr.append(str).append(\"\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"marclamp"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"marclamp"},"content":"            writer.write(strBdr.toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"marclamp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(\"Error in writing to the file.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":97}},{"path":"src/main/java/chaterpillar/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import chaterpillar.datetime.DateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import chaterpillar.exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":" * Represents a task with a deadline. A \u003ccode\u003eDeadlineTask\u003c/code\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":" * object contains its description or name, represented by a String,","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":" * a boolean indicating whether the task is marked, and","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":" * a String representing the date and/or time of deadline.","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":" * @author marclamp","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    private DateTime dateTime;","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"     * Basic constructor","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"     * @param taskName name of task to be tracked","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"    public DeadlineTask(String taskName, String dateTime) throws ChaterpillarException {","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"        super(taskName);","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"        this.dateTime \u003d new DateTime(dateTime);","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"        this.setHasDate();","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"     * Overloaded Constructor with date/time specified","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"     * and marked status","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"     * @param taskname name of task to be tracked","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"     * @param dateTime Date and/or Time of deadline","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"     * @param marked status of task (marked or unmarked)","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"    public DeadlineTask(String taskname, Boolean marked, String dateTime) throws ChaterpillarException {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"        super(taskname, marked);","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"        this.dateTime \u003d new DateTime(dateTime);","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"        this.setHasDate();","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"    public void updateDate(String updatedDate) throws ChaterpillarException {","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"        if (!updatedDate.isBlank()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"            this.dateTime \u003d new DateTime(updatedDate);","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"     * Checks if the task falls on the same day as the date specified","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"     * @param dt date specified","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e if the task falls on the same day","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"    public boolean isWithinDate(DateTime dt) {","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"        return this.dateTime.isSameDay(dt);","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"    public String formatStringForSaving() {","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"        return \"D|\" + super.formatStringForSaving() + \"|\" + this.dateTime;","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"                + String.format(\" (by: %s)\", this.dateTime);","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"marclamp":68}},{"path":"src/main/java/chaterpillar/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import chaterpillar.datetime.DateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import chaterpillar.exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":" * Represents a task which is an event. A \u003ccode\u003etasks.EventTask\u003c/code\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":" * object contains its description or name, represented by a String,","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":" * a boolean indicating whether the task is marked,","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":" * a String representing the start date and/or time of the event, and","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":" * a String representing the end date and/or time of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":" * @author marclamp","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"public class EventTask extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"    private DateTime dateTimeFrom;","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"    private DateTime dateTimeTo;","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"     * Constructor with event start and end","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"     * date and/or time specified","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"     * @param taskName name of task to be tracked","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"     * @param dateTimeFrom start date and/or time of the event","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"     * @param dateTimeTo end date and/or time of the event","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"    public EventTask(String taskName, String dateTimeFrom, String dateTimeTo)","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"            throws ChaterpillarException {","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"        super(taskName);","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"        this.dateTimeFrom \u003d new DateTime(dateTimeFrom);","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"        this.dateTimeTo \u003d new DateTime(dateTimeTo);","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"        this.setHasDate();","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"     * Overloaded Constructor with event start and end","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"     * date and/or time specified","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"     * @param taskname name of task to be tracked","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"     * @param isMarked \u003ccode\u003eBoolean\u003c/code\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"     * @param dateTimeFrom start date and/or time of the event","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"     * @param dateTimeTo end date and/or time of the event","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"    public EventTask(String taskname, Boolean isMarked, String dateTimeFrom, String dateTimeTo)","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"            throws ChaterpillarException {","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"        super(taskname, isMarked);","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"        this.dateTimeFrom \u003d new DateTime(dateTimeFrom);","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"        this.dateTimeTo \u003d new DateTime(dateTimeTo);","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"        this.setHasDate();","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"    public void updateStartDate(String updatedStartDate) throws ChaterpillarException {","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"        if (!updatedStartDate.isBlank()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"            this.dateTimeFrom \u003d new DateTime(updatedStartDate);","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"    public void updateEndDate(String updatedEndDate) throws ChaterpillarException {","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"        if (!updatedEndDate.isBlank()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"            this.dateTimeTo \u003d new DateTime(updatedEndDate);","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"     * Checks if the date specified overlaps with the event duration.","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"     * @param dt date specified.","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"marclamp"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e if there is an overlap.","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"marclamp"},"content":"    public boolean isWithinDate(DateTime dt) {","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"marclamp"},"content":"        return dt.isWithinDate(this.dateTimeFrom, this.dateTimeTo);","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":76,"author":{"gitId":"marclamp"},"content":"    public String formatStringForSaving() {","lastModifiedDate":"2024-02-14"},{"lineNumber":77,"author":{"gitId":"marclamp"},"content":"        return \"E|\" + super.formatStringForSaving() + \"|\"","lastModifiedDate":"2024-02-14"},{"lineNumber":78,"author":{"gitId":"marclamp"},"content":"                + this.dateTimeFrom + \"|\"","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"marclamp"},"content":"                + this.dateTimeTo;","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":81,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":82,"author":{"gitId":"marclamp"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":83,"author":{"gitId":"marclamp"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"marclamp"},"content":"                + String.format(\" (from: %s to: %s)\", this.dateTimeFrom, this.dateTimeTo);","lastModifiedDate":"2024-02-06"},{"lineNumber":85,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":86,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"marclamp":86}},{"path":"src/main/java/chaterpillar/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import chaterpillar.datetime.DateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import chaterpillar.exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":" * Represents a task. A \u003ccode\u003etasks.Task\u003c/code\u003e object contains its","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":" * description or name, represented by a String, and a boolean","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":" * indicating whether the task is marked.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":" * @author marclamp","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"public class Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"    private boolean isMarked;","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    private String taskName;","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"    private boolean hasDate;","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"     * Basic constructor","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"     * @param taskName name of task to be tracked","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"    public Task(String taskName) {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"        this.taskName \u003d taskName.trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"        this.hasDate \u003d false;","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"     * Overloaded constructor with marked status","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"     * @param taskName name of task to be tracked","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"     * @param isMarked status of task (marked or unmarked)","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"    public Task(String taskName, Boolean isMarked) {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"        this.hasDate \u003d false;","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"     * Sets this task as marked, by setting the","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"     * boolean flag to be true.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"    public void mark() {","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"        this.isMarked \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"     * Sets this task as unmarked, by setting the","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"     * boolean flag to be false.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"     * Sets this task to have date, by setting the","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"     * boolean flag to be true.","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"    public void setHasDate() {","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"        this.hasDate \u003d true;","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"     * Gets the hasDate status.","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"    public boolean getHasDate() {","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"marclamp"},"content":"        return this.hasDate;","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"marclamp"},"content":"     * Updates the name of the \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"marclamp"},"content":"     * @param updatedName the new name","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"marclamp"},"content":"    public void updateName(String updatedName) {","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"marclamp"},"content":"        if (!updatedName.isBlank()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"marclamp"},"content":"            this.taskName \u003d updatedName;","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"marclamp"},"content":"     * Updates the date of the \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"marclamp"},"content":"     * @param updatedDate the new date","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"marclamp"},"content":"     * @throws ChaterpillarException if the task does not have a date to be updated","lastModifiedDate":"2024-02-18"},{"lineNumber":88,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":89,"author":{"gitId":"marclamp"},"content":"    public void updateDate(String updatedDate) throws ChaterpillarException {","lastModifiedDate":"2024-02-17"},{"lineNumber":90,"author":{"gitId":"marclamp"},"content":"        if (!updatedDate.isBlank()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":91,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(\"This task type does not contain a date.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":92,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":93,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":94,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":95,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":96,"author":{"gitId":"marclamp"},"content":"     * Updates the start date of the \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":97,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":98,"author":{"gitId":"marclamp"},"content":"     * @param updatedStartDate the new start date","lastModifiedDate":"2024-02-18"},{"lineNumber":99,"author":{"gitId":"marclamp"},"content":"     * @throws ChaterpillarException if the task does not have a date to be updated","lastModifiedDate":"2024-02-18"},{"lineNumber":100,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":101,"author":{"gitId":"marclamp"},"content":"    public void updateStartDate(String updatedStartDate) throws ChaterpillarException {","lastModifiedDate":"2024-02-17"},{"lineNumber":102,"author":{"gitId":"marclamp"},"content":"        if (!updatedStartDate.isBlank()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":103,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(\"This task type does not contain a start or end date.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":104,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":105,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":106,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":107,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":108,"author":{"gitId":"marclamp"},"content":"     * Updates the end date of the \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":109,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":110,"author":{"gitId":"marclamp"},"content":"     * @param updatedEndDate the new end date","lastModifiedDate":"2024-02-18"},{"lineNumber":111,"author":{"gitId":"marclamp"},"content":"     * @throws ChaterpillarException if the task does not have a date to be updated","lastModifiedDate":"2024-02-18"},{"lineNumber":112,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":113,"author":{"gitId":"marclamp"},"content":"    public void updateEndDate(String updatedEndDate) throws ChaterpillarException {","lastModifiedDate":"2024-02-17"},{"lineNumber":114,"author":{"gitId":"marclamp"},"content":"        if (!updatedEndDate.isBlank()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":115,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(\"This task type does not contain a start or end date.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":116,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":117,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":118,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":119,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"marclamp"},"content":"     * Returns a formatted string meant for saving into the","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"marclamp"},"content":"     * text file.","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":123,"author":{"gitId":"marclamp"},"content":"     * @return formatted String, consisting of isMarked status and taskname","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"marclamp"},"content":"    public String formatStringForSaving() {","lastModifiedDate":"2024-02-14"},{"lineNumber":126,"author":{"gitId":"marclamp"},"content":"        return this.isMarked + \"|\" + this.taskName;","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":128,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":129,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":130,"author":{"gitId":"marclamp"},"content":"     * checks if Task is within the date specified.","lastModifiedDate":"2024-02-09"},{"lineNumber":131,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":132,"author":{"gitId":"marclamp"},"content":"     * @param dt date specified","lastModifiedDate":"2024-02-09"},{"lineNumber":133,"author":{"gitId":"marclamp"},"content":"     * @return \u003ccode\u003efalse\u003c/code\u003e by default.","lastModifiedDate":"2024-02-09"},{"lineNumber":134,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":135,"author":{"gitId":"marclamp"},"content":"    public boolean isWithinDate(DateTime dt) {","lastModifiedDate":"2024-02-09"},{"lineNumber":136,"author":{"gitId":"marclamp"},"content":"        return false;","lastModifiedDate":"2024-02-06"},{"lineNumber":137,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":138,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":139,"author":{"gitId":"marclamp"},"content":"    public boolean containsInName(String keyword) {","lastModifiedDate":"2024-02-09"},{"lineNumber":140,"author":{"gitId":"marclamp"},"content":"        return this.taskName.contains(keyword);","lastModifiedDate":"2024-02-09"},{"lineNumber":141,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":142,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":143,"author":{"gitId":"marclamp"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":144,"author":{"gitId":"marclamp"},"content":"        return (this.isMarked ? \"[X] \" : \"[ ] \") + this.taskName;","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":146,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"marclamp":146}},{"path":"src/main/java/chaterpillar/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import chaterpillar.datetime.DateTime;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":" * Custom wrapper class for list of tasks in this application.","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":" * @author marclamp","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"public class TaskList {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"     * Basic constructor that creates a new empty","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"     * \u003ccode\u003eTaskList\u003c/code\u003e object.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"     * Overloaded constructor that creates a new","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"     * \u003ccode\u003eTaskList\u003c/code\u003e object filled with","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"     * the list of tasks provided.","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"     * @param tasks list of tasks","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"     * Gets a task at the specified index.","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"     * @param index specified index to be retrieved","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"     * @return \u003ccode\u003eTask\u003c/code\u003e object at specified index","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"    public Task get(int index) {","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"     * Gets the entire list of tasks","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"     * @return \u003ccode\u003eArrayList\u003c/code\u003e of \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"        return this.tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"     * Gives the number of tasks in the list.","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"     * @return number of tasks","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"    public int size() {","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"     * Adds a \u003ccode\u003eTask\u003c/code\u003e to the list.","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"     * @param task \u003ccode\u003eTask\u003c/code\u003e to be added","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"marclamp"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"marclamp"},"content":"        assert !this.tasks.isEmpty() : \"ArrayList\u003cTask\u003e should not be empty after add function\";","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"marclamp"},"content":"     * Deletes a \u003ccode\u003eTask\u003c/code\u003e at the specified index.","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"marclamp"},"content":"     * @param index specified index to be deleted","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"marclamp"},"content":"     * @return the \u003ccode\u003eTask\u003c/code\u003e that was deleted.","lastModifiedDate":"2024-02-14"},{"lineNumber":78,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"marclamp"},"content":"    public Task deleteTaskAtIndex(int index) {","lastModifiedDate":"2024-02-14"},{"lineNumber":80,"author":{"gitId":"marclamp"},"content":"        return this.tasks.remove(index);","lastModifiedDate":"2024-02-14"},{"lineNumber":81,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"marclamp"},"content":"     * Gets a list of tasks where its date corresponds to the","lastModifiedDate":"2024-02-09"},{"lineNumber":85,"author":{"gitId":"marclamp"},"content":"     * specified date.","lastModifiedDate":"2024-02-09"},{"lineNumber":86,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":87,"author":{"gitId":"marclamp"},"content":"     * @param date specified date.","lastModifiedDate":"2024-02-09"},{"lineNumber":88,"author":{"gitId":"marclamp"},"content":"     * @return \u003ccode\u003eTaskList\u003c/code\u003e object containing a list of tasks","lastModifiedDate":"2024-02-09"},{"lineNumber":89,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":90,"author":{"gitId":"marclamp"},"content":"    public TaskList getTasksOnDate(DateTime date) {","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"marclamp"},"content":"        ArrayList\u003cTask\u003e tasksToDisplayList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"marclamp"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"marclamp"},"content":"            if (task.getHasDate()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":94,"author":{"gitId":"marclamp"},"content":"                if (task.isWithinDate(date)) {","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"marclamp"},"content":"                    tasksToDisplayList.add(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"marclamp"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"marclamp"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"marclamp"},"content":"        return new TaskList(tasksToDisplayList);","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":101}},{"path":"src/main/java/chaterpillar/tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":" * Represents a task to be done. A \u003ccode\u003eToDoTask\u003c/code\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":" * object contains its description or name, represented by a String, and","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":" * a boolean indicating whether the task is marked.","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":" * @author marclamp","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"     * Basic Constructor","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"     * @param taskName name of task to be tracked","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"    public TodoTask(String taskName) {","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"        super(taskName);","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"     * Overloaded Constructor with isMarked status","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"     * @param taskName name of task to be tracked","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"     * @param isMarked status of task (marked or unmarked)","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"    public TodoTask(String taskName, Boolean isMarked) {","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"        super(taskName, isMarked);","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"    public String formatStringForSaving() {","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"        return \"T|\" + super.formatStringForSaving();","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"marclamp":38}},{"path":"src/main/java/chaterpillar/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":" * UI class for this application. Handles all the printing of","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":" * things to the CLI and GUI.","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":" * @author marclamp","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"public class Ui {","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"    private static final String LOGO \u003d","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"              \"                           .    .\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"            + \"                            )  (\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"            + \"      _ _ _ _ _ _ _ _ _ _ _(.--.)\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"            + \"    {{ { { { { { { { { { { ( \u0027v\u0027)\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"            + \"     \u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e`--\u0027\u003e\";","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"    private static final BufferedReader reader \u003d new BufferedReader(","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"            new InputStreamReader((System.in)));","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"     * Prints out the message given in the String argument.","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"     * @param s the message to be printed","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"    public void echo(String s) {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"        System.out.println(s);","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"     * Prints out a horizontal line, typically used to segment","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"     * the start and end of a message by the chatbot.","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"    public void printHorizontalLine() {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"        String line \u003d \"-\".repeat(50);","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"        echo(line);","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"     * Prints the greeting message by the Chaterpillar chatbot.","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"     * It also prints the horizontal lines as dividers before and after the message.","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"     * @return basic greeting message.","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"    public String greet() {","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"        String output \u003d","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"                \"Hello! I\u0027m Chaterpillar\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"        echo(LOGO);","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"        echo(output);","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"        return output;","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"     * Reads the string of command in the input line.","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e of command.","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"    public String readCommand() throws IOException {","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"        return reader.readLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":68}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"\u003cfx:root alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"      \u003cVBox fx:id\u003d\"messageBox\" alignment\u003d\"CENTER_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"              \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"                  \u003cInsets left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"               \u003c/VBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"            \u003cLabel fx:id\u003d\"help\" style\u003d\"-fx-font-family: ITALICS;\" textFill\u003d\"#999999\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"                  \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"               \u003c/VBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"         \u003c/children\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"      \u003cVBox alignment\u003d\"TOP_RIGHT\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"              \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"45.0\" fitWidth\u003d\"45.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"               \u003c/VBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"         \u003c/children\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"marclamp":38}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"\u003cAnchorPane minWidth\u003d\"500.0\" prefHeight\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"chaterpillar.launcher.MainWindow\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"   \u003cVBox maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"      \u003cchildren\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"          \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"600.0\" vvalue\u003d\"1.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"              \u003ccontent\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"                  \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" style\u003d\"-fx-background-color: linear-gradient(to bottom, #0093E9, #80D0C7);\" /\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"              \u003c/content\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"          \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"         \u003cHBox VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"                \u003cTextField fx:id\u003d\"userInput\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"40.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" prefWidth\u003d\"322.0\" promptText\u003d\"Type here...\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"                \u003cButton fx:id\u003d\"sendButton\" minHeight\u003d\"40.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" prefWidth\u003d\"80.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"            \u003c/children\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"      \u003c/children\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"   \u003c/VBox\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"marclamp":26}},{"path":"src/test/java/chaterpillar/datetime/DateTimeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.datetime;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"import chaterpillar.exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"public class DateTimeTest {","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"    public void isSameDay_sameDay_success() throws ChaterpillarException {","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"        // same date with same input string to be parsed","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"        assertTrue(new DateTime(\"09/02/2024\").isSameDay(new DateTime(\"9/02/2024\")));","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"        // same date with different input string","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"        assertTrue(new DateTime(\"09/02/2024\").isSameDay(new DateTime(\"9/Feb/2024 2 PM\")));","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"        assertTrue(new DateTime(\"09/02/2024\").isSameDay(new DateTime(\"9 Feb\")));","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"        assertTrue(new DateTime(\"09/02/2024 1400\").isSameDay(new DateTime(\"9 Feb 2 PM\")));","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"        // different date","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"        assertFalse(new DateTime(\"09/02/2024\").isSameDay(new DateTime(\"10/02/2023\")));","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"    public void dateTime_invalidInput_exceptionThrown() {","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"            new DateTime(\"invalid date time format\");","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"        } catch (ChaterpillarException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"            assertEquals(\"Error in parsing string for date/time.\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"                         + \"I accept quite a number of common date format, \\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"                         + \"but here is one you can use: DD/MM/YYY HH:MM\", e.getMessage());","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"marclamp":36}},{"path":"src/test/java/chaterpillar/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package chaterpillar.parser;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import chaterpillar.commands.ExitCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"import chaterpillar.commands.HelpCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"import chaterpillar.commands.ListAllCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"import chaterpillar.commands.TasksTodayCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"import chaterpillar.commands.UnrecognisedCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"import chaterpillar.exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    public void parse_validInputs_success() throws ChaterpillarException {","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"        // correct classes being called","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"        assertEquals(ListAllCommand.class, Parser.parse(\"list\").getClass());","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"        assertEquals(TasksTodayCommand.class, Parser.parse(\"today\").getClass());","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"        assertEquals(HelpCommand.class, Parser.parse(\"help\").getClass());","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"        assertEquals(ExitCommand.class, Parser.parse(\"bye\").getClass());","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"        assertEquals(UnrecognisedCommand.class, Parser.parse(\"funny text\").getClass());","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"        // ToDO: Write Stubs for testing","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"marclamp":25}},{"path":"text-ui-test/data/history.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"T|true|read book","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"D|true|return book|6/Feb/2024","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"E|false|project meeting|8/Feb/2024 02:00 PM|8/Feb/2024 04:00 PM","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"T|true|join sports club","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"D|false|finish this|6/Feb/2024","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"E|false|lunch plans|7/Feb/2024 02:00 PM|7/Feb/2024 04:00 PM","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"todo read book","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"deadline return book /by 6 Feb","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"event project meeting /from 8 Feb 2 PM /to 8 Feb 4 PM","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"todo join sports club","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"todo borrow book","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"mark 1","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"mark 2","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"mark 4","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"delete 5","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"deadline finish this /by 6 Feb","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"event lunch plans /from 2 PM /to 4 PM","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"list","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"today","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"bye","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"marclamp":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"java -classpath ..\\bin Chaterpillar \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"marclamp":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"java -classpath ../bin Chaterpillar \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"marclamp":1,"-":37}}]
