[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Apzure":16,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"## Bird User Guide","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"**Bird** is a simple CLI-optimized task manager application.","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"**1. Listing and Searching Tasks**","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"* **list**: ","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"    * Description: Displays a numbered list of all the tasks in your list.","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"    * Example Output:","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"       ```","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"       Here are the tasks in your list:","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"       1.[T][] Homework","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"       2.[D][] Shopping (by: Feb 24 2024)","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"      ``` ","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"* **find KEYWORD**: ","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"    * Description: Searches for tasks containing the specified keyword and displays matching results.","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"    * Example Input: `find home`","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"    * Example Output:","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"       ```","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"       Here are the matching tasks in your list:","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"       1.[T][] Homework","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"       ```","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"**2. Adding Tasks**","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"* **deadline NAME /by BY-DATE**: ","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"    * Description: Adds a deadline task with a specific due date.","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"    * Example Input: `deadline Submit project /by 2024-02-25`","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"    * Example Output:","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"      ```","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"      Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"      [D][] Submit project (by: Feb 25 2024)","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"      Now you have 1 tasks in the list.","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"      ```","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"* **event NAME /from FROM-DATE /to TO-DATE**: ","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"    * Description: Adds an event task with a start and end date. ","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"    * Example Input: `event Study /from 2024-02-24  /to 2024-02-28` ","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"    * Example Output:","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"      ```","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"      Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"      [E][] Study (from: Feb 24 2024 to: Feb 28 2024)","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"      Now you have 1 tasks in the list.","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"      ```","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"* **todo NAME**: ","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"    * Description: Adds a simple to-do task without a due date.","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"    * Example Input: `todo Call dentist`","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"    * Example Output:","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      ```","lastModifiedDate":"2024-01-07"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"      Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"      [T][] Call Dentist","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"      Now you have 1 tasks in the list.","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      ```","lastModifiedDate":"2024-01-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"* **Important! - Dates are to be formatted as yyyy-mm-dd**","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"**3. Modifying Tasks**","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"* **mark INDEX**: ","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"    * Description: Marks a task as completed. ","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"    * Example Input: `mark 2`","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"    * Output: The list updates, showing the 2nd task as completed ([X] instead of [ ])","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"* **unmark INDEX**:","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"    * Description: Marks a task as incomplete.","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"    * Example Input: `unmark 1`","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"    * Output:  The list updates, showing the 1st task as incomplete ([ ] instead of [X])","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"* **delete INDEX**: ","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"    * Description: Deletes a task from the list.","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"    * Example Input: `delete 3`","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"    * Output: The 3rd task is removed, and the list is renumbered accordingly.","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"* Note: **INDEX** follows 1-based Indexing. ","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"Apzure"},"content":"**4. Sorting**","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"Apzure"},"content":"* **sort**: ","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"Apzure"},"content":"    * Description: Sorts the list by due date in ascending order. For event tasks, the TO-DATE is used for comparison. ","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"Apzure"},"content":"      Todo tasks (which do not have dates) are placed last.","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"Apzure"},"content":"    * Example Input: `sort`","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"Apzure"},"content":"    * Example Output:","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"Apzure"},"content":"      ```","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"Apzure"},"content":"      Here are the tasks in your list:","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"Apzure"},"content":"      1. [D][] Task (by: Feb 20 2024)","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"Apzure"},"content":"      2. [E][] Study session (from: Feb 15 2024 to: Feb 28 2024)","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"Apzure"},"content":"      3. [T][] Call dentist","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"Apzure"},"content":"      ```","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":96,"author":{"gitId":"Apzure"},"content":"**5. Exiting**","lastModifiedDate":"2024-02-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":98,"author":{"gitId":"Apzure"},"content":"* **bye**: ","lastModifiedDate":"2024-02-22"},{"lineNumber":99,"author":{"gitId":"Apzure"},"content":"    * Description: Quits the application.","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"Apzure":80,"-":19}},{"path":"src/main/java/Duke/ArgumentNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":" * Represents an exception thrown when a Duke application command is used without providing the necessary arguments.","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"public class ArgumentNotFoundException extends DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"     * Constructs a new ArgumentNotFoundException with a descriptive error message that includes the affected command.","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"     * @param command The command that was missing required arguments.","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"    public ArgumentNotFoundException(String command) {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"        super(\"Arguments are required for \" + command);","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Apzure":16}},{"path":"src/main/java/Duke/Bird.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":" * This class represents the main driver of the application.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":" * It initializes the task list, storage, and user interface, and starts the user interface.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"public class Bird {","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"    private CommandHandler commandHandler;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"     * Constructs a new Bird ChatBot.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"     * Initializes the task list, storage, and user interface, and starts the user interface.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"    public Bird() {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"        TaskList.create();","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"        Storage.init();","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"        commandHandler \u003d new CommandHandler();","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"     * Gets the response for a given user input by executing the corresponding command.","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"     * @return The response generated by executing the command.","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"        String response;","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"            response \u003d commandHandler.executeCommand(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"        assert response !\u003d null: \"Response returned by Duke should not be null!\";","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"        return response;","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"     * Generates a greeting message","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"    public String greet() {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"        return \"Hello I\u0027m Bird! \\n\" +","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"                \"What can I do for you?\";","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Apzure":45}},{"path":"src/main/java/Duke/CommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":" * This class handles user commands.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":" * It provides methods to execute commands.","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"public class CommandHandler {","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"    public enum Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"        BYE,","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"        LIST,","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"        SORT,","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"        MARK,","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"        UNMARK,","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"        DELETE,","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"        TODO,","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"        DEADLINE,","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"        EVENT,","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"        FIND","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"     * Executes the specified command.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"     * @param userInput the command to execute","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"     * @return the response of the chatbot","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"     * @throws DukeException if the command is not recognized or if an error occurs while executing the command","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"    public String executeCommand(String userInput) throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"        String[] words \u003d userInput.split(\"\\\\s+\");","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"        Command command \u003d getCommand(words[0]);","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"        String output;","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"        if (command \u003d\u003d Command.BYE || command \u003d\u003d Command.LIST || command \u003d\u003d Command.SORT) {","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"            output \u003d handleSimpleCommands(command);","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"        } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"            String arguments \u003d getCommandArguments(userInput, command);","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"            output \u003d handleComplexCommands(command, arguments);","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"        Storage.store();","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"        assert output !\u003d null: \"Output should not be null!\";","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"        return output;","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"     * Retrieves the command from the user input.","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"     * @param commandString the string representation of the command","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"     * @return the Command corresponding to the command string","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"     * @throws CommandNotFoundException if the command string does not correspond to a valid command","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"    private Command getCommand(String commandString) throws CommandNotFoundException {","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"            return Command.valueOf(commandString.toUpperCase());","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"            throw new CommandNotFoundException(commandString);","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"     * Handles simple commands that do not require additional arguments.","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"     * @param command the command to handle","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"     * @return the response of the chatbot","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"     * @throws IllegalArgumentException if the command is not a simple command","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"    private String handleSimpleCommands(Command command) {","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"        switch (command) {","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"            case BYE:","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"                return \"bye\";","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"            case LIST:","lastModifiedDate":"2024-01-26"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"                return TaskList.list();","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"Apzure"},"content":"            case SORT:","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"                return TaskList.sortTasks();","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"            default:","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"Apzure"},"content":"                throw new IllegalArgumentException(\"Invalid command: \" + command);","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"Apzure"},"content":"     * Retrieves the arguments for a command from the user input.","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":85,"author":{"gitId":"Apzure"},"content":"     * @param userInput the user input","lastModifiedDate":"2024-02-11"},{"lineNumber":86,"author":{"gitId":"Apzure"},"content":"     * @param command the command to retrieve arguments for","lastModifiedDate":"2024-02-11"},{"lineNumber":87,"author":{"gitId":"Apzure"},"content":"     * @return the arguments for the command","lastModifiedDate":"2024-02-11"},{"lineNumber":88,"author":{"gitId":"Apzure"},"content":"     * @throws ArgumentNotFoundException if the user input does not contain the required arguments for the command","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":90,"author":{"gitId":"Apzure"},"content":"    private String getCommandArguments(String userInput, Command command) throws ArgumentNotFoundException {","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"Apzure"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"Apzure"},"content":"            return userInput.substring(command.name().length() + 1);","lastModifiedDate":"2024-02-11"},{"lineNumber":93,"author":{"gitId":"Apzure"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":94,"author":{"gitId":"Apzure"},"content":"            throw new ArgumentNotFoundException(command.name());","lastModifiedDate":"2024-01-26"},{"lineNumber":95,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":97,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":98,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":99,"author":{"gitId":"Apzure"},"content":"     * Handles complex commands that require additional arguments.","lastModifiedDate":"2024-02-11"},{"lineNumber":100,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":101,"author":{"gitId":"Apzure"},"content":"     * @param command the command to handle","lastModifiedDate":"2024-02-11"},{"lineNumber":102,"author":{"gitId":"Apzure"},"content":"     * @param arguments the arguments for the command","lastModifiedDate":"2024-02-11"},{"lineNumber":103,"author":{"gitId":"Apzure"},"content":"     * @return the response of the chatbot","lastModifiedDate":"2024-02-11"},{"lineNumber":104,"author":{"gitId":"Apzure"},"content":"     * @throws DukeException if the arguments are invalid","lastModifiedDate":"2024-02-11"},{"lineNumber":105,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":106,"author":{"gitId":"Apzure"},"content":"    private String handleComplexCommands(Command command, String arguments) throws DukeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":107,"author":{"gitId":"Apzure"},"content":"        switch (command) {","lastModifiedDate":"2024-01-25"},{"lineNumber":108,"author":{"gitId":"Apzure"},"content":"            case MARK:","lastModifiedDate":"2024-01-26"},{"lineNumber":109,"author":{"gitId":"Apzure"},"content":"                return TaskList.markTask(processTaskIdx(arguments));","lastModifiedDate":"2024-02-11"},{"lineNumber":110,"author":{"gitId":"Apzure"},"content":"            case UNMARK:","lastModifiedDate":"2024-01-26"},{"lineNumber":111,"author":{"gitId":"Apzure"},"content":"                return TaskList.unmarkTask(processTaskIdx(arguments));","lastModifiedDate":"2024-02-11"},{"lineNumber":112,"author":{"gitId":"Apzure"},"content":"            case DELETE:","lastModifiedDate":"2024-01-26"},{"lineNumber":113,"author":{"gitId":"Apzure"},"content":"                return TaskList.deleteTask(processTaskIdx(arguments));","lastModifiedDate":"2024-02-11"},{"lineNumber":114,"author":{"gitId":"Apzure"},"content":"            case TODO:","lastModifiedDate":"2024-01-26"},{"lineNumber":115,"author":{"gitId":"Apzure"},"content":"                return TaskList.addTask(processToDo(arguments));","lastModifiedDate":"2024-02-11"},{"lineNumber":116,"author":{"gitId":"Apzure"},"content":"            case DEADLINE:","lastModifiedDate":"2024-01-26"},{"lineNumber":117,"author":{"gitId":"Apzure"},"content":"                return TaskList.addTask(processDeadline(arguments));","lastModifiedDate":"2024-02-11"},{"lineNumber":118,"author":{"gitId":"Apzure"},"content":"            case EVENT:","lastModifiedDate":"2024-01-26"},{"lineNumber":119,"author":{"gitId":"Apzure"},"content":"                return TaskList.addTask(processEvent(arguments));","lastModifiedDate":"2024-02-11"},{"lineNumber":120,"author":{"gitId":"Apzure"},"content":"            case FIND:","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"Apzure"},"content":"                return TaskList.findTask(arguments);","lastModifiedDate":"2024-02-11"},{"lineNumber":122,"author":{"gitId":"Apzure"},"content":"            default:","lastModifiedDate":"2024-01-26"},{"lineNumber":123,"author":{"gitId":"Apzure"},"content":"                assert false: \"Should not fall into default case of switch block for executecommand method!\";","lastModifiedDate":"2024-02-11"},{"lineNumber":124,"author":{"gitId":"Apzure"},"content":"                return \"Error: Fell into default case in executeCommand method!\";","lastModifiedDate":"2024-02-11"},{"lineNumber":125,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":126,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"Apzure"},"content":"     * Processes the argument of a command that operates on a task by index.","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"Apzure"},"content":"     * @param arguments the argument to process","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"Apzure"},"content":"     * @return the index of the task","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"Apzure"},"content":"     * @throws IndexOutOfRangeException if the index is out of range","lastModifiedDate":"2024-02-09"},{"lineNumber":134,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"Apzure"},"content":"    private static int processTaskIdx(String arguments) throws IndexOutOfRangeException {","lastModifiedDate":"2024-02-09"},{"lineNumber":136,"author":{"gitId":"Apzure"},"content":"        int idx \u003d Integer.parseInt(arguments);","lastModifiedDate":"2024-01-26"},{"lineNumber":137,"author":{"gitId":"Apzure"},"content":"        int size \u003d TaskList.listSize();","lastModifiedDate":"2024-01-27"},{"lineNumber":138,"author":{"gitId":"Apzure"},"content":"        assert size\u003e\u003d0: \"Size of TaskList should always be \u003e\u003d 0\";","lastModifiedDate":"2024-02-09"},{"lineNumber":139,"author":{"gitId":"Apzure"},"content":"        if (idx \u003c\u003d 0 || idx \u003e size) {","lastModifiedDate":"2024-01-26"},{"lineNumber":140,"author":{"gitId":"Apzure"},"content":"            throw new IndexOutOfRangeException(idx, size);","lastModifiedDate":"2024-02-09"},{"lineNumber":141,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":142,"author":{"gitId":"Apzure"},"content":"        return idx;","lastModifiedDate":"2024-01-26"},{"lineNumber":143,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":144,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":145,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"Apzure"},"content":"     * Processes the argument of a ToDo command.","lastModifiedDate":"2024-02-01"},{"lineNumber":147,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"Apzure"},"content":"     * @param arguments the argument to process","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"Apzure"},"content":"     * @return a new ToDo task with the specified name","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"Apzure"},"content":"    private static ToDo processToDo(String arguments) {","lastModifiedDate":"2024-01-25"},{"lineNumber":152,"author":{"gitId":"Apzure"},"content":"        return new ToDo(arguments);","lastModifiedDate":"2024-01-25"},{"lineNumber":153,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":154,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":155,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"Apzure"},"content":"     * Processes the argument of a Deadline command.","lastModifiedDate":"2024-02-01"},{"lineNumber":157,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":158,"author":{"gitId":"Apzure"},"content":"     * @param arguments the argument to process","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"Apzure"},"content":"     * @return a new Deadline task with the specified name and due date","lastModifiedDate":"2024-02-01"},{"lineNumber":160,"author":{"gitId":"Apzure"},"content":"     * @throws InvalidDeadlineFormatException if the argument format is invalid","lastModifiedDate":"2024-02-01"},{"lineNumber":161,"author":{"gitId":"Apzure"},"content":"     * @throws InvalidDateFormatException if the date format is invalid","lastModifiedDate":"2024-02-09"},{"lineNumber":162,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":163,"author":{"gitId":"Apzure"},"content":"    private static Deadline processDeadline(String arguments) throws InvalidDeadlineFormatException, InvalidDateFormatException {","lastModifiedDate":"2024-02-09"},{"lineNumber":164,"author":{"gitId":"Apzure"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":165,"author":{"gitId":"Apzure"},"content":"            String[] parts \u003d arguments.split(\"/by \");","lastModifiedDate":"2024-01-25"},{"lineNumber":166,"author":{"gitId":"Apzure"},"content":"            return new Deadline(parts[0], parts[1]);","lastModifiedDate":"2024-01-25"},{"lineNumber":167,"author":{"gitId":"Apzure"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":168,"author":{"gitId":"Apzure"},"content":"            throw new InvalidDeadlineFormatException();","lastModifiedDate":"2024-01-26"},{"lineNumber":169,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":170,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":171,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":172,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":173,"author":{"gitId":"Apzure"},"content":"     * Processes the argument of an Event command.","lastModifiedDate":"2024-02-01"},{"lineNumber":174,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":175,"author":{"gitId":"Apzure"},"content":"     * @param arguments the argument to process","lastModifiedDate":"2024-02-01"},{"lineNumber":176,"author":{"gitId":"Apzure"},"content":"     * @return a new Event task with the specified name and date range","lastModifiedDate":"2024-02-01"},{"lineNumber":177,"author":{"gitId":"Apzure"},"content":"     * @throws InvalidEventFormatException if the argument format is invalid","lastModifiedDate":"2024-02-01"},{"lineNumber":178,"author":{"gitId":"Apzure"},"content":"     * @throws InvalidDateFormatException if the date format is invalid","lastModifiedDate":"2024-02-09"},{"lineNumber":179,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":180,"author":{"gitId":"Apzure"},"content":"    private static Event processEvent(String arguments) throws InvalidEventFormatException, InvalidDateFormatException {","lastModifiedDate":"2024-02-09"},{"lineNumber":181,"author":{"gitId":"Apzure"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":182,"author":{"gitId":"Apzure"},"content":"            String[] parts \u003d arguments.split(\"/from \");","lastModifiedDate":"2024-01-25"},{"lineNumber":183,"author":{"gitId":"Apzure"},"content":"            String[] parts2 \u003d parts[1].split(\"/to \");","lastModifiedDate":"2024-01-25"},{"lineNumber":184,"author":{"gitId":"Apzure"},"content":"            return new Event(parts[0], parts2[0], parts2[1]);","lastModifiedDate":"2024-01-25"},{"lineNumber":185,"author":{"gitId":"Apzure"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":186,"author":{"gitId":"Apzure"},"content":"            throw new InvalidEventFormatException();","lastModifiedDate":"2024-01-26"},{"lineNumber":187,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":188,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":189,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Apzure":189}},{"path":"src/main/java/Duke/CommandNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":" * Represents an exception thrown when the user attempts to execute an invalid or unknown command in the Duke application.","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"public class CommandNotFoundException extends DukeException{","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"     * Constructs a new CommandNotFoundException with a detailed error message, indicating the unrecognized command.","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"     * @param command The invalid command that was entered by the user.","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"    public CommandNotFoundException(String command) {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"        super(command + \" is not a valid command!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Apzure":16}},{"path":"src/main/java/Duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":" * This class represents a Deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":" * It extends the Task class with a specific due date and a specific string representation.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"    protected LocalDate date;","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"    private static final DateTimeFormatter NEW_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"     * Constructs a new Deadline task with the specified name and due date.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"     * @param name the name of the Deadline task","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"     * @param date the due date of the task","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"     * @throws InvalidDateFormatException if the date format is invalid","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"    public Deadline(String name, String date) throws InvalidDateFormatException {","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"        super(name);","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"            this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"            throw new InvalidDateFormatException();","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"     * The returned string includes the task type ([D]), the string representation of the superclass, and the due date.","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"     * @return a string representation of the Deadline task","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"        String date \u003d String.format(\" (by: %s)\", this.date.format(FORMATTER));","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"        return \"[D]\" + super.toString() + date;","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"     * Returns the encoded version of Deadline","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"     * @return Encoded String version of the Deadline. Currently, uses toString() to encode.","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"    public String encode() {","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"        return toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"     * Decodes the task details into a Deadline object.","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"     * @param taskDetails the details of the task to decode","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"     * @return a new Deadline object with the decoded details","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"     * @throws InvalidDateFormatException if the date in the task details is not in the expected format","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"    public static Deadline decode(String taskDetails) throws InvalidDateFormatException {","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"        String[] detailParts \u003d taskDetails.split(\"\\\\(by: \");","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"        String name \u003d detailParts[0].trim();","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"        String date \u003d detailParts[1].substring(0, detailParts[1].length() - 1).trim();","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"        String dateFormatted \u003d LocalDate.parse(date, FORMATTER).format(NEW_DATE_FORMAT);","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"        return new Deadline(name, dateFormatted);","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"    public int compareTo(Task otherTask) {","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"        if (otherTask instanceof ToDo) {","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"            return -1;","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"        } else if (otherTask instanceof Deadline) {","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"Apzure"},"content":"            return this.date.compareTo(((Deadline) otherTask).date);","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"        } else if (otherTask instanceof Event) {","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"            return this.date.compareTo(((Event) otherTask).to);","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"Apzure"},"content":"        } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"Apzure"},"content":"            assert false: \"None of the types of tasks found in compareTo!\";","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"Apzure"},"content":"            System.out.println(\"None of the types of tasks found in compareTo!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"Apzure"},"content":"            return 0;","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Apzure":84}},{"path":"src/main/java/Duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"    private void flip() {","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"        db.flip();","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"        return db;","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Apzure":61}},{"path":"src/main/java/Duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":" * Serves as a base class for custom exceptions within the Duke application, providing a","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":" * consistent error handling mechanism.","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"     * Constructs a new DukeException with a customized error message.","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"     * @param eString A descriptive error message explaining the exception.","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"    public DukeException(String eString) {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"        super(\"Exception: \" + eString);","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Apzure":17}},{"path":"src/main/java/Duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":" * This class represents an Event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":" * It extends the Task class with a specific date range and a specific string representation.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"    private LocalDate from;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"    private static final DateTimeFormatter NEW_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"     * Constructs a new Event task with the specified name and date range.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"     * @param name the name of the Event task","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"     * @param from the start date of the event","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"     * @param to the end date of the event","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"     * @throws InvalidDateFormatException if the date format is invalid","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"    public Event(String name, String from, String to) throws InvalidDateFormatException {","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"        super(name.trim());","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"            this.from \u003d LocalDate.parse(from.trim());","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"            this.to \u003d LocalDate.parse(to.trim());","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"            throw new InvalidDateFormatException();","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"     * The returned string includes the task type ([E]), the string representation of the superclass, and the date range.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"     * @return a string representation of the Event task","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"        String date \u003d String.format(\" (from: %s to: %s)\", this.from.format(FORMATTER), this.to.format(FORMATTER));","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"        return \"[E]\" + super.toString() + date;","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"     * Returns the encoded version of Event","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"     * @return Encoded String version of the Event. Currently, uses toString() to encode.","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"    public String encode() {","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"        return toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"     * Decodes the task details into an Event object.","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"     * @param taskDetails the details of the task to decode","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"     * @return a new Event object with the decoded details","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"     * @throws InvalidDateFormatException if the date in the task details is not in the expected format","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"    public static Event decode(String taskDetails) throws InvalidDateFormatException {","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"        String[] detailParts \u003d taskDetails.split(\"\\\\(from: \");","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"        String name \u003d detailParts[0].trim();","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"        String[] dateDetails \u003d detailParts[1].split(\"to: \");","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"        String fromDate \u003d dateDetails[0].trim();","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"        String toDate \u003d dateDetails[1].substring(0, dateDetails[1].length() - 1).trim();","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"        String fromDateFormatted \u003d LocalDate.parse(fromDate, FORMATTER).format(NEW_DATE_FORMAT);","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"        String toDateFormatted \u003d LocalDate.parse(toDate, FORMATTER).format(NEW_DATE_FORMAT);","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"        return new Event(name, fromDateFormatted, toDateFormatted);","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"Apzure"},"content":"    public int compareTo(Task otherTask) {","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"Apzure"},"content":"        if (otherTask instanceof ToDo) {","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"Apzure"},"content":"            return -1;","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"Apzure"},"content":"        } else if (otherTask instanceof Deadline) {","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"Apzure"},"content":"            return this.to.compareTo(((Deadline) otherTask).date);","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"Apzure"},"content":"        } else if (otherTask instanceof Event) {","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"Apzure"},"content":"            return this.to.compareTo(((Event) otherTask).to);","lastModifiedDate":"2024-02-11"},{"lineNumber":85,"author":{"gitId":"Apzure"},"content":"        } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":86,"author":{"gitId":"Apzure"},"content":"            assert false: \"None of the types of tasks found in compareTo!\";","lastModifiedDate":"2024-02-11"},{"lineNumber":87,"author":{"gitId":"Apzure"},"content":"            System.out.println(\"None of the types of tasks found in compareTo!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":88,"author":{"gitId":"Apzure"},"content":"            return 0;","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":90,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Apzure":91}},{"path":"src/main/java/Duke/IndexOutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":" * Represents an exception thrown when an invalid index is used to access a list of tasks in the Duke application.","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"public class IndexOutOfRangeException extends DukeException {","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"     * Constructs a new IndexOutOfRangeException with a detailed error message.","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"     * @param idx  The invalid index that was used.","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"     * @param size The total number of tasks in the list.","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"    public IndexOutOfRangeException(int idx, int size) {","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"        super(idx + \" is not valid! It must be between 1 and the number of tasks in the list. There are \" + size + \" tasks.\");","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Apzure":17}},{"path":"src/main/java/Duke/InvalidDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":" * Represents an exception thrown when users provide an incorrectly formatted date","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"public class InvalidDateFormatException extends DukeException {","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"     * Constructs a new InvalidDateFormatException with a message telling the user the correct format","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"    public InvalidDateFormatException() {","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"        super(\"Invalid DateTime Format! Please use yyyy-mm-dd\");","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"Apzure":14}},{"path":"src/main/java/Duke/InvalidDeadlineFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":" * Represents an exception thrown when the user attempts to create a deadline task without providing the","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":" * required \"/by\" argument in the Duke application.","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"public class InvalidDeadlineFormatException extends DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"     * Constructs a new InvalidDeadlineFormatException with a clarifying error message.","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"    public InvalidDeadlineFormatException() {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"        super(\"/by argument needed for deadline\");","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Apzure":15}},{"path":"src/main/java/Duke/InvalidEventFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":" * Represents an exception thrown when the user tries to create an event task without providing both the","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":" * required \"/from\" and \"/to\" arguments in the Duke application.","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"public class InvalidEventFormatException extends DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"     * Constructs a new InvalidEventFormatException with an informative error message.","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"    public InvalidEventFormatException() {","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"        super(\"/from and /to arguments needed for event\");","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Apzure":15}},{"path":"src/main/java/Duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"public class Launcher {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Apzure":12}},{"path":"src/main/java/Duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"    private Bird bird \u003d new Bird();","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"    private Stage stage;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"            this.stage \u003d stage;","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBird(bird);","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setMain(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().displayInitialMessage();","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"            stage.setWidth(450);","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"            stage.show();","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"     * Closes the Duke application.","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"    public void close() {","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"        stage.close();","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"        Platform.exit();","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Apzure":46}},{"path":"src/main/java/Duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"    private Bird bird;","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"    private Main main;","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"    private final Image birdImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaBird.png\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"     /**","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"     * Creates the initial welcome message for user on startup","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"    public void displayInitialMessage() {","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"                DialogBox.getDukeDialog(bird.greet(), birdImage)","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"        );","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"    public void setBird(Bird b) {","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"        bird \u003d b;","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"    public void setMain(Main m) {","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"        main \u003d m;","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"        String response \u003d bird.getResponse(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"                DialogBox.getDukeDialog(response, birdImage)","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"        );","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"        // Closes Duke","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"        if (response.equals(\"bye\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"            main.close();","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Apzure":73}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"import java.io.File;","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":" * This class handles the storage of tasks in a file.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":" * It provides methods to create a storage file, load tasks from the file, and store tasks in the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"public class Storage {","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"    private final static String dirPath \u003d \"./data/\";","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"    private final static String filePath \u003d \"./data/taskList.txt\";","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"    private static File file;","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"     * Initializes the storage by creating the storage file and loading tasks from it.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"    public static void init() {","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"            create();","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"            load();","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"     * Creates the storage file if it does not exist.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"     * @throws IOException if an I/O error occurs","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"    private static void create() throws IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"        File directory \u003d new File(dirPath);","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"            if (!directory.mkdirs()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"                System.out.println(\"Failed to create directory.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"                return;","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"        file \u003d new File(directory, \"taskList.txt\");","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"            file.createNewFile();","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"     * Stores the current tasks in the storage file.","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"    public static void store() {","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"        FileWriter fw \u003d null;","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"            // To reset the file","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"            fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"            fw.write(\"\");","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"            fw.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"            fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"            for (int i \u003d 1; i \u003c\u003d TaskList.listSize(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"                Task task \u003d TaskList.getTask(i);","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"                String encodedTask \u003d task.encode();","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"                fw.write(encodedTask + \"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"            System.out.println(\"An error occurred while storing data: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"        } finally {","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"                if (fw !\u003d null) {","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"                    fw.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"Apzure"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"                System.out.println(\"An error occurred while closing the FileWriter: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"Apzure"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"Apzure"},"content":"     * @throws IOException if an I/O error occurs","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"Apzure"},"content":"    private static void load() throws IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"Apzure"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"Apzure"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"Apzure"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"Apzure"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"Apzure"},"content":"                decode(line);","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"Apzure"},"content":"            } catch (InvalidDateFormatException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":93,"author":{"gitId":"Apzure"},"content":"                System.out.println(\"Decoding Error: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"Apzure"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"Apzure"},"content":"        s.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"Apzure"},"content":"     * Decodes a line from the storage file into a task.","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"Apzure"},"content":"     * @param line the line to decode","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"Apzure"},"content":"     * @throws InvalidDateFormatException if the date format in the line is invalid","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"Apzure"},"content":"    private static void decode(String line) throws InvalidDateFormatException {","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"Apzure"},"content":"        Task task;","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"Apzure"},"content":"        String taskDetails \u003d line.substring(7);","lastModifiedDate":"2024-02-11"},{"lineNumber":108,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"Apzure"},"content":"        char taskType \u003d line.charAt(1);","lastModifiedDate":"2024-02-11"},{"lineNumber":110,"author":{"gitId":"Apzure"},"content":"        switch (taskType) {","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"Apzure"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"Apzure"},"content":"                task \u003d ToDo.decode(taskDetails);","lastModifiedDate":"2024-02-11"},{"lineNumber":113,"author":{"gitId":"Apzure"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"Apzure"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"Apzure"},"content":"                task \u003d Deadline.decode(taskDetails);","lastModifiedDate":"2024-02-11"},{"lineNumber":116,"author":{"gitId":"Apzure"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"Apzure"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"Apzure"},"content":"                task \u003d Event.decode(taskDetails);","lastModifiedDate":"2024-02-11"},{"lineNumber":119,"author":{"gitId":"Apzure"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":120,"author":{"gitId":"Apzure"},"content":"            default:","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"Apzure"},"content":"                assert false: \"Should not fall into default case of switch block for decode method!\";","lastModifiedDate":"2024-02-09"},{"lineNumber":122,"author":{"gitId":"Apzure"},"content":"                task \u003d new ToDo(\"ERROR\");","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"Apzure"},"content":"                System.out.println(\"Error: Decoding Error, task does not match any of the known types\");           ","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":125,"author":{"gitId":"Apzure"},"content":"        TaskList.addTaskSilently(task);","lastModifiedDate":"2024-02-11"},{"lineNumber":126,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":127,"author":{"gitId":"Apzure"},"content":"        boolean isTaskDone \u003d line.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2024-02-11"},{"lineNumber":128,"author":{"gitId":"Apzure"},"content":"        if (isTaskDone) {","lastModifiedDate":"2024-02-11"},{"lineNumber":129,"author":{"gitId":"Apzure"},"content":"            TaskList.markTaskSilently(TaskList.listSize());","lastModifiedDate":"2024-02-11"},{"lineNumber":130,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":131,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":132,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-01-27"},{"lineNumber":133,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Apzure":133}},{"path":"src/main/java/Duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":" * This class represents a task.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":" * Each task has a name and a status indicating whether it is done.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"public abstract class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"    protected String name;","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"     * Constructs a new Task with the specified name.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"     * The new task is initially not done.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"     * @param name the name of the task","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"    public Task(String name) {","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"     * The returned string includes the task status and the name.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"     * @return a string representation of the task","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"        String check \u003d isDone ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"        return check + this.name;","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"     * Returns the name of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"     * @return the name of the task","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"    public String toString2() {","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"        return this.name;","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"    public void done() {","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"    public void undone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"     * Returns the status of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"     * @return true if the task is done, false otherwise","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"        return isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"     * Returns the encoded version of the Task","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"     * @return Encoded String version of the Task. Currently, uses toString() to encode.","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"Apzure"},"content":"    public abstract String encode();","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"Apzure"},"content":"    public abstract int compareTo(Task other);","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Apzure":79}},{"path":"src/main/java/Duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":" * This class represents a list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":" * It provides methods to create, list, add, mark, unmark, and delete tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"public class TaskList {","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"    private static ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"     * Creates a new empty task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"    public static void create() {","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"     * Lists the tasks in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"     * @return A string representation of the tasks in the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"    public static String list() {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"            result.append(\"You have no tasks! Hooray!!!!!!!!!!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"            result.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"                int number \u003d i + 1;","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"                result.append(number).append(\". \").append(taskList.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"        return result.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"     * @return the number of tasks in the list","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"    public static int listSize() {","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"        return taskList.size();","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"     * Adds a task to the list and returns a message string.","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"     * @param task the task to add","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"     * @return A message indicating the task addition.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"    public static String addTask(Task task) {","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"        taskList.add(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"                task, taskList.size());","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"Apzure"},"content":"     * Adds a task to the list without returning any message.","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"Apzure"},"content":"     * @param task the task to add","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"Apzure"},"content":"    public static void addTaskSilently(Task task) {","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"Apzure"},"content":"        taskList.add(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"Apzure"},"content":"     * Marks a task as done and returns a message string.","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"Apzure"},"content":"     * @param idx the 1-based index of the task to mark","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"Apzure"},"content":"     * @return A message indicating the task marked as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"Apzure"},"content":"    public static String markTask(int idx) {","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"Apzure"},"content":"        Task task \u003d taskList.get(idx - 1);","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"Apzure"},"content":"        task.done();","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"Apzure"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done:\\n%s\", task);","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"Apzure"},"content":"     * Marks a task as done without returning any message.","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"Apzure"},"content":"     * @param idx the 1-based index of the task to mark","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"Apzure"},"content":"    public static void markTaskSilently(int idx) {","lastModifiedDate":"2024-02-11"},{"lineNumber":87,"author":{"gitId":"Apzure"},"content":"        Task task \u003d taskList.get(idx - 1);","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"Apzure"},"content":"        task.done();","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"Apzure"},"content":"     * Marks a task as not done and returns a message string.","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"Apzure"},"content":"     * @param idx the 1-based index of the task to unmark","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"Apzure"},"content":"     * @return A message indicating the task marked as not done yet.","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"Apzure"},"content":"    public static String unmarkTask(int idx) {","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"Apzure"},"content":"        Task task \u003d taskList.get(idx - 1);","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"Apzure"},"content":"        task.undone();","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"Apzure"},"content":"        return String.format(\"OK, I\u0027ve marked this task as not done yet:\\n%s\", task);","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"Apzure"},"content":"     * Deletes a task from the list and returns a message string.","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"Apzure"},"content":"     * @param idx the 1-based index of the task to delete","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"Apzure"},"content":"     * @return A message indicating the task deletion.","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"Apzure"},"content":"    public static String deleteTask(int idx) {","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"Apzure"},"content":"        Task task \u003d taskList.get(idx - 1);","lastModifiedDate":"2024-01-27"},{"lineNumber":111,"author":{"gitId":"Apzure"},"content":"        taskList.remove(idx - 1);","lastModifiedDate":"2024-01-27"},{"lineNumber":112,"author":{"gitId":"Apzure"},"content":"        return String.format(\"Noted. I\u0027ve removed this task:\\n%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"Apzure"},"content":"                task, taskList.size());","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":115,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":116,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"Apzure"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"Apzure"},"content":"     * @param idx the 1-based index of the task to return","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"Apzure"},"content":"     * @return the task at the specified index","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"Apzure"},"content":"    public static Task getTask(int idx) {","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"Apzure"},"content":"        return taskList.get(idx - 1);","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":125,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"Apzure"},"content":"     * Finds and returns a message string for tasks that match the provided search string.","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"Apzure"},"content":"     * This method iterates through the task list, checking if each task\u0027s string representation","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"Apzure"},"content":"     * contains the provided search string (case-insensitive). Matching tasks are included in the","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"Apzure"},"content":"     * returned message string along with their corresponding index and task details.","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"Apzure"},"content":"     * @param search The search string to match against task names.","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"Apzure"},"content":"     * @return A message string containing matching tasks or an indication of no matching tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"Apzure"},"content":"    public static String findTask(String search) {","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"Apzure"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"Apzure"},"content":"        boolean isThereMatch \u003d false; // Flag to track if any matching tasks are found","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"Apzure"},"content":"        int count \u003d 1; // Counter for displaying the index of matching tasks","lastModifiedDate":"2024-02-11"},{"lineNumber":140,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"Apzure"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"Apzure"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"Apzure"},"content":"            String taskName \u003d task.toString2();","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"Apzure"},"content":"            // Check if the task name contains the search string (case-insensitive)","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"Apzure"},"content":"            if (taskName.toLowerCase().contains(search.toLowerCase())) {","lastModifiedDate":"2024-02-01"},{"lineNumber":147,"author":{"gitId":"Apzure"},"content":"                if (!isThereMatch) {","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"Apzure"},"content":"                    result.append(\"Here are the matching tasks in your list: \\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"Apzure"},"content":"                    isThereMatch \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"Apzure"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":151,"author":{"gitId":"Apzure"},"content":"                result.append(count).append(\". \").append(task).append(\"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":152,"author":{"gitId":"Apzure"},"content":"                count++;","lastModifiedDate":"2024-02-11"},{"lineNumber":153,"author":{"gitId":"Apzure"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":155,"author":{"gitId":"Apzure"},"content":"        // Append a message if no matching tasks are found","lastModifiedDate":"2024-02-02"},{"lineNumber":156,"author":{"gitId":"Apzure"},"content":"        if (!isThereMatch) {","lastModifiedDate":"2024-02-01"},{"lineNumber":157,"author":{"gitId":"Apzure"},"content":"            result.append(\"No matching tasks found!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":158,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":160,"author":{"gitId":"Apzure"},"content":"        return result.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":161,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":162,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":163,"author":{"gitId":"Apzure"},"content":"    public static String sortTasks() {","lastModifiedDate":"2024-02-11"},{"lineNumber":164,"author":{"gitId":"Apzure"},"content":"        taskList.sort(null);","lastModifiedDate":"2024-02-11"},{"lineNumber":165,"author":{"gitId":"Apzure"},"content":"        return list();","lastModifiedDate":"2024-02-11"},{"lineNumber":166,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":167,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-01-27"},{"lineNumber":168,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":169,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Apzure":169}},{"path":"src/main/java/Duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":" * This class represents a ToDo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":" * It extends the Task class with a specific string representation.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"     * Constructs a new ToDo task with the specified name.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"     * @param name the name of the ToDo task","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"    public ToDo(String name) {","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"        super(name);","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"     * The returned string includes the task type ([T]) and the string representation of the superclass.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"     * @return a string representation of the ToDo task","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"     * Returns the encoded version of ToDo","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"     * @return Encoded String version of the ToDo. Currently, uses toString() to encode.","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"    public String encode() {","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"        return toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"     * Decodes the task details into a ToDo object.","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"     * @param taskDetails the details of the task to decode","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"     * @return a new ToDo object with the decoded details","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"    public static ToDo decode(String taskDetails) {","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"        return new ToDo(taskDetails);","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"    public int compareTo(Task otherTask) {","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"        if (otherTask instanceof ToDo) {","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"            return this.name.compareTo(otherTask.name);","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"        } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"            return 1;","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Apzure":58}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" style\u003d\"-fx-background-color: #f0f0f0; -fx-padding: 10px;\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" style\u003d\"-fx-text-fill: #333; -fx-font-size: 16px; -fx-padding: 10px;\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" style\u003d\"-fx-padding: 10px;\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Apzure":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"        \u003cURL value\u003d\"@style.css\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"50.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" fillWidth\u003d\"true\" spacing\u003d\"15.0\" alignment\u003d\"TOP_CENTER\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"        \u003cInsets top\u003d\"10.0\" right\u003d\"10.0\" bottom\u003d\"10.0\" left\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Apzure":27}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"class StorageTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"        // Delete the directory and file before each test","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"        Files.deleteIfExists(Paths.get(\"./data/taskList.txt\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"        Files.deleteIfExists(Paths.get(\"./data\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"    void create_noExistingDirectoryAndFile_directoryAndFileCreated() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"        Storage.init();","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"        File directory \u003d new File(\"./data\");","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"        assertTrue(directory.exists());","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"        File file \u003d new File(\"./data/taskList.txt\");","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"        assertTrue(file.exists());","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"    void create_existingDirectoryAndFile_directoryAndFileStillExist() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"        // Create the directory and file before calling Storage.init","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"        new File(\"./data\").mkdirs();","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"        new File(\"./data/taskList.txt\").createNewFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"        Storage.init();","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"        File directory \u003d new File(\"./data\");","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"        assertTrue(directory.exists());","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"        File file \u003d new File(\"./data/taskList.txt\");","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"        assertTrue(file.exists());","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Apzure":45}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Apzure"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Apzure"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Apzure"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Apzure"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Apzure"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Apzure"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Apzure"},"content":"class TaskListTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Apzure"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Apzure"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Apzure"},"content":"    void setUp() {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Apzure"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Apzure"},"content":"        TaskList.create();","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Apzure"},"content":"    void markTask_validIndex_taskMarked() {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Apzure"},"content":"        Task task \u003d new ToDo(\"test task\");","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Apzure"},"content":"        TaskList.addTaskSilently(task);","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"Apzure"},"content":"        TaskList.markTask(1);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Apzure"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Apzure"},"content":"    void markTask_alreadyMarked_noEffect() {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Apzure"},"content":"        Task task \u003d new ToDo(\"test task\");","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Apzure"},"content":"        TaskList.addTaskSilently(task);","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"Apzure"},"content":"        TaskList.markTask(1);","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Apzure"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Apzure"},"content":"        TaskList.markTask(1);","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Apzure"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Apzure"},"content":"    void markTask_invalidIndex_throwsIndexOutOfBoundsException() {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Apzure"},"content":"        Task task \u003d new ToDo(\"test task\");","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Apzure"},"content":"        TaskList.addTaskSilently(task);","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"Apzure"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e TaskList.markTask(2));","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"Apzure"},"content":"    void markTask_negativeIndex_throwsIndexOutOfBoundsException() {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"Apzure"},"content":"        Task task \u003d new ToDo(\"test task\");","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"Apzure"},"content":"        TaskList.addTaskSilently(task);","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"Apzure"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e TaskList.markTask(-1));","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"Apzure"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"Apzure"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"Apzure"},"content":"    void markTask_zeroIndex_throwsIndexOutOfBoundsException() {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"Apzure"},"content":"        Task task \u003d new ToDo(\"test task\");","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"Apzure"},"content":"        TaskList.addTaskSilently(task);","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"Apzure"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e TaskList.markTask(0));","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"Apzure"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"Apzure"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Apzure":57}}]
