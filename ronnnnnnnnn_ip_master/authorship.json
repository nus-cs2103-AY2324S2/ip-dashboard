[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"ronnnnnnnnn"},"content":"    mainClass.set(\"badgpt.BadGpt\")","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"ronnnnnnnnn":1}},{"path":"src/main/java/badgpt/BadGpt.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronnnnnnnnn"},"content":"package badgpt;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ronnnnnnnnn"},"content":"import badgpt.util.FileManager;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ronnnnnnnnn"},"content":"import badgpt.util.Parser;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ronnnnnnnnn"},"content":"import badgpt.util.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ronnnnnnnnn"},"content":"import badgpt.util.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ronnnnnnnnn"},"content":"public class BadGpt {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ronnnnnnnnn"},"content":"    private static final String NAME \u003d \"BadGPT\";","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ronnnnnnnnn"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ronnnnnnnnn"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ronnnnnnnnn"},"content":"    private FileManager fileManager;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ronnnnnnnnn"},"content":"    public BadGpt() {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ronnnnnnnnn"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ronnnnnnnnn"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ronnnnnnnnn"},"content":"        fileManager \u003d new FileManager();","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ronnnnnnnnn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ronnnnnnnnn"},"content":"        new BadGpt().run();","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ronnnnnnnnn"},"content":"    public void run() {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ronnnnnnnnn"},"content":"        ui.sayHi(NAME);","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ronnnnnnnnn"},"content":"        fileManager.loadFile();","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ronnnnnnnnn"},"content":"        fileManager.readFile(taskList);","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ronnnnnnnnn"},"content":"        while (true) {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ronnnnnnnnn"},"content":"            String in \u003d ui.read();","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ronnnnnnnnn"},"content":"            Parser.parse(in, this, taskList, ui, fileManager);","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ronnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"ronnnnnnnnn"},"content":"    public void bye() {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"ronnnnnnnnn"},"content":"        taskList.writeChanges(fileManager);","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"ronnnnnnnnn"},"content":"        ui.sayBye();","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"ronnnnnnnnn"},"content":"        System.exit(0);","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"ronnnnnnnnn"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ronnnnnnnnn":41}},{"path":"src/main/java/badgpt/exceptions/BadException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronnnnnnnnn"},"content":"package badgpt.exceptions;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ronnnnnnnnn"},"content":"public class BadException extends Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"ronnnnnnnnn"},"content":"    public BadException(String message) {","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"ronnnnnnnnn"},"content":"        super(message);","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"ronnnnnnnnn"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"ronnnnnnnnn":7}},{"path":"src/main/java/badgpt/exceptions/CommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronnnnnnnnn"},"content":"package badgpt.exceptions;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ronnnnnnnnn"},"content":"public class CommandException extends BadException {","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ronnnnnnnnn"},"content":"    public CommandException(String message) {","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ronnnnnnnnn"},"content":"        super(message);","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ronnnnnnnnn"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ronnnnnnnnn":7}},{"path":"src/main/java/badgpt/exceptions/ListEmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronnnnnnnnn"},"content":"package badgpt.exceptions;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ronnnnnnnnn"},"content":"public class ListEmptyException extends TaskException {","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ronnnnnnnnn"},"content":"    public ListEmptyException(String message) {","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ronnnnnnnnn"},"content":"        super(message);","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ronnnnnnnnn"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ronnnnnnnnn"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ronnnnnnnnn"},"content":"        return \"freedom\";","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ronnnnnnnnn"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ronnnnnnnnn":12}},{"path":"src/main/java/badgpt/exceptions/ListFullException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronnnnnnnnn"},"content":"package badgpt.exceptions;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ronnnnnnnnn"},"content":"public class ListFullException extends TaskException {","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ronnnnnnnnn"},"content":"    public ListFullException(String message) {","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ronnnnnnnnn"},"content":"        super(message);","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ronnnnnnnnn"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ronnnnnnnnn"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ronnnnnnnnn"},"content":"        return \"dude maybe finish something first\";","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ronnnnnnnnn"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ronnnnnnnnn":12}},{"path":"src/main/java/badgpt/exceptions/NoSuchCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronnnnnnnnn"},"content":"package badgpt.exceptions;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ronnnnnnnnn"},"content":"public class NoSuchCommandException extends CommandException {","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ronnnnnnnnn"},"content":"    public NoSuchCommandException(String message) {","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ronnnnnnnnn"},"content":"        super(message);","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ronnnnnnnnn"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ronnnnnnnnn"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ronnnnnnnnn"},"content":"        return \"Please enter a valid command.\";","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ronnnnnnnnn"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ronnnnnnnnn":12}},{"path":"src/main/java/badgpt/exceptions/SameStatusException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronnnnnnnnn"},"content":"package badgpt.exceptions;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ronnnnnnnnn"},"content":"import badgpt.tasks.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ronnnnnnnnn"},"content":"public class SameStatusException extends TaskException {","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ronnnnnnnnn"},"content":"    private Task task;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ronnnnnnnnn"},"content":"    private int type;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ronnnnnnnnn"},"content":"    public SameStatusException(String message, Task task, int type) {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ronnnnnnnnn"},"content":"        super(message);","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ronnnnnnnnn"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ronnnnnnnnn"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ronnnnnnnnn"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ronnnnnnnnn"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ronnnnnnnnn"},"content":"        return \"The task:\\n\" + this.task + \"\\nis \" + (this.type \u003d\u003d 0 ? \"already complete.\" : \"not yet complete.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ronnnnnnnnn"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ronnnnnnnnn":19}},{"path":"src/main/java/badgpt/exceptions/TaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronnnnnnnnn"},"content":"package badgpt.exceptions;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ronnnnnnnnn"},"content":"public class TaskException extends BadException {","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ronnnnnnnnn"},"content":"    public TaskException(String message) {","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ronnnnnnnnn"},"content":"        super(message);","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ronnnnnnnnn"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ronnnnnnnnn":7}},{"path":"src/main/java/badgpt/exceptions/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronnnnnnnnn"},"content":"package badgpt.exceptions;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ronnnnnnnnn"},"content":"public class TaskNotFoundException extends TaskException {","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ronnnnnnnnn"},"content":"    private int numTasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"ronnnnnnnnn"},"content":"    public TaskNotFoundException(String message, int numTasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"ronnnnnnnnn"},"content":"        super(message);","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"ronnnnnnnnn"},"content":"        this.numTasks \u003d numTasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"ronnnnnnnnn"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"ronnnnnnnnn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"ronnnnnnnnn"},"content":"        return \"The requested task cannot be found. \" + (numTasks \u003d\u003d 0","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"ronnnnnnnnn"},"content":"                ? \"There are no tasks.\"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"ronnnnnnnnn"},"content":"                : \"Please enter a number equal to or less than \" + numTasks + \".\");","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"ronnnnnnnnn"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"ronnnnnnnnn":17}},{"path":"src/main/java/badgpt/exceptions/WrongFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronnnnnnnnn"},"content":"package badgpt.exceptions;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ronnnnnnnnn"},"content":"public class WrongFormatException extends CommandException {","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ronnnnnnnnn"},"content":"    private String rightUsage \u003d \"Please type in the command as follows: \";","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ronnnnnnnnn"},"content":"    private String example;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ronnnnnnnnn"},"content":"    private String brainrot;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ronnnnnnnnn"},"content":"    public WrongFormatException(String message, String cmd) {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ronnnnnnnnn"},"content":"        super(message);","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ronnnnnnnnn"},"content":"        switch (cmd) {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ronnnnnnnnn"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ronnnnnnnnn"},"content":"            rightUsage +\u003d \"mark taskNum\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ronnnnnnnnn"},"content":"            example \u003d \"mark 2\";","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ronnnnnnnnn"},"content":"            brainrot \u003d \"\";","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ronnnnnnnnn"},"content":"            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ronnnnnnnnn"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ronnnnnnnnn"},"content":"            rightUsage +\u003d \"unmark taskNum\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ronnnnnnnnn"},"content":"            example \u003d \"unmark 2\";","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ronnnnnnnnn"},"content":"            brainrot \u003d \"\";","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ronnnnnnnnn"},"content":"            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ronnnnnnnnn"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ronnnnnnnnn"},"content":"            rightUsage +\u003d \"todo taskDescription\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ronnnnnnnnn"},"content":"            example \u003d \"todo read book\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ronnnnnnnnn"},"content":"            brainrot \u003d \"are you satisfied with that, todo aoi\";","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ronnnnnnnnn"},"content":"            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ronnnnnnnnn"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ronnnnnnnnn"},"content":"            rightUsage +\u003d \"deadline taskDescription /by YYYY-MM-DD\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ronnnnnnnnn"},"content":"            example \u003d \"deadline return book /by 2024-01-31\";","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ronnnnnnnnn"},"content":"            brainrot \u003d \"\";","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ronnnnnnnnn"},"content":"            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ronnnnnnnnn"},"content":"        case \"event\":","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ronnnnnnnnn"},"content":"            rightUsage +\u003d \"event taskDescription /from YYYY-MM-DD /to YYYY-MM-DD\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ronnnnnnnnn"},"content":"            example \u003d \"event holiday /from 2024-01-31 /to 2024-02-07\";","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"ronnnnnnnnn"},"content":"            brainrot \u003d \"\";","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"ronnnnnnnnn"},"content":"            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"ronnnnnnnnn"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"ronnnnnnnnn"},"content":"            rightUsage +\u003d \"delete taskNum\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"ronnnnnnnnn"},"content":"            example \u003d \"delete 2\";","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"ronnnnnnnnn"},"content":"            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"ronnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"ronnnnnnnnn"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"ronnnnnnnnn"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"ronnnnnnnnn"},"content":"        return rightUsage + \"Example: \" + example + brainrot;","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"ronnnnnnnnn"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ronnnnnnnnn":48}},{"path":"src/main/java/badgpt/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronnnnnnnnn"},"content":"package badgpt.tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ronnnnnnnnn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ronnnnnnnnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ronnnnnnnnn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"ronnnnnnnnn"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"ronnnnnnnnn"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"ronnnnnnnnn"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ronnnnnnnnn"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ronnnnnnnnn"},"content":"    public Deadline(String description, LocalDate deadline) {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ronnnnnnnnn"},"content":"        super(description);","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"ronnnnnnnnn"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"ronnnnnnnnn"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ronnnnnnnnn"},"content":"    public String saveTask() {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ronnnnnnnnn"},"content":"        return \"[D]\" + super.toString() + \" by: \" + this.deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ronnnnnnnnn"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"ronnnnnnnnn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"ronnnnnnnnn"},"content":"        return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"ronnnnnnnnn"},"content":"                this.deadline.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"ronnnnnnnnn"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"ronnnnnnnnn":29}},{"path":"src/main/java/badgpt/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronnnnnnnnn"},"content":"package badgpt.tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ronnnnnnnnn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ronnnnnnnnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ronnnnnnnnn"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"ronnnnnnnnn"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ronnnnnnnnn"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"ronnnnnnnnn"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ronnnnnnnnn"},"content":"        super(description);","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"ronnnnnnnnn"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"ronnnnnnnnn"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ronnnnnnnnn"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ronnnnnnnnn"},"content":"    public String saveTask() {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ronnnnnnnnn"},"content":"        return \"[E]\" + super.toString() + \" from: \" + this.from + \" to: \" + this.to;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"ronnnnnnnnn"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"ronnnnnnnnn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"ronnnnnnnnn"},"content":"        return \"[E]\" + super.toString() + \" (from: \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ronnnnnnnnn"},"content":"                this.from.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \" to: \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"ronnnnnnnnn"},"content":"                this.to.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"ronnnnnnnnn"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"ronnnnnnnnn":27}},{"path":"src/main/java/badgpt/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronnnnnnnnn"},"content":"package badgpt.tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ronnnnnnnnn"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"ronnnnnnnnn"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"ronnnnnnnnn"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"ronnnnnnnnn"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"ronnnnnnnnn"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"ronnnnnnnnn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"ronnnnnnnnn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"ronnnnnnnnn"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"]\"; // mark done task with X","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"ronnnnnnnnn"},"content":"    public boolean isComplete() {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"ronnnnnnnnn"},"content":"        return this.isDone;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"ronnnnnnnnn"},"content":"    public void complete() {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"ronnnnnnnnn"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"ronnnnnnnnn"},"content":"    public void uncomplete() {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"ronnnnnnnnn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"ronnnnnnnnn"},"content":"    public String saveTask() {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"ronnnnnnnnn"},"content":"        return this.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"ronnnnnnnnn"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"ronnnnnnnnn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"ronnnnnnnnn"},"content":"        return getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"ronnnnnnnnn"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ronnnnnnnnn":36}},{"path":"src/main/java/badgpt/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronnnnnnnnn"},"content":"package badgpt.tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ronnnnnnnnn"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"ronnnnnnnnn"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"ronnnnnnnnn"},"content":"        super(description);","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"ronnnnnnnnn"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ronnnnnnnnn"},"content":"    public String saveTask() {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ronnnnnnnnn"},"content":"        return this.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"ronnnnnnnnn"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"ronnnnnnnnn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"ronnnnnnnnn"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"ronnnnnnnnn"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"ronnnnnnnnn":17}},{"path":"src/main/java/badgpt/util/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronnnnnnnnn"},"content":"package badgpt.util;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ronnnnnnnnn"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ronnnnnnnnn"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ronnnnnnnnn"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ronnnnnnnnn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ronnnnnnnnn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ronnnnnnnnn"},"content":"public class FileManager {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ronnnnnnnnn"},"content":"    private final String DIRECTORY \u003d \"./data/\";","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ronnnnnnnnn"},"content":"    private final String FILENAME \u003d \"tasks.txt\";","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ronnnnnnnnn"},"content":"    private File file;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ronnnnnnnnn"},"content":"    public void loadFile() {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ronnnnnnnnn"},"content":"        File directory \u003d new File(DIRECTORY);","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ronnnnnnnnn"},"content":"        file \u003d new File(DIRECTORY, FILENAME);","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ronnnnnnnnn"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ronnnnnnnnn"},"content":"            directory.mkdir();","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ronnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ronnnnnnnnn"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ronnnnnnnnn"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ronnnnnnnnn"},"content":"                file.createNewFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ronnnnnnnnn"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ronnnnnnnnn"},"content":"                System.err.println(e + \"Please rerun the bot.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ronnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ronnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ronnnnnnnnn"},"content":"    public void readFile(TaskList taskList) {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ronnnnnnnnn"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ronnnnnnnnn"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ronnnnnnnnn"},"content":"            String line \u003d br.readLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ronnnnnnnnn"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ronnnnnnnnn"},"content":"                String[] taskInfo \u003d line.split(\" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"ronnnnnnnnn"},"content":"                char type;","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ronnnnnnnnn"},"content":"                String deadline \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"ronnnnnnnnn"},"content":"                String from \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"ronnnnnnnnn"},"content":"                String to \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"ronnnnnnnnn"},"content":"                String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ronnnnnnnnn"},"content":"                boolean isComplete \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ronnnnnnnnn"},"content":"                if (line.contains(\"[X]\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ronnnnnnnnn"},"content":"                    isComplete \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ronnnnnnnnn"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ronnnnnnnnn"},"content":"                if (line.contains(\"[T]\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"ronnnnnnnnn"},"content":"                    type \u003d \u0027T\u0027;","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"ronnnnnnnnn"},"content":"                    description \u003d line.substring(6).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"ronnnnnnnnn"},"content":"                } else if (line.contains(\"[E]\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"ronnnnnnnnn"},"content":"                    type \u003d \u0027E\u0027;","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"ronnnnnnnnn"},"content":"                    int fromIdx \u003d line.indexOf(\"from:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"ronnnnnnnnn"},"content":"                    int toIdx \u003d line.indexOf(\"to:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"ronnnnnnnnn"},"content":"                    description \u003d line.substring(6, fromIdx).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"ronnnnnnnnn"},"content":"                    from \u003d line.substring(fromIdx + 5, toIdx).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"ronnnnnnnnn"},"content":"                    to \u003d line.substring(toIdx + 3).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"ronnnnnnnnn"},"content":"                } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"ronnnnnnnnn"},"content":"                    type \u003d \u0027D\u0027;","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"ronnnnnnnnn"},"content":"                    int by \u003d line.indexOf(\"by:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"ronnnnnnnnn"},"content":"                    description \u003d line.substring(6, by).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"ronnnnnnnnn"},"content":"                    deadline \u003d line.substring(by + 3).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"ronnnnnnnnn"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"ronnnnnnnnn"},"content":"                taskList.loadData(type, description, deadline, from, to, isComplete);","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"ronnnnnnnnn"},"content":"                line \u003d br.readLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"ronnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"ronnnnnnnnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"ronnnnnnnnn"},"content":"            System.err.println(\"The file cannot be read. \" + e);","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"ronnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"ronnnnnnnnn"},"content":"    public void writeToFile(String data) {","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"ronnnnnnnnn"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"ronnnnnnnnn"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"ronnnnnnnnn"},"content":"            fw.write(data);","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"ronnnnnnnnn"},"content":"            fw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"ronnnnnnnnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"ronnnnnnnnn"},"content":"            System.err.println(\"The file was not saved successfully. \" + e);","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"ronnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"ronnnnnnnnn"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ronnnnnnnnn":83}},{"path":"src/main/java/badgpt/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronnnnnnnnn"},"content":"package badgpt.util;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ronnnnnnnnn"},"content":"import badgpt.BadGpt;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ronnnnnnnnn"},"content":"import badgpt.exceptions.BadException;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ronnnnnnnnn"},"content":"import badgpt.exceptions.NoSuchCommandException;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ronnnnnnnnn"},"content":"import badgpt.exceptions.WrongFormatException;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ronnnnnnnnn"},"content":"import badgpt.tasks.Deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ronnnnnnnnn"},"content":"import badgpt.tasks.Event;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ronnnnnnnnn"},"content":"import badgpt.tasks.ToDo;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ronnnnnnnnn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ronnnnnnnnn"},"content":"public class Parser {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ronnnnnnnnn"},"content":"    public static void parse(String line, BadGpt bot, TaskList taskList, Ui ui, FileManager fileManager) {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ronnnnnnnnn"},"content":"        String cmd \u003d line.split(\" \")[0];","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ronnnnnnnnn"},"content":"        String args \u003d line.substring(cmd.length()).trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ronnnnnnnnn"},"content":"        // Cases","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ronnnnnnnnn"},"content":"        // \"bye\": Exit the loop and the program.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ronnnnnnnnn"},"content":"        // \"list\": List out all currently stored tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ronnnnnnnnn"},"content":"        // \"mark\": Mark the task corresponding to the number entered after as complete.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ronnnnnnnnn"},"content":"        // \"unmark\": Unmark the task corresponding to the number entered after.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ronnnnnnnnn"},"content":"        // Else, store the string entered as a new Task object.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ronnnnnnnnn"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ronnnnnnnnn"},"content":"            switch (cmd) {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ronnnnnnnnn"},"content":"            case \"bye\":","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ronnnnnnnnn"},"content":"                bot.bye();","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ronnnnnnnnn"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ronnnnnnnnn"},"content":"            case \"list\":","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ronnnnnnnnn"},"content":"                taskList.listTasks();","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ronnnnnnnnn"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ronnnnnnnnn"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"ronnnnnnnnn"},"content":"                try {","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"ronnnnnnnnn"},"content":"                    taskList.mark(Integer.parseInt(args.split(\" \")[0]) - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"ronnnnnnnnn"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"ronnnnnnnnn"},"content":"                    throw new WrongFormatException(e.getMessage(), cmd);","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"ronnnnnnnnn"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"ronnnnnnnnn"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"ronnnnnnnnn"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"ronnnnnnnnn"},"content":"                try {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"ronnnnnnnnn"},"content":"                    taskList.unmark(Integer.parseInt(args.split(\" \")[0]) - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"ronnnnnnnnn"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"ronnnnnnnnn"},"content":"                    throw new WrongFormatException(e.getMessage(), cmd);","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"ronnnnnnnnn"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"ronnnnnnnnn"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"ronnnnnnnnn"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"ronnnnnnnnn"},"content":"                if (args.isEmpty()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"ronnnnnnnnn"},"content":"                    throw new WrongFormatException(\"Description is empty.\", cmd);","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"ronnnnnnnnn"},"content":"                } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"ronnnnnnnnn"},"content":"                    taskList.store(new ToDo(args));","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"ronnnnnnnnn"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"ronnnnnnnnn"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"ronnnnnnnnn"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"ronnnnnnnnn"},"content":"                int by \u003d args.indexOf(\"/by\");","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"ronnnnnnnnn"},"content":"                if (by \u003d\u003d -1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"ronnnnnnnnn"},"content":"                    throw new WrongFormatException(\"No deadline is specified.\", cmd);","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"ronnnnnnnnn"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"ronnnnnnnnn"},"content":"                try {","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"ronnnnnnnnn"},"content":"                    taskList.store(new Deadline(args.substring(0, by).trim(), args.substring(by + 3).trim()));","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"ronnnnnnnnn"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"ronnnnnnnnn"},"content":"                    throw new WrongFormatException(e.getMessage(), cmd);","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"ronnnnnnnnn"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"ronnnnnnnnn"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"ronnnnnnnnn"},"content":"            case \"event\":","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"ronnnnnnnnn"},"content":"                int fromIdx \u003d args.indexOf(\"/from\");","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"ronnnnnnnnn"},"content":"                int toIdx \u003d args.indexOf(\"/to\");","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"ronnnnnnnnn"},"content":"                if (fromIdx \u003d\u003d -1 || toIdx \u003d\u003d -1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"ronnnnnnnnn"},"content":"                    throw new WrongFormatException(\"No duration is specified.\", cmd);","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"ronnnnnnnnn"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"ronnnnnnnnn"},"content":"                try {","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"ronnnnnnnnn"},"content":"                    taskList.store(new Event(args.substring(0, fromIdx).trim(),","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"ronnnnnnnnn"},"content":"                            args.substring(fromIdx + 5, toIdx).trim(), args.substring(toIdx + 3).trim()));","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"ronnnnnnnnn"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"ronnnnnnnnn"},"content":"                    throw new WrongFormatException(e.getMessage(), cmd);","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"ronnnnnnnnn"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"ronnnnnnnnn"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"ronnnnnnnnn"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"ronnnnnnnnn"},"content":"                try {","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"ronnnnnnnnn"},"content":"                    taskList.delete(Integer.parseInt(args.split(\" \")[0]) - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"ronnnnnnnnn"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"ronnnnnnnnn"},"content":"                    throw new WrongFormatException(e.getMessage(), cmd);","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"ronnnnnnnnn"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"ronnnnnnnnn"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"ronnnnnnnnn"},"content":"            default:","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"ronnnnnnnnn"},"content":"                throw new NoSuchCommandException(\"No such command found.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"ronnnnnnnnn"},"content":"                // Fallthrough","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"ronnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"ronnnnnnnnn"},"content":"        } catch (BadException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"ronnnnnnnnn"},"content":"            ui.printException(e);","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"ronnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"ronnnnnnnnn"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ronnnnnnnnn":96}},{"path":"src/main/java/badgpt/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronnnnnnnnn"},"content":"package badgpt.util;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ronnnnnnnnn"},"content":"import badgpt.exceptions.ListEmptyException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ronnnnnnnnn"},"content":"import badgpt.exceptions.ListFullException;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ronnnnnnnnn"},"content":"import badgpt.exceptions.SameStatusException;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ronnnnnnnnn"},"content":"import badgpt.exceptions.TaskNotFoundException;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ronnnnnnnnn"},"content":"import badgpt.tasks.Deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ronnnnnnnnn"},"content":"import badgpt.tasks.Event;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ronnnnnnnnn"},"content":"import badgpt.tasks.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ronnnnnnnnn"},"content":"import badgpt.tasks.ToDo;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ronnnnnnnnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ronnnnnnnnn"},"content":"import java.util.List;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ronnnnnnnnn"},"content":"public class TaskList {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ronnnnnnnnn"},"content":"    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ronnnnnnnnn"},"content":"    private TasksUi tasksUi \u003d new TasksUi();","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ronnnnnnnnn"},"content":"    private boolean hasChanges \u003d false;","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ronnnnnnnnn"},"content":"    public void store(Task task) throws ListFullException {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ronnnnnnnnn"},"content":"        if (tasks.size() \u003d\u003d 100) {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ronnnnnnnnn"},"content":"            throw new ListFullException(\"Your todo list is currently full.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ronnnnnnnnn"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ronnnnnnnnn"},"content":"            tasks.add(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ronnnnnnnnn"},"content":"            tasksUi.printAddTask(task, tasks.size());","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ronnnnnnnnn"},"content":"            hasChanges \u003d true;","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ronnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ronnnnnnnnn"},"content":"    public void listTasks() throws ListEmptyException {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ronnnnnnnnn"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ronnnnnnnnn"},"content":"            throw new ListEmptyException(\"Your todo list is currently empty.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ronnnnnnnnn"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"ronnnnnnnnn"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"ronnnnnnnnn"},"content":"                tasksUi.printTask(tasks.get(i), i + 1, tasks.size());","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"ronnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"ronnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"ronnnnnnnnn"},"content":"    public void mark(int taskNum) throws TaskNotFoundException, SameStatusException {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"ronnnnnnnnn"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"ronnnnnnnnn"},"content":"            if (!tasks.get(taskNum).isComplete()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"ronnnnnnnnn"},"content":"                tasks.get(taskNum).complete();","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"ronnnnnnnnn"},"content":"                tasksUi.printMarkUnmarkOutcome(tasks.get(taskNum), 0);","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"ronnnnnnnnn"},"content":"                hasChanges \u003d true;","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"ronnnnnnnnn"},"content":"            } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"ronnnnnnnnn"},"content":"                throw new SameStatusException(\"The operation cannot be completed.\", tasks.get(taskNum), 0);","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"ronnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"ronnnnnnnnn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"ronnnnnnnnn"},"content":"            throw new TaskNotFoundException(e.getMessage(), tasks.size());","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"ronnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"ronnnnnnnnn"},"content":"    public void unmark(int taskNum) throws TaskNotFoundException, SameStatusException {","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"ronnnnnnnnn"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"ronnnnnnnnn"},"content":"            if (tasks.get(taskNum).isComplete()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"ronnnnnnnnn"},"content":"                tasks.get(taskNum).uncomplete();","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"ronnnnnnnnn"},"content":"                tasksUi.printMarkUnmarkOutcome(tasks.get(taskNum), 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"ronnnnnnnnn"},"content":"                hasChanges \u003d true;","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"ronnnnnnnnn"},"content":"            } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"ronnnnnnnnn"},"content":"                throw new SameStatusException(\"The operation cannot be completed.\", tasks.get(taskNum), 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"ronnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"ronnnnnnnnn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"ronnnnnnnnn"},"content":"            throw new TaskNotFoundException(e.getMessage(), tasks.size());","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"ronnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"ronnnnnnnnn"},"content":"    public void delete(int taskNum) throws TaskNotFoundException {","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"ronnnnnnnnn"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"ronnnnnnnnn"},"content":"            Task task \u003d tasks.remove(taskNum);","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"ronnnnnnnnn"},"content":"            tasksUi.printDelete(task, tasks.size());","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"ronnnnnnnnn"},"content":"            hasChanges \u003d true;","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"ronnnnnnnnn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"ronnnnnnnnn"},"content":"            throw new TaskNotFoundException(e.getMessage(), tasks.size());","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"ronnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"ronnnnnnnnn"},"content":"    public void loadData(char type, String descr, String deadline, String from, String to, boolean isComplete) {","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"ronnnnnnnnn"},"content":"        Task task;","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"ronnnnnnnnn"},"content":"        if (type \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"ronnnnnnnnn"},"content":"            task \u003d new ToDo(descr);","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"ronnnnnnnnn"},"content":"        } else if (type \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"ronnnnnnnnn"},"content":"            task \u003d new Event(descr, from, to);","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"ronnnnnnnnn"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"ronnnnnnnnn"},"content":"            task \u003d new Deadline(descr, deadline);","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"ronnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"ronnnnnnnnn"},"content":"        if (isComplete) {","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"ronnnnnnnnn"},"content":"            task.complete();","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"ronnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"ronnnnnnnnn"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"ronnnnnnnnn"},"content":"    public void writeChanges(FileManager fileManager) {","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"ronnnnnnnnn"},"content":"        if (hasChanges) {","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"ronnnnnnnnn"},"content":"            String data \u003d \"\";","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"ronnnnnnnnn"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"ronnnnnnnnn"},"content":"                data +\u003d task.saveTask() + \"\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"ronnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"ronnnnnnnnn"},"content":"            fileManager.writeToFile(data);","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"ronnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"ronnnnnnnnn"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ronnnnnnnnn":105}},{"path":"src/main/java/badgpt/util/TasksUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronnnnnnnnn"},"content":"package badgpt.util;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ronnnnnnnnn"},"content":"import badgpt.tasks.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ronnnnnnnnn"},"content":"public class TasksUi extends Ui {","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ronnnnnnnnn"},"content":"    public void printAddTask(Task task, int numTasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ronnnnnnnnn"},"content":"        printLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ronnnnnnnnn"},"content":"        System.out.println(\"Added task: \" + task);","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ronnnnnnnnn"},"content":"        System.out.println(\"Now you have \" + numTasks + \" task(s) in the list.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ronnnnnnnnn"},"content":"        printLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ronnnnnnnnn"},"content":"    public void printTask(Task task, int index, int total) {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ronnnnnnnnn"},"content":"        if (index \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ronnnnnnnnn"},"content":"            printLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ronnnnnnnnn"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ronnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ronnnnnnnnn"},"content":"        System.out.println(index + \". \" + task);","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ronnnnnnnnn"},"content":"        if (index \u003d\u003d total) {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ronnnnnnnnn"},"content":"            printLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ronnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ronnnnnnnnn"},"content":"    public void printMarkUnmarkOutcome(Task task, int type) {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ronnnnnnnnn"},"content":"        printLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ronnnnnnnnn"},"content":"        System.out.println((type \u003d\u003d 0 ? \"Nice! I\u0027ve marked this task as done:\\n\" : \"wyd bro why undo\\n\") + task);","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ronnnnnnnnn"},"content":"        printLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ronnnnnnnnn"},"content":"    public void printDelete(Task task, int numTasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ronnnnnnnnn"},"content":"        printLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ronnnnnnnnn"},"content":"        System.out.println(\"This task has been removed: \" + task);","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"ronnnnnnnnn"},"content":"        System.out.println(\"Now you have \" + numTasks + \" task(s) in the list.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"ronnnnnnnnn"},"content":"        System.out.println(\"No, what are you waiting for? Do it! Just do it!\");","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"ronnnnnnnnn"},"content":"        printLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"ronnnnnnnnn"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ronnnnnnnnn":39}},{"path":"src/main/java/badgpt/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronnnnnnnnn"},"content":"package badgpt.util;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ronnnnnnnnn"},"content":"import badgpt.exceptions.BadException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ronnnnnnnnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ronnnnnnnnn"},"content":"public class Ui {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ronnnnnnnnn"},"content":"    private Scanner sc;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ronnnnnnnnn"},"content":"    public Ui() {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ronnnnnnnnn"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ronnnnnnnnn"},"content":"    public void printLine() {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ronnnnnnnnn"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ronnnnnnnnn"},"content":"    public void printException(BadException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ronnnnnnnnn"},"content":"        System.err.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ronnnnnnnnn"},"content":"                + e + \"\\n____________________________________________________________\");","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ronnnnnnnnn"},"content":"    public void sayHi(String name) {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ronnnnnnnnn"},"content":"        printLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ronnnnnnnnn"},"content":"        System.out.println(\"Hello! I\u0027m \" + name + \".\\n\" + \"What can I do for you?\");","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ronnnnnnnnn"},"content":"        printLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ronnnnnnnnn"},"content":"    public void sayBye() {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ronnnnnnnnn"},"content":"        printLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ronnnnnnnnn"},"content":"        System.out.println(\"Smell ya later\");","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ronnnnnnnnn"},"content":"        printLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"ronnnnnnnnn"},"content":"    public String read() {","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"ronnnnnnnnn"},"content":"        return sc.nextLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"ronnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"ronnnnnnnnn"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ronnnnnnnnn":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ronnnnnnnnn"},"content":"todo borrow book","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"ronnnnnnnnn"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"ronnnnnnnnn"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"ronnnnnnnnn"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"ronnnnnnnnn"},"content":"mark 1","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"ronnnnnnnnn"},"content":"mark 3","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"ronnnnnnnnn"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"ronnnnnnnnn"},"content":"unmark 3","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"ronnnnnnnnn"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"ronnnnnnnnn"},"content":"bye","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"ronnnnnnnnn":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"ronnnnnnnnn"},"content":"    pause","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"ronnnnnnnnn"},"content":"java -classpath ..\\bin BadGpt \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ronnnnnnnnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ronnnnnnnnn"},"content":"pause","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"-":20,"ronnnnnnnnn":4}}]
