[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"    protected String by;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"        this.by \u003d by.trim();","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ziyang27":13}},{"path":"src/main/java/Dibo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"public class Dibo {","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"    private static final String name \u003d \"Dibo\";","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"        // Greeting the user","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"        System.out.println(\"Hello! I\u0027m \" + name);","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"        System.out.println(\"What can I do for you? \\n\");","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"        Store store \u003d new Store(new String[]{\"todo\", \"deadline\", \"event\"});","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"        // Getting the command","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"        String command \u003d sc.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"        // Responding","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"        while (!command.equals(\"bye\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"            if (command.equals(\"list\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"                store.displayStore();","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"            } else if (command.contains(\"unmark\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"                try {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"                    int id \u003d Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"                    store.unmarkTask(id);","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"                    System.out.println(\"Oh no! You have to unmark the items based on their index,\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"                            \"if you are not sure of the index, enter \u0027list\u0027 to check it out:)\");","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"            } else if (command.contains(\"mark\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"                try {","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"                    int id \u003d Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"                    store.markTask(id);","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"                    System.out.println(\"Oh no! You have to mark the items based on their index,\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"                            \"if you are not sure of the index, enter \u0027list\u0027 to check it out:)\");","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"            } else if (command.contains(\"delete\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"                try {","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"                    int id \u003d Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"                    store.deleteTask(id);","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"ziyang27"},"content":"                    System.out.println(\"Oh no! You have to delete the items based on their index,\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"ziyang27"},"content":"                            \"if you are not sure of the index, enter \u0027list\u0027 to check it out:)\");","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"ziyang27"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"ziyang27"},"content":"            } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"ziyang27"},"content":"                try {","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"ziyang27"},"content":"                    System.out.println(store.addText(command));","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"ziyang27"},"content":"                } catch (DukeException d) {","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"ziyang27"},"content":"                    System.out.println(d.getMessage());","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"ziyang27"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"ziyang27"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"ziyang27"},"content":"            command \u003d sc.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"ziyang27"},"content":"        // Exiting","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"ziyang27"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"ziyang27"},"content":"        sc.close();","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ziyang27":57}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ziyang27":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"    protected String start;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"    protected String end;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"        this.start \u003d start.trim();","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"        this.end \u003d end.trim();","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ziyang27":15}},{"path":"src/main/java/Store.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"public class Store {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"    private ArrayList\u003cTask\u003e storage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"    private int count \u003d 0;","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"    private HashSet\u003cString\u003e taskType \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"    public Store(String[] types) {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"        for (String type : types) {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"            taskType.add(type);","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"    public String addText(String text) throws DukeException{","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"        String[] tokens \u003d text.split(\"/\");","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"        String type_and_description \u003d tokens[0];","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"        String type \u003d type_and_description.split(\" \")[0];","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"        if (!taskType.contains(type)) {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"            throw new DukeException(\"Oh no! There is no such task :(\");","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"        String description \u003d type_and_description.substring(type.length());","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"            throw new DukeException(\"Oh no! We need a description for your task:(\");","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"        Task task;","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"        if (type.equals(\"todo\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"            task \u003d new ToDo(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"        } else if (type.equals(\"deadline\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"            try {","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"                String by \u003d tokens[1];","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"                task \u003d new Deadline(description, by);","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"                throw new DukeException(\"Oh no! Please state the deadline of the task :D\");","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"        } else  {","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"            try {","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"                String from \u003d tokens[1];","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"ziyang27"},"content":"                String to \u003d tokens[2];","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"ziyang27"},"content":"                task \u003d new Event(description, from, to);","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"ziyang27"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"ziyang27"},"content":"                throw new DukeException(\"Oh no! Please state the start and end of the task :D\");","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"ziyang27"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"ziyang27"},"content":"        storage.add(task);","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"ziyang27"},"content":"        count++;","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"ziyang27"},"content":"        return \"Got it. I\u0027ve added this task: \\n\" + task.toString() + \"\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"ziyang27"},"content":"                \"Now you have \" + this.count + (count \u003e 1 ? \" tasks \" : \" task \") +","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"ziyang27"},"content":"                \"in the list. \\n\";","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"ziyang27"},"content":"    public void displayStore() {","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"ziyang27"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"ziyang27"},"content":"        for (int i \u003d 0; i \u003c count; ++i) {","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"ziyang27"},"content":"            System.out.println((i + 1) + \".\" + storage.get(i).toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"ziyang27"},"content":"        System.out.println();","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"ziyang27"},"content":"    public void markTask(int i) {","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"ziyang27"},"content":"        Task task \u003d storage.get(i - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"ziyang27"},"content":"        task.markAsDone();","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"ziyang27"},"content":"    public void unmarkTask(int i) {","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"ziyang27"},"content":"        Task task \u003d storage.get(i - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"ziyang27"},"content":"        task.markAsNotDone();","lastModifiedDate":"2024-01-24"},{"lineNumber":68,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":69,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"ziyang27"},"content":"    public void deleteTask(int i) {","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"ziyang27"},"content":"        System.out.println(\"Noted. I\u0027m removing this task: \\n\" + storage.get(i - 1).toString() +","lastModifiedDate":"2024-01-24"},{"lineNumber":72,"author":{"gitId":"ziyang27"},"content":"                \"Now you have \" + --count + (count \u003e 1 ? \" tasks \" : \" task \") + \"in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"ziyang27"},"content":"        storage.remove(i - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ziyang27":78}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"    protected String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"        return (isDone ? \"[X] \" : \"[ ] \") + this.description ;","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + this.toString() + \"\\n\");","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet: \\n\" + this.toString() + \"\\n\");","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ziyang27":23}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ziyang27":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"event national day /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"deadline finish ip /by 25th August","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"todo buy iphone","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"unmark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ziyang27":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"java -classpath ..\\bin Dibo \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ziyang27":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"java -classpath ../bin Dibo \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ziyang27":1,"-":37}}]
