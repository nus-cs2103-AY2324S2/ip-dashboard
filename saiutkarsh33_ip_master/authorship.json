[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"saiutkarsh33"},"content":"    implementation group: \u0027org.xerial\u0027, name: \u0027sqlite-jdbc\u0027, version: \u00273.45.0.0\u0027","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"saiutkarsh33"},"content":"    implementation \u0027ch.qos.logback:logback-classic:1.4.12\u0027","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"saiutkarsh33"},"content":"    implementation group: \u0027io.github.cdimascio\u0027, name: \u0027dotenv-java\u0027, version: \u00273.0.0\u0027","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"saiutkarsh33"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"saiutkarsh33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"saiutkarsh33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"saiutkarsh33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"saiutkarsh33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"saiutkarsh33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"saiutkarsh33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"saiutkarsh33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"saiutkarsh33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"saiutkarsh33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"saiutkarsh33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"saiutkarsh33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"saiutkarsh33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"saiutkarsh33"},"content":"    mainClass.set(\"chatbot.Main\")","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"saiutkarsh33"},"content":"    archiveBaseName \u003d \"tfamily-final\"","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"saiutkarsh33"},"content":"run {","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"saiutkarsh33"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"saiutkarsh33":25,"-":40}},{"path":"data/task.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"[T][ ]    x","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"saiutkarsh33"},"content":"[T][ ]   x","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"saiutkarsh33"},"content":"[T][ ]   c","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"saiutkarsh33"},"content":"[T][ ]   v ","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"saiutkarsh33"},"content":"[T][ ]  f","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"saiutkarsh33"},"content":"[T][ ] guguiyguuubuyyyvyvyvyvyvyvyvv","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"saiutkarsh33":6}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"[T][ ] hi","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"saiutkarsh33"},"content":"[T][ ] x ","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"saiutkarsh33":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"# Tfamily bot User Guide","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"saiutkarsh33"},"content":"![Product Screenshot](./Ui.png)","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"saiutkarsh33"},"content":"Tfamily bot is a chatbot designed to assist you with creating, tracking, and managing your tasks. It can handle Todos, Deadlines, and Events with ease.","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"saiutkarsh33"},"content":"When you start the chatbot, you will be greeted with:","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"saiutkarsh33"},"content":"\u003e \"Hi! I\u0027m Tfamily bot. How can I assist you today?\"","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"saiutkarsh33"},"content":"## Features","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"saiutkarsh33"},"content":"### Todo","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"saiutkarsh33"},"content":"- **Add a Todo**","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"saiutkarsh33"},"content":"  - Example: `todo laundry`","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"saiutkarsh33"},"content":"  - Reply:","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"saiutkarsh33"},"content":"    ```","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"saiutkarsh33"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"saiutkarsh33"},"content":"    [T][] laundry","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"saiutkarsh33"},"content":"    Now you have 1 task in the list.","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"saiutkarsh33"},"content":"    ```","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"saiutkarsh33"},"content":"### Deadline","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"saiutkarsh33"},"content":"- **Add a Deadline**","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"saiutkarsh33"},"content":"  - Example: `deadline return book /by 2019-10-15`","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"saiutkarsh33"},"content":"  - Reply:","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"saiutkarsh33"},"content":"    ```","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"saiutkarsh33"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"saiutkarsh33"},"content":"    [D][] return book (by: Oct 15 2019)","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"saiutkarsh33"},"content":"    Now you have 2 tasks in the list.","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"saiutkarsh33"},"content":"    ```","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"saiutkarsh33"},"content":"### Event","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"saiutkarsh33"},"content":"- **Add an Event**","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"saiutkarsh33"},"content":"  - Example: `event project meeting /from Mon 2pm /to 4pm`","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"saiutkarsh33"},"content":"  - Reply:","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"saiutkarsh33"},"content":"    ```","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"saiutkarsh33"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"saiutkarsh33"},"content":"    [E][] project meeting (from: Mon 2pm to 4pm)","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"saiutkarsh33"},"content":"    Now you have 3 tasks in the list.","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"saiutkarsh33"},"content":"    ```","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"saiutkarsh33"},"content":"### List All Tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"saiutkarsh33"},"content":"- **View All Tasks**","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"saiutkarsh33"},"content":"  - Command: `list`","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"saiutkarsh33"},"content":"  - Reply:","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"saiutkarsh33"},"content":"    ```","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"saiutkarsh33"},"content":"    Here are all the todos, deadlines, and events currently present:","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"saiutkarsh33"},"content":"    [Your tasks list here]","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"saiutkarsh33"},"content":"    ```","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"saiutkarsh33"},"content":"### Mark and Unmark as Done","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"saiutkarsh33"},"content":"- **Mark/Unmark a Task as Done**","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"saiutkarsh33"},"content":"  - To mark as done: `mark 2`","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"saiutkarsh33"},"content":"  - To unmark: `unmark 2`","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"saiutkarsh33"},"content":"  - Reply:","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"saiutkarsh33"},"content":"    ```","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"saiutkarsh33"},"content":"    [Mark/Unmark] the second task in the list as [completed/uncompleted].","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"saiutkarsh33"},"content":"    ```","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"saiutkarsh33"},"content":"### Deleting a Task","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"saiutkarsh33"},"content":"- **Delete a Task**","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"saiutkarsh33"},"content":"  - Example: `delete 2`","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"saiutkarsh33"},"content":"  - Reply:","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2024-01-07"},{"lineNumber":72,"author":{"gitId":"saiutkarsh33"},"content":"    Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"saiutkarsh33"},"content":"    [Details of the deleted task]","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"saiutkarsh33"},"content":"    Now you have [number] tasks in the list.","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2024-01-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"saiutkarsh33"},"content":"### Find Tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"saiutkarsh33"},"content":"- **Search for Tasks**","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"saiutkarsh33"},"content":"  - Example: `find book`","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"saiutkarsh33"},"content":"  - Reply:","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"saiutkarsh33"},"content":"    ```","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"saiutkarsh33"},"content":"    Here are all the tasks containing \"book\":","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"saiutkarsh33"},"content":"    [List of tasks with \"book\"]","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"saiutkarsh33"},"content":"    ```","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"saiutkarsh33"},"content":"### Check Upcoming Deadlines","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"saiutkarsh33"},"content":"- **View Upcoming Deadlines**","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"saiutkarsh33"},"content":"  - Command: `upcoming`","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"saiutkarsh33"},"content":"  - Reply:","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"saiutkarsh33"},"content":"    ```","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"saiutkarsh33"},"content":"    Here are all the upcoming deadlines:","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"saiutkarsh33"},"content":"    [List of upcoming deadlines]","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"saiutkarsh33"},"content":"    ```","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":97,"author":{"gitId":"saiutkarsh33"},"content":"### Ending the Conversation","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"saiutkarsh33"},"content":"- **Say Goodbye**","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"saiutkarsh33"},"content":"  - Command: `bye`","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"saiutkarsh33"},"content":"  - Reply:","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"saiutkarsh33"},"content":"    ```","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"saiutkarsh33"},"content":"    Bye! Hope to see you again soon!","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"saiutkarsh33"},"content":"    ```","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"saiutkarsh33"},"content":"### Invalid Input","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"saiutkarsh33"},"content":"- **Handle Unknown Commands**","lastModifiedDate":"2024-02-23"},{"lineNumber":109,"author":{"gitId":"saiutkarsh33"},"content":"  - Reply:","lastModifiedDate":"2024-02-23"},{"lineNumber":110,"author":{"gitId":"saiutkarsh33"},"content":"    ```","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"saiutkarsh33"},"content":"    Sorry, invalid input.","lastModifiedDate":"2024-02-23"},{"lineNumber":112,"author":{"gitId":"saiutkarsh33"},"content":"    ```","lastModifiedDate":"2024-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":114,"author":{"gitId":"saiutkarsh33"},"content":"For a more detailed guide on each feature and additional commands, please refer to our [Extended User Manual](link-to-extended-manual).","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"saiutkarsh33":91,"-":23}},{"path":"src/main/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"[D][X] return book (by: Oct 15 2019)","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"saiutkarsh33":1}},{"path":"src/main/gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"@rem","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"saiutkarsh33"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"saiutkarsh33"},"content":"@rem","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"saiutkarsh33"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"saiutkarsh33"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"saiutkarsh33"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"saiutkarsh33"},"content":"@rem","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"saiutkarsh33"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"saiutkarsh33"},"content":"@rem","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"saiutkarsh33"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"saiutkarsh33"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"saiutkarsh33"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"saiutkarsh33"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"saiutkarsh33"},"content":"@rem limitations under the License.","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"saiutkarsh33"},"content":"@rem","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"saiutkarsh33"},"content":"@if \"%DEBUG%\"\u003d\u003d\"\" @echo off","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"saiutkarsh33"},"content":"@rem ##########################################################################","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"saiutkarsh33"},"content":"@rem","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"saiutkarsh33"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"saiutkarsh33"},"content":"@rem","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"saiutkarsh33"},"content":"@rem ##########################################################################","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"saiutkarsh33"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"saiutkarsh33"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"saiutkarsh33"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"saiutkarsh33"},"content":"if \"%DIRNAME%\"\u003d\u003d\"\" set DIRNAME\u003d.","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"saiutkarsh33"},"content":"@rem This is normally unused","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"saiutkarsh33"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"saiutkarsh33"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"saiutkarsh33"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"saiutkarsh33"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"saiutkarsh33"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"saiutkarsh33"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"saiutkarsh33"},"content":"@rem Find java.exe","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"saiutkarsh33"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"saiutkarsh33"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"saiutkarsh33"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"saiutkarsh33"},"content":"if %ERRORLEVEL% equ 0 goto execute","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"saiutkarsh33"},"content":"echo.","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"saiutkarsh33"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"saiutkarsh33"},"content":"echo.","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"saiutkarsh33"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"saiutkarsh33"},"content":"echo location of your Java installation.","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"saiutkarsh33"},"content":"goto fail","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"saiutkarsh33"},"content":":findJavaFromJavaHome","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"saiutkarsh33"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"saiutkarsh33"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"saiutkarsh33"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"saiutkarsh33"},"content":"echo.","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"saiutkarsh33"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"saiutkarsh33"},"content":"echo.","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"saiutkarsh33"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"saiutkarsh33"},"content":"echo location of your Java installation.","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"saiutkarsh33"},"content":"goto fail","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"saiutkarsh33"},"content":":execute","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"saiutkarsh33"},"content":"@rem Setup the command line","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"saiutkarsh33"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"saiutkarsh33"},"content":"@rem Execute Gradle","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"saiutkarsh33"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"saiutkarsh33"},"content":":end","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"saiutkarsh33"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"saiutkarsh33"},"content":"if %ERRORLEVEL% equ 0 goto mainEnd","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"saiutkarsh33"},"content":":fail","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"saiutkarsh33"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"saiutkarsh33"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"saiutkarsh33"},"content":"set EXIT_CODE\u003d%ERRORLEVEL%","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"saiutkarsh33"},"content":"if %EXIT_CODE% equ 0 set EXIT_CODE\u003d1","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"saiutkarsh33"},"content":"if not \"\"\u003d\u003d\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"saiutkarsh33"},"content":"exit /b %EXIT_CODE%","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"saiutkarsh33"},"content":":mainEnd","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"saiutkarsh33"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"saiutkarsh33"},"content":":omega","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"saiutkarsh33":92}},{"path":"src/main/java/chatbot/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"package chatbot;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"saiutkarsh33"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"saiutkarsh33"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"saiutkarsh33"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"saiutkarsh33"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"saiutkarsh33"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"saiutkarsh33"},"content":"  @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"saiutkarsh33"},"content":"  private Label dialog;","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"saiutkarsh33"},"content":"  @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"saiutkarsh33"},"content":"  private ImageView displayPicture;","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"saiutkarsh33"},"content":"  private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"saiutkarsh33"},"content":"    assert text !\u003d null : \"Text cannot be null\";","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"saiutkarsh33"},"content":"    assert img !\u003d null : \"Image cannot be null\";","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"saiutkarsh33"},"content":"    try {","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"saiutkarsh33"},"content":"      FXMLLoader fxmlLoader \u003d new FXMLLoader(","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"saiutkarsh33"},"content":"        MainWindow.class.getResource(\"/view/DialogBox.fxml\")","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"saiutkarsh33"},"content":"      );","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"saiutkarsh33"},"content":"      fxmlLoader.setController(this);","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"saiutkarsh33"},"content":"      fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"saiutkarsh33"},"content":"      fxmlLoader.load();","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"saiutkarsh33"},"content":"    } catch (IOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"saiutkarsh33"},"content":"      e.printStackTrace();","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"saiutkarsh33"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"saiutkarsh33"},"content":"    dialog.setText(text);","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"saiutkarsh33"},"content":"    displayPicture.setImage(img);","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"saiutkarsh33"},"content":"   * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"saiutkarsh33"},"content":"  private void flip() {","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"saiutkarsh33"},"content":"    ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"saiutkarsh33"},"content":"      this.getChildren()","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"saiutkarsh33"},"content":"    );","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"saiutkarsh33"},"content":"    Collections.reverse(tmp);","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"saiutkarsh33"},"content":"    getChildren().setAll(tmp);","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"saiutkarsh33"},"content":"    setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"saiutkarsh33"},"content":"  public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"saiutkarsh33"},"content":"    return new DialogBox(text, img);","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"saiutkarsh33"},"content":"  public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"saiutkarsh33"},"content":"    var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"saiutkarsh33"},"content":"    db.flip();","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"saiutkarsh33"},"content":"    return db;","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"saiutkarsh33":68}},{"path":"src/main/java/chatbot/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"package chatbot;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.File;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"saiutkarsh33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"saiutkarsh33"},"content":" * Thrown to indicate that the description for a Todo task cannot be empty.","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"saiutkarsh33"},"content":"class EmptyTodoException extends Exception {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"saiutkarsh33"},"content":"  public EmptyTodoException() {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"saiutkarsh33"},"content":"    super(\"Todo cannot have empty description .\");","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"saiutkarsh33"},"content":" * Thrown to indicate that the description for a Deadline task cannot be empty.","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"saiutkarsh33"},"content":"class EmptyDeadlineException extends Exception {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"saiutkarsh33"},"content":"  public EmptyDeadlineException() {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"saiutkarsh33"},"content":"    super(\"Deadline cannot have empty description.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"saiutkarsh33"},"content":" * Thrown to indicate that the description for an Event task cannot be empty.","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"saiutkarsh33"},"content":"class EmptyEventException extends Exception {","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"saiutkarsh33"},"content":"  public EmptyEventException() {","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"saiutkarsh33"},"content":"    super(\"Event cannot have empty description.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"saiutkarsh33"},"content":" * Thrown to indicate that the user input is invalid.","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"saiutkarsh33"},"content":"class InvalidException extends Exception {","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"saiutkarsh33"},"content":"  public InvalidException() {","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"saiutkarsh33"},"content":"    super(\"Sorry, invalid input.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"saiutkarsh33"},"content":" * Represents a generic task with a description and a completion status.","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"saiutkarsh33"},"content":"class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"saiutkarsh33"},"content":"  private String description;","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"saiutkarsh33"},"content":"  private boolean isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"saiutkarsh33"},"content":"  public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"saiutkarsh33"},"content":"    assert description !\u003d null \u0026\u0026","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"saiutkarsh33"},"content":"    !description.trim().isEmpty() : \"Task description cannot be null or empty\";","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"saiutkarsh33"},"content":"    this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"saiutkarsh33"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":82,"author":{"gitId":"saiutkarsh33"},"content":"  public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"saiutkarsh33"},"content":"    return (isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2024-01-24"},{"lineNumber":84,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-24"},{"lineNumber":85,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":86,"author":{"gitId":"saiutkarsh33"},"content":"  public void markAsDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"saiutkarsh33"},"content":"    this.isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-24"},{"lineNumber":89,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":90,"author":{"gitId":"saiutkarsh33"},"content":"  public void markAsUndone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":91,"author":{"gitId":"saiutkarsh33"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-24"},{"lineNumber":93,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":94,"author":{"gitId":"saiutkarsh33"},"content":"  @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":95,"author":{"gitId":"saiutkarsh33"},"content":"  public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":96,"author":{"gitId":"saiutkarsh33"},"content":"    return (this.getStatusIcon() + this.description);","lastModifiedDate":"2024-01-24"},{"lineNumber":97,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-24"},{"lineNumber":98,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"saiutkarsh33"},"content":"  public String getDescription() {","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"saiutkarsh33"},"content":"    return description;","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":103,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":104,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"saiutkarsh33"},"content":" * Represents a Todo task.","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"saiutkarsh33"},"content":"class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":108,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":109,"author":{"gitId":"saiutkarsh33"},"content":"  public Todo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":110,"author":{"gitId":"saiutkarsh33"},"content":"    super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":111,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-24"},{"lineNumber":112,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"saiutkarsh33"},"content":"  @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":114,"author":{"gitId":"saiutkarsh33"},"content":"  public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":115,"author":{"gitId":"saiutkarsh33"},"content":"    return (\"[T]\" + super.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":116,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-24"},{"lineNumber":117,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":118,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":119,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":120,"author":{"gitId":"saiutkarsh33"},"content":" * Represents a Deadline task with a due date.","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"saiutkarsh33"},"content":"class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":123,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":124,"author":{"gitId":"saiutkarsh33"},"content":"  protected String by;","lastModifiedDate":"2024-01-24"},{"lineNumber":125,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":126,"author":{"gitId":"saiutkarsh33"},"content":"  public Deadline(String description, String dateString) {","lastModifiedDate":"2024-01-27"},{"lineNumber":127,"author":{"gitId":"saiutkarsh33"},"content":"    super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":128,"author":{"gitId":"saiutkarsh33"},"content":"    assert dateString !\u003d null : \"Deadline date cannot be null\";","lastModifiedDate":"2024-02-10"},{"lineNumber":129,"author":{"gitId":"saiutkarsh33"},"content":"    LocalDate date \u003d LocalDate.parse(dateString);","lastModifiedDate":"2024-01-27"},{"lineNumber":130,"author":{"gitId":"saiutkarsh33"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-01-27"},{"lineNumber":131,"author":{"gitId":"saiutkarsh33"},"content":"    this.by \u003d date.format(formatter);","lastModifiedDate":"2024-01-27"},{"lineNumber":132,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-24"},{"lineNumber":133,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":134,"author":{"gitId":"saiutkarsh33"},"content":"  @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":135,"author":{"gitId":"saiutkarsh33"},"content":"  public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":136,"author":{"gitId":"saiutkarsh33"},"content":"    return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":137,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-24"},{"lineNumber":138,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":139,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":140,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":141,"author":{"gitId":"saiutkarsh33"},"content":" * Represents an Event task with a start and end time.","lastModifiedDate":"2024-01-28"},{"lineNumber":142,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":143,"author":{"gitId":"saiutkarsh33"},"content":"class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":144,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":145,"author":{"gitId":"saiutkarsh33"},"content":"  protected String from;","lastModifiedDate":"2024-01-24"},{"lineNumber":146,"author":{"gitId":"saiutkarsh33"},"content":"  protected String to;","lastModifiedDate":"2024-01-24"},{"lineNumber":147,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":148,"author":{"gitId":"saiutkarsh33"},"content":"  public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-24"},{"lineNumber":149,"author":{"gitId":"saiutkarsh33"},"content":"    super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":150,"author":{"gitId":"saiutkarsh33"},"content":"    assert from !\u003d null \u0026\u0026 to !\u003d null : \"Event times cannot be null\";","lastModifiedDate":"2024-02-10"},{"lineNumber":151,"author":{"gitId":"saiutkarsh33"},"content":"    this.from \u003d from;","lastModifiedDate":"2024-01-24"},{"lineNumber":152,"author":{"gitId":"saiutkarsh33"},"content":"    this.to \u003d to;","lastModifiedDate":"2024-01-24"},{"lineNumber":153,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-24"},{"lineNumber":154,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":155,"author":{"gitId":"saiutkarsh33"},"content":"  @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":156,"author":{"gitId":"saiutkarsh33"},"content":"  public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":157,"author":{"gitId":"saiutkarsh33"},"content":"    return (\"[E]\" + super.toString() + \" (from: \" + from + \"to: \" + to + \")\");","lastModifiedDate":"2024-02-23"},{"lineNumber":158,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-24"},{"lineNumber":159,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":160,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":161,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":162,"author":{"gitId":"saiutkarsh33"},"content":" * The main class for the chatbot application. It initializes and runs the chatbot,","lastModifiedDate":"2024-01-28"},{"lineNumber":163,"author":{"gitId":"saiutkarsh33"},"content":" * handling the primary control flow of the application.","lastModifiedDate":"2024-01-28"},{"lineNumber":164,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":165,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":166,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":167,"author":{"gitId":"saiutkarsh33"},"content":"  private TaskList myList;","lastModifiedDate":"2024-01-28"},{"lineNumber":168,"author":{"gitId":"saiutkarsh33"},"content":"  private Storage st;","lastModifiedDate":"2024-01-28"},{"lineNumber":169,"author":{"gitId":"saiutkarsh33"},"content":"  private Ui ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":170,"author":{"gitId":"saiutkarsh33"},"content":"  private Parser p;","lastModifiedDate":"2024-01-28"},{"lineNumber":171,"author":{"gitId":"saiutkarsh33"},"content":"  private ScrollPane scrollPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":172,"author":{"gitId":"saiutkarsh33"},"content":"  private VBox dialogContainer;","lastModifiedDate":"2024-02-05"},{"lineNumber":173,"author":{"gitId":"saiutkarsh33"},"content":"  private TextField userInput;","lastModifiedDate":"2024-02-05"},{"lineNumber":174,"author":{"gitId":"saiutkarsh33"},"content":"  private Button sendButton;","lastModifiedDate":"2024-02-05"},{"lineNumber":175,"author":{"gitId":"saiutkarsh33"},"content":"  private Scene scene;","lastModifiedDate":"2024-02-05"},{"lineNumber":176,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":177,"author":{"gitId":"saiutkarsh33"},"content":"  private Image user \u003d new Image(","lastModifiedDate":"2024-02-05"},{"lineNumber":178,"author":{"gitId":"saiutkarsh33"},"content":"    this.getClass().getResourceAsStream(\"/images/DaUser.png\")","lastModifiedDate":"2024-02-05"},{"lineNumber":179,"author":{"gitId":"saiutkarsh33"},"content":"  );","lastModifiedDate":"2024-02-05"},{"lineNumber":180,"author":{"gitId":"saiutkarsh33"},"content":"  private Image duke \u003d new Image(","lastModifiedDate":"2024-02-05"},{"lineNumber":181,"author":{"gitId":"saiutkarsh33"},"content":"    this.getClass().getResourceAsStream(\"/images/DaDuke.png\")","lastModifiedDate":"2024-02-05"},{"lineNumber":182,"author":{"gitId":"saiutkarsh33"},"content":"  );","lastModifiedDate":"2024-02-05"},{"lineNumber":183,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":184,"author":{"gitId":"saiutkarsh33"},"content":"  public Duke() {","lastModifiedDate":"2024-02-05"},{"lineNumber":185,"author":{"gitId":"saiutkarsh33"},"content":"    this.st \u003d new Storage(\"./data/task.txt\");","lastModifiedDate":"2024-02-23"},{"lineNumber":186,"author":{"gitId":"saiutkarsh33"},"content":"    ArrayList\u003cTask\u003e tasks \u003d st.loadTasks();","lastModifiedDate":"2024-02-23"},{"lineNumber":187,"author":{"gitId":"saiutkarsh33"},"content":"    this.myList \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-23"},{"lineNumber":188,"author":{"gitId":"saiutkarsh33"},"content":"    this.p \u003d new Parser();","lastModifiedDate":"2024-01-28"},{"lineNumber":189,"author":{"gitId":"saiutkarsh33"},"content":"    this.ui \u003d new Ui(this.myList);","lastModifiedDate":"2024-01-28"},{"lineNumber":190,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-24"},{"lineNumber":191,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":192,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":193,"author":{"gitId":"saiutkarsh33"},"content":"   * Starts and runs the chatbot. This method keeps the chatbot running","lastModifiedDate":"2024-01-28"},{"lineNumber":194,"author":{"gitId":"saiutkarsh33"},"content":"   * until the user decides to exit.","lastModifiedDate":"2024-01-28"},{"lineNumber":195,"author":{"gitId":"saiutkarsh33"},"content":"   * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-01-28"},{"lineNumber":196,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":197,"author":{"gitId":"saiutkarsh33"},"content":"  public void run() throws IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":198,"author":{"gitId":"saiutkarsh33"},"content":"    ui.start();","lastModifiedDate":"2024-01-28"},{"lineNumber":199,"author":{"gitId":"saiutkarsh33"},"content":"    boolean continueChat \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":200,"author":{"gitId":"saiutkarsh33"},"content":"    while (continueChat) {","lastModifiedDate":"2024-01-28"},{"lineNumber":201,"author":{"gitId":"saiutkarsh33"},"content":"      continueChat \u003d ui.reply(this.st);","lastModifiedDate":"2024-01-29"},{"lineNumber":202,"author":{"gitId":"saiutkarsh33"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":203,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-24"},{"lineNumber":204,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":205,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-02-05"},{"lineNumber":206,"author":{"gitId":"saiutkarsh33"},"content":"   * Iteration 1:","lastModifiedDate":"2024-02-05"},{"lineNumber":207,"author":{"gitId":"saiutkarsh33"},"content":"   * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2024-02-05"},{"lineNumber":208,"author":{"gitId":"saiutkarsh33"},"content":"   * @param text String containing text to add","lastModifiedDate":"2024-02-05"},{"lineNumber":209,"author":{"gitId":"saiutkarsh33"},"content":"   * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2024-02-05"},{"lineNumber":210,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-02-05"},{"lineNumber":211,"author":{"gitId":"saiutkarsh33"},"content":"  private Label getDialogLabel(String text) {","lastModifiedDate":"2024-02-05"},{"lineNumber":212,"author":{"gitId":"saiutkarsh33"},"content":"    // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2024-02-05"},{"lineNumber":213,"author":{"gitId":"saiutkarsh33"},"content":"    Label textToAdd \u003d new Label(text);","lastModifiedDate":"2024-02-05"},{"lineNumber":214,"author":{"gitId":"saiutkarsh33"},"content":"    textToAdd.setWrapText(true);","lastModifiedDate":"2024-02-05"},{"lineNumber":215,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":216,"author":{"gitId":"saiutkarsh33"},"content":"    return textToAdd;","lastModifiedDate":"2024-02-05"},{"lineNumber":217,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-02-05"},{"lineNumber":218,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":219,"author":{"gitId":"saiutkarsh33"},"content":"  public String getResponse(String input) {","lastModifiedDate":"2024-02-05"},{"lineNumber":220,"author":{"gitId":"saiutkarsh33"},"content":"    String[] words \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2024-02-05"},{"lineNumber":221,"author":{"gitId":"saiutkarsh33"},"content":"    String detail \u003d words.length \u003e 1 ? words[1] : \"\";","lastModifiedDate":"2024-02-05"},{"lineNumber":222,"author":{"gitId":"saiutkarsh33"},"content":"    return this.p.parseThrough(input, words, detail, this.myList, this.st);","lastModifiedDate":"2024-02-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2019-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"saiutkarsh33":221,"-":3}},{"path":"src/main/java/chatbot/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"package chatbot;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"saiutkarsh33"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"saiutkarsh33"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"saiutkarsh33"},"content":"  private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"saiutkarsh33"},"content":"  @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"saiutkarsh33"},"content":"  public void start(Stage stage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"saiutkarsh33"},"content":"    try {","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"saiutkarsh33"},"content":"      FXMLLoader fxmlLoader \u003d new FXMLLoader(","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"saiutkarsh33"},"content":"        Main.class.getResource(\"/view/MainWindow.fxml\")","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"saiutkarsh33"},"content":"      );","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"saiutkarsh33"},"content":"      assert Main.class.getResource(\"/view/MainWindow.fxml\") !\u003d","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"saiutkarsh33"},"content":"      null : \"FXML file not found\";","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"saiutkarsh33"},"content":"      AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"saiutkarsh33"},"content":"      stage.setTitle(\"Tfamily bot\");","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"saiutkarsh33"},"content":"      assert ap !\u003d null : \"AnchorPane could not be loaded from FXML file\";","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"saiutkarsh33"},"content":"      Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"saiutkarsh33"},"content":"      stage.setScene(scene);","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"saiutkarsh33"},"content":"      fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"saiutkarsh33"},"content":"      stage.show();","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"saiutkarsh33"},"content":"    } catch (IOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"saiutkarsh33"},"content":"      e.printStackTrace();","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"saiutkarsh33"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"saiutkarsh33"},"content":"  public static void main(String[] args) throws IOException {","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"saiutkarsh33"},"content":"    Application.launch(Main.class, args);","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"saiutkarsh33":40}},{"path":"src/main/java/chatbot/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"package chatbot;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"saiutkarsh33"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"saiutkarsh33"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"saiutkarsh33"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"saiutkarsh33"},"content":"  @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"saiutkarsh33"},"content":"  private ScrollPane scrollPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"saiutkarsh33"},"content":"  @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"saiutkarsh33"},"content":"  private VBox dialogContainer;","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"saiutkarsh33"},"content":"  @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"saiutkarsh33"},"content":"  private TextField userInput;","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"saiutkarsh33"},"content":"  @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"saiutkarsh33"},"content":"  private Button sendButton;","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"saiutkarsh33"},"content":"  private Duke duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"saiutkarsh33"},"content":"  private Image userImage \u003d new Image(","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"saiutkarsh33"},"content":"    this.getClass().getResourceAsStream(\"/images/DaUser.png\")","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"saiutkarsh33"},"content":"  );","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"saiutkarsh33"},"content":"  private Image dukeImage \u003d new Image(","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"saiutkarsh33"},"content":"    this.getClass().getResourceAsStream(\"/images/DaDuke.png\")","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"saiutkarsh33"},"content":"  );","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"saiutkarsh33"},"content":"  @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"saiutkarsh33"},"content":"  public void initialize() {","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"saiutkarsh33"},"content":"    scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"saiutkarsh33"},"content":"    String dukeGreeting \u003d \"Hi! I\u0027m Tfamily bot. How can I assist you today?\";","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"saiutkarsh33"},"content":"    dialogContainer","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"saiutkarsh33"},"content":"      .getChildren()","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"saiutkarsh33"},"content":"      .add(DialogBox.getDukeDialog(dukeGreeting, dukeImage));","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"saiutkarsh33"},"content":"    assert scrollPane !\u003d null : \"FXML failed to load ScrollPane\";","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"saiutkarsh33"},"content":"    assert dialogContainer !\u003d null : \"FXML failed to load VBox\";","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"saiutkarsh33"},"content":"    assert userInput !\u003d null : \"FXML failed to load TextField\";","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"saiutkarsh33"},"content":"    assert sendButton !\u003d null : \"FXML failed to load Button\";","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"saiutkarsh33"},"content":"  public void setDuke(Duke d) {","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"saiutkarsh33"},"content":"    duke \u003d d;","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"saiutkarsh33"},"content":"   * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"saiutkarsh33"},"content":"   * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"saiutkarsh33"},"content":"  @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"saiutkarsh33"},"content":"  private void handleUserInput() {","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"saiutkarsh33"},"content":"    assert userInput !\u003d null : \"User input TextField cannot be null\";","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"saiutkarsh33"},"content":"    assert duke !\u003d null : \"Duke instance has not been initialized\";","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"saiutkarsh33"},"content":"    String input \u003d userInput.getText();","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"saiutkarsh33"},"content":"    assert input !\u003d null \u0026\u0026","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"saiutkarsh33"},"content":"    !input.isEmpty() : \"User input cannot be null or empty\";","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"saiutkarsh33"},"content":"    String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"saiutkarsh33"},"content":"    dialogContainer","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"saiutkarsh33"},"content":"      .getChildren()","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"saiutkarsh33"},"content":"      .addAll(","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"saiutkarsh33"},"content":"        DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"saiutkarsh33"},"content":"        DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"saiutkarsh33"},"content":"      );","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"saiutkarsh33"},"content":"    userInput.clear();","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"saiutkarsh33":74}},{"path":"src/main/java/chatbot/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"package chatbot;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"saiutkarsh33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"saiutkarsh33"},"content":" * The Parser class handles user interactions and processes input commands.","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"saiutkarsh33"},"content":" * It contains logic to interpret user commands and to determine the appropriate response","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"saiutkarsh33"},"content":" * or error message, based on the current state and data of the application.","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"saiutkarsh33"},"content":"public class Parser {","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"saiutkarsh33"},"content":"  public Parser() {}","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"saiutkarsh33"},"content":"   * Checks if the user wants to end the chat.","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"saiutkarsh33"},"content":"   * @param words Array of strings representing the user\u0027s input, split into words.","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"saiutkarsh33"},"content":"   * @return true if the first word is \"bye\", indicating a request to end the chat; false otherwise.","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"saiutkarsh33"},"content":"  public boolean isItDone(String[] words) {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"saiutkarsh33"},"content":"    return words[0].equals(\"bye\");","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"saiutkarsh33"},"content":"   * Processes the user input and performs actions based on the given commands.","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"saiutkarsh33"},"content":"   * This method can add, delete, or modify tasks in the task list, mark tasks as done or not done,","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"saiutkarsh33"},"content":"   * and handle other user commands. It returns a string response that should be shown to the user.","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"saiutkarsh33"},"content":"   * In case of invalid or incomplete commands, it throws specific exceptions.","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"saiutkarsh33"},"content":"   * @param io The input string provided by the user.","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"saiutkarsh33"},"content":"   * @param words Array of strings representing the user\u0027s input, split into words.","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"saiutkarsh33"},"content":"   * @param detail The detail part of the user\u0027s input, excluding the command word.","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"saiutkarsh33"},"content":"   * @param myList The current list of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"saiutkarsh33"},"content":"   * @param st The storage handler for reading from and writing to the data file.","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"saiutkarsh33"},"content":"   * @return A string response based on the user\u0027s input and the action performed.","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"saiutkarsh33"},"content":"   * @throws EmptyTodoException If a \"todo\" command is given without a description.","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"saiutkarsh33"},"content":"   * @throws EmptyDeadlineException If a \"deadline\" command is given without a description or deadline.","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"saiutkarsh33"},"content":"   * @throws EmptyEventException If an \"event\" command is given without a description or event time.","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"saiutkarsh33"},"content":"   * @throws InvalidException If an invalid command is given.","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"saiutkarsh33"},"content":"  String end \u003d","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"saiutkarsh33"},"content":"    \"\\n____________________________________________________________\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"saiutkarsh33"},"content":"  public String parseThrough(","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"saiutkarsh33"},"content":"    String io,","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"saiutkarsh33"},"content":"    String[] words,","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"saiutkarsh33"},"content":"    String detail,","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"saiutkarsh33"},"content":"    TaskList myList,","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"saiutkarsh33"},"content":"    Storage st","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"saiutkarsh33"},"content":"  ) {","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"saiutkarsh33"},"content":"    try {","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"saiutkarsh33"},"content":"      if (words[0].equals(\"todo\") \u0026\u0026 detail.equals(\"\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"saiutkarsh33"},"content":"        throw new EmptyTodoException();","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"saiutkarsh33"},"content":"      } else if (words[0].equals(\"deadline\") \u0026\u0026 detail.equals(\"\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"saiutkarsh33"},"content":"        throw new EmptyDeadlineException();","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"saiutkarsh33"},"content":"      } else if (words[0].equals(\"event\") \u0026\u0026 detail.equals(\"\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"saiutkarsh33"},"content":"        throw new EmptyEventException();","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"saiutkarsh33"},"content":"      } else if (words[0].equals(\"bye\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"saiutkarsh33"},"content":"        return (\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"saiutkarsh33"},"content":"      } else if (words[0].equals(\"list\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"saiutkarsh33"},"content":"        return handleListCommand(myList);","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"saiutkarsh33"},"content":"      } else if (words[0].equals(\"upcoming\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"saiutkarsh33"},"content":"        return handleUpcomingCommand(myList);","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"saiutkarsh33"},"content":"      } else if (words[0].equals(\"mark\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"saiutkarsh33"},"content":"        return handleMarkCommand(words, myList, st);","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"saiutkarsh33"},"content":"      } else if (words[0].equals(\"unmark\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"saiutkarsh33"},"content":"        return handleUnmarkCommand(words, myList, st);","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"saiutkarsh33"},"content":"      } else if (words[0].equals(\"todo\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"saiutkarsh33"},"content":"        return handleTodoCommand(detail, myList, st);","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"saiutkarsh33"},"content":"      } else if (words[0].equals(\"deadline\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"saiutkarsh33"},"content":"        return handleDeadlineCommand(detail, myList, st);","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"saiutkarsh33"},"content":"      } else if (words[0].equals(\"event\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"saiutkarsh33"},"content":"        return handleEventCommand(detail, myList, st);","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"saiutkarsh33"},"content":"      } else if (words[0].equals(\"delete\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"saiutkarsh33"},"content":"        return handleDeleteCommand(words, myList, st);","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"saiutkarsh33"},"content":"      } else if (words[0].equals(\"find\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"saiutkarsh33"},"content":"        return handleFindCommand(detail, myList);","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"saiutkarsh33"},"content":"      } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"saiutkarsh33"},"content":"        throw new InvalidException();","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"saiutkarsh33"},"content":"      }","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"saiutkarsh33"},"content":"    } catch (EmptyTodoException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"saiutkarsh33"},"content":"      return (e.getMessage() + end);","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"saiutkarsh33"},"content":"    } catch (EmptyDeadlineException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"saiutkarsh33"},"content":"      return (e.getMessage() + end);","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"saiutkarsh33"},"content":"    } catch (EmptyEventException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"saiutkarsh33"},"content":"      return (e.getMessage() + end);","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"saiutkarsh33"},"content":"    } catch (InvalidException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"saiutkarsh33"},"content":"      return (e.getMessage() + end);","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"saiutkarsh33"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"saiutkarsh33"},"content":"   * Generates a string representation of all tasks in the task list.","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"saiutkarsh33"},"content":"   * This method iterates through the entire task list, appending each task\u0027s","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"saiutkarsh33"},"content":"   * string representation to a StringBuilder along with its position in the list,","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"saiutkarsh33"},"content":"   * then returns the resulting string.","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"saiutkarsh33"},"content":"   * @param myList The TaskList containing the tasks to be listed.","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"saiutkarsh33"},"content":"   * @return A String that lists all tasks in my list with their indices.","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"saiutkarsh33"},"content":"  public String handleListCommand(TaskList myList) {","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"saiutkarsh33"},"content":"    StringBuilder listString \u003d new StringBuilder();","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"saiutkarsh33"},"content":"    for (int i \u003d 0; i \u003c myList.len(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"saiutkarsh33"},"content":"      int show \u003d i + 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"saiutkarsh33"},"content":"      listString.append(show).append(\".\").append(myList.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":112,"author":{"gitId":"saiutkarsh33"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"saiutkarsh33"},"content":"    return listString.toString();","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-02-23"},{"lineNumber":115,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":116,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-02-23"},{"lineNumber":117,"author":{"gitId":"saiutkarsh33"},"content":"   * Generates a string representation of all upcoming deadlines in the task list.","lastModifiedDate":"2024-02-23"},{"lineNumber":118,"author":{"gitId":"saiutkarsh33"},"content":"   * This method filters tasks for instances of Deadline and appends their index,","lastModifiedDate":"2024-02-23"},{"lineNumber":119,"author":{"gitId":"saiutkarsh33"},"content":"   * description, and due date to a StringBuilder. The resulting string includes","lastModifiedDate":"2024-02-23"},{"lineNumber":120,"author":{"gitId":"saiutkarsh33"},"content":"   * only tasks that are deadlines.","lastModifiedDate":"2024-02-23"},{"lineNumber":121,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-02-23"},{"lineNumber":122,"author":{"gitId":"saiutkarsh33"},"content":"   * @param myList The TaskList containing the tasks to be filtered and listed.","lastModifiedDate":"2024-02-23"},{"lineNumber":123,"author":{"gitId":"saiutkarsh33"},"content":"   * @return A string representation of all Deadline tasks in the list, each prefixed with its index.","lastModifiedDate":"2024-02-23"},{"lineNumber":124,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-02-23"},{"lineNumber":125,"author":{"gitId":"saiutkarsh33"},"content":"  public String handleUpcomingCommand(TaskList myList) {","lastModifiedDate":"2024-02-23"},{"lineNumber":126,"author":{"gitId":"saiutkarsh33"},"content":"    StringBuilder listString \u003d new StringBuilder();","lastModifiedDate":"2024-02-11"},{"lineNumber":127,"author":{"gitId":"saiutkarsh33"},"content":"    for (int i \u003d 0; i \u003c myList.len(); i++) {","lastModifiedDate":"2024-02-11"},{"lineNumber":128,"author":{"gitId":"saiutkarsh33"},"content":"      if (myList.get(i) instanceof Deadline) { // Check if it\u0027s an instance of Deadline","lastModifiedDate":"2024-02-11"},{"lineNumber":129,"author":{"gitId":"saiutkarsh33"},"content":"        int show \u003d i + 1;","lastModifiedDate":"2024-02-11"},{"lineNumber":130,"author":{"gitId":"saiutkarsh33"},"content":"        listString","lastModifiedDate":"2024-02-11"},{"lineNumber":131,"author":{"gitId":"saiutkarsh33"},"content":"          .append(show)","lastModifiedDate":"2024-02-11"},{"lineNumber":132,"author":{"gitId":"saiutkarsh33"},"content":"          .append(\".\")","lastModifiedDate":"2024-02-11"},{"lineNumber":133,"author":{"gitId":"saiutkarsh33"},"content":"          .append(myList.get(i)) // This will now only append if it\u0027s a Deadline","lastModifiedDate":"2024-02-11"},{"lineNumber":134,"author":{"gitId":"saiutkarsh33"},"content":"          .append(\"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":135,"author":{"gitId":"saiutkarsh33"},"content":"      }","lastModifiedDate":"2024-02-11"},{"lineNumber":136,"author":{"gitId":"saiutkarsh33"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":137,"author":{"gitId":"saiutkarsh33"},"content":"    return listString.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":138,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-02-23"},{"lineNumber":139,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":140,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-02-23"},{"lineNumber":141,"author":{"gitId":"saiutkarsh33"},"content":"   * Marks a specified task as done and updates the task list file accordingly.","lastModifiedDate":"2024-02-23"},{"lineNumber":142,"author":{"gitId":"saiutkarsh33"},"content":"   * This method marks the task at the given index (specified by the second element","lastModifiedDate":"2024-02-23"},{"lineNumber":143,"author":{"gitId":"saiutkarsh33"},"content":"   * in the {@code words} array) as done, then rewrites the task list to storage.","lastModifiedDate":"2024-02-23"},{"lineNumber":144,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-02-23"},{"lineNumber":145,"author":{"gitId":"saiutkarsh33"},"content":"   * @param words An array of strings where the second element is the index of the task to be marked as done.","lastModifiedDate":"2024-02-23"},{"lineNumber":146,"author":{"gitId":"saiutkarsh33"},"content":"   * @param myList The TaskList containing the task to be marked.","lastModifiedDate":"2024-02-23"},{"lineNumber":147,"author":{"gitId":"saiutkarsh33"},"content":"   * @param st The Storage instance used to rewrite the updated task list to file.","lastModifiedDate":"2024-02-23"},{"lineNumber":148,"author":{"gitId":"saiutkarsh33"},"content":"   * @return A confirmation message indicating the task has been marked as done, including the task\u0027s description.","lastModifiedDate":"2024-02-23"},{"lineNumber":149,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-02-23"},{"lineNumber":150,"author":{"gitId":"saiutkarsh33"},"content":"  public String handleMarkCommand(String[] words, TaskList myList, Storage st) {","lastModifiedDate":"2024-02-23"},{"lineNumber":151,"author":{"gitId":"saiutkarsh33"},"content":"    int c \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":152,"author":{"gitId":"saiutkarsh33"},"content":"    myList.asDone(c);","lastModifiedDate":"2024-01-28"},{"lineNumber":153,"author":{"gitId":"saiutkarsh33"},"content":"    st.rewriteFile(myList.mine());","lastModifiedDate":"2024-01-28"},{"lineNumber":154,"author":{"gitId":"saiutkarsh33"},"content":"    return (","lastModifiedDate":"2024-02-23"},{"lineNumber":155,"author":{"gitId":"saiutkarsh33"},"content":"      \"Nice! I\u0027ve marked this task as done:\\n\" + myList.get(c - 1).toString()","lastModifiedDate":"2024-02-23"},{"lineNumber":156,"author":{"gitId":"saiutkarsh33"},"content":"    );","lastModifiedDate":"2024-02-23"},{"lineNumber":157,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-02-23"},{"lineNumber":158,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":159,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-02-23"},{"lineNumber":160,"author":{"gitId":"saiutkarsh33"},"content":"   * Marks a specified task as not done and updates the task list file accordingly.","lastModifiedDate":"2024-02-23"},{"lineNumber":161,"author":{"gitId":"saiutkarsh33"},"content":"   * Similar to handleMarkCommand, this method marks the task at the given index","lastModifiedDate":"2024-02-23"},{"lineNumber":162,"author":{"gitId":"saiutkarsh33"},"content":"   * (specified by the second element in the {@code words} array) as not done,","lastModifiedDate":"2024-02-23"},{"lineNumber":163,"author":{"gitId":"saiutkarsh33"},"content":"   * then rewrites the task list to storage.","lastModifiedDate":"2024-02-23"},{"lineNumber":164,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-02-23"},{"lineNumber":165,"author":{"gitId":"saiutkarsh33"},"content":"   * @param words An array of strings where the second element is the index of the task to be marked as not done.","lastModifiedDate":"2024-02-23"},{"lineNumber":166,"author":{"gitId":"saiutkarsh33"},"content":"   * @param myList The TaskList containing the task to be unmarked.","lastModifiedDate":"2024-02-23"},{"lineNumber":167,"author":{"gitId":"saiutkarsh33"},"content":"   * @param st The Storage instance used to rewrite the updated task list to file.","lastModifiedDate":"2024-02-23"},{"lineNumber":168,"author":{"gitId":"saiutkarsh33"},"content":"   * @return A confirmation message indicating the task has been marked as not done, including the task\u0027s description.","lastModifiedDate":"2024-02-23"},{"lineNumber":169,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-02-23"},{"lineNumber":170,"author":{"gitId":"saiutkarsh33"},"content":"  public String handleUnmarkCommand(","lastModifiedDate":"2024-02-23"},{"lineNumber":171,"author":{"gitId":"saiutkarsh33"},"content":"    String[] words,","lastModifiedDate":"2024-02-23"},{"lineNumber":172,"author":{"gitId":"saiutkarsh33"},"content":"    TaskList myList,","lastModifiedDate":"2024-02-23"},{"lineNumber":173,"author":{"gitId":"saiutkarsh33"},"content":"    Storage st","lastModifiedDate":"2024-02-23"},{"lineNumber":174,"author":{"gitId":"saiutkarsh33"},"content":"  ) {","lastModifiedDate":"2024-02-23"},{"lineNumber":175,"author":{"gitId":"saiutkarsh33"},"content":"    int c \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":176,"author":{"gitId":"saiutkarsh33"},"content":"    myList.asNotDone(c);","lastModifiedDate":"2024-01-28"},{"lineNumber":177,"author":{"gitId":"saiutkarsh33"},"content":"    st.rewriteFile(myList.mine());","lastModifiedDate":"2024-01-28"},{"lineNumber":178,"author":{"gitId":"saiutkarsh33"},"content":"    return (","lastModifiedDate":"2024-02-23"},{"lineNumber":179,"author":{"gitId":"saiutkarsh33"},"content":"      \"Nice! I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":180,"author":{"gitId":"saiutkarsh33"},"content":"      myList.get(c - 1).toString()","lastModifiedDate":"2024-02-23"},{"lineNumber":181,"author":{"gitId":"saiutkarsh33"},"content":"    );","lastModifiedDate":"2024-02-23"},{"lineNumber":182,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-02-23"},{"lineNumber":183,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":184,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-02-23"},{"lineNumber":185,"author":{"gitId":"saiutkarsh33"},"content":"   * Handles the creation and addition of a new Todo task to the task list.","lastModifiedDate":"2024-02-23"},{"lineNumber":186,"author":{"gitId":"saiutkarsh33"},"content":"   * If the detail argument is empty, this method throws an EmptyTodoException.","lastModifiedDate":"2024-02-23"},{"lineNumber":187,"author":{"gitId":"saiutkarsh33"},"content":"   * After creating the Todo task, it is added to the task list, and the list","lastModifiedDate":"2024-02-23"},{"lineNumber":188,"author":{"gitId":"saiutkarsh33"},"content":"   * is subsequently rewritten to storage.","lastModifiedDate":"2024-02-23"},{"lineNumber":189,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-02-23"},{"lineNumber":190,"author":{"gitId":"saiutkarsh33"},"content":"   * @param detail The description of the Todo task.","lastModifiedDate":"2024-02-23"},{"lineNumber":191,"author":{"gitId":"saiutkarsh33"},"content":"   * @param myList The TaskList to which the new task will be added.","lastModifiedDate":"2024-02-23"},{"lineNumber":192,"author":{"gitId":"saiutkarsh33"},"content":"   * @param st The Storage instance used to update the tasks file.","lastModifiedDate":"2024-02-23"},{"lineNumber":193,"author":{"gitId":"saiutkarsh33"},"content":"   * @return A confirmation message indicating the task has been added, along with the current task count.","lastModifiedDate":"2024-02-23"},{"lineNumber":194,"author":{"gitId":"saiutkarsh33"},"content":"   * @throws EmptyTodoException If the detail argument is empty.","lastModifiedDate":"2024-02-23"},{"lineNumber":195,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-02-23"},{"lineNumber":196,"author":{"gitId":"saiutkarsh33"},"content":"  public String handleTodoCommand(String detail, TaskList myList, Storage st)","lastModifiedDate":"2024-02-23"},{"lineNumber":197,"author":{"gitId":"saiutkarsh33"},"content":"    throws EmptyTodoException {","lastModifiedDate":"2024-02-23"},{"lineNumber":198,"author":{"gitId":"saiutkarsh33"},"content":"    if (detail.equals(\"\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":199,"author":{"gitId":"saiutkarsh33"},"content":"      throw new EmptyTodoException();","lastModifiedDate":"2024-02-23"},{"lineNumber":200,"author":{"gitId":"saiutkarsh33"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":201,"author":{"gitId":"saiutkarsh33"},"content":"    Todo t \u003d new Todo(detail);","lastModifiedDate":"2024-01-28"},{"lineNumber":202,"author":{"gitId":"saiutkarsh33"},"content":"    myList.add(t);","lastModifiedDate":"2024-01-28"},{"lineNumber":203,"author":{"gitId":"saiutkarsh33"},"content":"    st.rewriteFile(myList.mine());","lastModifiedDate":"2024-01-28"},{"lineNumber":204,"author":{"gitId":"saiutkarsh33"},"content":"    return buildTaskAddedMessage(t, myList);","lastModifiedDate":"2024-02-23"},{"lineNumber":205,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-02-23"},{"lineNumber":206,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":207,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-02-23"},{"lineNumber":208,"author":{"gitId":"saiutkarsh33"},"content":"   * Handles the creation and addition of a new Deadline task to the task list.","lastModifiedDate":"2024-02-23"},{"lineNumber":209,"author":{"gitId":"saiutkarsh33"},"content":"   * The detail argument must contain the task description and the due date,","lastModifiedDate":"2024-02-23"},{"lineNumber":210,"author":{"gitId":"saiutkarsh33"},"content":"   * separated by \"/by\". If the detail argument is empty or improperly formatted,","lastModifiedDate":"2024-02-23"},{"lineNumber":211,"author":{"gitId":"saiutkarsh33"},"content":"   * this method throws an EmptyDeadlineException. The new Deadline task is then","lastModifiedDate":"2024-02-23"},{"lineNumber":212,"author":{"gitId":"saiutkarsh33"},"content":"   * added to the task list, which is rewritten to storage.","lastModifiedDate":"2024-02-23"},{"lineNumber":213,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-02-23"},{"lineNumber":214,"author":{"gitId":"saiutkarsh33"},"content":"   * @param detail The description of the Deadline task, including the due date.","lastModifiedDate":"2024-02-23"},{"lineNumber":215,"author":{"gitId":"saiutkarsh33"},"content":"   * @param myList The TaskList to which the new task will be added.","lastModifiedDate":"2024-02-23"},{"lineNumber":216,"author":{"gitId":"saiutkarsh33"},"content":"   * @param st The Storage instance used to update the tasks file.","lastModifiedDate":"2024-02-23"},{"lineNumber":217,"author":{"gitId":"saiutkarsh33"},"content":"   * @return A confirmation message indicating the task has been added, along with the current task count.","lastModifiedDate":"2024-02-23"},{"lineNumber":218,"author":{"gitId":"saiutkarsh33"},"content":"   * @throws EmptyDeadlineException If the detail argument is empty or missing a due date.","lastModifiedDate":"2024-02-23"},{"lineNumber":219,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-02-23"},{"lineNumber":220,"author":{"gitId":"saiutkarsh33"},"content":"  public String handleDeadlineCommand(","lastModifiedDate":"2024-02-23"},{"lineNumber":221,"author":{"gitId":"saiutkarsh33"},"content":"    String detail,","lastModifiedDate":"2024-02-23"},{"lineNumber":222,"author":{"gitId":"saiutkarsh33"},"content":"    TaskList myList,","lastModifiedDate":"2024-02-23"},{"lineNumber":223,"author":{"gitId":"saiutkarsh33"},"content":"    Storage st","lastModifiedDate":"2024-02-23"},{"lineNumber":224,"author":{"gitId":"saiutkarsh33"},"content":"  ) throws EmptyDeadlineException {","lastModifiedDate":"2024-02-23"},{"lineNumber":225,"author":{"gitId":"saiutkarsh33"},"content":"    if (detail.equals(\"\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":226,"author":{"gitId":"saiutkarsh33"},"content":"      throw new EmptyDeadlineException();","lastModifiedDate":"2024-02-23"},{"lineNumber":227,"author":{"gitId":"saiutkarsh33"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":228,"author":{"gitId":"saiutkarsh33"},"content":"    String[] parts \u003d detail.split(\"\\\\s*/by\\\\s*\", 2);","lastModifiedDate":"2024-01-28"},{"lineNumber":229,"author":{"gitId":"saiutkarsh33"},"content":"    Deadline t \u003d new Deadline(parts[0], parts[1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":230,"author":{"gitId":"saiutkarsh33"},"content":"    myList.add(t);","lastModifiedDate":"2024-01-28"},{"lineNumber":231,"author":{"gitId":"saiutkarsh33"},"content":"    st.rewriteFile(myList.mine());","lastModifiedDate":"2024-01-28"},{"lineNumber":232,"author":{"gitId":"saiutkarsh33"},"content":"    return buildTaskAddedMessage(t, myList);","lastModifiedDate":"2024-02-23"},{"lineNumber":233,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-02-23"},{"lineNumber":234,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":235,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-02-23"},{"lineNumber":236,"author":{"gitId":"saiutkarsh33"},"content":"   * Handles the creation and addition of a new Event task to the task list.","lastModifiedDate":"2024-02-23"},{"lineNumber":237,"author":{"gitId":"saiutkarsh33"},"content":"   * The detail argument must contain the task description, start time, and end time,","lastModifiedDate":"2024-02-23"},{"lineNumber":238,"author":{"gitId":"saiutkarsh33"},"content":"   * with the start and end times separated by \"/from\" and \"/to\". If the detail","lastModifiedDate":"2024-02-23"},{"lineNumber":239,"author":{"gitId":"saiutkarsh33"},"content":"   * argument is empty or improperly formatted, this method throws an EmptyEventException.","lastModifiedDate":"2024-02-23"},{"lineNumber":240,"author":{"gitId":"saiutkarsh33"},"content":"   * The new Event task is added to the task list, which is then rewritten to storage.","lastModifiedDate":"2024-02-23"},{"lineNumber":241,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-02-23"},{"lineNumber":242,"author":{"gitId":"saiutkarsh33"},"content":"   * @param detail The description of the Event task, including start and end times.","lastModifiedDate":"2024-02-23"},{"lineNumber":243,"author":{"gitId":"saiutkarsh33"},"content":"   * @param myList The TaskList to which the new task will be added.","lastModifiedDate":"2024-02-23"},{"lineNumber":244,"author":{"gitId":"saiutkarsh33"},"content":"   * @param st The Storage instance used to update the tasks file.","lastModifiedDate":"2024-02-23"},{"lineNumber":245,"author":{"gitId":"saiutkarsh33"},"content":"   * @return A confirmation message indicating the task has been added, along with the current task count.","lastModifiedDate":"2024-02-23"},{"lineNumber":246,"author":{"gitId":"saiutkarsh33"},"content":"   * @throws EmptyEventException If the detail argument is empty or missing time information.","lastModifiedDate":"2024-02-23"},{"lineNumber":247,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-02-23"},{"lineNumber":248,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":249,"author":{"gitId":"saiutkarsh33"},"content":"  public String handleEventCommand(String detail, TaskList myList, Storage st)","lastModifiedDate":"2024-02-23"},{"lineNumber":250,"author":{"gitId":"saiutkarsh33"},"content":"    throws EmptyEventException {","lastModifiedDate":"2024-02-23"},{"lineNumber":251,"author":{"gitId":"saiutkarsh33"},"content":"    if (detail.equals(\"\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":252,"author":{"gitId":"saiutkarsh33"},"content":"      throw new EmptyEventException();","lastModifiedDate":"2024-02-23"},{"lineNumber":253,"author":{"gitId":"saiutkarsh33"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":254,"author":{"gitId":"saiutkarsh33"},"content":"    String[] firstSplit \u003d detail.split(\"\\\\s*/from\\\\s*\", 2);","lastModifiedDate":"2024-01-28"},{"lineNumber":255,"author":{"gitId":"saiutkarsh33"},"content":"    String[] secondSplit \u003d firstSplit[1].split(\"\\\\s*/to\\\\s*\", 2);","lastModifiedDate":"2024-01-28"},{"lineNumber":256,"author":{"gitId":"saiutkarsh33"},"content":"    Event t \u003d new Event(firstSplit[0], secondSplit[0], secondSplit[1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":257,"author":{"gitId":"saiutkarsh33"},"content":"    myList.add(t);","lastModifiedDate":"2024-01-28"},{"lineNumber":258,"author":{"gitId":"saiutkarsh33"},"content":"    st.rewriteFile(myList.mine());","lastModifiedDate":"2024-01-28"},{"lineNumber":259,"author":{"gitId":"saiutkarsh33"},"content":"    return buildTaskAddedMessage(t, myList);","lastModifiedDate":"2024-02-23"},{"lineNumber":260,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-02-23"},{"lineNumber":261,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":262,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-02-23"},{"lineNumber":263,"author":{"gitId":"saiutkarsh33"},"content":"   * Builds a confirmation message for adding a task to the task list.","lastModifiedDate":"2024-02-23"},{"lineNumber":264,"author":{"gitId":"saiutkarsh33"},"content":"   * This method constructs a message that confirms the task has been added,","lastModifiedDate":"2024-02-23"},{"lineNumber":265,"author":{"gitId":"saiutkarsh33"},"content":"   * displays the added task, and informs the user of the current total number of tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":266,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-02-23"},{"lineNumber":267,"author":{"gitId":"saiutkarsh33"},"content":"   * @param t The task that was added.","lastModifiedDate":"2024-02-23"},{"lineNumber":268,"author":{"gitId":"saiutkarsh33"},"content":"   * @param myList The TaskList to which the task was added.","lastModifiedDate":"2024-02-23"},{"lineNumber":269,"author":{"gitId":"saiutkarsh33"},"content":"   * @return A string containing the confirmation message and current task count.","lastModifiedDate":"2024-02-23"},{"lineNumber":270,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-02-23"},{"lineNumber":271,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":272,"author":{"gitId":"saiutkarsh33"},"content":"  private String buildTaskAddedMessage(Task t, TaskList myList) {","lastModifiedDate":"2024-02-23"},{"lineNumber":273,"author":{"gitId":"saiutkarsh33"},"content":"    return (","lastModifiedDate":"2024-02-23"},{"lineNumber":274,"author":{"gitId":"saiutkarsh33"},"content":"      \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":275,"author":{"gitId":"saiutkarsh33"},"content":"      t.toString() +","lastModifiedDate":"2024-02-23"},{"lineNumber":276,"author":{"gitId":"saiutkarsh33"},"content":"      \"\\nNow you have \" +","lastModifiedDate":"2024-02-23"},{"lineNumber":277,"author":{"gitId":"saiutkarsh33"},"content":"      myList.len() +","lastModifiedDate":"2024-02-23"},{"lineNumber":278,"author":{"gitId":"saiutkarsh33"},"content":"      \" tasks in the list.\"","lastModifiedDate":"2024-02-23"},{"lineNumber":279,"author":{"gitId":"saiutkarsh33"},"content":"    );","lastModifiedDate":"2024-02-23"},{"lineNumber":280,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-02-23"},{"lineNumber":281,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":282,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-02-23"},{"lineNumber":283,"author":{"gitId":"saiutkarsh33"},"content":"   * Handles the deletion of a task from the task list based on its index.","lastModifiedDate":"2024-02-23"},{"lineNumber":284,"author":{"gitId":"saiutkarsh33"},"content":"   * This method removes the specified task from the task list and updates the storage file.","lastModifiedDate":"2024-02-23"},{"lineNumber":285,"author":{"gitId":"saiutkarsh33"},"content":"   * If the specified index is out of bounds, it returns an error message instead.","lastModifiedDate":"2024-02-23"},{"lineNumber":286,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-02-23"},{"lineNumber":287,"author":{"gitId":"saiutkarsh33"},"content":"   * @param words An array of strings where the second element is expected to be the index of the task to delete.","lastModifiedDate":"2024-02-23"},{"lineNumber":288,"author":{"gitId":"saiutkarsh33"},"content":"   * @param myList The TaskList from which the task will be removed.","lastModifiedDate":"2024-02-23"},{"lineNumber":289,"author":{"gitId":"saiutkarsh33"},"content":"   * @param st The Storage instance used to update the tasks file after deletion.","lastModifiedDate":"2024-02-23"},{"lineNumber":290,"author":{"gitId":"saiutkarsh33"},"content":"   * @return A confirmation message indicating the task has been removed, along with the current task count,","lastModifiedDate":"2024-02-23"},{"lineNumber":291,"author":{"gitId":"saiutkarsh33"},"content":"   *         or an error message if the specified index is out of bounds.","lastModifiedDate":"2024-02-23"},{"lineNumber":292,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-02-23"},{"lineNumber":293,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":294,"author":{"gitId":"saiutkarsh33"},"content":"  public String handleDeleteCommand(","lastModifiedDate":"2024-02-23"},{"lineNumber":295,"author":{"gitId":"saiutkarsh33"},"content":"    String[] words,","lastModifiedDate":"2024-02-23"},{"lineNumber":296,"author":{"gitId":"saiutkarsh33"},"content":"    TaskList myList,","lastModifiedDate":"2024-02-23"},{"lineNumber":297,"author":{"gitId":"saiutkarsh33"},"content":"    Storage st","lastModifiedDate":"2024-02-23"},{"lineNumber":298,"author":{"gitId":"saiutkarsh33"},"content":"  ) {","lastModifiedDate":"2024-02-23"},{"lineNumber":299,"author":{"gitId":"saiutkarsh33"},"content":"    int c \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":300,"author":{"gitId":"saiutkarsh33"},"content":"    if (c \u003e 0 \u0026\u0026 c \u003c\u003d myList.len()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":301,"author":{"gitId":"saiutkarsh33"},"content":"      Task t \u003d myList.get(c - 1);","lastModifiedDate":"2024-01-28"},{"lineNumber":302,"author":{"gitId":"saiutkarsh33"},"content":"      myList.remove(c - 1);","lastModifiedDate":"2024-01-28"},{"lineNumber":303,"author":{"gitId":"saiutkarsh33"},"content":"      st.rewriteFile(myList.mine());","lastModifiedDate":"2024-01-28"},{"lineNumber":304,"author":{"gitId":"saiutkarsh33"},"content":"      StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2024-01-28"},{"lineNumber":305,"author":{"gitId":"saiutkarsh33"},"content":"      message","lastModifiedDate":"2024-01-29"},{"lineNumber":306,"author":{"gitId":"saiutkarsh33"},"content":"        .append(\"Noted. I\u0027ve removed this task:\\n\")","lastModifiedDate":"2024-02-23"},{"lineNumber":307,"author":{"gitId":"saiutkarsh33"},"content":"        .append(t.toString())","lastModifiedDate":"2024-02-23"},{"lineNumber":308,"author":{"gitId":"saiutkarsh33"},"content":"        .append(\"\\nNow you have \")","lastModifiedDate":"2024-02-23"},{"lineNumber":309,"author":{"gitId":"saiutkarsh33"},"content":"        .append(myList.len())","lastModifiedDate":"2024-01-29"},{"lineNumber":310,"author":{"gitId":"saiutkarsh33"},"content":"        .append(\" tasks in the list.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":311,"author":{"gitId":"saiutkarsh33"},"content":"      return message.toString();","lastModifiedDate":"2024-02-23"},{"lineNumber":312,"author":{"gitId":"saiutkarsh33"},"content":"    } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":313,"author":{"gitId":"saiutkarsh33"},"content":"      return \"Error: Task number out of bounds.\";","lastModifiedDate":"2024-02-23"},{"lineNumber":314,"author":{"gitId":"saiutkarsh33"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":315,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-02-23"},{"lineNumber":316,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":317,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-02-23"},{"lineNumber":318,"author":{"gitId":"saiutkarsh33"},"content":"   * Searches for tasks that contain the given detail in their description and generates a list of matching tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":319,"author":{"gitId":"saiutkarsh33"},"content":"   * This method iterates through all tasks in the list and adds those that contain the specified detail","lastModifiedDate":"2024-02-23"},{"lineNumber":320,"author":{"gitId":"saiutkarsh33"},"content":"   * to the result string. It includes a header and footer for readability if any matches are found, or a message","lastModifiedDate":"2024-02-23"},{"lineNumber":321,"author":{"gitId":"saiutkarsh33"},"content":"   * indicating no matches were found otherwise.","lastModifiedDate":"2024-02-23"},{"lineNumber":322,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-02-23"},{"lineNumber":323,"author":{"gitId":"saiutkarsh33"},"content":"   * @param detail The text to search for in the task descriptions.","lastModifiedDate":"2024-02-23"},{"lineNumber":324,"author":{"gitId":"saiutkarsh33"},"content":"   * @param myList The TaskList to search through.","lastModifiedDate":"2024-02-23"},{"lineNumber":325,"author":{"gitId":"saiutkarsh33"},"content":"   * @return A string listing all tasks that contain the specified detail in their description if any matches are found;","lastModifiedDate":"2024-02-23"},{"lineNumber":326,"author":{"gitId":"saiutkarsh33"},"content":"   *         otherwise, a message indicating no tasks were found with the detail.","lastModifiedDate":"2024-02-23"},{"lineNumber":327,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-02-23"},{"lineNumber":328,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":329,"author":{"gitId":"saiutkarsh33"},"content":"  public String handleFindCommand(String detail, TaskList myList) {","lastModifiedDate":"2024-02-23"},{"lineNumber":330,"author":{"gitId":"saiutkarsh33"},"content":"    int count \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":331,"author":{"gitId":"saiutkarsh33"},"content":"    StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-01-28"},{"lineNumber":332,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":333,"author":{"gitId":"saiutkarsh33"},"content":"    // Search through the tasks for matches","lastModifiedDate":"2024-02-23"},{"lineNumber":334,"author":{"gitId":"saiutkarsh33"},"content":"    for (Task task : myList.mine()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":335,"author":{"gitId":"saiutkarsh33"},"content":"      if (task.getDescription().contains(detail)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":336,"author":{"gitId":"saiutkarsh33"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2024-02-23"},{"lineNumber":337,"author":{"gitId":"saiutkarsh33"},"content":"          // Header for the result, only added before listing the first result","lastModifiedDate":"2024-02-23"},{"lineNumber":338,"author":{"gitId":"saiutkarsh33"},"content":"          result","lastModifiedDate":"2024-02-23"},{"lineNumber":339,"author":{"gitId":"saiutkarsh33"},"content":"            .append(","lastModifiedDate":"2024-02-23"},{"lineNumber":340,"author":{"gitId":"saiutkarsh33"},"content":"              \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":341,"author":{"gitId":"saiutkarsh33"},"content":"            )","lastModifiedDate":"2024-02-23"},{"lineNumber":342,"author":{"gitId":"saiutkarsh33"},"content":"            .append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":343,"author":{"gitId":"saiutkarsh33"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":344,"author":{"gitId":"saiutkarsh33"},"content":"        count++;","lastModifiedDate":"2024-02-23"},{"lineNumber":345,"author":{"gitId":"saiutkarsh33"},"content":"        result.append(count).append(\".\").append(task).append(\"\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":346,"author":{"gitId":"saiutkarsh33"},"content":"      }","lastModifiedDate":"2024-01-28"},{"lineNumber":347,"author":{"gitId":"saiutkarsh33"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":348,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":349,"author":{"gitId":"saiutkarsh33"},"content":"    if (count \u003e 0) {","lastModifiedDate":"2024-01-28"},{"lineNumber":350,"author":{"gitId":"saiutkarsh33"},"content":"      // Footer for the result to separate the list visually","lastModifiedDate":"2024-02-23"},{"lineNumber":351,"author":{"gitId":"saiutkarsh33"},"content":"      result.append(","lastModifiedDate":"2024-01-29"},{"lineNumber":352,"author":{"gitId":"saiutkarsh33"},"content":"        \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":353,"author":{"gitId":"saiutkarsh33"},"content":"      );","lastModifiedDate":"2024-01-29"},{"lineNumber":354,"author":{"gitId":"saiutkarsh33"},"content":"    } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":355,"author":{"gitId":"saiutkarsh33"},"content":"      // Message when no tasks match the query","lastModifiedDate":"2024-02-23"},{"lineNumber":356,"author":{"gitId":"saiutkarsh33"},"content":"      result.append(\"No tasks found with the detail: \").append(detail);","lastModifiedDate":"2024-01-28"},{"lineNumber":357,"author":{"gitId":"saiutkarsh33"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":358,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":359,"author":{"gitId":"saiutkarsh33"},"content":"    return result.toString();","lastModifiedDate":"2024-01-28"},{"lineNumber":360,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":361,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"saiutkarsh33":361}},{"path":"src/main/java/chatbot/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"package chatbot;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"saiutkarsh33"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"saiutkarsh33"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"saiutkarsh33"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"saiutkarsh33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"saiutkarsh33"},"content":"import java.util.List;","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"saiutkarsh33"},"content":" * The Storage class manages the persistent storage of task data in a file.","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"saiutkarsh33"},"content":" * It is responsible for creating the file (if it doesn\u0027t exist) and writing the tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"saiutkarsh33"},"content":" * from a TaskList into this file. This allows for persisting the tasks across different","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"saiutkarsh33"},"content":" * sessions of the application.","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"saiutkarsh33"},"content":"public class Storage {","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"saiutkarsh33"},"content":"  private String filePath;","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"saiutkarsh33"},"content":"   * Constructs a new Storage object.","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"saiutkarsh33"},"content":"   * @param filePath The path of the file where tasks will be stored and retrieved.","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"saiutkarsh33"},"content":"  public Storage(String filePath) {","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"saiutkarsh33"},"content":"    this.filePath \u003d filePath;","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"saiutkarsh33"},"content":"    createFileIfNeeded();","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"saiutkarsh33"},"content":"   * Ensures that the storage file exists. If the file does not exist, this method","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"saiutkarsh33"},"content":"   * creates the necessary directories and the file itself. This method is called during","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"saiutkarsh33"},"content":"   * the initialization of the Storage object to prepare the file for reading and writing tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"saiutkarsh33"},"content":"  public void createFileIfNeeded() {","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"saiutkarsh33"},"content":"    try {","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"saiutkarsh33"},"content":"      Path path \u003d Paths.get(filePath);","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"saiutkarsh33"},"content":"      if (!Files.exists(path)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"saiutkarsh33"},"content":"        Files.createDirectories(path.getParent());","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"saiutkarsh33"},"content":"        Files.createFile(path);","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"saiutkarsh33"},"content":"      }","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"saiutkarsh33"},"content":"    } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"saiutkarsh33"},"content":"      e.printStackTrace();","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"saiutkarsh33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"saiutkarsh33"},"content":"   * Rewrites the entire task list to the storage file. This method is typically called","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"saiutkarsh33"},"content":"   * when there is a change in the tasks list (like adding, removing, or modifying tasks)","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"saiutkarsh33"},"content":"   * to update the persistent storage.","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"saiutkarsh33"},"content":"   * @param tasks The list of tasks to be written to the file.","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"saiutkarsh33"},"content":"  public void rewriteFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"saiutkarsh33"},"content":"    assert tasks !\u003d null : \"Tasks list cannot be null\";","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"saiutkarsh33"},"content":"    try (","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"saiutkarsh33"},"content":"      BufferedWriter bw \u003d new BufferedWriter(new FileWriter(filePath, false))","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"saiutkarsh33"},"content":"    ) {","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"saiutkarsh33"},"content":"      for (Task task : tasks) {","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"saiutkarsh33"},"content":"        bw.write(task.toString());","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"saiutkarsh33"},"content":"        bw.newLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"saiutkarsh33"},"content":"      }","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"saiutkarsh33"},"content":"    } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"saiutkarsh33"},"content":"      e.printStackTrace();","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"saiutkarsh33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"saiutkarsh33"},"content":"   * Loads tasks from the specified file path into an ArrayList of Task  objects.","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"saiutkarsh33"},"content":"   * \u003cp\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"saiutkarsh33"},"content":"   * This method reads the file line by line, converting each line into a Task  object using","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"saiutkarsh33"},"content":"   * the {@code parseLineToTask} method (which needs to be implemented based on your task format).","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"saiutkarsh33"},"content":"   * If the file does not exist, this method returns an empty list. It is designed to be called at","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"saiutkarsh33"},"content":"   * the initialization of the application to populate the task list with previously saved tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"saiutkarsh33"},"content":"   * \u003c/p\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"saiutkarsh33"},"content":"   * @return An ArrayList containing Task objects loaded from the file. If the file","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"saiutkarsh33"},"content":"   * does not exist or an error occurs during reading, this method will return an empty list.","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"saiutkarsh33"},"content":"   * @throws IOException If an I/O error occurs reading from the file. The exception is caught","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"saiutkarsh33"},"content":"   * within the method and printed to the standard error stream, but not rethrown.","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"saiutkarsh33"},"content":"  public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"saiutkarsh33"},"content":"    ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"saiutkarsh33"},"content":"    try {","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"saiutkarsh33"},"content":"      Path path \u003d Paths.get(filePath);","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"saiutkarsh33"},"content":"      if (Files.exists(path)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"saiutkarsh33"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"saiutkarsh33"},"content":"        for (String line : lines) {","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"saiutkarsh33"},"content":"          Task task \u003d parseLineToTask(line);","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"saiutkarsh33"},"content":"          loadedTasks.add(task);","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"saiutkarsh33"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"saiutkarsh33"},"content":"      }","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"saiutkarsh33"},"content":"    } catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"saiutkarsh33"},"content":"      e.printStackTrace();","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"saiutkarsh33"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"saiutkarsh33"},"content":"    return loadedTasks;","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-02-23"},{"lineNumber":109,"author":{"gitId":"saiutkarsh33"},"content":"   * Parses a single line from the stored task data into a Task object.","lastModifiedDate":"2024-02-23"},{"lineNumber":110,"author":{"gitId":"saiutkarsh33"},"content":"   * This method identifies the task type (Todo, Deadline, Event) based on","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"saiutkarsh33"},"content":"   * prefixes in the line and extracts the necessary information to create","lastModifiedDate":"2024-02-23"},{"lineNumber":112,"author":{"gitId":"saiutkarsh33"},"content":"   * an instance of the corresponding task type. It also checks whether the","lastModifiedDate":"2024-02-23"},{"lineNumber":113,"author":{"gitId":"saiutkarsh33"},"content":"   * task was marked as done and sets its status accordingly.","lastModifiedDate":"2024-02-23"},{"lineNumber":114,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-02-23"},{"lineNumber":115,"author":{"gitId":"saiutkarsh33"},"content":"   * The expected format for each task type is as follows:","lastModifiedDate":"2024-02-23"},{"lineNumber":116,"author":{"gitId":"saiutkarsh33"},"content":"   * - Todo: \"[T][X] description\" or \"[T][ ] description\" where \u0027X\u0027 indicates the task is done.","lastModifiedDate":"2024-02-23"},{"lineNumber":117,"author":{"gitId":"saiutkarsh33"},"content":"   * - Deadline: \"[D][X] description (by: date)\" or \"[D][ ] description (by: date)\".","lastModifiedDate":"2024-02-23"},{"lineNumber":118,"author":{"gitId":"saiutkarsh33"},"content":"   * - Event: \"[E][X] description (from: start time to: end time)\" or","lastModifiedDate":"2024-02-23"},{"lineNumber":119,"author":{"gitId":"saiutkarsh33"},"content":"   *          \"[E][ ] description (from: start time to: end time)\".","lastModifiedDate":"2024-02-23"},{"lineNumber":120,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-02-23"},{"lineNumber":121,"author":{"gitId":"saiutkarsh33"},"content":"   * @param line A string representing a single line from the task data file.","lastModifiedDate":"2024-02-23"},{"lineNumber":122,"author":{"gitId":"saiutkarsh33"},"content":"   * @return A Task object corresponding to the data represented by the line.","lastModifiedDate":"2024-02-23"},{"lineNumber":123,"author":{"gitId":"saiutkarsh33"},"content":"   *         Returns null if the line format does not match any known task type.","lastModifiedDate":"2024-02-23"},{"lineNumber":124,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-02-23"},{"lineNumber":125,"author":{"gitId":"saiutkarsh33"},"content":"  private Task parseLineToTask(String line) {","lastModifiedDate":"2024-02-23"},{"lineNumber":126,"author":{"gitId":"saiutkarsh33"},"content":"    Task task \u003d null;","lastModifiedDate":"2024-02-23"},{"lineNumber":127,"author":{"gitId":"saiutkarsh33"},"content":"    boolean isDone \u003d line.charAt(3) \u003d\u003d \u0027X\u0027; // Check if the task is marked as done","lastModifiedDate":"2024-02-23"},{"lineNumber":128,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":129,"author":{"gitId":"saiutkarsh33"},"content":"    if (line.startsWith(\"[T]\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":130,"author":{"gitId":"saiutkarsh33"},"content":"      // Extract description for Todo","lastModifiedDate":"2024-02-23"},{"lineNumber":131,"author":{"gitId":"saiutkarsh33"},"content":"      String description \u003d line.substring(6); // Skip over the [T][ ] part","lastModifiedDate":"2024-02-23"},{"lineNumber":132,"author":{"gitId":"saiutkarsh33"},"content":"      Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-02-23"},{"lineNumber":133,"author":{"gitId":"saiutkarsh33"},"content":"      if (isDone) {","lastModifiedDate":"2024-02-23"},{"lineNumber":134,"author":{"gitId":"saiutkarsh33"},"content":"        todo.markAsDone();","lastModifiedDate":"2024-02-23"},{"lineNumber":135,"author":{"gitId":"saiutkarsh33"},"content":"      }","lastModifiedDate":"2024-02-23"},{"lineNumber":136,"author":{"gitId":"saiutkarsh33"},"content":"      task \u003d todo;","lastModifiedDate":"2024-02-23"},{"lineNumber":137,"author":{"gitId":"saiutkarsh33"},"content":"    } else if (line.startsWith(\"[D]\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":138,"author":{"gitId":"saiutkarsh33"},"content":"      // Extract description and by date for Deadline","lastModifiedDate":"2024-02-23"},{"lineNumber":139,"author":{"gitId":"saiutkarsh33"},"content":"      int byIndex \u003d line.indexOf(\"(by: \");","lastModifiedDate":"2024-02-23"},{"lineNumber":140,"author":{"gitId":"saiutkarsh33"},"content":"      String description \u003d line.substring(6, byIndex - 1).trim();","lastModifiedDate":"2024-02-23"},{"lineNumber":141,"author":{"gitId":"saiutkarsh33"},"content":"      String by \u003d line.substring(byIndex + 5, line.length() - 1); // Extract date","lastModifiedDate":"2024-02-23"},{"lineNumber":142,"author":{"gitId":"saiutkarsh33"},"content":"      Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-23"},{"lineNumber":143,"author":{"gitId":"saiutkarsh33"},"content":"      if (isDone) {","lastModifiedDate":"2024-02-23"},{"lineNumber":144,"author":{"gitId":"saiutkarsh33"},"content":"        deadline.markAsDone();","lastModifiedDate":"2024-02-23"},{"lineNumber":145,"author":{"gitId":"saiutkarsh33"},"content":"      }","lastModifiedDate":"2024-02-23"},{"lineNumber":146,"author":{"gitId":"saiutkarsh33"},"content":"      task \u003d deadline;","lastModifiedDate":"2024-02-23"},{"lineNumber":147,"author":{"gitId":"saiutkarsh33"},"content":"    } else if (line.startsWith(\"[E]\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":148,"author":{"gitId":"saiutkarsh33"},"content":"      // Extract description, from, and to for Event","lastModifiedDate":"2024-02-23"},{"lineNumber":149,"author":{"gitId":"saiutkarsh33"},"content":"      int fromIndex \u003d line.indexOf(\"(from: \");","lastModifiedDate":"2024-02-23"},{"lineNumber":150,"author":{"gitId":"saiutkarsh33"},"content":"      int toIndex \u003d line.indexOf(\"to: \");","lastModifiedDate":"2024-02-23"},{"lineNumber":151,"author":{"gitId":"saiutkarsh33"},"content":"      String description \u003d line.substring(6, fromIndex - 1).trim();","lastModifiedDate":"2024-02-23"},{"lineNumber":152,"author":{"gitId":"saiutkarsh33"},"content":"      String from \u003d line.substring(fromIndex + 7, toIndex - 2).trim();","lastModifiedDate":"2024-02-23"},{"lineNumber":153,"author":{"gitId":"saiutkarsh33"},"content":"      String to \u003d line.substring(toIndex + 4, line.length() - 1).trim();","lastModifiedDate":"2024-02-23"},{"lineNumber":154,"author":{"gitId":"saiutkarsh33"},"content":"      Event event \u003d new Event(description, from, to);","lastModifiedDate":"2024-02-23"},{"lineNumber":155,"author":{"gitId":"saiutkarsh33"},"content":"      if (isDone) {","lastModifiedDate":"2024-02-23"},{"lineNumber":156,"author":{"gitId":"saiutkarsh33"},"content":"        event.markAsDone();","lastModifiedDate":"2024-02-23"},{"lineNumber":157,"author":{"gitId":"saiutkarsh33"},"content":"      }","lastModifiedDate":"2024-02-23"},{"lineNumber":158,"author":{"gitId":"saiutkarsh33"},"content":"      task \u003d event;","lastModifiedDate":"2024-02-23"},{"lineNumber":159,"author":{"gitId":"saiutkarsh33"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":160,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":161,"author":{"gitId":"saiutkarsh33"},"content":"    return task;","lastModifiedDate":"2024-02-23"},{"lineNumber":162,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-02-23"},{"lineNumber":163,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"saiutkarsh33":163}},{"path":"src/main/java/chatbot/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"package chatbot;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"saiutkarsh33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"saiutkarsh33"},"content":" * The TaskList class manages a list of tasks. It provides methods to manipulate tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"saiutkarsh33"},"content":" * such as adding, removing, and marking them as done or not done. It also allows accessing","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"saiutkarsh33"},"content":" * individual tasks and the entire list of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"saiutkarsh33"},"content":"public class TaskList {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"saiutkarsh33"},"content":"  protected ArrayList\u003cTask\u003e al;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"saiutkarsh33"},"content":"   * Constructs a TaskList with the specified list of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"saiutkarsh33"},"content":"   * @param al The initial list of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"saiutkarsh33"},"content":"  public TaskList(ArrayList\u003cTask\u003e al) {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"saiutkarsh33"},"content":"    this.al \u003d al;","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"saiutkarsh33"},"content":"   * Adds a task to the task list.","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"saiutkarsh33"},"content":"   * @param t The task to be added.","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"saiutkarsh33"},"content":"  public void add(Task t) {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"saiutkarsh33"},"content":"    int initialSize \u003d al.size();","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"saiutkarsh33"},"content":"    al.add(t);","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"saiutkarsh33"},"content":"    // After adding, the size should increase by one","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"saiutkarsh33"},"content":"    assert al.size() \u003d\u003d initialSize + 1 : \"Task should be added to the list\";","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"saiutkarsh33"},"content":"   * Removes a task from the task list at the specified index.","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"saiutkarsh33"},"content":"   * @param c The index (1-based) of the task to be removed.","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"saiutkarsh33"},"content":"  public void remove(int c) {","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"saiutkarsh33"},"content":"    al.remove(c);","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"saiutkarsh33"},"content":"   * Marks a task as done.","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"saiutkarsh33"},"content":"   * @param c The index (1-based) of the task to be marked as done.","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"saiutkarsh33"},"content":"  public void asDone(int c) {","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"saiutkarsh33"},"content":"    Task task \u003d al.get(c - 1);","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"saiutkarsh33"},"content":"    task.markAsDone();","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"saiutkarsh33"},"content":"   * Marks a task as not done.","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"saiutkarsh33"},"content":"   * @param c The index (1-based) of the task to be marked as not done.","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"saiutkarsh33"},"content":"  public void asNotDone(int c) {","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"saiutkarsh33"},"content":"    Task task \u003d al.get(c - 1);","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"saiutkarsh33"},"content":"    task.markAsUndone();","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"saiutkarsh33"},"content":"   * Retrieves a task from the task list at the specified index.","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"saiutkarsh33"},"content":"   * @param c The index (1-based) of the task to retrieve.","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"saiutkarsh33"},"content":"   * @return The task at the specified index.","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"saiutkarsh33"},"content":"  public Task get(int c) {","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"saiutkarsh33"},"content":"    return al.get(c);","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"saiutkarsh33"},"content":"   * Returns the current list of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"saiutkarsh33"},"content":"   * @return The list of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"saiutkarsh33"},"content":"  public ArrayList\u003cTask\u003e mine() {","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"saiutkarsh33"},"content":"    assert al !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"saiutkarsh33"},"content":"    return this.al;","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"saiutkarsh33"},"content":"   * Returns the number of tasks in the task list.","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"saiutkarsh33"},"content":"   * @return The size of the task list.","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"saiutkarsh33"},"content":"  public int len() {","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"saiutkarsh33"},"content":"    int size \u003d this.al.size();","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"saiutkarsh33"},"content":"    // The size should be non-negative","lastModifiedDate":"2024-02-10"},{"lineNumber":96,"author":{"gitId":"saiutkarsh33"},"content":"    assert size \u003e\u003d 0 : \"Task list size should be non-negative\";","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"saiutkarsh33"},"content":"    return size;","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"saiutkarsh33":99}},{"path":"src/main/java/chatbot/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"package chatbot;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"saiutkarsh33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"saiutkarsh33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"saiutkarsh33"},"content":" * The Ui class manages the user interface for the chatbot. It handles reading user input,","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"saiutkarsh33"},"content":" * printing responses to the console, and interacting with other components like Parser and TaskList","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"saiutkarsh33"},"content":" * to carry out user commands. This class is responsible for starting the chatbot and handling","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"saiutkarsh33"},"content":" * the loop of user interactions.","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"saiutkarsh33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"saiutkarsh33"},"content":"public class Ui {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"saiutkarsh33"},"content":"  protected BufferedReader br \u003d new BufferedReader(","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"saiutkarsh33"},"content":"    new InputStreamReader(System.in)","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"saiutkarsh33"},"content":"  );","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"saiutkarsh33"},"content":"  protected PrintWriter pw \u003d new PrintWriter(System.out, true);","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"saiutkarsh33"},"content":"  protected Parser p \u003d new Parser();","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"saiutkarsh33"},"content":"  protected TaskList tl;","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"saiutkarsh33"},"content":"   * Constructs a Ui object with a reference to a TaskList.","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"saiutkarsh33"},"content":"   * @param tl The TaskList that the Ui will interact with.","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"saiutkarsh33"},"content":"  public Ui(TaskList tl) {","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"saiutkarsh33"},"content":"    this.tl \u003d tl;","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"saiutkarsh33"},"content":"  String end \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"saiutkarsh33"},"content":"   * Starts the chatbot by displaying a welcome message to the user. This method should be called","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"saiutkarsh33"},"content":"   * to initiate the interaction with the user.","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"saiutkarsh33"},"content":"   * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"saiutkarsh33"},"content":"  public void start() throws IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"saiutkarsh33"},"content":"    String prompt \u003d","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"saiutkarsh33"},"content":"      \"Hello! I\u0027m TFamilyBot\\n\" + \"What can I do for you? \\n\" + end;","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"saiutkarsh33"},"content":"    assert prompt !\u003d null : \"Prompt should not be null\";","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"saiutkarsh33"},"content":"    pw.println(prompt);","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"saiutkarsh33"},"content":"  /**","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"saiutkarsh33"},"content":"   * Handles a single round of user interaction. It reads the user\u0027s input, processes it, and","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"saiutkarsh33"},"content":"   * prints the response. The method returns a boolean indicating whether the interaction should","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"saiutkarsh33"},"content":"   * continue (true) or if it should end (false, when the user inputs \u0027bye\u0027).","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"saiutkarsh33"},"content":"   *","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"saiutkarsh33"},"content":"   * @param st The Storage object used for saving and retrieving task data.","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"saiutkarsh33"},"content":"   * @return false if the user inputs \u0027bye\u0027 to end the interaction, true otherwise.","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"saiutkarsh33"},"content":"   * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"saiutkarsh33"},"content":"   */","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"saiutkarsh33"},"content":"  public boolean reply(Storage st) throws IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"saiutkarsh33"},"content":"    String io \u003d br.readLine().trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"saiutkarsh33"},"content":"    assert io !\u003d null : \"Input read from BufferedReader should not be null\";","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"saiutkarsh33"},"content":"    String[] words \u003d io.split(\"\\\\s+\", 2);","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"saiutkarsh33"},"content":"    String detail \u003d words.length \u003e 1 ? words[1] : \"\";","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"saiutkarsh33"},"content":"    pw.println(end);","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"saiutkarsh33"},"content":"    boolean done \u003d p.isItDone(words);","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"saiutkarsh33"},"content":"    String answer \u003d p.parseThrough(io, words, detail, this.tl, st);","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"saiutkarsh33"},"content":"    pw.println(answer);","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"saiutkarsh33"},"content":"    pw.println(end);","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"saiutkarsh33"},"content":"    if (done) {","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"saiutkarsh33"},"content":"      return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"saiutkarsh33"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"saiutkarsh33"},"content":"    return true;","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"saiutkarsh33":86}},{"path":"src/main/java/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"[T][ ] book bear","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"saiutkarsh33"},"content":"[T][ ] b","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"saiutkarsh33":2}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"saiutkarsh33"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"saiutkarsh33"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"saiutkarsh33"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"saiutkarsh33"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"saiutkarsh33"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"saiutkarsh33"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"saiutkarsh33"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"saiutkarsh33"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"saiutkarsh33"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"saiutkarsh33"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"saiutkarsh33"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"saiutkarsh33"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"saiutkarsh33"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"saiutkarsh33":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"saiutkarsh33"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"saiutkarsh33"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"saiutkarsh33"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"saiutkarsh33"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"saiutkarsh33"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"saiutkarsh33"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"chatbot.MainWindow\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"saiutkarsh33"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"saiutkarsh33"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"saiutkarsh33"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"saiutkarsh33"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"saiutkarsh33"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"saiutkarsh33"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"saiutkarsh33"},"content":"      \u003c/content\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"saiutkarsh33"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"saiutkarsh33"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"saiutkarsh33"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"saiutkarsh33":19}},{"path":"src/test/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"// used chatGPT to create these unit tests","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"saiutkarsh33"},"content":"package chatbot;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"saiutkarsh33"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"saiutkarsh33"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"saiutkarsh33"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"saiutkarsh33"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"saiutkarsh33"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"saiutkarsh33"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"saiutkarsh33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"saiutkarsh33"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"saiutkarsh33"},"content":"class StorageTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"saiutkarsh33"},"content":"  private String testFilePath;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"saiutkarsh33"},"content":"  private Storage storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"saiutkarsh33"},"content":"  @BeforeEach","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"saiutkarsh33"},"content":"  void setUp() {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"saiutkarsh33"},"content":"    testFilePath \u003d \"./temp_test_file.txt\";","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"saiutkarsh33"},"content":"    storage \u003d new Storage(testFilePath);","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"saiutkarsh33"},"content":"  @AfterEach","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"saiutkarsh33"},"content":"  void tearDown() {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"saiutkarsh33"},"content":"    try {","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"saiutkarsh33"},"content":"      Files.deleteIfExists(Paths.get(testFilePath));","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"saiutkarsh33"},"content":"    } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"saiutkarsh33"},"content":"      e.printStackTrace();","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"saiutkarsh33"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"saiutkarsh33"},"content":"  @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"saiutkarsh33"},"content":"  void testFileCreation() {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"saiutkarsh33"},"content":"    assertFalse(Files.exists(Paths.get(testFilePath)));","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"saiutkarsh33"},"content":"    storage.createFileIfNeeded();","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"saiutkarsh33"},"content":"    assertTrue(Files.exists(Paths.get(testFilePath)));","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"saiutkarsh33"},"content":"  @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"saiutkarsh33"},"content":"  void testRewriteFile() throws IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"saiutkarsh33"},"content":"    ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"saiutkarsh33"},"content":"    tasks.add(new Task(\"Task 1\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"saiutkarsh33"},"content":"    tasks.add(new Task(\"Task 2\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"saiutkarsh33"},"content":"    storage.rewriteFile(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"saiutkarsh33"},"content":"    ArrayList\u003cString\u003e lines \u003d Files.readAllLines(Paths.get(testFilePath));","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"saiutkarsh33"},"content":"    assertEquals(2, lines.size());","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"saiutkarsh33"},"content":"    assertEquals(\"[ ] Task 1\", lines.get(0));","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"saiutkarsh33"},"content":"    assertEquals(\"[ ] Task 2\", lines.get(1));","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"saiutkarsh33":54}},{"path":"src/test/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"// used chatGPT for this unit test file","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"saiutkarsh33"},"content":"package chatbot;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"saiutkarsh33"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"saiutkarsh33"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"saiutkarsh33"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"saiutkarsh33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"saiutkarsh33"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"saiutkarsh33"},"content":"class TaskListTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"saiutkarsh33"},"content":"  private TaskList taskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"saiutkarsh33"},"content":"  private Task todoStub;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"saiutkarsh33"},"content":"  @BeforeEach","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"saiutkarsh33"},"content":"  void setUp() {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"saiutkarsh33"},"content":"    ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"saiutkarsh33"},"content":"    todoStub \u003d new Todo(\"Sample Task\");","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"saiutkarsh33"},"content":"    tasks.add(todoStub);","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"saiutkarsh33"},"content":"    taskList \u003d new TaskList(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"saiutkarsh33"},"content":"  @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"saiutkarsh33"},"content":"  void addTask_success() {","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"saiutkarsh33"},"content":"    Task newTodo \u003d new Todo(\"New Task\");","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"saiutkarsh33"},"content":"    taskList.add(newTodo);","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"saiutkarsh33"},"content":"    assertEquals(2, taskList.len());","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"saiutkarsh33"},"content":"  @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"saiutkarsh33"},"content":"  void removeTask_success() {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"saiutkarsh33"},"content":"    taskList.remove(0);","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"saiutkarsh33"},"content":"    assertEquals(0, taskList.len());","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"saiutkarsh33"},"content":"  @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"saiutkarsh33"},"content":"  void markTaskAsDone_success() {","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"saiutkarsh33"},"content":"    taskList.asDone(1);","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"saiutkarsh33"},"content":"    assertTrue(todoStub.isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"saiutkarsh33"},"content":"  @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"saiutkarsh33"},"content":"  void markTaskAsNotDone_success() {","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"saiutkarsh33"},"content":"    todoStub.markAsDone(); // First mark it as done","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"saiutkarsh33"},"content":"    taskList.asNotDone(1);","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"saiutkarsh33"},"content":"    assertFalse(todoStub.isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"saiutkarsh33"},"content":"  @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"saiutkarsh33"},"content":"  void getTask_success() {","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"saiutkarsh33"},"content":"    Task fetchedTask \u003d taskList.get(0);","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"saiutkarsh33"},"content":"    assertEquals(todoStub, fetchedTask);","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"saiutkarsh33"},"content":"  @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"saiutkarsh33"},"content":"  void taskListLength_success() {","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"saiutkarsh33"},"content":"    assertEquals(1, taskList.len());","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"saiutkarsh33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"saiutkarsh33"},"content":"  @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"saiutkarsh33"},"content":"  void taskListMine() {","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"saiutkarsh33"},"content":"    assertEquals(tasks, taskList.mine());","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"saiutkarsh33"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"saiutkarsh33"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"saiutkarsh33":68}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"saiutkarsh33"},"content":"todo borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"saiutkarsh33"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"saiutkarsh33"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"saiutkarsh33"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"saiutkarsh33"},"content":"mark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"saiutkarsh33"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"saiutkarsh33"},"content":"unmark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"saiutkarsh33"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"saiutkarsh33"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"saiutkarsh33"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"saiutkarsh33"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"saiutkarsh33"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"saiutkarsh33"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"saiutkarsh33"},"content":"unmark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"saiutkarsh33"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"saiutkarsh33"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"saiutkarsh33":16}}]
