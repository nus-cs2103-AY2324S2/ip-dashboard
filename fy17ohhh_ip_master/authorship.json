[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"    mainClass.set(\"jade.Jade\")","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"    archiveBaseName \u003d \"jade\"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"fy17ohhh"},"content":"runShadow {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"fy17ohhh"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"fy17ohhh"},"content":"checkstyle {","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"fy17ohhh"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"fy17ohhh":12,"-":40}},{"path":"src/main/java/jade/Jade.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import jade.commands.Command;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import jade.exception.JadeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import jade.parser.Parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import jade.storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import jade.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":" * A \u003ccode\u003eJade\u003c/code\u003e object is a personal chatbot assistant that","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":" * helps users with task management with the option of adding dates available.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":" * @author Feiyang Shang","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":" * @version v1.0","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":" * @since 2024-01-23","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"public class Jade {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"    private TaskList taskList; // list that stores all user tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"    private final Storage storage; // storage object to load from and save to local file","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"    private final Ui ui; // user interface for reading input and printing output","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"     * Class constructor specifying the local filepath that stores user tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"    public Jade(String filePath) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"            this.taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"        } catch (JadeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"        Jade myJade \u003d new Jade(\"data/jadeList.txt\");","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"        myJade.run();","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"fy17ohhh"},"content":"     * Receives user input to run the jade object.","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"fy17ohhh"},"content":"     * When user enters the exit command, the program terminates.","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"fy17ohhh"},"content":"    public void run() {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"fy17ohhh"},"content":"        ui.launch();","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"fy17ohhh"},"content":"        boolean exitProg \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"fy17ohhh"},"content":"        while (!exitProg) {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"fy17ohhh"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"fy17ohhh"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"fy17ohhh"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"fy17ohhh"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"fy17ohhh"},"content":"                exitProg \u003d c.shouldExit();","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"fy17ohhh"},"content":"            } catch (JadeException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"fy17ohhh"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"fy17ohhh"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"fy17ohhh":61}},{"path":"src/main/java/jade/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import jade.storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import jade.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eAddCommand\u003c/code\u003e object represents the command to add a task.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"    private final Task task; // the task to be added.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"     * Class constructor specifying the task to be added.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc This implementation prints an add message after the task is added.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"        ui.printMessage(String.format(\"\\tGot it. I\u0027ve added this task:\\n\\t %s\\n\\t\"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"                + \"Now you have %d task(s) in the list.\", task, tasks.size()));","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc The AddCommand does not indicate the exit of the program.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":38}},{"path":"src/main/java/jade/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import jade.exception.JadeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import jade.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import jade.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eCommand\u003c/code\u003e object represents a user command supported by the program.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"     * Executes the command with all the tasks, the program\u0027s ui, and the storage object.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws JadeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"     * Checks whether the program should exit.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"     * @return True if the program is to be exited, otherwise false.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"    public abstract boolean shouldExit();","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":24}},{"path":"src/main/java/jade/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import jade.exception.JadeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import jade.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import jade.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eDeleteCommand\u003c/code\u003e object represents the command to delete a task.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"    private final int index; // the index of the task to be deleted","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"     * Class constructor specifying the index of the task to be deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc This implementation prints a delete message after the task is deleted.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws JadeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"        if (index \u003c\u003d 0 || index \u003e taskList.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"            throw new JadeException(\"\\tPlease input a valid number to delete the task.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"        Task deletedTask \u003d taskList.get(index - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"        taskList.remove(index - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"        ui.printMessage(String.format(\"\\tOK, I\u0027ve deleted this task:\\n\\t  %s\\n\\t\"","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"                + \"Now you have %d task(s) in the list.\", deletedTask, taskList.size()));","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc The DeleteCommand does not indicate the exit of the program.","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":43}},{"path":"src/main/java/jade/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import jade.exception.JadeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import jade.storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import jade.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eExitCommand\u003c/code\u003e object represents the command to exit the program.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc This implementation prints a farewell message after saving changes to the local file.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws JadeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"        storage.saveChange(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"        ui.printMessage(\"\\tBye. Hope to see you again soon.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc The ExitCommand indicates the exit of the program.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"        return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":28}},{"path":"src/main/java/jade/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.commands;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import jade.exception.JadeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import jade.storage.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import jade.ui.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eFindCommand\u003c/code\u003e object represents the command to","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":" * search for tasks that contain the keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"    private final String keyword; // the keyword of the description to be searched","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"     * Class constructor specifying the keyword of the description to be searched.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc This implementation prints all tasks that contain the keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws JadeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"        int count \u003d 0; // track the number of matching tasks found","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"            if (tasks.get(i).containsKeyword(keyword)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"                count++;","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"                sb.append(String.format(\"\\t%d. %s\\n\", count, tasks.get(i)));","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"        ui.printMessage(String.format(\"\\tHere are the matching tasks in your list:\\n%s\", sb));","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc The DeleteCommand does not indicate the exit of the program.","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"        return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"fy17ohhh":46}},{"path":"src/main/java/jade/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import jade.exception.JadeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import jade.storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import jade.ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eInvalidCommand\u003c/code\u003e object represents an invalid command.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"    private final JadeException exception; // exception saved for possible further use","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"     * Class constructor specifying the JadeException.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"    public InvalidCommand(JadeException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"        this.exception \u003d e;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc This implementation prints an error message to user","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"        ui.printMessage(\"\\tInput is invalid, please retry.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc The InvalidCommand does not indicate the exit of the program.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":36}},{"path":"src/main/java/jade/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import jade.storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import jade.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eListCommand\u003c/code\u003e object represents the command to list all tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":" * It is also optional for the user to specify a date for listing all tasks on that date.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"    private final LocalDate selectedDate; // the user specified date for listing all tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"     * Class constructor initializing the selected date as null.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"    public ListCommand() {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"        this.selectedDate \u003d null;","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"     * Another Class constructor specifying the selected date.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"    public ListCommand(LocalDate selectedDate) {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"        this.selectedDate \u003d selectedDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc This implementation prints all tasks with an option to specify a date.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"            // Show user that there are no tasks now","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"            ui.printMessage(\"\\tYou have no tasks now :-|\");","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"            return;","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"        int count \u003d 0; // to track the number of tasks to be printed","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"fy17ohhh"},"content":"        String dateString \u003d selectedDate \u003d\u003d null ? \"\" : \" on \" + selectedDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"fy17ohhh"},"content":"        sb.append(String.format(\"\\tHere are the task(s) in your list%s:\\n\", dateString));","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"fy17ohhh"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"fy17ohhh"},"content":"            // case when user has specified a date for listing the tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"fy17ohhh"},"content":"            if (selectedDate !\u003d null) { // print tasks on a specific date","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"fy17ohhh"},"content":"                if (tasks.get(i - 1).isSameDate(selectedDate)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"fy17ohhh"},"content":"                    sb.append(String.format(\"\\t%d. %s\\n\", i, tasks.get(i - 1)));","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"fy17ohhh"},"content":"                    count++;","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"fy17ohhh"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"fy17ohhh"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"fy17ohhh"},"content":"                // print all tasks in list","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"fy17ohhh"},"content":"                sb.append(String.format(\"\\t%d. %s\\n\", i, tasks.get(i - 1)));","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"fy17ohhh"},"content":"                count++;","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"fy17ohhh"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"fy17ohhh"},"content":"        if (selectedDate !\u003d null \u0026\u0026 count \u003d\u003d 0) {","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"fy17ohhh"},"content":"            ui.printMessage(String.format(\"\\tThere are no tasks on %s\", selectedDate","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"fy17ohhh"},"content":"                    .format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))));","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"fy17ohhh"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"fy17ohhh"},"content":"            ui.printMessage((sb.toString()));","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc The ListCommand does not indicate the exit of the program.","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"fy17ohhh"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"fy17ohhh"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":74}},{"path":"src/main/java/jade/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import jade.exception.JadeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import jade.storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import jade.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eMarkCommand\u003c/code\u003e object represents the command to mark a task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"    private final int index; // the index of the task to be marked","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"     * Class constructor specifying the index of the task to be marked.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc This implementation prints a mark message after the task is marked.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws JadeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"        if (index \u003c\u003d 0 || index \u003e taskList.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"            throw new JadeException(\"\\tPlease input a valid number to mark done.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"        taskList.mark(index - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"        ui.printMessage(String.format(\"\\tNice, I\u0027ve marked this task as done:\\n\\t  %s\", taskList.get(index - 1)));","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc The MarkCommand does not indicate the exit of the program.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":40}},{"path":"src/main/java/jade/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import jade.exception.JadeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import jade.storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import jade.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eUnmarkCommand\u003c/code\u003e object represents the command to mark a task as not done yet.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"    private final int index; // the index of the task to be unmarked","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"     * Class constructor specifying the index of the task to be unmarked.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc This implementation prints an unmark message after the task is unmarked.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws JadeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"        if (index \u003c\u003d 0 || index \u003e taskList.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"            throw new JadeException(\"\\tPlease input a valid number to unmark done.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"        taskList.unmark(index - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"        ui.printMessage(String.format(\"\\tNice, I\u0027ve marked this task \"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"                + \"as not done yet:\\n\\t  %s\", taskList.get(index - 1)));","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc The UnmarkCommand does not indicate the exit of the program.","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":41}},{"path":"src/main/java/jade/data/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.data;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eDeadline\u003c/code\u003e object represents a user task with a deadline date.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"    protected LocalDate deadlineDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"     * Class constructor specifying the deadline description and deadline date.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"    public Deadline(String description, LocalDate deadlineDate) {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"     * Another Class constructor.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"     * Specifying the deadline description, deadline date, and the completion status.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"    public Deadline(String description, LocalDate deadlineDate, boolean isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"     * Returns a formatted string of the deadline date.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"    public String dateFormatter() {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"        return deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc This implementation checks whether the deadline date equals to the date.","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"    public boolean isSameDate(LocalDate date) {","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"        return date.equals(deadlineDate);","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"fy17ohhh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"fy17ohhh"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), dateFormatter());","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc Adds the deadline date at the end.","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"fy17ohhh"},"content":"    public String taskFormatter() {","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"fy17ohhh"},"content":"        return String.format(\"D | %s | %s | %s\\n\", statusFormatter(), description, dateFormatter());","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"fy17ohhh":56}},{"path":"src/main/java/jade/data/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.data;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eEvent\u003c/code\u003e object represents a user task with a start date and an end date.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"    protected LocalDate startDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"    protected LocalDate endDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"     * Class constructor specifying the event description, start date, and end date.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"    public Event(String description, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"     * Another Event constructor.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"     * Specifying the deadline description, start date, end date, and the completion status.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"    public Event(String description, LocalDate startDate, LocalDate endDate, boolean isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"     * Returns a formatted string of the LocalDate object.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"    public String dateFormatter(LocalDate date) {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc This implementation checks whether the event dates include the date.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"fy17ohhh"},"content":"    public boolean isSameDate(LocalDate date) {","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"fy17ohhh"},"content":"        return (date.isBefore(endDate) \u0026\u0026 date.isAfter(startDate) || date.equals(startDate) || date.equals(endDate));","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"fy17ohhh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"fy17ohhh"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"fy17ohhh"},"content":"                dateFormatter(startDate), dateFormatter(endDate));","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc Adds the start date and end date at the end.","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"fy17ohhh"},"content":"    public String taskFormatter() {","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"fy17ohhh"},"content":"        return String.format(\"E | %s | %s | %s - %s\\n\", statusFormatter(),","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"fy17ohhh"},"content":"                description, dateFormatter(startDate), dateFormatter(endDate));","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"fy17ohhh":62}},{"path":"src/main/java/jade/data/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.data;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eTask\u003c/code\u003e object represents a user task.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"    protected String description; // the description of the task","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"    protected boolean isDone; // the completion status of the task, if true then is done","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"     * Class constructor specifying the task description.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"     * The task is not done by default.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"     * Another Class constructor specifying the task description and completion status.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"     * Returns the icon of the current completion status.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"     * Returns the string of the completion status boolean value.","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"     * If is done then returns \"1\", otherwise returns \"0\".","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"    public String statusFormatter() {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"        return (isDone ? \"1\" : \"0\");","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"fy17ohhh"},"content":"     * Modifies the completion status as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"fy17ohhh"},"content":"    public void mark() {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"fy17ohhh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"fy17ohhh"},"content":"     * Modifies the completion status as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"fy17ohhh"},"content":"    public void unmark() {","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"fy17ohhh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"fy17ohhh"},"content":"     * Checks if the two dates are the same.","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"fy17ohhh"},"content":"     * The Task class has no date, so the methods returns false by default.","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"fy17ohhh"},"content":"    public boolean isSameDate(LocalDate date) {","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"fy17ohhh"},"content":"        return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"fy17ohhh"},"content":"     * Returns the formatted task string to be saved in the local file.","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"fy17ohhh"},"content":"    public String taskFormatter() {","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"fy17ohhh"},"content":"        return String.format(\"T | %s | %s\\n\", statusFormatter(), description);","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"fy17ohhh"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"fy17ohhh"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"fy17ohhh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"fy17ohhh"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"fy17ohhh":81}},{"path":"src/main/java/jade/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.data;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import java.util.List;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eTaskList\u003c/code\u003e object represents a list consists of user tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"public class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"     * A Class constructor initializing an empty list to save user tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"     * Another Class constructor specifying the list that saves all user tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"    public int size() {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"        return taskList.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"     * Adds the task to the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"        taskList.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"     * Removes the task at the specified index.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"    public void remove(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"fy17ohhh"},"content":"        taskList.remove(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"fy17ohhh"},"content":"     * Marks the task as done at the specified index.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"fy17ohhh"},"content":"    public void mark(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"fy17ohhh"},"content":"        taskList.get(index).mark();","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"fy17ohhh"},"content":"     * Marks the task as not done yet at the specified index.","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"fy17ohhh"},"content":"    public void unmark(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"fy17ohhh"},"content":"        taskList.get(index).unmark();","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"fy17ohhh"},"content":"     * Checks whether the list has no tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"fy17ohhh"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"fy17ohhh"},"content":"     * @return 0 if there is no tasks in the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"fy17ohhh"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"fy17ohhh"},"content":"        return size() \u003d\u003d 0;","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"fy17ohhh"},"content":"     * Returns the Task at the specified index.","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"fy17ohhh"},"content":"    public Task get(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"fy17ohhh"},"content":"        return taskList.get(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"fy17ohhh"},"content":"     * Returns the formatted string of all tasks in the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"fy17ohhh"},"content":"     * Each task starts at a new line.","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"fy17ohhh"},"content":"    public String listFormatter() {","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"fy17ohhh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"fy17ohhh"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"fy17ohhh"},"content":"            sb.append(task.taskFormatter());","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"fy17ohhh"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":88}},{"path":"src/main/java/jade/data/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.data;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eTodo\u003c/code\u003e object represents a user todo task.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"     * Class constructor specifying the task description.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"     * Another Class constructor specifying the task description and completion status.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"fy17ohhh":25}},{"path":"src/main/java/jade/exception/JadeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.exception;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":" * A customized exception class for the program.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"public class JadeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"    public JadeException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"fy17ohhh":10}},{"path":"src/main/java/jade/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import jade.commands.AddCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import jade.commands.Command;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"import jade.commands.DeleteCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import jade.commands.ExitCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"import jade.commands.FindCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"import jade.commands.InvalidCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"import jade.commands.ListCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"import jade.commands.MarkCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"import jade.commands.UnmarkCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.Deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.Event;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.Todo;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"import jade.exception.JadeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eParser\u003c/code\u003e object to parse command line input from user.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"public class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"     * Returns the concatenated string of the descriptions.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"     * @param commands Array of commands.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"     * @param start The string where the description starts in the array,","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"     *              if empty then starts at 1 by default.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"     * @param end The string where the description ends in the array,","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"     *            if empty then ends at the end of the command by default.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"     * @return The concatenated description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"     * @throws JadeException If IllegalArgumentException is caught.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"    public static String concatDescription(String[] commands, String start, String end) throws JadeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"            int startIndex \u003d start.isEmpty() ? 1 : Arrays.asList(commands).indexOf(start) + 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"            int endIndex \u003d end.isEmpty() ? commands.length : Arrays.asList(commands).indexOf(end);","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"fy17ohhh"},"content":"            return String.join(\" \", Arrays.copyOfRange(commands, startIndex, endIndex));","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"fy17ohhh"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"fy17ohhh"},"content":"            throw new JadeException(\"Illegal Argument\");","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"fy17ohhh"},"content":"     * Checks if the description in the commands is empty,","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"fy17ohhh"},"content":"     * if empty then throws an exception.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"fy17ohhh"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"fy17ohhh"},"content":"     * @param commands Array of commands.","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"fy17ohhh"},"content":"     * @param length The expected length of the command array.","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"fy17ohhh"},"content":"     * @throws JadeException If the command length is less than expected length.","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"fy17ohhh"},"content":"    public static void checkEmptyDescription(String[] commands, int length) throws JadeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"fy17ohhh"},"content":"        if (commands.length \u003c length) {","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"fy17ohhh"},"content":"            throw new JadeException(\"\\tYour task description cannot be empty!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"fy17ohhh"},"content":"     * Returns a LocalDate object by parsing the date string.","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"fy17ohhh"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"fy17ohhh"},"content":"     * @param date The date to be parsed.","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"fy17ohhh"},"content":"     * @throws JadeException If DateTimeException is caught.","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"fy17ohhh"},"content":"    public static LocalDate parseDate(String date) throws JadeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"fy17ohhh"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"fy17ohhh"},"content":"            return LocalDate.parse(date);","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"fy17ohhh"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"fy17ohhh"},"content":"            throw new JadeException(\"\\tYour date format is invalid!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"fy17ohhh"},"content":"     * Returns an integer by parsing the string.","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"fy17ohhh"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"fy17ohhh"},"content":"     * @param intStr The integer string to be parsed.","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"fy17ohhh"},"content":"     * @throws JadeException If NumberFormatException is caught.","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"fy17ohhh"},"content":"    public static int parseInt(String intStr) throws JadeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"fy17ohhh"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"fy17ohhh"},"content":"            return Integer.parseInt(intStr);","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"fy17ohhh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"fy17ohhh"},"content":"            throw new JadeException(\"\\tPlease input a valid number!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"fy17ohhh"},"content":"     * Returns a Command object by parsing the single line user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"fy17ohhh"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"fy17ohhh"},"content":"     * @param str The single line user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"fy17ohhh"},"content":"    public static Command parse(String str) {","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"fy17ohhh"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"fy17ohhh"},"content":"            String[] commands \u003d str.split(\" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"fy17ohhh"},"content":"            switch (commands[0]) {","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"fy17ohhh"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"fy17ohhh"},"content":"                checkEmptyDescription(commands, 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"fy17ohhh"},"content":"                return new AddCommand(new Todo(concatDescription(commands, \"\", \"\")));","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"fy17ohhh"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"fy17ohhh"},"content":"                checkEmptyDescription(commands, 3);","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"fy17ohhh"},"content":"                return new AddCommand(new Deadline(concatDescription(commands, \"\", \"/by\"),","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"fy17ohhh"},"content":"                        parseDate(concatDescription(commands, \"/by\", \"\"))));","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"fy17ohhh"},"content":"            case \"event\":","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"fy17ohhh"},"content":"                checkEmptyDescription(commands, 4);","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"fy17ohhh"},"content":"                return new AddCommand(new Event(concatDescription(commands, \"\", \"/from\"),","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"fy17ohhh"},"content":"                        parseDate(concatDescription(commands, \"/from\", \"/to\")),","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"fy17ohhh"},"content":"                        parseDate(concatDescription(commands, \"/to\", \"\"))));","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"fy17ohhh"},"content":"            case \"list\":","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"fy17ohhh"},"content":"                if (commands.length !\u003d 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"fy17ohhh"},"content":"                    return new ListCommand(parseDate(concatDescription(commands, \"\", \"\")));","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"fy17ohhh"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"fy17ohhh"},"content":"                return new ListCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"fy17ohhh"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"fy17ohhh"},"content":"                checkEmptyDescription(commands, 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"fy17ohhh"},"content":"                return new MarkCommand(parseInt(commands[1]));","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"fy17ohhh"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"fy17ohhh"},"content":"                checkEmptyDescription(commands, 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"fy17ohhh"},"content":"                return new UnmarkCommand(parseInt(commands[1]));","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"fy17ohhh"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"fy17ohhh"},"content":"                checkEmptyDescription(commands, 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"fy17ohhh"},"content":"                return new DeleteCommand(parseInt(commands[1]));","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"fy17ohhh"},"content":"            case \"find\":","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"fy17ohhh"},"content":"                checkEmptyDescription(commands, 2);","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"fy17ohhh"},"content":"                return new FindCommand(concatDescription(commands, \"\", \"\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"fy17ohhh"},"content":"            case \"bye\":","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"fy17ohhh"},"content":"                checkEmptyDescription(commands, 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"fy17ohhh"},"content":"                return new ExitCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"fy17ohhh"},"content":"            default:","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"fy17ohhh"},"content":"                return new InvalidCommand(new JadeException(\"\\tInput is invalid, please retry.\\n\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"fy17ohhh"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"fy17ohhh"},"content":"        } catch (JadeException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"fy17ohhh"},"content":"            return new InvalidCommand(e);","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":140}},{"path":"src/main/java/jade/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.Deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.Event;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.Todo;","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"import jade.exception.JadeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eStorage\u003c/code\u003e object for loading user tasks from local file","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":" * and save changes to the same file after program exits.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"public class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"    private final String filePath; // the file path storing all user tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"     * Class constructor specifying the local file path.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"     * Returns all saved user tasks in the local file.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"     * If the directory or file does not exit, an empty list is returned.","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"     * @return A list of user tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"     * @throws JadeException If directory or file does not exit","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"    public List\u003cTask\u003e load() throws JadeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"        String[] dirs \u003d filePath.split(\"/\");","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"fy17ohhh"},"content":"        String jadeDirStr \u003d System.getProperty(\"user.dir\") + \"/\" + String.join(\"/\", Arrays","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"fy17ohhh"},"content":"                .copyOfRange(dirs, 0, dirs.length - 1));","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"fy17ohhh"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"fy17ohhh"},"content":"            File jadeDir \u003d new File(jadeDirStr);","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"fy17ohhh"},"content":"            if (!jadeDir.exists()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"fy17ohhh"},"content":"                jadeDir.mkdir();","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"fy17ohhh"},"content":"                throw new JadeException(\"Dir does not exist\");","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"fy17ohhh"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"fy17ohhh"},"content":"            String jadeFileDirStr \u003d System.getProperty(\"user.dir\") + \"/\" + filePath;","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"fy17ohhh"},"content":"            File jadeFile \u003d new File(jadeFileDirStr);","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"fy17ohhh"},"content":"            if (!jadeFile.exists()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"fy17ohhh"},"content":"                jadeFile.createNewFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"fy17ohhh"},"content":"                throw new JadeException(\"File does not exist\");","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"fy17ohhh"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"fy17ohhh"},"content":"            Scanner sc \u003d new Scanner(jadeFile);","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"fy17ohhh"},"content":"            ArrayList\u003cTask\u003e savedTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"fy17ohhh"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"fy17ohhh"},"content":"                String[] task \u003d sc.nextLine().split(\" \\\\| \");","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"fy17ohhh"},"content":"                boolean isDone \u003d task[1].equals(\"1\");","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"fy17ohhh"},"content":"                switch (task[0]) {","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"fy17ohhh"},"content":"                case \"T\":","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"fy17ohhh"},"content":"                    savedTaskList.add(new Todo(task[2], isDone));","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"fy17ohhh"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"fy17ohhh"},"content":"                case \"D\":","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"fy17ohhh"},"content":"                    savedTaskList.add(new Deadline(task[2], LocalDate.parse(task[3],","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"fy17ohhh"},"content":"                            DateTimeFormatter.ofPattern(\"MMM d yyyy\")), isDone));","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"fy17ohhh"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"fy17ohhh"},"content":"                case \"E\":","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"fy17ohhh"},"content":"                    savedTaskList.add(new Event(task[2], LocalDate.parse(task[3], DateTimeFormatter","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"fy17ohhh"},"content":"                            .ofPattern(\"MMM d yyyy\")), LocalDate.parse(task[4], DateTimeFormatter","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"fy17ohhh"},"content":"                            .ofPattern(\"MMM d yyyy\")), isDone));","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"fy17ohhh"},"content":"                    break;","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"fy17ohhh"},"content":"                default:","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"fy17ohhh"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"fy17ohhh"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"fy17ohhh"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"fy17ohhh"},"content":"            sc.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"fy17ohhh"},"content":"            return savedTaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"fy17ohhh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"fy17ohhh"},"content":"            throw new JadeException(\"IO Exception\");","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"fy17ohhh"},"content":"     * Modifies the local file to store updated user tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"fy17ohhh"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"fy17ohhh"},"content":"     * @param taskList The list of updated user tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"fy17ohhh"},"content":"     * @throws JadeException If IOException is caught","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"fy17ohhh"},"content":"    public void saveChange(TaskList taskList) throws JadeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"fy17ohhh"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"fy17ohhh"},"content":"            Path dataFilePath \u003d java.nio.file.Paths.get(System.getProperty(\"user.dir\"), \"data\", \"jadeList.txt\");","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"fy17ohhh"},"content":"            File jadeList \u003d new File(dataFilePath.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"fy17ohhh"},"content":"            FileWriter jadeListWriter \u003d new FileWriter(jadeList);","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"fy17ohhh"},"content":"            jadeListWriter.write(taskList.listFormatter());","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"fy17ohhh"},"content":"            jadeListWriter.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"fy17ohhh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"fy17ohhh"},"content":"            throw new JadeException(\"IO Exception\");","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":105}},{"path":"src/main/java/jade/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":" * Represents a user interface for the \u003ccode\u003eJade\u003c/code\u003e object.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":" * A \u003ccode\u003eUi\u003c/code\u003e object reads user input and prints feedbacks to user.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"public class Ui {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"    private static final String line \u003d \"\\t\"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"            + \"——————————————————————————————————————————\\n\"; // line to separate output for each command","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"    private static final String logo \u003d \"\\t  ____   ___    ____     ______\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"            + \"\\t  |  |  / _ \\\\  |  ___ \\\\ / |____/\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"            + \"\\t  |  | | | | | | |  | | | |____\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"            + \"\\t  |  | | |_| | | |  | | | |____|\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"            + \"\\t|\\\\|  | | ___ | | |__| | | |____\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"            + \"\\t \\\\___| |_| |_| |_____/  \\\\_|____\\\\\\n\"; // logo for the program","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"    private final Scanner sc; // scanner object for reading user input","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"     * Class constructor initializing the scanner by default.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"    public Ui() {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"     * Prints the error message returned by the program.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"    public void showError(String errorMsg) {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"        printMessage(errorMsg);","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"     * Prints the error message returned by the program.","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"        printMessage(\"\\t[There\u0027s no file under current storage path, a new task file has been created.]\");","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"     * Prints a line.","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"fy17ohhh"},"content":"    public void showLine() {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"fy17ohhh"},"content":"        System.out.print(line);","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"fy17ohhh"},"content":"     * Returns the next line of user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"fy17ohhh"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"fy17ohhh"},"content":"        return sc.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"fy17ohhh"},"content":"     * Prints welcome message, logo, and instructions about using the Jade object.","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"fy17ohhh"},"content":"    public void launch() {","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"fy17ohhh"},"content":"        System.out.printf(\"%s%s\\tHello, I\u0027m Jade, your task manager.\\n\\tFeel free to set reminders \"","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"fy17ohhh"},"content":"                + \"for your task by entering text using the following format:\\n\\t\"","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"fy17ohhh"},"content":"                + \"1. todo {Task Description} -\u003e e.g. todo read a book\\n\\t\"","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"fy17ohhh"},"content":"                + \"2. deadline {Task Description} /by {yyyy-mm-dd} -\u003e e.g. deadline read a book /by 2024-12-31\\n\\t\"","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"fy17ohhh"},"content":"                + \"3. event {Task Description} /from {yyyy-mm-dd} /to {yyyy-mm-dd} -\u003e \"","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"fy17ohhh"},"content":"                + \"e.g. read a book /from 2024-12-30 /to 2024-12-31\\n%s\", logo, line, line);","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"fy17ohhh"},"content":"     * Prints the message enclosed by two lines.","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"fy17ohhh"},"content":"    public void printMessage(String msg) {","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"fy17ohhh"},"content":"        showLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"fy17ohhh"},"content":"        System.out.println(msg);","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"fy17ohhh"},"content":"        showLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":76}},{"path":"src/test/java/jade/data/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.data;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"    public void size() {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(0, new TaskList().size());","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(1, new TaskList(List.of(new Todo(\"first\"))).size());","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"    public void mark_validIndex_success() {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"        TaskList testTaskList \u003d new TaskList(List.of(new Todo(\"first\"), new Todo(\"second\")));","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"        testTaskList.mark(0);","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(true, testTaskList.get(0).isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"        testTaskList.mark(1);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(true, testTaskList.get(1).isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"    public void mark_invalidIndex_exceptionThrown() {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"            TaskList testTaskList \u003d new TaskList(List.of(new Todo(\"first\")));","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"            testTaskList.mark(-1);","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"            fail();","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"            assertEquals(\"Index: -1 Size: 1\", e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"    public void unmark_validIndex_success() {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"        TaskList testTaskList \u003d new TaskList(List.of(new Todo(\"first\", true), new Todo(\"second\", true)));","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"        testTaskList.unmark(0);","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(false, testTaskList.get(0).isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"        testTaskList.unmark(1);","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(false, testTaskList.get(1).isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"fy17ohhh"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"fy17ohhh"},"content":"    public void unmark_invalidIndex_exceptionThrown() {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"fy17ohhh"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"fy17ohhh"},"content":"            TaskList testTaskList \u003d new TaskList(List.of(new Todo(\"first\", true)));","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"fy17ohhh"},"content":"            testTaskList.unmark(2);","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"fy17ohhh"},"content":"            fail();","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"fy17ohhh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"fy17ohhh"},"content":"            assertEquals(\"Index: 2 Size: 1\", e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"fy17ohhh"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"fy17ohhh"},"content":"    public void isEmpty() {","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"fy17ohhh"},"content":"        // empty task list","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(true, new TaskList().isEmpty());","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"fy17ohhh"},"content":"        // nonempty task list","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(false, new TaskList(List.of(new Todo(\"first\"))).isEmpty());","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"fy17ohhh"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"fy17ohhh"},"content":"    public void listFormatter() {","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(\"T | 1 | first\\n\", new TaskList(List.of(new Todo(\"first\", true))).listFormatter());","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(\"T | 0 | first\\nT | 1 | second\\n\", new TaskList(List.of(new Todo(\"first\", false),","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"fy17ohhh"},"content":"                new Todo(\"second\", true))).listFormatter());","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":72}},{"path":"src/test/java/jade/data/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.data;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"public class TaskTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"    public void getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"        // task with done status will return \"X\"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(\"X\", new Task(\"a\", true).getStatusIcon());","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"        // task with undone status will return \" \"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(\" \", new Task(\"a\").getStatusIcon());","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"    public void statusFormatter() {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(\"1\", new Task(\"a\", true).statusFormatter());","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(\"0\", new Task(\"a\").statusFormatter());","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"    public void testStringConversion() {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(\"[ ] read a book\", new Task(\"read a book\").toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(\"[X] read two books\", new Task(\"read two books\", true).toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"todo read a book","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"deadline complete assignment 2 /by tomorrow","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"event visit family /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"todo write homework 2","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"mark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"unmark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"fy17ohhh":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"javac  -cp ..\\src\\main\\java\\jade -Xlint:none -d ..\\bin ..\\src\\main\\java\\jade\\*.java","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"java -classpath ..\\bin jade.Jade \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"fy17ohhh":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"if ! javac -cp ../src/main/java/jade -Xlint:none -d ../bin ../src/main/java/jade/*.java","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"java -classpath ../bin jade.Jade \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"fy17ohhh":2,"-":36}}]
