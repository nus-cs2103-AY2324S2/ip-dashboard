[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":" * The Deadline class represents a task with a specific deadline.","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"     * Constructs a Deadline object with the given description and deadline.","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"     * @param by           Deadline of the task.","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"        this.by \u003d parseDateTime(by);","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"     * Parses the date and time from the string representation.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"     * @param dateTimeString The string representation of date and time.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"     * @return The parsed LocalDateTime object.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"    private LocalDateTime parseDateTime(String dateTimeString) {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"        return LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"     * Gets the deadline of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"     * @return The LocalDateTime representing the deadline.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"        return by;","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"sindhurajain"},"content":"     * Returns a formatted string representation of the deadline task\".","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"sindhurajain"},"content":"     * @return The formatted string representation of the task.","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"sindhurajain"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"sindhurajain"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"sindhurajain"},"content":"     * Converts the task into a string format suitable for writing to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"sindhurajain"},"content":"     * @return The formatted string for writing to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"sindhurajain"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"sindhurajain"},"content":"        return String.format(\"D | %d | %s | %s\", isDone ? 1 : 0, description, by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")));","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"sindhurajain":60}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":" * This class represents a chat application.","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"        duke.startChat();","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"     * Constructs a task list of size.","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"    private Duke() {","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"    private void loadList() throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"            File dataFolder \u003d new File(\"./data\");","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"            if (!dataFolder.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"                throw new DukeException(\"\\nError! Data folder does not exist.\\n\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"            File file \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"sindhurajain"},"content":"                throw new DukeException(\"\\nError! duke.txt file does not exist within the data folder.\\n\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"sindhurajain"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"sindhurajain"},"content":"            String input;","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"sindhurajain"},"content":"            while ((input \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"sindhurajain"},"content":"                String[] splitInput \u003d input.split(\" \\\\| \");","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"sindhurajain"},"content":"                if (splitInput[0].equals(\"T\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"sindhurajain"},"content":"                    Todo todo \u003d new Todo(splitInput[2]);","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"sindhurajain"},"content":"                    if (Integer.parseInt(splitInput[1]) \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"sindhurajain"},"content":"                        todo.markAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"sindhurajain"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"sindhurajain"},"content":"                    list.add(todo);","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"sindhurajain"},"content":"                } else if (splitInput[0].equals(\"D\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"sindhurajain"},"content":"                    Deadline deadline \u003d new Deadline(splitInput[2], splitInput[3]);","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"sindhurajain"},"content":"                    if (Integer.parseInt(splitInput[1]) \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"sindhurajain"},"content":"                        deadline.markAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"sindhurajain"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"sindhurajain"},"content":"                    list.add(deadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"sindhurajain"},"content":"                } else if (splitInput[0].equals(\"E\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"sindhurajain"},"content":"                    Event event \u003d new Event(splitInput[2], splitInput[3], splitInput[4]);","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"sindhurajain"},"content":"                    if (Integer.parseInt(splitInput[1]) \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"sindhurajain"},"content":"                        event.markAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"sindhurajain"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"sindhurajain"},"content":"                    list.add(event);","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"sindhurajain"},"content":"                } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"sindhurajain"},"content":"                    throw new DukeException(\"\\nError! Incorrect duke.txt format: unexpected task type.\\n\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"sindhurajain"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"sindhurajain"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"sindhurajain"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"sindhurajain"},"content":"            throw new DukeException(\"\\nError! An IOException occurred.\\n\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"sindhurajain"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"sindhurajain"},"content":"            throw new DukeException(\"\\nError! Incorrect duke.txt format: unexpected value. Value should be 1 for done or 0 for not done.\\n\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"sindhurajain"},"content":"    private void saveList() throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"sindhurajain"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"sindhurajain"},"content":"            File file \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"sindhurajain"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"sindhurajain"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(file));","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"sindhurajain"},"content":"            for (Task l : list) {","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"sindhurajain"},"content":"                bw.append(l.toFileString()).append(\"\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"sindhurajain"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"sindhurajain"},"content":"            bw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"sindhurajain"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"sindhurajain"},"content":"            throw new DukeException(\"\\nAn IOException occurred.\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":98,"author":{"gitId":"sindhurajain"},"content":"     * Initiates the chat by invoking the sayHi() method.","lastModifiedDate":"2024-01-24"},{"lineNumber":99,"author":{"gitId":"sindhurajain"},"content":"     * Handles user input to display the list for \"list\" input, exit the chat for \"bye\" input,","lastModifiedDate":"2024-01-24"},{"lineNumber":100,"author":{"gitId":"sindhurajain"},"content":"     * marks or unmarks tasks as done, deletes tasks, or append to the list for to-do/deadline/event input,","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"sindhurajain"},"content":"     * separates responses based on the type of task.","lastModifiedDate":"2024-01-24"},{"lineNumber":102,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":103,"author":{"gitId":"sindhurajain"},"content":"    private void startChat() {","lastModifiedDate":"2024-01-24"},{"lineNumber":104,"author":{"gitId":"sindhurajain"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"sindhurajain"},"content":"            loadList();","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"sindhurajain"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"sindhurajain"},"content":"            System.out.print(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"sindhurajain"},"content":"        sayHi();","lastModifiedDate":"2024-01-24"},{"lineNumber":110,"author":{"gitId":"sindhurajain"},"content":"        boolean exited \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":111,"author":{"gitId":"sindhurajain"},"content":"        while (!exited) {","lastModifiedDate":"2024-01-24"},{"lineNumber":112,"author":{"gitId":"sindhurajain"},"content":"            String userInput \u003d sc.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":113,"author":{"gitId":"sindhurajain"},"content":"            try {","lastModifiedDate":"2024-01-24"},{"lineNumber":114,"author":{"gitId":"sindhurajain"},"content":"                if (userInput.equals(\"bye\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":115,"author":{"gitId":"sindhurajain"},"content":"                    exited \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":116,"author":{"gitId":"sindhurajain"},"content":"                } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":117,"author":{"gitId":"sindhurajain"},"content":"                    displayList();","lastModifiedDate":"2024-01-24"},{"lineNumber":118,"author":{"gitId":"sindhurajain"},"content":"                } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":119,"author":{"gitId":"sindhurajain"},"content":"                    int num \u003d parseTaskNumber(userInput, \"mark\");","lastModifiedDate":"2024-01-24"},{"lineNumber":120,"author":{"gitId":"sindhurajain"},"content":"                    markAsDone(num);","lastModifiedDate":"2024-01-24"},{"lineNumber":121,"author":{"gitId":"sindhurajain"},"content":"                } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":122,"author":{"gitId":"sindhurajain"},"content":"                    int num \u003d parseTaskNumber(userInput, \"unmark\");","lastModifiedDate":"2024-01-24"},{"lineNumber":123,"author":{"gitId":"sindhurajain"},"content":"                    unMarkAsDone(num);","lastModifiedDate":"2024-01-24"},{"lineNumber":124,"author":{"gitId":"sindhurajain"},"content":"                } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":125,"author":{"gitId":"sindhurajain"},"content":"                    String todo \u003d userInput.replace(\"todo\", \"\").trim();","lastModifiedDate":"2024-01-24"},{"lineNumber":126,"author":{"gitId":"sindhurajain"},"content":"                    processEmptyDescription(todo, \"todo\");","lastModifiedDate":"2024-01-24"},{"lineNumber":127,"author":{"gitId":"sindhurajain"},"content":"                    appendToDo(todo);","lastModifiedDate":"2024-01-24"},{"lineNumber":128,"author":{"gitId":"sindhurajain"},"content":"                } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":129,"author":{"gitId":"sindhurajain"},"content":"                    String[] deadline \u003d parseDeadlineInput(userInput, \"deadline\");","lastModifiedDate":"2024-01-24"},{"lineNumber":130,"author":{"gitId":"sindhurajain"},"content":"                    appendDeadline(deadline[0], deadline[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":131,"author":{"gitId":"sindhurajain"},"content":"                } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":132,"author":{"gitId":"sindhurajain"},"content":"                    String[] event \u003d parseEventInput(userInput, \"event\");","lastModifiedDate":"2024-01-24"},{"lineNumber":133,"author":{"gitId":"sindhurajain"},"content":"                    appendEvent(event[0], event[1], event[2]);","lastModifiedDate":"2024-01-24"},{"lineNumber":134,"author":{"gitId":"sindhurajain"},"content":"                } else if(userInput.startsWith(\"delete\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":135,"author":{"gitId":"sindhurajain"},"content":"                    int num \u003d parseTaskNumber(userInput, \"delete\");","lastModifiedDate":"2024-01-25"},{"lineNumber":136,"author":{"gitId":"sindhurajain"},"content":"                    deleteTask(num);","lastModifiedDate":"2024-01-25"},{"lineNumber":137,"author":{"gitId":"sindhurajain"},"content":"                } else if (userInput.startsWith(\"on\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"sindhurajain"},"content":"                    String dateInput \u003d userInput.replace(\"on\", \"\").trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"sindhurajain"},"content":"                    tasksOn(dateInput);","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"sindhurajain"},"content":"                } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":141,"author":{"gitId":"sindhurajain"},"content":"                    throw new DukeException(\"\\nError! I don\u0027t know what that means. Types of tasks are limited to ToDos, Deadlines and Events.\\n\");","lastModifiedDate":"2024-01-24"},{"lineNumber":142,"author":{"gitId":"sindhurajain"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":143,"author":{"gitId":"sindhurajain"},"content":"                saveList();","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"sindhurajain"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":145,"author":{"gitId":"sindhurajain"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-24"},{"lineNumber":146,"author":{"gitId":"sindhurajain"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":147,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":148,"author":{"gitId":"sindhurajain"},"content":"        sayBye();","lastModifiedDate":"2024-01-24"},{"lineNumber":149,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":150,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":151,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":152,"author":{"gitId":"sindhurajain"},"content":"     * Processes and validates that the description is not empty.","lastModifiedDate":"2024-01-24"},{"lineNumber":153,"author":{"gitId":"sindhurajain"},"content":"     * Throws a DukeException if the description is empty.","lastModifiedDate":"2024-01-24"},{"lineNumber":154,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":155,"author":{"gitId":"sindhurajain"},"content":"     * @param description The description to be checked.","lastModifiedDate":"2024-01-24"},{"lineNumber":156,"author":{"gitId":"sindhurajain"},"content":"     * @param task        The type of task.","lastModifiedDate":"2024-01-24"},{"lineNumber":157,"author":{"gitId":"sindhurajain"},"content":"     * @throws DukeException If the description is empty.","lastModifiedDate":"2024-01-24"},{"lineNumber":158,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":159,"author":{"gitId":"sindhurajain"},"content":"    private void processEmptyDescription(String description, String task) throws DukeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":160,"author":{"gitId":"sindhurajain"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":161,"author":{"gitId":"sindhurajain"},"content":"            throw new DukeException(\"\\nError! The description of a \" + task + \" cannot be empty.\\n\");","lastModifiedDate":"2024-01-24"},{"lineNumber":162,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":163,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":164,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":165,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":166,"author":{"gitId":"sindhurajain"},"content":"     * Parses the task number from the user input and validates it.","lastModifiedDate":"2024-01-24"},{"lineNumber":167,"author":{"gitId":"sindhurajain"},"content":"     * Throws a DukeException for empty task number or invalid task number that is outside the indexes of the list.","lastModifiedDate":"2024-01-24"},{"lineNumber":168,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":169,"author":{"gitId":"sindhurajain"},"content":"     * @param input   The user input containing the task number.","lastModifiedDate":"2024-01-24"},{"lineNumber":170,"author":{"gitId":"sindhurajain"},"content":"     * @param command The type of task.","lastModifiedDate":"2024-01-24"},{"lineNumber":171,"author":{"gitId":"sindhurajain"},"content":"     * @return The parsed and validated task number.","lastModifiedDate":"2024-01-24"},{"lineNumber":172,"author":{"gitId":"sindhurajain"},"content":"     * @throws DukeException If the task number is invalid or empty.","lastModifiedDate":"2024-01-24"},{"lineNumber":173,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":174,"author":{"gitId":"sindhurajain"},"content":"    private int parseTaskNumber(String input, String command) throws DukeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":175,"author":{"gitId":"sindhurajain"},"content":"        String taskNumString \u003d input.replace(command, \"\").trim();","lastModifiedDate":"2024-01-24"},{"lineNumber":176,"author":{"gitId":"sindhurajain"},"content":"        if (taskNumString.isEmpty() || !taskNumString.matches(\"\\\\d+\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":177,"author":{"gitId":"sindhurajain"},"content":"            throw new DukeException(\"\\nError! Please provide a valid task number after \u0027\" + command + \"\u0027.\\n\");","lastModifiedDate":"2024-01-24"},{"lineNumber":178,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":179,"author":{"gitId":"sindhurajain"},"content":"        int taskNumber \u003d Integer.parseInt(taskNumString);","lastModifiedDate":"2024-01-24"},{"lineNumber":180,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":181,"author":{"gitId":"sindhurajain"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e list.size() || list.get(taskNumber - 1) \u003d\u003d null) {","lastModifiedDate":"2024-01-25"},{"lineNumber":182,"author":{"gitId":"sindhurajain"},"content":"            throw new DukeException(\"\\nError! Task number \u0027\" + taskNumber + \"\u0027 does not exist.\\n\");","lastModifiedDate":"2024-01-24"},{"lineNumber":183,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":184,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":185,"author":{"gitId":"sindhurajain"},"content":"        return taskNumber;","lastModifiedDate":"2024-01-24"},{"lineNumber":186,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":187,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":188,"author":{"gitId":"sindhurajain"},"content":"    private LocalDateTime parseDateTimeInput(String input) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":189,"author":{"gitId":"sindhurajain"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":190,"author":{"gitId":"sindhurajain"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":191,"author":{"gitId":"sindhurajain"},"content":"            return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":192,"author":{"gitId":"sindhurajain"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":193,"author":{"gitId":"sindhurajain"},"content":"            throw new DukeException(\"\\nError! Please provide a valid date and time format (yyyy-MM-dd HHmm).\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":194,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":195,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":196,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":197,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":198,"author":{"gitId":"sindhurajain"},"content":"     * Parses and validates the user input for deadline tasks.","lastModifiedDate":"2024-01-24"},{"lineNumber":199,"author":{"gitId":"sindhurajain"},"content":"     * Throws a DukeException for invalid input or wrong formatting.","lastModifiedDate":"2024-01-24"},{"lineNumber":200,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":201,"author":{"gitId":"sindhurajain"},"content":"     * @param input   The user input containing the description and deadline.","lastModifiedDate":"2024-01-24"},{"lineNumber":202,"author":{"gitId":"sindhurajain"},"content":"     * @param command The type of task.","lastModifiedDate":"2024-01-24"},{"lineNumber":203,"author":{"gitId":"sindhurajain"},"content":"     * @return An array containing the parsed description and deadline.","lastModifiedDate":"2024-01-24"},{"lineNumber":204,"author":{"gitId":"sindhurajain"},"content":"     * @throws DukeException If the input is invalid or has wrong formatting.","lastModifiedDate":"2024-01-24"},{"lineNumber":205,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":206,"author":{"gitId":"sindhurajain"},"content":"    private String[] parseDeadlineInput(String input, String command) throws DukeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":207,"author":{"gitId":"sindhurajain"},"content":"        String[] deadlineInput \u003d input.replace(command, \"\").trim().split(\" /by \");","lastModifiedDate":"2024-01-24"},{"lineNumber":208,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":209,"author":{"gitId":"sindhurajain"},"content":"        if (deadlineInput.length !\u003d 2) {","lastModifiedDate":"2024-01-24"},{"lineNumber":210,"author":{"gitId":"sindhurajain"},"content":"            throw new DukeException(\"\\nError! Please provide a valid description and deadline after \u0027\" + command + \"\u0027.\\n\");","lastModifiedDate":"2024-01-24"},{"lineNumber":211,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":212,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":213,"author":{"gitId":"sindhurajain"},"content":"        String description \u003d deadlineInput[0].trim();","lastModifiedDate":"2024-01-24"},{"lineNumber":214,"author":{"gitId":"sindhurajain"},"content":"        LocalDateTime by \u003d parseDateTimeInput(deadlineInput[1].trim());","lastModifiedDate":"2024-01-31"},{"lineNumber":215,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":216,"author":{"gitId":"sindhurajain"},"content":"        processEmptyDescription(description, \"deadline\");","lastModifiedDate":"2024-01-24"},{"lineNumber":217,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":218,"author":{"gitId":"sindhurajain"},"content":"        return new String[]{description, by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))};","lastModifiedDate":"2024-01-31"},{"lineNumber":219,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":220,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":221,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":222,"author":{"gitId":"sindhurajain"},"content":"     * Parses and validates the user input for event tasks.","lastModifiedDate":"2024-01-24"},{"lineNumber":223,"author":{"gitId":"sindhurajain"},"content":"     * Throws a DukeException for invalid input or wrong formatting.","lastModifiedDate":"2024-01-24"},{"lineNumber":224,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":225,"author":{"gitId":"sindhurajain"},"content":"     * @param input   The user input for event tasks.","lastModifiedDate":"2024-01-24"},{"lineNumber":226,"author":{"gitId":"sindhurajain"},"content":"     * @param command The type of task.","lastModifiedDate":"2024-01-24"},{"lineNumber":227,"author":{"gitId":"sindhurajain"},"content":"     * @return An array containing the parsed description, start time, and end time.","lastModifiedDate":"2024-01-24"},{"lineNumber":228,"author":{"gitId":"sindhurajain"},"content":"     * @throws DukeException If the input is invalid or has wrong formatting.","lastModifiedDate":"2024-01-24"},{"lineNumber":229,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":230,"author":{"gitId":"sindhurajain"},"content":"    private String[] parseEventInput(String input, String command) throws DukeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":231,"author":{"gitId":"sindhurajain"},"content":"        String[] eventInput \u003d input.replace(command, \"\").trim().split(\" /from \");","lastModifiedDate":"2024-01-24"},{"lineNumber":232,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":233,"author":{"gitId":"sindhurajain"},"content":"        if (eventInput.length !\u003d 2) {","lastModifiedDate":"2024-01-24"},{"lineNumber":234,"author":{"gitId":"sindhurajain"},"content":"            throw new DukeException(\"\\nError! Please provide a valid description, start time, and end time after \u0027\" + command + \"\u0027.\\n\");","lastModifiedDate":"2024-01-24"},{"lineNumber":235,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":236,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":237,"author":{"gitId":"sindhurajain"},"content":"        String description \u003d eventInput[0].trim();","lastModifiedDate":"2024-01-24"},{"lineNumber":238,"author":{"gitId":"sindhurajain"},"content":"        String[] timeInput \u003d eventInput[1].split(\" /to \");","lastModifiedDate":"2024-01-24"},{"lineNumber":239,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":240,"author":{"gitId":"sindhurajain"},"content":"        if (timeInput.length !\u003d 2) {","lastModifiedDate":"2024-01-24"},{"lineNumber":241,"author":{"gitId":"sindhurajain"},"content":"            throw new DukeException(\"\\nError! Please provide a valid start time and end time after \u0027/from\u0027 and \u0027/to\u0027.\\n\");","lastModifiedDate":"2024-01-24"},{"lineNumber":242,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":243,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":244,"author":{"gitId":"sindhurajain"},"content":"        LocalDateTime startTime \u003d parseDateTimeInput(timeInput[0].trim());","lastModifiedDate":"2024-01-31"},{"lineNumber":245,"author":{"gitId":"sindhurajain"},"content":"        LocalDateTime endTime \u003d parseDateTimeInput(timeInput[1].trim());","lastModifiedDate":"2024-01-31"},{"lineNumber":246,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":247,"author":{"gitId":"sindhurajain"},"content":"        processEmptyDescription(description, \"event\");","lastModifiedDate":"2024-01-24"},{"lineNumber":248,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":249,"author":{"gitId":"sindhurajain"},"content":"        return new String[]{description, startTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")), endTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))};","lastModifiedDate":"2024-01-31"},{"lineNumber":250,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":251,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":252,"author":{"gitId":"sindhurajain"},"content":"    private void tasksOn(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":253,"author":{"gitId":"sindhurajain"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":254,"author":{"gitId":"sindhurajain"},"content":"            LocalDate targetDate \u003d LocalDate.parse(input, DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":255,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":256,"author":{"gitId":"sindhurajain"},"content":"            System.out.println(\"\\nTasks on \" + targetDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \":\");","lastModifiedDate":"2024-01-31"},{"lineNumber":257,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":258,"author":{"gitId":"sindhurajain"},"content":"            for (Task task : list) {","lastModifiedDate":"2024-01-31"},{"lineNumber":259,"author":{"gitId":"sindhurajain"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2024-01-31"},{"lineNumber":260,"author":{"gitId":"sindhurajain"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-01-31"},{"lineNumber":261,"author":{"gitId":"sindhurajain"},"content":"                    if (deadline.getBy().toLocalDate().equals(targetDate)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":262,"author":{"gitId":"sindhurajain"},"content":"                        System.out.println(deadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":263,"author":{"gitId":"sindhurajain"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":264,"author":{"gitId":"sindhurajain"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2024-01-31"},{"lineNumber":265,"author":{"gitId":"sindhurajain"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2024-01-31"},{"lineNumber":266,"author":{"gitId":"sindhurajain"},"content":"                    if (event.getStartTime().toLocalDate().equals(targetDate) ||","lastModifiedDate":"2024-01-31"},{"lineNumber":267,"author":{"gitId":"sindhurajain"},"content":"                            event.getEndTime().toLocalDate().equals(targetDate) ||","lastModifiedDate":"2024-01-31"},{"lineNumber":268,"author":{"gitId":"sindhurajain"},"content":"                            (targetDate.isAfter(event.getStartTime().toLocalDate()) \u0026\u0026","lastModifiedDate":"2024-01-31"},{"lineNumber":269,"author":{"gitId":"sindhurajain"},"content":"                                    targetDate.isBefore(event.getEndTime().toLocalDate()))) {","lastModifiedDate":"2024-01-31"},{"lineNumber":270,"author":{"gitId":"sindhurajain"},"content":"                        System.out.println(event);","lastModifiedDate":"2024-01-31"},{"lineNumber":271,"author":{"gitId":"sindhurajain"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":272,"author":{"gitId":"sindhurajain"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":273,"author":{"gitId":"sindhurajain"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":274,"author":{"gitId":"sindhurajain"},"content":"            System.out.println();","lastModifiedDate":"2024-01-31"},{"lineNumber":275,"author":{"gitId":"sindhurajain"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":276,"author":{"gitId":"sindhurajain"},"content":"            System.out.println(\"\\nError! Please provide a valid date format (MMM dd yyyy).\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":277,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":278,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":279,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":280,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":281,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":282,"author":{"gitId":"sindhurajain"},"content":"     * Displays a starting message to greet the user.","lastModifiedDate":"2024-01-24"},{"lineNumber":283,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":284,"author":{"gitId":"sindhurajain"},"content":"    private void sayHi() {","lastModifiedDate":"2024-01-24"},{"lineNumber":285,"author":{"gitId":"sindhurajain"},"content":"        System.out.println(\"Hello! I\u0027m myChats\\n\" + \"What can I do for you?\\n\");","lastModifiedDate":"2024-01-24"},{"lineNumber":286,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":287,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":288,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":289,"author":{"gitId":"sindhurajain"},"content":"     *  Displays an exit message.","lastModifiedDate":"2024-01-24"},{"lineNumber":290,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":291,"author":{"gitId":"sindhurajain"},"content":"    private void sayBye() {","lastModifiedDate":"2024-01-24"},{"lineNumber":292,"author":{"gitId":"sindhurajain"},"content":"        System.out.println(\"\\nBye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":294,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":295,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":296,"author":{"gitId":"sindhurajain"},"content":"     * Marks a task as done based on the provided task number.","lastModifiedDate":"2024-01-24"},{"lineNumber":297,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":298,"author":{"gitId":"sindhurajain"},"content":"     * @param num The task number to mark as done.","lastModifiedDate":"2024-01-24"},{"lineNumber":299,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":300,"author":{"gitId":"sindhurajain"},"content":"    private void markAsDone(int num) {","lastModifiedDate":"2024-01-24"},{"lineNumber":301,"author":{"gitId":"sindhurajain"},"content":"        list.get(num - 1).markAsDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":302,"author":{"gitId":"sindhurajain"},"content":"        System.out.println(\"\\nNice! I\u0027ve marked this task as done:\\n\" + list.get(num - 1) + \"\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":303,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":304,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":305,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":306,"author":{"gitId":"sindhurajain"},"content":"     * Marks a task as not done based on the provided task number.","lastModifiedDate":"2024-01-24"},{"lineNumber":307,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":308,"author":{"gitId":"sindhurajain"},"content":"     * @param num The task number to mark as not done.","lastModifiedDate":"2024-01-24"},{"lineNumber":309,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":310,"author":{"gitId":"sindhurajain"},"content":"    private void unMarkAsDone(int num) {","lastModifiedDate":"2024-01-24"},{"lineNumber":311,"author":{"gitId":"sindhurajain"},"content":"        list.get(num - 1).unMarkAsDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":312,"author":{"gitId":"sindhurajain"},"content":"        System.out.println(\"\\nOK, I\u0027ve marked this task as not done yet:\\n\\t\" + list.get(num - 1) + \"\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":313,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":314,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":315,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":316,"author":{"gitId":"sindhurajain"},"content":"     * Displays the current list of items with their respective indices.","lastModifiedDate":"2024-01-24"},{"lineNumber":317,"author":{"gitId":"sindhurajain"},"content":"     * Skips null or uninitialized elements in the list.","lastModifiedDate":"2024-01-24"},{"lineNumber":318,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":319,"author":{"gitId":"sindhurajain"},"content":"    private void displayList() {","lastModifiedDate":"2024-01-24"},{"lineNumber":320,"author":{"gitId":"sindhurajain"},"content":"        System.out.println();","lastModifiedDate":"2024-01-24"},{"lineNumber":321,"author":{"gitId":"sindhurajain"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-01-25"},{"lineNumber":322,"author":{"gitId":"sindhurajain"},"content":"            if (list.get(i) !\u003d null) {","lastModifiedDate":"2024-01-25"},{"lineNumber":323,"author":{"gitId":"sindhurajain"},"content":"                System.out.printf(\"%d. %s\\n\", i + 1, list.get(i));","lastModifiedDate":"2024-01-25"},{"lineNumber":324,"author":{"gitId":"sindhurajain"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":325,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":326,"author":{"gitId":"sindhurajain"},"content":"        System.out.println();","lastModifiedDate":"2024-01-24"},{"lineNumber":327,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":328,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":329,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":330,"author":{"gitId":"sindhurajain"},"content":"     * Appends the given to-do type input to the list at the first available slot.","lastModifiedDate":"2024-01-24"},{"lineNumber":331,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":332,"author":{"gitId":"sindhurajain"},"content":"     * @param input The to-do type input to be added to the list.","lastModifiedDate":"2024-01-24"},{"lineNumber":333,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":334,"author":{"gitId":"sindhurajain"},"content":"    private void appendToDo(String input) {","lastModifiedDate":"2024-01-24"},{"lineNumber":335,"author":{"gitId":"sindhurajain"},"content":"        Todo todo \u003d new Todo(input);","lastModifiedDate":"2024-01-24"},{"lineNumber":336,"author":{"gitId":"sindhurajain"},"content":"        list.add(todo);","lastModifiedDate":"2024-01-25"},{"lineNumber":337,"author":{"gitId":"sindhurajain"},"content":"        taskResponse(todo);","lastModifiedDate":"2024-01-24"},{"lineNumber":338,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":339,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":340,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":341,"author":{"gitId":"sindhurajain"},"content":"     * Appends the given deadline type input to the list at the first available slot.","lastModifiedDate":"2024-01-24"},{"lineNumber":342,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":343,"author":{"gitId":"sindhurajain"},"content":"     * @param description The description of the task to be added to the list.","lastModifiedDate":"2024-01-24"},{"lineNumber":344,"author":{"gitId":"sindhurajain"},"content":"     * @param by The deadline to be added to the list.","lastModifiedDate":"2024-01-24"},{"lineNumber":345,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":346,"author":{"gitId":"sindhurajain"},"content":"    private void appendDeadline(String description, String by) {","lastModifiedDate":"2024-01-24"},{"lineNumber":347,"author":{"gitId":"sindhurajain"},"content":"        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-01-24"},{"lineNumber":348,"author":{"gitId":"sindhurajain"},"content":"        list.add(deadline);","lastModifiedDate":"2024-01-25"},{"lineNumber":349,"author":{"gitId":"sindhurajain"},"content":"        taskResponse(deadline);","lastModifiedDate":"2024-01-24"},{"lineNumber":350,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":351,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":352,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":353,"author":{"gitId":"sindhurajain"},"content":"     * Appends the given event type input to the list at the first available slot.","lastModifiedDate":"2024-01-24"},{"lineNumber":354,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":355,"author":{"gitId":"sindhurajain"},"content":"     * @param description The description to be added to the list.","lastModifiedDate":"2024-01-24"},{"lineNumber":356,"author":{"gitId":"sindhurajain"},"content":"     * @param startTime The start timing to be added to the list.","lastModifiedDate":"2024-01-24"},{"lineNumber":357,"author":{"gitId":"sindhurajain"},"content":"     * @param endTime The end timing to be added to the list.","lastModifiedDate":"2024-01-24"},{"lineNumber":358,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":359,"author":{"gitId":"sindhurajain"},"content":"    private void appendEvent(String description, String startTime, String endTime) {","lastModifiedDate":"2024-01-24"},{"lineNumber":360,"author":{"gitId":"sindhurajain"},"content":"        Event event \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2024-01-24"},{"lineNumber":361,"author":{"gitId":"sindhurajain"},"content":"        list.add(event);","lastModifiedDate":"2024-01-25"},{"lineNumber":362,"author":{"gitId":"sindhurajain"},"content":"        taskResponse(event);","lastModifiedDate":"2024-01-24"},{"lineNumber":363,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":364,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":365,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":366,"author":{"gitId":"sindhurajain"},"content":"     * Prints out the response, specific to the type of task, after adding the task to the list","lastModifiedDate":"2024-01-24"},{"lineNumber":367,"author":{"gitId":"sindhurajain"},"content":"     * @param task the task that is added to the list.","lastModifiedDate":"2024-01-24"},{"lineNumber":368,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":369,"author":{"gitId":"sindhurajain"},"content":"    private void taskResponse(Task task) {","lastModifiedDate":"2024-01-24"},{"lineNumber":370,"author":{"gitId":"sindhurajain"},"content":"        int numTasks \u003d list.size();","lastModifiedDate":"2024-01-25"},{"lineNumber":371,"author":{"gitId":"sindhurajain"},"content":"        System.out.println();","lastModifiedDate":"2024-01-24"},{"lineNumber":372,"author":{"gitId":"sindhurajain"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":373,"author":{"gitId":"sindhurajain"},"content":"        System.out.println(task);","lastModifiedDate":"2024-01-24"},{"lineNumber":374,"author":{"gitId":"sindhurajain"},"content":"        if (numTasks \u003d\u003d 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":375,"author":{"gitId":"sindhurajain"},"content":"            System.out.println(\"Now you have \" + numTasks + \" task in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":376,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":377,"author":{"gitId":"sindhurajain"},"content":"        if (numTasks !\u003d 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":378,"author":{"gitId":"sindhurajain"},"content":"            System.out.println(\"Now you have \" + numTasks + \" tasks in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":379,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":380,"author":{"gitId":"sindhurajain"},"content":"        System.out.println();","lastModifiedDate":"2024-01-24"},{"lineNumber":381,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":382,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":383,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":384,"author":{"gitId":"sindhurajain"},"content":"     * Deletes a task from the task list based on the provided one-based index.","lastModifiedDate":"2024-01-25"},{"lineNumber":385,"author":{"gitId":"sindhurajain"},"content":"     * Throws a DukeException if the provided index is invalid.","lastModifiedDate":"2024-01-25"},{"lineNumber":386,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":387,"author":{"gitId":"sindhurajain"},"content":"     * @param oneItem The one-based index of the task to be deleted.","lastModifiedDate":"2024-01-25"},{"lineNumber":388,"author":{"gitId":"sindhurajain"},"content":"     * @throws DukeException If the provided index is out of bounds or corresponds to a null task.","lastModifiedDate":"2024-01-25"},{"lineNumber":389,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":390,"author":{"gitId":"sindhurajain"},"content":"    private void deleteTask(int oneItem) throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":391,"author":{"gitId":"sindhurajain"},"content":"        int zeroItem \u003d oneItem - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":392,"author":{"gitId":"sindhurajain"},"content":"        if (zeroItem \u003e\u003d 0 \u0026\u0026 zeroItem \u003c list.size() \u0026\u0026 list.get(zeroItem) !\u003d null) {","lastModifiedDate":"2024-01-25"},{"lineNumber":393,"author":{"gitId":"sindhurajain"},"content":"            Task deletedTask \u003d list.remove(zeroItem);","lastModifiedDate":"2024-01-25"},{"lineNumber":394,"author":{"gitId":"sindhurajain"},"content":"            deleteResponse(deletedTask);","lastModifiedDate":"2024-01-25"},{"lineNumber":395,"author":{"gitId":"sindhurajain"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":396,"author":{"gitId":"sindhurajain"},"content":"            throw new DukeException(\"\\nError! Task number \u0027\" + oneItem + \"\u0027 does not exist.\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":397,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":398,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":399,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":400,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":401,"author":{"gitId":"sindhurajain"},"content":"     * Displays the response message after deleting a task if the deletion is successful and an exception has not been thrown.","lastModifiedDate":"2024-01-25"},{"lineNumber":402,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":403,"author":{"gitId":"sindhurajain"},"content":"     * @param task The task that has been deleted.","lastModifiedDate":"2024-01-25"},{"lineNumber":404,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":405,"author":{"gitId":"sindhurajain"},"content":"    private void deleteResponse(Task task) {","lastModifiedDate":"2024-01-25"},{"lineNumber":406,"author":{"gitId":"sindhurajain"},"content":"        int numTasks \u003d list.size();","lastModifiedDate":"2024-01-25"},{"lineNumber":407,"author":{"gitId":"sindhurajain"},"content":"        System.out.println();","lastModifiedDate":"2024-01-25"},{"lineNumber":408,"author":{"gitId":"sindhurajain"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":409,"author":{"gitId":"sindhurajain"},"content":"        System.out.println(task);","lastModifiedDate":"2024-01-25"},{"lineNumber":410,"author":{"gitId":"sindhurajain"},"content":"        if (numTasks \u003d\u003d 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":411,"author":{"gitId":"sindhurajain"},"content":"            System.out.println(\"Now you have \" + numTasks + \" task in the list.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":412,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":413,"author":{"gitId":"sindhurajain"},"content":"        if (numTasks !\u003d 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":414,"author":{"gitId":"sindhurajain"},"content":"            System.out.println(\"Now you have \" + numTasks + \" tasks in the list.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":415,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":416,"author":{"gitId":"sindhurajain"},"content":"        System.out.println();","lastModifiedDate":"2024-01-25"},{"lineNumber":417,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":418,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"sindhurajain":414,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":" * Class DukeException represents exceptions specific to Duke and inherits from the Exception class.","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"     * Constructor for DukeException class.","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"     * @param message The error message.","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"    DukeException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"sindhurajain":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":" * The Event class represents a task that occurs within a specified time range.","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"     * Constructs an Event object with the given description, start time, and end time.","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"     * @param startTime   The start time of the event.","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"     * @param endTime     The end time of the event.","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"    Event(String description, String startTime, String endTime) {","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"        this.startTime \u003d parseDateTime(startTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"        this.endTime \u003d parseDateTime(endTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"     * Gets the start time of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"     * @return The LocalDateTime representing the start time.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"        return startTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"     * Gets the end time of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"     * @return The LocalDateTime representing the end time.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"        return endTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"sindhurajain"},"content":"     * Parses the date and time from the string representation.","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"sindhurajain"},"content":"     * @param dateTimeString The string representation of date and time.","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"sindhurajain"},"content":"     * @return The parsed LocalDateTime object.","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"sindhurajain"},"content":"    private LocalDateTime parseDateTime(String dateTimeString) {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"sindhurajain"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"sindhurajain"},"content":"        return LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"sindhurajain"},"content":"     * Returns a formatted string representation of the event task\".","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"sindhurajain"},"content":"     * @return The formatted string representation of the event task.","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"sindhurajain"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"sindhurajain"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"sindhurajain"},"content":"                super.toString(),","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"sindhurajain"},"content":"                startTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")),","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"sindhurajain"},"content":"                endTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")));","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"sindhurajain"},"content":"     * Converts the task into a string format suitable for writing to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"sindhurajain"},"content":"     * @return The formatted string for writing to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"sindhurajain"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"sindhurajain"},"content":"        return String.format(\"E | %d | %s | %s | %s\",","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"sindhurajain"},"content":"                isDone ? 1 : 0,","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"sindhurajain"},"content":"                description,","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"sindhurajain"},"content":"                startTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")),","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"sindhurajain"},"content":"                endTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")));","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"sindhurajain":77}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":" * The Task class represents a task with a description and completion status.","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"    protected String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"     * Constructor for a Task object with the given description and default completion status to be not done.","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"     * Gets the status icon representing whether or not the task has been completed.","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"     * @return The status icon (\"X\" if done, \" \" if not done).","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"     * Marks the task as done by setting the completion status to true.","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"     * Marks the task as not done by setting the completion status to false.","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"    public void unMarkAsDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"     * Returns a string representation of the task in the format \"[status icon] description\".","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"sindhurajain"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"sindhurajain"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"sindhurajain"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"sindhurajain"},"content":"     * Converts the task into a string format suitable for writing to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"sindhurajain"},"content":"     * @return The formatted string for writing to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"sindhurajain"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"sindhurajain"},"content":"        return String.format(\"Task | %d | %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"sindhurajain":59}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":" * The to-do class represents a task without a date/time attached to it.","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"    Todo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"     * Converts the task into a string format suitable for writing to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"     * @return The formatted string for writing to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"        return String.format(\"T | %d | %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"     * Returns a formatted string representation of the to-do task\".","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"     * @return The formatted string representation of the to-do task.","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"sindhurajain":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"todo read book","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"todo join sports club","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"mark 4","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"todo borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"sindhurajain":13}}]
