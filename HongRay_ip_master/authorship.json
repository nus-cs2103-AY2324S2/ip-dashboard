[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":"    //Already done checkstyle","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":"    testImplementation \u0027org.mockito:mockito-core:3.11.2\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"HongRay"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"HongRay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"HongRay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"HongRay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"HongRay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"HongRay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"HongRay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"HongRay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"HongRay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"mainClassName \u003d \"jayne.Launcher\"","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":"    mainClass.set(\"jayne.Launcher\")","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"HongRay"},"content":"    archiveClassifier.set(\u0027\u0027)","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"HongRay"},"content":"    archiveFileName.set(\u0027jayne.jar\u0027)","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"HongRay"},"content":"    manifest {","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"HongRay"},"content":"        attributes \u0027Main-Class\u0027: \u0027jayne.Launcher\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"HongRay"},"content":"checkstyle {","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"HongRay"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"HongRay"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"HongRay":29,"-":38}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"HongRay"},"content":"# Jayne Android User Guide","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"Jayne Android is a versatile task management application designed to help you organize your tasks efficiently. With a simple and intuitive interface, Jayne Android allows you to add, manage, and sort your tasks with ease. Whether you\u0027re planning your day, managing projects, or setting reminders, Jayne Android provides you with the tools you need to stay on top of your tasks.","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":"## Jayne Android First Look","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"![Jayne Diagram](Ui.png)","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"## How it works","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"HongRay"},"content":"1. There are 3 commands in that Jayne recognises. ","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"HongRay"},"content":"   1. Todo","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"HongRay"},"content":"   2. Deadline","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"HongRay"},"content":"   3. Event","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"HongRay"},"content":"2. Type in the activity that you want Jayne to keep track.","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":"3. Jayne will add your activity in a list.","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":"4. She will also create a `text file` and store your activities.","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"HongRay"},"content":"5. More commands will be listed below.","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"HongRay"},"content":"## Feature","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"HongRay"},"content":"### Adding Tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"HongRay"},"content":"Jayne Android supports three types of tasks: Todo, Deadline, and Event. Each task type is tailored to suit different needs and preferences.","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"HongRay"},"content":"1. **Todo**: A basic task with a description. Perfect for quick reminders or simple tasks.","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":"   - Command: `todo [task description]`","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"HongRay"},"content":"   - Example: `todo Read a book` ","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"HongRay"},"content":"2. **Deadline**: A task with a due date. Ideal for tasks that need to be completed by a specific time.","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"   - Command: `deadline [task description] /by [YYYY-MM-DD]`","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"HongRay"},"content":"   - Example: `deadline Submit assignment /by 2024-03-01`","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"HongRay"},"content":"3. **Event**: A task with a start and end date. Suitable for events or activities happening over a period.","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"HongRay"},"content":"   - Command: `event [task description] /from [YYYY-MM-DD] /to [YYYY-MM-DD]`","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"HongRay"},"content":"   - Example: `event Conference /from 2024-04-01 /to 2024-04-03`","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":39,"author":{"gitId":"HongRay"},"content":"4. **Viewing Tasks**: You can view all your tasks in a list, giving you a clear overview of what needs to be done.","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"HongRay"},"content":"   - Command: `list`","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":42,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"HongRay"},"content":"3. **Deleting Tasks**","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"HongRay"},"content":"   Remove tasks that are no longer needed or have been completed.","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"HongRay"},"content":"   - Command: `delete [task number]`","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"HongRay"},"content":"   - Example: `delete 3`","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"HongRay"},"content":"4. **Sorting**: Organize your tasks based on type, completion status, or due date to prioritize your workload effectively.","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":"   - Sort by Type: Groups tasks by their type (`Todo`, `Deadline`, `Event`).","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"HongRay"},"content":"   - Command: `sort type`","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"HongRay"},"content":"   - Sort by Mark Status: Separates completed tasks from those still pending.","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"HongRay"},"content":"   - Command: `sort mark `","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"HongRay"},"content":"   - Sort by Due Date: Arranges tasks starting from the earliest due date or event start date.","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"HongRay"},"content":"   - Command: `sort due`","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"HongRay"},"content":"5. **Marking Tasks as Done:** Mark tasks as completed once you\u0027ve finished them.","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"HongRay"},"content":"   - Command: `mark [task number]`","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"HongRay"},"content":"   - Example: `mark 1`","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"HongRay"},"content":"6. **Adding Flexibility** Jayne Android supports flexible commands for adding tasks, making task management quick and effortless.","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"HongRay"},"content":"   - Command: `add [task type] [task details]`","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"HongRay"},"content":"   - Examples:","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"HongRay"},"content":"   - `add todo Buy groceries`","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"HongRay"},"content":"   - `add deadline File taxes /by 2024-04-15`","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"HongRay"},"content":"   - `add event Vacation /from 2024-07-01 /to 2024-07-14`","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"HongRay"},"content":"## Getting Started \u003cbr\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"HongRay"},"content":"Simply download `jayne.jar` in the main directory. Once installed, open the app, and you\u0027ll be greeted with a simple interface where you can begin adding and managing your tasks immediately.","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"HongRay":57,"-":14}},{"path":"src/main/java/jayne/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongRay"},"content":"package jayne;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"HongRay"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"HongRay"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"HongRay"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"HongRay"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"HongRay"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"HongRay"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"HongRay"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"HongRay"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"HongRay"},"content":" * Represents a dialog box in a GUI application. This class is designed to display a message","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"HongRay"},"content":" * alongside an image, such as a user or character avatar. The dialog box can be customized","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"HongRay"},"content":" * to show the image on either the left or right side of the text message.","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":" *","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"HongRay"},"content":" * This class extends {@link HBox}, using FXML to define its structure, which includes a label","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":" * for text and an image view for displaying an avatar. It also features the ability to flip","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"HongRay"},"content":" * the layout of its content, allowing flexibility in how dialog is presented.","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"HongRay"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"    private static final String VIEW_DIALOG_BOX_FXML \u003d \"/view/DialogBox.fxml\";","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"HongRay"},"content":"    private Label text;","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"HongRay"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"HongRay"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"HongRay"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"HongRay"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"HongRay"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"HongRay"},"content":"    private Circle circle;","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"HongRay"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"HongRay"},"content":"        assert text !\u003d null : \"Text parameter cannot be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"HongRay"},"content":"        assert img !\u003d null : \"Image parameter cannot be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"HongRay"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"HongRay"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(VIEW_DIALOG_BOX_FXML));","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"HongRay"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"HongRay"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"HongRay"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"HongRay"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":"            assert false : \"Failed to load FXML for DialogBox\";","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"HongRay"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"HongRay"},"content":"        circle.setFill(new ImagePattern(img));","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"HongRay"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"HongRay"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"HongRay"},"content":"    private void flip() {","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"HongRay"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"HongRay"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"HongRay"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"HongRay"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"HongRay"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"HongRay"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"HongRay"},"content":"    public static DialogBox getJayneDialog(String text, Image img) {","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"HongRay"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"HongRay"},"content":"        db.flip();","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"HongRay"},"content":"        return db;","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"HongRay"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"HongRay":77}},{"path":"src/main/java/jayne/Handler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongRay"},"content":"package jayne;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"import jayne.task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"import jayne.task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"HongRay"},"content":"import jayne.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"HongRay"},"content":"import jayne.task.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"HongRay"},"content":"import jayne.task.Todo;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"HongRay"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"HongRay"},"content":" * Handles the execution of user commands.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":" * This class is responsible for processing user input commands","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":" * and invoking the appropriate actions on the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"HongRay"},"content":" * It acts as a bridge between the user interface and the data model.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"HongRay"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"HongRay"},"content":"public class Handler {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"HongRay"},"content":"    private static final int TARGET_LIMT \u003d 2;","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"HongRay"},"content":"     * Handles the deletion of a task from the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"HongRay"},"content":"     * @param parts    the array containing the input command and its parts.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":"     * @param taskList the TaskList containing the list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"HongRay"},"content":"     * @throws JayneException if the task number is invalid or does not exist.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"    public static String handleDelete(String[] parts, TaskList taskList) throws JayneException {","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"HongRay"},"content":"        String startText \u003d \"\\nNoted. I\u0027ve removed this task:\\n  \";","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"        String endText \u003d \" tasks in the list.\\n\";","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"HongRay"},"content":"        assert parts !\u003d null : \"Input command parts cannot be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"HongRay"},"content":"        assert taskList !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"HongRay"},"content":"        if (parts.length \u003c TARGET_LIMT) {","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"HongRay"},"content":"            throw JayneException.deleteEmptyException();","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"HongRay"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"HongRay"},"content":"            int taskNumber \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"HongRay"},"content":"            if (taskNumber \u003c\u003d 0 || taskNumber \u003e taskList.getTaskCount()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"HongRay"},"content":"                throw JayneException.deleteExistException(taskNumber);","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"HongRay"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"HongRay"},"content":"            Task removedTask \u003d taskList.deleteTask(taskNumber);","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"HongRay"},"content":"            assert removedTask !\u003d null : \"Removed task should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"HongRay"},"content":"            return startText + removedTask + \"\\nNow you have \"","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"HongRay"},"content":"                    + taskList.getTaskCount() + endText;","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"HongRay"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"HongRay"},"content":"            throw JayneException.deleteInvalidException();","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":"     * Handles finding tasks by keyword.","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"HongRay"},"content":"     * @param parts the array containing the input command and its parts.","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"HongRay"},"content":"     * @param taskList the TaskList containing the list of tasks.","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"HongRay"},"content":"    public static String handleSort(String[] parts, TaskList taskList) {","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"HongRay"},"content":"        return taskList.sort(parts[1]);","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"HongRay"},"content":"     * Handles finding tasks by keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"HongRay"},"content":"     * @param parts the array containing the input command and its parts.","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"HongRay"},"content":"     * @param taskList the TaskList containing the list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"HongRay"},"content":"    public static String handleFind(String[] parts, TaskList taskList) throws JayneException {","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"HongRay"},"content":"        if (checkIsEmptyOrLessThanLimit(parts)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"HongRay"},"content":"            throw new JayneException(\"The search keyword cannot be empty.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"HongRay"},"content":"        return taskList.findTask(parts[1]);","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"HongRay"},"content":"     * Handles unmarking a task as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"HongRay"},"content":"     * @param parts    the array containing the input command and its parts.","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"HongRay"},"content":"     * @param taskList the TaskList containing the list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"HongRay"},"content":"     * @throws JayneException if the task number is invalid or does not exist.","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"HongRay"},"content":"    public static String handleUnmark(String[] parts, TaskList taskList) throws JayneException {","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"HongRay"},"content":"        if (parts.length \u003c TARGET_LIMT) {","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"HongRay"},"content":"            throw JayneException.unmarkEmptyException();","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"HongRay"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":82,"author":{"gitId":"HongRay"},"content":"            int taskNumber \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"HongRay"},"content":"            if (taskNumber \u003c\u003d 0 || taskNumber \u003e taskList.getTaskCount()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":84,"author":{"gitId":"HongRay"},"content":"                throw JayneException.unmarkTaskExistException(taskNumber);","lastModifiedDate":"2024-01-24"},{"lineNumber":85,"author":{"gitId":"HongRay"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":86,"author":{"gitId":"HongRay"},"content":"            taskList.markTaskAsNotDone(taskNumber);","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"HongRay"},"content":"            return \"\\nOK, I\u0027ve marked this task as not done yet:\\n  \" + taskList.getTask(taskNumber)","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"HongRay"},"content":"                    + \"\\n\";","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"HongRay"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":90,"author":{"gitId":"HongRay"},"content":"            throw JayneException.unmarkException();","lastModifiedDate":"2024-01-24"},{"lineNumber":91,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":93,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"HongRay"},"content":"     * Handles creating a deadline task and adding it to the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"HongRay"},"content":"     * @param parts the array containing the input command and its parts.","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"HongRay"},"content":"     * @param taskList the TaskList containing the list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"HongRay"},"content":"     * @throws JayneException if the deadline description or date is empty or in an invalid format.","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"HongRay"},"content":"    public static String handleDeadline(String[] parts, TaskList taskList) throws JayneException {","lastModifiedDate":"2024-02-08"},{"lineNumber":101,"author":{"gitId":"HongRay"},"content":"        assert parts !\u003d null : \"Input command parts cannot be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":102,"author":{"gitId":"HongRay"},"content":"        assert taskList !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":103,"author":{"gitId":"HongRay"},"content":"        if (checkIsEmptyOrLessThanLimit(parts)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":104,"author":{"gitId":"HongRay"},"content":"            throw new JayneException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":105,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":106,"author":{"gitId":"HongRay"},"content":"        String[] deadlineParts \u003d parts[1].split(\" /by \", TARGET_LIMT);","lastModifiedDate":"2024-02-13"},{"lineNumber":107,"author":{"gitId":"HongRay"},"content":"        if (checkIsEmptyOrLessThanLimit(deadlineParts)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":108,"author":{"gitId":"HongRay"},"content":"            throw JayneException.deadlineException();","lastModifiedDate":"2024-01-24"},{"lineNumber":109,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":110,"author":{"gitId":"HongRay"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"HongRay"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE;","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"HongRay"},"content":"            LocalDate.parse(deadlineParts[1], formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"HongRay"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"HongRay"},"content":"            throw new JayneException(\"Deadline date is in the wrong format. Please use yyyy-mm-dd.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"HongRay"},"content":"        Deadline newDeadline \u003d new Deadline(deadlineParts[0], deadlineParts[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":117,"author":{"gitId":"HongRay"},"content":"        taskList.addTask(newDeadline);","lastModifiedDate":"2024-01-24"},{"lineNumber":118,"author":{"gitId":"HongRay"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":119,"author":{"gitId":"HongRay"},"content":"                + \"  \" + newDeadline","lastModifiedDate":"2024-02-08"},{"lineNumber":120,"author":{"gitId":"HongRay"},"content":"                + \"Now you have \" + taskList.getTaskCount() + \" tasks in the list.\";","lastModifiedDate":"2024-02-08"},{"lineNumber":121,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":122,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"HongRay"},"content":"     * Handles creating a todo task and adding it to the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"HongRay"},"content":"     * @param parts    the array containing the input command and its parts.","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"HongRay"},"content":"     * @param taskList the TaskList containing the list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"HongRay"},"content":"     * @throws JayneException if the todo description is empty.","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"HongRay"},"content":"    public static String handleTodo(String[] parts, TaskList taskList) throws JayneException {","lastModifiedDate":"2024-02-08"},{"lineNumber":130,"author":{"gitId":"HongRay"},"content":"        assert parts !\u003d null : \"Input command parts cannot be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":131,"author":{"gitId":"HongRay"},"content":"        assert taskList !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":132,"author":{"gitId":"HongRay"},"content":"        if (checkIsEmptyOrLessThanLimit(parts)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":133,"author":{"gitId":"HongRay"},"content":"            throw JayneException.todoException();","lastModifiedDate":"2024-01-24"},{"lineNumber":134,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":135,"author":{"gitId":"HongRay"},"content":"        Todo newTodo \u003d new Todo(parts[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":136,"author":{"gitId":"HongRay"},"content":"        taskList.addTask(newTodo);","lastModifiedDate":"2024-01-24"},{"lineNumber":137,"author":{"gitId":"HongRay"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + newTodo + \"\\nNow you have \"","lastModifiedDate":"2024-02-08"},{"lineNumber":138,"author":{"gitId":"HongRay"},"content":"                + taskList.getTaskCount() + \" tasks in the list.\";","lastModifiedDate":"2024-02-08"},{"lineNumber":139,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":140,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"HongRay"},"content":"     * Handles creating an event task and adding it to the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"HongRay"},"content":"     * @param parts the array containing the input command and its parts.","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"HongRay"},"content":"     * @param taskList the TaskList containing the list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"HongRay"},"content":"     * @throws JayneException if the event description or time is empty or in an invalid format.","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"HongRay"},"content":"    public static String handleEvent(String[] parts, TaskList taskList) throws JayneException {","lastModifiedDate":"2024-02-08"},{"lineNumber":148,"author":{"gitId":"HongRay"},"content":"        assert parts !\u003d null : \"Input command parts cannot be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":149,"author":{"gitId":"HongRay"},"content":"        assert taskList !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":150,"author":{"gitId":"HongRay"},"content":"        if (checkIsEmptyOrLessThanLimit(parts)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":151,"author":{"gitId":"HongRay"},"content":"            throw JayneException.emptyEventException();","lastModifiedDate":"2024-01-24"},{"lineNumber":152,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":153,"author":{"gitId":"HongRay"},"content":"        String[] eventParts \u003d parts[1].split(\" /from \", TARGET_LIMT);","lastModifiedDate":"2024-02-13"},{"lineNumber":154,"author":{"gitId":"HongRay"},"content":"        if (checkIsEmptyOrLessThanLimit(eventParts)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":155,"author":{"gitId":"HongRay"},"content":"            throw JayneException.eventStartException();","lastModifiedDate":"2024-01-24"},{"lineNumber":156,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":157,"author":{"gitId":"HongRay"},"content":"        String[] times \u003d eventParts[1].split(\" /to \", TARGET_LIMT);","lastModifiedDate":"2024-02-13"},{"lineNumber":158,"author":{"gitId":"HongRay"},"content":"        if (checkIsEmptyOrLessThanLimit(times)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":159,"author":{"gitId":"HongRay"},"content":"            throw JayneException.eventEndException();","lastModifiedDate":"2024-01-24"},{"lineNumber":160,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":161,"author":{"gitId":"HongRay"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":162,"author":{"gitId":"HongRay"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE;","lastModifiedDate":"2024-02-13"},{"lineNumber":163,"author":{"gitId":"HongRay"},"content":"            LocalDate.parse(times[0], formatter); // Validate start date","lastModifiedDate":"2024-02-13"},{"lineNumber":164,"author":{"gitId":"HongRay"},"content":"            LocalDate.parse(times[1], formatter); // Validate end date","lastModifiedDate":"2024-02-13"},{"lineNumber":165,"author":{"gitId":"HongRay"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":166,"author":{"gitId":"HongRay"},"content":"            throw new JayneException(\"Event date is in the wrong format. Please use yyyy-mm-dd.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":167,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":168,"author":{"gitId":"HongRay"},"content":"        Event newEvent \u003d new Event(eventParts[0], times[0], times[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":169,"author":{"gitId":"HongRay"},"content":"        taskList.addTask(newEvent);","lastModifiedDate":"2024-01-24"},{"lineNumber":170,"author":{"gitId":"HongRay"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":171,"author":{"gitId":"HongRay"},"content":"                + \"  \" + newEvent","lastModifiedDate":"2024-02-08"},{"lineNumber":172,"author":{"gitId":"HongRay"},"content":"                + \"\\nNow you have \" + taskList.getTaskCount() + \" tasks in the list.\";","lastModifiedDate":"2024-02-08"},{"lineNumber":173,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":174,"author":{"gitId":"HongRay"},"content":"    private static boolean checkIsEmptyOrLessThanLimit(String[] input) {","lastModifiedDate":"2024-02-13"},{"lineNumber":175,"author":{"gitId":"HongRay"},"content":"        return input.length \u003c TARGET_LIMT || input[1].isEmpty();","lastModifiedDate":"2024-02-13"},{"lineNumber":176,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":177,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":178,"author":{"gitId":"HongRay"},"content":"     * Handles marking a task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":179,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":180,"author":{"gitId":"HongRay"},"content":"     * @param parts the array containing the input command and its parts.","lastModifiedDate":"2024-02-02"},{"lineNumber":181,"author":{"gitId":"HongRay"},"content":"     * @param taskList the TaskList containing the list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":182,"author":{"gitId":"HongRay"},"content":"     * @throws JayneException if the task number is invalid or does not exist.","lastModifiedDate":"2024-02-02"},{"lineNumber":183,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":184,"author":{"gitId":"HongRay"},"content":"    public static String handleMark(String[] parts, TaskList taskList) throws JayneException {","lastModifiedDate":"2024-02-08"},{"lineNumber":185,"author":{"gitId":"HongRay"},"content":"        assert parts !\u003d null : \"Input command parts cannot be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":186,"author":{"gitId":"HongRay"},"content":"        assert taskList !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":187,"author":{"gitId":"HongRay"},"content":"        if (parts.length \u003c TARGET_LIMT) {","lastModifiedDate":"2024-02-13"},{"lineNumber":188,"author":{"gitId":"HongRay"},"content":"            throw JayneException.markEmptyException();","lastModifiedDate":"2024-01-24"},{"lineNumber":189,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":190,"author":{"gitId":"HongRay"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":191,"author":{"gitId":"HongRay"},"content":"            int taskNumber \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":192,"author":{"gitId":"HongRay"},"content":"            boolean isLessThanZero \u003d taskNumber \u003c\u003d 0;","lastModifiedDate":"2024-02-13"},{"lineNumber":193,"author":{"gitId":"HongRay"},"content":"            boolean isOutOfRange \u003d taskNumber \u003e taskList.getTaskCount();","lastModifiedDate":"2024-02-13"},{"lineNumber":194,"author":{"gitId":"HongRay"},"content":"            if (isLessThanZero || isOutOfRange) {","lastModifiedDate":"2024-02-13"},{"lineNumber":195,"author":{"gitId":"HongRay"},"content":"                throw JayneException.markTaskExistException(taskNumber);","lastModifiedDate":"2024-01-24"},{"lineNumber":196,"author":{"gitId":"HongRay"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":197,"author":{"gitId":"HongRay"},"content":"            taskList.markTaskAsDone(taskNumber);","lastModifiedDate":"2024-01-24"},{"lineNumber":198,"author":{"gitId":"HongRay"},"content":"            return \"\\nNice! I\u0027ve marked this task as done:\\n  \"","lastModifiedDate":"2024-02-08"},{"lineNumber":199,"author":{"gitId":"HongRay"},"content":"                    + taskList.getTask(taskNumber) + \"\\n\";","lastModifiedDate":"2024-02-08"},{"lineNumber":200,"author":{"gitId":"HongRay"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":201,"author":{"gitId":"HongRay"},"content":"            throw JayneException.markInvalidTaskException();","lastModifiedDate":"2024-01-24"},{"lineNumber":202,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":203,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":204,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":205,"author":{"gitId":"HongRay"},"content":"     * Prints bye","lastModifiedDate":"2024-01-31"},{"lineNumber":206,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":207,"author":{"gitId":"HongRay"},"content":"    public static String handleBye() {","lastModifiedDate":"2024-02-08"},{"lineNumber":208,"author":{"gitId":"HongRay"},"content":"        return \"Go to sleep ok, stop bullying Slurpee\";","lastModifiedDate":"2024-02-10"},{"lineNumber":209,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":210,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":211,"author":{"gitId":"HongRay"},"content":"     * prints task","lastModifiedDate":"2024-01-31"},{"lineNumber":212,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":213,"author":{"gitId":"HongRay"},"content":"    public static String handleList(TaskList taskList) {","lastModifiedDate":"2024-02-08"},{"lineNumber":214,"author":{"gitId":"HongRay"},"content":"        if (taskList.getTaskCount() \u003d\u003d 0) {","lastModifiedDate":"2024-02-08"},{"lineNumber":215,"author":{"gitId":"HongRay"},"content":"            return \"There are no task!\";","lastModifiedDate":"2024-02-08"},{"lineNumber":216,"author":{"gitId":"HongRay"},"content":"        } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":217,"author":{"gitId":"HongRay"},"content":"            return taskList.display();","lastModifiedDate":"2024-02-08"},{"lineNumber":218,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":219,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":220,"author":{"gitId":"HongRay"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"HongRay":220}},{"path":"src/main/java/jayne/Jayne.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongRay"},"content":"package jayne;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"import jayne.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":" * Represents the main class for the Jayne application.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":" * This class encapsulates the initialization of core components","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":" * such as Ui, TaskList, and Storage, and contains the main program loop.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"HongRay"},"content":" * Already made better GUI","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"HongRay"},"content":" * Already made better personality","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"HongRay"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"HongRay"},"content":"public class Jayne {","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"HongRay"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"HongRay"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":"     * Constructs a new Jayne object.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"HongRay"},"content":"     * Initializes the UI, storage, and task list components.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"HongRay"},"content":"     * @param filepath the path to the file where tasks are saved and loaded from.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"HongRay"},"content":"    public Jayne(String filepath) throws JayneException {","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"HongRay"},"content":"        assert filepath !\u003d null : \"File cannot be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"        this.storage \u003d new Storage(filepath);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"HongRay"},"content":"        this.taskList \u003d new TaskList(storage);","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"HongRay"},"content":"     * Processes a user\u0027s input command, executes it, and returns a formatted response message.","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"     * It checks for empty input, throwing a {@link JayneException} if found. On successful command","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"HongRay"},"content":"     * execution, it prepends a customized greeting to the response. If the input indicates the end","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"     * of the session, it updates the application state accordingly. Errors during processing are","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"HongRay"},"content":"     * caught and returned as formatted error messages.","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"HongRay"},"content":"     * @param input The user\u0027s command as a string.","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"HongRay"},"content":"     * @return A greeting followed by the command\u0027s execution result, or an error message.","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"HongRay"},"content":"    public String run(String input) {","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"HongRay"},"content":"        assert input !\u003d null : \"Input cannot be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"HongRay"},"content":"        assert taskList !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"HongRay"},"content":"        Parser parser \u003d new Parser(taskList);","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"HongRay"},"content":"        String msg \u003d \"\";","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"HongRay"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"HongRay"},"content":"            if (input.isEmpty()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"HongRay"},"content":"                throw new JayneException(\"Input cannot be empty.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"HongRay"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"HongRay"},"content":"            msg \u003d parser.parse(input);","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"HongRay"},"content":"            return \"Hey, Snowieeee, \" + msg;","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"        } catch (JayneException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"HongRay"},"content":"            return \"Huh?!?!? \" + e.getMessage() + \"\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"HongRay"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"HongRay":51}},{"path":"src/main/java/jayne/JayneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongRay"},"content":"package jayne;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"HongRay"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":" * Custom exception class for handling specific exceptions related to Jayne application.","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":" * This class extends the standard Exception class and provides specific error messages","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":" * for various error scenarios encountered in the application.","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"public class JayneException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"HongRay"},"content":"     * Constructs a new JayneException with the specified detail message.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"HongRay"},"content":"     * @param message the detail message.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"HongRay"},"content":"    public JayneException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"HongRay"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"HongRay"},"content":"     * Constructs a JayneException for empty deadline time.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"HongRay"},"content":"     * @return a new JayneException with a message indicating that deadline time cannot be empty.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"HongRay"},"content":"    public static JayneException deadlineException() {","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"HongRay"},"content":"        return new JayneException(\"Where can have empty deadline time, enter \"","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"                + \"deadline lah. E.g. deadline return book /by yyyy-mm-dd\");","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"HongRay"},"content":"     * Constructs a JayneException for invalid unmark task number.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"     * @return a new JayneException with a message indicating that the task number for unmark is invalid.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"    public static JayneException unmarkException() {","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"HongRay"},"content":"        return new JayneException(\"??? Invalid task number. Enter a valid number please. E.g. unmark 1\");","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"HongRay"},"content":"     * Constructs a JayneException for unmarking a non-existent task.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"HongRay"},"content":"     * @param taskNumber the task number that does not exist.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"HongRay"},"content":"     * @return a new JayneException with a message indicating that the task number does not exist for unmark.","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"HongRay"},"content":"    public static JayneException unmarkTaskExistException(int taskNumber) {","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"HongRay"},"content":"        return new JayneException(\"Task number \" + taskNumber + \" does not exist. E.g. unmark 1\");","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"HongRay"},"content":"     * Constructs a JayneException for an empty task number when unmarking a task.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"HongRay"},"content":"     * @return a new JayneException with a message indicating that the task number for unmarking cannot be empty.","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"    public static JayneException unmarkEmptyException() {","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"HongRay"},"content":"        return new JayneException(\"What are you doing? The number of the \"","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"HongRay"},"content":"                + \"task to unmark cannot be empty lah. E.g. unmark 1\");","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"HongRay"},"content":"     * Constructs a JayneException for an empty task number when deleting a task.","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"HongRay"},"content":"     * @return a new JayneException with a message indicating that the task number for deletion cannot be empty.","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"HongRay"},"content":"    public static JayneException deleteEmptyException() {","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"HongRay"},"content":"        return new JayneException(\"The task number to delete cannot be empty. E.g. delete 2\");","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"HongRay"},"content":"     * Constructs a JayneException for an invalid task number when deleting a task.","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"HongRay"},"content":"     * @return a new JayneException with a message indicating that an invalid task number was provided for deletion.","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"HongRay"},"content":"    public static JayneException deleteInvalidException() {","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"HongRay"},"content":"        return new JayneException(\"??? Invalid task number. Enter a valid number please. E.g. delete 2\");","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":68,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"HongRay"},"content":"     * Constructs a JayneException for a non-existent task number when deleting a task.","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"HongRay"},"content":"     * @param taskNumber the task number that does not exist.","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"HongRay"},"content":"     * @return a new JayneException with a message indicating that the task number does not exist for deletion.","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"HongRay"},"content":"    public static JayneException deleteExistException(int taskNumber) {","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"HongRay"},"content":"        return new JayneException(\"Task number \" + taskNumber + \" does not exist. E.g. delete 2\");","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"HongRay"},"content":"     * Constructs a JayneException for an empty description in a to-do task.","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"HongRay"},"content":"     * @return a new JayneException with a message indicating that the description of a to-do task cannot be empty.","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"HongRay"},"content":"    public static JayneException todoException() {","lastModifiedDate":"2024-01-24"},{"lineNumber":84,"author":{"gitId":"HongRay"},"content":"        return new JayneException(\"Huh?? why your description of a todo \"","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"HongRay"},"content":"                + \"is empty! Please enter description. E.g. todo read book\");","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"HongRay"},"content":"     * Constructs a JayneException for an empty description in an event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"HongRay"},"content":"     * @return a new JayneException with a message indicating that the description of an event task cannot be empty.","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"HongRay"},"content":"    public static JayneException emptyEventException() {","lastModifiedDate":"2024-01-24"},{"lineNumber":94,"author":{"gitId":"HongRay"},"content":"        return new JayneException(\"The description of an event \"","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"HongRay"},"content":"                + \"cannot be empty lah. E.g. event project meeting /from Mon 2pm /to 4pm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":97,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"HongRay"},"content":"     * Constructs a JayneException for an empty start time in an event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"HongRay"},"content":"     * @return a new JayneException with a message indicating that the start time of an event task cannot be empty.","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"HongRay"},"content":"    public static JayneException eventStartException() {","lastModifiedDate":"2024-01-24"},{"lineNumber":103,"author":{"gitId":"HongRay"},"content":"        return new JayneException(\"The event start time cannot be empty. \"","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"HongRay"},"content":"                + \"E.g. event project meeting /from Mon 2pm /to 4pm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":106,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"HongRay"},"content":"     * Constructs a JayneException for an empty end time in an event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"HongRay"},"content":"     * @return a new JayneException with a message indicating that the end time of an event task cannot be empty.","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"HongRay"},"content":"    public static JayneException eventEndException() {","lastModifiedDate":"2024-01-24"},{"lineNumber":112,"author":{"gitId":"HongRay"},"content":"        return new JayneException(\"The event end time cannot be empty please. \"","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"HongRay"},"content":"                + \"E.g. event project meeting /from Mon 2pm /to 4pm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":115,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"HongRay"},"content":"     * Constructs a JayneException for an empty task number when marking a task.","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"HongRay"},"content":"     * @return a new JayneException with a message indicating that the task number for marking cannot be empty.","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"HongRay"},"content":"    public static JayneException markEmptyException() {","lastModifiedDate":"2024-01-24"},{"lineNumber":121,"author":{"gitId":"HongRay"},"content":"        return new JayneException(\"The task number to mark cannot be empty. E.g. mark 1\");","lastModifiedDate":"2024-01-24"},{"lineNumber":122,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":123,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"HongRay"},"content":"     * Constructs a JayneException for a non-existent task number when marking a task.","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"HongRay"},"content":"     * @param taskNumber the task number that does not exist.","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"HongRay"},"content":"     * @return a new JayneException with a message indicating that the task number does not exist for marking.","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"HongRay"},"content":"    public static JayneException markTaskExistException(int taskNumber) {","lastModifiedDate":"2024-01-24"},{"lineNumber":130,"author":{"gitId":"HongRay"},"content":"        return new JayneException(\"Task number \" + taskNumber + \" does not exist. E.g. mark 1\");","lastModifiedDate":"2024-01-24"},{"lineNumber":131,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":132,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"HongRay"},"content":"     * Constructs a JayneException for an invalid task number when marking a task.","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"HongRay"},"content":"     * @return a new JayneException with a message indicating that an invalid task number was provided for marking.","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"HongRay"},"content":"    public static JayneException markInvalidTaskException() {","lastModifiedDate":"2024-01-24"},{"lineNumber":138,"author":{"gitId":"HongRay"},"content":"        return new JayneException(\"??? Invalid task number. Enter a valid number please. E.g. mark 1\");","lastModifiedDate":"2024-01-24"},{"lineNumber":139,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":140,"author":{"gitId":"HongRay"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"HongRay":140}},{"path":"src/main/java/jayne/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongRay"},"content":"package jayne;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"public class Launcher {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"HongRay"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"HongRay"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"HongRay"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"HongRay":12}},{"path":"src/main/java/jayne/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongRay"},"content":"package jayne;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"HongRay"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"HongRay"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"HongRay"},"content":" * A GUI for Jayne using FXML.","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"HongRay"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"HongRay"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":"    private static final String TITLE_NAME \u003d \"Jayne Android\";","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"HongRay"},"content":"    private static final String FXML_FILE \u003d \"/view/MainWindow.fxml\";","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"HongRay"},"content":"    private Jayne jayne \u003d new Jayne(\"./out/jayne.txt\");","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"HongRay"},"content":"    public Main() throws JayneException {","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"HongRay"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"HongRay"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(FXML_FILE));","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"HongRay"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"HongRay"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"            stage.setTitle(TITLE_NAME);","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"HongRay"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setJayne(jayne);","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"HongRay"},"content":"            stage.show();","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"HongRay"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"HongRay"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"HongRay"},"content":"            assert false : \"IOException should not occur if resources are correctly configured\";","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"HongRay"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"HongRay":38}},{"path":"src/main/java/jayne/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongRay"},"content":"package jayne;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"HongRay"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"HongRay"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"HongRay"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"HongRay"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"HongRay"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"HongRay"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"HongRay"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"HongRay"},"content":"    private static final String USER_IMAGE \u003d \"/Images/SnowieeCrop.png\";","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"HongRay"},"content":"    private static final String JAYNE_IMAGE \u003d \"/Images/Jayne.png\";","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"HongRay"},"content":"    private static final String BYE_CONFIRMATION_STRING \u003d \"Hey, Snowieeee, Go to sleep ok, stop bullying Slurpee\";","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"HongRay"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"HongRay"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"HongRay"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"HongRay"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"    private Jayne jayne;","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"HongRay"},"content":"    private Image userImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"            this.getClass().getResourceAsStream(USER_IMAGE)));","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"HongRay"},"content":"    private Image jayneImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"HongRay"},"content":"            this.getClass().getResourceAsStream(JAYNE_IMAGE)));","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"HongRay"},"content":"     * Initializes the UI components for the application. This method binds the scroll pane\u0027s","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"HongRay"},"content":"     * vertical scroll property to the dialog container\u0027s height to ensure automatic scrolling","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"HongRay"},"content":"     * as content increases. It also displays a starting message in the dialog container using","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"HongRay"},"content":"     * a {@link DialogBox} with a predefined image.","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"HongRay"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"HongRay"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"HongRay"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"HongRay"},"content":"        String startMessage \u003d \"Wakey Wakey Snowiee\\n\" + \"its time for schooooll.\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"HongRay"},"content":"                + \"What do you need?\";","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"HongRay"},"content":"        dialogContainer.getChildren().add(DialogBox.getJayneDialog(startMessage, jayneImage));","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"HongRay"},"content":"    public void setJayne(Jayne d) {","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"HongRay"},"content":"        jayne \u003d d;","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"HongRay"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Jayne\u0027s reply and then appends them to","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"HongRay"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"HongRay"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"HongRay"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"HongRay"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"HongRay"},"content":"        String response \u003d jayne.run(input);","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"HongRay"},"content":"        assert response !\u003d null : \"Response cannot be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"HongRay"},"content":"        assert userImage !\u003d null : \"User Image cannot be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"HongRay"},"content":"        assert jayneImage !\u003d null : \"Jayne Image cannot be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"HongRay"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"HongRay"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"HongRay"},"content":"                DialogBox.getJayneDialog(response, jayneImage)","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"HongRay"},"content":"        );","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"HongRay"},"content":"        if (Objects.equals(response, BYE_CONFIRMATION_STRING)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"HongRay"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"HongRay"},"content":"            pause.setOnFinished(event -\u003e {","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"HongRay"},"content":"                Stage stage \u003d (Stage) userInput.getScene().getWindow();","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"HongRay"},"content":"                stage.close();","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"HongRay"},"content":"            });","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"HongRay"},"content":"            pause.play();","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"HongRay"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"HongRay"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"HongRay":77}},{"path":"src/main/java/jayne/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongRay"},"content":"package jayne;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"import jayne.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":" * This class is responsible for parsing user input and executing the corresponding commands.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":" * It serves as an intermediary between the user interface and the task handler.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"HongRay"},"content":"public class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"HongRay"},"content":"    private static final String ERROR_MESSAGE \u003d \"What are you typing. please include either bye, list, mark, \"","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"HongRay"},"content":"            + \"umark, todo, deadline or event in your inputs please\";","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"HongRay"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":"     * Constructs a new Parser.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"HongRay"},"content":"     * @param taskList the TaskList to be manipulated based on user commands.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"HongRay"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"HongRay"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"HongRay"},"content":"     * Parses the user input and executes the corresponding command.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"HongRay"},"content":"     * @param input the raw input string from the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"HongRay"},"content":"     * @return true if the command is a termination command (e.g., \u0027bye\u0027), otherwise false.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"     * @throws JayneException if the command is invalid or if any issues occur during command execution.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"    public String parse(String input) throws JayneException {","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"HongRay"},"content":"        assert input !\u003d null : \"Input cannot be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"HongRay"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"HongRay"},"content":"        String commandText \u003d parts[0].toLowerCase();","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"HongRay"},"content":"        switch (commandText) {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"HongRay"},"content":"        case \"sort\":","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"HongRay"},"content":"            return Handler.handleSort(parts, taskList);","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"HongRay"},"content":"        case \"find\":","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"HongRay"},"content":"            return Handler.handleFind(parts, taskList);","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"HongRay"},"content":"        case \"bye\":","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"HongRay"},"content":"            return Handler.handleBye();","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"HongRay"},"content":"        case \"list\":","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"HongRay"},"content":"            return Handler.handleList(taskList);","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"HongRay"},"content":"        case \"mark\":","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"HongRay"},"content":"            return Handler.handleMark(parts, taskList);","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"HongRay"},"content":"        case \"unmark\":","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"HongRay"},"content":"            return Handler.handleUnmark(parts, taskList);","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"HongRay"},"content":"            return Handler.handleTodo(parts, taskList);","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"HongRay"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":"            return Handler.handleDeadline(parts, taskList);","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"HongRay"},"content":"        case \"event\":","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"HongRay"},"content":"            return Handler.handleEvent(parts, taskList);","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"HongRay"},"content":"        case \"delete\":","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"HongRay"},"content":"            return Handler.handleDelete(parts, taskList);","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"HongRay"},"content":"        default:","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"HongRay"},"content":"            return ERROR_MESSAGE;","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"HongRay"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"HongRay":59}},{"path":"src/main/java/jayne/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongRay"},"content":"package jayne;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"HongRay"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"HongRay"},"content":"import jayne.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"HongRay"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"HongRay"},"content":" * Handles file operations for Jayne application, including saving and loading tasks to and from a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"HongRay"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":"    private String filepath;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"HongRay"},"content":"     * Renames the file specified by the filepath if it exists.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"HongRay"},"content":"     * If the file exists, it is renamed with a unique name to avoid overwriting.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"HongRay"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"HongRay"},"content":"        assert filepath !\u003d null : \"File path cannot be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"HongRay"},"content":"     * Renames the file specified by the filepath if it exists.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"HongRay"},"content":"     * If the file exists, it is renamed with a unique name to avoid overwriting.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"HongRay"},"content":"    public void renameFileIfExists() {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"        Path path \u003d Paths.get(filepath);","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"HongRay"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"HongRay"},"content":"            if (Files.exists(path)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"HongRay"},"content":"                String newFileName \u003d getNewFileName(path);","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"HongRay"},"content":"                Files.move(path, path.resolveSibling(newFileName));","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"HongRay"},"content":"                System.out.println(filepath + \" has been renamed to \" + newFileName);","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"HongRay"},"content":"            } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"HongRay"},"content":"                System.out.println(filepath + \" does not exist, no need to rename.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"HongRay"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"HongRay"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"HongRay"},"content":"            System.out.println(\"An error occurred while renaming the file: \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"HongRay"},"content":"     * Generates a new file name based on the original file path.","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"HongRay"},"content":"     * It appends a counter to the file name to avoid conflicts with existing files.","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"     * @param originalPath the original file path.","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"HongRay"},"content":"     * @return a new file name that does not conflict with existing files.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":"    public String getNewFileName(Path originalPath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"HongRay"},"content":"        assert originalPath !\u003d null : \"input path cannot be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"HongRay"},"content":"        int counter \u003d 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"HongRay"},"content":"        String originalFileName \u003d originalPath.getFileName().toString();","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"HongRay"},"content":"        String fileWithoutExtension \u003d originalFileName.replaceFirst(\"[.][^.]+$\", \"\");","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"HongRay"},"content":"        String extension \u003d originalFileName.substring(originalFileName.lastIndexOf(\".\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"HongRay"},"content":"        Path parentDir \u003d originalPath.getParent();","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"HongRay"},"content":"        while (true) {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"HongRay"},"content":"            String newName \u003d fileWithoutExtension + \"(\" + counter + \")\" + extension;","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"HongRay"},"content":"            Path newPath \u003d parentDir.resolve(newName);","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"HongRay"},"content":"            if (!Files.exists(newPath)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"HongRay"},"content":"                return newName;","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"HongRay"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"HongRay"},"content":"            counter++;","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"HongRay"},"content":"     * Saves the list of tasks to the file specified by the filepath.","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"HongRay"},"content":"     * Each task is converted into a format suitable for file storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"HongRay"},"content":"     * @param taskArray the list of tasks to be saved.","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"HongRay"},"content":"    public void saveTasks(List\u003cTask\u003e taskArray) throws JayneException {","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"HongRay"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"HongRay"},"content":"            Path path \u003d Paths.get(filepath);","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"HongRay"},"content":"            Files.createDirectories(path.getParent());","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"HongRay"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(filepath));","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"HongRay"},"content":"            for (Task task : taskArray) {","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"HongRay"},"content":"                bw.write(task.toFileFormat() + \"\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"HongRay"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"HongRay"},"content":"            bw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"HongRay"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"HongRay"},"content":"            throw new JayneException(\"An error occurred while saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"HongRay"},"content":"     * Loads tasks from the file specified by the filepath into the provided list.","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"HongRay"},"content":"     * Each line in the file is converted back into a task object.","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"HongRay"},"content":"     * @param taskArray the list to load the tasks into.","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"HongRay"},"content":"    public void loadTasks(List\u003cTask\u003e taskArray) throws JayneException {","lastModifiedDate":"2024-02-08"},{"lineNumber":94,"author":{"gitId":"HongRay"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"HongRay"},"content":"            Path path \u003d Paths.get(filepath);","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"HongRay"},"content":"            if (!Files.exists(path)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"HongRay"},"content":"                return; // File doesn\u0027t exist, nothing to load","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"HongRay"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"HongRay"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"HongRay"},"content":"            for (String line : lines) {","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"HongRay"},"content":"                try {","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"HongRay"},"content":"                    Task task \u003d Task.fromFileFormat(line);","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"HongRay"},"content":"                    if (task !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"HongRay"},"content":"                        taskArray.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"HongRay"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"HongRay"},"content":"                } catch (JayneException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"HongRay"},"content":"                    throw new JayneException(\"Error parsing line from file: \" + line);","lastModifiedDate":"2024-02-08"},{"lineNumber":109,"author":{"gitId":"HongRay"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"HongRay"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"HongRay"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"HongRay"},"content":"            throw new JayneException(\"An error occurred while loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":113,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"HongRay"},"content":"     * Deletes the file specified by the filepath if it exists.","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"HongRay"},"content":"    public void deleteFile() {","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"HongRay"},"content":"        Path path \u003d Paths.get(filepath);","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"HongRay"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"HongRay"},"content":"            if (Files.deleteIfExists(path)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"HongRay"},"content":"                System.out.println(filepath + \" has been deleted.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"HongRay"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"HongRay"},"content":"                System.out.println(filepath + \" does not exist, no need to delete.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"HongRay"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"HongRay"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"HongRay"},"content":"            System.out.println(\"An error occurred while deleting the file: \" + e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"HongRay"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"HongRay":130}},{"path":"src/main/java/jayne/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongRay"},"content":"package jayne.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"import jayne.JayneException;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"HongRay"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"HongRay"},"content":" * It contains all the functionality of a task with the addition","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"HongRay"},"content":" * of a deadline date.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"HongRay"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"HongRay"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"HongRay"},"content":"    private static final String DATE_FORMAT_STRING \u003d \"MMM dd yyyy\";","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":"    private static final String NO_DATE_STRING \u003d \"no date\";","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"HongRay"},"content":"     * Constructs a Deadline task with a description and deadline date.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"HongRay"},"content":"     * @param description the description of the deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"HongRay"},"content":"     * @param by the deadline date as a String.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"    public Deadline(String description, String by) throws JayneException {","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"HongRay"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":"        this.by \u003d parseDate(by);","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"HongRay"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"        return by;","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"HongRay"},"content":"     * Parses the date string to LocalDate.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"HongRay"},"content":"     * If the date string is not in a valid format, prints an error message and returns null.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"HongRay"},"content":"     * @param dateString the date string to be parsed.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"HongRay"},"content":"     * @return the parsed LocalDate or null if parsing fails.","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"HongRay"},"content":"    private LocalDate parseDate(String dateString) throws JayneException {","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"HongRay"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"HongRay"},"content":"            return LocalDate.parse(dateString);","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"HongRay"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"HongRay"},"content":"            throw new JayneException(\"Unable to parse the date: \" + dateString);","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"HongRay"},"content":"     * Formats the given LocalDate to a more readable form.","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"HongRay"},"content":"     * If the given LocalDate is null, returns \u0027no date\u0027.","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"HongRay"},"content":"     * @param date the date to be formatted.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"HongRay"},"content":"     * @return the formatted date string or \u0027no date\u0027 if the date is null.","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"HongRay"},"content":"    private String formatDate(LocalDate date) {","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"HongRay"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"HongRay"},"content":"            return NO_DATE_STRING;","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"HongRay"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_FORMAT_STRING);","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"HongRay"},"content":"        return date.format(formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":58,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"HongRay"},"content":"     * Returns the string representation of the deadline task, including its type, status, description, and deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"HongRay"},"content":"     * @return a string representation of the deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"HongRay"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":64,"author":{"gitId":"HongRay"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":65,"author":{"gitId":"HongRay"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatDate(by) + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":67,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"HongRay"},"content":"     * Returns the string representation of the deadline task in a format suitable for file storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"HongRay"},"content":"     * The format includes the task type, status, description, and deadline date.","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"HongRay"},"content":"     * @return a string representation of the deadline task for file storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"HongRay"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"HongRay"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"HongRay"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE;","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"HongRay"},"content":"        return \"D | \" + super.toFileFormat() + \" | \" + (by !\u003d null ? by.format(formatter) : \"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"HongRay"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"HongRay":80}},{"path":"src/main/java/jayne/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongRay"},"content":"package jayne.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"import jayne.JayneException;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"HongRay"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"HongRay"},"content":" * Represents an event task. In addition to the basic task properties,","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"HongRay"},"content":" * an event contains a start and end time.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"HongRay"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"HongRay"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"HongRay"},"content":"    protected LocalDate start;","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":"    protected LocalDate end;","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"HongRay"},"content":"     * Constructs an Event task with a description, start time, and end time.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"HongRay"},"content":"     * @param description the description of the event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"HongRay"},"content":"     * @param start the start time of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"HongRay"},"content":"     * @param end the end time of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"    public Event(String description, String start, String end) throws JayneException {","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"HongRay"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":"        assert start !\u003d null \u0026\u0026 !start.trim().isEmpty() : \"Start time should not be null or empty\";","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"HongRay"},"content":"        assert end !\u003d null \u0026\u0026 !end.trim().isEmpty() : \"End time should not be null or empty\";","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"HongRay"},"content":"        this.start \u003d parseDate(start);","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"        this.end \u003d parseDate(end);","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"HongRay"},"content":"     * Parses the date string to LocalDate.","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"HongRay"},"content":"     * If the date string is not in a valid format, it throws a JayneException.","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"HongRay"},"content":"     * @param dateString the date string to be parsed.","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"HongRay"},"content":"     * @return the parsed LocalDate.","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"HongRay"},"content":"     * @throws JayneException if the date string is not in a valid format.","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"HongRay"},"content":"    private LocalDate parseDate(String dateString) throws JayneException {","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"HongRay"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"HongRay"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE;","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"HongRay"},"content":"            return LocalDate.parse(dateString, formatter);","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"HongRay"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"HongRay"},"content":"            throw new JayneException(\"Unable to parse the date: \" + dateString);","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"HongRay"},"content":"    public LocalDate getStart() {","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"        return start;","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":"    public LocalDate getEnd() {","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"HongRay"},"content":"        return end;","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":53,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"HongRay"},"content":"     * Returns the string representation of the event task,","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"HongRay"},"content":"     * including its type, status, description, start time, and end time.","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"HongRay"},"content":"     * @return a string representation of the event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"HongRay"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":60,"author":{"gitId":"HongRay"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":61,"author":{"gitId":"HongRay"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"HongRay"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start.format(formatter) + \" to: \" + end.format(formatter) + \")\";","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":64,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"HongRay"},"content":"     * Returns the string representation of the event task in a format suitable for file storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"HongRay"},"content":"     * The format includes the task type, status, description, start time, and end time.","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"HongRay"},"content":"     * @return a string representation of the event task for file storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"HongRay"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"HongRay"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"HongRay"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE;","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"HongRay"},"content":"        return \"E | \" + super.toFileFormat() + \" | \" + start.format(formatter) + \"-\" + end.format(formatter);","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"HongRay"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"HongRay":76}},{"path":"src/main/java/jayne/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongRay"},"content":"package jayne.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"HongRay"},"content":"import jayne.JayneException;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":" * Represents a task. Each task has a description and a status indicating whether it is done.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"    protected String description;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"HongRay"},"content":"     * Constructs a new Task with the given description. The task is initially not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"HongRay"},"content":"     * @param description the description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"HongRay"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":"        assert description !\u003d null : \"Description should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"HongRay"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"HongRay"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"HongRay"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"HongRay"},"content":"        return description;","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"HongRay"},"content":"     * Checks if the task is completed.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"HongRay"},"content":"     * @return true if the task is done, false otherwise.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"HongRay"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"HongRay"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"HongRay"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"HongRay"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"HongRay"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"HongRay"},"content":"     * Returns the status icon for the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"HongRay"},"content":"     * \u0027[X]\u0027 if the task is done, \u0027[ ]\u0027 if it\u0027s not.","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"HongRay"},"content":"     * @return the status icon as a String.","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"HongRay"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"HongRay"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"HongRay"},"content":"     * Converts the task to a format suitable for file storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"HongRay"},"content":"     * The format includes the status and description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"HongRay"},"content":"     * @return a String representing the task in a format suitable for file storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"HongRay"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"HongRay"},"content":"        return (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"HongRay"},"content":"     * Constructs a Task object from a string in the file storage format.","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"HongRay"},"content":"     * @param line the line from the file in the storage format.","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"HongRay"},"content":"     * @return a Task object corresponding to the line.","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"HongRay"},"content":"     * @throws JayneException if the line format is invalid.","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"HongRay"},"content":"    public static Task fromFileFormat(String line) throws JayneException {","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"HongRay"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"HongRay"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"HongRay"},"content":"            throw new JayneException(\"Invalid line format\");","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"HongRay"},"content":"        Task task \u003d new Task(parts[2]);","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"HongRay"},"content":"        if (\"1\".equals(parts[1])) {","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"HongRay"},"content":"            task.markAsDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"HongRay"},"content":"        return task;","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"HongRay"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":80,"author":{"gitId":"HongRay"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":81,"author":{"gitId":"HongRay"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2024-01-22"},{"lineNumber":82,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":83,"author":{"gitId":"HongRay"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"HongRay":83}},{"path":"src/main/java/jayne/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongRay"},"content":"package jayne.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"import java.util.List;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"HongRay"},"content":"import jayne.JayneException;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"HongRay"},"content":"import jayne.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"HongRay"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"HongRay"},"content":" * Represents a list of tasks. This class handles operations such as","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"HongRay"},"content":" * adding, deleting, and marking tasks as done or not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":"public class TaskList {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"HongRay"},"content":"    private static final String NO_TASKS_FOUND_WITH_THE_KEYWORD \u003d \"No tasks found with the keyword: \";","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"HongRay"},"content":"    private final List\u003cTask\u003e taskArray;","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"HongRay"},"content":"    private int taskCount;","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"HongRay"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"HongRay"},"content":"     * Constructs a new TaskList and initializes it with tasks loaded from storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"HongRay"},"content":"     * @param storage the Storage object used for loading and saving tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"    public TaskList(Storage storage) throws JayneException {","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"HongRay"},"content":"        this.taskArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"HongRay"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"HongRay"},"content":"        storage.renameFileIfExists();","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"HongRay"},"content":"        storage.loadTasks(taskArray);","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"HongRay"},"content":"     * Deletes the task at the specified position in the task list.","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"HongRay"},"content":"     * @param sortCommand the type of sort user wants","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"HongRay"},"content":"     * @return the entire sorted list by the type user wants.","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"HongRay"},"content":"    public String sort(String sortCommand) {","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"HongRay"},"content":"        String indent \u003d \"\\n\";","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"HongRay"},"content":"        switch (sortCommand) {","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"HongRay"},"content":"        case \"type\":","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"HongRay"},"content":"            return indent + sortByType();","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"HongRay"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"            return indent + sortByMark();","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"HongRay"},"content":"        case \"date\":","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"HongRay"},"content":"            return indent + sortByDueDate();","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":"        default:","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"HongRay"},"content":"            return \"Invalid sort command, available commands date, mark, type\";","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"HongRay"},"content":"    private String sortByType() {","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"HongRay"},"content":"        Collections.sort(taskArray, new Comparator\u003cTask\u003e() {","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"HongRay"},"content":"            @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"HongRay"},"content":"            public int compare(Task t1, Task t2) {","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"HongRay"},"content":"                return getTypePriority(t1) - getTypePriority(t2);","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"HongRay"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"HongRay"},"content":"            private int getTypePriority(Task task) {","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"HongRay"},"content":"                if (task instanceof Todo) {","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"HongRay"},"content":"                    return 1;","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"HongRay"},"content":"                }","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"HongRay"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"HongRay"},"content":"                    return 2;","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"HongRay"},"content":"                }","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"HongRay"},"content":"                if (task instanceof Event) {","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"HongRay"},"content":"                    return 3;","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"HongRay"},"content":"                }","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"HongRay"},"content":"                return Integer.MAX_VALUE;","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"HongRay"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"HongRay"},"content":"        });","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"HongRay"},"content":"        return formatTaskList();","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"HongRay"},"content":"    private String sortByMark() {","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"HongRay"},"content":"        Collections.sort(taskArray, Comparator.comparing(Task::isCompleted));","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"HongRay"},"content":"        return formatTaskList();","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"HongRay"},"content":"    private String sortByDueDate() {","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"HongRay"},"content":"        Collections.sort(taskArray, new Comparator\u003cTask\u003e() {","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"HongRay"},"content":"            @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":86,"author":{"gitId":"HongRay"},"content":"            public int compare(Task t1, Task t2) {","lastModifiedDate":"2024-02-13"},{"lineNumber":87,"author":{"gitId":"HongRay"},"content":"                LocalDate date1 \u003d getDate(t1);","lastModifiedDate":"2024-02-13"},{"lineNumber":88,"author":{"gitId":"HongRay"},"content":"                LocalDate date2 \u003d getDate(t2);","lastModifiedDate":"2024-02-13"},{"lineNumber":89,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":90,"author":{"gitId":"HongRay"},"content":"                // Handle Todo tasks and them at the end","lastModifiedDate":"2024-02-13"},{"lineNumber":91,"author":{"gitId":"HongRay"},"content":"                if (date1 \u003d\u003d null \u0026\u0026 date2 \u003d\u003d null) {","lastModifiedDate":"2024-02-13"},{"lineNumber":92,"author":{"gitId":"HongRay"},"content":"                    return 0; // Both are Todo tasks","lastModifiedDate":"2024-02-13"},{"lineNumber":93,"author":{"gitId":"HongRay"},"content":"                }","lastModifiedDate":"2024-02-13"},{"lineNumber":94,"author":{"gitId":"HongRay"},"content":"                if (date1 \u003d\u003d null) {","lastModifiedDate":"2024-02-13"},{"lineNumber":95,"author":{"gitId":"HongRay"},"content":"                    return 1; // Only t1 is Todo","lastModifiedDate":"2024-02-13"},{"lineNumber":96,"author":{"gitId":"HongRay"},"content":"                }","lastModifiedDate":"2024-02-13"},{"lineNumber":97,"author":{"gitId":"HongRay"},"content":"                if (date2 \u003d\u003d null) {","lastModifiedDate":"2024-02-13"},{"lineNumber":98,"author":{"gitId":"HongRay"},"content":"                    return -1; // Only t2 is Todo","lastModifiedDate":"2024-02-13"},{"lineNumber":99,"author":{"gitId":"HongRay"},"content":"                }","lastModifiedDate":"2024-02-13"},{"lineNumber":100,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":101,"author":{"gitId":"HongRay"},"content":"                // Compare dates for Deadline and Event tasks","lastModifiedDate":"2024-02-13"},{"lineNumber":102,"author":{"gitId":"HongRay"},"content":"                return date1.compareTo(date2);","lastModifiedDate":"2024-02-13"},{"lineNumber":103,"author":{"gitId":"HongRay"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":104,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":105,"author":{"gitId":"HongRay"},"content":"            /**","lastModifiedDate":"2024-02-13"},{"lineNumber":106,"author":{"gitId":"HongRay"},"content":"             * Extracts the date from Task, Deadline, or Event.","lastModifiedDate":"2024-02-13"},{"lineNumber":107,"author":{"gitId":"HongRay"},"content":"             * Returns null for Todo tasks since they don\u0027t have a date.","lastModifiedDate":"2024-02-13"},{"lineNumber":108,"author":{"gitId":"HongRay"},"content":"             */","lastModifiedDate":"2024-02-13"},{"lineNumber":109,"author":{"gitId":"HongRay"},"content":"            private LocalDate getDate(Task task) {","lastModifiedDate":"2024-02-13"},{"lineNumber":110,"author":{"gitId":"HongRay"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2024-02-13"},{"lineNumber":111,"author":{"gitId":"HongRay"},"content":"                    return ((Deadline) task).getBy();","lastModifiedDate":"2024-02-13"},{"lineNumber":112,"author":{"gitId":"HongRay"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2024-02-13"},{"lineNumber":113,"author":{"gitId":"HongRay"},"content":"                    return ((Event) task).getEnd();","lastModifiedDate":"2024-02-13"},{"lineNumber":114,"author":{"gitId":"HongRay"},"content":"                }","lastModifiedDate":"2024-02-13"},{"lineNumber":115,"author":{"gitId":"HongRay"},"content":"                // Todo tasks or any other tasks without a specific date return null","lastModifiedDate":"2024-02-13"},{"lineNumber":116,"author":{"gitId":"HongRay"},"content":"                return null;","lastModifiedDate":"2024-02-13"},{"lineNumber":117,"author":{"gitId":"HongRay"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":118,"author":{"gitId":"HongRay"},"content":"        });","lastModifiedDate":"2024-02-13"},{"lineNumber":119,"author":{"gitId":"HongRay"},"content":"        return formatTaskList();","lastModifiedDate":"2024-02-13"},{"lineNumber":120,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":121,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":122,"author":{"gitId":"HongRay"},"content":"    private String formatTaskList() {","lastModifiedDate":"2024-02-13"},{"lineNumber":123,"author":{"gitId":"HongRay"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-13"},{"lineNumber":124,"author":{"gitId":"HongRay"},"content":"        for (int i \u003d 0; i \u003c taskArray.size(); i++) {","lastModifiedDate":"2024-02-13"},{"lineNumber":125,"author":{"gitId":"HongRay"},"content":"            sb.append(i + 1).append(\". \").append(taskArray.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-13"},{"lineNumber":126,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":127,"author":{"gitId":"HongRay"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":128,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":129,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"HongRay"},"content":"    public int getTaskCount() {","lastModifiedDate":"2024-01-22"},{"lineNumber":131,"author":{"gitId":"HongRay"},"content":"        return taskCount;","lastModifiedDate":"2024-01-22"},{"lineNumber":132,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":133,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"HongRay"},"content":"    public Storage getStorage() {","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"HongRay"},"content":"        return storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"HongRay"},"content":"     * Finds and displays tasks whose description contains the given keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"HongRay"},"content":"     * @param keyword the keyword to search for in task descriptions.","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"HongRay"},"content":"    public String findTask(String keyword) {","lastModifiedDate":"2024-02-08"},{"lineNumber":144,"author":{"gitId":"HongRay"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"HongRay"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2024-02-13"},{"lineNumber":146,"author":{"gitId":"HongRay"},"content":"        for (int i \u003d 0; i \u003c taskArray.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"HongRay"},"content":"            Task task \u003d taskArray.get(i);","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"HongRay"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"HongRay"},"content":"                output.append(++count).append(\".\").append(task).append(\"\\n\");","lastModifiedDate":"2024-02-13"},{"lineNumber":150,"author":{"gitId":"HongRay"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"HongRay"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2024-02-02"},{"lineNumber":153,"author":{"gitId":"HongRay"},"content":"            output \u003d new StringBuilder(NO_TASKS_FOUND_WITH_THE_KEYWORD + keyword);","lastModifiedDate":"2024-02-13"},{"lineNumber":154,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":155,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":156,"author":{"gitId":"HongRay"},"content":"        return \"Here are the matching tasks in your list:\\n\" + output;","lastModifiedDate":"2024-02-08"},{"lineNumber":157,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":158,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":159,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":160,"author":{"gitId":"HongRay"},"content":"     * Deletes the task at the specified position in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":161,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":162,"author":{"gitId":"HongRay"},"content":"     * @param taskNumber the position of the task in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":163,"author":{"gitId":"HongRay"},"content":"     * @return the deleted task.","lastModifiedDate":"2024-02-02"},{"lineNumber":164,"author":{"gitId":"HongRay"},"content":"     * @throws JayneException if the task number is invalid.","lastModifiedDate":"2024-02-02"},{"lineNumber":165,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":166,"author":{"gitId":"HongRay"},"content":"    public Task deleteTask(int taskNumber) throws JayneException {","lastModifiedDate":"2024-01-24"},{"lineNumber":167,"author":{"gitId":"HongRay"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e taskArray.size()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":168,"author":{"gitId":"HongRay"},"content":"            throw new JayneException(\"Task number \" + taskNumber + \" does not exist.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":169,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":170,"author":{"gitId":"HongRay"},"content":"        this.taskCount \u003d taskCount - 1;","lastModifiedDate":"2024-01-24"},{"lineNumber":171,"author":{"gitId":"HongRay"},"content":"        storage.saveTasks(taskArray);","lastModifiedDate":"2024-01-31"},{"lineNumber":172,"author":{"gitId":"HongRay"},"content":"        return taskArray.remove(taskNumber - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":173,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":174,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":175,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":176,"author":{"gitId":"HongRay"},"content":"     * Adds a task to the task list and saves the updated list to storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":177,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":178,"author":{"gitId":"HongRay"},"content":"     * @param task the task to be added.","lastModifiedDate":"2024-02-02"},{"lineNumber":179,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":180,"author":{"gitId":"HongRay"},"content":"    public void addTask(Task task) throws JayneException {","lastModifiedDate":"2024-02-08"},{"lineNumber":181,"author":{"gitId":"HongRay"},"content":"        taskArray.add(task);","lastModifiedDate":"2024-01-22"},{"lineNumber":182,"author":{"gitId":"HongRay"},"content":"        this.taskCount \u003d taskCount + 1;","lastModifiedDate":"2024-01-22"},{"lineNumber":183,"author":{"gitId":"HongRay"},"content":"        storage.saveTasks(taskArray);","lastModifiedDate":"2024-01-31"},{"lineNumber":184,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":185,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":186,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":187,"author":{"gitId":"HongRay"},"content":"     * Retrieves the task at the specified position in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":188,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":189,"author":{"gitId":"HongRay"},"content":"     * @param index the position of the task in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":190,"author":{"gitId":"HongRay"},"content":"     * @return the task at the specified position, or null if the index is invalid.","lastModifiedDate":"2024-02-02"},{"lineNumber":191,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":192,"author":{"gitId":"HongRay"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-01-22"},{"lineNumber":193,"author":{"gitId":"HongRay"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c\u003d taskArray.size()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":194,"author":{"gitId":"HongRay"},"content":"            return taskArray.get(index - 1);","lastModifiedDate":"2024-01-22"},{"lineNumber":195,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":196,"author":{"gitId":"HongRay"},"content":"        return null;","lastModifiedDate":"2024-01-22"},{"lineNumber":197,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":198,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":199,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":200,"author":{"gitId":"HongRay"},"content":"     * Marks the task at the specified position in the task list as done and saves the updated list to storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":201,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":202,"author":{"gitId":"HongRay"},"content":"     * @param taskNumber the position of the task in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":203,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":204,"author":{"gitId":"HongRay"},"content":"    public void markTaskAsDone(int taskNumber) throws JayneException {","lastModifiedDate":"2024-02-08"},{"lineNumber":205,"author":{"gitId":"HongRay"},"content":"        if (taskNumber \u003e\u003d 1 \u0026\u0026 taskNumber \u003c\u003d taskArray.size()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":206,"author":{"gitId":"HongRay"},"content":"            taskArray.get(taskNumber - 1).markAsDone();","lastModifiedDate":"2024-01-22"},{"lineNumber":207,"author":{"gitId":"HongRay"},"content":"            storage.saveTasks(taskArray);","lastModifiedDate":"2024-01-31"},{"lineNumber":208,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":209,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":210,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":211,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":212,"author":{"gitId":"HongRay"},"content":"     * Marks the task at the specified position in the task list as not done and saves the updated list to storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":213,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":214,"author":{"gitId":"HongRay"},"content":"     * @param taskNumber the position of the task in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":215,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":216,"author":{"gitId":"HongRay"},"content":"    public void markTaskAsNotDone(int taskNumber) throws JayneException {","lastModifiedDate":"2024-02-08"},{"lineNumber":217,"author":{"gitId":"HongRay"},"content":"        if (taskNumber \u003e\u003d 1 \u0026\u0026 taskNumber \u003c\u003d taskArray.size()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":218,"author":{"gitId":"HongRay"},"content":"            taskArray.get(taskNumber - 1).markAsNotDone();","lastModifiedDate":"2024-01-22"},{"lineNumber":219,"author":{"gitId":"HongRay"},"content":"            storage.saveTasks(taskArray);","lastModifiedDate":"2024-01-31"},{"lineNumber":220,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":221,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":222,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":223,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":224,"author":{"gitId":"HongRay"},"content":"     * Displays all tasks in the task list to the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":225,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":226,"author":{"gitId":"HongRay"},"content":"    public String display() {","lastModifiedDate":"2024-02-08"},{"lineNumber":227,"author":{"gitId":"HongRay"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2024-02-08"},{"lineNumber":228,"author":{"gitId":"HongRay"},"content":"        for (int i \u003d 0; i \u003c taskArray.size(); i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":229,"author":{"gitId":"HongRay"},"content":"            output.append(i + 1).append(\". \").append(taskArray.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2024-02-08"},{"lineNumber":230,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":231,"author":{"gitId":"HongRay"},"content":"        return \"Here are the tasks in your list:\\n\" + output;","lastModifiedDate":"2024-02-08"},{"lineNumber":232,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":233,"author":{"gitId":"HongRay"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"HongRay":233}},{"path":"src/main/java/jayne/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongRay"},"content":"package jayne.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":" * Class with todo specifications","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"HongRay"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"HongRay"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"HongRay"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"HongRay"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":"        return \"T | \" + super.toFileFormat();","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"HongRay"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"HongRay":18}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"HongRay"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":"\u003c?import javafx.scene.effect.InnerShadow?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"HongRay"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" spacing\u003d\"2.0\" style\u003d\"-fx-background-color: #EFFFDF;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"HongRay"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"HongRay"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"HongRay"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"HongRay"},"content":"            \u003cInnerShadow /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":"         \u003c/effect\u003e\u003c/ImageView\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":"        \u003cLabel fx:id\u003d\"dialog\" lineSpacing\u003d\"1.0\" style\u003d\"-fx-background-color: #F3F3F3;\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"HongRay"},"content":"         \u003copaqueInsets\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"HongRay"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"HongRay"},"content":"         \u003c/opaqueInsets\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"HongRay"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"HongRay"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"HongRay"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"HongRay"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"HongRay"},"content":"      \u003cCircle fx:id\u003d\"circle\" fill\u003d\"DODGERBLUE\" radius\u003d\"49.0\" stroke\u003d\"#fff9f9\" strokeType\u003d\"INSIDE\" strokeWidth\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"HongRay"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"HongRay"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"HongRay"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"HongRay":31}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"HongRay"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"HongRay"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" styleClass\u003d\"dialog-container\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"jayne.MainWindow\"\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"HongRay"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"HongRay"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-background-color: #e2ebef; -fx-border-color: #D6E0E0;\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"HongRay"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #426D6D; -fx-border-color: #D6E0E0;\" text\u003d\"Send\" textFill\u003d\"WHITE\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"HongRay"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"HongRay"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #cde7f0;\" stylesheets\u003d\"@../styles/styles.css\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"HongRay"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"HongRay"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"HongRay"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"HongRay":19}},{"path":"src/test/java/jayne/HandlerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongRay"},"content":"package jayne;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"HongRay"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"HongRay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"HongRay"},"content":"import jayne.task.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"HongRay"},"content":"import jayne.task.Todo;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":"//Test","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":"class HandlerTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"HongRay"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"HongRay"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"HongRay"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"HongRay"},"content":"    void setUp() throws JayneException {","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"HongRay"},"content":"        this.storage \u003d new Storage(\"./out/test.txt\");","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"        taskList \u003d new TaskList(storage);","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"HongRay"},"content":"    @AfterEach","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"HongRay"},"content":"    void tearDown() {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"        taskList.getStorage().deleteFile();","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"HongRay"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"HongRay"},"content":"    void handleDelete_withValidInput() throws JayneException {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"HongRay"},"content":"        // Setup initial conditions","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"HongRay"},"content":"        Todo todo \u003d new Todo(\"Sample Task\");","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"HongRay"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"HongRay"},"content":"        String[] parts \u003d {\"delete\", \"1\"};","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"HongRay"},"content":"        // Perform action","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"HongRay"},"content":"        Handler.handleDelete(parts, taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"HongRay"},"content":"        // Check results","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"HongRay"},"content":"        assertEquals(0, taskList.getTaskCount(), \"Task count should decrease after deletion\");","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"HongRay"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"HongRay"},"content":"    void handleDelete_withInvalidInput() {","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"        // Setup initial conditions","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"HongRay"},"content":"        String[] parts \u003d {\"delete\", \"xyz\"}; // Invalid task number","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":"        // Perform action and check results","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"HongRay"},"content":"        assertThrows(JayneException.class, () -\u003e {","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"HongRay"},"content":"            Handler.handleDelete(parts, taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"HongRay"},"content":"        }, \"Should throw an exception for invalid task number\");","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"HongRay"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"HongRay"},"content":"    void handleUnmark_withValidInput() throws JayneException {","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"HongRay"},"content":"        // Setup initial conditions","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"HongRay"},"content":"        Todo todo \u003d new Todo(\"Sample Task\");","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"HongRay"},"content":"        todo.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"HongRay"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"HongRay"},"content":"        String[] parts \u003d {\"unmark\", \"1\"};","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"HongRay"},"content":"        // Perform action","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"HongRay"},"content":"        Handler.handleUnmark(parts, taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"HongRay"},"content":"        // Check results","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"HongRay"},"content":"        assertFalse(taskList.getTask(1).isCompleted(), \"Task should be marked as not done\");","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"HongRay"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"HongRay"},"content":"    void handleMark_withValidInput() throws JayneException {","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"HongRay"},"content":"        // Setup initial conditions","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"HongRay"},"content":"        Todo todo \u003d new Todo(\"Sample Task\");","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"HongRay"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"HongRay"},"content":"        String[] parts \u003d {\"mark\", \"1\"};","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"HongRay"},"content":"        // Perform action","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"HongRay"},"content":"        Handler.handleMark(parts, taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"HongRay"},"content":"        // Check results","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"HongRay"},"content":"        assertTrue(taskList.getTask(1).isCompleted(), \"Task should be marked as done\");","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"HongRay"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"HongRay":85}},{"path":"src/test/java/jayne/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongRay"},"content":"package jayne.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"import jayne.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":"import jayne.JayneException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"HongRay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"HongRay"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"HongRay"},"content":"class TaskListTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"HongRay"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"HongRay"},"content":"    private static final String FILE_PATH \u003d \"./out/test.txt\";","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"HongRay"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"HongRay"},"content":"    void setUp() throws JayneException {","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"HongRay"},"content":"        this.storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"HongRay"},"content":"        taskList \u003d new TaskList(storage);","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"HongRay"},"content":"    @AfterEach","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":"    void tearDown() {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"HongRay"},"content":"        // Delete the file after each test","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"HongRay"},"content":"        taskList.getStorage().deleteFile();","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"HongRay"},"content":"    void addTask_addsTaskCorrectly() throws JayneException {","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"HongRay"},"content":"        // Given","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"HongRay"},"content":"        Task newTask \u003d new Todo(\"Test Todo\");","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"HongRay"},"content":"        // When","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"HongRay"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"HongRay"},"content":"        // Then","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"HongRay"},"content":"        assertEquals(1, taskList.getTaskCount(), \"Task count should increase after adding a task\");","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"HongRay"},"content":"        assertSame(newTask, taskList.getTask(1), \"The added task should be retrievable from the task list\");","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"HongRay"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"HongRay"},"content":"    void deleteTask_deletesTaskCorrectly() throws JayneException {","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"HongRay"},"content":"        // Given","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"HongRay"},"content":"        Task task1 \u003d new Todo(\"Test Todo 1\");","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"        Task task2 \u003d new Todo(\"Test Todo 2\");","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"HongRay"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"HongRay"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"HongRay"},"content":"        // When","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"HongRay"},"content":"        Task deletedTask \u003d taskList.deleteTask(1);","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"HongRay"},"content":"        // Then","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"HongRay"},"content":"        assertEquals(1, taskList.getTaskCount(), \"Task count should decrease after deleting a task\");","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"HongRay"},"content":"        assertSame(task1, deletedTask, \"The deleted task should be the correct one\");","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"HongRay"},"content":"        assertSame(task2, taskList.getTask(1), \"Remaining task should be correctly positioned in the list\");","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"HongRay"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"HongRay"},"content":"    void deleteTask_withInvalidIndex_throwsException() throws JayneException {","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"HongRay"},"content":"        // Given","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"HongRay"},"content":"        Task task \u003d new Todo(\"Test Todo\");","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"HongRay"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"HongRay"},"content":"        // When \u0026 Then","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"HongRay"},"content":"        assertThrows(JayneException.class, () -\u003e taskList.deleteTask(2), \"Should throw exception for invalid task number\");","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"HongRay"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"HongRay":70}},{"path":"text-ui-test/TEST.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HongRay"},"content":"todo read book","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"HongRay"},"content":"deadline return book /by 2024-01-31","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"event project meeting Aug 6th /from 2 /to 4pm","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":"todo join sport club","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":"mark 1","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"mark 4","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"HongRay":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"HongRay"},"content":"John Doe","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":"todo","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"deadline return book /by 1999-02-02","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"deadline","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"deadline return book","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"HongRay"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"HongRay"},"content":"event","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"HongRay"},"content":"event project meeting","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"HongRay"},"content":"event project meeting /from","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"HongRay"},"content":"event project meeting /from Mon 2pm","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"HongRay"},"content":"event project meeting /to","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"HongRay"},"content":"mark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"HongRay"},"content":"mark","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"HongRay"},"content":"mark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"HongRay"},"content":"mark 10","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"HongRay"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"HongRay"},"content":"unmark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"unmark","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"HongRay"},"content":"unmark 10","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"HongRay"},"content":"delete","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"HongRay"},"content":"delete 10","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"delete 3","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"HongRay"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"/find book","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"HongRay"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"HongRay":31}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"javac  -cp ..\\src\\main\\java\\jayne\\* -Xlint:none -d ..\\bin ..\\src\\main\\java\\jayne\\*.java","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":"java -classpath ..\\bin Jayne \u003c TEST.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"HongRay":3,"-":16}}]
