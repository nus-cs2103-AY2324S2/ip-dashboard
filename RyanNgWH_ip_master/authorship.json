[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package duke;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import duke.ui.Cli;","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"public class Duke {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"        // Initialise stored tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"        Storage.initialiseStorage();","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"        // Print CLI UI","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"        Cli.printUI();","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"RyanNgWH":14}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":" * The DukeException class defines an exception specific to the Duke","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":" * application.","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"\t/**","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"\t * Creates a DukeException","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"\t *","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"\t * @param errorMessage Error message","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"\t */","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"\tpublic DukeException(String errorMessage) {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"\t\tsuper(errorMessage);","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"\t}","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"RyanNgWH":18}},{"path":"src/main/java/duke/exceptions/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":" * The MissingArgumentException class provides an exception for invalid","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":" * arguments in the duke application","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"public class InvalidArgumentException","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"        extends DukeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"     * Creates am InvalidArgumentException","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"     * @param errorMessage Error message","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"    public InvalidArgumentException(String errorMessage) {","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"RyanNgWH":20}},{"path":"src/main/java/duke/exceptions/MissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":" * The MissingArgumentException class provides an exception for missing","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":" * arguments in the duke exception.","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"public class MissingArgumentException extends DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a MissingArgumentException","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"     * @param errorMessage Error message","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"    public MissingArgumentException(String errorMessage) {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"RyanNgWH":18}},{"path":"src/main/java/duke/exceptions/TaskNotSupportedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":" * The TaskNotSupportedException class provides an exception for unspported","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":" * tasks in the Duke application.","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"public class TaskNotSupportedException extends DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a TaskNotSupportedException","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"     * @param errorMessage Error message","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"    public TaskNotSupportedException(String errorMessage) {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"RyanNgWH":18}},{"path":"src/main/java/duke/storage/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package duke.storage;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import java.time.Instant;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import java.time.ZoneId;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":" * The Deadline class defines a \u0027Deadline\u0027 task used for the application","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"     * Due date/time of the deadline task","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"    private Instant dueDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"     * Create a Deadline task","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"     * @param description Description of the deadline","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"     * @param dueDate     Due date of the deadline","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"    public Deadline(String description, Instant dueDate) {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"        super(description, TaskType.DEADLINE, false);","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"     * Create a Deadline task","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"     * @param description Description of the deadline","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"     * @param dueDate     Due date of the deadline","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"     * @param isDone      Status of the deadline","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"    public Deadline(String description, Instant dueDate, boolean isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"        super(description, TaskType.DEADLINE, isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"     * Create a Deadline task","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"     * @param description Description of the deadline","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"     * @param dueDate     Due date of the deadline (in epoch Milliseconds)","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"     * @param isDone      Status of the deadline","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"    public Deadline(String description, long dueDate, boolean isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"        super(description, TaskType.DEADLINE, isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"        this.dueDate \u003d Instant.ofEpochMilli(dueDate);","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"     * Get the due date of the deadline (in epoch milliseconds)","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"     * @return Due date of the deadline","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"    public long getDueDate() {","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"        return this.dueDate.toEpochMilli();","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"     * Check if deadline is on the specified date","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"     * @param date Date to check against","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if deadline is on the specified date, false otherwise","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"    public boolean isOn(Instant date) {","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"        LocalDate dueDateLocal \u003d this.dueDate.atZone(ZoneId.systemDefault()).toLocalDate();","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"        LocalDate dateLocal \u003d date.atZone(ZoneId.systemDefault()).toLocalDate();","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"        return dueDateLocal.equals(dateLocal);","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"     * String representation of a Deadline","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"     * @return String representation of the Deadline","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy hh:mma\")","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"                .withZone(ZoneId.systemDefault());","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), formatter.format(dueDate));","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"RyanNgWH":88}},{"path":"src/main/java/duke/storage/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package duke.storage;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import java.time.Instant;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import java.time.ZoneId;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":" * The Event class defines a \u0027Event\u0027 task used for the application","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"     * Start date/time of the Event task","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"    private Instant startDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"     * End date/time of the Event task","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"    private Instant endDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"     * Create an Event task","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"     * @param description Description of the event","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"     * @param startDate   Start date of the event","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"     * @param endDate     End date of the event","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"    public Event(String description, Instant startDate, Instant endDate) {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"        super(description, TaskType.EVENT, false);","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"     * Create an Event task","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"     * @param description Description of the event","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"     * @param startDate   Start date of the event","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"     * @param endDate     End date of the event","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"     * @param isDone      Status of the event","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"    public Event(String description, Instant startDate, Instant endDate, boolean isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"        super(description, TaskType.EVENT, isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"     * Create an Event task","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"     * @param description Description of the event","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"     * @param startDate   Start date of the event (in epoch milliseconds)","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"     * @param endDate     End date of the event (in epoch milliseconds)","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"     * @param isDone      Status of the event","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"    public Event(String description, long startDate, long endDate, boolean isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"        super(description, TaskType.EVENT, isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"        this.startDate \u003d Instant.ofEpochMilli(startDate);","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"        this.endDate \u003d Instant.ofEpochMilli(endDate);","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"     * Get the start date of the event","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"     * @return Start date of the event","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"    public long getStartDate() {","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"        return this.startDate.toEpochMilli();","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"     * Get the end date of the event","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"     * @return End date of the event","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"    public long getEndDate() {","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"        return this.endDate.toEpochMilli();","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"     * Check if event encompasses the specified date","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"     * @param date Date to check against","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if event is encompasses specified date, false otherwise","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"    public boolean encompasses(Instant date) {","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"        LocalDate startDateLocal \u003d this.startDate.atZone(ZoneId.systemDefault()).toLocalDate();","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"        LocalDate endDateLocal \u003d this.endDate.atZone(ZoneId.systemDefault()).toLocalDate();","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"        LocalDate dateLocal \u003d date.atZone(ZoneId.systemDefault()).toLocalDate();","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"        return (dateLocal.isAfter(startDateLocal) \u0026\u0026 dateLocal.isBefore(endDateLocal))","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"                || dateLocal.equals(startDateLocal)","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"                || dateLocal.equals(endDateLocal);","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"     * String representation of an event","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"RyanNgWH"},"content":"     * @return String representation of the event","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":104,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":105,"author":{"gitId":"RyanNgWH"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":106,"author":{"gitId":"RyanNgWH"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy hh:mma\")","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"RyanNgWH"},"content":"                .withZone(ZoneId.systemDefault());","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"RyanNgWH"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), formatter.format(startDate),","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"RyanNgWH"},"content":"                formatter.format(endDate));","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":112,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"RyanNgWH":112}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package duke.storage;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"import java.time.Instant;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"import java.time.OffsetDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"import org.json.JSONArray;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"import org.json.JSONException;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"import org.json.JSONObject;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"import org.json.JSONTokener;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"import duke.exceptions.InvalidArgumentException;","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"import duke.exceptions.MissingArgumentException;","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"import duke.exceptions.TaskNotSupportedException;","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"import duke.storage.Task.TaskType;","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":" * The UI CLI class handles storing of elements required for","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":" * the application","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"public class Storage {","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"     * File to save storage to","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"    private static final File saveFile \u003d new File(\"data/tasks.json\");","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"     * Array used to store objects for the application","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"    private static ArrayList\u003cTask\u003e storageArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"     * Method to store items for the application","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"     * @param item      Type of item to be stored","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"     * @param arguments Arguments of the item type","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"    public static void storeItem(String item, String[] arguments)","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"            throws MissingArgumentException,","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"            TaskNotSupportedException,","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"            IOException,","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"            InvalidArgumentException {","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"        // Create task to be inserted","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"        Task task;","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"        String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"        switch (item.toLowerCase()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"            if (arguments.length \u003c\u003d 0) {","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"                throw new MissingArgumentException(\"Argument missing - Description of a todo cannot be empty\");","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"            description \u003d String.join(\" \", arguments);","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"            break;","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"            // Get index of \u0027/by\u0027 argument","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"            int byIndex \u003d -1;","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"            for (int i \u003d 0; i \u003c arguments.length; i++) {","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"                if (arguments[i].equals(\"/by\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"                    byIndex \u003d i;","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"                    break;","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"            if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"                throw new MissingArgumentException(\"Argument \u0027/by\u0027 missing\");","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"            // Extract task description \u0026 due date","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"            description \u003d String.join(\" \", Arrays.copyOfRange(arguments, 0, byIndex));","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"                String date \u003d arguments[byIndex + 1];","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"                String time \u003d arguments[byIndex + 2];","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"                // Create new task","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"                task \u003d new Deadline(description, userDateToInstant(date, time));","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"            } catch (NumberFormatException | ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"                throw new InvalidArgumentException(","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"                        \"Date/time format is invalid. Please enter the date/time in the format \u0027YYYY/MM/DD hh:mm\u0027\");","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"            break;","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"        case \"event\":","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"            // Get index of \u0027/from\u0027 and \u0027/to\u0027 argument","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"            int fromIndex \u003d -1;","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"            int toIndex \u003d -1;","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"            for (int i \u003d 0; i \u003c arguments.length; i++) {","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"                if (fromIndex !\u003d -1 \u0026\u0026 toIndex !\u003d -1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"RyanNgWH"},"content":"                    break;","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"RyanNgWH"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":104,"author":{"gitId":"RyanNgWH"},"content":"                if (fromIndex \u003d\u003d -1 \u0026\u0026 arguments[i].equals(\"/from\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":105,"author":{"gitId":"RyanNgWH"},"content":"                    fromIndex \u003d i;","lastModifiedDate":"2024-01-25"},{"lineNumber":106,"author":{"gitId":"RyanNgWH"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":107,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":108,"author":{"gitId":"RyanNgWH"},"content":"                if (toIndex \u003d\u003d -1 \u0026\u0026 arguments[i].equals(\"/to\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":109,"author":{"gitId":"RyanNgWH"},"content":"                    toIndex \u003d i;","lastModifiedDate":"2024-01-25"},{"lineNumber":110,"author":{"gitId":"RyanNgWH"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":111,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":112,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":113,"author":{"gitId":"RyanNgWH"},"content":"            if (fromIndex \u003d\u003d -1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":114,"author":{"gitId":"RyanNgWH"},"content":"                throw new MissingArgumentException(\"Argument \u0027/from\u0027 missing\");","lastModifiedDate":"2024-01-25"},{"lineNumber":115,"author":{"gitId":"RyanNgWH"},"content":"            } else if (toIndex \u003d\u003d -1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":116,"author":{"gitId":"RyanNgWH"},"content":"                throw new MissingArgumentException(\"Argument \u0027/to\u0027 missing\");","lastModifiedDate":"2024-01-25"},{"lineNumber":117,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":118,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":119,"author":{"gitId":"RyanNgWH"},"content":"            // Extract task description","lastModifiedDate":"2024-01-28"},{"lineNumber":120,"author":{"gitId":"RyanNgWH"},"content":"            description \u003d String.join(\" \", Arrays.copyOfRange(arguments, 0, fromIndex));","lastModifiedDate":"2024-01-25"},{"lineNumber":121,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":122,"author":{"gitId":"RyanNgWH"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"RyanNgWH"},"content":"                // Extract start date","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"RyanNgWH"},"content":"                String fromDate \u003d arguments[fromIndex + 1];","lastModifiedDate":"2024-01-28"},{"lineNumber":125,"author":{"gitId":"RyanNgWH"},"content":"                String fromTime \u003d arguments[fromIndex + 2];","lastModifiedDate":"2024-01-28"},{"lineNumber":126,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":127,"author":{"gitId":"RyanNgWH"},"content":"                // Extract end date","lastModifiedDate":"2024-01-28"},{"lineNumber":128,"author":{"gitId":"RyanNgWH"},"content":"                String toDate \u003d arguments[toIndex + 1];","lastModifiedDate":"2024-01-28"},{"lineNumber":129,"author":{"gitId":"RyanNgWH"},"content":"                String toTime \u003d arguments[toIndex + 2];","lastModifiedDate":"2024-01-28"},{"lineNumber":130,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":131,"author":{"gitId":"RyanNgWH"},"content":"                // Create new task","lastModifiedDate":"2024-01-28"},{"lineNumber":132,"author":{"gitId":"RyanNgWH"},"content":"                task \u003d new Event(description, userDateToInstant(fromDate, fromTime), userDateToInstant(toDate, toTime));","lastModifiedDate":"2024-01-28"},{"lineNumber":133,"author":{"gitId":"RyanNgWH"},"content":"            } catch (NumberFormatException | ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":134,"author":{"gitId":"RyanNgWH"},"content":"                throw new InvalidArgumentException(","lastModifiedDate":"2024-01-28"},{"lineNumber":135,"author":{"gitId":"RyanNgWH"},"content":"                        \"Date/time format is invalid. Please enter the date/time in the format \u0027YYYY/MM/DD HH:MM\u0027\");","lastModifiedDate":"2024-01-28"},{"lineNumber":136,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":137,"author":{"gitId":"RyanNgWH"},"content":"            break;","lastModifiedDate":"2024-01-25"},{"lineNumber":138,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":139,"author":{"gitId":"RyanNgWH"},"content":"        default:","lastModifiedDate":"2024-01-25"},{"lineNumber":140,"author":{"gitId":"RyanNgWH"},"content":"            throw new TaskNotSupportedException(","lastModifiedDate":"2024-01-25"},{"lineNumber":141,"author":{"gitId":"RyanNgWH"},"content":"                    String.format(\"Task \u0027%s\u0027 is not yet supported. Please try again with another task.\", item));","lastModifiedDate":"2024-01-25"},{"lineNumber":142,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":143,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":144,"author":{"gitId":"RyanNgWH"},"content":"        // Add item to storage","lastModifiedDate":"2024-01-24"},{"lineNumber":145,"author":{"gitId":"RyanNgWH"},"content":"        storageArray.add(task);","lastModifiedDate":"2024-01-25"},{"lineNumber":146,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":147,"author":{"gitId":"RyanNgWH"},"content":"        // Save to file","lastModifiedDate":"2024-01-28"},{"lineNumber":148,"author":{"gitId":"RyanNgWH"},"content":"        saveStorageToFile(saveFile);","lastModifiedDate":"2024-01-28"},{"lineNumber":149,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":150,"author":{"gitId":"RyanNgWH"},"content":"        // Print confirmation message","lastModifiedDate":"2024-01-25"},{"lineNumber":151,"author":{"gitId":"RyanNgWH"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":152,"author":{"gitId":"RyanNgWH"},"content":"        System.out.println(String.format(\"  %s\", task.toString()));","lastModifiedDate":"2024-01-25"},{"lineNumber":153,"author":{"gitId":"RyanNgWH"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list.\", storageArray.size()));","lastModifiedDate":"2024-01-25"},{"lineNumber":154,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":155,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":156,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":157,"author":{"gitId":"RyanNgWH"},"content":"     * Method to print all items in storage to standard output","lastModifiedDate":"2024-01-24"},{"lineNumber":158,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":159,"author":{"gitId":"RyanNgWH"},"content":"     * @param arguments Arguments of list type","lastModifiedDate":"2024-01-28"},{"lineNumber":160,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":161,"author":{"gitId":"RyanNgWH"},"content":"    public static void listItems(String[] arguments) throws InvalidArgumentException, InvalidArgumentException {","lastModifiedDate":"2024-01-28"},{"lineNumber":162,"author":{"gitId":"RyanNgWH"},"content":"        // Check list type","lastModifiedDate":"2024-01-28"},{"lineNumber":163,"author":{"gitId":"RyanNgWH"},"content":"        if (arguments.length \u003e 0) {","lastModifiedDate":"2024-01-28"},{"lineNumber":164,"author":{"gitId":"RyanNgWH"},"content":"            switch (arguments[0]) {","lastModifiedDate":"2024-01-28"},{"lineNumber":165,"author":{"gitId":"RyanNgWH"},"content":"            case \"/date\":","lastModifiedDate":"2024-01-28"},{"lineNumber":166,"author":{"gitId":"RyanNgWH"},"content":"                try {","lastModifiedDate":"2024-01-28"},{"lineNumber":167,"author":{"gitId":"RyanNgWH"},"content":"                    // Get date of argument","lastModifiedDate":"2024-01-28"},{"lineNumber":168,"author":{"gitId":"RyanNgWH"},"content":"                    Instant date \u003d userDateToInstant(arguments[1], \"00:00\");","lastModifiedDate":"2024-01-28"},{"lineNumber":169,"author":{"gitId":"RyanNgWH"},"content":"                    int printIndex \u003d 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":170,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":171,"author":{"gitId":"RyanNgWH"},"content":"                    for (int i \u003d 0; i \u003c storageArray.size(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":172,"author":{"gitId":"RyanNgWH"},"content":"                        Task task \u003d storageArray.get(i);","lastModifiedDate":"2024-01-28"},{"lineNumber":173,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":174,"author":{"gitId":"RyanNgWH"},"content":"                        if ((task instanceof Deadline \u0026\u0026 ((Deadline) task).isOn(date))","lastModifiedDate":"2024-01-28"},{"lineNumber":175,"author":{"gitId":"RyanNgWH"},"content":"                                || (task instanceof Event \u0026\u0026 ((Event) task).encompasses(date))) {","lastModifiedDate":"2024-01-28"},{"lineNumber":176,"author":{"gitId":"RyanNgWH"},"content":"                            System.out.println(String.format(\"%d.%s\", printIndex, storageArray.get(i).toString()));","lastModifiedDate":"2024-01-28"},{"lineNumber":177,"author":{"gitId":"RyanNgWH"},"content":"                            printIndex++;","lastModifiedDate":"2024-01-28"},{"lineNumber":178,"author":{"gitId":"RyanNgWH"},"content":"                        }","lastModifiedDate":"2024-01-28"},{"lineNumber":179,"author":{"gitId":"RyanNgWH"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":180,"author":{"gitId":"RyanNgWH"},"content":"                } catch (NumberFormatException | ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":181,"author":{"gitId":"RyanNgWH"},"content":"                    throw new InvalidArgumentException(","lastModifiedDate":"2024-01-28"},{"lineNumber":182,"author":{"gitId":"RyanNgWH"},"content":"                            \"Date/time format is invalid. Please enter the date/time in the format \u0027YYYY/MM/DD\u0027\");","lastModifiedDate":"2024-01-28"},{"lineNumber":183,"author":{"gitId":"RyanNgWH"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":184,"author":{"gitId":"RyanNgWH"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":185,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":186,"author":{"gitId":"RyanNgWH"},"content":"            default:","lastModifiedDate":"2024-01-28"},{"lineNumber":187,"author":{"gitId":"RyanNgWH"},"content":"                throw new InvalidArgumentException(","lastModifiedDate":"2024-01-28"},{"lineNumber":188,"author":{"gitId":"RyanNgWH"},"content":"                        String.format(\"Argument \u0027%s\u0027 not currently supported for the \u0027list\u0027 command\", arguments[0]));","lastModifiedDate":"2024-01-28"},{"lineNumber":189,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":190,"author":{"gitId":"RyanNgWH"},"content":"        } else { // Print all tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":191,"author":{"gitId":"RyanNgWH"},"content":"            for (int i \u003d 0; i \u003c storageArray.size(); i++) {","lastModifiedDate":"2024-01-25"},{"lineNumber":192,"author":{"gitId":"RyanNgWH"},"content":"                System.out.println(String.format(\"%d.%s\", i + 1, storageArray.get(i).toString()));","lastModifiedDate":"2024-01-25"},{"lineNumber":193,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":194,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":195,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":196,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":197,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":198,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":199,"author":{"gitId":"RyanNgWH"},"content":"     * Method to mark an item in storage","lastModifiedDate":"2024-01-24"},{"lineNumber":200,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":201,"author":{"gitId":"RyanNgWH"},"content":"     * @param markIndex Index of the item to mark","lastModifiedDate":"2024-01-24"},{"lineNumber":202,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":203,"author":{"gitId":"RyanNgWH"},"content":"    public static void markItem(int markIndex) throws IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":204,"author":{"gitId":"RyanNgWH"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":205,"author":{"gitId":"RyanNgWH"},"content":"            // Mark Item","lastModifiedDate":"2024-01-28"},{"lineNumber":206,"author":{"gitId":"RyanNgWH"},"content":"            storageArray.get(markIndex).mark();","lastModifiedDate":"2024-01-25"},{"lineNumber":207,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":208,"author":{"gitId":"RyanNgWH"},"content":"            // Save to file","lastModifiedDate":"2024-01-28"},{"lineNumber":209,"author":{"gitId":"RyanNgWH"},"content":"            saveStorageToFile(saveFile);","lastModifiedDate":"2024-01-28"},{"lineNumber":210,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":211,"author":{"gitId":"RyanNgWH"},"content":"            // Print message","lastModifiedDate":"2024-01-28"},{"lineNumber":212,"author":{"gitId":"RyanNgWH"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":213,"author":{"gitId":"RyanNgWH"},"content":"            System.out.println(String.format(\"  %s\", storageArray.get(markIndex).toString()));","lastModifiedDate":"2024-01-25"},{"lineNumber":214,"author":{"gitId":"RyanNgWH"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":215,"author":{"gitId":"RyanNgWH"},"content":"            System.out.println(\"ERROR: Item cannot be marked - Item does not exist\");","lastModifiedDate":"2024-01-25"},{"lineNumber":216,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":217,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":218,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":219,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":220,"author":{"gitId":"RyanNgWH"},"content":"     * Method to unmark an item in storage","lastModifiedDate":"2024-01-24"},{"lineNumber":221,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":222,"author":{"gitId":"RyanNgWH"},"content":"     * @param unmarkIndex Index of the item to mark","lastModifiedDate":"2024-01-24"},{"lineNumber":223,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":224,"author":{"gitId":"RyanNgWH"},"content":"    public static void unmarkItem(int unmarkIndex) throws IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":225,"author":{"gitId":"RyanNgWH"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":226,"author":{"gitId":"RyanNgWH"},"content":"            // Unmark item","lastModifiedDate":"2024-01-28"},{"lineNumber":227,"author":{"gitId":"RyanNgWH"},"content":"            storageArray.get(unmarkIndex).unmark();","lastModifiedDate":"2024-01-25"},{"lineNumber":228,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":229,"author":{"gitId":"RyanNgWH"},"content":"            // Save to file","lastModifiedDate":"2024-01-28"},{"lineNumber":230,"author":{"gitId":"RyanNgWH"},"content":"            saveStorageToFile(saveFile);","lastModifiedDate":"2024-01-28"},{"lineNumber":231,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":232,"author":{"gitId":"RyanNgWH"},"content":"            // Print message","lastModifiedDate":"2024-01-28"},{"lineNumber":233,"author":{"gitId":"RyanNgWH"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":234,"author":{"gitId":"RyanNgWH"},"content":"            System.out.println(String.format(\"  %s\", storageArray.get(unmarkIndex).toString()));","lastModifiedDate":"2024-01-25"},{"lineNumber":235,"author":{"gitId":"RyanNgWH"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":236,"author":{"gitId":"RyanNgWH"},"content":"            System.out.println(\"ERROR: Item cannot be unmarked - Item does not exist\");","lastModifiedDate":"2024-01-25"},{"lineNumber":237,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":238,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":239,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":240,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":241,"author":{"gitId":"RyanNgWH"},"content":"     * Deletes an item from storage","lastModifiedDate":"2024-01-28"},{"lineNumber":242,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":243,"author":{"gitId":"RyanNgWH"},"content":"     * @param unmarkIndex Index of the item to mark","lastModifiedDate":"2024-01-28"},{"lineNumber":244,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":245,"author":{"gitId":"RyanNgWH"},"content":"    public static void deleteItem(int deleteIndex) throws IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":246,"author":{"gitId":"RyanNgWH"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":247,"author":{"gitId":"RyanNgWH"},"content":"            // Delete item","lastModifiedDate":"2024-01-28"},{"lineNumber":248,"author":{"gitId":"RyanNgWH"},"content":"            Task deletedItem \u003d storageArray.remove(deleteIndex);","lastModifiedDate":"2024-01-25"},{"lineNumber":249,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":250,"author":{"gitId":"RyanNgWH"},"content":"            // Save to file","lastModifiedDate":"2024-01-28"},{"lineNumber":251,"author":{"gitId":"RyanNgWH"},"content":"            saveStorageToFile(saveFile);","lastModifiedDate":"2024-01-28"},{"lineNumber":252,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":253,"author":{"gitId":"RyanNgWH"},"content":"            // Print message","lastModifiedDate":"2024-01-28"},{"lineNumber":254,"author":{"gitId":"RyanNgWH"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":255,"author":{"gitId":"RyanNgWH"},"content":"            System.out.println(String.format(\"  %s\", deletedItem.toString()));","lastModifiedDate":"2024-01-25"},{"lineNumber":256,"author":{"gitId":"RyanNgWH"},"content":"            System.out.println(String.format(\"Now you have %d tasks in the list.\", storageArray.size()));","lastModifiedDate":"2024-01-25"},{"lineNumber":257,"author":{"gitId":"RyanNgWH"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":258,"author":{"gitId":"RyanNgWH"},"content":"            System.out.println(\"ERROR: Item cannot be deleted - Item does not exist\");","lastModifiedDate":"2024-01-25"},{"lineNumber":259,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":260,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":261,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":262,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":263,"author":{"gitId":"RyanNgWH"},"content":"     * Writes storage array to file in JSON format","lastModifiedDate":"2024-01-28"},{"lineNumber":264,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":265,"author":{"gitId":"RyanNgWH"},"content":"     * @param file Path of the file to write to","lastModifiedDate":"2024-01-28"},{"lineNumber":266,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":267,"author":{"gitId":"RyanNgWH"},"content":"    private static void saveStorageToFile(File file) throws IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":268,"author":{"gitId":"RyanNgWH"},"content":"        // Create JSON array to be written to file","lastModifiedDate":"2024-01-28"},{"lineNumber":269,"author":{"gitId":"RyanNgWH"},"content":"        JSONArray jsonStorage \u003d new JSONArray(storageArray);","lastModifiedDate":"2024-01-28"},{"lineNumber":270,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":271,"author":{"gitId":"RyanNgWH"},"content":"        // Create file (if required)","lastModifiedDate":"2024-01-28"},{"lineNumber":272,"author":{"gitId":"RyanNgWH"},"content":"        file.createNewFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":273,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":274,"author":{"gitId":"RyanNgWH"},"content":"        // Check if file is writable","lastModifiedDate":"2024-01-28"},{"lineNumber":275,"author":{"gitId":"RyanNgWH"},"content":"        if (!file.canWrite()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":276,"author":{"gitId":"RyanNgWH"},"content":"            throw new IOException(String.format(\"File \u0027%s\u0027 cannot be written to\", file.getAbsolutePath().toString()));","lastModifiedDate":"2024-01-28"},{"lineNumber":277,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":278,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":279,"author":{"gitId":"RyanNgWH"},"content":"        // Write to file","lastModifiedDate":"2024-01-28"},{"lineNumber":280,"author":{"gitId":"RyanNgWH"},"content":"        FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2024-01-28"},{"lineNumber":281,"author":{"gitId":"RyanNgWH"},"content":"        jsonStorage.write(writer, 2, 0);","lastModifiedDate":"2024-01-28"},{"lineNumber":282,"author":{"gitId":"RyanNgWH"},"content":"        writer.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":283,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":284,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":285,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":286,"author":{"gitId":"RyanNgWH"},"content":"     * Populate storage array from file in JSON format","lastModifiedDate":"2024-01-28"},{"lineNumber":287,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":288,"author":{"gitId":"RyanNgWH"},"content":"     * @param file File to load values from","lastModifiedDate":"2024-01-28"},{"lineNumber":289,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":290,"author":{"gitId":"RyanNgWH"},"content":"    private static void loadStorageFromFile(File file) throws TaskNotSupportedException, FileNotFoundException {","lastModifiedDate":"2024-01-28"},{"lineNumber":291,"author":{"gitId":"RyanNgWH"},"content":"        // Check if file is readable","lastModifiedDate":"2024-01-28"},{"lineNumber":292,"author":{"gitId":"RyanNgWH"},"content":"        if (!file.canRead()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":293,"author":{"gitId":"RyanNgWH"},"content":"            throw new FileNotFoundException(\"File cannot be read\");","lastModifiedDate":"2024-01-28"},{"lineNumber":294,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":295,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":296,"author":{"gitId":"RyanNgWH"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":297,"author":{"gitId":"RyanNgWH"},"content":"            // Read stored tasks from file","lastModifiedDate":"2024-01-28"},{"lineNumber":298,"author":{"gitId":"RyanNgWH"},"content":"            FileInputStream input \u003d new FileInputStream(file);","lastModifiedDate":"2024-01-28"},{"lineNumber":299,"author":{"gitId":"RyanNgWH"},"content":"            JSONArray jsonStorage \u003d new JSONArray(new JSONTokener(input));","lastModifiedDate":"2024-01-28"},{"lineNumber":300,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":301,"author":{"gitId":"RyanNgWH"},"content":"            // Populate storage array","lastModifiedDate":"2024-01-28"},{"lineNumber":302,"author":{"gitId":"RyanNgWH"},"content":"            for (int i \u003d 0; i \u003c jsonStorage.length(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":303,"author":{"gitId":"RyanNgWH"},"content":"                // Get json entry","lastModifiedDate":"2024-01-28"},{"lineNumber":304,"author":{"gitId":"RyanNgWH"},"content":"                JSONObject entry \u003d jsonStorage.getJSONObject(i);","lastModifiedDate":"2024-01-28"},{"lineNumber":305,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":306,"author":{"gitId":"RyanNgWH"},"content":"                // Parse JSON entry to task","lastModifiedDate":"2024-01-28"},{"lineNumber":307,"author":{"gitId":"RyanNgWH"},"content":"                Task task;","lastModifiedDate":"2024-01-28"},{"lineNumber":308,"author":{"gitId":"RyanNgWH"},"content":"                switch (TaskType.valueOf(entry.getString(\"type\"))) {","lastModifiedDate":"2024-01-28"},{"lineNumber":309,"author":{"gitId":"RyanNgWH"},"content":"                case TODO:","lastModifiedDate":"2024-01-28"},{"lineNumber":310,"author":{"gitId":"RyanNgWH"},"content":"                    task \u003d new Todo(entry.getString(\"description\"), entry.getBoolean(\"isDone\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":311,"author":{"gitId":"RyanNgWH"},"content":"                    break;","lastModifiedDate":"2024-01-28"},{"lineNumber":312,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":313,"author":{"gitId":"RyanNgWH"},"content":"                case DEADLINE:","lastModifiedDate":"2024-01-28"},{"lineNumber":314,"author":{"gitId":"RyanNgWH"},"content":"                    task \u003d new Deadline(entry.getString(\"description\"),","lastModifiedDate":"2024-01-28"},{"lineNumber":315,"author":{"gitId":"RyanNgWH"},"content":"                            entry.getLong(\"dueDate\"),","lastModifiedDate":"2024-01-28"},{"lineNumber":316,"author":{"gitId":"RyanNgWH"},"content":"                            entry.getBoolean(\"isDone\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":317,"author":{"gitId":"RyanNgWH"},"content":"                    break;","lastModifiedDate":"2024-01-28"},{"lineNumber":318,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":319,"author":{"gitId":"RyanNgWH"},"content":"                case EVENT:","lastModifiedDate":"2024-01-28"},{"lineNumber":320,"author":{"gitId":"RyanNgWH"},"content":"                    task \u003d new Event(entry.getString(\"description\"),","lastModifiedDate":"2024-01-28"},{"lineNumber":321,"author":{"gitId":"RyanNgWH"},"content":"                            entry.getLong(\"startDate\"),","lastModifiedDate":"2024-01-28"},{"lineNumber":322,"author":{"gitId":"RyanNgWH"},"content":"                            entry.getLong(\"endDate\"),","lastModifiedDate":"2024-01-28"},{"lineNumber":323,"author":{"gitId":"RyanNgWH"},"content":"                            entry.getBoolean(\"isDone\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":324,"author":{"gitId":"RyanNgWH"},"content":"                    break;","lastModifiedDate":"2024-01-28"},{"lineNumber":325,"author":{"gitId":"RyanNgWH"},"content":"                default:","lastModifiedDate":"2024-01-28"},{"lineNumber":326,"author":{"gitId":"RyanNgWH"},"content":"                    throw new TaskNotSupportedException(","lastModifiedDate":"2024-01-28"},{"lineNumber":327,"author":{"gitId":"RyanNgWH"},"content":"                            String.format(\"Task \u0027%s\u0027 not currently supported\", entry.getString(\"type\")));","lastModifiedDate":"2024-01-28"},{"lineNumber":328,"author":{"gitId":"RyanNgWH"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":329,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":330,"author":{"gitId":"RyanNgWH"},"content":"                // Add task to storage array","lastModifiedDate":"2024-01-28"},{"lineNumber":331,"author":{"gitId":"RyanNgWH"},"content":"                storageArray.add(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":332,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":333,"author":{"gitId":"RyanNgWH"},"content":"        } catch (IllegalArgumentException | JSONException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":334,"author":{"gitId":"RyanNgWH"},"content":"            System.out.println(\"WARNING: Task corrupted, will not be loaded\");","lastModifiedDate":"2024-01-28"},{"lineNumber":335,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":336,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":337,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":338,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":339,"author":{"gitId":"RyanNgWH"},"content":"     * Initialise storage for application","lastModifiedDate":"2024-01-28"},{"lineNumber":340,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":341,"author":{"gitId":"RyanNgWH"},"content":"    public static void initialiseStorage() {","lastModifiedDate":"2024-01-28"},{"lineNumber":342,"author":{"gitId":"RyanNgWH"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":343,"author":{"gitId":"RyanNgWH"},"content":"            // Create data directory (if required)","lastModifiedDate":"2024-01-28"},{"lineNumber":344,"author":{"gitId":"RyanNgWH"},"content":"            saveFile.getParentFile().mkdirs();","lastModifiedDate":"2024-01-28"},{"lineNumber":345,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":346,"author":{"gitId":"RyanNgWH"},"content":"            // Load contents of file","lastModifiedDate":"2024-01-28"},{"lineNumber":347,"author":{"gitId":"RyanNgWH"},"content":"            loadStorageFromFile(saveFile);","lastModifiedDate":"2024-01-28"},{"lineNumber":348,"author":{"gitId":"RyanNgWH"},"content":"        } catch (TaskNotSupportedException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":349,"author":{"gitId":"RyanNgWH"},"content":"            System.out.println(String.format(\"WARNING: %s, some stored tasks will not be loaded\", e.getMessage()));","lastModifiedDate":"2024-01-28"},{"lineNumber":350,"author":{"gitId":"RyanNgWH"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":351,"author":{"gitId":"RyanNgWH"},"content":"            System.out.println(\"WARNING: File not found, stored tasks will not be loaded\");","lastModifiedDate":"2024-01-28"},{"lineNumber":352,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":353,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":354,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":355,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":356,"author":{"gitId":"RyanNgWH"},"content":"     * Converts user input date (in format \u0027YYYY/MM/DD hh:mm\u0027)","lastModifiedDate":"2024-01-28"},{"lineNumber":357,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":358,"author":{"gitId":"RyanNgWH"},"content":"     * @param date Date to be converted (in format \u0027YYYY/MM/DD\u0027)","lastModifiedDate":"2024-01-28"},{"lineNumber":359,"author":{"gitId":"RyanNgWH"},"content":"     * @param time Time to be converted (in format \u0027hh:mm\u0027)","lastModifiedDate":"2024-01-28"},{"lineNumber":360,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":361,"author":{"gitId":"RyanNgWH"},"content":"     * @return Instant of the specified datetime","lastModifiedDate":"2024-01-28"},{"lineNumber":362,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":363,"author":{"gitId":"RyanNgWH"},"content":"    private static Instant userDateToInstant(String date, String time) throws NumberFormatException {","lastModifiedDate":"2024-01-28"},{"lineNumber":364,"author":{"gitId":"RyanNgWH"},"content":"        return LocalDateTime.of(","lastModifiedDate":"2024-01-28"},{"lineNumber":365,"author":{"gitId":"RyanNgWH"},"content":"                Integer.parseInt(date.substring(0, 4)),","lastModifiedDate":"2024-01-28"},{"lineNumber":366,"author":{"gitId":"RyanNgWH"},"content":"                Integer.parseInt(date.substring(5, 7)),","lastModifiedDate":"2024-01-28"},{"lineNumber":367,"author":{"gitId":"RyanNgWH"},"content":"                Integer.parseInt(date.substring(8, 10)),","lastModifiedDate":"2024-01-28"},{"lineNumber":368,"author":{"gitId":"RyanNgWH"},"content":"                Integer.parseInt(time.substring(0, 2)),","lastModifiedDate":"2024-01-28"},{"lineNumber":369,"author":{"gitId":"RyanNgWH"},"content":"                Integer.parseInt(time.substring(3, 5)))","lastModifiedDate":"2024-01-28"},{"lineNumber":370,"author":{"gitId":"RyanNgWH"},"content":"                .toInstant(OffsetDateTime.now().getOffset());","lastModifiedDate":"2024-01-28"},{"lineNumber":371,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":372,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"RyanNgWH":372}},{"path":"src/main/java/duke/storage/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package duke.storage;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":" * The Task class defined a task used for the application","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"     * Type of task supported by the application","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"    public enum TaskType {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"        TODO,","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"        DEADLINE,","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"        EVENT","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"     * Type of task","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"    private final TaskType type;","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"     * Description of the task","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"    private String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"     * Status of the task (Done/not done)","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"     * Constructor for creating a task","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"     * @param description Description of the task","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"     * @param type        Type of task","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"     * @param isDone      Status of the task","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"    protected Task(String description, TaskType type, boolean isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"     * Get the type of the task","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"     * @return Type of the task","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"    public TaskType getType() {","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"        return this.type;","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"     * Get the description of the task","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"     * @return Description of the task","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"        return this.description;","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"     * Get the status of the task","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"     * @return Status of the task","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"        return this.isDone;","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"     * Method to mark the task as done","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"    public void mark() {","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"     * Method to unmark the task as not done","lastModifiedDate":"2024-01-24"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-24"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"     * String representation of a Task","lastModifiedDate":"2024-01-24"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"     * @return String representation of the Task","lastModifiedDate":"2024-01-24"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"        return String.format(\"[%s] %s\", isDone ? \"X\" : \" \", description);","lastModifiedDate":"2024-01-24"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"RyanNgWH":96}},{"path":"src/main/java/duke/storage/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package duke.storage;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":" * The Todo class defines a \u0027ToDo\u0027 task used for the application","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"     * Create a Todo task","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"     * @param description Description of the todo task","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"        super(description, TaskType.TODO, false);","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"     * Create a Todo task","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"     * @param description Description of the todo task","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"     * @param isDone      Status of the task","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"        super(description, TaskType.TODO, isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"     * String representation of a Todo","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"     * @return String representation of the Todo","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"RyanNgWH":37}},{"path":"src/main/java/duke/ui/Cli.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package duke.ui;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import duke.exceptions.MissingArgumentException;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" * The UI CLI class handles the displaying of UI elements in","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":" * the application","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"public class Cli {","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"     * Method to print the CLI UI","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"    public static void printUI() {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"        // UI Greeting","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"        String greeting \u003d \"------------------------------------------------------------\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"                \"Hello! I\u0027m Ciara\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"                \"What can I do for you?\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"                \"------------------------------------------------------------\";","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"        // UI Goodbye message","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"        String goodbye \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"        // Display greeting","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"        System.out.println(greeting);","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"        // Scanner for getting user input","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"        String input;","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"        // Store and echo user input","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"        do {","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"            String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"            System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"            try {","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"                switch (splitInput[0].toLowerCase()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"                case \"bye\": // Exit","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"                    // Print exit message","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"                    System.out.println(goodbye);","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"                case \"list\": // List items","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"                    Storage.listItems(Arrays.copyOfRange(splitInput, 1, splitInput.length));","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"                case \"mark\": // Mark item","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"                    if (splitInput.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"                        throw new MissingArgumentException(\"Missing argument - Index of task required\");","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"                    Storage.markItem(Integer.parseInt(splitInput[1]) - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"                case \"unmark\": // Unmark item","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"                    if (splitInput.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"                        throw new MissingArgumentException(\"Missing argument - Index of task required\");","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"                    Storage.unmarkItem(Integer.parseInt(splitInput[1]) - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"                case \"delete\": // Delete item","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"                    if (splitInput.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"                        throw new MissingArgumentException(\"Missing argument - Index of task required\");","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"                    Storage.deleteItem(Integer.parseInt(splitInput[1]) - 1);","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"                    break;","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"                default: // Store and echo items","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"                    // Store item","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"                    Storage.storeItem(splitInput[0], Arrays.copyOfRange(splitInput, 1, splitInput.length));","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"            } catch (Exception exception) {","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"                System.out.println(String.format(\"ERROR: %s\", exception.getMessage()));","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"            System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"        } while (!input.equals(\"bye\"));","lastModifiedDate":"2024-01-24"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"        sc.close();","lastModifiedDate":"2024-01-24"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"RyanNgWH":92}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"todo read book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"todo join sports club","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"mark 4","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"delete 5","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"RyanNgWH":15}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"if ! find ../src/main/java/duke/ -type f -name \"*.java\" -exec javac -cp ../src/main/java/duke/ -d ../bin \u0027{}\u0027 +","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"RyanNgWH":2,"-":36}}]
